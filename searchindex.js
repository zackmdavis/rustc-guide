window.search = {"resultsoptions":{"limit_results":30,"teaser_word_count":30},"searchoptions":{"bool":"OR","expand":true,"fields":{"body":{"boost":1},"breadcrumbs":{"boost":1},"title":{"boost":2}}},"index":{"fields":["title","body","breadcrumbs"],"pipeline":["trimmer","stopWordFilter","stemmer"],"ref":"id","version":"0.9.5","index":{"body":{"root":{"docs":{},"df":0,"t":{"docs":{"traits/lowering-rules.html#associated-type-values":{"tf":1.4142135623730952},"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.0},"traits/associated-types.html#associated-type-projection-and-normalization":{"tf":2.23606797749979},"traits/canonicalization.html#canonicalization":{"tf":2.8284271247461905},"high-level-overview.html#the-main-stages-of-compilation":{"tf":1.0},"mir/index.html#key-mir-vocabulary":{"tf":1.4142135623730952},"traits/associated-types.html#integration-with-unification":{"tf":1.4142135623730952},"traits/chalk-overview.html#lowering":{"tf":1.7320508075688773},"traits/hrtb.html#basic-matching-and-skolemization-leaks":{"tf":1.0},"traits/caching.html#an-example":{"tf":1.4142135623730952},"param_env.html#parameter-environment":{"tf":1.7320508075688773},"traits/canonical-queries.html#examples":{"tf":4.58257569495584},"traits/resolution.html#major-concepts":{"tf":2.0},"method-lookup.html#candidate-assembly":{"tf":1.7320508075688773},"variance.html#trait-variance-and-vtable-resolution":{"tf":1.4142135623730952},"type-inference.html#enforcing-equality--subtyping":{"tf":1.0},"compiler-debugging.html#formatting-graphviz-output-dot-files":{"tf":1.0},"traits/goals-and-clauses.html#domain-goals":{"tf":1.7320508075688773},"traits/lowering-module.html#unit-tests":{"tf":1.4142135623730952},"method-lookup.html#steps":{"tf":1.4142135623730952},"name-resolution.html#scopes-and-ribs":{"tf":1.7320508075688773},"traits/canonicalization.html#canonicalizing-the-query":{"tf":1.0},"traits/lowering-rules.html#lowering-where-clauses":{"tf":1.7320508075688773},"traits/resolution.html#candidate-assembly":{"tf":1.7320508075688773},"traits/lowering-rules.html#trait-header":{"tf":2.8284271247461905},"traits/canonical-queries.html#the-traditional-interactive-prolog-query":{"tf":1.4142135623730952},"rustdoc.html#from-crate-to-clean":{"tf":1.0},"mir/regionck.html#what-is-a-universe":{"tf":2.0},"appendix/glossary.html#appendix-c-glossary":{"tf":2.6457513110645909},"variance.html#constraints":{"tf":1.7320508075688773},"type-inference.html#inference-variables":{"tf":1.4142135623730952},"method-lookup.html#method-lookup":{"tf":1.4142135623730952},"variance.html#variance-and-associated-types":{"tf":2.449489742783178},"traits/lowering-to-logic.html#rust-traits-and-logic":{"tf":2.0},"traits/canonical-queries.html#a-trait-query-in-rustc":{"tf":1.7320508075688773},"traits/resolution.html#overview":{"tf":1.0},"traits/associated-types.html#skolemized-associated-types":{"tf":1.0},"traits/lowering-to-logic.html#type-checking-generic-functions-beyond-horn-clauses":{"tf":2.23606797749979},"type-inference.html#a-note-on-terminology":{"tf":1.4142135623730952},"type-inference.html#subtyping-obligations":{"tf":2.8284271247461905}},"df":40,"=":{"docs":{},"df":0,"i":{"docs":{},"df":0,"s":{"docs":{},"df":0,"i":{"docs":{},"df":0,"z":{"docs":{"traits/resolution.html#selection-during-translation":{"tf":1.0}},"df":1}}}},"=":{"docs":{},"df":0,"u":{"docs":{"variance.html#variance-and-associated-types":{"tf":1.0}},"df":1}}},"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{},"df":0,"b":{"docs":{},"df":0,"l":{"docs":{"hir.html#identifiers-in-the-hir":{"tf":1.0}},"df":1}}}},"m":{"docs":{"appendix/background.html#what-is-a-control-flow-graph":{"tf":1.0},"variance.html#the-algorithm":{"tf":2.449489742783178},"conventions.html#copyright-notice":{"tf":1.0},"appendix/glossary.html#appendix-c-glossary":{"tf":2.8284271247461905},"traits/lowering-to-logic.html#rust-traits-and-logic":{"tf":1.0},"traits/hrtb.html#basic-matching-and-skolemization-leaks":{"tf":1.0},"compiletest.html#adding-a-new-header-command":{"tf":1.0},"tests/adding.html#header-commands-configuring-rustc":{"tf":1.0},"appendix/background.html#what-is-a-free-region-or-a-free-variable-what-about-bound-region":{"tf":1.0},"traits/index.html#trait-solving-new-style":{"tf":1.4142135623730952},"appendix/background.html#appendix-b-background-topics":{"tf":1.0},"mir/index.html#key-mir-vocabulary":{"tf":1.0},"type-inference.html#a-note-on-terminology":{"tf":1.4142135623730952},"traits/resolution.html#selection-during-translation":{"tf":1.0},"traits/goals-and-clauses.html#goals-and-clauses":{"tf":1.0},"traits/chalk-overview.html#an-overview-of-chalk":{"tf":1.0},"appendix/stupid-stats.html#what-next":{"tf":1.0},"traits/resolution.html#major-concepts":{"tf":1.0},"mir/regionck.html#mir-based-region-checking-nll":{"tf":1.0},"traits/canonicalization.html#canonicalization":{"tf":1.0}},"df":20,"i":{"docs":{},"df":0,"n":{"docs":{"mir/regionck.html#representing-the-values-of-a-region-variable":{"tf":1.0},"macro-expansion.html#the-macro-parser":{"tf":1.4142135623730952},"mir/index.html#mir-data-types":{"tf":1.4142135623730952},"type-inference.html#region-constraints":{"tf":1.0},"mir/index.html#key-mir-vocabulary":{"tf":2.23606797749979},"mir/visitor.html#mir-visitor":{"tf":1.0},"traits/goals-and-clauses.html#coinductive-goals":{"tf":1.0},"appendix/background.html#what-is-a-control-flow-graph":{"tf":1.4142135623730952}},"df":8,"o":{"docs":{},"df":0,"l":{"docs":{},"df":0,"o":{"docs":{},"df":0,"g":{"docs":{"type-inference.html#a-note-on-terminology":{"tf":1.0}},"df":1}}}}}}}},"s":{"docs":{},"df":0,"t":{"docs":{"incrcomp-debugging.html#debugging-and-testing-dependencies":{"tf":1.0},"tests/running.html#running-an-individual-test":{"tf":3.605551275463989},"tests/adding.html#header-commands-configuring-rustc":{"tf":2.449489742783178},"compiletest.html#adding-a-new-test-file":{"tf":2.449489742783178},"tests/adding.html#normalization":{"tf":2.23606797749979},"rustdoc.html#cheat-sheet":{"tf":2.23606797749979},"conventions.html#prefer-exhaustive-matches":{"tf":1.0},"tests/adding.html#what-kind-of-test-should-i-add":{"tf":3.1622776601683797},"name-resolution.html#todo":{"tf":1.7320508075688773},"tests/running.html#running-tests":{"tf":3.1622776601683797},"tests/running.html#running-a-subset-of-the-test-suites":{"tf":3.3166247903554},"compiletest.html#introduction":{"tf":4.358898943540674},"appendix/stupid-stats.html#what-next":{"tf":1.0},"compiletest.html#header-commands":{"tf":1.4142135623730952},"how-to-build-and-run.html#other-xpy-commands":{"tf":2.6457513110645909},"incrcomp-debugging.html#testing-the-dependency-graph":{"tf":2.449489742783178},"tests/adding.html#ignoring-tests":{"tf":3.1622776601683797},"compiletest.html#adding-a-new-header-command":{"tf":3.0},"how-to-build-and-run.html#running-xpy-and-building-a-stage1-compiler":{"tf":1.0},"conventions.html#line-length":{"tf":1.0},"tests/intro.html#testing-infrastructure":{"tf":2.449489742783178},"tests/intro.html#further-reading":{"tf":1.0},"tests/intro.html#other-tests":{"tf":4.58257569495584},"traits/lowering-module.html#the--program_clauses_for--query":{"tf":1.4142135623730952},"appendix/stupid-stats.html#overview-of-the-compilation-process":{"tf":1.0},"incrcomp-debugging.html#tracking-down-incorrect-edges":{"tf":1.0},"ty.html#allocating-and-working-with-types":{"tf":1.0},"tests/adding.html#editing-and-updating-the-reference-files":{"tf":2.8284271247461905},"tests/adding.html#tests-that-do-not-result-in-compile-errors":{"tf":1.7320508075688773},"mir/regionck.html#back-to-our-example":{"tf":1.0},"tests/intro.html#compiletest-test-suites":{"tf":4.69041575982343},"tests/adding.html#naming-your-test":{"tf":3.1622776601683797},"type-inference.html#trying-equality":{"tf":1.0},"rustdoc.html#dotting-is-and-crossing-ts":{"tf":2.23606797749979},"rustdoc.html#from-clean-to-crate":{"tf":1.0},"traits/chalk-overview.html#testing":{"tf":1.0},"tests/intro.html#testing-with-docker-images":{"tf":1.7320508075688773},"how-to-build-and-run.html#creating-a-rustup-toolchain":{"tf":1.0},"tests/adding.html#guide-to-the-ui-tests":{"tf":2.449489742783178},"traits/lowering-module.html#unit-tests":{"tf":2.449489742783178},"tests/intro.html#testing-on-emulators":{"tf":3.872983346207417},"tests/adding.html#comment-explaining-what-the-test-is-about":{"tf":3.605551275463989},"compiletest.html#implementing-the-behavior-change":{"tf":2.23606797749979},"tests/adding.html#adding-new-tests":{"tf":3.1622776601683797},"conventions.html#formatting-and-the-tidy-script":{"tf":1.4142135623730952},"rustdoc.html#other-tricks-up-its-sleeve":{"tf":1.4142135623730952},"tests/adding.html#revisions":{"tf":3.0},"traits/chalk-overview.html#parsing":{"tf":1.0},"tests/adding.html#other-header-commands":{"tf":3.7416573867739415},"tests/intro.html#the-compiler-testing-framework":{"tf":2.8284271247461905}},"df":50,"c":{"docs":{},"df":0,"x":{"docs":{"compiletest.html#implementing-the-behavior-change":{"tf":1.0}},"df":1,"<":{"docs":{},"df":0,"'":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{"compiletest.html#implementing-the-behavior-change":{"tf":1.7320508075688773}},"df":1}}}}}}}},"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"g":{"docs":{},"df":0,"/":{"docs":{},"df":0,"d":{"docs":{},"df":0,"e":{"docs":{},"df":0,"b":{"docs":{},"df":0,"u":{"docs":{},"df":0,"g":{"docs":{"tests/intro.html#testing-with-docker-images":{"tf":1.0}},"df":1}}}}}}}}},"'":{"docs":{"compiletest.html#header-commands":{"tf":1.0}},"df":1},"_":{"docs":{},"df":0,"f":{"docs":{},"df":0,"o":{"docs":{},"df":0,"o":{"docs":{"tests/adding.html#revisions":{"tf":1.0}},"df":1}}},"t":{"docs":{},"df":0,"y":{"docs":{},"df":0,"p":{"docs":{},"df":0,"e":{"docs":{},"df":0,"<":{"docs":{},"df":0,"'":{"docs":{},"df":0,"t":{"docs":{},"df":0,"c":{"docs":{},"df":0,"x":{"docs":{},"df":0,">":{"docs":{},"df":0,"(":{"docs":{},"df":0,"t":{"docs":{},"df":0,"i":{"docs":{"ty.html#allocating-and-working-with-types":{"tf":1.0}},"df":1}}}}}}}}}}}}}},"p":{"docs":{},"df":0,"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"p":{"docs":{"compiletest.html#adding-a-new-header-command":{"tf":3.0},"tests/adding.html#other-header-commands":{"tf":1.0},"compiletest.html#implementing-the-behavior-change":{"tf":1.0}},"df":3}}}},".":{"docs":{},"df":0,"r":{"docs":{"rustdoc.html#cheat-sheet":{"tf":1.0},"rustdoc.html#other-tricks-up-its-sleeve":{"tf":1.4142135623730952}},"df":2}}}},"x":{"docs":{},"df":0,"t":{"docs":{"rustdoc.html#hot-potato":{"tf":1.4142135623730952},"mir/borrowck.html#major-phases-of-the-borrow-checker":{"tf":1.0},"variance.html#addendum-variance-on-traits":{"tf":1.0},"compiler-debugging.html#getting-logging-output":{"tf":1.4142135623730952},"traits/bibliography.html#bibliography":{"tf":1.0},"rustdoc.html#from-clean-to-crate":{"tf":1.0},"compiletest.html#adding-a-new-header-command":{"tf":1.0},"diag.html#suggestions":{"tf":1.0},"appendix/glossary.html#appendix-c-glossary":{"tf":1.0},"the-parser.html#the-parser":{"tf":1.0}},"df":10}},"l":{"docs":{},"df":0,"l":{"docs":{"tests/adding.html#normalization":{"tf":1.0},"traits/canonical-queries.html#a-trait-query-in-rustc":{"tf":1.4142135623730952},"traits/caching.html#an-example":{"tf":1.0},"mir/index.html#key-mir-vocabulary":{"tf":1.0},"traits/canonical-queries.html#the-traditional-interactive-prolog-query":{"tf":1.0},"type-inference.html#enforcing-equality--subtyping":{"tf":1.0},"mir/regionck.html#universes-and-skolemized-region-elements":{"tf":1.0}},"df":7}},"c":{"docs":{},"df":0,"h":{"docs":{},"df":0,"n":{"docs":{},"df":0,"i":{"docs":{},"df":0,"c":{"docs":{"appendix/glossary.html#appendix-c-glossary":{"tf":1.4142135623730952},"appendix/stupid-stats.html#overview-of-the-compilation-process":{"tf":1.0}},"df":2},"q":{"docs":{},"df":0,"u":{"docs":{"traits/index.html#trait-solving-new-style":{"tf":1.0}},"df":1}}}}}},"n":{"docs":{},"df":0,"d":{"docs":{"type-inference.html#region-constraints":{"tf":1.0},"high-level-overview.html#crate-structure":{"tf":1.0},"hir.html#identifiers-in-the-hir":{"tf":1.0},"ty.html#the-tcx-and-how-it-uses-lifetimes":{"tf":1.0},"conventions.html#how-to-structure-your-pr":{"tf":1.0},"appendix/glossary.html#appendix-c-glossary":{"tf":1.0},"query.html#how-the-compiler-executes-a-query":{"tf":1.0},"ty.html#import-conventions":{"tf":1.0}},"df":8}},"m":{"docs":{},"df":0,"p":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{"ty.html#allocating-and-working-with-types":{"tf":1.0},"mir/index.html#key-mir-vocabulary":{"tf":2.0},"type-inference.html#creating-an-inference-context":{"tf":1.0}},"df":3}}}}}}}},"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"b":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{"tests/intro.html#other-tests":{"tf":1.0}},"df":1}}},"g":{"docs":{},"df":0,"e":{"docs":{},"df":0,"t":{"docs":{"tests/adding.html#ignoring-tests":{"tf":1.7320508075688773},"tests/adding.html#normalization":{"tf":1.4142135623730952},"rustdoc.html#from-crate-to-clean":{"tf":1.0},"tests/intro.html#compiletest-test-suites":{"tf":1.0},"query.html#how-the-compiler-executes-a-query":{"tf":1.0},"miri.html#interpretation":{"tf":1.0},"traits/resolution.html#confirmation":{"tf":1.7320508075688773},"traits/resolution.html#candidate-assembly":{"tf":1.4142135623730952},"tests/adding.html#editing-and-updating-the-reference-files":{"tf":1.0},"variance.html#constraints":{"tf":1.0}},"df":10,"'":{"docs":{"tests/intro.html#testing-on-emulators":{"tf":1.0}},"df":1},"_":{"docs":{},"df":0,"f":{"docs":{},"df":0,"i":{"docs":{},"df":0,"l":{"docs":{},"df":0,"t":{"docs":{"incrcomp-debugging.html#dumping-the-graph":{"tf":2.23606797749979}},"df":1}}}}},"/":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"u":{"docs":{},"df":0,"p":{"docs":{},"df":0,"i":{"docs":{},"df":0,"d":{"docs":{"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.0}},"df":1}}}}}}}}}}},"s":{"docs":{},"df":0,"k":{"docs":{"tests/running.html#running-a-subset-of-the-test-suites":{"tf":1.0},"mir/borrowck.html#mir-borrow-check":{"tf":1.0}},"df":2}},"k":{"docs":{},"df":0,"e":{"docs":{"mir/regionck.html#extending-the-universal-regions-check":{"tf":1.0},"traits/caching.html#an-example":{"tf":1.0},"param_env.html#parameter-environment":{"tf":1.0},"rustdoc.html#from-clean-to-crate":{"tf":1.4142135623730952},"appendix/stupid-stats.html#appendix-a-a-tutorial-on-creating-a-drop-in-replacement-for-rustc":{"tf":1.0},"type-inference.html#snapshots":{"tf":1.4142135623730952},"mir/borrowck.html#major-phases-of-the-borrow-checker":{"tf":1.0},"mir/regionck.html#subtyping-and-skolemization":{"tf":1.0},"rustdoc.html#from-crate-to-clean":{"tf":1.4142135623730952},"traits/chalk-overview.html#testing":{"tf":1.0},"mir/passes.html#seeing-how-the-mir-changes-as-the-compiler-executes":{"tf":1.0},"tests/intro.html#testing-on-emulators":{"tf":1.4142135623730952},"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.4142135623730952},"traits/specialization.html#specialization":{"tf":1.0},"method-lookup.html#candidate-assembly":{"tf":1.0},"traits/chalk-overview.html#parsing":{"tf":1.0},"traits/resolution.html#selection":{"tf":1.0},"high-level-overview.html#the-main-stages-of-compilation":{"tf":1.0},"variance.html#trait-variance-and-vtable-resolution":{"tf":1.0},"const-eval.html#constant-evaluation":{"tf":1.0},"query.html#how-the-compiler-executes-a-query":{"tf":2.0},"ty.html#the-tcx-and-how-it-uses-lifetimes":{"tf":1.4142135623730952},"tests/running.html#running-tests":{"tf":1.0},"query.html#adding-a-new-kind-of-query":{"tf":1.0},"compiletest.html#adding-a-new-header-command":{"tf":1.4142135623730952},"tests/intro.html#compiletest-test-suites":{"tf":1.0},"variance.html#the-algorithm":{"tf":1.0}},"df":27,"n":{"docs":{"mir/regionck.html#universes-and-skolemized-region-elements":{"tf":1.0},"mir/passes.html#stealing":{"tf":1.0},"variance.html#variance-of-type-and-lifetime-parameters":{"tf":1.0}},"df":3},"_":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{},"df":0,"_":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"t":{"docs":{},"df":0,"_":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"g":{"docs":{},"df":0,"i":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"_":{"docs":{},"df":0,"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{"type-inference.html#extracting-region-constraints":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"g":{"docs":{},"df":0,"i":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"_":{"docs":{},"df":0,"v":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"_":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{},"df":0,"g":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{"type-inference.html#extracting-region-constraints":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}}},"l":{"docs":{},"df":0,"k":{"docs":{"traits/resolution.html#selection-during-translation":{"tf":1.0},"type-checking.html#type-collection":{"tf":1.0},"traits/resolution.html#candidate-assembly":{"tf":1.0},"name-resolution.html#namespaces":{"tf":1.0},"traits/lowering-to-logic.html#type-checking-generic-functions-beyond-horn-clauses":{"tf":1.0},"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.0},"traits/goals-and-clauses.html#domain-goals":{"tf":1.0},"appendix/stupid-stats.html#appendix-a-a-tutorial-on-creating-a-drop-in-replacement-for-rustc":{"tf":1.0}},"df":8}},"m":{"docs":{},"df":0,"e":{"docs":{"variance.html#variance-of-type-and-lifetime-parameters":{"tf":1.0}},"df":1}},"b":{"docs":{"conventions.html#tabs-vs-spaces":{"tf":1.0},"rustdoc.html#dotting-is-and-crossing-ts":{"tf":1.4142135623730952}},"df":2,"l":{"docs":{"traits/bibliography.html#bibliography":{"tf":1.0},"rustdoc.html#other-tricks-up-its-sleeve":{"tf":1.0},"query.html#how-the-compiler-executes-a-query":{"tf":1.0},"appendix/glossary.html#appendix-c-glossary":{"tf":1.4142135623730952},"high-level-overview.html#the-main-stages-of-compilation":{"tf":1.0},"appendix/stupid-stats.html#overview-of-the-compilation-process":{"tf":1.4142135623730952},"type-inference.html#region-constraints":{"tf":1.0},"method-lookup.html#method-lookup":{"tf":1.0},"rustdoc.html#from-clean-to-crate":{"tf":1.0},"const-eval.html#constant-evaluation":{"tf":1.0}},"df":10}},"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{"traits/hrtb.html#higher-ranked-trait-obligations":{"tf":1.7320508075688773},"traits/hrtb.html#basic-matching-and-skolemization-leaks":{"tf":2.23606797749979}},"df":2}}},"g":{"docs":{"tests/adding.html#other-header-commands":{"tf":1.0}},"df":1}},"w":{"docs":{},"df":0,"e":{"docs":{},"df":0,"a":{"docs":{},"df":0,"k":{"docs":{"how-to-build-and-run.html#how-to-build-the-compiler-and-run-what-you-built":{"tf":1.0},"tests/adding.html#revisions":{"tf":1.0}},"df":2}}},"o":{"docs":{"type-inference.html#trying-equality":{"tf":1.7320508075688773},"appendix/stupid-stats.html#the-driver-customisation-apis":{"tf":1.0},"traits/specialization.html#specialization":{"tf":1.0},"traits/associated-types.html#integration-with-unification":{"tf":1.4142135623730952},"mir/borrowck.html#mir-borrow-check":{"tf":1.0},"type-checking.html#type-collection":{"tf":1.0},"type-inference.html#extracting-region-constraints":{"tf":1.0},"rustdoc.html#from-crate-to-clean":{"tf":1.0},"traits/associated-types.html#projection-equality":{"tf":2.0},"traits/caching.html#where-clauses-and-the-local-vs-global-cache":{"tf":1.0},"traits/canonicalization.html#canonicalizing-the-query":{"tf":1.0},"method-lookup.html#candidate-assembly":{"tf":1.4142135623730952},"variance.html#variance-and-object-types":{"tf":1.0},"hir.html#identifiers-in-the-hir":{"tf":1.4142135623730952},"mir/visitor.html#mir-visitor":{"tf":1.0},"const-eval.html#constant-evaluation":{"tf":1.0},"traits/canonical-queries.html#examples":{"tf":1.4142135623730952},"mir/regionck.html#extending-the-universal-regions-check":{"tf":1.0},"macro-expansion.html#the-macro-parser":{"tf":1.4142135623730952},"variance.html#dependency-graph-management":{"tf":1.0},"miri.html#datastructures":{"tf":1.4142135623730952},"traits/canonicalization.html#canonicalization":{"tf":1.4142135623730952},"query.html#cycles-between-queries":{"tf":1.0},"traits/hrtb.html#basic-matching-and-skolemization-leaks":{"tf":1.4142135623730952},"traits/resolution.html#selection":{"tf":1.0},"traits/lowering-rules.html#associated-type-declarations":{"tf":1.4142135623730952},"rustdoc.html#the-walking-tour-of-rustdoc":{"tf":1.0},"query.html#adding-a-new-kind-of-query":{"tf":1.0},"method-lookup.html#method-lookup":{"tf":1.0},"mir/regionck.html#skolemization-and-outlives-constraints":{"tf":1.0},"high-level-overview.html#the-main-stages-of-compilation":{"tf":1.0},"traits/resolution.html#candidate-assembly":{"tf":1.4142135623730952},"incremental-compilation.html#the-basic-algorithm":{"tf":1.0},"traits/lowering-rules.html#trait-header":{"tf":1.0},"type-inference.html#region-constraints":{"tf":1.0},"mir/regionck.html#mir-based-region-checking-nll":{"tf":1.4142135623730952},"mir/regionck.html#what-is-a-universe":{"tf":1.0},"traits/goals-and-clauses.html#goals-and-clauses-meta-structure":{"tf":1.0},"traits/chalk-overview.html#well-formedness-checks":{"tf":1.0},"appendix/glossary.html#appendix-c-glossary":{"tf":1.4142135623730952},"mir/index.html#key-mir-vocabulary":{"tf":1.4142135623730952},"type-inference.html#subtyping-obligations":{"tf":1.4142135623730952},"mir/regionck.html#subtyping-and-skolemization":{"tf":1.0},"traits/canonical-queries.html#a-trait-query-in-rustc":{"tf":1.0},"type-inference.html#enforcing-equality--subtyping":{"tf":1.0},"mir/regionck.html#final-example":{"tf":1.0},"traits/resolution.html#overview":{"tf":1.0},"query.html#how-the-compiler-executes-a-query":{"tf":1.4142135623730952},"mir/regionck.html#back-to-our-example":{"tf":1.0},"diag.html#error-messages":{"tf":1.0},"mir/regionck.html#another-example":{"tf":1.7320508075688773},"macro-expansion.html#macro-expansion":{"tf":1.0},"the-parser.html#the-parser":{"tf":1.0},"appendix/stupid-stats.html#overview-of-the-compilation-process":{"tf":1.0},"ty.html#the-tcx-and-how-it-uses-lifetimes":{"tf":1.0}},"df":55},"i":{"docs":{},"df":0,"c":{"docs":{},"df":0,"e":{"docs":{"macro-expansion.html#example":{"tf":1.0},"query.html#how-the-compiler-executes-a-query":{"tf":1.0},"ty.html#allocating-and-working-with-types":{"tf":1.0},"mir/passes.html#stealing":{"tf":1.0},"mir/borrowck.html#mir-borrow-check":{"tf":1.0},"macro-expansion.html#the-macro-parser":{"tf":1.4142135623730952}},"df":6}},"s":{"docs":{},"df":0,"t":{"docs":{"traits/resolution.html#selection-during-translation":{"tf":1.0}},"df":1}}}},"r":{"docs":{},"df":0,"i":{"docs":{"appendix/glossary.html#appendix-c-glossary":{"tf":1.4142135623730952},"diag.html#suggestions":{"tf":2.449489742783178},"type-inference.html#snapshots":{"tf":1.0},"method-lookup.html#candidate-search":{"tf":1.0},"appendix/stupid-stats.html#what-next":{"tf":1.0},"traits/canonical-queries.html#examples":{"tf":1.0},"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.4142135623730952},"traits/associated-types.html#integration-with-unification":{"tf":1.4142135623730952},"rustc-driver.html#a-note-on-lifetimes":{"tf":1.0},"appendix/background.html#appendix-b-background-topics":{"tf":1.0},"macro-expansion.html#the-macro-parser":{"tf":1.0},"query.html#how-the-compiler-executes-a-query":{"tf":1.4142135623730952},"mir/index.html#key-mir-vocabulary":{"tf":1.4142135623730952},"mir/regionck.html#another-example":{"tf":1.0},"traits/lowering-to-logic.html#type-checking-normal-functions":{"tf":1.0},"rustdoc.html#hot-potato":{"tf":1.0},"compiler-debugging.html#debugging-llvm":{"tf":1.0},"query.html#cycles-between-queries":{"tf":1.0},"incremental-compilation.html#the-try-mark-green-algorithm":{"tf":2.0},"traits/goals-and-clauses.html#coinductive-goals":{"tf":1.0},"tests/running.html#running-an-individual-test":{"tf":1.0},"compiletest.html#adding-a-new-header-command":{"tf":1.0},"traits/lowering-to-logic.html#rust-traits-and-logic":{"tf":1.0},"type-checking.html#type-collection":{"tf":1.0},"appendix/stupid-stats.html#appendix-a-a-tutorial-on-creating-a-drop-in-replacement-for-rustc":{"tf":1.0},"traits/resolution.html#candidate-assembly":{"tf":1.0},"traits/caching.html#where-clauses-and-the-local-vs-global-cache":{"tf":1.0},"diag.html#error-messages":{"tf":1.0},"traits/lowering-rules.html#trait-header":{"tf":1.0},"high-level-overview.html#crate-structure":{"tf":1.0},"const-eval.html#constant-evaluation":{"tf":1.0},"compiler-debugging.html#expensive-operations-in-logs":{"tf":1.0},"traits/canonicalization.html#processing-the-canonicalized-query-result":{"tf":1.0},"rustc-driver.html#the-rustc-driver":{"tf":1.0},"type-inference.html#subtyping-obligations":{"tf":1.0},"traits/canonical-queries.html#a-trait-query-in-rustc":{"tf":1.7320508075688773},"traits/canonicalization.html#executing-the-query":{"tf":1.4142135623730952},"incremental-compilation.html#the-query-dag":{"tf":1.4142135623730952},"type-inference.html#trying-equality":{"tf":1.0}},"df":39,"v":{"docs":{},"df":0,"i":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{"traits/resolution.html#candidate-assembly":{"tf":1.0},"query.html#adding-a-new-kind-of-query":{"tf":1.0},"appendix/stupid-stats.html#appendix-a-a-tutorial-on-creating-a-drop-in-replacement-for-rustc":{"tf":1.0},"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.0},"traits/goals-and-clauses.html#goals-and-clauses-meta-structure":{"tf":1.0}},"df":5}}}},"g":{"docs":{},"df":0,"g":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"compiler-debugging.html#getting-logging-output":{"tf":1.4142135623730952},"const-eval.html#constant-evaluation":{"tf":1.0},"miri.html#miri":{"tf":1.4142135623730952}},"df":3}}}},"c":{"docs":{},"df":0,"k":{"docs":{"rustdoc.html#other-tricks-up-its-sleeve":{"tf":1.0}},"df":1,"i":{"docs":{"name-resolution.html#overall-strategy":{"tf":1.0}},"df":1}}},"p":{"docs":{},"df":0,"l":{"docs":{"tests/adding.html#ignoring-tests":{"tf":1.0}},"df":1,"e":{"docs":{},"df":0,">":{"docs":{},"df":0,"/":{"docs":{},"df":0,"l":{"docs":{},"df":0,"l":{"docs":{},"df":0,"v":{"docs":{},"df":0,"m":{"docs":{},"df":0,"/":{"docs":{},"df":0,"b":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{"compiler-debugging.html#debugging-llvm":{"tf":1.4142135623730952}},"df":1}}}}}}}},"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"/":{"docs":{},"df":0,"u":{"docs":{},"df":0,"i":{"docs":{},"df":0,"/":{"docs":{},"df":0,"h":{"docs":{},"df":0,"e":{"docs":{},"df":0,"l":{"docs":{},"df":0,"l":{"docs":{},"df":0,"o":{"docs":{},"df":0,"_":{"docs":{},"df":0,"w":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"l":{"docs":{},"df":0,"d":{"docs":{},"df":0,"/":{"docs":{},"df":0,"m":{"docs":{},"df":0,"a":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,".":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"d":{"docs":{},"df":0,"o":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{"tests/adding.html#guide-to-the-ui-tests":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"a":{"docs":{},"df":0,"g":{"docs":{},"df":0,"e":{"docs":{},"df":0,"1":{"docs":{"how-to-build-and-run.html#creating-a-rustup-toolchain":{"tf":1.0}},"df":1},"2":{"docs":{"how-to-build-and-run.html#creating-a-rustup-toolchain":{"tf":1.0}},"df":1}}}}}}}}}}}},"y":{"docs":{},"df":0,"_":{"docs":{},"df":0,"g":{"docs":{},"df":0,"e":{"docs":{},"df":0,"t":{"docs":{"query.html#cycles-between-queries":{"tf":1.4142135623730952}},"df":1}}}}},"o":{"docs":{},"df":0,"u":{"docs":{},"df":0,"b":{"docs":{},"df":0,"l":{"docs":{"compiler-debugging.html#getting-a-backtrace":{"tf":1.0}},"df":1}}}},"a":{"docs":{},"df":0,"n":{"docs":{"traits/specialization.html#specialization":{"tf":1.0},"appendix/glossary.html#appendix-c-glossary":{"tf":1.4142135623730952},"how-to-build-and-run.html#create-a-configtoml":{"tf":1.0},"traits/resolution.html#major-concepts":{"tf":1.0},"traits/resolution.html#selection-during-translation":{"tf":1.7320508075688773}},"df":5,"s":{"docs":{},"df":0,"c":{"docs":{},"df":0,"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.0}},"df":1}}}},"_":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{"compiler-debugging.html#getting-logging-output":{"tf":1.0}},"df":1}}}}},"f":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"m":{"docs":{"mir/passes.html#implementing-and-registering-a-pass":{"tf":1.0},"method-lookup.html#candidate-assembly":{"tf":1.0},"rustdoc.html#hot-potato":{"tf":1.0},"traits/chalk-overview.html#parsing":{"tf":1.0},"variance.html#the-algorithm":{"tf":1.0},"traits/lowering-rules.html#transforming-the-lowered-where-clauses":{"tf":1.4142135623730952},"mir/passes.html#mir-passes":{"tf":1.7320508075688773},"compiletest.html#adding-a-new-header-command":{"tf":1.0},"high-level-overview.html#the-main-stages-of-compilation":{"tf":1.0},"traits/associated-types.html#projection-equality":{"tf":1.0},"appendix/glossary.html#appendix-c-glossary":{"tf":1.0},"rustdoc.html#from-crate-to-clean":{"tf":1.0},"rustdoc.html#other-tricks-up-its-sleeve":{"tf":1.0}},"df":13}}}},"p":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{"name-resolution.html#scopes-and-ribs":{"tf":1.0}},"df":1}}},"a":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{"traits/resolution.html#candidate-assembly":{"tf":1.0}},"df":1}}},"l":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{"high-level-overview.html#the-main-stages-of-compilation":{"tf":1.0},"traits/resolution.html#selection-during-translation":{"tf":1.0},"appendix/stupid-stats.html#compilercontroller":{"tf":1.4142135623730952},"miri.html#interpretation":{"tf":1.0},"appendix/stupid-stats.html#overview-of-the-compilation-process":{"tf":1.7320508075688773},"appendix/background.html#what-is-a-control-flow-graph":{"tf":1.0},"appendix/glossary.html#appendix-c-glossary":{"tf":1.0},"rustc-driver.html#the-rustc-driver":{"tf":1.4142135623730952},"compiler-debugging.html#getting-logging-output":{"tf":1.0},"mir/index.html#key-mir-vocabulary":{"tf":1.0}},"df":10}}},"i":{"docs":{},"df":0,"t":{"docs":{"diag.html#suggestions":{"tf":1.0},"high-level-overview.html#crate-structure":{"tf":1.0},"mir/borrowck.html#mir-borrow-check":{"tf":1.0},"high-level-overview.html#the-main-stages-of-compilation":{"tf":1.0},"query.html#queries-demand-driven-compilation":{"tf":1.0},"diag.html#edition-gated-lints":{"tf":1.0},"traits/lowering-rules.html#trait-header":{"tf":1.4142135623730952},"name-resolution.html#scopes-and-ribs":{"tf":1.0}},"df":8}}}},"v":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"s":{"docs":{"name-resolution.html#scopes-and-ribs":{"tf":1.0},"mir/visitor.html#mir-visitor":{"tf":1.0},"name-resolution.html#overall-strategy":{"tf":1.0},"mir/visitor.html#traversal":{"tf":1.0}},"df":4}}},"i":{"docs":{"tests/intro.html#testing-infrastructure":{"tf":1.4142135623730952},"tests/running.html#running-tests":{"tf":1.0},"tests/intro.html#testing-with-docker-images":{"tf":1.0},"tests/intro.html#testing-on-emulators":{"tf":1.0}},"df":4}},"c":{"docs":{},"df":0,"k":{"docs":{"mir/regionck.html#what-is-a-universe":{"tf":1.0},"appendix/glossary.html#appendix-c-glossary":{"tf":1.4142135623730952},"traits/index.html#trait-solving-new-style":{"tf":1.0},"incremental-compilation.html#the-query-dag":{"tf":1.7320508075688773},"incrcomp-debugging.html#tracking-down-incorrect-edges":{"tf":1.4142135623730952},"macro-expansion.html#the-macro-parser":{"tf":1.4142135623730952},"traits/resolution.html#overview":{"tf":1.0},"mir/regionck.html#causal-tracking":{"tf":1.4142135623730952},"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.0}},"df":9,"e":{"docs":{},"df":0,"r":{"docs":{"mir/regionck.html#another-example":{"tf":1.0}},"df":1}}},"e":{"docs":{"compiler-debugging.html#getting-a-backtrace":{"tf":1.4142135623730952}},"df":1}},"w":{"docs":{},"df":0,"l":{"docs":{"hir.html#out-of-band-storage-and-the--crate--type":{"tf":1.0}},"df":1}},"i":{"docs":{},"df":0,"t":{"docs":{"traits/lowering-to-logic.html#type-checking-normal-functions":{"tf":1.4142135623730952},"traits/lowering-rules.html#lowering-impls":{"tf":1.4142135623730952},"appendix/stupid-stats.html#compilercalls":{"tf":1.0},"traits/specialization.html#specialization":{"tf":1.0},"variance.html#variance-and-associated-types":{"tf":3.605551275463989},"traits/lowering-rules.html#lowering-trait-items":{"tf":1.0},"rustdoc.html#cheat-sheet":{"tf":1.0},"query.html#how-the-compiler-executes-a-query":{"tf":1.0},"variance.html#variance-and-object-types":{"tf":1.4142135623730952},"method-lookup.html#method-lookup":{"tf":1.4142135623730952},"traits/associated-types.html#skolemized-associated-types":{"tf":1.0},"traits/associated-types.html#equality-and-associated-types":{"tf":1.0},"high-level-overview.html#crate-structure":{"tf":1.0},"compiler-debugging.html#getting-logging-output":{"tf":1.0},"traits/chalk-overview.html#parsing":{"tf":1.0},"hir.html#out-of-band-storage-and-the--crate--type":{"tf":1.4142135623730952},"rustc-driver.html#the-rustc-driver":{"tf":1.4142135623730952},"variance.html#trait-variance-and-vtable-resolution":{"tf":1.7320508075688773},"traits/resolution.html#selection-during-translation":{"tf":2.0},"traits/caching.html#caching-and-subtle-considerations-therewith":{"tf":1.7320508075688773},"mir/visitor.html#mir-visitor":{"tf":1.4142135623730952},"traits/lowering-to-logic.html#rust-traits-and-logic":{"tf":2.8284271247461905},"traits/canonicalization.html#canonicalization":{"tf":1.4142135623730952},"param_env.html#parameter-environment":{"tf":1.0},"type-checking.html#type-collection":{"tf":1.0},"traits/resolution.html#trait-resolution-old-style":{"tf":2.23606797749979},"traits/chalk-overview.html#lowering":{"tf":2.449489742783178},"traits/canonicalization.html#canonicalizing-the-query":{"tf":1.4142135623730952},"ty.html#beyond-types-other-kinds-of-arena-allocated-data-structures":{"tf":2.23606797749979},"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.4142135623730952},"traits/lowering-rules.html#lowering-traits":{"tf":2.449489742783178},"traits/canonical-queries.html#examples":{"tf":2.6457513110645909},"type-checking.html#type-checking":{"tf":1.0},"method-lookup.html#candidate-assembly":{"tf":3.1622776601683797},"rustc-driver.html#a-note-on-lifetimes":{"tf":1.4142135623730952},"appendix/glossary.html#appendix-c-glossary":{"tf":2.8284271247461905},"traits/resolution.html#overview":{"tf":1.4142135623730952},"rustdoc.html#from-crate-to-clean":{"tf":1.7320508075688773},"traits/lowering-rules.html#associated-type-declarations":{"tf":1.7320508075688773},"traits/canonicalization.html#canonicalizing-the-query-result":{"tf":1.0},"traits/associated-types.html#associated-type-projection-and-normalization":{"tf":1.7320508075688773},"traits/lowering-rules.html#associated-type-values":{"tf":1.7320508075688773},"traits/hrtb.html#higher-ranked-trait-bounds":{"tf":2.0},"traits/chalk-overview.html#rules":{"tf":1.0},"traits/hrtb.html#basic-matching-and-skolemization-leaks":{"tf":2.0},"type-inference.html#enforcing-equality--subtyping":{"tf":1.4142135623730952},"traits/hrtb.html#higher-ranked-trait-obligations":{"tf":2.23606797749979},"traits/lowering-module.html#the--program_clauses_for--query":{"tf":1.0},"traits/chalk-overview.html#blog-posts":{"tf":1.0},"name-resolution.html#name-resolution":{"tf":1.0},"query.html#adding-a-new-kind-of-query":{"tf":2.23606797749979},"variance.html#variance-of-type-and-lifetime-parameters":{"tf":1.4142135623730952},"traits/associated-types.html#projection-equality":{"tf":1.0},"compiler-debugging.html#getting-a-backtrace-for-errors":{"tf":2.0},"traits/lowering-rules.html#lowering-rules":{"tf":1.0},"traits/lowering-module.html#unit-tests":{"tf":1.0},"rustdoc.html#from-soup-to-nuts":{"tf":1.7320508075688773},"traits/goals-and-clauses.html#domain-goals":{"tf":2.449489742783178},"traits/resolution.html#major-concepts":{"tf":3.0},"traits/caching.html#where-clauses-and-the-local-vs-global-cache":{"tf":1.0},"appendix/stupid-stats.html#overview-of-the-compilation-process":{"tf":1.0},"traits/resolution.html#candidate-assembly":{"tf":3.1622776601683797},"diag.html#declaring-a-lint":{"tf":1.4142135623730952},"traits/lowering-to-logic.html#lowering-to-logic":{"tf":1.0},"traits/chalk-overview.html#well-formedness-checks":{"tf":1.0},"mir/passes.html#implementing-and-registering-a-pass":{"tf":1.4142135623730952},"variance.html#addendum-variance-on-traits":{"tf":2.8284271247461905},"traits/caching.html#an-example":{"tf":1.0},"traits/wf.html#well-formedness-checking":{"tf":1.0},"traits/index.html#trait-solving-new-style":{"tf":3.0},"traits/canonical-queries.html#a-trait-query-in-rustc":{"tf":2.0},"traits/goals-and-clauses.html#goals-and-clauses":{"tf":1.0},"traits/associated-types.html#integration-with-unification":{"tf":1.0},"traits/canonical-queries.html#canonical-queries":{"tf":1.4142135623730952},"traits/chalk-overview.html#resources":{"tf":1.0},"traits/chalk-overview.html#an-overview-of-chalk":{"tf":1.4142135623730952},"traits/goals-and-clauses.html#coinductive-goals":{"tf":3.0},"traits/lowering-rules.html#trait-header":{"tf":4.123105625617661},"traits/resolution.html#confirmation":{"tf":1.4142135623730952},"traits/canonicalization.html#executing-the-query":{"tf":1.0}},"df":80,"s":{"docs":{},"df":0,"/":{"docs":{},"df":0,"i":{"docs":{},"df":0,"m":{"docs":{},"df":0,"p":{"docs":{},"df":0,"l":{"docs":{"traits/chalk-overview.html#lowering":{"tf":1.0}},"df":1}}}}}},"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"f":{"docs":{"traits/goals-and-clauses.html#domain-goals":{"tf":1.7320508075688773},"traits/hrtb.html#basic-matching-and-skolemization-leaks":{"tf":1.4142135623730952},"traits/lowering-rules.html#trait-header":{"tf":1.4142135623730952},"ty.html#beyond-types-other-kinds-of-arena-allocated-data-structures":{"tf":1.0},"traits/lowering-rules.html#lowering-impls":{"tf":1.0}},"df":5}}},"d":{"docs":{},"df":0,"e":{"docs":{},"df":0,"f":{"docs":{"appendix/code-index.html#appendix-d-code-index":{"tf":1.0}},"df":1}}},"<":{"docs":{},"df":0,"b":{"docs":{"variance.html#variance-and-object-types":{"tf":1.0}},"df":1},"p":{"docs":{},"df":0,"1":{"docs":{},"df":0,".":{"docs":{},"df":0,".":{"docs":{},"df":0,"p":{"docs":{},"df":0,"n":{"docs":{"traits/lowering-rules.html#lowering-traits":{"tf":1.0},"traits/lowering-rules.html#trait-header":{"tf":2.23606797749979},"traits/lowering-rules.html#associated-type-values":{"tf":1.0},"traits/lowering-rules.html#associated-type-declarations":{"tf":2.0}},"df":4,">":{"docs":{},"df":0,">":{"docs":{},"df":0,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"a":{"docs":{},"df":0,"s":{"docs":{},"df":0,"s":{"docs":{},"df":0,"o":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{},"df":0,"y":{"docs":{},"df":0,"p":{"docs":{},"df":0,"e":{"docs":{},"df":0,"<":{"docs":{},"df":0,"p":{"docs":{},"df":0,"n":{"docs":{},"df":0,"+":{"docs":{},"df":0,"1":{"docs":{},"df":0,".":{"docs":{},"df":0,".":{"docs":{},"df":0,"p":{"docs":{},"df":0,"m":{"docs":{"traits/lowering-rules.html#associated-type-values":{"tf":1.0},"traits/lowering-rules.html#associated-type-declarations":{"tf":2.0}},"df":2}}}}}}}}}}}}}}}}}}}}}}}}}}}},"'":{"docs":{},"df":0,"a":{"docs":{"appendix/glossary.html#appendix-c-glossary":{"tf":1.0}},"df":1}},"a":{"docs":{"variance.html#variance-and-object-types":{"tf":1.0}},"df":1,"1":{"docs":{},"df":0,".":{"docs":{},"df":0,".":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{"traits/lowering-rules.html#lowering-impls":{"tf":1.4142135623730952}},"df":1}}}}}}},":":{"docs":{},"df":0,":":{"docs":{},"df":0,"a":{"docs":{},"df":0,"s":{"docs":{},"df":0,"s":{"docs":{},"df":0,"o":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{},"df":0,"y":{"docs":{},"df":0,"p":{"docs":{},"df":0,"e":{"docs":{},"df":0,")":{"docs":{},"df":0,"<":{"docs":{},"df":0,"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"l":{"docs":{},"df":0,"f":{"docs":{"traits/lowering-rules.html#associated-type-declarations":{"tf":1.0}},"df":1}}}}}}}}}}}}}}},"m":{"docs":{},"df":0,"e":{"docs":{},"df":0,"t":{"docs":{},"df":0,"h":{"docs":{},"df":0,"o":{"docs":{},"df":0,"d":{"docs":{},"df":0,"(":{"docs":{},"df":0,"a":{"docs":{},"df":0,"d":{"docs":{},"df":0,"j":{"docs":{},"df":0,"(":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"e":{"docs":{},"df":0,"i":{"docs":{},"df":0,"v":{"docs":{"method-lookup.html#method-lookup":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}},"n":{"docs":{},"df":0,"a":{"docs":{},"df":0,"m":{"docs":{},"df":0,"e":{"docs":{},"df":0,"<":{"docs":{},"df":0,"p":{"docs":{},"df":0,"1":{"docs":{},"df":0,".":{"docs":{},"df":0,".":{"docs":{},"df":0,"p":{"docs":{},"df":0,"n":{"docs":{"traits/goals-and-clauses.html#domain-goals":{"tf":1.0}},"df":1,">":{"docs":{},"df":0,">":{"docs":{},"df":0,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"a":{"docs":{},"df":0,"s":{"docs":{},"df":0,"s":{"docs":{},"df":0,"o":{"docs":{},"df":0,"c":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"m":{"docs":{},"df":0,"<":{"docs":{},"df":0,"p":{"docs":{},"df":0,"n":{"docs":{},"df":0,"+":{"docs":{},"df":0,"1":{"docs":{},"df":0,".":{"docs":{},"df":0,".":{"docs":{},"df":0,"p":{"docs":{},"df":0,"m":{"docs":{"traits/goals-and-clauses.html#domain-goals":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},">":{"docs":{},"df":0,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"m":{"docs":{"traits/goals-and-clauses.html#domain-goals":{"tf":1.0}},"df":1}}}}}}},"'":{"docs":{"appendix/glossary.html#appendix-c-glossary":{"tf":1.0},"appendix/code-index.html#appendix-d-code-index":{"tf":1.0}},"df":2}}},"d":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{"traits/goals-and-clauses.html#goals-and-clauses":{"tf":1.0},"traits/canonical-queries.html#the-traditional-interactive-prolog-query":{"tf":1.7320508075688773},"query.html#cycles-between-queries":{"tf":1.0},"query.html#queries-demand-driven-compilation":{"tf":1.0}},"df":4,"i":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{"tests/adding.html#naming-your-test":{"tf":1.0}},"df":1}}}}}}},"e":{"docs":{},"df":0,"e":{"docs":{"macro-expansion.html#the-macro-parser":{"tf":2.8284271247461905},"traits/chalk-overview.html#parsing":{"tf":1.0},"name-resolution.html#name-resolution":{"tf":1.0},"appendix/glossary.html#appendix-c-glossary":{"tf":1.0},"appendix/stupid-stats.html#overview-of-the-compilation-process":{"tf":1.0},"tests/intro.html#testing-with-docker-images":{"tf":1.0},"tests/intro.html#testing-on-emulators":{"tf":1.0},"high-level-overview.html#the-main-stages-of-compilation":{"tf":1.4142135623730952},"the-parser.html#the-parser":{"tf":1.7320508075688773},"tests/intro.html#compiletest-test-suites":{"tf":1.0},"hir.html#identifiers-in-the-hir":{"tf":1.4142135623730952},"hir.html#the-hir":{"tf":1.7320508075688773},"macro-expansion.html#example":{"tf":1.7320508075688773},"rustdoc.html#from-crate-to-clean":{"tf":1.0},"mir/regionck.html#what-is-a-universe":{"tf":1.4142135623730952},"name-resolution.html#overall-strategy":{"tf":1.0},"rustdoc.html#the-walking-tour-of-rustdoc":{"tf":1.0}},"df":17},"a":{"docs":{},"df":0,"t":{"docs":{"traits/lowering-rules.html#lowering-function-and-constant-declarations":{"tf":1.0},"compiler-debugging.html#getting-a-backtrace-for-errors":{"tf":1.4142135623730952},"traits/lowering-rules.html#function-and-constant-values":{"tf":1.0},"traits/canonicalization.html#canonicalizing-the-query":{"tf":1.0}},"df":4,"m":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{"traits/bibliography.html#bibliography":{"tf":1.0},"conventions.html#prefer-exhaustive-matches":{"tf":1.0},"traits/canonicalization.html#canonicalizing-the-query-result":{"tf":1.0}},"df":3}}}},"_":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"r":{"docs":{},"df":0,"_":{"docs":{},"df":0,"a":{"docs":{},"df":0,"s":{"docs":{},"df":0,"_":{"docs":{},"df":0,"b":{"docs":{},"df":0,"u":{"docs":{},"df":0,"g":{"docs":{"compiler-debugging.html#getting-a-backtrace-for-errors":{"tf":1.0}},"df":1}}}}}}}}}}}}}},"u":{"docs":{},"df":0,"e":{"docs":{"miri.html#miri":{"tf":1.0},"conventions.html#use-todo-comments-for-things-you-dont-want-to-forget":{"tf":1.0},"traits/goals-and-clauses.html#goals-and-clauses":{"tf":1.0},"appendix/glossary.html#appendix-c-glossary":{"tf":1.7320508075688773},"mir/regionck.html#skolemization-and-outlives-constraints":{"tf":1.0},"incremental-compilation.html#the-query-dag":{"tf":1.0},"diag.html#declaring-a-lint":{"tf":1.4142135623730952},"traits/associated-types.html#associated-type-projection-and-normalization":{"tf":1.0},"traits/goals-and-clauses.html#domain-goals":{"tf":2.23606797749979},"how-to-build-and-run.html#create-a-configtoml":{"tf":2.0},"traits/goals-and-clauses.html#coinductive-goals":{"tf":1.4142135623730952},"traits/lowering-to-logic.html#rust-traits-and-logic":{"tf":1.7320508075688773},"traits/lowering-rules.html#trait-header":{"tf":1.0},"variance.html#variance-and-associated-types":{"tf":1.0},"traits/goals-and-clauses.html#goals-and-clauses-meta-structure":{"tf":1.7320508075688773},"mir/regionck.html#subtyping-and-skolemization":{"tf":2.23606797749979},"traits/canonical-queries.html#the-traditional-interactive-prolog-query":{"tf":1.7320508075688773},"traits/canonical-queries.html#canonical-queries":{"tf":1.0},"traits/canonical-queries.html#a-trait-query-in-rustc":{"tf":1.4142135623730952}},"df":19}}},"h":{"docs":{},"df":0,"u":{"docs":{"traits/hrtb.html#basic-matching-and-skolemization-leaks":{"tf":1.0},"traits/canonical-queries.html#examples":{"tf":1.0},"variance.html#variance-and-object-types":{"tf":1.0},"mir/passes.html#stealing":{"tf":1.0},"traits/specialization.html#specialization":{"tf":1.4142135623730952},"traits/lowering-rules.html#trait-header":{"tf":1.0},"traits/associated-types.html#integration-with-unification":{"tf":1.0}},"df":7},"a":{"docs":{},"df":0,"t":{"docs":{},"df":0,"'":{"docs":{"appendix/background.html#what-is-a-free-region-or-a-free-variable-what-about-bound-region":{"tf":1.0},"query.html#queries-demand-driven-compilation":{"tf":1.0},"miri.html#miri":{"tf":1.0},"type-checking.html#type-collection":{"tf":1.0},"rustdoc.html#dotting-is-and-crossing-ts":{"tf":1.0},"mir/regionck.html#final-example":{"tf":1.0},"rustdoc.html#the-walking-tour-of-rustdoc":{"tf":1.7320508075688773},"variance.html#variance-and-object-types":{"tf":1.0},"traits/goals-and-clauses.html#goals-and-clauses-meta-structure":{"tf":1.4142135623730952},"rustdoc.html#cheat-sheet":{"tf":1.0},"diag.html#declaring-a-lint":{"tf":1.0},"traits/goals-and-clauses.html#coinductive-goals":{"tf":1.0},"type-inference.html#type-inference":{"tf":1.0}},"df":13,"l":{"docs":{},"df":0,"l":{"docs":{"name-resolution.html#namespaces":{"tf":1.0}},"df":1}}}}},"e":{"docs":{},"df":0,"m":{"docs":{},"df":0,"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"l":{"docs":{},"df":0,"v":{"docs":{"compiletest.html#introduction":{"tf":1.0},"incremental-compilation.html#the-basic-algorithm":{"tf":1.0}},"df":2}}}}},"t":{"docs":{"traits/index.html#trait-solving-new-style":{"tf":1.0}},"df":1},"y":{"docs":{},"df":0,"'":{"docs":{},"df":0,"r":{"docs":{"appendix/stupid-stats.html#what-next":{"tf":1.0},"rustdoc.html#cheat-sheet":{"tf":1.0},"variance.html#trait-variance-and-vtable-resolution":{"tf":1.0}},"df":3}}},"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{"appendix/glossary.html#appendix-c-glossary":{"tf":1.4142135623730952}},"df":1}}},"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"'":{"docs":{"name-resolution.html#scopes-and-ribs":{"tf":1.0},"rustdoc.html#from-crate-to-clean":{"tf":1.0},"rustdoc.html#the-walking-tour-of-rustdoc":{"tf":1.0},"compiler-debugging.html#getting-logging-output":{"tf":1.0},"rustdoc.html#dotting-is-and-crossing-ts":{"tf":1.4142135623730952},"mir/passes.html#implementing-and-registering-a-pass":{"tf":1.0},"rustdoc.html#from-clean-to-crate":{"tf":1.0},"miri.html#interpretation":{"tf":1.4142135623730952}},"df":8},"f":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{"incremental-compilation.html#the-basic-algorithm":{"tf":1.0},"traits/resolution.html#selection":{"tf":1.0},"name-resolution.html#overall-strategy":{"tf":1.4142135623730952},"method-lookup.html#method-lookup":{"tf":1.0},"mir/regionck.html#another-example":{"tf":1.0},"mir/passes.html#implementing-and-registering-a-pass":{"tf":1.0},"mir/passes.html#stealing":{"tf":1.4142135623730952},"traits/caching.html#where-clauses-and-the-local-vs-global-cache":{"tf":1.0},"traits/canonicalization.html#canonicalizing-the-query":{"tf":1.0},"tests/adding.html#revisions":{"tf":1.0},"traits/caching.html#an-example":{"tf":1.0},"traits/goals-and-clauses.html#coinductive-goals":{"tf":1.0},"tests/running.html#running-a-subset-of-the-test-suites":{"tf":1.0},"traits/lowering-rules.html#trait-header":{"tf":1.0},"query.html#how-the-compiler-executes-a-query":{"tf":1.0},"traits/canonical-queries.html#examples":{"tf":1.7320508075688773},"traits/resolution.html#candidate-assembly":{"tf":1.0},"incrcomp-debugging.html#dumping-the-graph":{"tf":1.0}},"df":18}}},"w":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{},"df":0,"h":{"docs":{"traits/caching.html#caching-and-subtle-considerations-therewith":{"tf":1.0}},"df":1}}}},"s":{"docs":{},"df":0,"a":{"docs":{"traits/bibliography.html#bibliography":{"tf":1.0}},"df":1}}}}},"i":{"docs":{},"df":0,"n":{"docs":{"appendix/glossary.html#appendix-c-glossary":{"tf":1.0}},"df":1,"g":{"docs":{"rustc-driver.html#the-rustc-driver":{"tf":1.0},"how-to-build-and-run.html#other-xpy-commands":{"tf":1.0},"tests/intro.html#compiletest-test-suites":{"tf":1.7320508075688773},"appendix/background.html#what-is-a-free-region-or-a-free-variable-what-about-bound-region":{"tf":1.0},"traits/associated-types.html#associated-type-projection-and-normalization":{"tf":1.0},"mir/passes.html#implementing-and-registering-a-pass":{"tf":1.0},"ty.html#the-tcx-and-how-it-uses-lifetimes":{"tf":1.0},"traits/resolution.html#trait-resolution-old-style":{"tf":1.0},"type-checking.html#type-collection":{"tf":1.4142135623730952},"appendix/glossary.html#appendix-c-glossary":{"tf":1.4142135623730952},"tests/adding.html#what-kind-of-test-should-i-add":{"tf":1.0},"traits/hrtb.html#basic-matching-and-skolemization-leaks":{"tf":1.0},"hir.html#identifiers-in-the-hir":{"tf":1.4142135623730952},"appendix/stupid-stats.html#appendix-a-a-tutorial-on-creating-a-drop-in-replacement-for-rustc":{"tf":1.4142135623730952},"method-lookup.html#method-lookup":{"tf":1.0},"rustdoc.html#hot-potato":{"tf":1.0},"tests/intro.html#testing-with-docker-images":{"tf":1.0},"traits/associated-types.html#integration-with-unification":{"tf":1.0},"traits/canonicalization.html#canonicalization":{"tf":1.0},"traits/canonicalization.html#canonicalizing-the-query-result":{"tf":1.0},"type-inference.html#region-constraints":{"tf":1.0},"name-resolution.html#scopes-and-ribs":{"tf":1.0},"mir/passes.html#seeing-how-the-mir-changes-as-the-compiler-executes":{"tf":1.0},"rustdoc.html#from-crate-to-clean":{"tf":1.0},"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.4142135623730952},"type-inference.html#enforcing-equality--subtyping":{"tf":1.0},"high-level-overview.html#the-main-stages-of-compilation":{"tf":1.7320508075688773},"the-parser.html#the-parser":{"tf":1.0},"appendix/stupid-stats.html#what-next":{"tf":1.0},"traits/lowering-rules.html#trait-header":{"tf":1.4142135623730952},"tests/running.html#running-a-subset-of-the-test-suites":{"tf":1.0},"traits/chalk-overview.html#lowering":{"tf":1.0},"conventions.html#line-length":{"tf":1.0},"query.html#queries-demand-driven-compilation":{"tf":1.0},"how-to-build-and-run.html#running-xpy-and-building-a-stage1-compiler":{"tf":1.7320508075688773},"tests/adding.html#adding-new-tests":{"tf":1.0},"rustdoc.html#dotting-is-and-crossing-ts":{"tf":1.0},"about-this-guide.html#about-this-guide":{"tf":1.0},"traits/chalk-overview.html#parsing":{"tf":1.0},"type-inference.html#creating-an-inference-context":{"tf":1.0},"type-inference.html#type-inference":{"tf":2.0},"mir/index.html#mir-data-types":{"tf":1.0},"mir/regionck.html#what-is-a-universe":{"tf":1.4142135623730952},"rustdoc.html#from-clean-to-crate":{"tf":1.0},"type-inference.html#subtyping-obligations":{"tf":1.0},"traits/goals-and-clauses.html#domain-goals":{"tf":1.0},"mir/visitor.html#mir-visitor":{"tf":1.0},"name-resolution.html#todo":{"tf":1.0},"conventions.html#use-todo-comments-for-things-you-dont-want-to-forget":{"tf":1.0},"compiler-debugging.html#getting-logging-output":{"tf":1.0},"appendix/stupid-stats.html#overview-of-the-compilation-process":{"tf":1.0},"hir.html#out-of-band-storage-and-the--crate--type":{"tf":1.4142135623730952},"traits/canonical-queries.html#a-trait-query-in-rustc":{"tf":1.0},"miri.html#allocations":{"tf":1.0},"traits/canonical-queries.html#canonical-queries":{"tf":1.0},"tests/intro.html#other-tests":{"tf":1.4142135623730952},"mir/borrowck.html#major-phases-of-the-borrow-checker":{"tf":1.4142135623730952},"incremental-compilation.html#incremental-compilation":{"tf":1.0},"appendix/stupid-stats.html#compilercalls":{"tf":1.0},"method-lookup.html#steps":{"tf":1.0},"traits/chalk-overview.html#intermediate-representation-ir":{"tf":1.4142135623730952},"tests/running.html#running-an-individual-test":{"tf":1.0},"traits/canonical-queries.html#the-traditional-interactive-prolog-query":{"tf":1.0},"param_env.html#parameter-environment":{"tf":2.0},"ty.html#allocating-and-working-with-types":{"tf":1.0},"conventions.html#how-to-structure-your-pr":{"tf":1.0}},"df":66,"s":{"docs":{},"df":0,".":{"docs":{},"df":0,"p":{"docs":{},"df":0,"u":{"docs":{},"df":0,"s":{"docs":{},"df":0,"h":{"docs":{},"df":0,"(":{"docs":{},"df":0,"\"":{"docs":{},"df":0,"t":{"docs":{},"df":0,"h":{"docs":{"type-inference.html#type-inference":{"tf":1.0}},"df":1}}}}}}}}}}},"k":{"docs":{"hir.html#identifiers-in-the-hir":{"tf":1.0},"tests/running.html#running-tests":{"tf":1.0},"method-lookup.html#method-lookup":{"tf":1.0},"ty.html#allocating-and-working-with-types":{"tf":1.0},"incrcomp-debugging.html#dumping-the-graph":{"tf":1.0},"variance.html#variance-and-associated-types":{"tf":1.0},"compiler-debugging.html#getting-logging-output":{"tf":1.0},"appendix/glossary.html#appendix-c-glossary":{"tf":1.0},"variance.html#trait-variance-and-vtable-resolution":{"tf":1.0},"incrcomp-debugging.html#tracking-down-incorrect-edges":{"tf":1.0},"rustc-driver.html#a-note-on-lifetimes":{"tf":1.0}},"df":11},"l":{"docs":{},"df":0,"t":{"docs":{},"df":0,"o":{"docs":{"appendix/glossary.html#appendix-c-glossary":{"tf":1.0}},"df":1}}}},"r":{"docs":{},"df":0,"d":{"docs":{"rustc-driver.html#the-rustc-driver":{"tf":1.0}},"df":1}}},"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"u":{"docs":{},"df":0,"g":{"docs":{},"df":0,"h":{"docs":{"traits/hrtb.html#higher-ranked-trait-bounds":{"tf":1.0},"ty.html#the-tcx-and-how-it-uses-lifetimes":{"tf":1.0},"traits/chalk-overview.html#parsing":{"tf":1.0},"appendix/code-index.html#appendix-d-code-index":{"tf":1.0},"name-resolution.html#name-resolution":{"tf":1.0},"type-inference.html#enforcing-equality--subtyping":{"tf":1.0},"traits/chalk-overview.html#testing":{"tf":1.0},"mir/regionck.html#what-is-a-universe":{"tf":1.0},"mir/borrowck.html#mir-borrow-check":{"tf":1.0},"traits/canonical-queries.html#examples":{"tf":1.0},"rustc-driver.html#a-note-on-lifetimes":{"tf":1.0},"mir/passes.html#mir-passes":{"tf":1.0},"mir/regionck.html#extending-the-universal-regions-check":{"tf":1.0},"compiletest.html#adding-a-new-header-command":{"tf":1.0},"traits/hrtb.html#higher-ranked-trait-obligations":{"tf":1.0},"rustdoc.html#from-soup-to-nuts":{"tf":1.0},"appendix/stupid-stats.html#appendix-a-a-tutorial-on-creating-a-drop-in-replacement-for-rustc":{"tf":1.0},"mir/regionck.html#back-to-our-example":{"tf":1.0},"traits/hrtb.html#basic-matching-and-skolemization-leaks":{"tf":1.0},"rustdoc.html#other-tricks-up-its-sleeve":{"tf":1.0},"traits/caching.html#an-example":{"tf":1.0},"mir/regionck.html#subtyping-and-skolemization":{"tf":1.0},"variance.html#dependency-graph-management":{"tf":1.0},"rustdoc.html#dotting-is-and-crossing-ts":{"tf":1.0},"query.html#how-the-compiler-executes-a-query":{"tf":1.0},"traits/resolution.html#candidate-assembly":{"tf":1.0},"traits/lowering-rules.html#rule-names-and-cross-references":{"tf":1.0},"hir.html#out-of-band-storage-and-the--crate--type":{"tf":1.0},"rustdoc.html#from-crate-to-clean":{"tf":1.4142135623730952}},"df":29,"o":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{"appendix/glossary.html#appendix-c-glossary":{"tf":1.0},"variance.html#variance-of-type-and-lifetime-parameters":{"tf":1.0},"query.html#how-the-compiler-executes-a-query":{"tf":1.0}},"df":3}}}}}},"w":{"docs":{"ty.html#the-tcx-and-how-it-uses-lifetimes":{"tf":1.0}},"df":1,"n":{"docs":{"ty.html#the-tcx-and-how-it-uses-lifetimes":{"tf":1.0}},"df":1}}},"e":{"docs":{},"df":0,"a":{"docs":{},"df":0,"d":{"docs":{"compiler-debugging.html#getting-a-backtrace-for-errors":{"tf":1.0},"appendix/glossary.html#appendix-c-glossary":{"tf":1.7320508075688773},"rustc-driver.html#a-note-on-lifetimes":{"tf":1.4142135623730952},"rustdoc.html#from-soup-to-nuts":{"tf":1.0}},"df":4}},"e":{"docs":{"traits/canonicalization.html#canonicalizing-the-query-result":{"tf":1.0},"incrcomp-debugging.html#dumping-the-graph":{"tf":1.0},"ty.html#the-tcx-and-how-it-uses-lifetimes":{"tf":1.0},"type-inference.html#inference-variables":{"tf":1.0},"traits/resolution.html#overview":{"tf":1.0},"tests/adding.html#revisions":{"tf":1.0},"traits/resolution.html#selection":{"tf":1.0},"macro-expansion.html#the-macro-parser":{"tf":1.0}},"df":8}}},"o":{"docs":{},"df":0,"s":{"docs":{},"df":0,"e":{"docs":{"type-checking.html#type-collection":{"tf":1.4142135623730952},"traits/lowering-to-logic.html#type-checking-normal-functions":{"tf":1.4142135623730952},"traits/lowering-rules.html#lowering-where-clauses":{"tf":1.0},"tests/intro.html#compiletest-test-suites":{"tf":1.4142135623730952},"tests/adding.html#guide-to-the-ui-tests":{"tf":1.0},"traits/lowering-rules.html#transforming-the-lowered-where-clauses":{"tf":1.0},"type-inference.html#snapshots":{"tf":1.0},"mir/regionck.html#final-example":{"tf":1.0},"tests/running.html#running-an-individual-test":{"tf":1.0},"method-lookup.html#candidate-assembly":{"tf":1.4142135623730952},"mir/passes.html#seeing-how-the-mir-changes-as-the-compiler-executes":{"tf":1.0},"traits/associated-types.html#integration-with-unification":{"tf":1.0},"traits/associated-types.html#projection-equality":{"tf":1.0},"incrcomp-debugging.html#dumping-the-graph":{"tf":1.0},"mir/index.html#mir-data-types":{"tf":1.0},"traits/hrtb.html#basic-matching-and-skolemization-leaks":{"tf":1.0},"rustdoc.html#from-soup-to-nuts":{"tf":1.0},"traits/lowering-to-logic.html#lowering-to-logic":{"tf":1.0},"traits/index.html#trait-solving-new-style":{"tf":1.0},"mir/regionck.html#what-is-a-universe":{"tf":1.0},"mir/regionck.html#another-example":{"tf":1.0},"appendix/stupid-stats.html#overview-of-the-compilation-process":{"tf":1.0},"ty.html#the-tcx-and-how-it-uses-lifetimes":{"tf":1.0},"query.html#adding-a-new-kind-of-query":{"tf":1.0},"incremental-compilation.html#the-query-dag":{"tf":1.0},"traits/resolution.html#candidate-assembly":{"tf":1.0},"mir/regionck.html#skolemization-and-outlives-constraints":{"tf":2.0},"traits/canonicalization.html#canonicalization":{"tf":1.0},"mir/regionck.html#mir-based-region-checking-nll":{"tf":1.0},"conventions.html#how-to-structure-your-pr":{"tf":1.4142135623730952},"tests/adding.html#header-commands-configuring-rustc":{"tf":1.0},"type-inference.html#subtyping-obligations":{"tf":1.0},"high-level-overview.html#crate-structure":{"tf":1.0},"traits/lowering-rules.html#trait-header":{"tf":1.0},"traits/canonicalization.html#canonicalizing-the-query-result":{"tf":1.4142135623730952},"high-level-overview.html#the-main-stages-of-compilation":{"tf":1.7320508075688773},"traits/resolution.html#overview":{"tf":1.0},"method-lookup.html#candidate-search":{"tf":1.0},"mir/regionck.html#universes-and-skolemized-region-elements":{"tf":1.0},"rustdoc.html#the-walking-tour-of-rustdoc":{"tf":1.0},"incremental-compilation.html#improvements-to-the-basic-algorithm":{"tf":1.0},"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.0},"conventions.html#copyright-notice":{"tf":1.0},"traits/chalk-overview.html#well-formedness-checks":{"tf":1.0},"compiletest.html#adding-a-new-header-command":{"tf":1.0},"mir/passes.html#mir-passes":{"tf":1.0},"appendix/background.html#what-is-a-free-region-or-a-free-variable-what-about-bound-region":{"tf":1.0},"rustc-driver.html#the-rustc-driver":{"tf":1.0},"mir/regionck.html#extending-the-universal-regions-check":{"tf":1.0}},"df":49}},"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"u":{"docs":{},"df":0,"g":{"docs":{},"df":0,"h":{"docs":{"rustdoc.html#dotting-is-and-crossing-ts":{"tf":1.0},"mir/regionck.html#mir-based-region-checking-nll":{"tf":1.0}},"df":2}}}}},"u":{"docs":{},"df":0,"g":{"docs":{},"df":0,"h":{"docs":{"traits/lowering-to-logic.html#type-checking-generic-functions-beyond-horn-clauses":{"tf":1.0},"rustdoc.html#the-walking-tour-of-rustdoc":{"tf":1.4142135623730952},"mir/regionck.html#mir-based-region-checking-nll":{"tf":1.0},"conventions.html#using-crates-from-cratesio":{"tf":1.0},"tests/adding.html#naming-your-test":{"tf":1.0},"traits/goals-and-clauses.html#coinductive-goals":{"tf":1.0},"traits/associated-types.html#associated-type-projection-and-normalization":{"tf":1.4142135623730952},"traits/lowering-to-logic.html#rust-traits-and-logic":{"tf":1.0},"incrcomp-debugging.html#dumping-the-graph":{"tf":1.4142135623730952},"traits/canonical-queries.html#examples":{"tf":1.0},"variance.html#variance-and-object-types":{"tf":1.0},"high-level-overview.html#the-main-stages-of-compilation":{"tf":1.0},"mir/index.html#key-mir-vocabulary":{"tf":1.0},"traits/canonical-queries.html#a-trait-query-in-rustc":{"tf":1.0},"mir/passes.html#stealing":{"tf":1.0},"traits/canonicalization.html#executing-the-query":{"tf":1.0},"tests/running.html#running-an-individual-test":{"tf":1.0},"tests/adding.html#revisions":{"tf":1.0},"type-inference.html#trying-equality":{"tf":1.0},"rustdoc.html#cheat-sheet":{"tf":1.4142135623730952},"traits/resolution.html#selection":{"tf":1.0},"traits/canonicalization.html#canonicalizing-the-query-result":{"tf":1.4142135623730952},"query.html#how-the-compiler-executes-a-query":{"tf":1.0},"traits/resolution.html#selection-during-translation":{"tf":1.0},"high-level-overview.html#crate-structure":{"tf":1.4142135623730952},"query.html#cycles-between-queries":{"tf":1.0},"how-to-build-and-run.html#create-a-configtoml":{"tf":1.0},"name-resolution.html#scopes-and-ribs":{"tf":1.0}},"df":28,"t":{"docs":{"appendix/stupid-stats.html#overview-of-the-compilation-process":{"tf":1.0},"mir/regionck.html#representing-the-values-of-a-region-variable":{"tf":1.0}},"df":2}}},"s":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{"compiletest.html#introduction":{"tf":1.0}},"df":1}}}}}}},"<":{"docs":{},"df":0,"'":{"docs":{},"df":0,"b":{"docs":{"variance.html#variance-of-type-and-lifetime-parameters":{"tf":1.0}},"df":1},"a":{"docs":{"variance.html#variance-of-type-and-lifetime-parameters":{"tf":1.0}},"df":1}},"a":{"docs":{"variance.html#variance-of-type-and-lifetime-parameters":{"tf":1.0}},"df":1},"b":{"docs":{"variance.html#variance-of-type-and-lifetime-parameters":{"tf":1.0}},"df":1}},"m":{"docs":{},"df":0,"p":{"docs":{},"df":0,"1":{"docs":{"mir/index.html#key-mir-vocabulary":{"tf":1.4142135623730952}},"df":1}}},"u":{"docs":{},"df":0,"p":{"docs":{},"df":0,"l":{"docs":{"miri.html#datastructures":{"tf":1.0},"appendix/glossary.html#appendix-c-glossary":{"tf":1.0}},"df":2}},"r":{"docs":{},"df":0,"n":{"docs":{"query.html#queries-demand-driven-compilation":{"tf":1.4142135623730952},"traits/lowering-to-logic.html#lowering-to-logic":{"tf":1.0},"traits/canonical-queries.html#examples":{"tf":1.0},"traits/lowering-rules.html#trait-header":{"tf":1.0},"diag.html#suggestions":{"tf":1.0},"traits/lowering-to-logic.html#type-checking-normal-functions":{"tf":1.0},"diag.html#lint-groups":{"tf":1.7320508075688773},"compiler-debugging.html#debugging-llvm":{"tf":1.0},"the-parser.html#the-parser":{"tf":1.7320508075688773},"traits/lowering-to-logic.html#type-checking-generic-functions-beyond-horn-clauses":{"tf":1.4142135623730952},"compiler-debugging.html#getting-logging-output":{"tf":1.7320508075688773},"macro-expansion.html#macro-expansion":{"tf":1.0},"high-level-overview.html#the-main-stages-of-compilation":{"tf":1.0},"rustc-driver.html#the-rustc-driver":{"tf":1.0},"compiletest.html#adding-a-new-header-command":{"tf":1.0}},"df":15}},"n":{"docs":{},"df":0,"e":{"docs":{"rustdoc.html#hot-potato":{"tf":1.0}},"df":1}},"t":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{"type-inference.html#inference-variables":{"tf":1.0},"appendix/stupid-stats.html#appendix-a-a-tutorial-on-creating-a-drop-in-replacement-for-rustc":{"tf":2.23606797749979}},"df":2}}}}},">":{"docs":{},"df":0,"(":{"docs":{},"df":0,"t":{"docs":{"mir/regionck.html#what-is-a-universe":{"tf":1.7320508075688773}},"df":1}}},"t":{"docs":{"macro-expansion.html#the-macro-parser":{"tf":2.6457513110645909}},"df":1},"i":{"docs":{"high-level-overview.html#crate-structure":{"tf":1.0},"appendix/background.html#what-is-a-free-region-or-a-free-variable-what-about-bound-region":{"tf":1.0}},"df":2,"t":{"docs":{},"df":0,"l":{"docs":{"compiler-debugging.html#debugging-the-compiler":{"tf":1.0},"rustdoc.html#from-soup-to-nuts":{"tf":1.0}},"df":2}},"e":{"docs":{},"df":0,"r":{"docs":{"tests/intro.html#testing-infrastructure":{"tf":1.0}},"df":1}},"p":{"docs":{"conventions.html#formatting-and-the-tidy-script":{"tf":1.4142135623730952},"compiler-debugging.html#debugging-llvm":{"tf":1.0},"conventions.html#how-to-structure-your-pr":{"tf":1.0},"conventions.html#coding-for-correctness":{"tf":1.0},"compiler-debugging.html#debugging-the-compiler":{"tf":1.0}},"df":5},"d":{"docs":{},"df":0,"i":{"docs":{"conventions.html#use-todo-comments-for-things-you-dont-want-to-forget":{"tf":1.0},"conventions.html#line-length":{"tf":1.0},"conventions.html#formatting-and-the-tidy-script":{"tf":1.7320508075688773},"tests/intro.html#other-tests":{"tf":1.0}},"df":4}},"m":{"docs":{},"df":0,"e":{"docs":{"compiletest.html#adding-a-new-header-command":{"tf":1.4142135623730952},"tests/adding.html#revisions":{"tf":1.4142135623730952},"traits/canonical-queries.html#examples":{"tf":1.0},"traits/caching.html#an-example":{"tf":1.0},"tests/running.html#running-tests":{"tf":1.0},"how-to-build-and-run.html#running-xpy-and-building-a-stage1-compiler":{"tf":1.4142135623730952},"variance.html#variance-and-object-types":{"tf":1.0},"mir/passes.html#stealing":{"tf":1.0},"miri.html#interpretation":{"tf":1.0},"traits/specialization.html#specialization":{"tf":1.0},"mir/regionck.html#universes-and-skolemized-region-elements":{"tf":1.0},"name-resolution.html#scopes-and-ribs":{"tf":1.0},"traits/lowering-module.html#unit-tests":{"tf":1.0},"appendix/glossary.html#appendix-c-glossary":{"tf":1.0},"conventions.html#how-to-structure-your-pr":{"tf":1.0},"rustdoc.html#the-walking-tour-of-rustdoc":{"tf":1.0},"tests/intro.html#testing-infrastructure":{"tf":1.0},"hir.html#the-hir-map":{"tf":1.0},"appendix/stupid-stats.html#appendix-a-a-tutorial-on-creating-a-drop-in-replacement-for-rustc":{"tf":1.0},"mir/borrowck.html#mir-borrow-check":{"tf":1.0},"compiletest.html#implementing-the-behavior-change":{"tf":1.0},"mir/borrowck.html#major-phases-of-the-borrow-checker":{"tf":1.0},"query.html#adding-a-new-kind-of-query":{"tf":1.0},"mir/regionck.html#skolemization-and-universes":{"tf":1.4142135623730952},"traits/resolution.html#selection-during-translation":{"tf":1.0},"traits/bibliography.html#bibliography":{"tf":1.0},"macro-expansion.html#example":{"tf":1.0},"const-eval.html#constant-evaluation":{"tf":1.4142135623730952},"incremental-compilation.html#the-basic-algorithm":{"tf":1.4142135623730952},"query.html#queries-demand-driven-compilation":{"tf":1.4142135623730952},"high-level-overview.html#crate-structure":{"tf":1.7320508075688773},"miri.html#miri":{"tf":1.0},"tests/adding.html#naming-your-test":{"tf":1.0},"compiler-debugging.html#debugging-llvm":{"tf":1.4142135623730952},"traits/resolution.html#major-concepts":{"tf":1.0},"rustc-driver.html#the-rustc-driver":{"tf":1.0}},"df":36,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"a":{"docs":{},"df":0,"m":{"docs":{},"df":0,"p":{"docs":{"tests/running.html#running-tests":{"tf":1.4142135623730952}},"df":1}}}}}}}},":":{"docs":{},"df":0,":":{"docs":{},"df":0,"d":{"docs":{},"df":0,"e":{"docs":{},"df":0,"f":{"docs":{},"df":0,"a":{"docs":{},"df":0,"u":{"docs":{},"df":0,"l":{"docs":{},"df":0,"t":{"docs":{"name-resolution.html#scopes-and-ribs":{"tf":1.0}},"df":1}}}}}}},"i":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"m":{"docs":{"traits/associated-types.html#associated-type-projection-and-normalization":{"tf":1.0},"high-level-overview.html#the-main-stages-of-compilation":{"tf":1.0},"appendix/glossary.html#appendix-c-glossary":{"tf":1.0},"traits/associated-types.html#skolemized-associated-types":{"tf":1.0}},"df":4}}}}},"b":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"<":{"docs":{},"df":0,"u":{"docs":{"traits/resolution.html#selection-during-translation":{"tf":1.0}},"df":1}}}}},"c":{"docs":{},"df":0,"l":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"e":{"docs":{"traits/resolution.html#major-concepts":{"tf":1.0}},"df":1}}}}}},"o":{"docs":{},"df":0,"g":{"docs":{},"df":0,"e":{"docs":{},"df":0,"t":{"docs":{},"df":0,"h":{"docs":{"appendix/background.html#what-is-a-control-flow-graph":{"tf":1.0},"traits/canonicalization.html#canonicalizing-the-query-result":{"tf":1.0},"high-level-overview.html#the-main-stages-of-compilation":{"tf":1.0},"compiler-debugging.html#debugging-llvm":{"tf":1.0},"compiler-debugging.html#getting-logging-output":{"tf":1.0},"traits/associated-types.html#projection-equality":{"tf":1.0},"high-level-overview.html#crate-structure":{"tf":1.0}},"df":7}}}},"k":{"docs":{},"df":0,"e":{"docs":{},"df":0,"i":{"docs":{"tests/intro.html#other-tests":{"tf":1.0}},"df":1},"n":{"docs":{"appendix/glossary.html#appendix-c-glossary":{"tf":1.7320508075688773},"macro-expansion.html#the-macro-parser":{"tf":3.7416573867739415},"macro-expansion.html#example":{"tf":3.0},"appendix/code-index.html#appendix-d-code-index":{"tf":1.0},"the-parser.html#the-parser":{"tf":2.449489742783178}},"df":5,"t":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{"macro-expansion.html#the-macro-parser":{"tf":1.0}},"df":1}}},"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"a":{"docs":{},"df":0,"m":{"docs":{"macro-expansion.html#the-macro-parser":{"tf":1.0}},"df":1}}}}}}}}},"_":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"r":{"docs":{"method-lookup.html#candidate-assembly":{"tf":1.4142135623730952}},"df":1}}},"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"w":{"docs":{},"df":0,"_":{"docs":{},"df":0,"b":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{"miri.html#datastructures":{"tf":1.0}},"df":1}}}}}}}},"o":{"docs":{},"df":0,"l":{"docs":{"how-to-build-and-run.html#running-xpy-and-building-a-stage1-compiler":{"tf":1.0},"tests/intro.html#the-compiler-testing-framework":{"tf":1.0},"compiler-debugging.html#debugging-llvm":{"tf":1.4142135623730952},"tests/intro.html#testing-on-emulators":{"tf":1.7320508075688773},"appendix/stupid-stats.html#what-next":{"tf":1.0},"appendix/stupid-stats.html#compilercalls":{"tf":1.0},"how-to-build-and-run.html#how-to-build-the-compiler-and-run-what-you-built":{"tf":1.0},"appendix/stupid-stats.html#appendix-a-a-tutorial-on-creating-a-drop-in-replacement-for-rustc":{"tf":3.0},"how-to-build-and-run.html#create-a-configtoml":{"tf":1.0},"appendix/stupid-stats.html#compilercontroller":{"tf":1.0},"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":2.8284271247461905},"conventions.html#use-todo-comments-for-things-you-dont-want-to-forget":{"tf":1.0},"tests/intro.html#other-tests":{"tf":2.0},"mir/visitor.html#mir-visitor":{"tf":1.0}},"df":14,"c":{"docs":{},"df":0,"h":{"docs":{},"df":0,"a":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{"rustdoc.html#cheat-sheet":{"tf":1.0},"how-to-build-and-run.html#creating-a-rustup-toolchain":{"tf":2.0}},"df":2}}}}}}},"t":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{"appendix/stupid-stats.html#appendix-a-a-tutorial-on-creating-a-drop-in-replacement-for-rustc":{"tf":1.0}},"df":1}}},"u":{"docs":{},"df":0,"c":{"docs":{},"df":0,"h":{"docs":{"rustc-driver.html#a-note-on-lifetimes":{"tf":1.0},"ty.html#the-tcx-and-how-it-uses-lifetimes":{"tf":1.0}},"df":2}},"r":{"docs":{"rustdoc.html#the-walking-tour-of-rustdoc":{"tf":1.0}},"df":1}},"p":{"docs":{"tests/adding.html#revisions":{"tf":1.0},"hir.html#out-of-band-storage-and-the--crate--type":{"tf":1.0},"hir.html#identifiers-in-the-hir":{"tf":1.0},"compiletest.html#header-commands":{"tf":1.0},"high-level-overview.html#crate-structure":{"tf":1.0},"name-resolution.html#overall-strategy":{"tf":1.0},"rustdoc.html#from-clean-to-crate":{"tf":1.0},"query.html#how-the-compiler-executes-a-query":{"tf":1.0},"conventions.html#line-length":{"tf":1.0},"variance.html#the-algorithm":{"tf":1.0},"conventions.html#copyright-notice":{"tf":1.4142135623730952},"appendix/stupid-stats.html#compilercalls":{"tf":1.0},"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.0},"compiletest.html#adding-a-new-header-command":{"tf":1.0},"query.html#queries-demand-driven-compilation":{"tf":1.0},"mir/index.html#key-mir-vocabulary":{"tf":1.0}},"df":16,"i":{"docs":{},"df":0,"c":{"docs":{"appendix/background.html#appendix-b-background-topics":{"tf":1.0},"query.html#queries-demand-driven-compilation":{"tf":1.0},"traits/goals-and-clauses.html#incomplete-chapter":{"tf":1.0},"macro-expansion.html#example":{"tf":1.0},"traits/hrtb.html#higher-ranked-trait-obligations":{"tf":1.0},"traits/index.html#trait-solving-new-style":{"tf":1.0}},"df":6}}},"l":{"docs":{},"df":0,"d":{"docs":{"type-inference.html#inference-variables":{"tf":1.0}},"df":1}},"d":{"docs":{},"df":0,"a":{"docs":{},"df":0,"y":{"docs":{"rustdoc.html#hot-potato":{"tf":1.0}},"df":1}},"o":{"docs":{"macro-expansion.html#procedural-macros":{"tf":1.0},"traits/specialization.html#specialization":{"tf":1.0},"traits/chalk-overview.html#testing":{"tf":1.0},"method-lookup.html#candidate-assembly":{"tf":1.0},"traits/resolution.html#selection-during-translation":{"tf":1.0},"traits/lowering-rules.html#transforming-the-lowered-where-clauses":{"tf":1.0},"macro-expansion.html#hygiene":{"tf":1.0},"conventions.html#use-todo-comments-for-things-you-dont-want-to-forget":{"tf":2.449489742783178},"type-checking.html#type-collection":{"tf":1.0},"macro-expansion.html#custom-derive":{"tf":1.0},"tests/intro.html#testing-on-emulators":{"tf":1.0},"name-resolution.html#todo":{"tf":1.0},"traits/slg.html#the-slg-solver":{"tf":1.0},"traits/hrtb.html#basic-matching-and-skolemization-leaks":{"tf":1.4142135623730952},"traits/resolution.html#candidate-assembly":{"tf":1.7320508075688773},"tests/intro.html#crater":{"tf":1.0},"tests/intro.html#testing-with-docker-images":{"tf":1.0},"traits/caching.html#where-clauses-and-the-local-vs-global-cache":{"tf":1.0}},"df":18}},"w":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"d":{"docs":{"conventions.html#line-length":{"tf":1.0},"high-level-overview.html#crate-structure":{"tf":1.0},"how-to-build-and-run.html#how-to-build-the-compiler-and-run-what-you-built":{"tf":1.0},"conventions.html#formatting-and-the-tidy-script":{"tf":1.0},"traits/lowering-to-logic.html#type-checking-normal-functions":{"tf":1.0}},"df":5}}}},"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"r":{"docs":{"method-lookup.html#candidate-assembly":{"tf":1.4142135623730952}},"df":1}}}},"y":{"docs":{"type-inference.html#creating-an-inference-context":{"tf":1.4142135623730952},"appendix/code-index.html#appendix-d-code-index":{"tf":1.4142135623730952},"traits/lowering-rules.html#transforming-the-lowered-where-clauses":{"tf":2.0},"query.html#invoking-queries":{"tf":1.0},"ty.html#import-conventions":{"tf":2.0},"param_env.html#parameter-environment":{"tf":1.0},"ty.html#the--ty--module-representing-types":{"tf":1.4142135623730952},"ty.html#allocating-and-working-with-types":{"tf":2.0},"appendix/glossary.html#appendix-c-glossary":{"tf":1.0}},"df":9,"p":{"docs":{},"df":0,"o":{"docs":{"name-resolution.html#name-resolution":{"tf":1.0}},"df":1},"e":{"docs":{"rustdoc.html#the-walking-tour-of-rustdoc":{"tf":1.0},"the-parser.html#the-parser":{"tf":1.0},"variance.html#the-algorithm":{"tf":2.8284271247461905},"ty.html#beyond-types-other-kinds-of-arena-allocated-data-structures":{"tf":2.0},"mir/borrowck.html#major-phases-of-the-borrow-checker":{"tf":1.0},"traits/goals-and-clauses.html#goals-and-clauses-meta-structure":{"tf":1.0},"traits/canonical-queries.html#canonical-queries":{"tf":1.7320508075688773},"miri.html#datastructures":{"tf":1.0},"appendix/background.html#what-is-a-free-region-or-a-free-variable-what-about-bound-region":{"tf":1.7320508075688773},"ty.html#the-tcx-and-how-it-uses-lifetimes":{"tf":3.0},"appendix/code-index.html#appendix-d-code-index":{"tf":2.449489742783178},"query.html#invoking-queries":{"tf":1.0},"macro-expansion.html#the-macro-parser":{"tf":1.0},"query.html#how-the-compiler-executes-a-query":{"tf":1.0},"mir/regionck.html#the-mir-type-check":{"tf":1.0},"traits/canonical-queries.html#examples":{"tf":3.872983346207417},"name-resolution.html#name-resolution":{"tf":1.0},"variance.html#addendum-variance-on-traits":{"tf":2.0},"method-lookup.html#method-lookup":{"tf":1.4142135623730952},"mir/index.html#mir-data-types":{"tf":2.449489742783178},"traits/associated-types.html#skolemized-associated-types":{"tf":3.4641016151377546},"ty.html#import-conventions":{"tf":1.4142135623730952},"rustc-driver.html#the-rustc-driver":{"tf":1.4142135623730952},"mir/index.html#introduction-to-mir":{"tf":1.0},"mir/regionck.html#final-example":{"tf":1.4142135623730952},"traits/associated-types.html#associated-type-projection-and-normalization":{"tf":3.4641016151377546},"type-inference.html#region-constraints":{"tf":1.0},"ty.html#the--ty--module-representing-types":{"tf":1.7320508075688773},"traits/lowering-rules.html#notation":{"tf":1.4142135623730952},"traits/canonicalization.html#canonicalizing-the-query-result":{"tf":1.0},"miri.html#miri":{"tf":1.4142135623730952},"tests/adding.html#normalization":{"tf":1.4142135623730952},"variance.html#trait-variance-and-vtable-resolution":{"tf":3.1622776601683797},"traits/resolution.html#selection-during-translation":{"tf":2.0},"traits/chalk-overview.html#well-formedness-checks":{"tf":1.0},"type-inference.html#inference-variables":{"tf":3.7416573867739415},"traits/goals-and-clauses.html#domain-goals":{"tf":4.358898943540674},"method-lookup.html#candidate-search":{"tf":1.7320508075688773},"traits/canonical-queries.html#a-trait-query-in-rustc":{"tf":2.0},"mir/regionck.html#mir-based-region-checking-nll":{"tf":1.7320508075688773},"traits/hrtb.html#basic-matching-and-skolemization-leaks":{"tf":1.7320508075688773},"traits/lowering-to-logic.html#rust-traits-and-logic":{"tf":2.23606797749979},"traits/resolution.html#overview":{"tf":1.0},"hir.html#out-of-band-storage-and-the--crate--type":{"tf":1.0},"method-lookup.html#candidate-assembly":{"tf":3.3166247903554},"traits/chalk-overview.html#intermediate-representation-ir":{"tf":1.0},"mir/passes.html#implementing-and-registering-a-pass":{"tf":1.0},"mir/regionck.html#skolemization-and-universes":{"tf":1.0},"traits/chalk-overview.html#lowering":{"tf":1.4142135623730952},"mir/regionck.html#universes-and-skolemized-region-elements":{"tf":1.0},"type-inference.html#subtyping-obligations":{"tf":1.7320508075688773},"traits/index.html#trait-solving-new-style":{"tf":2.0},"mir/regionck.html#what-is-a-universe":{"tf":3.1622776601683797},"miri.html#interpretation":{"tf":1.0},"traits/lowering-rules.html#associated-type-declarations":{"tf":2.6457513110645909},"rustc-driver.html#a-note-on-lifetimes":{"tf":1.0},"ty.html#allocating-and-working-with-types":{"tf":4.69041575982343},"query.html#queries-demand-driven-compilation":{"tf":1.0},"traits/associated-types.html#integration-with-unification":{"tf":2.0},"appendix/background.html#what-is-co--and-contra-variance":{"tf":1.0},"param_env.html#parameter-environment":{"tf":1.7320508075688773},"traits/associated-types.html#equality-and-associated-types":{"tf":1.4142135623730952},"type-inference.html#type-inference":{"tf":2.8284271247461905},"type-checking.html#type-collection":{"tf":3.0},"how-to-build-and-run.html#running-xpy-and-building-a-stage1-compiler":{"tf":1.0},"name-resolution.html#namespaces":{"tf":2.23606797749979},"query.html#adding-a-new-kind-of-query":{"tf":4.0},"variance.html#dependency-graph-management":{"tf":1.0},"incrcomp-debugging.html#dumping-the-graph":{"tf":1.0},"type-inference.html#creating-an-inference-context":{"tf":1.7320508075688773},"rustdoc.html#cheat-sheet":{"tf":1.0},"traits/lowering-rules.html#associated-type-values":{"tf":1.7320508075688773},"appendix/stupid-stats.html#overview-of-the-compilation-process":{"tf":1.4142135623730952},"variance.html#variance-and-associated-types":{"tf":2.6457513110645909},"rustdoc.html#from-clean-to-crate":{"tf":1.0},"incrcomp-debugging.html#tracking-down-incorrect-edges":{"tf":1.0},"type-inference.html#extracting-region-constraints":{"tf":1.4142135623730952},"variance.html#variance-and-object-types":{"tf":3.4641016151377546},"mir/passes.html#mir-passes":{"tf":1.0},"appendix/glossary.html#appendix-c-glossary":{"tf":5.291502622129181},"traits/specialization.html#specialization":{"tf":1.7320508075688773},"traits/lowering-to-logic.html#type-checking-generic-functions-beyond-horn-clauses":{"tf":3.4641016151377546},"high-level-overview.html#crate-structure":{"tf":1.4142135623730952},"high-level-overview.html#the-main-stages-of-compilation":{"tf":3.605551275463989},"traits/caching.html#caching-and-subtle-considerations-therewith":{"tf":1.7320508075688773},"name-resolution.html#scopes-and-ribs":{"tf":1.4142135623730952},"variance.html#constraints":{"tf":1.4142135623730952},"traits/canonical-queries.html#the-traditional-interactive-prolog-query":{"tf":1.0},"type-checking.html#type-checking":{"tf":2.0},"traits/associated-types.html#projection-equality":{"tf":2.23606797749979},"traits/canonicalization.html#canonicalization":{"tf":2.0},"mir/regionck.html#another-example":{"tf":1.0},"traits/caching.html#an-example":{"tf":1.0},"variance.html#variance-of-type-and-lifetime-parameters":{"tf":3.605551275463989},"traits/resolution.html#candidate-assembly":{"tf":3.7416573867739415},"rustdoc.html#from-crate-to-clean":{"tf":2.23606797749979},"traits/lowering-to-logic.html#type-checking-normal-functions":{"tf":3.1622776601683797},"traits/resolution.html#confirmation":{"tf":2.0},"type-inference.html#trying-equality":{"tf":1.4142135623730952},"diag.html#suggestions":{"tf":1.4142135623730952},"method-lookup.html#steps":{"tf":1.4142135623730952},"traits/resolution.html#major-concepts":{"tf":1.7320508075688773},"traits/goals-and-clauses.html#coinductive-goals":{"tf":2.23606797749979},"traits/resolution.html#selection":{"tf":1.4142135623730952},"traits/canonicalization.html#canonicalizing-the-query":{"tf":1.4142135623730952},"mir/index.html#key-mir-vocabulary":{"tf":1.4142135623730952},"tests/adding.html#revisions":{"tf":1.0},"mir/regionck.html#subtyping-and-skolemization":{"tf":1.7320508075688773},"diag.html#error-messages":{"tf":1.0},"mir/regionck.html#universal-regions":{"tf":1.0},"type-inference.html#enforcing-equality--subtyping":{"tf":2.449489742783178},"mir/visitor.html#mir-visitor":{"tf":1.7320508075688773}},"df":112,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{"type-inference.html#enforcing-equality--subtyping":{"tf":1.0}},"df":1}}}}},"/":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{},"df":0,"f":{"docs":{},"df":0,"e":{"docs":{},"df":0,"t":{"docs":{},"df":0,"i":{"docs":{},"df":0,"m":{"docs":{"appendix/glossary.html#appendix-c-glossary":{"tf":1.4142135623730952}},"df":1}}}}}}},"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"g":{"docs":{},"df":0,"i":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{"appendix/glossary.html#appendix-c-glossary":{"tf":1.0},"variance.html#the-algorithm":{"tf":1.0}},"df":2}}}}}}},"_":{"docs":{},"df":0,"o":{"docs":{},"df":0,"f":{"docs":{"query.html#how-the-compiler-executes-a-query":{"tf":2.23606797749979},"query.html#invoking-queries":{"tf":1.0},"query.html#adding-a-new-kind-of-query":{"tf":1.4142135623730952}},"df":3,"(":{"docs":{},"df":0,"d":{"docs":{},"df":0,"e":{"docs":{},"df":0,"f":{"docs":{},"df":0,"_":{"docs":{},"df":0,"i":{"docs":{},"df":0,"d":{"docs":{"query.html#queries-demand-driven-compilation":{"tf":1.0}},"df":1}}}}}}},"<":{"docs":{},"df":0,"'":{"docs":{},"df":0,"t":{"docs":{},"df":0,"c":{"docs":{},"df":0,"x":{"docs":{"query.html#adding-a-new-kind-of-query":{"tf":1.4142135623730952}},"df":1}}}}}}}},"o":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{},"df":0,"v":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"(":{"docs":{},"df":0,"t":{"docs":{"traits/lowering-module.html#unit-tests":{"tf":1.0}},"df":1}}}}}}}}},"f":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"m":{"docs":{},"df":0,"(":{"docs":{},"df":0,"d":{"docs":{},"df":0,"e":{"docs":{},"df":0,"f":{"docs":{},"df":0,"i":{"docs":{},"df":0,"d":{"docs":{"query.html#adding-a-new-kind-of-query":{"tf":1.4142135623730952}},"df":1}}}}}}}}}}}},"s":{"docs":{},"df":0,"/":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"g":{"docs":{},"df":0,"i":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{"traits/canonicalization.html#canonicalization":{"tf":1.0}},"df":1}}}}}}}},"'":{"docs":{"param_env.html#parameter-environment":{"tf":1.0}},"df":1},"c":{"docs":{},"df":0,"k":{"docs":{},"df":0,"t":{"docs":{"incrcomp-debugging.html#dumping-the-graph":{"tf":2.449489742783178},"high-level-overview.html#the-main-stages-of-compilation":{"tf":1.0}},"df":2,"a":{"docs":{},"df":0,"b":{"docs":{},"df":0,"l":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"(":{"docs":{},"df":0,"b":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{"incrcomp-debugging.html#tracking-down-incorrect-edges":{"tf":1.0},"incrcomp-debugging.html#dumping-the-graph":{"tf":1.0},"incrcomp-debugging.html#testing-the-dependency-graph":{"tf":1.0}},"df":3}}}}}}}}}}},"h":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"k":{"docs":{"rustc-driver.html#the-rustc-driver":{"tf":1.0}},"df":1}}}}},"v":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{},"df":0,"s":{"docs":{},"df":0,"<":{"docs":{},"df":0,"'":{"docs":{},"df":0,"t":{"docs":{},"df":0,"c":{"docs":{},"df":0,"x":{"docs":{"ty.html#allocating-and-working-with-types":{"tf":1.0}},"df":1}}}}}}}}}}}}}},"i":{"docs":{},"df":0,"c":{"docs":{"method-lookup.html#method-lookup":{"tf":1.0},"tests/intro.html#testing-with-docker-images":{"tf":1.0},"type-inference.html#enforcing-equality--subtyping":{"tf":1.0},"compiler-debugging.html#getting-logging-output":{"tf":1.0},"mir/visitor.html#mir-visitor":{"tf":1.0},"compiletest.html#introduction":{"tf":1.4142135623730952},"walkthrough.html#walkthrough-a-typical-contribution":{"tf":1.0},"mir/passes.html#implementing-and-registering-a-pass":{"tf":1.0},"conventions.html#copyright-notice":{"tf":1.0},"tests/intro.html#other-tests":{"tf":1.4142135623730952},"appendix/glossary.html#appendix-c-glossary":{"tf":1.0},"tests/adding.html#adding-new-tests":{"tf":1.0},"traits/canonical-queries.html#a-trait-query-in-rustc":{"tf":1.4142135623730952},"ty.html#beyond-types-other-kinds-of-arena-allocated-data-structures":{"tf":1.0},"compiletest.html#adding-a-new-header-command":{"tf":1.7320508075688773},"query.html#cycles-between-queries":{"tf":1.0},"hir.html#hir-bodies":{"tf":1.0},"query.html#adding-a-new-kind-of-query":{"tf":1.4142135623730952}},"df":18}}},"c":{"docs":{},"df":0,"t":{"docs":{},"df":0,"x":{"docs":{},"df":0,"t":{"docs":{"ty.html#the--ty--module-representing-types":{"tf":1.0},"const-eval.html#constant-evaluation":{"tf":1.0},"ty.html#the-tcx-and-how-it-uses-lifetimes":{"tf":1.7320508075688773},"ty.html#import-conventions":{"tf":1.4142135623730952},"miri.html#miri":{"tf":1.0},"rustc-driver.html#the-rustc-driver":{"tf":1.0},"query.html#adding-a-new-kind-of-query":{"tf":1.0},"rustdoc.html#from-soup-to-nuts":{"tf":1.0}},"df":8,"<":{"docs":{},"df":0,"'":{"docs":{},"df":0,"a":{"docs":{"ty.html#the-tcx-and-how-it-uses-lifetimes":{"tf":1.7320508075688773},"compiler-debugging.html#expensive-operations-in-logs":{"tf":1.0}},"df":2},"c":{"docs":{},"df":0,"x":{"docs":{"appendix/code-index.html#appendix-d-code-index":{"tf":1.0},"mir/visitor.html#mir-visitor":{"tf":1.0},"query.html#how-the-compiler-executes-a-query":{"tf":1.4142135623730952}},"df":3}}}}}}}},".":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"i":{"docs":{"ty.html#allocating-and-working-with-types":{"tf":1.4142135623730952}},"df":1}}}},":":{"docs":{},"df":0,":":{"docs":{},"df":0,"p":{"docs":{},"df":0,"o":{"docs":{},"df":0,"l":{"docs":{},"df":0,"y":{"docs":{},"df":0,"t":{"docs":{},"df":0,"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"f":{"docs":{"traits/hrtb.html#basic-matching-and-skolemization-leaks":{"tf":1.0}},"df":1}}}}}}}}}}}},"{":{"docs":{},"df":0,"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"l":{"docs":{},"df":0,"f":{"docs":{"ty.html#import-conventions":{"tf":1.0}},"df":1}}}}},"q":{"docs":{},"df":0,"u":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"f":{"docs":{},"df":0,"o":{"docs":{},"df":0,"o":{"docs":{},"df":0,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"f":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"c":{"docs":{"mir/passes.html#stealing":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}},"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{},"df":0,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{"query.html#adding-a-new-kind-of-query":{"tf":1.0}},"df":1}}}}}}}}},"m":{"docs":{},"df":0,"a":{"docs":{},"df":0,"p":{"docs":{},"df":0,"s":{"docs":{},"df":0,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"k":{"docs":{},"df":0,"e":{"docs":{},"df":0,"y":{"docs":{},"df":0,"s":{"docs":{},"df":0,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"k":{"docs":{},"df":0,"e":{"docs":{},"df":0,"y":{"docs":{"query.html#adding-a-new-kind-of-query":{"tf":1.0}},"df":1}}}}}}}}},"q":{"docs":{},"df":0,"u":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{"query.html#cycles-between-queries":{"tf":1.0}},"df":1,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"t":{"docs":{},"df":0,"y":{"docs":{},"df":0,"p":{"docs":{},"df":0,"e":{"docs":{},"df":0,"_":{"docs":{},"df":0,"o":{"docs":{},"df":0,"f":{"docs":{"query.html#adding-a-new-kind-of-query":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"df":0,"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"f":{"docs":{},"df":0,"<":{"docs":{},"df":0,"'":{"docs":{},"df":0,"t":{"docs":{},"df":0,"c":{"docs":{},"df":0,"x":{"docs":{"ty.html#import-conventions":{"tf":1.0}},"df":1}}}}}}}}}}}},"y":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"y":{"docs":{},"df":0,"(":{"docs":{},"df":0,"e":{"docs":{},"df":0,"l":{"docs":{},"df":0,"e":{"docs":{},"df":0,"m":{"docs":{},"df":0,"_":{"docs":{},"df":0,"t":{"docs":{},"df":0,"i":{"docs":{"ty.html#allocating-and-working-with-types":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}},"<":{"docs":{},"df":0,"'":{"docs":{},"df":0,"t":{"docs":{},"df":0,"c":{"docs":{},"df":0,"x":{"docs":{"query.html#how-the-compiler-executes-a-query":{"tf":1.0},"type-inference.html#inference-variables":{"tf":1.0},"appendix/code-index.html#appendix-d-code-index":{"tf":1.0},"ty.html#allocating-and-working-with-types":{"tf":2.23606797749979},"type-checking.html#type-collection":{"tf":1.4142135623730952},"query.html#adding-a-new-kind-of-query":{"tf":1.7320508075688773}},"df":6}}}}},"s":{"docs":{},"df":0,"<":{"docs":{},"df":0,"'":{"docs":{},"df":0,"t":{"docs":{},"df":0,"c":{"docs":{},"df":0,"x":{"docs":{"ty.html#allocating-and-working-with-types":{"tf":1.0}},"df":1}}}}}}},"l":{"docs":{"appendix/glossary.html#appendix-c-glossary":{"tf":1.4142135623730952}},"df":1},"c":{"docs":{},"df":0,"x":{"docs":{"ty.html#allocating-and-working-with-types":{"tf":2.449489742783178},"query.html#how-the-compiler-executes-a-query":{"tf":3.3166247903554},"ty.html#the--ty--module-representing-types":{"tf":1.0},"query.html#adding-a-new-kind-of-query":{"tf":1.0},"type-inference.html#creating-an-inference-context":{"tf":1.4142135623730952},"mir/visitor.html#mir-visitor":{"tf":1.7320508075688773},"mir/passes.html#stealing":{"tf":1.0},"diag.html#declaring-a-lint":{"tf":1.4142135623730952},"appendix/glossary.html#appendix-c-glossary":{"tf":1.7320508075688773},"ty.html#beyond-types-other-kinds-of-arena-allocated-data-structures":{"tf":1.0},"traits/caching.html#where-clauses-and-the-local-vs-global-cache":{"tf":1.0},"mir/passes.html#implementing-and-registering-a-pass":{"tf":1.0},"ty.html#the-tcx-and-how-it-uses-lifetimes":{"tf":3.4641016151377546},"query.html#invoking-queries":{"tf":1.0},"hir.html#the-hir-map":{"tf":1.0},"appendix/code-index.html#appendix-d-code-index":{"tf":1.4142135623730952},"compiler-debugging.html#expensive-operations-in-logs":{"tf":2.8284271247461905}},"df":17,".":{"docs":{},"df":0,"p":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"m":{"docs":{},"df":0,"_":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"v":{"docs":{},"df":0,"(":{"docs":{},"df":0,"l":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"g":{"docs":{},"df":0,"t":{"docs":{},"df":0,"h":{"docs":{},"df":0,"_":{"docs":{},"df":0,"d":{"docs":{},"df":0,"e":{"docs":{},"df":0,"f":{"docs":{},"df":0,"_":{"docs":{},"df":0,"i":{"docs":{},"df":0,"d":{"docs":{"miri.html#miri":{"tf":1.0}},"df":1}}}}}}}}}}}}},"d":{"docs":{},"df":0,"e":{"docs":{},"df":0,"f":{"docs":{},"df":0,"_":{"docs":{},"df":0,"i":{"docs":{},"df":0,"d":{"docs":{"param_env.html#parameter-environment":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}},"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"s":{"docs":{},"df":0,".":{"docs":{},"df":0,"d":{"docs":{},"df":0,"e":{"docs":{},"df":0,"l":{"docs":{},"df":0,"a":{"docs":{},"df":0,"y":{"docs":{},"df":0,"_":{"docs":{},"df":0,"s":{"docs":{},"df":0,"p":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"_":{"docs":{},"df":0,"b":{"docs":{},"df":0,"u":{"docs":{},"df":0,"g":{"docs":{},"df":0,"(":{"docs":{},"df":0,"s":{"docs":{},"df":0,"o":{"docs":{},"df":0,"m":{"docs":{},"df":0,"e":{"docs":{},"df":0,"_":{"docs":{},"df":0,"s":{"docs":{},"df":0,"p":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{"query.html#cycles-between-queries":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}}}}}}}}}}},"u":{"docs":{},"df":0,"b":{"docs":{},"df":0,"q":{"docs":{},"df":0,"u":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"y":{"docs":{},"df":0,"3":{"docs":{"incremental-compilation.html#the-query-dag":{"tf":1.0}},"df":1},"2":{"docs":{"incremental-compilation.html#the-query-dag":{"tf":1.0}},"df":1},"1":{"docs":{"incremental-compilation.html#the-query-dag":{"tf":1.0}},"df":1}}}}}}}}},"i":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"m":{"docs":{},"df":0,"_":{"docs":{},"df":0,"p":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{},"df":0,"h":{"docs":{},"df":0,"_":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"r":{"docs":{},"df":0,"(":{"docs":{},"df":0,"k":{"docs":{},"df":0,"e":{"docs":{},"df":0,"y":{"docs":{"query.html#adding-a-new-kind-of-query":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}},"n":{"docs":{},"df":0,"f":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"_":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{},"df":0,"x":{"docs":{},"df":0,"t":{"docs":{"type-inference.html#creating-an-inference-context":{"tf":1.0}},"df":1,"(":{"docs":{},"df":0,")":{"docs":{},"df":0,".":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"(":{"docs":{},"df":0,"|":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"f":{"docs":{},"df":0,"c":{"docs":{},"df":0,"x":{"docs":{"type-inference.html#creating-an-inference-context":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"p":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"t":{"docs":{},"df":0,"_":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"n":{"docs":{"miri.html#datastructures":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}},"m":{"docs":{},"df":0,"k":{"docs":{},"df":0,"_":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"y":{"docs":{},"df":0,"(":{"docs":{},"df":0,"e":{"docs":{},"df":0,"l":{"docs":{},"df":0,"e":{"docs":{},"df":0,"m":{"docs":{},"df":0,"_":{"docs":{},"df":0,"t":{"docs":{},"df":0,"i":{"docs":{"ty.html#allocating-and-working-with-types":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}},"a":{"docs":{},"df":0,"l":{"docs":{},"df":0,"l":{"docs":{},"df":0,"o":{"docs":{},"df":0,"c":{"docs":{},"df":0,"_":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{},"df":0,"_":{"docs":{},"df":0,"m":{"docs":{},"df":0,"i":{"docs":{},"df":0,"r":{"docs":{"mir/passes.html#stealing":{"tf":1.0}},"df":1}}}}}}}}}}}}}}},"t":{"docs":{},"df":0,"y":{"docs":{},"df":0,"p":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,".":{"docs":{},"df":0,"b":{"docs":{},"df":0,"o":{"docs":{},"df":0,"o":{"docs":{},"df":0,"l":{"docs":{"ty.html#allocating-and-working-with-types":{"tf":1.0}},"df":1}}}},"i":{"docs":{},"df":0,"3":{"docs":{},"df":0,"2":{"docs":{"ty.html#beyond-types-other-kinds-of-arena-allocated-data-structures":{"tf":1.0}},"df":1}}},"c":{"docs":{},"df":0,"h":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{"ty.html#allocating-and-working-with-types":{"tf":1.0}},"df":1}}}},"u":{"docs":{},"df":0,"3":{"docs":{},"df":0,"2":{"docs":{"ty.html#beyond-types-other-kinds-of-arena-allocated-data-structures":{"tf":1.0}},"df":1}}}}},"_":{"docs":{},"df":0,"o":{"docs":{},"df":0,"f":{"docs":{"query.html#adding-a-new-kind-of-query":{"tf":1.0}},"df":1,"(":{"docs":{},"df":0,"s":{"docs":{},"df":0,"o":{"docs":{},"df":0,"m":{"docs":{},"df":0,"e":{"docs":{},"df":0,"_":{"docs":{},"df":0,"d":{"docs":{},"df":0,"e":{"docs":{},"df":0,"f":{"docs":{},"df":0,"_":{"docs":{},"df":0,"i":{"docs":{},"df":0,"d":{"docs":{"query.html#invoking-queries":{"tf":1.0}},"df":1}}}}}}}}}}},"d":{"docs":{},"df":0,"e":{"docs":{},"df":0,"f":{"docs":{},"df":0,"_":{"docs":{},"df":0,"i":{"docs":{},"df":0,"d":{"docs":{"query.html#how-the-compiler-executes-a-query":{"tf":1.0}},"df":1}}}}}}}}}}}}}},"h":{"docs":{},"df":0,"i":{"docs":{},"df":0,"r":{"docs":{"hir.html#the-hir-map":{"tf":1.0},"appendix/glossary.html#appendix-c-glossary":{"tf":1.0}},"df":2,".":{"docs":{},"df":0,"e":{"docs":{},"df":0,"x":{"docs":{},"df":0,"p":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{},"df":0,"_":{"docs":{},"df":0,"e":{"docs":{},"df":0,"x":{"docs":{},"df":0,"p":{"docs":{},"df":0,"r":{"docs":{},"df":0,"(":{"docs":{},"df":0,"n":{"docs":{"hir.html#the-hir-map":{"tf":1.0}},"df":1}}}}}}}}}}}}},"g":{"docs":{},"df":0,"e":{"docs":{},"df":0,"t":{"docs":{},"df":0,"_":{"docs":{},"df":0,"p":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{},"df":0,"_":{"docs":{},"df":0,"n":{"docs":{},"df":0,"o":{"docs":{},"df":0,"d":{"docs":{},"df":0,"e":{"docs":{},"df":0,"(":{"docs":{},"df":0,"n":{"docs":{"hir.html#the-hir-map":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}},"f":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{},"df":0,"(":{"docs":{},"df":0,"n":{"docs":{"hir.html#the-hir-map":{"tf":1.0}},"df":1}}}}}},"a":{"docs":{},"df":0,"s":{"docs":{},"df":0,"_":{"docs":{},"df":0,"l":{"docs":{},"df":0,"o":{"docs":{},"df":0,"c":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{},"df":0,"_":{"docs":{},"df":0,"n":{"docs":{},"df":0,"o":{"docs":{},"df":0,"d":{"docs":{},"df":0,"e":{"docs":{},"df":0,"_":{"docs":{},"df":0,"i":{"docs":{},"df":0,"d":{"docs":{},"df":0,"(":{"docs":{},"df":0,"d":{"docs":{},"df":0,"e":{"docs":{},"df":0,"f":{"docs":{},"df":0,"_":{"docs":{},"df":0,"i":{"docs":{},"df":0,"d":{"docs":{"hir.html#the-hir-map":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}}}}}}}}}},"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"_":{"docs":{},"df":0,"e":{"docs":{},"df":0,"v":{"docs":{"miri.html#interpretation":{"tf":1.7320508075688773},"miri.html#miri":{"tf":1.7320508075688773}},"df":2,"a":{"docs":{},"df":0,"l":{"docs":{},"df":0,"(":{"docs":{},"df":0,"p":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"m":{"docs":{},"df":0,"_":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"v":{"docs":{},"df":0,".":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{},"df":0,"(":{"docs":{},"df":0,"g":{"docs":{},"df":0,"i":{"docs":{},"df":0,"d":{"docs":{"miri.html#miri":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}}}}}}}}}}}},">":{"docs":{},"df":0,">":{"docs":{},"df":0,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"p":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"t":{"docs":{},"df":0,"_":{"docs":{},"df":0,"f":{"docs":{},"df":0,"u":{"docs":{},"df":0,"l":{"docs":{},"df":0,"f":{"docs":{},"df":0,"i":{"docs":{},"df":0,"l":{"docs":{},"df":0,"l":{"docs":{},"df":0,"m":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{},"df":0,"_":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{"compiler-debugging.html#getting-a-backtrace-for-errors":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}},"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"l":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{},"df":0,"i":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"_":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{"compiler-debugging.html#getting-a-backtrace-for-errors":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}}}}}}}},"(":{"docs":{},"df":0,"t":{"docs":{},"df":0,"c":{"docs":{},"df":0,"x":{"docs":{"query.html#how-the-compiler-executes-a-query":{"tf":1.4142135623730952},"ty.html#the-tcx-and-how-it-uses-lifetimes":{"tf":1.4142135623730952}},"df":2}}}}}}},"'":{"docs":{"rustdoc.html#dotting-is-and-crossing-ts":{"tf":1.0}},"df":1}},"w":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"'":{"docs":{},"df":0,"t":{"docs":{"diag.html#error-messages":{"tf":1.0}},"df":1}}}}},"i":{"docs":{},"df":0,"r":{"docs":{},"df":0,"d":{"docs":{"traits/caching.html#where-clauses-and-the-local-vs-global-cache":{"tf":1.0},"diag.html#error-messages":{"tf":1.0},"compiler-debugging.html#debugging-llvm":{"tf":1.0}},"df":3}}},"n":{"docs":{},"df":0,"t":{"docs":{"type-inference.html#enforcing-equality--subtyping":{"tf":1.0}},"df":1}},"b":{"docs":{"rustdoc.html#cheat-sheet":{"tf":1.0}},"df":1},"l":{"docs":{},"df":0,"l":{"docs":{"traits/associated-types.html#associated-type-projection-and-normalization":{"tf":1.0},"method-lookup.html#candidate-assembly":{"tf":1.0},"mir/index.html#the-mir-mid-level-ir":{"tf":1.0},"traits/wf.html#well-formedness-checking":{"tf":1.4142135623730952},"tests/running.html#running-a-subset-of-the-test-suites":{"tf":1.0},"incremental-compilation.html#the-try-mark-green-algorithm":{"tf":1.0},"traits/canonicalization.html#executing-the-query":{"tf":1.0},"variance.html#constraints":{"tf":1.4142135623730952},"traits/goals-and-clauses.html#domain-goals":{"tf":1.7320508075688773},"tests/intro.html#the-compiler-testing-framework":{"tf":1.0},"tests/adding.html#normalization":{"tf":1.0},"method-lookup.html#steps":{"tf":1.0},"traits/lowering-to-logic.html#type-checking-normal-functions":{"tf":1.4142135623730952},"appendix/glossary.html#appendix-c-glossary":{"tf":2.0},"about-this-guide.html#about-this-guide":{"tf":1.4142135623730952},"query.html#how-the-compiler-executes-a-query":{"tf":1.0},"tests/intro.html#other-tests":{"tf":1.0},"query.html#adding-a-new-kind-of-query":{"tf":1.0},"traits/lowering-rules.html#trait-header":{"tf":2.0},"high-level-overview.html#the-main-stages-of-compilation":{"tf":1.4142135623730952},"traits/chalk-overview.html#intermediate-representation-ir":{"tf":1.0},"tests/running.html#running-tests":{"tf":1.0},"type-checking.html#type-checking":{"tf":1.0},"the-parser.html#the-parser":{"tf":1.0},"appendix/background.html#what-is-a-free-region-or-a-free-variable-what-about-bound-region":{"tf":1.0},"traits/chalk-overview.html#well-formedness-checks":{"tf":1.4142135623730952},"rustdoc.html#from-crate-to-clean":{"tf":1.0},"incremental-compilation.html#the-basic-algorithm":{"tf":1.0},"traits/canonicalization.html#canonicalization":{"tf":1.0},"hir.html#out-of-band-storage-and-the--crate--type":{"tf":1.0},"traits/lowering-rules.html#associated-type-declarations":{"tf":1.7320508075688773}},"df":31,"f":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"m":{"docs":{"traits/lowering-rules.html#trait-header":{"tf":2.0},"traits/goals-and-clauses.html#coinductive-goals":{"tf":1.0},"traits/lowering-rules.html#associated-type-declarations":{"tf":1.0}},"df":3,"e":{"docs":{},"df":0,"d":{"docs":{},"df":0,"(":{"docs":{},"df":0,"(":{"docs":{},"df":0,"t":{"docs":{},"df":0,"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{},"df":0,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"a":{"docs":{},"df":0,"s":{"docs":{},"df":0,"s":{"docs":{},"df":0,"o":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{},"df":0,"y":{"docs":{},"df":0,"p":{"docs":{},"df":0,"e":{"docs":{},"df":0,")":{"docs":{},"df":0,"<":{"docs":{},"df":0,"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"l":{"docs":{},"df":0,"f":{"docs":{"traits/lowering-rules.html#associated-type-declarations":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}}}}}},"v":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"<":{"docs":{},"df":0,"i":{"docs":{},"df":0,"3":{"docs":{},"df":0,"2":{"docs":{"traits/goals-and-clauses.html#domain-goals":{"tf":1.4142135623730952}},"df":1}}},"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"r":{"docs":{"traits/goals-and-clauses.html#domain-goals":{"tf":1.0}},"df":1}}}}}}},"p":{"docs":{},"df":0,"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"j":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{"traits/goals-and-clauses.html#domain-goals":{"tf":1.0},"traits/lowering-rules.html#transforming-the-lowered-where-clauses":{"tf":1.0}},"df":2}}}}}}},"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"l":{"docs":{},"df":0,"f":{"docs":{"traits/lowering-rules.html#trait-header":{"tf":1.0}},"df":1}}}},"i":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"m":{"docs":{"traits/goals-and-clauses.html#domain-goals":{"tf":1.0}},"df":1}}}},"w":{"docs":{},"df":0,"c":{"docs":{"traits/lowering-rules.html#transforming-the-lowered-where-clauses":{"tf":1.0},"traits/lowering-rules.html#trait-header":{"tf":1.0}},"df":2}},"t":{"docs":{"traits/lowering-rules.html#trait-header":{"tf":2.449489742783178},"traits/goals-and-clauses.html#domain-goals":{"tf":1.4142135623730952}},"df":2,"y":{"docs":{},"df":0,"p":{"docs":{"traits/goals-and-clauses.html#domain-goals":{"tf":1.0}},"df":1}},"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"f":{"docs":{"traits/lowering-rules.html#trait-header":{"tf":1.0},"traits/goals-and-clauses.html#domain-goals":{"tf":1.0},"traits/lowering-rules.html#transforming-the-lowered-where-clauses":{"tf":1.0}},"df":3}}}}}}}}}}}}}}}}},"'":{"docs":{},"df":0,"v":{"docs":{"mir/regionck.html#subtyping-and-skolemization":{"tf":1.0},"traits/lowering-to-logic.html#type-checking-normal-functions":{"tf":1.0},"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.4142135623730952},"traits/canonicalization.html#executing-the-query":{"tf":1.4142135623730952},"traits/associated-types.html#associated-type-projection-and-normalization":{"tf":1.0},"mir/regionck.html#final-example":{"tf":1.0}},"df":6},"d":{"docs":{"traits/hrtb.html#higher-ranked-trait-obligations":{"tf":1.0}},"df":1},"l":{"docs":{},"df":0,"l":{"docs":{"mir/regionck.html#skolemization-and-outlives-constraints":{"tf":1.0},"traits/lowering-to-logic.html#rust-traits-and-logic":{"tf":1.0},"traits/canonical-queries.html#examples":{"tf":1.0},"method-lookup.html#candidate-assembly":{"tf":1.0},"traits/canonical-queries.html#a-trait-query-in-rustc":{"tf":1.7320508075688773},"traits/canonicalization.html#canonicalizing-the-query":{"tf":1.0},"traits/lowering-to-logic.html#type-checking-normal-functions":{"tf":1.0},"how-to-build-and-run.html#other-xpy-commands":{"tf":1.0},"mir/index.html#key-mir-vocabulary":{"tf":1.0},"incremental-compilation.html#incremental-compilation":{"tf":1.0},"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.0},"query.html#adding-a-new-kind-of-query":{"tf":1.0},"traits/goals-and-clauses.html#domain-goals":{"tf":1.0},"mir/regionck.html#final-example":{"tf":1.0},"mir/regionck.html#what-is-a-universe":{"tf":1.0}},"df":15}},"r":{"docs":{"rustdoc.html#hot-potato":{"tf":1.0},"traits/canonicalization.html#executing-the-query":{"tf":1.0},"traits/resolution.html#candidate-assembly":{"tf":1.0},"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.7320508075688773},"mir/regionck.html#what-is-a-universe":{"tf":1.0},"traits/lowering-to-logic.html#rust-traits-and-logic":{"tf":1.0},"appendix/background.html#what-is-a-free-region-or-a-free-variable-what-about-bound-region":{"tf":1.0},"traits/canonical-queries.html#examples":{"tf":1.0}},"df":8}}},"h":{"docs":{},"df":0,"e":{"docs":{},"df":0,"t":{"docs":{},"df":0,"h":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"incrcomp-debugging.html#testing-the-dependency-graph":{"tf":1.7320508075688773},"traits/specialization.html#specialization":{"tf":1.0},"method-lookup.html#candidate-assembly":{"tf":1.0},"rustdoc.html#from-crate-to-clean":{"tf":1.0},"diag.html#suggestions":{"tf":1.0},"traits/canonical-queries.html#canonical-queries":{"tf":1.0},"traits/resolution.html#selection":{"tf":1.7320508075688773},"high-level-overview.html#the-main-stages-of-compilation":{"tf":1.0},"traits/resolution.html#major-concepts":{"tf":1.0},"traits/resolution.html#candidate-assembly":{"tf":2.0},"mir/regionck.html#what-is-a-universe":{"tf":1.0},"appendix/stupid-stats.html#appendix-a-a-tutorial-on-creating-a-drop-in-replacement-for-rustc":{"tf":1.0},"mir/index.html#key-mir-vocabulary":{"tf":1.0},"traits/canonical-queries.html#examples":{"tf":1.0},"compiler-debugging.html#debugging-llvm":{"tf":1.4142135623730952},"param_env.html#parameter-environment":{"tf":1.0},"variance.html#trait-variance-and-vtable-resolution":{"tf":1.4142135623730952},"variance.html#variance-of-type-and-lifetime-parameters":{"tf":1.0},"traits/index.html#trait-solving-new-style":{"tf":1.0},"compiletest.html#header-commands":{"tf":1.0},"method-lookup.html#candidate-search":{"tf":1.0},"appendix/stupid-stats.html#compilercalls":{"tf":1.0},"appendix/stupid-stats.html#compilercontroller":{"tf":1.7320508075688773},"variance.html#constraints":{"tf":1.0},"incremental-compilation.html#the-basic-algorithm":{"tf":1.0}},"df":25}}}},"n":{"docs":{},"df":0,"e":{"docs":{},"df":0,"v":{"docs":{"traits/associated-types.html#integration-with-unification":{"tf":1.0},"compiler-debugging.html#expensive-operations-in-logs":{"tf":1.0},"traits/caching.html#where-clauses-and-the-local-vs-global-cache":{"tf":1.0},"diag.html#span":{"tf":1.0},"appendix/background.html#what-is-a-control-flow-graph":{"tf":1.0},"mir/visitor.html#mir-visitor":{"tf":1.0},"macro-expansion.html#example":{"tf":1.4142135623730952},"tests/adding.html#normalization":{"tf":1.0},"rustdoc.html#from-clean-to-crate":{"tf":1.0}},"df":9}}},"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"a":{"docs":{"hir.html#out-of-band-storage-and-the--crate--type":{"tf":1.0}},"df":1}}}},"o":{"docs":{},"df":0,"s":{"docs":{},"df":0,"e":{"docs":{"variance.html#variance-and-object-types":{"tf":1.0},"mir/passes.html#seeing-how-the-mir-changes-as-the-compiler-executes":{"tf":1.0},"param_env.html#parameter-environment":{"tf":1.0},"type-inference.html#inference-variables":{"tf":1.0}},"df":4}},"l":{"docs":{},"df":0,"e":{"docs":{"tests/adding.html#revisions":{"tf":1.0},"name-resolution.html#overall-strategy":{"tf":1.0},"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.0},"tests/running.html#running-tests":{"tf":1.0},"hir.html#out-of-band-storage-and-the--crate--type":{"tf":1.0},"variance.html#dependency-graph-management":{"tf":1.0},"traits/canonicalization.html#canonicalizing-the-query-result":{"tf":1.0}},"df":7}}},"i":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"p":{"docs":{},"df":0,"a":{"docs":{},"df":0,"c":{"docs":{"compiletest.html#adding-a-new-header-command":{"tf":1.0},"rustdoc.html#hot-potato":{"tf":1.4142135623730952}},"df":2}}}}}},"l":{"docs":{},"df":0,"e":{"docs":{},"df":0,"t":{"docs":{},"df":0,"r":{"docs":{},"df":0,"u":{"docs":{"diag.html#declaring-a-lint":{"tf":1.7320508075688773}},"df":1}}},"_":{"docs":{},"df":0,"t":{"docs":{},"df":0,"r":{"docs":{},"df":0,"u":{"docs":{"diag.html#declaring-a-lint":{"tf":1.4142135623730952}},"df":1}}}}}}},"a":{"docs":{},"df":0,"t":{"docs":{},"df":0,"'":{"docs":{"conventions.html#prefer-exhaustive-matches":{"tf":1.0}},"df":1},"e":{"docs":{},"df":0,"v":{"docs":{"variance.html#variance-and-object-types":{"tf":1.0},"traits/canonicalization.html#canonicalizing-the-query-result":{"tf":1.0},"variance.html#trait-variance-and-vtable-resolution":{"tf":1.0},"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.0},"mir/visitor.html#mir-visitor":{"tf":1.0}},"df":5}}}}},"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"'":{"docs":{},"df":0,"t":{"docs":{"query.html#queries-demand-driven-compilation":{"tf":1.0},"tests/adding.html#ignoring-tests":{"tf":1.0},"mir/regionck.html#mir-based-region-checking-nll":{"tf":1.0},"appendix/stupid-stats.html#overview-of-the-compilation-process":{"tf":1.0},"compiler-debugging.html#logging-etiquette":{"tf":1.0},"compiler-debugging.html#debugging-llvm":{"tf":1.0}},"df":6}},"d":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"query.html#how-the-compiler-executes-a-query":{"tf":1.0},"variance.html#constraints":{"tf":1.0},"variance.html#the-algorithm":{"tf":1.0}},"df":3}}}},"r":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{"compiler-debugging.html#logging-etiquette":{"tf":1.0},"macro-expansion.html#example":{"tf":1.0}},"df":2}},"l":{"docs":{},"df":0,"d":{"docs":{"mir/passes.html#seeing-how-the-mir-changes-as-the-compiler-executes":{"tf":1.0}},"df":1}},"d":{"docs":{"name-resolution.html#namespaces":{"tf":1.0},"appendix/glossary.html#appendix-c-glossary":{"tf":1.0},"traits/canonical-queries.html#canonical-queries":{"tf":1.0},"tests/adding.html#ignoring-tests":{"tf":1.0},"traits/associated-types.html#integration-with-unification":{"tf":1.0},"macro-expansion.html#the-macro-parser":{"tf":1.0},"traits/canonicalization.html#canonicalization":{"tf":1.0},"traits/resolution.html#candidate-assembly":{"tf":1.0}},"df":8},"k":{"docs":{"traits/caching.html#an-example":{"tf":1.0},"traits/hrtb.html#higher-ranked-trait-bounds":{"tf":1.0},"high-level-overview.html#the-main-stages-of-compilation":{"tf":1.4142135623730952},"name-resolution.html#overall-strategy":{"tf":1.0},"traits/associated-types.html#skolemized-associated-types":{"tf":1.4142135623730952},"traits/index.html#trait-solving-new-style":{"tf":1.4142135623730952},"compiler-debugging.html#getting-a-backtrace":{"tf":1.0},"ty.html#allocating-and-working-with-types":{"tf":1.0},"traits/resolution.html#trait-resolution-old-style":{"tf":1.0},"rustdoc.html#the-walking-tour-of-rustdoc":{"tf":1.0},"compiler-debugging.html#getting-logging-output":{"tf":1.0},"traits/lowering-to-logic.html#type-checking-generic-functions-beyond-horn-clauses":{"tf":1.4142135623730952},"traits/chalk-overview.html#rules":{"tf":1.0},"traits/resolution.html#selection":{"tf":1.0},"mir/regionck.html#subtyping-and-skolemization":{"tf":1.0},"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.0},"traits/canonical-queries.html#examples":{"tf":1.0},"param_env.html#parameter-environment":{"tf":1.0},"query.html#queries-demand-driven-compilation":{"tf":1.0},"how-to-build-and-run.html#other-xpy-commands":{"tf":1.0},"mir/passes.html#mir-passes":{"tf":1.0},"traits/canonicalization.html#canonicalizing-the-query":{"tf":1.0},"mir/regionck.html#skolemization-and-universes":{"tf":1.0},"tests/adding.html#ignoring-tests":{"tf":1.0},"variance.html#dependency-graph-management":{"tf":1.0},"traits/canonicalization.html#canonicalizing-the-query-result":{"tf":1.0},"tests/running.html#running-a-subset-of-the-test-suites":{"tf":2.0},"query.html#how-the-compiler-executes-a-query":{"tf":1.4142135623730952},"traits/lowering-to-logic.html#rust-traits-and-logic":{"tf":1.0},"type-inference.html#type-inference":{"tf":1.0},"mir/borrowck.html#mir-borrow-check":{"tf":1.0},"tests/adding.html#guide-to-the-ui-tests":{"tf":1.0},"the-parser.html#the-parser":{"tf":1.0},"traits/lowering-to-logic.html#lowering-to-logic":{"tf":1.0},"traits/resolution.html#candidate-assembly":{"tf":1.0},"traits/chalk-overview.html#an-overview-of-chalk":{"tf":1.0},"const-eval.html#constant-evaluation":{"tf":1.0},"appendix/stupid-stats.html#appendix-a-a-tutorial-on-creating-a-drop-in-replacement-for-rustc":{"tf":1.0},"tests/adding.html#revisions":{"tf":1.0},"macro-expansion.html#macro-expansion":{"tf":1.0},"traits/hrtb.html#higher-ranked-trait-obligations":{"tf":1.0},"hir.html#the-hir-map":{"tf":1.0},"traits/canonical-queries.html#a-trait-query-in-rustc":{"tf":1.0},"rustdoc.html#cheat-sheet":{"tf":1.0},"incremental-compilation.html#the-try-mark-green-algorithm":{"tf":1.0},"how-to-build-and-run.html#create-a-configtoml":{"tf":1.0},"tests/running.html#running-an-individual-test":{"tf":1.0},"traits/hrtb.html#basic-matching-and-skolemization-leaks":{"tf":1.0},"traits/associated-types.html#integration-with-unification":{"tf":1.0},"about-this-guide.html#about-this-guide":{"tf":1.0},"type-inference.html#inference-variables":{"tf":1.7320508075688773},"mir/index.html#key-mir-vocabulary":{"tf":1.0}},"df":52,"f":{"docs":{},"df":0,"l":{"docs":{},"df":0,"o":{"docs":{},"df":0,"w":{"docs":{"tests/intro.html#testing-with-docker-images":{"tf":1.0}},"df":1}}}},"l":{"docs":{},"df":0,"i":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{"traits/resolution.html#overview":{"tf":1.4142135623730952}},"df":1}}},"o":{"docs":{},"df":0,"a":{"docs":{},"df":0,"d":{"docs":{"const-eval.html#constant-evaluation":{"tf":1.0}},"df":1}}}}},"t":{"docs":{},"df":0,"h":{"docs":{"type-inference.html#subtyping-obligations":{"tf":1.0},"conventions.html#how-to-structure-your-pr":{"tf":1.0},"how-to-build-and-run.html#create-a-configtoml":{"tf":1.0},"conventions.html#coding-for-correctness":{"tf":1.0}},"df":4}}},"u":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{"mir/regionck.html#extending-the-universal-regions-check":{"tf":1.0}},"df":1}}}},"a":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{"incremental-compilation.html#improvements-to-the-basic-algorithm":{"tf":1.0},"ty.html#the-tcx-and-how-it-uses-lifetimes":{"tf":1.0}},"df":2},"m":{"docs":{"tests/intro.html#testing-on-emulators":{"tf":1.0}},"df":1,"3":{"docs":{},"df":0,"2":{"docs":{"tests/adding.html#ignoring-tests":{"tf":1.0}},"df":1}}}},"y":{"docs":{"type-checking.html#type-collection":{"tf":1.0},"appendix/stupid-stats.html#what-next":{"tf":1.0},"traits/associated-types.html#projection-equality":{"tf":1.0},"appendix/glossary.html#appendix-c-glossary":{"tf":1.0},"mir/index.html#mir-data-types":{"tf":1.0},"type-inference.html#enforcing-equality--subtyping":{"tf":1.0},"ty.html#allocating-and-working-with-types":{"tf":1.0},"rustc-driver.html#a-note-on-lifetimes":{"tf":1.0},"traits/lowering-to-logic.html#rust-traits-and-logic":{"tf":1.0},"incrcomp-debugging.html#dumping-the-graph":{"tf":1.0},"traits/hrtb.html#basic-matching-and-skolemization-leaks":{"tf":1.0},"rustdoc.html#the-walking-tour-of-rustdoc":{"tf":1.0},"appendix/stupid-stats.html#appendix-a-a-tutorial-on-creating-a-drop-in-replacement-for-rustc":{"tf":1.7320508075688773},"appendix/stupid-stats.html#the-driver-customisation-apis":{"tf":1.0},"method-lookup.html#method-lookup":{"tf":1.4142135623730952},"traits/resolution.html#candidate-assembly":{"tf":1.0},"type-inference.html#extracting-region-constraints":{"tf":1.4142135623730952},"conventions.html#use-todo-comments-for-things-you-dont-want-to-forget":{"tf":1.0},"traits/canonicalization.html#processing-the-canonicalized-query-result":{"tf":1.0},"incrcomp-debugging.html#testing-the-dependency-graph":{"tf":1.0},"miri.html#interpretation":{"tf":1.0},"appendix/background.html#what-is-a-control-flow-graph":{"tf":1.0},"high-level-overview.html#the-main-stages-of-compilation":{"tf":1.4142135623730952},"tests/running.html#running-an-individual-test":{"tf":1.0},"mir/regionck.html#universes-and-skolemized-region-elements":{"tf":1.0},"mir/passes.html#implementing-and-registering-a-pass":{"tf":1.4142135623730952},"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.0},"traits/index.html#trait-solving-new-style":{"tf":1.0},"mir/regionck.html#what-is-a-universe":{"tf":1.4142135623730952},"rustdoc.html#from-soup-to-nuts":{"tf":1.0},"variance.html#trait-variance-and-vtable-resolution":{"tf":1.0},"type-inference.html#inference-variables":{"tf":1.0},"diag.html#declaring-a-lint":{"tf":1.0},"compiler-debugging.html#getting-a-backtrace":{"tf":1.0},"hir.html#out-of-band-storage-and-the--crate--type":{"tf":1.4142135623730952},"mir/regionck.html#extending-the-universal-regions-check":{"tf":1.0},"traits/chalk-overview.html#intermediate-representation-ir":{"tf":1.0},"tests/adding.html#what-kind-of-test-should-i-add":{"tf":1.0},"traits/implied-bounds.html#implied-bounds":{"tf":1.0},"query.html#cycles-between-queries":{"tf":1.0},"mir/regionck.html#skolemization-and-outlives-constraints":{"tf":1.0},"type-inference.html#type-inference":{"tf":1.0}},"df":42},"r":{"docs":{},"df":0,"n":{"docs":{"mir/index.html#key-mir-vocabulary":{"tf":1.0},"tests/adding.html#what-kind-of-test-should-i-add":{"tf":1.0},"rustc-driver.html#the-rustc-driver":{"tf":1.0},"tests/adding.html#adding-new-tests":{"tf":1.0},"diag.html#declaring-a-lint":{"tf":1.4142135623730952},"tests/running.html#running-a-subset-of-the-test-suites":{"tf":1.0},"name-resolution.html#namespaces":{"tf":1.0},"tests/adding.html#error-annotations":{"tf":1.0},"diag.html#edition-gated-lints":{"tf":1.4142135623730952},"diag.html#error-messages":{"tf":1.0}},"df":10,"(":{"docs":{},"df":0,"n":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"d":{"docs":{},"df":0,"_":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"y":{"docs":{},"df":0,"l":{"docs":{"diag.html#lint-groups":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"df":0,"t":{"docs":{"traits/canonical-queries.html#examples":{"tf":1.0}},"df":1}},"l":{"docs":{},"df":0,"k":{"docs":{"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":3.1622776601683797},"the-parser.html#the-parser":{"tf":1.0},"rustdoc.html#the-walking-tour-of-rustdoc":{"tf":1.0},"traits/canonicalization.html#canonicalization":{"tf":1.0},"mir/visitor.html#traversal":{"tf":1.0},"diag.html#declaring-a-lint":{"tf":1.0},"incremental-compilation.html#the-query-dag":{"tf":1.0},"traits/canonicalization.html#processing-the-canonicalized-query-result":{"tf":1.0},"mir/visitor.html#mir-visitor":{"tf":1.0},"traits/hrtb.html#higher-ranked-trait-bounds":{"tf":1.0},"mir/regionck.html#skolemization-and-outlives-constraints":{"tf":1.4142135623730952},"mir/regionck.html#back-to-our-example":{"tf":1.0},"mir/passes.html#implementing-and-registering-a-pass":{"tf":1.4142135623730952},"traits/hrtb.html#higher-ranked-trait-obligations":{"tf":1.0},"rustdoc.html#other-tricks-up-its-sleeve":{"tf":1.0}},"df":15,"t":{"docs":{},"df":0,"h":{"docs":{},"df":0,"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"u":{"docs":{},"df":0,"g":{"docs":{},"df":0,"h":{"docs":{"walkthrough.html#walkthrough-a-typical-contribution":{"tf":1.0}},"df":1}}}}}}}}},"n":{"docs":{},"df":0,"t":{"docs":{"traits/hrtb.html#basic-matching-and-skolemization-leaks":{"tf":1.4142135623730952},"traits/canonicalization.html#processing-the-canonicalized-query-result":{"tf":1.0},"diag.html#edition-gated-lints":{"tf":1.0},"tests/running.html#running-an-individual-test":{"tf":1.0},"incrcomp-debugging.html#dumping-the-graph":{"tf":1.0},"mir/passes.html#implementing-and-registering-a-pass":{"tf":1.0},"compiler-debugging.html#getting-logging-output":{"tf":1.0},"ty.html#allocating-and-working-with-types":{"tf":1.0},"type-inference.html#inference-variables":{"tf":1.0},"traits/resolution.html#candidate-assembly":{"tf":1.7320508075688773},"traits/canonical-queries.html#canonical-queries":{"tf":1.4142135623730952},"traits/lowering-to-logic.html#type-checking-normal-functions":{"tf":1.0},"traits/hrtb.html#higher-ranked-trait-obligations":{"tf":1.0},"macro-expansion.html#the-macro-parser":{"tf":1.0},"tests/running.html#running-a-subset-of-the-test-suites":{"tf":1.0},"compiler-debugging.html#debugging-llvm":{"tf":2.449489742783178},"mir/regionck.html#subtyping-and-skolemization":{"tf":1.0},"traits/lowering-to-logic.html#type-checking-generic-functions-beyond-horn-clauses":{"tf":1.0},"tests/intro.html#compiletest-test-suites":{"tf":1.0},"ty.html#the-tcx-and-how-it-uses-lifetimes":{"tf":1.0},"mir/passes.html#mir-passes":{"tf":1.0},"traits/resolution.html#selection-during-translation":{"tf":1.0},"traits/goals-and-clauses.html#coinductive-goals":{"tf":1.0},"traits/associated-types.html#skolemized-associated-types":{"tf":1.0},"mir/index.html#key-mir-vocabulary":{"tf":1.0},"traits/associated-types.html#associated-type-projection-and-normalization":{"tf":1.0},"query.html#adding-a-new-kind-of-query":{"tf":1.0},"compiler-debugging.html#getting-a-backtrace-for-errors":{"tf":1.0},"mir/passes.html#stealing":{"tf":1.0},"conventions.html#prefer-exhaustive-matches":{"tf":1.0},"compiler-debugging.html#getting-a-backtrace":{"tf":1.4142135623730952},"mir/visitor.html#mir-visitor":{"tf":1.4142135623730952},"conventions.html#use-todo-comments-for-things-you-dont-want-to-forget":{"tf":1.4142135623730952},"traits/lowering-rules.html#transforming-the-lowered-where-clauses":{"tf":1.0},"traits/lowering-to-logic.html#rust-traits-and-logic":{"tf":1.0},"traits/caching.html#caching-and-subtle-considerations-therewith":{"tf":1.0},"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":2.6457513110645909},"how-to-build-and-run.html#create-a-configtoml":{"tf":1.0},"appendix/stupid-stats.html#appendix-a-a-tutorial-on-creating-a-drop-in-replacement-for-rustc":{"tf":1.7320508075688773},"incremental-compilation.html#footnotes":{"tf":1.0},"query.html#how-the-compiler-executes-a-query":{"tf":1.0},"variance.html#trait-variance-and-vtable-resolution":{"tf":1.4142135623730952},"mir/regionck.html#skolemization-and-outlives-constraints":{"tf":1.0},"how-to-build-and-run.html#creating-a-rustup-toolchain":{"tf":1.0},"how-to-build-and-run.html#how-to-build-the-compiler-and-run-what-you-built":{"tf":1.0},"tests/running.html#running-tests":{"tf":1.4142135623730952}},"df":46,"_":{"docs":{},"df":0,"h":{"docs":{},"df":0,"r":{"docs":{},"df":0,"t":{"docs":{},"df":0,"b":{"docs":{"traits/hrtb.html#basic-matching-and-skolemization-leaks":{"tf":1.0}},"df":1,"<":{"docs":{},"df":0,"t":{"docs":{"traits/hrtb.html#basic-matching-and-skolemization-leaks":{"tf":1.0}},"df":1}}}}}}}}}},"c":{"docs":{"traits/lowering-rules.html#associated-type-declarations":{"tf":1.4142135623730952},"traits/lowering-rules.html#lowering-where-clauses":{"tf":1.4142135623730952},"mir/passes.html#seeing-how-the-mir-changes-as-the-compiler-executes":{"tf":1.0},"traits/lowering-rules.html#lowering-impls":{"tf":1.4142135623730952},"traits/lowering-rules.html#trait-header":{"tf":1.0},"traits/lowering-rules.html#lowering-traits":{"tf":1.0}},"df":6,"1":{"docs":{"traits/lowering-rules.html#associated-type-declarations":{"tf":1.7320508075688773},"traits/lowering-rules.html#associated-type-values":{"tf":1.7320508075688773}},"df":2},"_":{"docs":{},"df":0,"i":{"docs":{},"df":0,"m":{"docs":{},"df":0,"p":{"docs":{},"df":0,"l":{"docs":{"traits/lowering-rules.html#associated-type-values":{"tf":1.7320508075688773}},"df":1}}}}}},"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{"high-level-overview.html#the-main-stages-of-compilation":{"tf":1.0},"type-checking.html#type-collection":{"tf":1.0}},"df":2}},"n":{"docs":{},"df":0,"g":{"docs":{"tests/adding.html#comment-explaining-what-the-test-is-about":{"tf":1.0},"type-inference.html#enforcing-equality--subtyping":{"tf":1.0},"compiletest.html#implementing-the-behavior-change":{"tf":1.0},"traits/implied-bounds.html#implied-bounds":{"tf":1.0},"conventions.html#use-todo-comments-for-things-you-dont-want-to-forget":{"tf":1.0},"appendix/glossary.html#appendix-c-glossary":{"tf":1.0},"query.html#cycles-between-queries":{"tf":1.0}},"df":7}}},"a":{"docs":{},"df":0,"p":{"docs":{"rustdoc.html#from-clean-to-crate":{"tf":1.0}},"df":1,"p":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"rustdoc.html#from-crate-to-clean":{"tf":1.0},"appendix/glossary.html#appendix-c-glossary":{"tf":1.0}},"df":2}}}}},"i":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{"traits/lowering-module.html#unit-tests":{"tf":1.0},"mir/passes.html#implementing-and-registering-a-pass":{"tf":1.0},"tests/adding.html#revisions":{"tf":1.0},"incrcomp-debugging.html#testing-the-dependency-graph":{"tf":1.0},"traits/canonicalization.html#canonicalizing-the-query":{"tf":1.0},"miri.html#interpretation":{"tf":1.0},"appendix/stupid-stats.html#overview-of-the-compilation-process":{"tf":1.4142135623730952},"mir/visitor.html#mir-visitor":{"tf":1.0},"tests/adding.html#naming-your-test":{"tf":1.0},"compiletest.html#implementing-the-behavior-change":{"tf":1.0},"rustdoc.html#from-clean-to-crate":{"tf":1.4142135623730952},"conventions.html#use-todo-comments-for-things-you-dont-want-to-forget":{"tf":1.0},"tests/intro.html#compiletest-test-suites":{"tf":1.4142135623730952},"incrcomp-debugging.html#dumping-the-graph":{"tf":1.0},"mir/borrowck.html#major-phases-of-the-borrow-checker":{"tf":1.0},"compiletest.html#adding-a-new-header-command":{"tf":1.4142135623730952},"mir/borrowck.html#mir-borrow-check":{"tf":1.0},"tests/adding.html#normalization":{"tf":1.0},"type-inference.html#inference-variables":{"tf":1.0},"traits/lowering-to-logic.html#type-checking-normal-functions":{"tf":1.0},"rustdoc.html#hot-potato":{"tf":1.4142135623730952},"ty.html#the-tcx-and-how-it-uses-lifetimes":{"tf":1.0}},"df":22,"u":{"docs":{},"df":0,"p":{"docs":{"rustdoc.html#dotting-is-and-crossing-ts":{"tf":1.0}},"df":1}}},"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{"appendix/background.html#what-is-universally-quantified-what-about-existentially-quantified":{"tf":1.0},"mir/index.html#key-mir-vocabulary":{"tf":1.0},"traits/regions.html#region-constraints":{"tf":1.0},"traits/canonical-queries.html#examples":{"tf":1.0},"mir/regionck.html#causal-tracking":{"tf":1.0},"traits/lowering-rules.html#function-and-constant-values":{"tf":1.0},"traits/lowering-to-logic.html#rust-traits-and-logic":{"tf":1.0},"variance.html#variance-of-type-and-lifetime-parameters":{"tf":1.0},"traits/implied-bounds.html#implied-bounds":{"tf":1.0},"mir/regionck.html#universal-regions":{"tf":1.0},"rustdoc.html#from-crate-to-clean":{"tf":1.0},"mir/regionck.html#closures":{"tf":1.0},"traits/associated-types.html#skolemized-associated-types":{"tf":1.4142135623730952},"mir/regionck.html#subtyping-and-skolemization":{"tf":1.0},"mir/index.html#promoted-constants":{"tf":1.0},"rustdoc.html#other-tricks-up-its-sleeve":{"tf":1.4142135623730952},"mir/index.html#representing-constants":{"tf":1.0},"appendix/background.html#what-is-a-dataflow-analysis":{"tf":1.0},"rustdoc.html#from-clean-to-crate":{"tf":1.0},"traits/goals-and-clauses.html#incomplete-chapter":{"tf":1.0},"traits/wf.html#well-formedness-checking":{"tf":1.0},"how-to-build-and-run.html#running-xpy-and-building-a-stage1-compiler":{"tf":1.0},"mir/regionck.html#region-variables-and-constraints":{"tf":1.0}},"df":23}}}}}},"f":{"docs":{"traits/wf.html#well-formedness-checking":{"tf":1.4142135623730952}},"df":1},"i":{"docs":{},"df":0,"n":{"docs":{"incremental-compilation.html#improvements-to-the-basic-algorithm":{"tf":1.0}},"df":1,"n":{"docs":{},"df":0,"o":{"docs":{},"df":0,"w":{"docs":{"traits/resolution.html#candidate-assembly":{"tf":2.0}},"df":1}}},"d":{"docs":{"query.html#queries-demand-driven-compilation":{"tf":1.0},"query.html#how-the-compiler-executes-a-query":{"tf":1.0},"traits/canonicalization.html#executing-the-query":{"tf":1.4142135623730952},"mir/regionck.html#final-example":{"tf":1.0},"mir/regionck.html#subtyping-and-skolemization":{"tf":1.0},"traits/goals-and-clauses.html#coinductive-goals":{"tf":1.4142135623730952},"traits/canonical-queries.html#examples":{"tf":1.4142135623730952},"high-level-overview.html#crate-structure":{"tf":1.0},"traits/hrtb.html#higher-ranked-trait-obligations":{"tf":1.0},"tests/running.html#running-an-individual-test":{"tf":1.0},"incremental-compilation.html#the-try-mark-green-algorithm":{"tf":1.0},"variance.html#dependency-graph-management":{"tf":1.0},"traits/canonicalization.html#canonicalizing-the-query-result":{"tf":1.4142135623730952}},"df":13,"o":{"docs":{},"df":0,"w":{"docs":{"compiler-debugging.html#getting-a-backtrace":{"tf":1.0},"tests/adding.html#normalization":{"tf":1.4142135623730952},"tests/adding.html#ignoring-tests":{"tf":1.0}},"df":3}}}},"t":{"docs":{},"df":0,"h":{"docs":{},"df":0,"o":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{"compiler-debugging.html#debugging-llvm":{"tf":1.0},"mir/index.html#key-mir-vocabulary":{"tf":1.0},"tests/adding.html#other-header-commands":{"tf":1.0},"tests/running.html#running-an-individual-test":{"tf":1.0},"miri.html#miri":{"tf":1.0},"param_env.html#parameter-environment":{"tf":1.0},"macro-expansion.html#example":{"tf":1.0},"incremental-compilation.html#the-try-mark-green-algorithm":{"tf":1.0},"appendix/stupid-stats.html#appendix-a-a-tutorial-on-creating-a-drop-in-replacement-for-rustc":{"tf":1.0},"hir.html#out-of-band-storage-and-the--crate--type":{"tf":1.0},"query.html#adding-a-new-kind-of-query":{"tf":1.0},"type-inference.html#trying-equality":{"tf":1.0},"traits/associated-types.html#skolemized-associated-types":{"tf":1.0}},"df":13}}},"i":{"docs":{},"df":0,"n":{"docs":{"param_env.html#parameter-environment":{"tf":1.0},"rustdoc.html#from-clean-to-crate":{"tf":1.0},"compiletest.html#introduction":{"tf":1.0},"type-inference.html#creating-an-inference-context":{"tf":1.0},"const-eval.html#constant-evaluation":{"tf":1.0},"appendix/glossary.html#appendix-c-glossary":{"tf":1.7320508075688773},"tests/intro.html#testing-on-emulators":{"tf":2.0},"hir.html#identifiers-in-the-hir":{"tf":1.4142135623730952},"traits/canonical-queries.html#a-trait-query-in-rustc":{"tf":1.0},"rustdoc.html#the-walking-tour-of-rustdoc":{"tf":1.0},"traits/lowering-rules.html#notation":{"tf":1.0},"tests/intro.html#compiletest-test-suites":{"tf":1.0},"mir/visitor.html#mir-visitor":{"tf":1.0},"rustdoc.html#from-crate-to-clean":{"tf":1.0},"mir/regionck.html#what-is-a-universe":{"tf":1.0},"tests/adding.html#revisions":{"tf":1.0},"compiler-debugging.html#expensive-operations-in-logs":{"tf":1.0},"mir/passes.html#seeing-how-the-mir-changes-as-the-compiler-executes":{"tf":1.4142135623730952},"type-inference.html#extracting-region-constraints":{"tf":1.0},"variance.html#variance-of-type-and-lifetime-parameters":{"tf":1.0},"mir/regionck.html#mir-based-region-checking-nll":{"tf":1.0},"appendix/background.html#what-is-a-free-region-or-a-free-variable-what-about-bound-region":{"tf":1.0},"tests/intro.html#other-tests":{"tf":1.7320508075688773},"traits/canonicalization.html#canonicalizing-the-query":{"tf":1.0},"tests/intro.html#testing-with-docker-images":{"tf":1.0},"method-lookup.html#candidate-assembly":{"tf":1.0},"rustdoc.html#from-soup-to-nuts":{"tf":1.0}},"df":27}}}},"s":{"docs":{},"df":0,"h":{"docs":{"traits/hrtb.html#basic-matching-and-skolemization-leaks":{"tf":1.0},"traits/canonicalization.html#canonicalization":{"tf":1.0},"query.html#adding-a-new-kind-of-query":{"tf":1.0},"traits/resolution.html#major-concepts":{"tf":1.0},"ty.html#the-tcx-and-how-it-uses-lifetimes":{"tf":1.0},"traits/resolution.html#selection-during-translation":{"tf":1.0}},"df":6}},"d":{"docs":{},"df":0,"t":{"docs":{},"df":0,"h":{"docs":{"tests/adding.html#ignoring-tests":{"tf":1.0}},"df":1}},"e":{"docs":{"tests/intro.html#testing-infrastructure":{"tf":1.0},"tests/intro.html#the-compiler-testing-framework":{"tf":1.0},"appendix/glossary.html#appendix-c-glossary":{"tf":1.4142135623730952}},"df":3},"g":{"docs":{},"df":0,"e":{"docs":{},"df":0,"t":{"docs":{"tests/adding.html#naming-your-test":{"tf":1.7320508075688773}},"df":1}}}},"l":{"docs":{},"df":0,"d":{"docs":{"high-level-overview.html#crate-structure":{"tf":1.0}},"df":1,"c":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"d":{"docs":{"variance.html#variance-of-type-and-lifetime-parameters":{"tf":1.0}},"df":1}}}}}}}},"6":{"docs":{},"df":0,"7":{"docs":{"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.0}},"df":1},"4":{"docs":{"tests/adding.html#normalization":{"tf":1.7320508075688773},"tests/intro.html#testing-infrastructure":{"tf":1.0}},"df":2,"b":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{"tests/adding.html#ignoring-tests":{"tf":1.0},"tests/adding.html#normalization":{"tf":1.4142135623730952}},"df":2}}}}},"q":{"docs":{"incremental-compilation.html#the-query-dag":{"tf":1.7320508075688773},"incremental-compilation.html#the-basic-algorithm":{"tf":1.4142135623730952},"incremental-compilation.html#the-try-mark-green-algorithm":{"tf":3.3166247903554},"incremental-compilation.html#improvements-to-the-basic-algorithm":{"tf":2.23606797749979}},"df":4,"1":{"docs":{"incremental-compilation.html#the-basic-algorithm":{"tf":1.4142135623730952}},"df":1},"2":{"docs":{"incremental-compilation.html#the-basic-algorithm":{"tf":1.4142135623730952}},"df":1},"r":{"docs":{"traits/canonicalization.html#canonicalizing-the-query-result":{"tf":1.4142135623730952}},"df":1},"u":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{},"df":0,"i":{"docs":{},"df":0,"f":{"docs":{"traits/chalk-overview.html#lowering":{"tf":1.0},"traits/associated-types.html#associated-type-projection-and-normalization":{"tf":1.0},"traits/lowering-to-logic.html#type-checking-generic-functions-beyond-horn-clauses":{"tf":1.0},"traits/goals-and-clauses.html#goals-and-clauses-meta-structure":{"tf":1.4142135623730952},"appendix/glossary.html#appendix-c-glossary":{"tf":1.0}},"df":5,"i":{"docs":{"traits/hrtb.html#basic-matching-and-skolemization-leaks":{"tf":1.0},"mir/regionck.html#skolemization-and-outlives-constraints":{"tf":1.0},"appendix/background.html#what-is-universally-quantified-what-about-existentially-quantified":{"tf":1.4142135623730952},"traits/chalk-overview.html#lowering":{"tf":1.4142135623730952},"mir/regionck.html#subtyping-and-skolemization":{"tf":1.0},"appendix/glossary.html#appendix-c-glossary":{"tf":1.0}},"df":6}}}}},"l":{"docs":{},"df":0,"i":{"docs":{},"df":0,"f":{"docs":{"mir/passes.html#stealing":{"tf":1.0}},"df":1}}}},"e":{"docs":{},"df":0,"u":{"docs":{},"df":0,"e":{"docs":{"tests/intro.html#testing-infrastructure":{"tf":1.0}},"df":1}},"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"i":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{"variance.html#trait-variance-and-vtable-resolution":{"tf":1.0},"appendix/glossary.html#appendix-c-glossary":{"tf":1.0},"compiletest.html#adding-a-new-header-command":{"tf":1.0},"traits/associated-types.html#projection-equality":{"tf":1.0},"traits/hrtb.html#basic-matching-and-skolemization-leaks":{"tf":1.0},"traits/specialization.html#specialization":{"tf":1.0},"mir/regionck.html#what-is-a-universe":{"tf":1.0}},"df":7}}}}},"r":{"docs":{},"df":0,"i":{"docs":{"type-checking.html#type-collection":{"tf":1.4142135623730952},"traits/canonical-queries.html#examples":{"tf":2.449489742783178},"traits/index.html#trait-solving-new-style":{"tf":1.0},"incremental-compilation.html#the-try-mark-green-algorithm":{"tf":2.8284271247461905},"traits/canonicalization.html#canonicalization":{"tf":1.4142135623730952},"rustc-driver.html#the-rustc-driver":{"tf":1.0},"query.html#cycles-between-queries":{"tf":2.6457513110645909},"traits/lowering-module.html#unit-tests":{"tf":1.0},"miri.html#interpretation":{"tf":1.0},"high-level-overview.html#crate-structure":{"tf":1.4142135623730952},"high-level-overview.html#the-main-stages-of-compilation":{"tf":2.8284271247461905},"query.html#how-the-compiler-executes-a-query":{"tf":4.123105625617661},"traits/canonicalization.html#processing-the-canonicalized-query-result":{"tf":1.7320508075688773},"traits/chalk-overview.html#blog-posts":{"tf":1.4142135623730952},"mir/passes.html#stealing":{"tf":2.449489742783178},"rustdoc.html#the-walking-tour-of-rustdoc":{"tf":1.4142135623730952},"traits/canonicalization.html#canonicalizing-the-query-result":{"tf":2.8284271247461905},"incremental-compilation.html#the-query-dag":{"tf":3.0},"rustdoc.html#cheat-sheet":{"tf":1.0},"traits/canonical-queries.html#a-trait-query-in-rustc":{"tf":2.8284271247461905},"traits/canonicalization.html#canonicalizing-the-query":{"tf":2.0},"traits/chalk-overview.html#an-overview-of-chalk":{"tf":1.0},"incremental-compilation.html#incremental-compilation":{"tf":1.0},"const-eval.html#constant-evaluation":{"tf":1.4142135623730952},"appendix/code-index.html#appendix-d-code-index":{"tf":1.0},"variance.html#dependency-graph-management":{"tf":1.7320508075688773},"mir/passes.html#mir-passes":{"tf":2.0},"mir/borrowck.html#major-phases-of-the-borrow-checker":{"tf":1.0},"incremental-compilation.html#the-basic-algorithm":{"tf":4.47213595499958},"query.html#queries-demand-driven-compilation":{"tf":3.4641016151377546},"appendix/glossary.html#appendix-c-glossary":{"tf":1.7320508075688773},"miri.html#miri":{"tf":1.0},"traits/canonicalization.html#executing-the-query":{"tf":2.8284271247461905},"traits/canonical-queries.html#the-traditional-interactive-prolog-query":{"tf":2.6457513110645909},"query.html#invoking-queries":{"tf":2.0},"tests/intro.html#compiletest-test-suites":{"tf":1.0},"query.html#adding-a-new-kind-of-query":{"tf":5.5677643628300219},"incremental-compilation.html#improvements-to-the-basic-algorithm":{"tf":1.0},"ty.html#the-tcx-and-how-it-uses-lifetimes":{"tf":1.0},"mir/passes.html#implementing-and-registering-a-pass":{"tf":1.0},"traits/canonical-queries.html#canonical-queries":{"tf":2.0},"rustdoc.html#dotting-is-and-crossing-ts":{"tf":1.7320508075688773},"traits/lowering-module.html#the--program_clauses_for--query":{"tf":2.0}},"df":43,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"t":{"docs":{},"df":0,"y":{"docs":{},"df":0,"p":{"docs":{},"df":0,"e":{"docs":{},"df":0,"_":{"docs":{},"df":0,"o":{"docs":{},"df":0,"f":{"docs":{},"df":0,"<":{"docs":{},"df":0,"'":{"docs":{},"df":0,"t":{"docs":{},"df":0,"c":{"docs":{},"df":0,"x":{"docs":{"query.html#adding-a-new-kind-of-query":{"tf":1.0}},"df":1}}}}},":":{"docs":{},"df":0,":":{"docs":{},"df":0,"t":{"docs":{},"df":0,"r":{"docs":{},"df":0,"y":{"docs":{},"df":0,"_":{"docs":{},"df":0,"g":{"docs":{},"df":0,"e":{"docs":{},"df":0,"t":{"docs":{},"df":0,"(":{"docs":{},"df":0,"t":{"docs":{},"df":0,"c":{"docs":{},"df":0,"x":{"docs":{"query.html#cycles-between-queries":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}}}}}}}},"y":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"u":{"docs":{},"df":0,"l":{"docs":{},"df":0,"t":{"docs":{"traits/canonical-queries.html#a-trait-query-in-rustc":{"tf":1.0}},"df":1}}}}}},"'":{"docs":{"traits/canonicalization.html#executing-the-query":{"tf":1.0}},"df":1},"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"f":{"docs":{},"df":0,"i":{"docs":{},"df":0,"g":{"docs":{"query.html#adding-a-new-kind-of-query":{"tf":1.0}},"df":1}}}}}},"d":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"c":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{},"df":0,"p":{"docs":{},"df":0,"t":{"docs":{"query.html#adding-a-new-kind-of-query":{"tf":1.0}},"df":1}}}}}}}},"_":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"u":{"docs":{},"df":0,"l":{"docs":{},"df":0,"t":{"docs":{"query.html#how-the-compiler-executes-a-query":{"tf":1.0}},"df":1}}}}}},"k":{"docs":{},"df":0,"e":{"docs":{},"df":0,"y":{"docs":{"query.html#how-the-compiler-executes-a-query":{"tf":1.0}},"df":1}}}}}}},"x":{"docs":{"diag.html#suggestions":{"tf":2.8284271247461905},"diag.html#error-messages":{"tf":1.4142135623730952}},"df":2},"i":{"docs":{},"df":0,"t":{"docs":{"incrcomp-debugging.html#dumping-the-graph":{"tf":1.0},"variance.html#the-algorithm":{"tf":1.0},"how-to-build-and-run.html#running-xpy-and-building-a-stage1-compiler":{"tf":1.0},"high-level-overview.html#the-main-stages-of-compilation":{"tf":1.0},"incremental-compilation.html#improvements-to-the-basic-algorithm":{"tf":1.0},"mir/passes.html#seeing-how-the-mir-changes-as-the-compiler-executes":{"tf":1.0},"incrcomp-debugging.html#tracking-down-incorrect-edges":{"tf":1.0},"traits/goals-and-clauses.html#goals-and-clauses-meta-structure":{"tf":1.0},"variance.html#dependency-graph-management":{"tf":1.0},"traits/lowering-to-logic.html#lowering-to-logic":{"tf":1.0},"traits/bibliography.html#bibliography":{"tf":1.0},"hir.html#the-hir":{"tf":1.0},"tests/intro.html#compiletest-test-suites":{"tf":1.0}},"df":13},"c":{"docs":{},"df":0,"k":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{"appendix/glossary.html#appendix-c-glossary":{"tf":1.0}},"df":1}}}}}},"'":{"docs":{"incremental-compilation.html#the-try-mark-green-algorithm":{"tf":1.4142135623730952}},"df":1},"e":{"docs":{},"df":0,"m":{"docs":{},"df":0,"u":{"docs":{"tests/intro.html#testing-on-emulators":{"tf":1.0}},"df":1}}}},"x":{"docs":{"mir/index.html#key-mir-vocabulary":{"tf":1.4142135623730952},"variance.html#constraints":{"tf":1.4142135623730952},"traits/resolution.html#candidate-assembly":{"tf":3.0},"traits/resolution.html#confirmation":{"tf":1.0},"high-level-overview.html#the-main-stages-of-compilation":{"tf":1.0},"appendix/glossary.html#appendix-c-glossary":{"tf":1.0},"mir/regionck.html#skolemization-and-outlives-constraints":{"tf":1.7320508075688773},"mir/regionck.html#skolemization-and-universes":{"tf":1.0},"traits/hrtb.html#basic-matching-and-skolemization-leaks":{"tf":1.4142135623730952},"variance.html#variance-of-type-and-lifetime-parameters":{"tf":1.4142135623730952},"diag.html#suggestions":{"tf":1.0},"traits/resolution.html#major-concepts":{"tf":1.0},"tests/adding.html#revisions":{"tf":1.0},"tests/adding.html#ignoring-tests":{"tf":2.449489742783178},"traits/hrtb.html#higher-ranked-trait-obligations":{"tf":2.23606797749979},"tests/adding.html#normalization":{"tf":1.0},"hir.html#hir-bodies":{"tf":1.4142135623730952},"mir/regionck.html#what-is-a-universe":{"tf":2.8284271247461905},"name-resolution.html#namespaces":{"tf":2.23606797749979},"traits/canonicalization.html#executing-the-query":{"tf":1.7320508075688773},"variance.html#the-algorithm":{"tf":2.8284271247461905},"traits/canonicalization.html#canonicalization":{"tf":1.4142135623730952},"type-checking.html#type-collection":{"tf":1.0},"traits/caching.html#an-example":{"tf":1.0},"traits/associated-types.html#integration-with-unification":{"tf":1.7320508075688773},"tests/adding.html#header-commands-configuring-rustc":{"tf":1.0},"tests/adding.html#other-header-commands":{"tf":1.7320508075688773}},"df":27,"x":{"docs":{},"df":0,"x":{"docs":{"high-level-overview.html#crate-structure":{"tf":1.0}},"df":1}},"<":{"docs":{},"df":0,"a":{"docs":{},"df":0,">":{"docs":{},"df":0,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"b":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{"variance.html#addendum-variance-on-traits":{"tf":1.0}},"df":1}}}}}}}},".":{"docs":{},"df":0,"f":{"docs":{"high-level-overview.html#the-main-stages-of-compilation":{"tf":1.0},"appendix/glossary.html#appendix-c-glossary":{"tf":1.0}},"df":2},"d":{"docs":{},"df":0,"o":{"docs":{},"df":0,"_":{"docs":{},"df":0,"b":{"docs":{"traits/resolution.html#candidate-assembly":{"tf":1.0}},"df":1},"a":{"docs":{},"df":0,"1":{"docs":{"traits/resolution.html#candidate-assembly":{"tf":1.0}},"df":1}}}}},"p":{"docs":{},"df":0,"i":{"docs":{"tests/intro.html#other-tests":{"tf":2.8284271247461905},"tests/running.html#running-tests":{"tf":1.4142135623730952},"tests/running.html#running-an-individual-test":{"tf":1.4142135623730952},"tests/running.html#running-a-subset-of-the-test-suites":{"tf":1.4142135623730952},"how-to-build-and-run.html#how-to-build-the-compiler-and-run-what-you-built":{"tf":1.0},"compiler-debugging.html#getting-logging-output":{"tf":1.0},"how-to-build-and-run.html#other-xpy-commands":{"tf":2.6457513110645909},"tests/intro.html#the-compiler-testing-framework":{"tf":1.0},"tests/adding.html#editing-and-updating-the-reference-files":{"tf":1.0},"how-to-build-and-run.html#running-xpy-and-building-a-stage1-compiler":{"tf":2.23606797749979},"conventions.html#formatting-and-the-tidy-script":{"tf":1.4142135623730952},"rustdoc.html#cheat-sheet":{"tf":1.4142135623730952},"tests/intro.html#testing-infrastructure":{"tf":1.0}},"df":13}},"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"v":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"t":{"docs":{"traits/resolution.html#confirmation":{"tf":1.0},"traits/resolution.html#candidate-assembly":{"tf":1.0}},"df":2}}}}}}}},":":{"docs":{},"df":0,"a":{"docs":{},"df":0,"2":{"docs":{"traits/resolution.html#candidate-assembly":{"tf":1.0}},"df":1},"1":{"docs":{"traits/resolution.html#candidate-assembly":{"tf":1.4142135623730952}},"df":1}}},"8":{"docs":{},"df":0,"6":{"docs":{"tests/intro.html#testing-infrastructure":{"tf":1.0},"tests/adding.html#ignoring-tests":{"tf":1.0}},"df":2,"_":{"docs":{},"df":0,"6":{"docs":{},"df":0,"4":{"docs":{"how-to-build-and-run.html#creating-a-rustup-toolchain":{"tf":1.0},"compiler-debugging.html#getting-a-backtrace-for-errors":{"tf":1.0},"tests/adding.html#ignoring-tests":{"tf":1.0}},"df":3}}}}},"p":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{},"df":0,"h":{"docs":{"rustdoc.html#dotting-is-and-crossing-ts":{"tf":1.0}},"df":1}}}}},"n":{"docs":{"method-lookup.html#method-lookup":{"tf":1.0},"mir/regionck.html#another-example":{"tf":1.0},"hir.html#the-hir-map":{"tf":2.0},"mir/regionck.html#universes-and-skolemized-region-elements":{"tf":1.4142135623730952},"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.0}},"df":5,".":{"docs":{},"df":0,"b":{"docs":{"ty.html#allocating-and-working-with-types":{"tf":1.0},"high-level-overview.html#crate-structure":{"tf":1.0},"query.html#how-the-compiler-executes-a-query":{"tf":1.0}},"df":3}},"r":{"docs":{},"df":0,"c":{"docs":{"rustc-driver.html#the-rustc-driver":{"tf":1.0},"appendix/stupid-stats.html#appendix-a-a-tutorial-on-creating-a-drop-in-replacement-for-rustc":{"tf":1.0}},"df":2}},"e":{"docs":{},"df":0,"w":{"docs":{"mir/regionck.html#what-is-a-universe":{"tf":1.7320508075688773},"type-inference.html#inference-variables":{"tf":1.0},"query.html#adding-a-new-kind-of-query":{"tf":2.23606797749979},"tests/adding.html#adding-new-tests":{"tf":1.4142135623730952},"traits/index.html#trait-solving-new-style":{"tf":1.7320508075688773},"traits/resolution.html#trait-resolution-old-style":{"tf":1.0},"rustdoc.html#from-soup-to-nuts":{"tf":1.0},"tests/intro.html#the-compiler-testing-framework":{"tf":1.0},"traits/canonical-queries.html#examples":{"tf":1.0},"compiletest.html#adding-a-new-test-file":{"tf":2.0},"traits/goals-and-clauses.html#goals-and-clauses":{"tf":1.0},"tests/adding.html#naming-your-test":{"tf":1.0},"hir.html#identifiers-in-the-hir":{"tf":1.0},"mir/regionck.html#final-example":{"tf":1.0},"miri.html#interpretation":{"tf":1.0},"traits/bibliography.html#bibliography":{"tf":1.4142135623730952},"diag.html#lint-groups":{"tf":1.0},"rustdoc.html#the-walking-tour-of-rustdoc":{"tf":1.0},"about-this-guide.html#about-this-guide":{"tf":1.0},"query.html#queries-demand-driven-compilation":{"tf":1.0},"name-resolution.html#scopes-and-ribs":{"tf":2.23606797749979},"traits/canonicalization.html#canonicalizing-the-query-result":{"tf":1.4142135623730952},"compiletest.html#adding-a-new-header-command":{"tf":2.6457513110645909},"ty.html#allocating-and-working-with-types":{"tf":1.0},"type-inference.html#subtyping-obligations":{"tf":1.0},"how-to-build-and-run.html#running-xpy-and-building-a-stage1-compiler":{"tf":1.7320508075688773},"tests/adding.html#editing-and-updating-the-reference-files":{"tf":1.0},"appendix/stupid-stats.html#what-next":{"tf":1.0},"appendix/stupid-stats.html#appendix-a-a-tutorial-on-creating-a-drop-in-replacement-for-rustc":{"tf":1.0},"traits/lowering-rules.html#function-and-constant-values":{"tf":1.0},"conventions.html#prefer-exhaustive-matches":{"tf":1.4142135623730952},"mir/borrowck.html#major-phases-of-the-borrow-checker":{"tf":1.0},"compiletest.html#introduction":{"tf":1.0},"conventions.html#copyright-notice":{"tf":1.0},"diag.html#edition-gated-lints":{"tf":1.0}},"df":35,"e":{"docs":{},"df":0,"r":{"docs":{"how-to-build-and-run.html#running-xpy-and-building-a-stage1-compiler":{"tf":1.4142135623730952}},"df":1}},"l":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{"tests/adding.html#normalization":{"tf":1.0}},"df":1}}},"t":{"docs":{},"df":0,"y":{"docs":{},"df":0,"p":{"docs":{"appendix/glossary.html#appendix-c-glossary":{"tf":1.7320508075688773}},"df":1,"e":{"docs":{},"df":0,"'":{"docs":{},"df":0,"d":{"docs":{"hir.html#identifiers-in-the-hir":{"tf":1.0},"mir/index.html#mir-data-types":{"tf":1.4142135623730952}},"df":2}}}}}}},"s":{"docs":{},"df":0,"t":{"docs":{"traits/resolution.html#selection":{"tf":1.0},"traits/resolution.html#overview":{"tf":1.7320508075688773},"type-inference.html#snapshots":{"tf":1.0},"traits/resolution.html#candidate-assembly":{"tf":1.4142135623730952},"mir/index.html#introduction-to-mir":{"tf":1.0},"traits/goals-and-clauses.html#domain-goals":{"tf":1.0},"name-resolution.html#scopes-and-ribs":{"tf":1.0},"traits/resolution.html#selection-during-translation":{"tf":2.0},"mir/index.html#key-mir-vocabulary":{"tf":1.0}},"df":9}},"c":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"s":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{"query.html#how-the-compiler-executes-a-query":{"tf":1.0},"rustdoc.html#hot-potato":{"tf":1.7320508075688773},"compiletest.html#adding-a-new-test-file":{"tf":1.0},"traits/resolution.html#selection-during-translation":{"tf":1.0},"appendix/glossary.html#appendix-c-glossary":{"tf":1.0},"conventions.html#line-length":{"tf":1.0}},"df":6,"l":{"docs":{},"df":0,"i":{"docs":{"name-resolution.html#scopes-and-ribs":{"tf":1.0}},"df":1}}}}}}}}},"a":{"docs":{},"df":0,"r":{"docs":{"compiletest.html#adding-a-new-header-command":{"tf":1.0},"compiletest.html#header-commands":{"tf":1.0}},"df":2}},"v":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"traits/resolution.html#overview":{"tf":1.0},"compiler-debugging.html#expensive-operations-in-logs":{"tf":1.0},"tests/running.html#running-tests":{"tf":1.0},"ty.html#allocating-and-working-with-types":{"tf":2.0},"traits/goals-and-clauses.html#goals-and-clauses-meta-structure":{"tf":1.0},"traits/resolution.html#selection":{"tf":1.0},"traits/associated-types.html#skolemized-associated-types":{"tf":1.0},"incremental-compilation.html#the-query-dag":{"tf":1.0},"mir/visitor.html#mir-visitor":{"tf":1.0},"appendix/glossary.html#appendix-c-glossary":{"tf":1.4142135623730952},"traits/canonical-queries.html#the-traditional-interactive-prolog-query":{"tf":1.0},"miri.html#interpretation":{"tf":1.0},"incremental-compilation.html#footnotes":{"tf":1.0},"mir/passes.html#implementing-and-registering-a-pass":{"tf":1.0}},"df":14}}},"e":{"docs":{},"df":0,"d":{"docs":{"traits/canonical-queries.html#a-trait-query-in-rustc":{"tf":1.0},"traits/lowering-module.html#unit-tests":{"tf":1.0},"how-to-build-and-run.html#how-to-build-the-compiler-and-run-what-you-built":{"tf":1.0},"compiletest.html#adding-a-new-header-command":{"tf":1.0},"the-parser.html#the-parser":{"tf":1.0},"traits/goals-and-clauses.html#domain-goals":{"tf":1.0},"mir/regionck.html#another-example":{"tf":1.0},"type-inference.html#extracting-region-constraints":{"tf":1.0},"ty.html#the-tcx-and-how-it-uses-lifetimes":{"tf":1.0},"mir/borrowck.html#major-phases-of-the-borrow-checker":{"tf":1.0},"how-to-build-and-run.html#creating-a-rustup-toolchain":{"tf":1.0},"macro-expansion.html#macro-expansion":{"tf":1.0},"tests/adding.html#comment-explaining-what-the-test-is-about":{"tf":1.0},"variance.html#variance-and-object-types":{"tf":1.0},"incrcomp-debugging.html#dumping-the-graph":{"tf":1.0},"ty.html#allocating-and-working-with-types":{"tf":1.0},"traits/associated-types.html#integration-with-unification":{"tf":1.0},"name-resolution.html#overall-strategy":{"tf":1.7320508075688773},"traits/lowering-to-logic.html#type-checking-generic-functions-beyond-horn-clauses":{"tf":2.0},"high-level-overview.html#crate-structure":{"tf":1.0},"traits/canonicalization.html#executing-the-query":{"tf":1.0},"miri.html#miri":{"tf":1.7320508075688773},"compiler-debugging.html#debugging-the-compiler":{"tf":1.0},"type-inference.html#region-constraints":{"tf":1.0},"traits/caching.html#an-example":{"tf":1.0},"method-lookup.html#candidate-assembly":{"tf":1.0},"variance.html#addendum-variance-on-traits":{"tf":1.0},"mir/passes.html#stealing":{"tf":1.0},"mir/visitor.html#mir-visitor":{"tf":1.0},"traits/resolution.html#selection-during-translation":{"tf":1.4142135623730952},"rustdoc.html#from-soup-to-nuts":{"tf":1.0},"diag.html#error-messages":{"tf":1.0},"traits/lowering-to-logic.html#type-checking-normal-functions":{"tf":1.4142135623730952},"diag.html#declaring-a-lint":{"tf":1.0},"compiler-debugging.html#debugging-llvm":{"tf":1.0},"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":2.0},"const-eval.html#constant-evaluation":{"tf":2.23606797749979},"traits/specialization.html#specialization":{"tf":1.4142135623730952},"mir/regionck.html#skolemization-and-universes":{"tf":1.4142135623730952},"rustc-driver.html#a-note-on-lifetimes":{"tf":1.0},"tests/adding.html#what-kind-of-test-should-i-add":{"tf":2.23606797749979},"traits/resolution.html#major-concepts":{"tf":1.0},"incremental-compilation.html#the-basic-algorithm":{"tf":1.0},"hir.html#out-of-band-storage-and-the--crate--type":{"tf":1.0},"traits/canonicalization.html#canonicalizing-the-query":{"tf":1.0},"compiler-debugging.html#expensive-operations-in-logs":{"tf":1.4142135623730952},"how-to-build-and-run.html#running-xpy-and-building-a-stage1-compiler":{"tf":1.0},"compiler-debugging.html#getting-logging-output":{"tf":1.0},"query.html#cycles-between-queries":{"tf":1.0},"traits/lowering-to-logic.html#lowering-to-logic":{"tf":1.0},"query.html#adding-a-new-kind-of-query":{"tf":1.4142135623730952},"incremental-compilation.html#the-try-mark-green-algorithm":{"tf":1.0},"traits/canonicalization.html#canonicalizing-the-query-result":{"tf":1.0},"tests/adding.html#adding-new-tests":{"tf":1.0},"query.html#queries-demand-driven-compilation":{"tf":1.0},"rustdoc.html#hot-potato":{"tf":1.0},"high-level-overview.html#the-main-stages-of-compilation":{"tf":1.0},"macro-expansion.html#the-macro-parser":{"tf":1.4142135623730952}},"df":58}},"x":{"docs":{},"df":0,"t":{"docs":{"mir/regionck.html#subtyping-and-skolemization":{"tf":1.0},"query.html#queries-demand-driven-compilation":{"tf":1.0},"rustdoc.html#cheat-sheet":{"tf":1.0},"miri.html#miri":{"tf":1.0},"appendix/stupid-stats.html#overview-of-the-compilation-process":{"tf":2.0},"incremental-compilation.html#the-basic-algorithm":{"tf":1.0},"tests/adding.html#adding-new-tests":{"tf":1.0},"incremental-compilation.html#the-query-dag":{"tf":1.4142135623730952},"traits/lowering-to-logic.html#rust-traits-and-logic":{"tf":1.0},"traits/canonical-queries.html#examples":{"tf":1.4142135623730952},"traits/goals-and-clauses.html#domain-goals":{"tf":1.0},"traits/lowering-rules.html#trait-header":{"tf":1.4142135623730952},"traits/lowering-rules.html#associated-type-declarations":{"tf":1.4142135623730952},"rustdoc.html#hot-potato":{"tf":1.0},"traits/hrtb.html#basic-matching-and-skolemization-leaks":{"tf":1.0},"appendix/stupid-stats.html#what-next":{"tf":1.0},"mir/borrowck.html#major-phases-of-the-borrow-checker":{"tf":1.0},"traits/goals-and-clauses.html#coinductive-goals":{"tf":1.0},"mir/passes.html#stealing":{"tf":1.0},"appendix/stupid-stats.html#compilercalls":{"tf":1.0},"how-to-build-and-run.html#running-xpy-and-building-a-stage1-compiler":{"tf":1.0},"traits/caching.html#an-example":{"tf":1.4142135623730952}},"df":22}},"g":{"docs":{"traits/goals-and-clauses.html#incomplete-chapter":{"tf":1.0},"traits/canonical-queries.html#the-traditional-interactive-prolog-query":{"tf":1.0},"traits/chalk-overview.html#blog-posts":{"tf":1.0}},"df":3}},"f":{"docs":{},"df":0,"a":{"docs":{"macro-expansion.html#the-macro-parser":{"tf":1.4142135623730952}},"df":1}},"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"w":{"docs":{"compiler-debugging.html#getting-logging-output":{"tf":1.0}},"df":1}}}},"v":{"docs":{},"df":0,"i":{"docs":{},"df":0,"g":{"docs":{"appendix/glossary.html#appendix-c-glossary":{"tf":1.0}},"df":1}}},"d":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{},"df":0,"h":{"docs":{},"df":0,"u":{"docs":{},"df":0,"r":{"docs":{"traits/bibliography.html#bibliography":{"tf":1.4142135623730952}},"df":1,"'":{"docs":{"traits/lowering-to-logic.html#type-checking-generic-functions-beyond-horn-clauses":{"tf":1.0}},"df":1}}}}}}},"i":{"docs":{},"df":0,"v":{"docs":{"variance.html#the-algorithm":{"tf":1.0}},"df":1}},"t":{"docs":{},"df":0,"i":{"docs":{},"df":0,"v":{"docs":{"appendix/glossary.html#appendix-c-glossary":{"tf":1.0}},"df":1}},"u":{"docs":{},"df":0,"r":{"docs":{"appendix/stupid-stats.html#appendix-a-a-tutorial-on-creating-a-drop-in-replacement-for-rustc":{"tf":1.0},"rustc-driver.html#the-rustc-driver":{"tf":1.0},"type-inference.html#trying-equality":{"tf":1.0},"rustdoc.html#the-walking-tour-of-rustdoc":{"tf":1.0},"method-lookup.html#method-lookup":{"tf":1.0},"traits/canonical-queries.html#the-traditional-interactive-prolog-query":{"tf":1.0},"mir/index.html#key-mir-vocabulary":{"tf":1.0},"traits/resolution.html#major-concepts":{"tf":1.0},"traits/resolution.html#selection":{"tf":1.0},"variance.html#variance-and-object-types":{"tf":1.4142135623730952}},"df":10}}},"m":{"docs":{},"df":0,"e":{"docs":{"tests/running.html#running-an-individual-test":{"tf":1.0},"name-resolution.html#todo":{"tf":1.0},"high-level-overview.html#crate-structure":{"tf":1.4142135623730952},"name-resolution.html#overall-strategy":{"tf":2.0},"mir/passes.html#seeing-how-the-mir-changes-as-the-compiler-executes":{"tf":2.0},"appendix/background.html#what-is-a-free-region-or-a-free-variable-what-about-bound-region":{"tf":1.0},"appendix/stupid-stats.html#overview-of-the-compilation-process":{"tf":1.0},"appendix/glossary.html#appendix-c-glossary":{"tf":1.0},"mir/regionck.html#universes-and-skolemized-region-elements":{"tf":1.0},"macro-expansion.html#macro-expansion":{"tf":1.0},"query.html#adding-a-new-kind-of-query":{"tf":3.1622776601683797},"tests/adding.html#guide-to-the-ui-tests":{"tf":1.0},"name-resolution.html#name-resolution":{"tf":2.6457513110645909},"hir.html#identifiers-in-the-hir":{"tf":1.7320508075688773},"rustc-driver.html#the-rustc-driver":{"tf":1.0},"compiletest.html#adding-a-new-header-command":{"tf":1.0},"ty.html#import-conventions":{"tf":1.0},"traits/lowering-rules.html#notation":{"tf":1.0},"name-resolution.html#scopes-and-ribs":{"tf":2.8284271247461905},"tests/adding.html#naming-your-test":{"tf":2.0},"miri.html#interpretation":{"tf":1.0},"traits/lowering-to-logic.html#type-checking-generic-functions-beyond-horn-clauses":{"tf":1.4142135623730952},"traits/associated-types.html#skolemized-associated-types":{"tf":1.0},"ty.html#the-tcx-and-how-it-uses-lifetimes":{"tf":1.0},"traits/goals-and-clauses.html#domain-goals":{"tf":1.0},"mir/index.html#key-mir-vocabulary":{"tf":1.7320508075688773},"conventions.html#how-to-structure-your-pr":{"tf":1.0},"diag.html#error-messages":{"tf":1.0},"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.4142135623730952},"incrcomp-debugging.html#dumping-the-graph":{"tf":1.0},"high-level-overview.html#the-main-stages-of-compilation":{"tf":1.4142135623730952},"traits/lowering-rules.html#rule-names-and-cross-references":{"tf":1.4142135623730952},"mir/regionck.html#back-to-our-example":{"tf":1.0},"mir/regionck.html#what-is-a-universe":{"tf":3.3166247903554},"ty.html#allocating-and-working-with-types":{"tf":1.4142135623730952},"hir.html#the-hir":{"tf":1.0}},"df":36,"d":{"docs":{},"df":0,"p":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"u":{"docs":{},"df":0,"l":{"docs":{},"df":0,"t":{"docs":{"macro-expansion.html#the-macro-parser":{"tf":1.4142135623730952}},"df":1}}}}}}}}}}}},"s":{"docs":{},"df":0,"p":{"docs":{},"df":0,"a":{"docs":{},"df":0,"c":{"docs":{"name-resolution.html#namespaces":{"tf":2.0},"name-resolution.html#scopes-and-ribs":{"tf":1.7320508075688773}},"df":2}}}},".":{"docs":{},"df":0,"t":{"docs":{},"df":0,"o":{"docs":{},"df":0,"_":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"r":{"docs":{"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.0}},"df":1}}}}}}},"/":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{"appendix/glossary.html#appendix-c-glossary":{"tf":1.0}},"df":1}}}},"a":{"docs":{},"df":0,"b":{"docs":{},"df":0,"l":{"docs":{"hir.html#identifiers-in-the-hir":{"tf":1.0}},"df":1}}}}}},"b":{"docs":{"ty.html#allocating-and-working-with-types":{"tf":1.0},"mir/visitor.html#mir-visitor":{"tf":1.0}},"df":2},"l":{"docs":{},"df":0,"l":{"docs":{"appendix/glossary.html#appendix-c-glossary":{"tf":1.0},"mir/regionck.html#mir-based-region-checking-nll":{"tf":1.7320508075688773},"mir/borrowck.html#major-phases-of-the-borrow-checker":{"tf":1.4142135623730952},"type-inference.html#extracting-region-constraints":{"tf":1.7320508075688773},"mir/regionck.html#extending-the-universal-regions-check":{"tf":1.0}},"df":5,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"p":{"docs":{},"df":0,"l":{"docs":{},"df":0,"a":{"docs":{},"df":0,"c":{"docs":{},"df":0,"e":{"docs":{},"df":0,"_":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"g":{"docs":{},"df":0,"i":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"s":{"docs":{},"df":0,"_":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"_":{"docs":{},"df":0,"m":{"docs":{},"df":0,"i":{"docs":{},"df":0,"r":{"docs":{"mir/borrowck.html#major-phases-of-the-borrow-checker":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"p":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"t":{"docs":{"miri.html#miri":{"tf":1.0}},"df":1}}}}}}},"m":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{},"df":0,"s":{"docs":{},"df":0,"a":{"docs":{},"df":0,"k":{"docs":{},"df":0,"i":{"docs":{"tests/running.html#running-tests":{"tf":1.0},"mir/regionck.html#another-example":{"tf":1.0},"traits/associated-types.html#integration-with-unification":{"tf":1.0}},"df":3}}}}}}},"o":{"docs":{},"df":0,"l":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"g":{"docs":{},"df":0,"p":{"docs":{},"df":0,"a":{"docs":{},"df":0,"d":{"docs":{"mir/visitor.html#mir-visitor":{"tf":1.4142135623730952},"mir/passes.html#implementing-and-registering-a-pass":{"tf":1.0},"mir/passes.html#seeing-how-the-mir-changes-as-the-compiler-executes":{"tf":1.7320508075688773}},"df":3}}}}}}}}}},"w":{"docs":{"traits/canonicalization.html#processing-the-canonicalized-query-result":{"tf":1.7320508075688773},"type-inference.html#extracting-region-constraints":{"tf":1.0},"appendix/stupid-stats.html#overview-of-the-compilation-process":{"tf":1.0},"tests/adding.html#naming-your-test":{"tf":1.0},"mir/regionck.html#skolemization-and-outlives-constraints":{"tf":1.4142135623730952},"how-to-build-and-run.html#running-xpy-and-building-a-stage1-compiler":{"tf":1.0},"traits/associated-types.html#integration-with-unification":{"tf":1.0},"traits/resolution.html#confirmation":{"tf":1.0},"traits/canonical-queries.html#examples":{"tf":1.4142135623730952},"mir/regionck.html#back-to-our-example":{"tf":1.0},"query.html#how-the-compiler-executes-a-query":{"tf":1.0},"variance.html#variance-and-associated-types":{"tf":1.0},"traits/canonicalization.html#executing-the-query":{"tf":1.0},"appendix/stupid-stats.html#appendix-a-a-tutorial-on-creating-a-drop-in-replacement-for-rustc":{"tf":1.0},"traits/lowering-to-logic.html#rust-traits-and-logic":{"tf":1.0},"traits/hrtb.html#higher-ranked-trait-obligations":{"tf":1.0},"traits/associated-types.html#projection-equality":{"tf":1.0},"traits/lowering-rules.html#transforming-the-lowered-where-clauses":{"tf":1.0},"high-level-overview.html#the-main-stages-of-compilation":{"tf":1.0},"incremental-compilation.html#the-query-dag":{"tf":1.4142135623730952},"hir.html#identifiers-in-the-hir":{"tf":1.0},"traits/caching.html#an-example":{"tf":1.0},"mir/regionck.html#subtyping-and-skolemization":{"tf":1.0},"variance.html#trait-variance-and-vtable-resolution":{"tf":1.0},"compiler-debugging.html#getting-a-backtrace-for-errors":{"tf":1.4142135623730952},"traits/canonicalization.html#canonicalizing-the-query-result":{"tf":1.0},"query.html#adding-a-new-kind-of-query":{"tf":1.0},"miri.html#miri":{"tf":1.0},"traits/hrtb.html#basic-matching-and-skolemization-leaks":{"tf":1.4142135623730952},"how-to-build-and-run.html#creating-a-rustup-toolchain":{"tf":1.0},"traits/lowering-to-logic.html#type-checking-normal-functions":{"tf":1.4142135623730952},"miri.html#interpretation":{"tf":1.4142135623730952},"traits/resolution.html#candidate-assembly":{"tf":1.0},"mir/regionck.html#final-example":{"tf":1.7320508075688773},"mir/regionck.html#what-is-a-universe":{"tf":1.7320508075688773}},"df":35},"b":{"docs":{},"df":0,"o":{"docs":{},"df":0,"d":{"docs":{},"df":0,"i":{"docs":{"mir/index.html#mir-data-types":{"tf":1.0}},"df":1}}}},"i":{"docs":{},"df":0,"s":{"docs":{"conventions.html#how-to-structure-your-pr":{"tf":1.0}},"df":1}},"d":{"docs":{},"df":0,"e":{"docs":{"incrcomp-debugging.html#dumping-the-graph":{"tf":3.4641016151377546},"mir/regionck.html#skolemization-and-outlives-constraints":{"tf":1.4142135623730952},"appendix/code-index.html#appendix-d-code-index":{"tf":1.0},"hir.html#identifiers-in-the-hir":{"tf":1.4142135623730952},"appendix/stupid-stats.html#overview-of-the-compilation-process":{"tf":1.4142135623730952},"appendix/glossary.html#appendix-c-glossary":{"tf":2.0},"high-level-overview.html#the-main-stages-of-compilation":{"tf":1.4142135623730952},"rustc-driver.html#the-rustc-driver":{"tf":1.0},"hir.html#the-hir-map":{"tf":3.0},"incremental-compilation.html#improvements-to-the-basic-algorithm":{"tf":1.4142135623730952},"the-parser.html#the-parser":{"tf":2.449489742783178},"type-checking.html#type-collection":{"tf":1.7320508075688773},"incremental-compilation.html#the-try-mark-green-algorithm":{"tf":1.7320508075688773},"query.html#adding-a-new-kind-of-query":{"tf":2.0}},"df":14,".":{"docs":{},"df":0,"j":{"docs":{"rustdoc.html#dotting-is-and-crossing-ts":{"tf":1.0}},"df":1}},"i":{"docs":{},"df":0,"d":{"docs":{"hir.html#identifiers-in-the-hir":{"tf":1.7320508075688773},"hir.html#the-hir-map":{"tf":1.4142135623730952},"appendix/glossary.html#appendix-c-glossary":{"tf":1.0}},"df":3}}}},"s":{"docs":{},"df":0,"o":{"docs":{},"df":0,"l":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{"traits/canonical-queries.html#a-trait-query-in-rustc":{"tf":1.0},"traits/associated-types.html#integration-with-unification":{"tf":1.0}},"df":2}}}}},"r":{"docs":{},"df":0,"m":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{"hir.html#the-hir":{"tf":1.0},"traits/lowering-rules.html#associated-type-declarations":{"tf":1.4142135623730952},"traits/associated-types.html#projection-equality":{"tf":1.4142135623730952},"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.0},"compiler-debugging.html#getting-a-backtrace":{"tf":1.0},"traits/associated-types.html#skolemized-associated-types":{"tf":1.4142135623730952},"compiletest.html#adding-a-new-header-command":{"tf":1.4142135623730952},"type-inference.html#extracting-region-constraints":{"tf":1.0},"tests/adding.html#normalization":{"tf":3.4641016151377546},"traits/lowering-rules.html#lowering-function-and-constant-declarations":{"tf":1.0},"appendix/stupid-stats.html#appendix-a-a-tutorial-on-creating-a-drop-in-replacement-for-rustc":{"tf":1.0},"traits/lowering-to-logic.html#type-checking-normal-functions":{"tf":1.0},"macro-expansion.html#macro-expansion":{"tf":1.7320508075688773},"tests/adding.html#header-commands-configuring-rustc":{"tf":1.0},"appendix/glossary.html#appendix-c-glossary":{"tf":1.4142135623730952},"hir.html#identifiers-in-the-hir":{"tf":1.0},"traits/canonical-queries.html#canonical-queries":{"tf":1.0},"traits/goals-and-clauses.html#domain-goals":{"tf":1.7320508075688773},"traits/associated-types.html#equality-and-associated-types":{"tf":1.0},"mir/regionck.html#mir-based-region-checking-nll":{"tf":1.0},"traits/canonical-queries.html#a-trait-query-in-rustc":{"tf":1.0},"incremental-compilation.html#the-try-mark-green-algorithm":{"tf":1.0},"traits/associated-types.html#associated-type-projection-and-normalization":{"tf":3.1622776601683797},"tests/adding.html#guide-to-the-ui-tests":{"tf":1.4142135623730952},"traits/lowering-rules.html#function-and-constant-values":{"tf":1.0},"macro-expansion.html#example":{"tf":1.0},"traits/lowering-rules.html#associated-type-values":{"tf":1.0},"traits/index.html#trait-solving-new-style":{"tf":1.0},"macro-expansion.html#the-macro-parser":{"tf":2.0}},"df":29,"i":{"docs":{},"df":0,"z":{"docs":{},"df":0,"e":{"docs":{},"df":0,"_":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"d":{"docs":{},"df":0,"o":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{"compiletest.html#adding-a-new-header-command":{"tf":1.4142135623730952}},"df":1}}},"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"r":{"docs":{"compiletest.html#adding-a-new-header-command":{"tf":1.4142135623730952}},"df":1}}}}}}},"(":{"docs":{},"df":0,"<":{"docs":{},"df":0,"t":{"docs":{"traits/associated-types.html#projection-equality":{"tf":1.0},"traits/goals-and-clauses.html#domain-goals":{"tf":1.0}},"df":2},"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"l":{"docs":{},"df":0,"f":{"docs":{"traits/lowering-rules.html#associated-type-declarations":{"tf":1.0}},"df":1}}}},"p":{"docs":{},"df":0,"0":{"docs":{"traits/lowering-rules.html#associated-type-values":{"tf":1.0}},"df":1}},"o":{"docs":{},"df":0,"p":{"docs":{},"df":0,"t":{"docs":{},"df":0,"i":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"<":{"docs":{},"df":0,"t":{"docs":{"traits/associated-types.html#associated-type-projection-and-normalization":{"tf":1.0}},"df":1}}}}}}}}},"p":{"docs":{},"df":0,"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"j":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{"traits/goals-and-clauses.html#domain-goals":{"tf":1.4142135623730952}},"df":1}}}}}}}},"v":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{},"df":0,"u":{"docs":{"traits/lowering-rules.html#function-and-constant-values":{"tf":1.0}},"df":1}}}}}}}}}}},"t":{"docs":{},"df":0,"h":{"docs":{"mir/passes.html#stealing":{"tf":1.0},"traits/canonical-queries.html#examples":{"tf":1.0},"appendix/stupid-stats.html#overview-of-the-compilation-process":{"tf":1.0},"method-lookup.html#candidate-assembly":{"tf":1.0}},"df":4},"e":{"docs":{"traits/resolution.html#major-concepts":{"tf":1.0},"rustc-driver.html#a-note-on-lifetimes":{"tf":1.0},"traits/canonicalization.html#canonicalization":{"tf":1.0},"diag.html#error-messages":{"tf":1.0},"incremental-compilation.html#the-try-mark-green-algorithm":{"tf":1.0},"traits/chalk-overview.html#lowering":{"tf":1.0},"compiler-debugging.html#getting-a-backtrace-for-errors":{"tf":2.23606797749979},"mir/regionck.html#universes-and-skolemized-region-elements":{"tf":1.0},"traits/resolution.html#selection":{"tf":1.0},"compiler-debugging.html#debugging-llvm":{"tf":1.0},"tests/running.html#running-a-subset-of-the-test-suites":{"tf":1.0},"macro-expansion.html#the-macro-parser":{"tf":1.0},"compiler-debugging.html#getting-logging-output":{"tf":1.0},"tests/adding.html#revisions":{"tf":1.0},"mir/regionck.html#another-example":{"tf":1.0},"tests/adding.html#error-annotations":{"tf":1.4142135623730952},"traits/resolution.html#confirmation":{"tf":1.4142135623730952},"variance.html#the-algorithm":{"tf":1.0},"compiler-debugging.html#expensive-operations-in-logs":{"tf":1.4142135623730952},"rustdoc.html#hot-potato":{"tf":1.0},"traits/resolution.html#trait-resolution-old-style":{"tf":1.0},"incrcomp-debugging.html#tracking-down-incorrect-edges":{"tf":1.0},"traits/index.html#trait-solving-new-style":{"tf":1.0},"traits/canonical-queries.html#the-traditional-interactive-prolog-query":{"tf":1.0},"rustdoc.html#the-walking-tour-of-rustdoc":{"tf":1.4142135623730952},"traits/goals-and-clauses.html#domain-goals":{"tf":1.0},"method-lookup.html#method-lookup":{"tf":1.0},"variance.html#variance-and-object-types":{"tf":1.4142135623730952},"appendix/stupid-stats.html#appendix-a-a-tutorial-on-creating-a-drop-in-replacement-for-rustc":{"tf":1.0},"traits/resolution.html#candidate-assembly":{"tf":1.4142135623730952},"traits/hrtb.html#basic-matching-and-skolemization-leaks":{"tf":1.0},"type-checking.html#type-collection":{"tf":1.0},"ty.html#allocating-and-working-with-types":{"tf":1.0},"compiletest.html#adding-a-new-header-command":{"tf":1.4142135623730952},"traits/associated-types.html#skolemized-associated-types":{"tf":1.0},"rustdoc.html#from-soup-to-nuts":{"tf":1.4142135623730952},"compiletest.html#implementing-the-behavior-change":{"tf":1.0},"traits/goals-and-clauses.html#goals-and-clauses-meta-structure":{"tf":1.0},"traits/lowering-rules.html#associated-type-values":{"tf":1.0},"incremental-compilation.html#the-basic-algorithm":{"tf":1.0},"method-lookup.html#candidate-assembly":{"tf":1.0},"tests/adding.html#normalization":{"tf":1.4142135623730952},"compiler-debugging.html#debugging-the-compiler":{"tf":1.0},"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.4142135623730952},"type-inference.html#a-note-on-terminology":{"tf":1.0},"appendix/stupid-stats.html#compilercontroller":{"tf":1.0},"query.html#how-the-compiler-executes-a-query":{"tf":1.4142135623730952},"traits/canonicalization.html#canonicalizing-the-query-result":{"tf":1.4142135623730952}},"df":48,"/":{"docs":{},"df":0,"w":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"n":{"docs":{"appendix/stupid-stats.html#appendix-a-a-tutorial-on-creating-a-drop-in-replacement-for-rustc":{"tf":1.0}},"df":1}}}}}},"i":{"docs":{},"df":0,"c":{"docs":{"tests/running.html#running-tests":{"tf":1.0},"tests/adding.html#comment-explaining-what-the-test-is-about":{"tf":1.0},"tests/adding.html#adding-new-tests":{"tf":1.0},"conventions.html#copyright-notice":{"tf":1.4142135623730952},"mir/index.html#key-mir-vocabulary":{"tf":1.0},"conventions.html#line-length":{"tf":1.0}},"df":6},"o":{"docs":{},"df":0,"n":{"docs":{"traits/lowering-to-logic.html#type-checking-generic-functions-beyond-horn-clauses":{"tf":1.4142135623730952},"mir/regionck.html#what-is-a-universe":{"tf":1.0},"type-inference.html#subtyping-obligations":{"tf":1.0}},"df":3}}},"_":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"_":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"f":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"c":{"docs":{},"df":0,"e":{"docs":{},"df":0,"<":{"docs":{},"df":0,"'":{"docs":{},"df":0,"a":{"docs":{"ty.html#the-tcx-and-how-it-uses-lifetimes":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}},"a":{"docs":{},"df":0,"b":{"docs":{},"df":0,"l":{"docs":{"rustdoc.html#other-tricks-up-its-sleeve":{"tf":1.0},"mir/index.html#the-mir-mid-level-ir":{"tf":1.0},"macro-expansion.html#the-macro-parser":{"tf":1.0}},"df":3}},"t":{"docs":{"traits/lowering-to-logic.html#type-checking-generic-functions-beyond-horn-clauses":{"tf":1.7320508075688773},"traits/lowering-rules.html#notation":{"tf":1.4142135623730952},"type-inference.html#a-note-on-terminology":{"tf":1.0},"mir/regionck.html#another-example":{"tf":1.0},"variance.html#variance-of-type-and-lifetime-parameters":{"tf":1.4142135623730952},"variance.html#the-algorithm":{"tf":1.0},"rustdoc.html#dotting-is-and-crossing-ts":{"tf":1.0},"traits/lowering-to-logic.html#rust-traits-and-logic":{"tf":1.4142135623730952}},"df":8}}},"_":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"p":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{"appendix/stupid-stats.html#compilercalls":{"tf":1.0},"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.0}},"df":2,"(":{"docs":{},"df":0,"&":{"docs":{},"df":0,"m":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.0}},"df":1}}}}}}}}}}},"n":{"docs":{"query.html#adding-a-new-kind-of-query":{"tf":1.0},"compiletest.html#introduction":{"tf":1.0},"appendix/stupid-stats.html#appendix-a-a-tutorial-on-creating-a-drop-in-replacement-for-rustc":{"tf":1.0},"tests/intro.html#testing-on-emulators":{"tf":1.0},"macro-expansion.html#the-macro-parser":{"tf":1.7320508075688773},"traits/resolution.html#trait-resolution-old-style":{"tf":1.0},"traits/lowering-to-logic.html#type-checking-generic-functions-beyond-horn-clauses":{"tf":1.0},"appendix/glossary.html#appendix-c-glossary":{"tf":1.7320508075688773},"type-inference.html#extracting-region-constraints":{"tf":1.4142135623730952},"traits/resolution.html#selection":{"tf":1.0},"mir/borrowck.html#mir-borrow-check":{"tf":1.0},"mir/regionck.html#mir-based-region-checking-nll":{"tf":1.0}},"df":12,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"d":{"docs":{},"df":0,"_":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"y":{"docs":{},"df":0,"l":{"docs":{"diag.html#lint-groups":{"tf":1.4142135623730952}},"df":1}}}}}}}}}}}}},"e":{"docs":{"hir.html#the-hir-map":{"tf":1.0},"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.0},"compiletest.html#adding-a-new-header-command":{"tf":1.0},"traits/canonical-queries.html#examples":{"tf":1.7320508075688773},"miri.html#miri":{"tf":1.0},"miri.html#interpretation":{"tf":1.0},"variance.html#the-algorithm":{"tf":1.7320508075688773}},"df":7,"t":{"docs":{},"df":0,"h":{"docs":{},"df":0,"e":{"docs":{},"df":0,"l":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"s":{"docs":{"query.html#cycles-between-queries":{"tf":1.0},"traits/resolution.html#selection-during-translation":{"tf":1.0}},"df":2}}}}}}}},"_":{"docs":{},"df":0,"u":{"docs":{},"df":0,"p":{"docs":{},"df":0,"p":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"_":{"docs":{},"df":0,"c":{"docs":{},"df":0,"a":{"docs":{},"df":0,"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"_":{"docs":{},"df":0,"g":{"docs":{},"df":0,"l":{"docs":{},"df":0,"o":{"docs":{},"df":0,"b":{"docs":{"diag.html#lint-groups":{"tf":1.0}},"df":1}}}}}}}}}}}}}}},"s":{"docs":{},"df":0,"n":{"docs":{},"df":0,"a":{"docs":{},"df":0,"k":{"docs":{},"df":0,"e":{"docs":{},"df":0,"_":{"docs":{},"df":0,"c":{"docs":{},"df":0,"a":{"docs":{},"df":0,"s":{"docs":{"diag.html#lint-groups":{"tf":1.0}},"df":1}}}}}}}}},"c":{"docs":{},"df":0,"a":{"docs":{},"df":0,"m":{"docs":{},"df":0,"e":{"docs":{},"df":0,"l":{"docs":{},"df":0,"_":{"docs":{},"df":0,"c":{"docs":{},"df":0,"a":{"docs":{},"df":0,"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"_":{"docs":{},"df":0,"t":{"docs":{},"df":0,"y":{"docs":{},"df":0,"p":{"docs":{"diag.html#lint-groups":{"tf":1.0}},"df":1}}}}}}}}}}}}}}},"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"m":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{"traits/lowering-rules.html#notation":{"tf":1.4142135623730952}},"df":1}}}}}}},"m":{"docs":{},"df":0,"i":{"docs":{},"df":0,"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{"appendix/background.html#what-is-co--and-contra-variance":{"tf":1.0}},"df":1}}},"n":{"docs":{"method-lookup.html#candidate-assembly":{"tf":1.0}},"df":1}}}},"u":{"docs":{},"df":0,"r":{"docs":{},"df":0,"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"y":{"docs":{},"df":0,"/":{"docs":{},"df":0,"c":{"docs":{},"df":0,"h":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{},"df":0,"k":{"docs":{},"df":0,"/":{"docs":{},"df":0,"b":{"docs":{},"df":0,"l":{"docs":{},"df":0,"o":{"docs":{},"df":0,"b":{"docs":{},"df":0,"/":{"docs":{},"df":0,"m":{"docs":{},"df":0,"a":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"/":{"docs":{},"df":0,"c":{"docs":{},"df":0,"h":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{},"df":0,"k":{"docs":{"traits/slg.html#the-slg-solver":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{"rustdoc.html#from-soup-to-nuts":{"tf":1.0}},"df":1,"s":{"docs":{},"df":0,"h":{"docs":{},"df":0,"e":{"docs":{},"df":0,"l":{"docs":{"rustdoc.html#dotting-is-and-crossing-ts":{"tf":1.0}},"df":1}}}}},"m":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"miri.html#datastructures":{"tf":1.0},"traits/chalk-overview.html#intermediate-representation-ir":{"tf":1.0}},"df":2}},"b":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"high-level-overview.html#crate-structure":{"tf":1.0},"hir.html#out-of-band-storage-and-the--crate--type":{"tf":1.0},"hir.html#identifiers-in-the-hir":{"tf":1.4142135623730952},"traits/canonical-queries.html#examples":{"tf":1.0},"traits/lowering-rules.html#associated-type-declarations":{"tf":1.0},"compiletest.html#introduction":{"tf":1.0},"mir/borrowck.html#mir-borrow-check":{"tf":1.0},"ty.html#beyond-types-other-kinds-of-arena-allocated-data-structures":{"tf":1.0},"traits/canonicalization.html#canonicalization":{"tf":1.0},"appendix/stupid-stats.html#appendix-a-a-tutorial-on-creating-a-drop-in-replacement-for-rustc":{"tf":1.0},"mir/passes.html#seeing-how-the-mir-changes-as-the-compiler-executes":{"tf":1.0},"tests/adding.html#comment-explaining-what-the-test-is-about":{"tf":1.0},"mir/borrowck.html#major-phases-of-the-borrow-checker":{"tf":1.0},"how-to-build-and-run.html#creating-a-rustup-toolchain":{"tf":1.0},"traits/canonical-queries.html#the-traditional-interactive-prolog-query":{"tf":1.0},"tests/adding.html#naming-your-test":{"tf":1.0},"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":2.23606797749979},"appendix/background.html#appendix-b-background-topics":{"tf":1.0},"appendix/glossary.html#appendix-c-glossary":{"tf":1.4142135623730952},"method-lookup.html#method-lookup":{"tf":1.0},"hir.html#the-hir-map":{"tf":1.0},"mir/regionck.html#what-is-a-universe":{"tf":1.4142135623730952},"high-level-overview.html#the-main-stages-of-compilation":{"tf":1.4142135623730952},"how-to-build-and-run.html#create-a-configtoml":{"tf":1.0},"traits/lowering-rules.html#lowering-traits":{"tf":1.0},"compiler-debugging.html#getting-a-backtrace":{"tf":1.4142135623730952}},"df":26,"/":{"docs":{},"df":0,"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"l":{"docs":{},"df":0,"u":{"docs":{},"df":0,"m":{"docs":{},"df":0,"n":{"docs":{"appendix/glossary.html#appendix-c-glossary":{"tf":1.0}},"df":1}}}}}}}}}}}},"i":{"docs":{},"df":0,"g":{"docs":{},"df":0,"h":{"docs":{},"df":0,"t":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{"compiler-debugging.html#debugging-llvm":{"tf":1.4142135623730952}},"df":1}}}}},"c":{"docs":{},"df":0,"e":{"docs":{"query.html#queries-demand-driven-compilation":{"tf":1.0},"traits/lowering-to-logic.html#type-checking-generic-functions-beyond-horn-clauses":{"tf":1.0},"hir.html#out-of-band-storage-and-the--crate--type":{"tf":1.0},"conventions.html#how-to-structure-your-pr":{"tf":1.0},"query.html#how-the-compiler-executes-a-query":{"tf":1.0},"query.html#cycles-between-queries":{"tf":1.0}},"df":6},"h":{"docs":{},"df":0,"o":{"docs":{},"df":0,"l":{"docs":{},"df":0,"a":{"docs":{"traits/lowering-to-logic.html#source":{"tf":1.0}},"df":1}}}},"k":{"docs":{},"df":0,"n":{"docs":{},"df":0,"a":{"docs":{},"df":0,"m":{"docs":{"appendix/glossary.html#appendix-c-glossary":{"tf":1.0}},"df":1}}}}},"k":{"docs":{},"df":0,"o":{"docs":{},"df":0,"m":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{},"df":0,"s":{"docs":{},"df":0,"a":{"docs":{},"df":0,"k":{"docs":{},"df":0,"i":{"docs":{"incremental-compilation.html#footnotes":{"tf":1.0}},"df":1}}}}}}}}}}},"3":{"docs":{"name-resolution.html#scopes-and-ribs":{"tf":1.4142135623730952},"mir/regionck.html#final-example":{"tf":2.449489742783178},"appendix/stupid-stats.html#overview-of-the-compilation-process":{"tf":1.0},"method-lookup.html#steps":{"tf":2.0},"how-to-build-and-run.html#running-xpy-and-building-a-stage1-compiler":{"tf":1.0},"high-level-overview.html#the-main-stages-of-compilation":{"tf":1.4142135623730952},"compiler-debugging.html#getting-a-backtrace":{"tf":1.0},"traits/resolution.html#major-concepts":{"tf":1.0},"method-lookup.html#candidate-search":{"tf":1.4142135623730952},"method-lookup.html#candidate-assembly":{"tf":2.23606797749979},"variance.html#the-algorithm":{"tf":1.4142135623730952},"diag.html#suggestions":{"tf":1.7320508075688773},"mir/regionck.html#another-example":{"tf":2.6457513110645909}},"df":13,"8":{"docs":{},"df":0,"5":{"docs":{},"df":0,",":{"docs":{},"df":0,"1":{"docs":{},"df":0,"0":{"docs":{"compiletest.html#adding-a-new-header-command":{"tf":1.0}},"df":1}}}},"3":{"docs":{},"df":0,",":{"docs":{},"df":0,"6":{"docs":{"compiletest.html#adding-a-new-header-command":{"tf":1.0}},"df":1}}}},"2":{"docs":{"compiler-debugging.html#getting-a-backtrace":{"tf":1.0},"tests/adding.html#normalization":{"tf":2.0}},"df":2,"_":{"docs":{},"df":0,"u":{"docs":{},"df":0,"3":{"docs":{},"df":0,"2":{"docs":{"tests/adding.html#revisions":{"tf":1.0}},"df":1}}}},"0":{"docs":{},"df":0,",":{"docs":{},"df":0,"7":{"docs":{"compiletest.html#implementing-the-behavior-change":{"tf":1.0}},"df":1}}},"3":{"docs":{},"df":0,",":{"docs":{},"df":0,"6":{"docs":{"compiletest.html#implementing-the-behavior-change":{"tf":1.0}},"df":1}}},"b":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{"tests/adding.html#normalization":{"tf":1.4142135623730952},"tests/adding.html#ignoring-tests":{"tf":1.0}},"df":2}}}},"6":{"docs":{"compiler-debugging.html#getting-a-backtrace-for-errors":{"tf":1.0},"compiler-debugging.html#getting-a-backtrace":{"tf":1.0}},"df":2},"4":{"docs":{"compiler-debugging.html#getting-a-backtrace":{"tf":1.4142135623730952}},"df":1},"3":{"docs":{"compiler-debugging.html#getting-a-backtrace":{"tf":1.4142135623730952}},"df":1},"7":{"docs":{"compiler-debugging.html#getting-a-backtrace":{"tf":1.0}},"df":1},"5":{"docs":{"compiler-debugging.html#getting-a-backtrace":{"tf":1.0}},"df":1}},"7":{"docs":{"compiler-debugging.html#getting-a-backtrace-for-errors":{"tf":1.0},"compiler-debugging.html#getting-a-backtrace":{"tf":1.0}},"df":2,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"p":{"docs":{},"df":0,"l":{"docs":{},"df":0,"a":{"docs":{},"df":0,"c":{"docs":{},"df":0,"e":{"docs":{},"df":0,"1":{"docs":{},"df":0,"7":{"docs":{},"df":0,"h":{"docs":{},"df":0,"b":{"docs":{},"df":0,"e":{"docs":{},"df":0,"1":{"docs":{},"df":0,"0":{"docs":{},"df":0,"e":{"docs":{},"df":0,"a":{"docs":{},"df":0,"2":{"docs":{},"df":0,"e":{"docs":{},"df":0,"7":{"docs":{},"df":0,"c":{"docs":{},"df":0,"8":{"docs":{},"df":0,"0":{"docs":{},"df":0,"9":{"docs":{},"df":0,"b":{"docs":{},"df":0,"0":{"docs":{},"df":0,"b":{"docs":{"compiler-debugging.html#debugging-llvm":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}}}}}}}}}},"b":{"docs":{"traits/lowering-rules.html#trait-header":{"tf":2.23606797749979},"traits/lowering-to-logic.html#rust-traits-and-logic":{"tf":1.7320508075688773},"type-inference.html#region-constraints":{"tf":2.0},"traits/canonicalization.html#canonicalizing-the-query-result":{"tf":1.0},"query.html#adding-a-new-kind-of-query":{"tf":1.0},"traits/lowering-rules.html#lowering-where-clauses":{"tf":1.4142135623730952},"traits/canonical-queries.html#examples":{"tf":1.0},"mir/borrowck.html#major-phases-of-the-borrow-checker":{"tf":1.0},"mir/index.html#key-mir-vocabulary":{"tf":1.4142135623730952},"query.html#cycles-between-queries":{"tf":1.0},"appendix/background.html#appendix-b-background-topics":{"tf":1.0},"traits/goals-and-clauses.html#domain-goals":{"tf":1.0},"traits/canonicalization.html#processing-the-canonicalized-query-result":{"tf":2.23606797749979},"variance.html#the-algorithm":{"tf":1.0},"mir/regionck.html#skolemization-and-outlives-constraints":{"tf":1.4142135623730952},"traits/associated-types.html#skolemized-associated-types":{"tf":1.0},"traits/canonicalization.html#canonicalizing-the-query":{"tf":1.7320508075688773},"traits/canonicalization.html#executing-the-query":{"tf":1.4142135623730952},"variance.html#variance-and-object-types":{"tf":1.0},"type-inference.html#trying-equality":{"tf":1.4142135623730952},"traits/associated-types.html#integration-with-unification":{"tf":1.4142135623730952},"appendix/background.html#what-is-a-free-region-or-a-free-variable-what-about-bound-region":{"tf":3.1622776601683797},"mir/regionck.html#final-example":{"tf":1.0},"traits/resolution.html#candidate-assembly":{"tf":2.449489742783178},"appendix/background.html#what-is-a-control-flow-graph":{"tf":1.4142135623730952},"type-inference.html#subtyping-obligations":{"tf":2.0},"variance.html#variance-of-type-and-lifetime-parameters":{"tf":1.4142135623730952},"miri.html#allocations":{"tf":1.0},"mir/regionck.html#what-is-a-universe":{"tf":1.0}},"df":29,"u":{"docs":{},"df":0,"i":{"docs":{},"df":0,"l":{"docs":{},"df":0,"t":{"docs":{"compiler-debugging.html#getting-logging-output":{"tf":1.0},"how-to-build-and-run.html#creating-a-rustup-toolchain":{"tf":1.7320508075688773},"how-to-build-and-run.html#how-to-build-the-compiler-and-run-what-you-built":{"tf":1.4142135623730952},"tests/intro.html#compiletest-test-suites":{"tf":1.0},"how-to-build-and-run.html#running-xpy-and-building-a-stage1-compiler":{"tf":1.0},"incrcomp-debugging.html#tracking-down-incorrect-edges":{"tf":1.0},"tests/adding.html#normalization":{"tf":1.0},"diag.html#declaring-a-lint":{"tf":1.0}},"df":8},"d":{"docs":{"rustc-driver.html#the-rustc-driver":{"tf":1.0},"tests/intro.html#other-tests":{"tf":2.0},"traits/specialization.html#specialization":{"tf":1.4142135623730952},"how-to-build-and-run.html#creating-a-rustup-toolchain":{"tf":2.0},"conventions.html#how-to-structure-your-pr":{"tf":1.7320508075688773},"tests/intro.html#testing-with-docker-images":{"tf":1.7320508075688773},"rustdoc.html#other-tricks-up-its-sleeve":{"tf":1.0},"appendix/code-index.html#appendix-d-code-index":{"tf":1.0},"how-to-build-and-run.html#other-xpy-commands":{"tf":2.6457513110645909},"tests/running.html#running-a-subset-of-the-test-suites":{"tf":1.7320508075688773},"tests/intro.html#testing-infrastructure":{"tf":1.7320508075688773},"appendix/stupid-stats.html#appendix-a-a-tutorial-on-creating-a-drop-in-replacement-for-rustc":{"tf":1.4142135623730952},"tests/intro.html#the-compiler-testing-framework":{"tf":1.0},"rustdoc.html#cheat-sheet":{"tf":1.4142135623730952},"how-to-build-and-run.html#create-a-configtoml":{"tf":1.0},"how-to-build-and-run.html#running-xpy-and-building-a-stage1-compiler":{"tf":4.242640687119285},"tests/intro.html#testing-on-emulators":{"tf":1.0},"name-resolution.html#namespaces":{"tf":1.0},"how-to-build-and-run.html#how-to-build-the-compiler-and-run-what-you-built":{"tf":1.0},"tests/running.html#running-tests":{"tf":1.0},"compiler-debugging.html#getting-logging-output":{"tf":1.0},"compiler-debugging.html#debugging-llvm":{"tf":1.7320508075688773},"tests/intro.html#compiletest-test-suites":{"tf":1.0},"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.4142135623730952}},"df":24,"e":{"docs":{},"df":0,"r":{"docs":{"type-inference.html#creating-an-inference-context":{"tf":1.0}},"df":1}},"_":{"docs":{},"df":0,"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{},"df":0,"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"l":{"docs":{"appendix/stupid-stats.html#compilercalls":{"tf":1.0},"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.0}},"df":2,"l":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"(":{"docs":{},"df":0,"&":{"docs":{},"df":0,"m":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.4142135623730952}},"df":1}}}}}}}}}}}}}}}},"/":{"docs":{},"df":0,"<":{"docs":{},"df":0,"h":{"docs":{},"df":0,"o":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{"how-to-build-and-run.html#creating-a-rustup-toolchain":{"tf":1.4142135623730952},"compiler-debugging.html#debugging-llvm":{"tf":1.4142135623730952}},"df":2}}}},"t":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"g":{"docs":{},"df":0,"e":{"docs":{},"df":0,"t":{"docs":{"tests/adding.html#guide-to-the-ui-tests":{"tf":1.0}},"df":1}}}}}}},"x":{"docs":{},"df":0,"8":{"docs":{},"df":0,"6":{"docs":{},"df":0,"_":{"docs":{},"df":0,"6":{"docs":{},"df":0,"4":{"docs":{"compiler-debugging.html#getting-a-backtrace-for-errors":{"tf":1.4142135623730952}},"df":1}}}}}},"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"c":{"docs":{},"df":0,"h":{"docs":{},"df":0,"/":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{"tests/running.html#running-tests":{"tf":1.0}},"df":1}}}}}}}}},"$":{"docs":{},"df":0,"t":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"g":{"docs":{},"df":0,"e":{"docs":{},"df":0,"t":{"docs":{},"df":0,"/":{"docs":{},"df":0,"d":{"docs":{},"df":0,"o":{"docs":{},"df":0,"c":{"docs":{},"df":0,"/":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"d":{"docs":{"rustdoc.html#cheat-sheet":{"tf":1.0}},"df":1}}}}}}}}}}}}},"r":{"docs":{},"df":0,"i":{"docs":{},"df":0,"p":{"docs":{},"df":0,"l":{"docs":{},"df":0,"e":{"docs":{},"df":0,"/":{"docs":{},"df":0,"l":{"docs":{},"df":0,"l":{"docs":{},"df":0,"v":{"docs":{},"df":0,"m":{"docs":{},"df":0,"/":{"docs":{},"df":0,"b":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"/":{"docs":{},"df":0,"l":{"docs":{},"df":0,"l":{"docs":{},"df":0,"v":{"docs":{},"df":0,"m":{"docs":{"compiler-debugging.html#debugging-llvm":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}}}}}}}},"n":{"docs":{},"df":0,"c":{"docs":{},"df":0,"h":{"docs":{"how-to-build-and-run.html#creating-a-rustup-toolchain":{"tf":1.0},"appendix/stupid-stats.html#overview-of-the-compilation-process":{"tf":1.4142135623730952},"rustdoc.html#cheat-sheet":{"tf":1.0},"mir/index.html#key-mir-vocabulary":{"tf":1.0},"how-to-build-and-run.html#running-xpy-and-building-a-stage1-compiler":{"tf":1.0},"type-inference.html#inference-variables":{"tf":1.0},"rustdoc.html#from-soup-to-nuts":{"tf":1.0}},"df":7}},"d":{"docs":{},"df":0,"l":{"docs":{"type-checking.html#type-collection":{"tf":1.0},"param_env.html#parameter-environment":{"tf":1.0},"rustdoc.html#cheat-sheet":{"tf":1.0}},"df":3}}},"t":{"docs":{},"df":0,"t":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{"mir/index.html#key-mir-vocabulary":{"tf":1.4142135623730952}},"df":1}}}},"l":{"docs":{},"df":0,"g":{"docs":{"high-level-overview.html#crate-structure":{"tf":1.0}},"df":1},"k":{"docs":{"appendix/stupid-stats.html#overview-of-the-compilation-process":{"tf":1.0},"high-level-overview.html#crate-structure":{"tf":1.0},"the-parser.html#the-parser":{"tf":1.0}},"df":3}},"g":{"docs":{"compiler-debugging.html#getting-a-backtrace-for-errors":{"tf":2.0},"mir/borrowck.html#mir-borrow-check":{"tf":1.4142135623730952},"traits/caching.html#where-clauses-and-the-local-vs-global-cache":{"tf":1.0},"tests/adding.html#adding-new-tests":{"tf":1.0},"query.html#cycles-between-queries":{"tf":1.0},"compiler-debugging.html#debugging-llvm":{"tf":1.0},"incrcomp-debugging.html#tracking-down-incorrect-edges":{"tf":1.4142135623730952},"compiler-debugging.html#logging-etiquette":{"tf":1.0},"compiler-debugging.html#expensive-operations-in-logs":{"tf":1.0},"tests/adding.html#comment-explaining-what-the-test-is-about":{"tf":1.0},"compiler-debugging.html#getting-logging-output":{"tf":1.0},"conventions.html#use-todo-comments-for-things-you-dont-want-to-forget":{"tf":1.0}},"df":12}},"b":{"docs":{},"df":0,"0":{"docs":{"appendix/background.html#what-is-a-control-flow-graph":{"tf":1.4142135623730952},"mir/index.html#key-mir-vocabulary":{"tf":1.4142135623730952},"miri.html#miri":{"tf":1.0}},"df":3},"1":{"docs":{"appendix/background.html#what-is-a-control-flow-graph":{"tf":1.4142135623730952},"miri.html#miri":{"tf":1.4142135623730952}},"df":2},"4":{"docs":{"mir/index.html#key-mir-vocabulary":{"tf":1.0}},"df":1},"3":{"docs":{"appendix/background.html#what-is-a-control-flow-graph":{"tf":1.7320508075688773},"mir/index.html#key-mir-vocabulary":{"tf":1.0}},"df":2},"2":{"docs":{"appendix/background.html#what-is-a-control-flow-graph":{"tf":1.4142135623730952},"mir/index.html#key-mir-vocabulary":{"tf":2.23606797749979}},"df":2}},">":{"docs":{},"df":0,"(":{"docs":{},"df":0,"a":{"docs":{"traits/canonical-queries.html#examples":{"tf":1.4142135623730952}},"df":1}}},"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"a":{"docs":{},"df":0,"d":{"docs":{"rustdoc.html#dotting-is-and-crossing-ts":{"tf":1.0}},"df":1}},"w":{"docs":{},"df":0,"s":{"docs":{"tests/adding.html#other-header-commands":{"tf":1.0}},"df":1}},"k":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{"traits/resolution.html#selection":{"tf":1.0},"query.html#adding-a-new-kind-of-query":{"tf":1.0},"rustdoc.html#dotting-is-and-crossing-ts":{"tf":1.0},"how-to-build-and-run.html#running-xpy-and-building-a-stage1-compiler":{"tf":1.0},"traits/chalk-overview.html#an-overview-of-chalk":{"tf":1.0}},"df":5}}}},"a":{"docs":{},"df":0,"c":{"docs":{},"df":0,"e":{"docs":{"name-resolution.html#scopes-and-ribs":{"tf":1.0}},"df":1}},"n":{"docs":{},"df":0,"c":{"docs":{},"df":0,"h":{"docs":{"tests/intro.html#testing-infrastructure":{"tf":1.0},"appendix/background.html#what-is-a-control-flow-graph":{"tf":1.4142135623730952}},"df":2}}}},"s":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"'":{"docs":{"tests/intro.html#further-reading":{"tf":1.0}},"df":1}}}},"e":{"docs":{},"df":0,"a":{"docs":{},"df":0,"k":{"docs":{"conventions.html#how-to-structure-your-pr":{"tf":1.0},"traits/goals-and-clauses.html#domain-goals":{"tf":1.0},"rustc-driver.html#the-rustc-driver":{"tf":1.0},"appendix/background.html#what-is-a-control-flow-graph":{"tf":1.0},"rustdoc.html#hot-potato":{"tf":1.0},"tests/adding.html#comment-explaining-what-the-test-is-about":{"tf":1.0},"mir/regionck.html#another-example":{"tf":1.0}},"df":7}},"v":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{},"df":0,"i":{"docs":{"compiler-debugging.html#getting-a-backtrace":{"tf":1.7320508075688773}},"df":1}}}}},"i":{"docs":{},"df":0,"e":{"docs":{},"df":0,"f":{"docs":{"tests/intro.html#the-compiler-testing-framework":{"tf":1.0},"tests/intro.html#compiletest-test-suites":{"tf":1.0}},"df":2,"l":{"docs":{},"df":0,"i":{"docs":{"compiletest.html#adding-a-new-test-file":{"tf":1.0}},"df":1}}}},"n":{"docs":{},"df":0,"g":{"docs":{"variance.html#trait-variance-and-vtable-resolution":{"tf":1.0},"traits/associated-types.html#projection-equality":{"tf":1.0},"traits/canonicalization.html#canonicalizing-the-query-result":{"tf":1.0}},"df":3}}}},"e":{"docs":{"appendix/stupid-stats.html#appendix-a-a-tutorial-on-creating-a-drop-in-replacement-for-rustc":{"tf":1.0},"mir/borrowck.html#mir-borrow-check":{"tf":1.0},"mir/regionck.html#another-example":{"tf":1.0},"miri.html#interpretation":{"tf":1.0},"diag.html#span":{"tf":1.0},"mir/passes.html#seeing-how-the-mir-changes-as-the-compiler-executes":{"tf":1.0},"method-lookup.html#candidate-assembly":{"tf":1.0},"rustdoc.html#from-soup-to-nuts":{"tf":1.0},"mir/regionck.html#extending-the-universal-regions-check":{"tf":1.0},"appendix/glossary.html#appendix-c-glossary":{"tf":1.7320508075688773},"mir/index.html#key-mir-vocabulary":{"tf":1.0},"rustdoc.html#from-clean-to-crate":{"tf":1.0},"high-level-overview.html#crate-structure":{"tf":1.0},"tests/adding.html#naming-your-test":{"tf":1.0},"compiletest.html#adding-a-new-header-command":{"tf":1.0},"query.html#how-the-compiler-executes-a-query":{"tf":1.0},"mir/index.html#mir-data-types":{"tf":1.7320508075688773},"hir.html#identifiers-in-the-hir":{"tf":1.4142135623730952},"variance.html#dependency-graph-management":{"tf":1.0},"traits/index.html#trait-solving-new-style":{"tf":1.0},"appendix/code-index.html#appendix-d-code-index":{"tf":1.0},"tests/adding.html#revisions":{"tf":1.0},"traits/lowering-to-logic.html#type-checking-normal-functions":{"tf":1.0},"traits/goals-and-clauses.html#domain-goals":{"tf":1.0},"traits/associated-types.html#integration-with-unification":{"tf":1.0},"variance.html#variance-and-object-types":{"tf":1.0},"hir.html#out-of-band-storage-and-the--crate--type":{"tf":1.0},"type-checking.html#type-collection":{"tf":1.0},"high-level-overview.html#the-main-stages-of-compilation":{"tf":1.0},"miri.html#miri":{"tf":1.0}},"df":30,"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"m":{"docs":{"ty.html#allocating-and-working-with-types":{"tf":1.0},"high-level-overview.html#crate-structure":{"tf":1.0},"mir/regionck.html#mir-based-region-checking-nll":{"tf":1.0},"query.html#cycles-between-queries":{"tf":1.0},"variance.html#dependency-graph-management":{"tf":1.0},"traits/chalk-overview.html#parsing":{"tf":1.0},"traits/lowering-rules.html#transforming-the-lowered-where-clauses":{"tf":2.0}},"df":7}}},"n":{"docs":{},"df":0,"e":{"docs":{},"df":0,"f":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{"variance.html#addendum-variance-on-traits":{"tf":1.0},"traits/chalk-overview.html#an-overview-of-chalk":{"tf":1.0},"traits/specialization.html#specialization":{"tf":1.0},"appendix/stupid-stats.html#appendix-a-a-tutorial-on-creating-a-drop-in-replacement-for-rustc":{"tf":1.0}},"df":4}}}}},"h":{"docs":{},"df":0,"a":{"docs":{},"df":0,"v":{"docs":{"traits/chalk-overview.html#an-overview-of-chalk":{"tf":1.0}},"df":1,"i":{"docs":{},"df":0,"o":{"docs":{},"df":0,"u":{"docs":{},"df":0,"r":{"docs":{"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.4142135623730952},"appendix/stupid-stats.html#appendix-a-a-tutorial-on-creating-a-drop-in-replacement-for-rustc":{"tf":1.0}},"df":2}},"r":{"docs":{"compiletest.html#introduction":{"tf":1.4142135623730952},"compiler-debugging.html#debugging-llvm":{"tf":1.0},"diag.html#edition-gated-lints":{"tf":1.0},"method-lookup.html#candidate-assembly":{"tf":1.0},"tests/adding.html#header-commands-configuring-rustc":{"tf":1.0},"compiletest.html#implementing-the-behavior-change":{"tf":2.449489742783178},"compiletest.html#adding-a-new-header-command":{"tf":1.0}},"df":7}}}}}},"t":{"docs":{},"df":0,"a":{"docs":{"how-to-build-and-run.html#running-xpy-and-building-a-stage1-compiler":{"tf":1.4142135623730952}},"df":1},"w":{"docs":{},"df":0,"e":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{"appendix/glossary.html#appendix-c-glossary":{"tf":1.4142135623730952},"tests/adding.html#normalization":{"tf":1.0},"macro-expansion.html#example":{"tf":1.0},"rustdoc.html#hot-potato":{"tf":1.4142135623730952},"traits/associated-types.html#equality-and-associated-types":{"tf":1.0},"mir/regionck.html#extending-the-universal-regions-check":{"tf":1.0},"type-inference.html#region-constraints":{"tf":1.0},"variance.html#variance-and-object-types":{"tf":1.0},"traits/resolution.html#selection":{"tf":1.0},"miri.html#interpretation":{"tf":1.0},"appendix/stupid-stats.html#overview-of-the-compilation-process":{"tf":1.0},"mir/regionck.html#mir-based-region-checking-nll":{"tf":1.0},"incrcomp-debugging.html#dumping-the-graph":{"tf":1.4142135623730952},"traits/resolution.html#candidate-assembly":{"tf":1.0},"traits/canonical-queries.html#a-trait-query-in-rustc":{"tf":1.0},"query.html#cycles-between-queries":{"tf":1.0},"hir.html#the-hir-map":{"tf":1.0},"traits/lowering-rules.html#trait-header":{"tf":1.4142135623730952},"mir/index.html#key-mir-vocabulary":{"tf":1.0},"appendix/stupid-stats.html#the-driver-customisation-apis":{"tf":1.0},"rustdoc.html#from-clean-to-crate":{"tf":1.0}},"df":21}}}},"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"conventions.html#how-to-structure-your-pr":{"tf":1.4142135623730952},"high-level-overview.html#crate-structure":{"tf":1.0},"hir.html#out-of-band-storage-and-the--crate--type":{"tf":1.0},"tests/adding.html#naming-your-test":{"tf":1.4142135623730952},"query.html#cycles-between-queries":{"tf":1.0},"traits/chalk-overview.html#an-overview-of-chalk":{"tf":1.0},"appendix/glossary.html#appendix-c-glossary":{"tf":1.0},"tests/running.html#running-a-subset-of-the-test-suites":{"tf":1.0},"conventions.html#line-length":{"tf":1.0},"about-this-guide.html#about-this-guide":{"tf":1.0},"how-to-build-and-run.html#create-a-configtoml":{"tf":1.0}},"df":11}}}},"l":{"docs":{},"df":0,"o":{"docs":{},"df":0,"w":{"docs":{"mir/index.html#mir-data-types":{"tf":1.0},"traits/lowering-module.html#the--program_clauses_for--query":{"tf":1.0},"hir.html#out-of-band-storage-and-the--crate--type":{"tf":1.0},"tests/adding.html#guide-to-the-ui-tests":{"tf":1.0},"traits/canonical-queries.html#a-trait-query-in-rustc":{"tf":1.0},"type-inference.html#inference-variables":{"tf":1.0},"query.html#cycles-between-queries":{"tf":1.0},"type-inference.html#subtyping-obligations":{"tf":1.0},"traits/lowering-rules.html#lowering-function-and-constant-declarations":{"tf":1.0},"traits/lowering-rules.html#lowering-where-clauses":{"tf":1.0},"traits/goals-and-clauses.html#goals-and-clauses-meta-structure":{"tf":1.0},"variance.html#addendum-variance-on-traits":{"tf":1.0},"compiletest.html#implementing-the-behavior-change":{"tf":1.0},"tests/adding.html#ignoring-tests":{"tf":1.0},"high-level-overview.html#crate-structure":{"tf":1.0},"incremental-compilation.html#the-try-mark-green-algorithm":{"tf":1.4142135623730952},"traits/lowering-rules.html#transforming-the-lowered-where-clauses":{"tf":1.0}},"df":17}}},"s":{"docs":{},"df":0,"i":{"docs":{},"df":0,"d":{"docs":{"traits/resolution.html#candidate-assembly":{"tf":1.0},"tests/adding.html#normalization":{"tf":1.0}},"df":2}},"t":{"docs":{"appendix/stupid-stats.html#appendix-a-a-tutorial-on-creating-a-drop-in-replacement-for-rustc":{"tf":1.0},"how-to-build-and-run.html#running-xpy-and-building-a-stage1-compiler":{"tf":1.0}},"df":2}},"f":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{"rustdoc.html#from-crate-to-clean":{"tf":1.0},"how-to-build-and-run.html#how-to-build-the-compiler-and-run-what-you-built":{"tf":1.0},"variance.html#constraints":{"tf":1.0},"tests/adding.html#header-commands-configuring-rustc":{"tf":1.0},"rustdoc.html#from-clean-to-crate":{"tf":1.4142135623730952},"appendix/glossary.html#appendix-c-glossary":{"tf":1.0},"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.4142135623730952},"rustdoc.html#other-tricks-up-its-sleeve":{"tf":1.0},"traits/canonical-queries.html#examples":{"tf":1.4142135623730952},"name-resolution.html#overall-strategy":{"tf":1.4142135623730952},"mir/passes.html#seeing-how-the-mir-changes-as-the-compiler-executes":{"tf":1.4142135623730952},"type-inference.html#creating-an-inference-context":{"tf":1.0},"traits/hrtb.html#basic-matching-and-skolemization-leaks":{"tf":1.0},"conventions.html#use-todo-comments-for-things-you-dont-want-to-forget":{"tf":1.0},"rustdoc.html#hot-potato":{"tf":1.0},"incremental-compilation.html#the-query-dag":{"tf":1.4142135623730952},"traits/caching.html#an-example":{"tf":1.0},"mir/passes.html#stealing":{"tf":1.7320508075688773},"query.html#how-the-compiler-executes-a-query":{"tf":1.0},"mir/borrowck.html#mir-borrow-check":{"tf":1.0},"diag.html#error-messages":{"tf":1.0},"appendix/stupid-stats.html#compilercontroller":{"tf":1.0},"macro-expansion.html#macro-expansion":{"tf":1.0},"appendix/stupid-stats.html#compilercalls":{"tf":1.4142135623730952},"rustdoc.html#from-soup-to-nuts":{"tf":1.4142135623730952},"type-inference.html#snapshots":{"tf":1.0},"compiletest.html#header-commands":{"tf":1.0},"compiletest.html#introduction":{"tf":1.0},"mir/regionck.html#another-example":{"tf":1.0},"compiletest.html#adding-a-new-header-command":{"tf":1.0},"miri.html#miri":{"tf":1.7320508075688773}},"df":31}}},"y":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{"ty.html#beyond-types-other-kinds-of-arena-allocated-data-structures":{"tf":1.0},"conventions.html#coding-for-correctness":{"tf":1.0},"traits/lowering-to-logic.html#type-checking-generic-functions-beyond-horn-clauses":{"tf":1.0}},"df":3}}}},"g":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{"compiletest.html#adding-a-new-header-command":{"tf":1.0},"traits/canonicalization.html#processing-the-canonicalized-query-result":{"tf":1.0},"traits/hrtb.html#basic-matching-and-skolemization-leaks":{"tf":1.0},"conventions.html#copyright-notice":{"tf":1.0},"mir/index.html#key-mir-vocabulary":{"tf":1.0},"rustdoc.html#from-clean-to-crate":{"tf":1.7320508075688773},"tests/adding.html#adding-new-tests":{"tf":1.0}},"df":7}}}},"o":{"docs":{},"df":0,"t":{"docs":{"tests/intro.html#testing-infrastructure":{"tf":1.0}},"df":1,"t":{"docs":{},"df":0,"o":{"docs":{},"df":0,"m":{"docs":{"high-level-overview.html#the-main-stages-of-compilation":{"tf":1.0},"variance.html#the-algorithm":{"tf":1.0},"query.html#adding-a-new-kind-of-query":{"tf":1.0}},"df":3}}},"h":{"docs":{"name-resolution.html#scopes-and-ribs":{"tf":1.4142135623730952},"mir/borrowck.html#major-phases-of-the-borrow-checker":{"tf":1.0},"traits/associated-types.html#skolemized-associated-types":{"tf":1.0},"traits/canonicalization.html#canonicalizing-the-query-result":{"tf":1.0},"traits/lowering-rules.html#associated-type-values":{"tf":1.0},"traits/canonical-queries.html#examples":{"tf":1.0},"tests/adding.html#normalization":{"tf":1.0},"tests/adding.html#what-kind-of-test-should-i-add":{"tf":1.0},"macro-expansion.html#the-macro-parser":{"tf":2.0},"type-inference.html#a-note-on-terminology":{"tf":1.0},"appendix/glossary.html#appendix-c-glossary":{"tf":1.0},"traits/resolution.html#candidate-assembly":{"tf":1.0},"mir/passes.html#seeing-how-the-mir-changes-as-the-compiler-executes":{"tf":1.4142135623730952},"compiletest.html#introduction":{"tf":1.0},"query.html#how-the-compiler-executes-a-query":{"tf":1.4142135623730952},"the-parser.html#the-parser":{"tf":1.0},"mir/regionck.html#another-example":{"tf":1.4142135623730952},"traits/canonical-queries.html#canonical-queries":{"tf":1.0}},"df":18}},"r":{"docs":{"tests/intro.html#testing-infrastructure":{"tf":1.0},"tests/running.html#running-tests":{"tf":1.0},"conventions.html#how-to-structure-your-pr":{"tf":1.0},"tests/running.html#running-a-subset-of-the-test-suites":{"tf":1.0}},"df":4,"d":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"name-resolution.html#scopes-and-ribs":{"tf":1.0}},"df":1}}},"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"w":{"docs":{"mir/index.html#key-mir-vocabulary":{"tf":1.0},"mir/borrowck.html#mir-borrow-check":{"tf":3.1622776601683797},"mir/passes.html#mir-passes":{"tf":1.0},"traits/chalk-overview.html#parsing":{"tf":1.0},"mir/index.html#the-mir-mid-level-ir":{"tf":1.0},"const-eval.html#constant-evaluation":{"tf":1.0},"appendix/glossary.html#appendix-c-glossary":{"tf":1.7320508075688773},"compiler-debugging.html#formatting-graphviz-output-dot-files":{"tf":1.0},"appendix/stupid-stats.html#overview-of-the-compilation-process":{"tf":1.0},"traits/canonical-queries.html#examples":{"tf":1.0},"mir/borrowck.html#major-phases-of-the-borrow-checker":{"tf":2.23606797749979}},"df":11,"c":{"docs":{},"df":0,"k":{"docs":{"mir/borrowck.html#major-phases-of-the-borrow-checker":{"tf":1.0},"appendix/glossary.html#appendix-c-glossary":{"tf":1.0},"high-level-overview.html#the-main-stages-of-compilation":{"tf":1.0}},"df":3,"/":{"docs":{},"df":0,"i":{"docs":{},"df":0,"s":{"docs":{},"df":0,"s":{"docs":{},"df":0,"u":{"docs":{"tests/adding.html#naming-your-test":{"tf":1.0}},"df":1}}}}}}},"<":{"docs":{},"df":0,"t":{"docs":{"traits/canonical-queries.html#examples":{"tf":1.4142135623730952}},"df":1},"?":{"docs":{},"df":0,"u":{"docs":{"traits/canonical-queries.html#examples":{"tf":2.449489742783178}},"df":1}},"[":{"docs":{},"df":0,"t":{"docs":{"traits/canonical-queries.html#examples":{"tf":1.0}},"df":1}},"b":{"docs":{"traits/canonical-queries.html#examples":{"tf":1.4142135623730952}},"df":1},"v":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"<":{"docs":{},"df":0,"?":{"docs":{},"df":0,"v":{"docs":{"traits/canonical-queries.html#examples":{"tf":1.0}},"df":1}}}}}}}}}}},"o":{"docs":{},"df":0,"l":{"docs":{"miri.html#miri":{"tf":1.7320508075688773}},"df":1,"e":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{"miri.html#miri":{"tf":1.0}},"df":1}}}},"t":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"p":{"docs":{"tests/intro.html#other-tests":{"tf":1.0},"how-to-build-and-run.html#running-xpy-and-building-a-stage1-compiler":{"tf":1.0}},"df":2}}}}}},"k":{"docs":{"traits/bibliography.html#bibliography":{"tf":1.0},"macro-expansion.html#example":{"tf":1.0}},"df":2}},"x":{"docs":{"rustc-driver.html#a-note-on-lifetimes":{"tf":1.0},"method-lookup.html#candidate-assembly":{"tf":1.0},"traits/canonical-queries.html#the-traditional-interactive-prolog-query":{"tf":1.0},"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.0}},"df":4,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"n":{"docs":{},"df":0,"e":{"docs":{},"df":0,"w":{"docs":{},"df":0,"(":{"docs":{},"df":0,"g":{"docs":{},"df":0,"e":{"docs":{},"df":0,"t":{"docs":{},"df":0,"_":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{},"df":0,"(":{"docs":{},"df":0,"&":{"docs":{},"df":0,"*":{"docs":{},"df":0,"*":{"docs":{},"df":0,"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"l":{"docs":{},"df":0,"f":{"docs":{"traits/resolution.html#candidate-assembly":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}}},"<":{"docs":{},"df":0,"t":{"docs":{"traits/resolution.html#candidate-assembly":{"tf":1.7320508075688773}},"df":1,"o":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"r":{"docs":{"method-lookup.html#candidate-assembly":{"tf":1.0}},"df":1}}}}},"u":{"docs":{"method-lookup.html#candidate-assembly":{"tf":1.0}},"df":1,"1":{"docs":{},"df":0,"6":{"docs":{"traits/resolution.html#candidate-assembly":{"tf":1.4142135623730952}},"df":1}}},"i":{"docs":{},"df":0,"3":{"docs":{},"df":0,"2":{"docs":{"traits/canonical-queries.html#the-traditional-interactive-prolog-query":{"tf":1.0},"traits/canonical-queries.html#a-trait-query-in-rustc":{"tf":1.0}},"df":2}}},"f":{"docs":{},"df":0,"o":{"docs":{},"df":0,"o":{"docs":{"traits/goals-and-clauses.html#coinductive-goals":{"tf":1.0}},"df":1}}},"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{"compiletest.html#adding-a-new-header-command":{"tf":1.4142135623730952}},"df":1}}}}},"[":{"docs":{},"df":0,"t":{"docs":{"method-lookup.html#candidate-assembly":{"tf":1.0},"method-lookup.html#steps":{"tf":1.0}},"df":2}}}},"u":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{"type-inference.html#lexical-region-resolution":{"tf":1.0},"traits/hrtb.html#higher-ranked-trait-obligations":{"tf":1.4142135623730952},"type-inference.html#subtyping-obligations":{"tf":1.0},"traits/implied-bounds.html#implied-bounds":{"tf":1.0},"traits/resolution.html#overview":{"tf":1.0},"traits/wf.html#well-formedness-checking":{"tf":1.0},"mir/regionck.html#skolemization-and-outlives-constraints":{"tf":1.0},"variance.html#addendum-variance-on-traits":{"tf":1.0},"appendix/glossary.html#appendix-c-glossary":{"tf":2.23606797749979},"traits/hrtb.html#basic-matching-and-skolemization-leaks":{"tf":1.0},"method-lookup.html#candidate-assembly":{"tf":1.0},"appendix/background.html#what-is-a-free-region-or-a-free-variable-what-about-bound-region":{"tf":2.0},"traits/resolution.html#major-concepts":{"tf":1.0},"traits/lowering-rules.html#trait-header":{"tf":2.0},"variance.html#trait-variance-and-vtable-resolution":{"tf":1.0},"traits/canonicalization.html#executing-the-query":{"tf":1.0},"traits/goals-and-clauses.html#domain-goals":{"tf":1.7320508075688773},"traits/lowering-rules.html#associated-type-declarations":{"tf":2.6457513110645909},"variance.html#variance-and-object-types":{"tf":1.0},"traits/hrtb.html#higher-ranked-trait-bounds":{"tf":1.7320508075688773},"mir/regionck.html#subtyping-and-skolemization":{"tf":1.0},"param_env.html#parameter-environment":{"tf":1.4142135623730952},"rustc-driver.html#a-note-on-lifetimes":{"tf":1.0},"type-inference.html#a-note-on-terminology":{"tf":1.7320508075688773},"traits/goals-and-clauses.html#coinductive-goals":{"tf":1.0},"traits/canonical-queries.html#examples":{"tf":1.0},"compiler-debugging.html#getting-a-backtrace-for-errors":{"tf":1.4142135623730952},"traits/canonicalization.html#canonicalization":{"tf":1.0}},"df":28,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{"name-resolution.html#scopes-and-ribs":{"tf":1.0}},"df":1}}}}}},"d":{"docs":{},"df":0,"i":{"docs":{"macro-expansion.html#the-macro-parser":{"tf":1.4142135623730952},"mir/regionck.html#what-is-a-universe":{"tf":1.0},"hir.html#identifiers-in-the-hir":{"tf":1.0},"traits/resolution.html#major-concepts":{"tf":1.0},"hir.html#out-of-band-storage-and-the--crate--type":{"tf":1.0},"type-checking.html#type-collection":{"tf":1.0},"rustdoc.html#from-clean-to-crate":{"tf":1.0},"mir/regionck.html#mir-based-region-checking-nll":{"tf":1.4142135623730952},"hir.html#hir-bodies":{"tf":2.449489742783178},"traits/lowering-to-logic.html#type-checking-generic-functions-beyond-horn-clauses":{"tf":1.7320508075688773},"traits/resolution.html#candidate-assembly":{"tf":1.0},"traits/goals-and-clauses.html#domain-goals":{"tf":1.7320508075688773}},"df":12},"y":{"docs":{},"df":0,"_":{"docs":{},"df":0,"o":{"docs":{},"df":0,"w":{"docs":{},"df":0,"n":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"_":{"docs":{},"df":0,"d":{"docs":{},"df":0,"e":{"docs":{},"df":0,"f":{"docs":{},"df":0,"_":{"docs":{},"df":0,"i":{"docs":{},"df":0,"d":{"docs":{"hir.html#hir-bodies":{"tf":1.0}},"df":1}}}}}}}}}}}}},"'":{"docs":{"traits/goals-and-clauses.html#domain-goals":{"tf":1.0}},"df":1},"i":{"docs":{},"df":0,"d":{"docs":{"hir.html#identifiers-in-the-hir":{"tf":1.0}},"df":1}}}}},"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{"rustdoc.html#the-walking-tour-of-rustdoc":{"tf":1.0},"how-to-build-and-run.html#creating-a-rustup-toolchain":{"tf":1.0},"how-to-build-and-run.html#running-xpy-and-building-a-stage1-compiler":{"tf":1.0},"tests/adding.html#tests-that-do-not-result-in-compile-errors":{"tf":1.4142135623730952},"traits/resolution.html#major-concepts":{"tf":1.0},"const-eval.html#constant-evaluation":{"tf":1.0},"appendix/glossary.html#appendix-c-glossary":{"tf":1.4142135623730952},"tests/adding.html#what-kind-of-test-should-i-add":{"tf":1.0}},"df":8}}},"d":{"docs":{"the-parser.html#the-parser":{"tf":1.0},"traits/goals-and-clauses.html#domain-goals":{"tf":1.0},"macro-expansion.html#macro-expansion":{"tf":1.0},"type-inference.html#inference-variables":{"tf":1.0},"variance.html#variance-and-object-types":{"tf":1.0},"name-resolution.html#scopes-and-ribs":{"tf":1.7320508075688773},"macro-expansion.html#example":{"tf":1.4142135623730952},"macro-expansion.html#the-macro-parser":{"tf":1.4142135623730952}},"df":8,"e":{"docs":{},"df":0,"r":{"docs":{"appendix/glossary.html#appendix-c-glossary":{"tf":2.0},"appendix/background.html#what-is-a-free-region-or-a-free-variable-what-about-bound-region":{"tf":1.0}},"df":2,"s":{"docs":{},"df":0,"<":{"docs":{},"df":0,"t":{"docs":{"traits/chalk-overview.html#lowering":{"tf":1.0}},"df":1}}}}}}},"g":{"docs":{"rustdoc.html#from-crate-to-clean":{"tf":1.0},"compiler-debugging.html#debugging-llvm":{"tf":1.0},"query.html#adding-a-new-kind-of-query":{"tf":1.0},"traits/resolution.html#selection":{"tf":1.0},"appendix/stupid-stats.html#overview-of-the-compilation-process":{"tf":1.0},"query.html#queries-demand-driven-compilation":{"tf":1.0},"query.html#how-the-compiler-executes-a-query":{"tf":1.0},"conventions.html#how-to-structure-your-pr":{"tf":1.0},"rustc-driver.html#a-note-on-lifetimes":{"tf":1.0}},"df":9},"t":{"docs":{"mir/passes.html#implementing-and-registering-a-pass":{"tf":1.0},"traits/lowering-to-logic.html#type-checking-normal-functions":{"tf":1.0},"how-to-build-and-run.html#running-xpy-and-building-a-stage1-compiler":{"tf":1.0},"type-checking.html#type-checking":{"tf":1.0},"rustc-driver.html#the-rustc-driver":{"tf":1.0},"traits/lowering-to-logic.html#type-checking-generic-functions-beyond-horn-clauses":{"tf":1.0},"how-to-build-and-run.html#create-a-configtoml":{"tf":1.0},"traits/canonical-queries.html#a-trait-query-in-rustc":{"tf":1.0},"traits/canonical-queries.html#canonical-queries":{"tf":1.0},"traits/canonical-queries.html#examples":{"tf":1.4142135623730952},"query.html#cycles-between-queries":{"tf":1.0},"name-resolution.html#scopes-and-ribs":{"tf":1.0},"tests/adding.html#normalization":{"tf":3.4641016151377546},"type-checking.html#type-collection":{"tf":1.0},"rustdoc.html#cheat-sheet":{"tf":1.0},"traits/lowering-to-logic.html#rust-traits-and-logic":{"tf":1.0},"name-resolution.html#todo":{"tf":1.0},"traits/canonical-queries.html#the-traditional-interactive-prolog-query":{"tf":1.0},"mir/passes.html#stealing":{"tf":1.0},"traits/lowering-rules.html#function-and-constant-values":{"tf":1.0},"mir/regionck.html#what-is-a-universe":{"tf":1.4142135623730952},"appendix/glossary.html#appendix-c-glossary":{"tf":1.0},"name-resolution.html#overall-strategy":{"tf":1.0},"type-inference.html#enforcing-equality--subtyping":{"tf":1.0},"mir/index.html#key-mir-vocabulary":{"tf":1.0},"high-level-overview.html#the-main-stages-of-compilation":{"tf":1.0}},"df":26,"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"d":{"docs":{"how-to-build-and-run.html#create-a-configtoml":{"tf":1.0}},"df":1}}},"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"t":{"docs":{"mir/regionck.html#representing-the-values-of-a-region-variable":{"tf":1.0}},"df":1}}}},"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{"conventions.html#how-to-structure-your-pr":{"tf":1.0}},"df":1}}}},"v":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{"variance.html#the-algorithm":{"tf":1.0},"variance.html#variance-of-type-and-lifetime-parameters":{"tf":1.0}},"df":2}}}},"b":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{},"df":0,"o":{"docs":{},"df":0,"g":{"docs":{},"df":0,"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"p":{"docs":{},"df":0,"h":{"docs":{},"df":0,"i":{"docs":{"traits/lowering-to-logic.html#type-checking-generic-functions-beyond-horn-clauses":{"tf":1.0},"traits/bibliography.html#bibliography":{"tf":1.0}},"df":2}}}}}}}}}}},"l":{"docs":{},"df":0,"a":{"docs":{},"df":0,"h":{"docs":{"tests/adding.html#header-commands-configuring-rustc":{"tf":1.7320508075688773},"macro-expansion.html#the-macro-parser":{"tf":1.0}},"df":2}},"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"s":{"docs":{"tests/adding.html#editing-and-updating-the-reference-files":{"tf":1.4142135623730952}},"df":1}}},"o":{"docs":{},"df":0,"c":{"docs":{},"df":0,"k":{"docs":{"rustdoc.html#from-clean-to-crate":{"tf":1.4142135623730952},"name-resolution.html#overall-strategy":{"tf":1.0},"mir/index.html#mir-data-types":{"tf":1.7320508075688773},"appendix/background.html#what-is-a-control-flow-graph":{"tf":2.449489742783178},"name-resolution.html#scopes-and-ribs":{"tf":1.7320508075688773},"rustdoc.html#cheat-sheet":{"tf":1.0},"mir/regionck.html#representing-the-values-of-a-region-variable":{"tf":1.0},"macro-expansion.html#the-macro-parser":{"tf":1.0},"compiletest.html#adding-a-new-header-command":{"tf":2.23606797749979},"compiletest.html#implementing-the-behavior-change":{"tf":1.0},"mir/index.html#key-mir-vocabulary":{"tf":3.0}},"df":11}},"g":{"docs":{"tests/intro.html#further-reading":{"tf":1.0},"traits/lowering-to-logic.html#source":{"tf":1.0},"type-inference.html#inference-variables":{"tf":1.0},"mir/index.html#the-mir-mid-level-ir":{"tf":1.0},"traits/chalk-overview.html#blog-posts":{"tf":1.0}},"df":5}}},"y":{"docs":{},"df":0,"p":{"docs":{},"df":0,"a":{"docs":{},"df":0,"s":{"docs":{},"df":0,"s":{"docs":{"rustdoc.html#hot-potato":{"tf":1.0}},"df":1}}},"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"d":{"docs":{},"df":0,"u":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{"variance.html#variance-of-type-and-lifetime-parameters":{"tf":1.0}},"df":1}}}}}}},"v":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{"miri.html#datastructures":{"tf":1.4142135623730952}},"df":1,"(":{"docs":{},"df":0,"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"m":{"docs":{},"df":0,"p":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"d":{"docs":{},"df":0,"_":{"docs":{},"df":0,"v":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{},"df":0,"u":{"docs":{"miri.html#miri":{"tf":1.0}},"df":1}}}}}}}}}}}}}},"p":{"docs":{},"df":0,"a":{"docs":{},"df":0,"i":{"docs":{},"df":0,"r":{"docs":{"miri.html#datastructures":{"tf":1.0}},"df":1}}}}}}},"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"f":{"docs":{"miri.html#datastructures":{"tf":1.0},"miri.html#interpretation":{"tf":1.0}},"df":2,"(":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"n":{"docs":{},"df":0,"e":{"docs":{},"df":0,"d":{"docs":{},"df":0,"_":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{},"df":0,"l":{"docs":{},"df":0,"o":{"docs":{},"df":0,"c":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{},"df":0,"i":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"_":{"docs":{},"df":0,"i":{"docs":{},"df":0,"d":{"docs":{"miri.html#miri":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"df":0,"e":{"docs":{"macro-expansion.html#example":{"tf":1.0},"appendix/glossary.html#appendix-c-glossary":{"tf":1.0},"miri.html#allocations":{"tf":2.0}},"df":3}}},"a":{"docs":{},"df":0,"s":{"docs":{},"df":0,"e":{"docs":{"mir/regionck.html#mir-based-region-checking-nll":{"tf":1.7320508075688773},"type-inference.html#type-inference":{"tf":1.0},"mir/borrowck.html#mir-borrow-check":{"tf":1.4142135623730952},"variance.html#variance-and-object-types":{"tf":1.0},"variance.html#the-algorithm":{"tf":1.4142135623730952},"traits/resolution.html#major-concepts":{"tf":1.0},"rustdoc.html#from-clean-to-crate":{"tf":1.0},"variance.html#variance-of-type-and-lifetime-parameters":{"tf":1.0},"macro-expansion.html#the-macro-parser":{"tf":1.4142135623730952},"appendix/glossary.html#appendix-c-glossary":{"tf":1.0},"rustdoc.html#from-soup-to-nuts":{"tf":1.0},"traits/associated-types.html#associated-type-projection-and-normalization":{"tf":1.0},"mir/index.html#mir-data-types":{"tf":1.4142135623730952},"mir/index.html#introduction-to-mir":{"tf":1.0},"traits/canonicalization.html#canonicalization":{"tf":1.0},"high-level-overview.html#the-main-stages-of-compilation":{"tf":2.0},"how-to-build-and-run.html#running-xpy-and-building-a-stage1-compiler":{"tf":1.0},"traits/resolution.html#candidate-assembly":{"tf":1.0},"variance.html#addendum-variance-on-traits":{"tf":1.0},"traits/goals-and-clauses.html#goals-and-clauses":{"tf":1.0},"traits/resolution.html#confirmation":{"tf":1.4142135623730952},"query.html#queries-demand-driven-compilation":{"tf":1.0},"traits/index.html#trait-solving-new-style":{"tf":1.0}},"df":23},"i":{"docs":{"compiletest.html#adding-a-new-header-command":{"tf":1.0},"traits/wf.html#well-formedness-checking":{"tf":1.0},"traits/bibliography.html#bibliography":{"tf":1.0}},"df":3,"c":{"docs":{"type-inference.html#inference-variables":{"tf":1.0},"mir/regionck.html#skolemization-and-outlives-constraints":{"tf":1.0},"macro-expansion.html#the-macro-parser":{"tf":1.0},"high-level-overview.html#the-main-stages-of-compilation":{"tf":1.0},"query.html#how-the-compiler-executes-a-query":{"tf":1.0},"incremental-compilation.html#the-basic-algorithm":{"tf":1.4142135623730952},"mir/passes.html#implementing-and-registering-a-pass":{"tf":1.4142135623730952},"hir.html#out-of-band-storage-and-the--crate--type":{"tf":1.0},"type-inference.html#enforcing-equality--subtyping":{"tf":1.4142135623730952},"mir/regionck.html#what-is-a-universe":{"tf":1.0},"tests/running.html#running-tests":{"tf":1.0},"traits/associated-types.html#integration-with-unification":{"tf":1.0},"traits/lowering-rules.html#trait-header":{"tf":1.0},"mir/index.html#mir-data-types":{"tf":1.7320508075688773},"incremental-compilation.html#improvements-to-the-basic-algorithm":{"tf":1.4142135623730952},"mir/index.html#key-mir-vocabulary":{"tf":2.23606797749979},"mir/regionck.html#subtyping-and-skolemization":{"tf":1.4142135623730952},"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.4142135623730952},"tests/intro.html#compiletest-test-suites":{"tf":1.0},"appendix/background.html#what-is-a-control-flow-graph":{"tf":2.23606797749979},"ty.html#the-tcx-and-how-it-uses-lifetimes":{"tf":1.4142135623730952},"traits/specialization.html#specialization":{"tf":1.0},"traits/lowering-to-logic.html#rust-traits-and-logic":{"tf":1.4142135623730952},"ty.html#allocating-and-working-with-types":{"tf":1.4142135623730952},"variance.html#constraints":{"tf":1.0},"traits/resolution.html#overview":{"tf":1.0},"traits/resolution.html#selection":{"tf":1.0},"mir/regionck.html#representing-the-values-of-a-region-variable":{"tf":1.0},"traits/resolution.html#candidate-assembly":{"tf":1.7320508075688773},"tests/adding.html#naming-your-test":{"tf":1.0},"traits/lowering-to-logic.html#lowering-to-logic":{"tf":1.0},"variance.html#the-algorithm":{"tf":1.0},"rustdoc.html#hot-potato":{"tf":1.0},"traits/chalk-overview.html#testing":{"tf":1.0},"query.html#adding-a-new-kind-of-query":{"tf":1.0},"traits/lowering-to-logic.html#type-checking-generic-functions-beyond-horn-clauses":{"tf":1.0},"mir/regionck.html#mir-based-region-checking-nll":{"tf":1.0},"traits/hrtb.html#higher-ranked-trait-obligations":{"tf":1.0},"traits/resolution.html#major-concepts":{"tf":1.0},"rustdoc.html#dotting-is-and-crossing-ts":{"tf":1.0},"query.html#cycles-between-queries":{"tf":1.0},"traits/hrtb.html#basic-matching-and-skolemization-leaks":{"tf":1.4142135623730952},"traits/bibliography.html#bibliography":{"tf":1.0},"incremental-compilation.html#incremental-compilation":{"tf":1.0}},"df":44,".":{"docs":{},"df":0,"j":{"docs":{"rustdoc.html#dotting-is-and-crossing-ts":{"tf":1.0}},"df":1}},"_":{"docs":{},"df":0,"b":{"docs":{},"df":0,"l":{"docs":{},"df":0,"o":{"docs":{},"df":0,"c":{"docs":{},"df":0,"k":{"docs":{"mir/index.html#mir-data-types":{"tf":1.0}},"df":1}}}}}},"b":{"docs":{},"df":0,"l":{"docs":{},"df":0,"o":{"docs":{},"df":0,"c":{"docs":{},"df":0,"k":{"docs":{"mir/index.html#mir-data-types":{"tf":1.0}},"df":1,"d":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{},"df":0,"a":{"docs":{"mir/index.html#mir-data-types":{"tf":1.0}},"df":1}}}}}}}}}}}},"r":{"docs":{"traits/lowering-rules.html#trait-header":{"tf":2.449489742783178},"traits/index.html#trait-solving-new-style":{"tf":1.0},"mir/regionck.html#what-is-a-universe":{"tf":2.0},"incrcomp-debugging.html#dumping-the-graph":{"tf":2.0},"traits/goals-and-clauses.html#coinductive-goals":{"tf":2.6457513110645909},"mir/regionck.html#skolemization-and-universes":{"tf":1.0},"traits/lowering-to-logic.html#type-checking-normal-functions":{"tf":2.0},"incrcomp-debugging.html#testing-the-dependency-graph":{"tf":1.0},"traits/hrtb.html#higher-ranked-trait-obligations":{"tf":1.0},"traits/lowering-to-logic.html#rust-traits-and-logic":{"tf":1.0},"traits/lowering-rules.html#rule-names-and-cross-references":{"tf":1.0},"mir/regionck.html#subtyping-and-skolemization":{"tf":1.0},"variance.html#constraints":{"tf":2.23606797749979},"hir.html#out-of-band-storage-and-the--crate--type":{"tf":2.8284271247461905},"tests/adding.html#revisions":{"tf":1.7320508075688773},"incrcomp-debugging.html#tracking-down-incorrect-edges":{"tf":1.0},"tests/adding.html#normalization":{"tf":1.0}},"df":17,"(":{"docs":{},"df":0,"&":{"docs":{},"df":0,"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"l":{"docs":{},"df":0,"f":{"docs":{"traits/hrtb.html#higher-ranked-trait-obligations":{"tf":1.0}},"df":1}}}}},"f":{"docs":{"mir/regionck.html#skolemization-and-universes":{"tf":1.0}},"df":1,"o":{"docs":{},"df":0,"o":{"docs":{"mir/regionck.html#subtyping-and-skolemization":{"tf":1.0},"mir/regionck.html#skolemization-and-universes":{"tf":1.0}},"df":2}}}},":":{"docs":{},"df":0,":":{"docs":{},"df":0,"<":{"docs":{},"df":0,"t":{"docs":{"traits/lowering-to-logic.html#type-checking-generic-functions-beyond-horn-clauses":{"tf":1.0}},"df":1},"u":{"docs":{},"df":0,"s":{"docs":{"traits/lowering-to-logic.html#type-checking-normal-functions":{"tf":1.7320508075688773}},"df":1}}}}},"w":{"docs":{},"df":0,"e":{"docs":{},"df":0,"l":{"docs":{},"df":0,"l":{"docs":{},"df":0,"f":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"m":{"docs":{},"df":0,"e":{"docs":{},"df":0,"d":{"docs":{},"df":0,"(":{"docs":{},"df":0,"u":{"docs":{},"df":0,"s":{"docs":{"traits/lowering-to-logic.html#type-checking-normal-functions":{"tf":1.4142135623730952}},"df":1}},"?":{"docs":{},"df":0,"u":{"docs":{"traits/lowering-to-logic.html#type-checking-normal-functions":{"tf":1.0}},"df":1}},"t":{"docs":{"traits/lowering-to-logic.html#type-checking-generic-functions-beyond-horn-clauses":{"tf":1.4142135623730952}},"df":1}}}}}}}}}}}},"<":{"docs":{},"df":0,"&":{"docs":{},"df":0,"'":{"docs":{},"df":0,"0":{"docs":{"traits/hrtb.html#higher-ranked-trait-obligations":{"tf":1.0}},"df":1},"a":{"docs":{"traits/hrtb.html#higher-ranked-trait-obligations":{"tf":1.4142135623730952}},"df":1}}},"'":{"docs":{},"df":0,"a":{"docs":{"mir/regionck.html#what-is-a-universe":{"tf":1.7320508075688773}},"df":1}},"u":{"docs":{"traits/resolution.html#selection-during-translation":{"tf":1.0},"traits/lowering-to-logic.html#type-checking-generic-functions-beyond-horn-clauses":{"tf":1.0},"traits/lowering-to-logic.html#type-checking-normal-functions":{"tf":1.0}},"df":3,"s":{"docs":{"traits/resolution.html#selection-during-translation":{"tf":1.0}},"df":1}},"x":{"docs":{"traits/hrtb.html#higher-ranked-trait-obligations":{"tf":1.4142135623730952}},"df":1}}},"z":{"docs":{"tests/adding.html#revisions":{"tf":1.7320508075688773},"incrcomp-debugging.html#testing-the-dependency-graph":{"tf":1.0},"traits/lowering-rules.html#rule-names-and-cross-references":{"tf":1.0},"traits/hrtb.html#higher-ranked-trait-obligations":{"tf":1.7320508075688773}},"df":4},"n":{"docs":{},"df":0,"d":{"docs":{"hir.html#out-of-band-storage-and-the--crate--type":{"tf":1.0}},"df":1}},"c":{"docs":{},"df":0,"k":{"docs":{"traits/canonical-queries.html#a-trait-query-in-rustc":{"tf":1.7320508075688773},"traits/associated-types.html#integration-with-unification":{"tf":2.0},"type-inference.html#snapshots":{"tf":1.0},"traits/canonicalization.html#canonicalizing-the-query":{"tf":1.0},"compiletest.html#adding-a-new-header-command":{"tf":1.0},"traits/hrtb.html#higher-ranked-trait-obligations":{"tf":1.4142135623730952},"variance.html#trait-variance-and-vtable-resolution":{"tf":1.0},"incremental-compilation.html#the-query-dag":{"tf":1.4142135623730952},"high-level-overview.html#the-main-stages-of-compilation":{"tf":1.0},"traits/canonical-queries.html#the-traditional-interactive-prolog-query":{"tf":2.0},"conventions.html#how-to-structure-your-pr":{"tf":1.0},"macro-expansion.html#the-macro-parser":{"tf":1.4142135623730952},"traits/resolution.html#selection":{"tf":1.0},"mir/visitor.html#mir-visitor":{"tf":1.4142135623730952},"query.html#cycles-between-queries":{"tf":1.0},"mir/passes.html#mir-passes":{"tf":1.0},"the-parser.html#the-parser":{"tf":1.0},"traits/canonical-queries.html#examples":{"tf":1.0},"ty.html#allocating-and-working-with-types":{"tf":1.4142135623730952},"traits/canonicalization.html#processing-the-canonicalized-query-result":{"tf":1.4142135623730952},"traits/canonicalization.html#canonicalization":{"tf":1.0},"conventions.html#use-todo-comments-for-things-you-dont-want-to-forget":{"tf":1.0},"mir/regionck.html#back-to-our-example":{"tf":1.0},"query.html#queries-demand-driven-compilation":{"tf":1.0}},"df":24,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{"appendix/glossary.html#appendix-c-glossary":{"tf":1.0},"appendix/stupid-stats.html#overview-of-the-compilation-process":{"tf":1.0}},"df":2}}},"g":{"docs":{},"df":0,"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"u":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{"appendix/background.html#appendix-b-background-topics":{"tf":1.0},"variance.html#variance-of-type-and-lifetime-parameters":{"tf":1.4142135623730952},"traits/bibliography.html#bibliography":{"tf":1.0},"compiletest.html#introduction":{"tf":1.0},"tests/running.html#running-tests":{"tf":1.0},"type-inference.html#enforcing-equality--subtyping":{"tf":1.0},"appendix/glossary.html#appendix-c-glossary":{"tf":2.6457513110645909},"mir/index.html#key-mir-vocabulary":{"tf":1.0}},"df":8}}}}}},"s":{"docs":{},"df":0,"l":{"docs":{},"df":0,"a":{"docs":{},"df":0,"s":{"docs":{},"df":0,"h":{"docs":{"tests/adding.html#normalization":{"tf":1.0}},"df":1}}}},"c":{"docs":{},"df":0,"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"l":{"docs":{"compiler-debugging.html#getting-logging-output":{"tf":1.0}},"df":1}}}}},"w":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"d":{"docs":{"high-level-overview.html#the-main-stages-of-compilation":{"tf":1.0}},"df":1}}}},"t":{"docs":{},"df":0,"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"c":{"docs":{"compiler-debugging.html#getting-a-backtrace-for-errors":{"tf":3.0},"incrcomp-debugging.html#tracking-down-incorrect-edges":{"tf":1.4142135623730952},"compiler-debugging.html#getting-a-backtrace":{"tf":2.6457513110645909},"how-to-build-and-run.html#create-a-configtoml":{"tf":1.0}},"df":4,"k":{"docs":{"type-inference.html#snapshots":{"tf":1.0}},"df":1}}}}}}},"l":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"c":{"docs":{"macro-expansion.html#example":{"tf":1.0}},"df":1}}}}}},"y":{"docs":{"traits/resolution.html#candidate-assembly":{"tf":2.23606797749979},"traits/canonicalization.html#canonicalization":{"tf":1.0},"hir.html#hir-bodies":{"tf":1.4142135623730952},"traits/resolution.html#confirmation":{"tf":1.4142135623730952},"traits/canonical-queries.html#the-traditional-interactive-prolog-query":{"tf":1.7320508075688773},"variance.html#constraints":{"tf":1.4142135623730952},"type-checking.html#type-collection":{"tf":1.4142135623730952},"name-resolution.html#namespaces":{"tf":1.0},"mir/regionck.html#what-is-a-universe":{"tf":2.0}},"df":9,"/":{"docs":{},"df":0,"n":{"docs":{"traits/canonical-queries.html#the-traditional-interactive-prolog-query":{"tf":2.6457513110645909}},"df":1}},"o":{"docs":{},"df":0,"u":{"docs":{},"df":0,"'":{"docs":{},"df":0,"r":{"docs":{"type-inference.html#inference-variables":{"tf":1.4142135623730952},"mir/borrowck.html#mir-borrow-check":{"tf":1.0},"rustdoc.html#from-clean-to-crate":{"tf":1.0},"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.0},"how-to-build-and-run.html#running-xpy-and-building-a-stage1-compiler":{"tf":1.0},"mir/index.html#key-mir-vocabulary":{"tf":1.0},"how-to-build-and-run.html#how-to-build-the-compiler-and-run-what-you-built":{"tf":1.0}},"df":7},"d":{"docs":{"traits/resolution.html#trait-resolution-old-style":{"tf":1.0},"appendix/stupid-stats.html#what-next":{"tf":1.4142135623730952},"mir/index.html#the-mir-mid-level-ir":{"tf":1.0},"traits/bibliography.html#bibliography":{"tf":1.0}},"df":4},"v":{"docs":{"appendix/background.html#what-is-a-control-flow-graph":{"tf":1.0},"rustdoc.html#cheat-sheet":{"tf":1.0},"how-to-build-and-run.html#running-xpy-and-building-a-stage1-compiler":{"tf":1.0}},"df":3},"l":{"docs":{},"df":0,"l":{"docs":{"variance.html#variance-and-object-types":{"tf":1.0},"rustdoc.html#from-clean-to-crate":{"tf":1.0},"compiler-debugging.html#debugging-llvm":{"tf":1.0},"how-to-build-and-run.html#how-to-build-the-compiler-and-run-what-you-built":{"tf":1.0},"type-inference.html#subtyping-obligations":{"tf":1.0},"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.4142135623730952}},"df":6}}},"r":{"docs":{},"df":0,"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"l":{"docs":{},"df":0,"f":{"docs":{"compiler-debugging.html#debugging-llvm":{"tf":1.0},"conventions.html#line-length":{"tf":1.0},"conventions.html#prefer-exhaustive-matches":{"tf":1.0},"mir/index.html#key-mir-vocabulary":{"tf":1.0},"compiler-debugging.html#getting-logging-output":{"tf":1.0},"conventions.html#use-todo-comments-for-things-you-dont-want-to-forget":{"tf":1.0},"variance.html#dependency-graph-management":{"tf":1.0},"traits/chalk-overview.html#an-overview-of-chalk":{"tf":1.0}},"df":8}}}},"_":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"_":{"docs":{},"df":0,"n":{"docs":{},"df":0,"a":{"docs":{},"df":0,"m":{"docs":{"tests/adding.html#editing-and-updating-the-reference-files":{"tf":1.0}},"df":1}}}}}}}}}}}},"e":{"docs":{"traits/resolution.html#selection":{"tf":1.0},"variance.html#trait-variance-and-vtable-resolution":{"tf":1.0},"incremental-compilation.html#the-try-mark-green-algorithm":{"tf":1.0},"traits/hrtb.html#basic-matching-and-skolemization-leaks":{"tf":1.0},"mir/regionck.html#what-is-a-universe":{"tf":1.0}},"df":5,"a":{"docs":{},"df":0,"r":{"docs":{"conventions.html#copyright-notice":{"tf":1.7320508075688773}},"df":1}}},"i":{"docs":{},"df":0,"e":{"docs":{},"df":0,"l":{"docs":{},"df":0,"d":{"docs":{"traits/resolution.html#candidate-assembly":{"tf":1.0},"traits/caching.html#an-example":{"tf":1.4142135623730952},"compiler-debugging.html#formatting-graphviz-output-dot-files":{"tf":1.0},"const-eval.html#constant-evaluation":{"tf":1.0},"mir/passes.html#stealing":{"tf":1.0},"mir/regionck.html#another-example":{"tf":1.7320508075688773},"miri.html#datastructures":{"tf":1.0},"traits/resolution.html#selection":{"tf":1.0},"mir/regionck.html#subtyping-and-skolemization":{"tf":1.0},"traits/canonicalization.html#processing-the-canonicalized-query-result":{"tf":1.0},"traits/resolution.html#confirmation":{"tf":1.0},"traits/hrtb.html#basic-matching-and-skolemization-leaks":{"tf":1.4142135623730952},"method-lookup.html#steps":{"tf":1.0},"traits/canonicalization.html#executing-the-query":{"tf":1.0},"type-inference.html#extracting-region-constraints":{"tf":1.0}},"df":15}}}}},"0":{"docs":{"traits/canonicalization.html#processing-the-canonicalized-query-result":{"tf":1.0},"traits/canonicalization.html#canonicalizing-the-query":{"tf":1.7320508075688773},"traits/canonicalization.html#canonicalizing-the-query-result":{"tf":1.0},"how-to-build-and-run.html#create-a-configtoml":{"tf":1.0},"traits/canonicalization.html#executing-the-query":{"tf":1.4142135623730952},"tests/adding.html#header-commands-configuring-rustc":{"tf":1.4142135623730952},"mir/regionck.html#what-is-a-universe":{"tf":1.4142135623730952},"how-to-build-and-run.html#running-xpy-and-building-a-stage1-compiler":{"tf":1.4142135623730952},"miri.html#miri":{"tf":1.0},"traits/hrtb.html#higher-ranked-trait-obligations":{"tf":2.0},"traits/canonicalization.html#canonicalization":{"tf":2.449489742783178},"mir/passes.html#seeing-how-the-mir-changes-as-the-compiler-executes":{"tf":1.0},"compiler-debugging.html#getting-a-backtrace":{"tf":1.0},"traits/caching.html#an-example":{"tf":1.0},"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.0},"traits/hrtb.html#basic-matching-and-skolemization-leaks":{"tf":3.0}},"df":16,"0":{"docs":{},"df":0,"6":{"docs":{},"df":0,".":{"docs":{},"df":0,"n":{"docs":{},"df":0,"o":{"docs":{},"df":0,"l":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"g":{"docs":{},"df":0,"p":{"docs":{},"df":0,"a":{"docs":{},"df":0,"d":{"docs":{},"df":0,"s":{"docs":{},"df":0,".":{"docs":{},"df":0,"a":{"docs":{},"df":0,"f":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,".":{"docs":{},"df":0,"m":{"docs":{},"df":0,"i":{"docs":{},"df":0,"r":{"docs":{"mir/passes.html#seeing-how-the-mir-changes-as-the-compiler-executes":{"tf":1.7320508075688773}},"df":1}}}}}}}}},"b":{"docs":{},"df":0,"e":{"docs":{},"df":0,"f":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,".":{"docs":{},"df":0,"m":{"docs":{},"df":0,"i":{"docs":{},"df":0,"r":{"docs":{"mir/passes.html#seeing-how-the-mir-changes-as-the-compiler-executes":{"tf":1.7320508075688773}},"df":1}}}}}}}}}}}}}}}}}}}}}}}}}},"0":{"docs":{},"df":0,".":{"docs":{},"df":0,"n":{"docs":{},"df":0,"o":{"docs":{},"df":0,"l":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"g":{"docs":{},"df":0,"p":{"docs":{},"df":0,"a":{"docs":{},"df":0,"d":{"docs":{},"df":0,"s":{"docs":{},"df":0,".":{"docs":{},"df":0,"b":{"docs":{},"df":0,"e":{"docs":{},"df":0,"f":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,".":{"docs":{},"df":0,"m":{"docs":{},"df":0,"i":{"docs":{},"df":0,"r":{"docs":{"mir/passes.html#seeing-how-the-mir-changes-as-the-compiler-executes":{"tf":1.7320508075688773}},"df":1}}}}}}}}}},"a":{"docs":{},"df":0,"f":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,".":{"docs":{},"df":0,"m":{"docs":{},"df":0,"i":{"docs":{},"df":0,"r":{"docs":{"mir/passes.html#seeing-how-the-mir-changes-as-the-compiler-executes":{"tf":1.7320508075688773}},"df":1}}}}}}}}}}}}}}}}}}}}}}},"c":{"docs":{},"df":0,"l":{"docs":{},"df":0,"e":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"g":{"docs":{},"df":0,"i":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"s":{"docs":{},"df":0,".":{"docs":{},"df":0,"a":{"docs":{},"df":0,"f":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,".":{"docs":{},"df":0,"m":{"docs":{},"df":0,"i":{"docs":{},"df":0,"r":{"docs":{"mir/passes.html#seeing-how-the-mir-changes-as-the-compiler-executes":{"tf":2.0}},"df":1}}}}}}}}},"b":{"docs":{},"df":0,"e":{"docs":{},"df":0,"f":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,".":{"docs":{},"df":0,"m":{"docs":{},"df":0,"i":{"docs":{},"df":0,"r":{"docs":{"mir/passes.html#seeing-how-the-mir-changes-as-the-compiler-executes":{"tf":1.4142135623730952}},"df":1}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"e":{"docs":{"traits/resolution.html#major-concepts":{"tf":1.4142135623730952},"traits/canonicalization.html#executing-the-query":{"tf":1.7320508075688773},"traits/canonicalization.html#canonicalizing-the-query-result":{"tf":2.0},"diag.html#declaring-a-lint":{"tf":1.0},"variance.html#the-algorithm":{"tf":1.0}},"df":5,"0":{"docs":{},"df":0,"9":{"docs":{},"df":0,"9":{"docs":{},"df":0,"9":{"docs":{"diag.html#suggestions":{"tf":1.4142135623730952}},"df":1}}}},"o":{"docs":{},"df":0,"f":{"docs":{"macro-expansion.html#example":{"tf":1.0}},"df":1}},"r":{"docs":{},"df":0,"r":{"docs":{"compiler-debugging.html#getting-a-backtrace-for-errors":{"tf":1.4142135623730952},"diag.html#error-messages":{"tf":1.0},"diag.html#declaring-a-lint":{"tf":1.0},"query.html#cycles-between-queries":{"tf":1.4142135623730952},"diag.html#suggestions":{"tf":1.0}},"df":5,"o":{"docs":{},"df":0,"n":{"docs":{"incrcomp-debugging.html#dumping-the-graph":{"tf":1.0}},"df":1},"r":{"docs":{"rustc-driver.html#the-rustc-driver":{"tf":1.0},"diag.html#suggestions":{"tf":3.3166247903554},"compiler-debugging.html#getting-a-backtrace-for-errors":{"tf":3.1622776601683797},"tests/adding.html#other-header-commands":{"tf":1.7320508075688773},"appendix/glossary.html#appendix-c-glossary":{"tf":1.4142135623730952},"type-inference.html#trying-equality":{"tf":1.0},"tests/adding.html#what-kind-of-test-should-i-add":{"tf":1.0},"tests/adding.html#revisions":{"tf":1.7320508075688773},"mir/regionck.html#universes-and-skolemized-region-elements":{"tf":1.0},"traits/resolution.html#selection":{"tf":2.0},"traits/canonical-queries.html#examples":{"tf":1.4142135623730952},"compiler-debugging.html#debugging-llvm":{"tf":1.0},"query.html#cycles-between-queries":{"tf":3.0},"miri.html#interpretation":{"tf":1.0},"diag.html#span":{"tf":1.7320508075688773},"diag.html#edition-gated-lints":{"tf":1.0},"appendix/code-index.html#appendix-d-code-index":{"tf":1.4142135623730952},"incrcomp-debugging.html#testing-the-dependency-graph":{"tf":2.0},"tests/adding.html#adding-new-tests":{"tf":1.4142135623730952},"mir/regionck.html#subtyping-and-skolemization":{"tf":1.0},"diag.html#declaring-a-lint":{"tf":1.0},"tests/adding.html#tests-that-do-not-result-in-compile-errors":{"tf":1.4142135623730952},"mir/regionck.html#back-to-our-example":{"tf":1.0},"compiletest.html#implementing-the-behavior-change":{"tf":1.0},"miri.html#datastructures":{"tf":1.0},"traits/resolution.html#confirmation":{"tf":1.7320508075688773},"appendix/stupid-stats.html#overview-of-the-compilation-process":{"tf":1.4142135623730952},"mir/regionck.html#final-example":{"tf":1.4142135623730952},"query.html#adding-a-new-kind-of-query":{"tf":1.4142135623730952},"high-level-overview.html#crate-structure":{"tf":1.0},"traits/lowering-module.html#unit-tests":{"tf":3.0},"diag.html#emitting-diagnostics":{"tf":1.4142135623730952},"macro-expansion.html#the-macro-parser":{"tf":2.23606797749979},"tests/adding.html#error-annotations":{"tf":3.0},"miri.html#miri":{"tf":1.4142135623730952},"diag.html#error-messages":{"tf":3.605551275463989},"compiler-debugging.html#getting-logging-output":{"tf":1.7320508075688773},"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.7320508075688773},"traits/specialization.html#specialization":{"tf":1.0},"conventions.html#use-todo-comments-for-things-you-dont-want-to-forget":{"tf":1.0},"const-eval.html#constant-evaluation":{"tf":1.0},"compiletest.html#header-commands":{"tf":1.0},"name-resolution.html#name-resolution":{"tf":1.0}},"df":43,".":{"docs":{},"df":0,"r":{"docs":{"compiler-debugging.html#getting-a-backtrace-for-errors":{"tf":1.7320508075688773}},"df":1,"s":{"docs":{},"df":0,":":{"docs":{},"df":0,"2":{"docs":{},"df":0,":":{"docs":{},"df":0,"7":{"docs":{"compiler-debugging.html#getting-a-backtrace-for-errors":{"tf":1.4142135623730952}},"df":1}}}}}}},"k":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{"compiletest.html#adding-a-new-header-command":{"tf":1.0}},"df":1}}}},"[":{"docs":{},"df":0,"e":{"docs":{},"df":0,"0":{"docs":{},"df":0,"9":{"docs":{},"df":0,"9":{"docs":{},"df":0,"9":{"docs":{"diag.html#suggestions":{"tf":1.4142135623730952}},"df":1}}},"2":{"docs":{},"df":0,"7":{"docs":{},"df":0,"7":{"docs":{"compiler-debugging.html#getting-a-backtrace-for-errors":{"tf":1.4142135623730952}},"df":1}}}}}},"o":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{},"df":0,"p":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{},"df":0,"t":{"docs":{},"df":0,"y":{"docs":{},"df":0,"p":{"docs":{"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.0}},"df":1}}}}}}}}}}},".":{"docs":{},"df":0,"c":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"c":{"docs":{},"df":0,"e":{"docs":{},"df":0,"l":{"docs":{"query.html#cycles-between-queries":{"tf":1.0}},"df":1}}}}}},"s":{"docs":{},"df":0,"p":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"_":{"docs":{},"df":0,"h":{"docs":{},"df":0,"e":{"docs":{},"df":0,"l":{"docs":{},"df":0,"p":{"docs":{},"df":0,"(":{"docs":{},"df":0,"s":{"docs":{},"df":0,"u":{"docs":{},"df":0,"g":{"docs":{},"df":0,"g":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"i":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"_":{"docs":{},"df":0,"s":{"docs":{},"df":0,"p":{"docs":{"diag.html#error-messages":{"tf":1.0},"diag.html#suggestions":{"tf":1.0}},"df":2}}}}}}}}}}}}}}}}}},"s":{"docs":{},"df":0,"u":{"docs":{},"df":0,"g":{"docs":{},"df":0,"g":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"i":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"_":{"docs":{},"df":0,"s":{"docs":{},"df":0,"h":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"t":{"docs":{},"df":0,"(":{"docs":{},"df":0,"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{},"df":0,"i":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"_":{"docs":{},"df":0,"s":{"docs":{},"df":0,"p":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{"diag.html#declaring-a-lint":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}}},"w":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{},"df":0,"h":{"docs":{},"df":0,"_":{"docs":{},"df":0,"a":{"docs":{},"df":0,"p":{"docs":{},"df":0,"p":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{},"df":0,"c":{"docs":{"diag.html#suggestions":{"tf":1.0}},"df":1}}}}}}}}}}}},"(":{"docs":{},"df":0,"s":{"docs":{},"df":0,"u":{"docs":{},"df":0,"g":{"docs":{},"df":0,"g":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"i":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"_":{"docs":{},"df":0,"s":{"docs":{},"df":0,"p":{"docs":{"diag.html#error-messages":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"df":0,"m":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{"query.html#cycles-between-queries":{"tf":1.0},"diag.html#suggestions":{"tf":1.0},"diag.html#error-messages":{"tf":1.0},"diag.html#declaring-a-lint":{"tf":1.0}},"df":4}}}}},"(":{"docs":{},"df":0,"b":{"docs":{},"df":0,"o":{"docs":{},"df":0,"x":{"docs":{},"df":0,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"n":{"docs":{},"df":0,"e":{"docs":{},"df":0,"w":{"docs":{},"df":0,"(":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"n":{"docs":{},"df":0,"e":{"docs":{},"df":0,"w":{"docs":{},"df":0,"(":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"k":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{},"df":0,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"o":{"docs":{},"df":0,"t":{"docs":{},"df":0,"h":{"docs":{"compiletest.html#adding-a-new-header-command":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"n":{"docs":{},"df":0,"o":{"docs":{},"df":0,"s":{"docs":{},"df":0,"o":{"docs":{},"df":0,"l":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{"traits/canonical-queries.html#a-trait-query-in-rustc":{"tf":1.0},"traits/associated-types.html#integration-with-unification":{"tf":1.0}},"df":2}}}}}}},"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"r":{"docs":{"type-inference.html#enforcing-equality--subtyping":{"tf":1.0},"traits/resolution.html#selection":{"tf":1.0},"query.html#cycles-between-queries":{"tf":1.0}},"df":3}}}}},"g":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"o":{"docs":{},"df":0,"m":{"docs":{"rustc-driver.html#a-note-on-lifetimes":{"tf":1.0}},"df":1}}}}},"a":{"docs":{},"df":0,"s":{"docs":{"mir/regionck.html#mir-based-region-checking-nll":{"tf":1.0}},"df":1}}},"2":{"docs":{"name-resolution.html#todo":{"tf":1.0}},"df":1},"g":{"docs":{"name-resolution.html#todo":{"tf":1.0},"name-resolution.html#scopes-and-ribs":{"tf":1.0},"name-resolution.html#namespaces":{"tf":1.0}},"df":3},"s":{"docs":{},"df":0,"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{},"df":0,"i":{"docs":{"traits/chalk-overview.html#lowering":{"tf":1.0},"how-to-build-and-run.html#create-a-configtoml":{"tf":1.0},"query.html#cycles-between-queries":{"tf":1.0},"traits/goals-and-clauses.html#goals-and-clauses-meta-structure":{"tf":1.0},"miri.html#miri":{"tf":1.0},"rustc-driver.html#the-rustc-driver":{"tf":1.0},"rustc-driver.html#a-note-on-lifetimes":{"tf":1.0},"miri.html#interpretation":{"tf":1.0}},"df":8}},"c":{"docs":{"tests/intro.html#testing-infrastructure":{"tf":1.0},"incremental-compilation.html#incremental-compilation":{"tf":1.0}},"df":2}}}},"c":{"docs":{},"df":0,"a":{"docs":{},"df":0,"p":{"docs":{"rustc-driver.html#a-note-on-lifetimes":{"tf":1.0}},"df":1}}},"p":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{"appendix/stupid-stats.html#appendix-a-a-tutorial-on-creating-a-drop-in-replacement-for-rustc":{"tf":1.0}},"df":1,"i":{"docs":{"compiler-debugging.html#getting-logging-output":{"tf":1.0},"mir/regionck.html#back-to-our-example":{"tf":1.0}},"df":2}}}}},"a":{"docs":{},"df":0,"s":{"docs":{},"df":0,"i":{"docs":{"conventions.html#formatting-and-the-tidy-script":{"tf":1.0},"mir/index.html#key-mir-vocabulary":{"tf":1.0},"tests/intro.html#testing-with-docker-images":{"tf":1.0}},"df":3,"l":{"docs":{},"df":0,"i":{"docs":{"incrcomp-debugging.html#tracking-down-incorrect-edges":{"tf":1.0},"traits/lowering-to-logic.html#type-checking-generic-functions-beyond-horn-clauses":{"tf":1.0},"traits/lowering-to-logic.html#rust-traits-and-logic":{"tf":1.0}},"df":3}},"e":{"docs":{},"df":0,"r":{"docs":{"traits/chalk-overview.html#an-overview-of-chalk":{"tf":1.0},"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.0},"traits/resolution.html#candidate-assembly":{"tf":1.0},"type-inference.html#type-inference":{"tf":1.0},"diag.html#span":{"tf":1.0},"tests/running.html#running-an-individual-test":{"tf":1.0},"conventions.html#how-to-structure-your-pr":{"tf":1.0},"tests/adding.html#what-kind-of-test-should-i-add":{"tf":1.0},"hir.html#out-of-band-storage-and-the--crate--type":{"tf":1.0},"appendix/stupid-stats.html#appendix-a-a-tutorial-on-creating-a-drop-in-replacement-for-rustc":{"tf":1.7320508075688773},"the-parser.html#the-parser":{"tf":1.0},"compiler-debugging.html#debugging-llvm":{"tf":1.0},"rustdoc.html#hot-potato":{"tf":1.4142135623730952},"rustdoc.html#from-crate-to-clean":{"tf":1.0}},"df":14},"s":{"docs":{},"df":0,"t":{"docs":{"mir/regionck.html#what-is-a-universe":{"tf":1.0}},"df":1}}}}},"c":{"docs":{},"df":0,"h":{"docs":{"mir/regionck.html#universes-and-skolemized-region-elements":{"tf":1.4142135623730952},"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.0},"tests/intro.html#other-tests":{"tf":1.0},"the-parser.html#the-parser":{"tf":1.0},"mir/regionck.html#what-is-a-universe":{"tf":1.4142135623730952},"miri.html#interpretation":{"tf":1.4142135623730952},"high-level-overview.html#the-main-stages-of-compilation":{"tf":1.4142135623730952},"appendix/stupid-stats.html#compilercalls":{"tf":1.0},"diag.html#declaring-a-lint":{"tf":1.0},"rustc-driver.html#a-note-on-lifetimes":{"tf":1.0},"method-lookup.html#candidate-assembly":{"tf":1.0},"incremental-compilation.html#the-basic-algorithm":{"tf":1.0},"traits/canonicalization.html#executing-the-query":{"tf":1.0},"traits/resolution.html#major-concepts":{"tf":1.0},"appendix/stupid-stats.html#the-driver-customisation-apis":{"tf":1.0},"tests/intro.html#compiletest-test-suites":{"tf":1.0},"mir/index.html#mir-data-types":{"tf":1.0},"type-inference.html#creating-an-inference-context":{"tf":1.0},"traits/associated-types.html#associated-type-projection-and-normalization":{"tf":1.0},"traits/canonicalization.html#canonicalizing-the-query":{"tf":1.7320508075688773},"rustdoc.html#from-crate-to-clean":{"tf":1.0},"mir/passes.html#mir-passes":{"tf":1.4142135623730952},"variance.html#the-algorithm":{"tf":1.0},"traits/resolution.html#candidate-assembly":{"tf":1.4142135623730952},"incremental-compilation.html#the-try-mark-green-algorithm":{"tf":1.4142135623730952},"high-level-overview.html#crate-structure":{"tf":1.4142135623730952},"miri.html#allocations":{"tf":1.0},"traits/lowering-rules.html#rule-names-and-cross-references":{"tf":1.0},"traits/wf.html#well-formedness-checking":{"tf":1.0},"query.html#adding-a-new-kind-of-query":{"tf":1.7320508075688773},"mir/regionck.html#skolemization-and-outlives-constraints":{"tf":1.4142135623730952},"about-this-guide.html#about-this-guide":{"tf":1.0},"rustdoc.html#hot-potato":{"tf":1.4142135623730952},"traits/chalk-overview.html#rules":{"tf":1.0},"type-inference.html#lexical-region-resolution":{"tf":1.4142135623730952},"traits/resolution.html#selection-during-translation":{"tf":1.4142135623730952},"incremental-compilation.html#the-query-dag":{"tf":1.0},"traits/lowering-rules.html#associated-type-declarations":{"tf":1.4142135623730952},"traits/lowering-rules.html#trait-header":{"tf":2.0},"appendix/code-index.html#appendix-d-code-index":{"tf":1.0},"incrcomp-debugging.html#testing-the-dependency-graph":{"tf":1.0},"traits/canonical-queries.html#a-trait-query-in-rustc":{"tf":1.0},"query.html#invoking-queries":{"tf":1.0},"mir/regionck.html#representing-the-values-of-a-region-variable":{"tf":2.23606797749979},"tests/adding.html#other-header-commands":{"tf":1.0},"name-resolution.html#scopes-and-ribs":{"tf":1.0},"traits/goals-and-clauses.html#domain-goals":{"tf":1.4142135623730952},"method-lookup.html#candidate-search":{"tf":1.0},"rustdoc.html#dotting-is-and-crossing-ts":{"tf":1.4142135623730952},"appendix/stupid-stats.html#overview-of-the-compilation-process":{"tf":1.7320508075688773},"appendix/glossary.html#appendix-c-glossary":{"tf":2.0},"traits/canonicalization.html#processing-the-canonicalized-query-result":{"tf":1.0},"rustc-driver.html#the-rustc-driver":{"tf":1.0},"mir/regionck.html#extending-the-universal-regions-check":{"tf":1.4142135623730952},"mir/passes.html#seeing-how-the-mir-changes-as-the-compiler-executes":{"tf":1.4142135623730952},"traits/canonicalization.html#canonicalizing-the-query-result":{"tf":1.0},"tests/adding.html#error-annotations":{"tf":1.0},"tests/adding.html#revisions":{"tf":1.0},"query.html#how-the-compiler-executes-a-query":{"tf":1.0},"type-checking.html#type-collection":{"tf":1.4142135623730952},"appendix/stupid-stats.html#compilercontroller":{"tf":1.4142135623730952},"compiletest.html#adding-a-new-header-command":{"tf":1.0}},"df":62}},"g":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"type-inference.html#region-constraints":{"tf":1.0}},"df":1,"l":{"docs":{},"df":0,"i":{"docs":{"traits/canonicalization.html#processing-the-canonicalized-query-result":{"tf":1.0},"type-inference.html#region-constraints":{"tf":1.0}},"df":2}}}}},"r":{"docs":{},"df":0,"l":{"docs":{},"df":0,"y":{"docs":{},"df":0,"_":{"docs":{},"df":0,"c":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{},"df":0,"l":{"docs":{},"df":0,"b":{"docs":{},"df":0,"a":{"docs":{},"df":0,"c":{"docs":{},"df":0,"k":{"docs":{"appendix/stupid-stats.html#compilercalls":{"tf":1.0}},"df":1,"(":{"docs":{},"df":0,"&":{"docs":{},"df":0,"m":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.0}},"df":1}}}}}}}}}}}}}}},"e":{"docs":{},"df":0,"y":{"docs":{"macro-expansion.html#the-macro-parser":{"tf":1.0}},"df":1}},"i":{"docs":{"appendix/stupid-stats.html#compilercalls":{"tf":1.0},"appendix/stupid-stats.html#the-driver-customisation-apis":{"tf":1.0}},"df":2,"e":{"docs":{},"df":0,"r":{"docs":{"traits/lowering-rules.html#lowering-rules":{"tf":1.0},"rustdoc.html#from-crate-to-clean":{"tf":1.0}},"df":2}}}}}},"t":{"docs":{"variance.html#variance-of-type-and-lifetime-parameters":{"tf":1.0}},"df":1,"c":{"docs":{"appendix/stupid-stats.html#the-driver-customisation-apis":{"tf":1.0},"ty.html#allocating-and-working-with-types":{"tf":1.0},"hir.html#out-of-band-storage-and-the--crate--type":{"tf":1.0},"appendix/glossary.html#appendix-c-glossary":{"tf":1.0},"mir/regionck.html#representing-the-values-of-a-region-variable":{"tf":1.0},"tests/intro.html#other-tests":{"tf":1.4142135623730952},"appendix/stupid-stats.html#compilercalls":{"tf":1.0},"traits/canonicalization.html#executing-the-query":{"tf":1.0},"macro-expansion.html#the-macro-parser":{"tf":1.0},"mir/regionck.html#what-is-a-universe":{"tf":1.0},"traits/chalk-overview.html#rules":{"tf":1.0},"mir/borrowck.html#mir-borrow-check":{"tf":1.0},"appendix/stupid-stats.html#appendix-a-a-tutorial-on-creating-a-drop-in-replacement-for-rustc":{"tf":1.0},"tests/adding.html#naming-your-test":{"tf":1.0},"mir/passes.html#seeing-how-the-mir-changes-as-the-compiler-executes":{"tf":1.0},"traits/resolution.html#selection":{"tf":1.0},"tests/adding.html#revisions":{"tf":1.4142135623730952},"traits/implied-bounds.html#implied-bounds":{"tf":1.0},"mir/passes.html#implementing-and-registering-a-pass":{"tf":1.0},"method-lookup.html#method-lookup":{"tf":1.0},"mir/regionck.html#causal-tracking":{"tf":1.0},"diag.html#error-messages":{"tf":1.4142135623730952},"mir/passes.html#mir-passes":{"tf":1.0}},"df":23},"i":{"docs":{},"df":0,"q":{"docs":{},"df":0,"u":{"docs":{},"df":0,"e":{"docs":{},"df":0,"t":{"docs":{},"df":0,"t":{"docs":{"compiler-debugging.html#logging-etiquette":{"tf":1.0}},"df":1}}}}}}},"q":{"docs":{"type-inference.html#enforcing-equality--subtyping":{"tf":1.4142135623730952},"traits/lowering-rules.html#trait-header":{"tf":1.7320508075688773}},"df":2,"<":{"docs":{},"df":0,"t":{"docs":{"traits/lowering-to-logic.html#type-checking-generic-functions-beyond-horn-clauses":{"tf":1.0},"traits/lowering-to-logic.html#rust-traits-and-logic":{"tf":1.4142135623730952}},"df":2},"v":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"<":{"docs":{},"df":0,"u":{"docs":{"traits/lowering-to-logic.html#rust-traits-and-logic":{"tf":1.0}},"df":1}}}}},"u":{"docs":{"traits/lowering-to-logic.html#type-checking-generic-functions-beyond-horn-clauses":{"tf":1.0},"traits/lowering-to-logic.html#type-checking-normal-functions":{"tf":1.4142135623730952},"traits/lowering-to-logic.html#rust-traits-and-logic":{"tf":1.0}},"df":3,"s":{"docs":{"traits/lowering-to-logic.html#rust-traits-and-logic":{"tf":1.0},"traits/lowering-to-logic.html#type-checking-normal-functions":{"tf":1.0}},"df":2}}},"u":{"docs":{},"df":0,"i":{"docs":{},"df":0,"v":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{"traits/lowering-rules.html#trait-header":{"tf":1.0},"high-level-overview.html#the-main-stages-of-compilation":{"tf":1.0},"query.html#how-the-compiler-executes-a-query":{"tf":1.0},"appendix/background.html#what-is-a-free-region-or-a-free-variable-what-about-bound-region":{"tf":1.0},"type-inference.html#subtyping-obligations":{"tf":1.0}},"df":5}}}},"a":{"docs":{},"df":0,"l":{"docs":{"type-inference.html#enforcing-equality--subtyping":{"tf":2.23606797749979},"traits/associated-types.html#skolemized-associated-types":{"tf":1.4142135623730952},"type-inference.html#inference-variables":{"tf":1.0},"traits/associated-types.html#projection-equality":{"tf":1.4142135623730952},"type-inference.html#trying-equality":{"tf":1.4142135623730952},"traits/resolution.html#overview":{"tf":1.0},"traits/lowering-to-logic.html#type-checking-generic-functions-beyond-horn-clauses":{"tf":1.0},"traits/associated-types.html#equality-and-associated-types":{"tf":1.4142135623730952},"type-inference.html#subtyping-obligations":{"tf":1.0},"type-inference.html#region-constraints":{"tf":1.0},"mir/regionck.html#representing-the-values-of-a-region-variable":{"tf":1.0},"ty.html#allocating-and-working-with-types":{"tf":1.4142135623730952},"traits/associated-types.html#integration-with-unification":{"tf":1.0},"traits/index.html#trait-solving-new-style":{"tf":1.0},"traits/goals-and-clauses.html#domain-goals":{"tf":1.4142135623730952},"traits/canonicalization.html#canonicalizing-the-query":{"tf":1.0}},"df":16},"t":{"docs":{"traits/lowering-to-logic.html#rust-traits-and-logic":{"tf":1.0},"traits/associated-types.html#integration-with-unification":{"tf":1.0},"type-inference.html#enforcing-equality--subtyping":{"tf":1.7320508075688773},"type-inference.html#extracting-region-constraints":{"tf":1.0},"type-inference.html#trying-equality":{"tf":1.0}},"df":5}}},"(":{"docs":{},"df":0,"?":{"docs":{},"df":0,"u":{"docs":{"traits/lowering-to-logic.html#type-checking-normal-functions":{"tf":1.0}},"df":1},"t":{"docs":{"traits/lowering-to-logic.html#rust-traits-and-logic":{"tf":1.0}},"df":1}},"t":{"docs":{"traits/lowering-to-logic.html#type-checking-generic-functions-beyond-horn-clauses":{"tf":1.4142135623730952}},"df":1},"u":{"docs":{},"df":0,"s":{"docs":{"traits/lowering-to-logic.html#type-checking-normal-functions":{"tf":1.0},"traits/lowering-to-logic.html#rust-traits-and-logic":{"tf":1.0}},"df":2}},"v":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"<":{"docs":{},"df":0,"?":{"docs":{},"df":0,"t":{"docs":{"traits/lowering-to-logic.html#rust-traits-and-logic":{"tf":1.0}},"df":1}}}}}}}},"n":{"docs":{},"df":0,"a":{"docs":{},"df":0,"b":{"docs":{},"df":0,"l":{"docs":{"how-to-build-and-run.html#create-a-configtoml":{"tf":2.0},"compiler-debugging.html#debugging-llvm":{"tf":1.4142135623730952},"rustdoc.html#from-clean-to-crate":{"tf":1.0},"appendix/glossary.html#appendix-c-glossary":{"tf":1.0},"compiler-debugging.html#getting-a-backtrace":{"tf":1.4142135623730952},"tests/adding.html#other-header-commands":{"tf":1.0},"compiler-debugging.html#expensive-operations-in-logs":{"tf":1.4142135623730952},"mir/borrowck.html#major-phases-of-the-borrow-checker":{"tf":1.0},"incremental-compilation.html#the-try-mark-green-algorithm":{"tf":1.0},"mir/borrowck.html#mir-borrow-check":{"tf":1.0},"how-to-build-and-run.html#running-xpy-and-building-a-stage1-compiler":{"tf":1.0}},"df":11}}},"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"m":{"docs":{"rustdoc.html#from-clean-to-crate":{"tf":1.0}},"df":1}},"u":{"docs":{},"df":0,"g":{"docs":{},"df":0,"h":{"docs":{"param_env.html#parameter-environment":{"tf":1.0},"tests/adding.html#normalization":{"tf":1.0},"how-to-build-and-run.html#running-xpy-and-building-a-stage1-compiler":{"tf":1.0},"tests/adding.html#comment-explaining-what-the-test-is-about":{"tf":1.0},"name-resolution.html#todo":{"tf":1.0}},"df":5}}}},"v":{"docs":{"compiler-debugging.html#getting-logging-output":{"tf":1.0},"traits/lowering-rules.html#trait-header":{"tf":1.0}},"df":2,"i":{"docs":{},"df":0,"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{"tests/adding.html#ignoring-tests":{"tf":1.0},"type-inference.html#enforcing-equality--subtyping":{"tf":1.0},"how-to-build-and-run.html#creating-a-rustup-toolchain":{"tf":1.0},"incrcomp-debugging.html#tracking-down-incorrect-edges":{"tf":1.0},"traits/canonicalization.html#canonicalization":{"tf":1.0},"miri.html#miri":{"tf":1.0},"traits/bibliography.html#bibliography":{"tf":1.0},"param_env.html#parameter-environment":{"tf":2.0},"compiler-debugging.html#getting-logging-output":{"tf":1.0},"const-eval.html#constant-evaluation":{"tf":1.0},"traits/resolution.html#candidate-assembly":{"tf":1.4142135623730952},"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.0},"traits/lowering-rules.html#trait-header":{"tf":1.0},"incrcomp-debugging.html#dumping-the-graph":{"tf":1.4142135623730952}},"df":14}}}}},"f":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"c":{"docs":{"type-inference.html#enforcing-equality--subtyping":{"tf":1.4142135623730952},"conventions.html#formatting-and-the-tidy-script":{"tf":1.0},"mir/borrowck.html#mir-borrow-check":{"tf":1.0}},"df":3}}}},"g":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{"traits/lowering-to-logic.html#type-checking-generic-functions-beyond-horn-clauses":{"tf":1.0},"mir/regionck.html#skolemization-and-outlives-constraints":{"tf":1.0},"mir/regionck.html#back-to-our-example":{"tf":1.0}},"df":3,"e":{"docs":{},"df":0,"/":{"docs":{},"df":0,"s":{"docs":{},"df":0,"r":{"docs":{},"df":0,"c":{"docs":{},"df":0,"/":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"a":{"docs":{},"df":0,"d":{"docs":{},"df":0,"m":{"docs":{},"df":0,"e":{"docs":{},"df":0,".":{"docs":{},"df":0,"m":{"docs":{},"df":0,"d":{"docs":{"traits/slg.html#the-slg-solver":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}},"u":{"docs":{},"df":0,"m":{"docs":{"miri.html#datastructures":{"tf":1.0},"variance.html#variance-and-object-types":{"tf":1.0},"variance.html#the-algorithm":{"tf":1.7320508075688773},"conventions.html#prefer-exhaustive-matches":{"tf":1.4142135623730952},"const-eval.html#constant-evaluation":{"tf":1.0},"variance.html#constraints":{"tf":1.0},"variance.html#variance-of-type-and-lifetime-parameters":{"tf":1.0},"mir/index.html#mir-data-types":{"tf":1.7320508075688773},"ty.html#allocating-and-working-with-types":{"tf":1.0},"hir.html#the-hir-map":{"tf":1.0}},"df":10,"e":{"docs":{},"df":0,"r":{"docs":{"traits/lowering-rules.html#trait-header":{"tf":1.0},"traits/goals-and-clauses.html#coinductive-goals":{"tf":1.7320508075688773},"traits/canonical-queries.html#a-trait-query-in-rustc":{"tf":1.4142135623730952}},"df":3}}}},"q":{"docs":{},"df":0,"u":{"docs":{},"df":0,"e":{"docs":{},"df":0,"u":{"docs":{"traits/resolution.html#overview":{"tf":1.0},"type-inference.html#subtyping-obligations":{"tf":1.0}},"df":2}}}},"l":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"g":{"docs":{"mir/regionck.html#final-example":{"tf":1.0}},"df":1}}}},"j":{"docs":{},"df":0,"o":{"docs":{},"df":0,"y":{"docs":{"mir/index.html#the-mir-mid-level-ir":{"tf":1.0}},"df":1}}},"s":{"docs":{},"df":0,"u":{"docs":{},"df":0,"r":{"docs":{"tests/intro.html#other-tests":{"tf":1.0},"rustdoc.html#hot-potato":{"tf":1.0},"variance.html#variance-and-associated-types":{"tf":1.0},"type-inference.html#snapshots":{"tf":1.0},"conventions.html#using-crates-from-cratesio":{"tf":1.0},"query.html#cycles-between-queries":{"tf":1.0},"type-inference.html#region-constraints":{"tf":1.0},"rustc-driver.html#a-note-on-lifetimes":{"tf":1.0},"tests/adding.html#other-header-commands":{"tf":1.0},"variance.html#variance-and-object-types":{"tf":1.0},"mir/passes.html#stealing":{"tf":1.4142135623730952},"traits/resolution.html#overview":{"tf":1.0},"variance.html#addendum-variance-on-traits":{"tf":1.0},"mir/regionck.html#skolemization-and-outlives-constraints":{"tf":1.0},"query.html#how-the-compiler-executes-a-query":{"tf":1.0},"query.html#adding-a-new-kind-of-query":{"tf":1.0},"type-inference.html#enforcing-equality--subtyping":{"tf":1.0},"traits/chalk-overview.html#well-formedness-checks":{"tf":1.0}},"df":18}}},"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"u":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{"mir/index.html#key-mir-vocabulary":{"tf":1.0},"compiler-debugging.html#getting-a-backtrace-for-errors":{"tf":1.0},"compiler-debugging.html#debugging-llvm":{"tf":1.0},"traits/associated-types.html#integration-with-unification":{"tf":1.0},"compiletest.html#adding-a-new-header-command":{"tf":1.0},"mir/regionck.html#skolemization-and-outlives-constraints":{"tf":1.0},"name-resolution.html#overall-strategy":{"tf":1.4142135623730952}},"df":7}}},"d":{"docs":{"type-checking.html#type-collection":{"tf":1.0},"rustdoc.html#cheat-sheet":{"tf":1.0},"param_env.html#parameter-environment":{"tf":1.0},"traits/lowering-rules.html#associated-type-values":{"tf":1.0},"traits/chalk-overview.html#lowering":{"tf":1.0}},"df":5}},"a":{"docs":{},"df":0,"p":{"docs":{},"df":0,"s":{"docs":{},"df":0,"u":{"docs":{},"df":0,"l":{"docs":{"type-inference.html#snapshots":{"tf":1.0}},"df":1}}}}},"l":{"docs":{},"df":0,"o":{"docs":{},"df":0,"s":{"docs":{"name-resolution.html#scopes-and-ribs":{"tf":1.0},"type-inference.html#enforcing-equality--subtyping":{"tf":1.0}},"df":2}}}},"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"l":{"docs":{"type-inference.html#enforcing-equality--subtyping":{"tf":1.0}},"df":1}}},"d":{"docs":{"compiletest.html#adding-a-new-header-command":{"tf":1.4142135623730952},"appendix/background.html#what-is-a-control-flow-graph":{"tf":1.0},"variance.html#variance-and-object-types":{"tf":1.0},"type-inference.html#extracting-region-constraints":{"tf":1.0},"incremental-compilation.html#improvements-to-the-basic-algorithm":{"tf":1.0},"name-resolution.html#scopes-and-ribs":{"tf":1.7320508075688773},"diag.html#suggestions":{"tf":1.0},"query.html#queries-demand-driven-compilation":{"tf":1.0},"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.0},"mir/index.html#key-mir-vocabulary":{"tf":1.0},"appendix/glossary.html#appendix-c-glossary":{"tf":1.0},"incrcomp-debugging.html#dumping-the-graph":{"tf":1.0},"traits/canonical-queries.html#examples":{"tf":1.0},"rustc-driver.html#the-rustc-driver":{"tf":1.0},"mir/regionck.html#another-example":{"tf":1.0},"appendix/stupid-stats.html#compilercontroller":{"tf":1.0},"how-to-build-and-run.html#creating-a-rustup-toolchain":{"tf":1.0}},"df":17,"(":{"docs":{},"df":0,"'":{"docs":{},"df":0,"a":{"docs":{"mir/regionck.html#representing-the-values-of-a-region-variable":{"tf":1.0}},"df":1},"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{"mir/regionck.html#back-to-our-example":{"tf":2.23606797749979},"mir/regionck.html#representing-the-values-of-a-region-variable":{"tf":1.0}},"df":2}}}}},"x":{"docs":{"mir/regionck.html#skolemization-and-outlives-constraints":{"tf":1.0}},"df":1}}},"t":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{"query.html#adding-a-new-kind-of-query":{"tf":1.7320508075688773},"mir/regionck.html#representing-the-values-of-a-region-variable":{"tf":1.0},"miri.html#interpretation":{"tf":1.0},"rustdoc.html#from-crate-to-clean":{"tf":1.0},"traits/lowering-module.html#the--program_clauses_for--query":{"tf":1.0},"traits/resolution.html#candidate-assembly":{"tf":1.0},"variance.html#trait-variance-and-vtable-resolution":{"tf":1.0},"mir/borrowck.html#major-phases-of-the-borrow-checker":{"tf":1.0}},"df":8},"y":{"docs":{},"df":0,"p":{"docs":{},"df":0,"o":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{"rustc-driver.html#the-rustc-driver":{"tf":1.0},"the-parser.html#the-parser":{"tf":1.0}},"df":2}}}}}}},"i":{"docs":{},"df":0,"r":{"docs":{"ty.html#the-tcx-and-how-it-uses-lifetimes":{"tf":1.0},"high-level-overview.html#the-main-stages-of-compilation":{"tf":1.0},"compiler-debugging.html#getting-logging-output":{"tf":1.0},"query.html#queries-demand-driven-compilation":{"tf":1.0},"rustdoc.html#the-walking-tour-of-rustdoc":{"tf":1.0},"variance.html#dependency-graph-management":{"tf":1.0},"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.0},"how-to-build-and-run.html#creating-a-rustup-toolchain":{"tf":1.0},"appendix/glossary.html#appendix-c-glossary":{"tf":1.0},"miri.html#interpretation":{"tf":1.0},"appendix/stupid-stats.html#overview-of-the-compilation-process":{"tf":1.0}},"df":11}},"e":{"docs":{},"df":0,"r":{"docs":{"type-inference.html#creating-an-inference-context":{"tf":1.4142135623730952},"mir/regionck.html#what-is-a-universe":{"tf":1.4142135623730952},"tests/intro.html#testing-with-docker-images":{"tf":1.0}},"df":3}}}},"m":{"docs":{},"df":0,"s":{"docs":{},"df":0,"c":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{},"df":0,"p":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{"tests/adding.html#ignoring-tests":{"tf":1.0}},"df":1}}}}}}}},"b":{"docs":{"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.0}},"df":1,"e":{"docs":{},"df":0,"d":{"docs":{"tests/intro.html#other-tests":{"tf":1.0}},"df":1}}},"p":{"docs":{},"df":0,"t":{"docs":{},"df":0,"i":{"docs":{"mir/regionck.html#another-example":{"tf":1.0},"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.0},"traits/canonical-queries.html#examples":{"tf":1.0},"type-inference.html#lexical-region-resolution":{"tf":1.0},"tests/adding.html#guide-to-the-ui-tests":{"tf":1.0},"miri.html#miri":{"tf":1.0}},"df":6}},"l":{"docs":{},"df":0,"o":{"docs":{},"df":0,"y":{"docs":{"traits/resolution.html#overview":{"tf":1.0}},"df":1}}}},"u":{"docs":{},"df":0,"l":{"docs":{"tests/intro.html#testing-on-emulators":{"tf":3.4641016151377546},"appendix/stupid-stats.html#appendix-a-a-tutorial-on-creating-a-drop-in-replacement-for-rustc":{"tf":1.0},"rustc-driver.html#the-rustc-driver":{"tf":1.0}},"df":3}},"i":{"docs":{},"df":0,"t":{"docs":{"query.html#cycles-between-queries":{"tf":1.4142135623730952},"diag.html#emitting-diagnostics":{"tf":1.4142135623730952},"diag.html#suggestions":{"tf":1.0},"traits/chalk-overview.html#rules":{"tf":1.0},"diag.html#declaring-a-lint":{"tf":1.0},"tests/adding.html#error-annotations":{"tf":1.0},"traits/lowering-module.html#unit-tests":{"tf":1.0},"compiler-debugging.html#getting-a-backtrace-for-errors":{"tf":1.0},"compiler-debugging.html#getting-logging-output":{"tf":1.0},"appendix/code-index.html#appendix-d-code-index":{"tf":1.4142135623730952},"rustdoc.html#from-clean-to-crate":{"tf":1.0},"diag.html#error-messages":{"tf":3.0},"compiler-debugging.html#debugging-llvm":{"tf":1.7320508075688773}},"df":13,"=":{"docs":{},"df":0,"l":{"docs":{},"df":0,"l":{"docs":{},"df":0,"v":{"docs":{},"df":0,"m":{"docs":{"compiler-debugging.html#debugging-llvm":{"tf":1.0}},"df":1}}}}},"t":{"docs":{"diag.html#suggestions":{"tf":1.0}},"df":1}}}},"l":{"docs":{},"df":0,"a":{"docs":{},"df":0,"b":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{"traits/goals-and-clauses.html#incomplete-chapter":{"tf":1.0}},"df":1}}}},"e":{"docs":{},"df":0,"m":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{"mir/regionck.html#representing-the-values-of-a-region-variable":{"tf":2.6457513110645909},"mir/regionck.html#extending-the-universal-regions-check":{"tf":1.0},"mir/regionck.html#another-example":{"tf":1.0},"traits/canonical-queries.html#examples":{"tf":1.7320508075688773},"miri.html#datastructures":{"tf":1.0},"mir/regionck.html#skolemization-and-outlives-constraints":{"tf":2.0},"mir/index.html#mir-data-types":{"tf":1.4142135623730952},"mir/regionck.html#final-example":{"tf":1.0},"mir/regionck.html#universes-and-skolemized-region-elements":{"tf":2.449489742783178},"mir/regionck.html#back-to-our-example":{"tf":1.0}},"df":10}}}},"g":{"docs":{"mir/passes.html#stealing":{"tf":1.0}},"df":1}},"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"w":{"docs":{},"df":0,"h":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"traits/lowering-rules.html#associated-type-declarations":{"tf":1.0}},"df":1}}}}}},"i":{"docs":{},"df":0,"m":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{"tests/adding.html#normalization":{"tf":1.0},"appendix/stupid-stats.html#overview-of-the-compilation-process":{"tf":1.0}},"df":2}}}}},"x":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.0}},"df":1},"s":{"docs":{},"df":0,"t":{"docs":{"miri.html#allocations":{"tf":1.0},"incrcomp-debugging.html#testing-the-dependency-graph":{"tf":1.4142135623730952},"traits/hrtb.html#basic-matching-and-skolemization-leaks":{"tf":1.0},"conventions.html#copyright-notice":{"tf":1.0},"hir.html#identifiers-in-the-hir":{"tf":1.0},"tests/adding.html#guide-to-the-ui-tests":{"tf":1.0},"appendix/stupid-stats.html#what-next":{"tf":1.0},"mir/regionck.html#universes-and-skolemized-region-elements":{"tf":1.0},"traits/resolution.html#major-concepts":{"tf":1.7320508075688773},"traits/lowering-module.html#unit-tests":{"tf":1.0},"how-to-build-and-run.html#running-xpy-and-building-a-stage1-compiler":{"tf":1.0},"appendix/stupid-stats.html#compilercalls":{"tf":1.0},"traits/caching.html#where-clauses-and-the-local-vs-global-cache":{"tf":1.0},"traits/chalk-overview.html#well-formedness-checks":{"tf":1.0},"traits/chalk-overview.html#an-overview-of-chalk":{"tf":1.0},"incrcomp-debugging.html#tracking-down-incorrect-edges":{"tf":1.0}},"df":16,"s":{"docs":{},"df":0,"<":{"docs":{},"df":0,"x":{"docs":{"mir/regionck.html#what-is-a-universe":{"tf":1.0}},"df":1},"k":{"docs":{"traits/goals-and-clauses.html#goals-and-clauses-meta-structure":{"tf":1.0}},"df":1}}},"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{},"df":0,"i":{"docs":{"mir/regionck.html#another-example":{"tf":1.4142135623730952},"appendix/glossary.html#appendix-c-glossary":{"tf":1.0},"type-inference.html#a-note-on-terminology":{"tf":1.0},"appendix/background.html#what-is-universally-quantified-what-about-existentially-quantified":{"tf":1.0},"mir/regionck.html#what-is-a-universe":{"tf":1.4142135623730952},"traits/goals-and-clauses.html#goals-and-clauses-meta-structure":{"tf":1.0},"mir/regionck.html#final-example":{"tf":1.0},"mir/regionck.html#skolemization-and-outlives-constraints":{"tf":1.0},"mir/regionck.html#universes-and-skolemized-region-elements":{"tf":1.0}},"df":9}}}}}}},"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"c":{"docs":{},"df":0,"i":{"docs":{},"df":0,"s":{"docs":{"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.0}},"df":1}}}},"c":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{"mir/visitor.html#mir-visitor":{"tf":1.0},"tests/intro.html#other-tests":{"tf":1.0},"appendix/glossary.html#appendix-c-glossary":{"tf":1.0},"query.html#cycles-between-queries":{"tf":1.0},"miri.html#interpretation":{"tf":1.0},"incremental-compilation.html#the-try-mark-green-algorithm":{"tf":2.8284271247461905},"tests/intro.html#compiletest-test-suites":{"tf":1.7320508075688773},"compiletest.html#adding-a-new-test-file":{"tf":1.0},"appendix/background.html#what-is-a-control-flow-graph":{"tf":1.4142135623730952},"incremental-compilation.html#improvements-to-the-basic-algorithm":{"tf":1.0},"high-level-overview.html#the-main-stages-of-compilation":{"tf":1.0},"the-parser.html#the-parser":{"tf":1.0},"traits/chalk-overview.html#an-overview-of-chalk":{"tf":1.4142135623730952},"mir/regionck.html#representing-the-values-of-a-region-variable":{"tf":1.0},"miri.html#miri":{"tf":1.4142135623730952},"mir/passes.html#seeing-how-the-mir-changes-as-the-compiler-executes":{"tf":1.0},"how-to-build-and-run.html#creating-a-rustup-toolchain":{"tf":1.0},"query.html#how-the-compiler-executes-a-query":{"tf":1.4142135623730952},"rustdoc.html#other-tricks-up-its-sleeve":{"tf":1.0},"high-level-overview.html#crate-structure":{"tf":1.0},"query.html#queries-demand-driven-compilation":{"tf":1.4142135623730952},"ty.html#the-tcx-and-how-it-uses-lifetimes":{"tf":1.0},"appendix/stupid-stats.html#compilercontroller":{"tf":1.4142135623730952},"compiletest.html#introduction":{"tf":1.4142135623730952},"incremental-compilation.html#the-basic-algorithm":{"tf":2.23606797749979},"appendix/stupid-stats.html#overview-of-the-compilation-process":{"tf":1.0},"traits/canonicalization.html#executing-the-query":{"tf":1.0},"appendix/stupid-stats.html#the-driver-customisation-apis":{"tf":1.0},"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":2.0},"incremental-compilation.html#the-query-dag":{"tf":2.449489742783178},"type-inference.html#enforcing-equality--subtyping":{"tf":1.0},"mir/passes.html#stealing":{"tf":1.4142135623730952},"hir.html#hir-bodies":{"tf":1.0}},"df":33,"a":{"docs":{},"df":0,"b":{"docs":{},"df":0,"l":{"docs":{},"df":0,"e":{"docs":{},"df":0,"/":{"docs":{},"df":0,"o":{"docs":{},"df":0,"b":{"docs":{},"df":0,"j":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{"rustc-driver.html#the-rustc-driver":{"tf":1.0}},"df":1}}}}}}}}}}}}}},"m":{"docs":{},"df":0,"p":{"docs":{},"df":0,"t":{"docs":{"conventions.html#line-length":{"tf":1.0}},"df":1}}}},"p":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"s":{"docs":{"name-resolution.html#scopes-and-ribs":{"tf":1.0},"appendix/stupid-stats.html#overview-of-the-compilation-process":{"tf":1.0},"macro-expansion.html#macro-expansion":{"tf":2.0},"appendix/glossary.html#appendix-c-glossary":{"tf":1.0},"hir.html#the-hir":{"tf":1.0},"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.4142135623730952},"appendix/stupid-stats.html#compilercontroller":{"tf":1.0},"appendix/stupid-stats.html#appendix-a-a-tutorial-on-creating-a-drop-in-replacement-for-rustc":{"tf":1.0},"rustc-driver.html#the-rustc-driver":{"tf":1.0},"macro-expansion.html#the-macro-parser":{"tf":1.0},"macro-expansion.html#example":{"tf":1.4142135623730952},"high-level-overview.html#the-main-stages-of-compilation":{"tf":1.0}},"df":12},"d":{"docs":{"rustc-driver.html#the-rustc-driver":{"tf":1.4142135623730952},"macro-expansion.html#the-macro-parser":{"tf":1.0},"macro-expansion.html#example":{"tf":1.7320508075688773},"macro-expansion.html#macro-expansion":{"tf":1.0},"appendix/stupid-stats.html#overview-of-the-compilation-process":{"tf":1.4142135623730952},"name-resolution.html#overall-strategy":{"tf":1.0},"variance.html#trait-variance-and-vtable-resolution":{"tf":1.0},"high-level-overview.html#the-main-stages-of-compilation":{"tf":1.0},"traits/associated-types.html#associated-type-projection-and-normalization":{"tf":1.0}},"df":9}}},"r":{"docs":{"macro-expansion.html#the-macro-parser":{"tf":1.0}},"df":1,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"s":{"docs":{"hir.html#the-hir-map":{"tf":1.4142135623730952},"traits/lowering-to-logic.html#lowering-to-logic":{"tf":1.0},"miri.html#miri":{"tf":1.0},"method-lookup.html#method-lookup":{"tf":1.0},"compiler-debugging.html#expensive-operations-in-logs":{"tf":1.4142135623730952},"traits/index.html#trait-solving-new-style":{"tf":1.0},"high-level-overview.html#the-main-stages-of-compilation":{"tf":2.0},"hir.html#hir-bodies":{"tf":1.0},"type-inference.html#inference-variables":{"tf":1.4142135623730952},"traits/chalk-overview.html#an-overview-of-chalk":{"tf":1.0},"appendix/glossary.html#appendix-c-glossary":{"tf":1.0},"variance.html#variance-and-associated-types":{"tf":1.0},"traits/lowering-to-logic.html#type-checking-normal-functions":{"tf":1.0},"appendix/background.html#what-is-a-control-flow-graph":{"tf":1.0},"traits/lowering-to-logic.html#type-checking-generic-functions-beyond-horn-clauses":{"tf":1.0},"mir/index.html#key-mir-vocabulary":{"tf":2.449489742783178},"hir.html#the-hir":{"tf":1.0},"ty.html#the-tcx-and-how-it-uses-lifetimes":{"tf":1.0},"appendix/background.html#what-is-a-free-region-or-a-free-variable-what-about-bound-region":{"tf":2.449489742783178},"type-inference.html#type-inference":{"tf":1.0},"mir/index.html#introduction-to-mir":{"tf":1.0},"variance.html#the-algorithm":{"tf":1.4142135623730952},"traits/canonicalization.html#canonicalization":{"tf":1.0}},"df":23,"i":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"s":{"docs":{},"df":0,"/":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"m":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{},"df":0,"/":{"docs":{},"df":0,"w":{"docs":{},"df":0,"h":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"v":{"docs":{"appendix/background.html#what-is-a-free-region-or-a-free-variable-what-about-bound-region":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}},"/":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"m":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{},"df":0,"/":{"docs":{},"df":0,"w":{"docs":{},"df":0,"h":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"v":{"docs":{"appendix/background.html#what-is-a-free-region-or-a-free-variable-what-about-bound-region":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}},"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"m":{"docs":{"appendix/glossary.html#appendix-c-glossary":{"tf":1.0}},"df":1}}}}}}}}}}}},"o":{"docs":{},"df":0,"s":{"docs":{"appendix/background.html#what-is-a-control-flow-graph":{"tf":1.0},"rustdoc.html#from-clean-to-crate":{"tf":1.0}},"df":2},"r":{"docs":{},"df":0,"t":{"docs":{"high-level-overview.html#crate-structure":{"tf":1.4142135623730952}},"df":1}}},"l":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{"appendix/glossary.html#appendix-c-glossary":{"tf":1.4142135623730952},"high-level-overview.html#crate-structure":{"tf":1.0},"variance.html#variance-of-type-and-lifetime-parameters":{"tf":1.0},"rustc-driver.html#the-rustc-driver":{"tf":1.0}},"df":4},"i":{"docs":{},"df":0,"n":{"docs":{"macro-expansion.html#macro-expansion":{"tf":1.0},"traits/canonicalization.html#executing-the-query":{"tf":1.0},"mir/regionck.html#another-example":{"tf":1.0},"tests/adding.html#comment-explaining-what-the-test-is-about":{"tf":1.0},"mir/regionck.html#universal-regions":{"tf":1.0},"tests/adding.html#adding-new-tests":{"tf":1.0},"tests/adding.html#header-commands-configuring-rustc":{"tf":1.0},"hir.html#out-of-band-storage-and-the--crate--type":{"tf":1.0},"diag.html#suggestions":{"tf":1.4142135623730952}},"df":9}}},"i":{"docs":{},"df":0,"c":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{"traits/associated-types.html#associated-type-projection-and-normalization":{"tf":1.0},"hir.html#identifiers-in-the-hir":{"tf":1.0},"variance.html#variance-and-object-types":{"tf":1.0},"mir/index.html#introduction-to-mir":{"tf":1.0},"method-lookup.html#method-lookup":{"tf":1.0},"ty.html#import-conventions":{"tf":1.0},"method-lookup.html#candidate-assembly":{"tf":1.0}},"df":7,"l":{"docs":{},"df":0,"i":{"docs":{"variance.html#variance-of-type-and-lifetime-parameters":{"tf":1.0},"traits/canonical-queries.html#examples":{"tf":1.0},"traits/chalk-overview.html#an-overview-of-chalk":{"tf":1.0},"ty.html#the-tcx-and-how-it-uses-lifetimes":{"tf":1.0},"ty.html#allocating-and-working-with-types":{"tf":1.0},"ty.html#import-conventions":{"tf":1.0}},"df":6}}}}}}},"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"s":{"docs":{"appendix/glossary.html#appendix-c-glossary":{"tf":1.0}},"df":1}},"c":{"docs":{},"df":0,"t":{"docs":{"query.html#cycles-between-queries":{"tf":1.0},"macro-expansion.html#the-macro-parser":{"tf":1.0},"tests/adding.html#tests-that-do-not-result-in-compile-errors":{"tf":1.4142135623730952},"rustdoc.html#cheat-sheet":{"tf":1.0},"rustdoc.html#dotting-is-and-crossing-ts":{"tf":1.7320508075688773},"traits/specialization.html#specialization":{"tf":1.0},"conventions.html#how-to-structure-your-pr":{"tf":1.0},"compiletest.html#introduction":{"tf":1.4142135623730952},"compiletest.html#implementing-the-behavior-change":{"tf":2.0},"incrcomp-debugging.html#testing-the-dependency-graph":{"tf":1.0},"traits/chalk-overview.html#an-overview-of-chalk":{"tf":1.0},"mir/regionck.html#subtyping-and-skolemization":{"tf":1.0},"variance.html#variance-and-associated-types":{"tf":1.0},"tests/adding.html#adding-new-tests":{"tf":1.4142135623730952},"variance.html#trait-variance-and-vtable-resolution":{"tf":1.7320508075688773},"compiletest.html#adding-a-new-header-command":{"tf":1.0},"tests/adding.html#revisions":{"tf":1.0},"miri.html#datastructures":{"tf":1.0},"compiletest.html#header-commands":{"tf":1.7320508075688773},"variance.html#variance-and-object-types":{"tf":1.4142135623730952},"tests/intro.html#compiletest-test-suites":{"tf":2.449489742783178},"query.html#adding-a-new-kind-of-query":{"tf":1.0},"tests/adding.html#error-annotations":{"tf":1.0}},"df":23,"e":{"docs":{},"df":0,"d":{"docs":{},"df":0,"_":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{},"df":0,"u":{"docs":{"compiletest.html#implementing-the-behavior-change":{"tf":1.7320508075688773}},"df":1}}}}}}}}}},"n":{"docs":{},"df":0,"s":{"docs":{"compiler-debugging.html#expensive-operations-in-logs":{"tf":1.7320508075688773}},"df":1,"i":{"docs":{},"df":0,"v":{"docs":{},"df":0,"e":{"docs":{},"df":0,"/":{"docs":{},"df":0,"c":{"docs":{},"df":0,"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"s":{"docs":{},"df":0,"h":{"docs":{},"df":0,"i":{"docs":{"compiler-debugging.html#expensive-operations-in-logs":{"tf":1.0}},"df":1}}}}}}},"o":{"docs":{},"df":0,"p":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{},"df":0,"i":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{},"df":0,"a":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{"compiler-debugging.html#expensive-operations-in-logs":{"tf":1.0}},"df":1,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"<":{"docs":{},"df":0,"'":{"docs":{},"df":0,"a":{"docs":{"compiler-debugging.html#expensive-operations-in-logs":{"tf":1.4142135623730952}},"df":1}}}}}}}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"df":0,"i":{"docs":{"appendix/stupid-stats.html#what-next":{"tf":1.0},"query.html#cycles-between-queries":{"tf":1.0}},"df":2}}}},"h":{"docs":{},"df":0,"a":{"docs":{},"df":0,"u":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{"conventions.html#prefer-exhaustive-matches":{"tf":1.4142135623730952},"tests/adding.html#other-header-commands":{"tf":1.0}},"df":2}}}}},"a":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{"traits/chalk-overview.html#parsing":{"tf":1.0},"appendix/stupid-stats.html#overview-of-the-compilation-process":{"tf":1.0},"macro-expansion.html#example":{"tf":1.0},"traits/canonicalization.html#canonicalization":{"tf":1.0},"type-checking.html#type-collection":{"tf":1.0},"tests/intro.html#compiletest-test-suites":{"tf":1.0}},"df":6,"l":{"docs":{},"df":0,"i":{"docs":{"name-resolution.html#todo":{"tf":1.0},"ty.html#allocating-and-working-with-types":{"tf":1.0},"traits/lowering-rules.html#lowering-function-and-constant-declarations":{"tf":1.0},"traits/resolution.html#candidate-assembly":{"tf":1.0},"traits/lowering-rules.html#function-and-constant-values":{"tf":1.0},"tests/adding.html#comment-explaining-what-the-test-is-about":{"tf":1.0},"query.html#queries-demand-driven-compilation":{"tf":1.0},"macro-expansion.html#the-macro-parser":{"tf":1.7320508075688773},"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.0},"traits/chalk-overview.html#parsing":{"tf":1.0},"miri.html#allocations":{"tf":1.0},"appendix/stupid-stats.html#what-next":{"tf":1.0}},"df":12}}}},"m":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{"type-checking.html#type-collection":{"tf":1.0},"traits/resolution.html#candidate-assembly":{"tf":1.0}},"df":2}},"p":{"docs":{},"df":0,"l":{"docs":{"how-to-build-and-run.html#creating-a-rustup-toolchain":{"tf":1.0},"traits/canonical-queries.html#examples":{"tf":3.0},"traits/canonicalization.html#executing-the-query":{"tf":1.4142135623730952},"mir/passes.html#seeing-how-the-mir-changes-as-the-compiler-executes":{"tf":1.7320508075688773},"ty.html#allocating-and-working-with-types":{"tf":1.0},"traits/wf.html#well-formedness-checking":{"tf":1.0},"tests/running.html#running-a-subset-of-the-test-suites":{"tf":1.4142135623730952},"tests/adding.html#ignoring-tests":{"tf":1.0},"incrcomp-debugging.html#tracking-down-incorrect-edges":{"tf":1.0},"mir/regionck.html#final-example":{"tf":1.7320508075688773},"appendix/background.html#what-is-a-free-region-or-a-free-variable-what-about-bound-region":{"tf":1.0},"tests/adding.html#header-commands-configuring-rustc":{"tf":1.0},"method-lookup.html#candidate-search":{"tf":1.0},"compiler-debugging.html#getting-a-backtrace-for-errors":{"tf":1.0},"traits/canonicalization.html#canonicalization":{"tf":1.0},"name-resolution.html#scopes-and-ribs":{"tf":1.4142135623730952},"traits/associated-types.html#integration-with-unification":{"tf":1.0},"traits/chalk-overview.html#lowering":{"tf":1.0},"traits/resolution.html#overview":{"tf":1.0},"appendix/stupid-stats.html#compilercontroller":{"tf":1.0},"traits/canonical-queries.html#a-trait-query-in-rustc":{"tf":1.4142135623730952},"appendix/stupid-stats.html#appendix-a-a-tutorial-on-creating-a-drop-in-replacement-for-rustc":{"tf":1.0},"mir/regionck.html#back-to-our-example":{"tf":1.4142135623730952},"macro-expansion.html#example":{"tf":2.0},"traits/hrtb.html#higher-ranked-trait-bounds":{"tf":1.0},"tests/adding.html#revisions":{"tf":1.0},"diag.html#error-messages":{"tf":1.0},"traits/canonical-queries.html#the-traditional-interactive-prolog-query":{"tf":1.4142135623730952},"method-lookup.html#candidate-assembly":{"tf":1.0},"hir.html#the-hir":{"tf":1.0},"hir.html#out-of-band-storage-and-the--crate--type":{"tf":1.4142135623730952},"incrcomp-debugging.html#testing-the-dependency-graph":{"tf":1.0},"appendix/background.html#what-is-a-control-flow-graph":{"tf":1.0},"traits/associated-types.html#skolemized-associated-types":{"tf":1.0},"traits/chalk-overview.html#parsing":{"tf":1.0},"mir/index.html#key-mir-vocabulary":{"tf":1.0},"compiletest.html#adding-a-new-header-command":{"tf":1.4142135623730952},"traits/caching.html#an-example":{"tf":1.0},"rustc-driver.html#a-note-on-lifetimes":{"tf":1.0},"diag.html#declaring-a-lint":{"tf":1.0},"incremental-compilation.html#the-basic-algorithm":{"tf":1.0},"tests/adding.html#naming-your-test":{"tf":1.4142135623730952},"mir/regionck.html#skolemization-and-universes":{"tf":1.4142135623730952},"tests/adding.html#normalization":{"tf":1.0},"param_env.html#parameter-environment":{"tf":1.0},"diag.html#lint-groups":{"tf":1.0},"traits/resolution.html#selection-during-translation":{"tf":1.0},"query.html#queries-demand-driven-compilation":{"tf":1.7320508075688773},"traits/implied-bounds.html#implied-bounds":{"tf":1.0},"traits/resolution.html#candidate-assembly":{"tf":2.23606797749979},"compiletest.html#introduction":{"tf":1.0},"query.html#invoking-queries":{"tf":1.0},"const-eval.html#constant-evaluation":{"tf":1.0},"query.html#adding-a-new-kind-of-query":{"tf":1.0},"hir.html#the-hir-map":{"tf":1.0},"traits/lowering-to-logic.html#rust-traits-and-logic":{"tf":1.4142135623730952},"variance.html#variance-and-object-types":{"tf":1.0},"mir/passes.html#stealing":{"tf":1.0},"macro-expansion.html#the-macro-parser":{"tf":2.23606797749979},"mir/regionck.html#what-is-a-universe":{"tf":1.7320508075688773},"traits/chalk-overview.html#intermediate-representation-ir":{"tf":1.0},"query.html#how-the-compiler-executes-a-query":{"tf":1.0},"traits/lowering-rules.html#trait-header":{"tf":1.4142135623730952},"tests/running.html#running-an-individual-test":{"tf":1.0},"traits/lowering-to-logic.html#type-checking-generic-functions-beyond-horn-clauses":{"tf":1.4142135623730952},"type-inference.html#subtyping-obligations":{"tf":1.0},"mir/visitor.html#mir-visitor":{"tf":1.0},"traits/goals-and-clauses.html#domain-goals":{"tf":1.7320508075688773},"compiletest.html#implementing-the-behavior-change":{"tf":1.4142135623730952},"variance.html#the-algorithm":{"tf":1.0},"traits/resolution.html#confirmation":{"tf":1.0},"traits/goals-and-clauses.html#coinductive-goals":{"tf":1.7320508075688773},"ty.html#beyond-types-other-kinds-of-arena-allocated-data-structures":{"tf":1.0},"mir/regionck.html#universes-and-skolemized-region-elements":{"tf":1.0},"traits/canonicalization.html#canonicalizing-the-query-result":{"tf":1.0},"mir/regionck.html#another-example":{"tf":1.0},"traits/canonicalization.html#processing-the-canonicalized-query-result":{"tf":1.0},"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":2.0},"type-checking.html#type-collection":{"tf":1.0},"traits/lowering-module.html#unit-tests":{"tf":1.0},"mir/passes.html#implementing-and-registering-a-pass":{"tf":1.4142135623730952},"diag.html#suggestions":{"tf":2.0},"ty.html#the-tcx-and-how-it-uses-lifetimes":{"tf":1.0},"high-level-overview.html#the-main-stages-of-compilation":{"tf":1.4142135623730952},"traits/resolution.html#major-concepts":{"tf":1.4142135623730952},"traits/hrtb.html#higher-ranked-trait-obligations":{"tf":1.0},"appendix/glossary.html#appendix-c-glossary":{"tf":2.6457513110645909},"rustdoc.html#from-soup-to-nuts":{"tf":1.0},"traits/associated-types.html#associated-type-projection-and-normalization":{"tf":2.0},"tests/intro.html#other-tests":{"tf":2.6457513110645909},"incrcomp-debugging.html#dumping-the-graph":{"tf":1.0},"rustdoc.html#dotting-is-and-crossing-ts":{"tf":1.0},"conventions.html#how-to-structure-your-pr":{"tf":1.0},"traits/hrtb.html#basic-matching-and-skolemization-leaks":{"tf":1.0}},"df":94}}}},"c":{"docs":{},"df":0,"l":{"docs":{},"df":0,"u":{"docs":{},"df":0,"d":{"docs":{"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.0},"compiler-debugging.html#expensive-operations-in-logs":{"tf":1.0}},"df":2}}},"i":{"docs":{},"df":0,"t":{"docs":{"high-level-overview.html#the-main-stages-of-compilation":{"tf":1.0}},"df":1}},"e":{"docs":{},"df":0,"p":{"docs":{},"df":0,"t":{"docs":{"hir.html#the-hir":{"tf":1.0},"miri.html#interpretation":{"tf":1.4142135623730952},"mir/borrowck.html#mir-borrow-check":{"tf":1.0},"name-resolution.html#overall-strategy":{"tf":1.0},"conventions.html#copyright-notice":{"tf":1.0},"compiletest.html#adding-a-new-header-command":{"tf":1.0},"traits/associated-types.html#skolemized-associated-types":{"tf":1.0},"tests/adding.html#header-commands-configuring-rustc":{"tf":1.0},"ty.html#allocating-and-working-with-types":{"tf":1.0},"mir/passes.html#stealing":{"tf":1.0},"macro-expansion.html#the-macro-parser":{"tf":1.0},"query.html#adding-a-new-kind-of-query":{"tf":1.0}},"df":12}},"l":{"docs":{"traits/lowering-to-logic.html#type-checking-generic-functions-beyond-horn-clauses":{"tf":1.0}},"df":1},"s":{"docs":{},"df":0,"s":{"docs":{"rustdoc.html#hot-potato":{"tf":1.0}},"df":1}}}},"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"n":{"docs":{"conventions.html#using-crates-from-cratesio":{"tf":1.0},"rustdoc.html#hot-potato":{"tf":1.0},"query.html#how-the-compiler-executes-a-query":{"tf":2.23606797749979},"rustc-driver.html#the-rustc-driver":{"tf":1.0}},"df":4}},"n":{"docs":{},"df":0,"d":{"docs":{"mir/regionck.html#causal-tracking":{"tf":1.0},"mir/regionck.html#extending-the-universal-regions-check":{"tf":1.0},"mir/regionck.html#final-example":{"tf":1.0},"mir/passes.html#mir-passes":{"tf":1.0},"traits/goals-and-clauses.html#goals-and-clauses":{"tf":1.0},"traits/lowering-rules.html#trait-header":{"tf":1.0},"mir/regionck.html#what-is-a-universe":{"tf":2.23606797749979},"traits/canonical-queries.html#examples":{"tf":1.0},"traits/lowering-to-logic.html#rust-traits-and-logic":{"tf":1.0},"traits/chalk-overview.html#an-overview-of-chalk":{"tf":1.0},"type-inference.html#type-inference":{"tf":1.0}},"df":11},"s":{"docs":{"method-lookup.html#candidate-assembly":{"tf":1.7320508075688773},"traits/lowering-to-logic.html#type-checking-generic-functions-beyond-horn-clauses":{"tf":1.0},"incremental-compilation.html#incremental-compilation":{"tf":1.0},"appendix/glossary.html#appendix-c-glossary":{"tf":1.0},"appendix/stupid-stats.html#overview-of-the-compilation-process":{"tf":1.0},"tests/adding.html#comment-explaining-what-the-test-is-about":{"tf":1.0},"traits/goals-and-clauses.html#goals-and-clauses":{"tf":1.0}},"df":7}}},"r":{"docs":{},"df":0,"a":{"docs":{"rustdoc.html#other-tricks-up-its-sleeve":{"tf":1.0},"type-inference.html#enforcing-equality--subtyping":{"tf":1.0},"appendix/stupid-stats.html#what-next":{"tf":1.0},"appendix/glossary.html#appendix-c-glossary":{"tf":1.0},"tests/adding.html#other-header-commands":{"tf":1.0},"hir.html#identifiers-in-the-hir":{"tf":1.0},"traits/goals-and-clauses.html#domain-goals":{"tf":1.0},"rustdoc.html#from-crate-to-clean":{"tf":1.0},"rustdoc.html#hot-potato":{"tf":1.0},"traits/canonical-queries.html#a-trait-query-in-rustc":{"tf":1.0}},"df":10,"c":{"docs":{},"df":0,"t":{"docs":{"compiler-debugging.html#debugging-llvm":{"tf":1.4142135623730952},"type-inference.html#extracting-region-constraints":{"tf":1.4142135623730952},"macro-expansion.html#the-macro-parser":{"tf":1.4142135623730952},"rustdoc.html#cheat-sheet":{"tf":1.0},"appendix/glossary.html#appendix-c-glossary":{"tf":1.0},"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.0},"variance.html#dependency-graph-management":{"tf":1.0},"hir.html#the-hir-map":{"tf":1.0},"miri.html#miri":{"tf":1.0}},"df":9,"e":{"docs":{},"df":0,"d":{"docs":{},"df":0,".":{"docs":{},"df":0,"l":{"docs":{"compiler-debugging.html#debugging-llvm":{"tf":1.0}},"df":1}}}}}}},"e":{"docs":{},"df":0,"m":{"docs":{"appendix/stupid-stats.html#appendix-a-a-tutorial-on-creating-a-drop-in-replacement-for-rustc":{"tf":1.0},"high-level-overview.html#crate-structure":{"tf":1.0},"macro-expansion.html#the-macro-parser":{"tf":1.0}},"df":3}}}}},"f":{"docs":{},"df":0,"f":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"t":{"docs":{"diag.html#emitting-diagnostics":{"tf":1.0}},"df":1}}},"i":{"docs":{},"df":0,"c":{"docs":{},"df":0,"i":{"docs":{"appendix/glossary.html#appendix-c-glossary":{"tf":1.0},"compiletest.html#introduction":{"tf":1.0},"traits/lowering-to-logic.html#type-checking-generic-functions-beyond-horn-clauses":{"tf":1.0},"mir/regionck.html#representing-the-values-of-a-region-variable":{"tf":1.0},"ty.html#allocating-and-working-with-types":{"tf":1.0},"mir/passes.html#implementing-and-registering-a-pass":{"tf":1.0}},"df":6}}},"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{"traits/canonicalization.html#executing-the-query":{"tf":1.0},"traits/caching.html#an-example":{"tf":1.4142135623730952},"method-lookup.html#method-lookup":{"tf":1.0},"variance.html#dependency-graph-management":{"tf":1.0},"traits/index.html#trait-solving-new-style":{"tf":1.0},"query.html#queries-demand-driven-compilation":{"tf":1.0},"hir.html#identifiers-in-the-hir":{"tf":1.0},"type-inference.html#trying-equality":{"tf":1.0},"tests/intro.html#compiletest-test-suites":{"tf":1.0},"type-inference.html#snapshots":{"tf":1.0},"high-level-overview.html#crate-structure":{"tf":1.0},"conventions.html#prefer-exhaustive-matches":{"tf":1.0},"traits/caching.html#caching-and-subtle-considerations-therewith":{"tf":1.0},"rustc-driver.html#the-rustc-driver":{"tf":1.0},"type-inference.html#enforcing-equality--subtyping":{"tf":1.0}},"df":15}}}}},".":{"docs":{},"df":0,"g":{"docs":{"compiler-debugging.html#getting-logging-output":{"tf":1.0},"macro-expansion.html#the-macro-parser":{"tf":1.0},"param_env.html#parameter-environment":{"tf":1.4142135623730952},"traits/lowering-to-logic.html#rust-traits-and-logic":{"tf":1.0},"traits/canonical-queries.html#canonical-queries":{"tf":1.0},"mir/visitor.html#mir-visitor":{"tf":1.0},"const-eval.html#constant-evaluation":{"tf":1.0},"mir/regionck.html#mir-based-region-checking-nll":{"tf":1.4142135623730952},"hir.html#out-of-band-storage-and-the--crate--type":{"tf":1.4142135623730952},"tests/adding.html#editing-and-updating-the-reference-files":{"tf":1.0},"macro-expansion.html#example":{"tf":1.4142135623730952},"compiler-debugging.html#debugging-llvm":{"tf":1.7320508075688773},"tests/adding.html#normalization":{"tf":1.4142135623730952},"traits/resolution.html#overview":{"tf":1.0},"mir/visitor.html#traversal":{"tf":1.0},"appendix/stupid-stats.html#what-next":{"tf":1.0},"traits/associated-types.html#skolemized-associated-types":{"tf":1.0},"ty.html#beyond-types-other-kinds-of-arena-allocated-data-structures":{"tf":1.0},"compiler-debugging.html#formatting-graphviz-output-dot-files":{"tf":1.4142135623730952},"tests/adding.html#other-header-commands":{"tf":1.0},"mir/index.html#key-mir-vocabulary":{"tf":1.7320508075688773},"tests/adding.html#naming-your-test":{"tf":1.0},"query.html#cycles-between-queries":{"tf":1.0},"traits/canonical-queries.html#a-trait-query-in-rustc":{"tf":1.0},"hir.html#identifiers-in-the-hir":{"tf":1.0},"hir.html#hir-bodies":{"tf":1.4142135623730952},"traits/associated-types.html#associated-type-projection-and-normalization":{"tf":1.0},"traits/caching.html#an-example":{"tf":1.0},"tests/adding.html#guide-to-the-ui-tests":{"tf":1.0},"hir.html#the-hir-map":{"tf":1.0},"appendix/glossary.html#appendix-c-glossary":{"tf":2.449489742783178},"method-lookup.html#candidate-assembly":{"tf":1.0},"high-level-overview.html#the-main-stages-of-compilation":{"tf":1.4142135623730952},"traits/lowering-to-logic.html#lowering-to-logic":{"tf":1.0},"appendix/stupid-stats.html#compilercontroller":{"tf":1.0},"high-level-overview.html#crate-structure":{"tf":1.0},"tests/running.html#running-tests":{"tf":1.0},"macro-expansion.html#macro-expansion":{"tf":1.0},"traits/lowering-rules.html#trait-header":{"tf":1.0},"mir/index.html#mir-data-types":{"tf":1.0},"ty.html#allocating-and-working-with-types":{"tf":1.0},"ty.html#import-conventions":{"tf":1.0},"rustc-driver.html#a-note-on-lifetimes":{"tf":1.4142135623730952},"traits/goals-and-clauses.html#domain-goals":{"tf":2.449489742783178},"mir/regionck.html#what-is-a-universe":{"tf":1.0},"rustc-driver.html#the-rustc-driver":{"tf":1.0},"method-lookup.html#method-lookup":{"tf":1.4142135623730952},"tests/intro.html#compiletest-test-suites":{"tf":1.0}},"df":48},"n":{"docs":{},"df":0,"o":{"docs":{},"df":0,"d":{"docs":{"diag.html#declaring-a-lint":{"tf":1.0}},"df":1}}}},"v":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"y":{"docs":{},"df":0,"t":{"docs":{},"df":0,"h":{"docs":{"mir/regionck.html#skolemization-and-outlives-constraints":{"tf":1.0},"traits/resolution.html#selection-during-translation":{"tf":1.0},"traits/lowering-to-logic.html#type-checking-normal-functions":{"tf":1.0},"appendix/stupid-stats.html#appendix-a-a-tutorial-on-creating-a-drop-in-replacement-for-rustc":{"tf":1.0},"tests/intro.html#testing-on-emulators":{"tf":1.0},"how-to-build-and-run.html#other-xpy-commands":{"tf":1.0},"mir/regionck.html#what-is-a-universe":{"tf":1.0}},"df":7}}}},"n":{"docs":{"traits/canonical-queries.html#a-trait-query-in-rustc":{"tf":1.0},"about-this-guide.html#about-this-guide":{"tf":1.0},"mir/visitor.html#mir-visitor":{"tf":1.0},"compiler-debugging.html#debugging-llvm":{"tf":1.0},"high-level-overview.html#the-main-stages-of-compilation":{"tf":1.0},"mir/borrowck.html#mir-borrow-check":{"tf":1.0},"mir/passes.html#stealing":{"tf":1.0},"compiletest.html#introduction":{"tf":1.0},"miri.html#interpretation":{"tf":1.0},"conventions.html#line-length":{"tf":1.0},"traits/caching.html#caching-and-subtle-considerations-therewith":{"tf":1.0},"compiler-debugging.html#expensive-operations-in-logs":{"tf":1.7320508075688773},"type-inference.html#trying-equality":{"tf":1.0},"traits/canonical-queries.html#examples":{"tf":1.0},"incremental-compilation.html#the-basic-algorithm":{"tf":1.0},"mir/regionck.html#another-example":{"tf":1.4142135623730952},"traits/specialization.html#specialization":{"tf":1.0},"tests/adding.html#tests-that-do-not-result-in-compile-errors":{"tf":1.0},"rustdoc.html#hot-potato":{"tf":1.0},"traits/goals-and-clauses.html#coinductive-goals":{"tf":1.0},"name-resolution.html#scopes-and-ribs":{"tf":1.0},"name-resolution.html#overall-strategy":{"tf":1.4142135623730952}},"df":22,"t":{"docs":{"rustdoc.html#from-crate-to-clean":{"tf":1.0}},"df":1,"u":{"docs":{"mir/regionck.html#mir-based-region-checking-nll":{"tf":1.0},"traits/lowering-rules.html#lowering-function-and-constant-declarations":{"tf":1.0},"query.html#how-the-compiler-executes-a-query":{"tf":1.0},"traits/lowering-rules.html#function-and-constant-values":{"tf":1.0},"type-inference.html#extracting-region-constraints":{"tf":1.0},"query.html#queries-demand-driven-compilation":{"tf":1.0},"mir/regionck.html#subtyping-and-skolemization":{"tf":1.0}},"df":7}}}},"o":{"docs":{},"df":0,"l":{"docs":{},"df":0,"v":{"docs":{"appendix/stupid-stats.html#appendix-a-a-tutorial-on-creating-a-drop-in-replacement-for-rustc":{"tf":1.4142135623730952}},"df":1}}},"a":{"docs":{},"df":0,"l":{"docs":{},"df":0,"u":{"docs":{"traits/resolution.html#overview":{"tf":1.0},"appendix/glossary.html#appendix-c-glossary":{"tf":1.0},"mir/passes.html#mir-passes":{"tf":1.0},"miri.html#miri":{"tf":2.6457513110645909},"miri.html#interpretation":{"tf":2.449489742783178},"compiler-debugging.html#expensive-operations-in-logs":{"tf":1.0},"variance.html#dependency-graph-management":{"tf":1.0},"param_env.html#parameter-environment":{"tf":1.7320508075688773},"compiletest.html#implementing-the-behavior-change":{"tf":1.4142135623730952},"const-eval.html#constant-evaluation":{"tf":2.8284271247461905}},"df":10}}}},"d":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{"diag.html#edition-gated-lints":{"tf":2.23606797749979},"diag.html#suggestions":{"tf":1.0},"conventions.html#copyright-notice":{"tf":1.0},"how-to-build-and-run.html#create-a-configtoml":{"tf":1.0},"how-to-build-and-run.html#running-xpy-and-building-a-stage1-compiler":{"tf":1.0},"mir/passes.html#implementing-and-registering-a-pass":{"tf":1.0},"tests/adding.html#editing-and-updating-the-reference-files":{"tf":1.0}},"df":7,"i":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"e":{"docs":{},"df":0,"d":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{},"df":0,"i":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"2":{"docs":{},"df":0,"0":{"docs":{},"df":0,"1":{"docs":{},"df":0,"8":{"docs":{"diag.html#edition-gated-lints":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}},"o":{"docs":{},"df":0,"r":{"docs":{"compiler-debugging.html#getting-logging-output":{"tf":1.4142135623730952}},"df":1}}}},"g":{"docs":{"incremental-compilation.html#the-basic-algorithm":{"tf":1.0},"incrcomp-debugging.html#dumping-the-graph":{"tf":2.0},"mir/passes.html#implementing-and-registering-a-pass":{"tf":1.0},"incrcomp-debugging.html#tracking-down-incorrect-edges":{"tf":2.0},"appendix/background.html#what-is-a-control-flow-graph":{"tf":1.0}},"df":5}}},"o":{"docs":{"variance.html#the-algorithm":{"tf":1.4142135623730952},"variance.html#variance-and-object-types":{"tf":1.0},"compiler-debugging.html#debugging-llvm":{"tf":1.4142135623730952},"variance.html#variance-of-type-and-lifetime-parameters":{"tf":1.0},"high-level-overview.html#the-main-stages-of-compilation":{"tf":1.4142135623730952},"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.4142135623730952}},"df":6,"s":{"docs":{"tests/adding.html#ignoring-tests":{"tf":1.0}},"df":1},"=":{"docs":{},"df":0,"&":{"docs":{},"df":0,"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"v":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"t":{"docs":{},"df":0,"t":{"docs":{},"df":0,"o":{"docs":{},"df":0,"<":{"docs":{},"df":0,"o":{"docs":{},"df":0,"b":{"docs":{},"df":0,"j":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{"variance.html#variance-and-object-types":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}},"t":{"docs":{},"df":0,"o":{"docs":{},"df":0,"h":{"docs":{"variance.html#variance-and-associated-types":{"tf":1.0}},"df":1}},"h":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"appendix/stupid-stats.html#appendix-a-a-tutorial-on-creating-a-drop-in-replacement-for-rustc":{"tf":1.0},"name-resolution.html#scopes-and-ribs":{"tf":1.0},"high-level-overview.html#crate-structure":{"tf":1.0},"rustdoc.html#from-soup-to-nuts":{"tf":1.0},"tests/adding.html#comment-explaining-what-the-test-is-about":{"tf":1.4142135623730952},"how-to-build-and-run.html#create-a-configtoml":{"tf":1.0}},"df":6,"w":{"docs":{},"df":0,"i":{"docs":{},"df":0,"s":{"docs":{"method-lookup.html#candidate-search":{"tf":1.0},"miri.html#interpretation":{"tf":1.0},"method-lookup.html#method-lookup":{"tf":1.0},"tests/running.html#running-tests":{"tf":1.0},"hir.html#the-hir-map":{"tf":1.0},"mir/passes.html#stealing":{"tf":1.0},"incremental-compilation.html#improvements-to-the-basic-algorithm":{"tf":1.0},"traits/resolution.html#candidate-assembly":{"tf":1.4142135623730952},"traits/canonical-queries.html#a-trait-query-in-rustc":{"tf":1.0},"incremental-compilation.html#the-try-mark-green-algorithm":{"tf":1.0}},"df":10}}}}}}},"w":{"docs":{},"df":0,"n":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"hir.html#hir-bodies":{"tf":1.4142135623730952}},"df":1}}}},"f":{"docs":{},"df":0,".":{"docs":{},"df":0,".":{"docs":{},"df":0,".":{"docs":{},"df":0,"i":{"docs":{},"df":0,"d":{"docs":{},"df":0,"i":{"docs":{},"df":0,"o":{"docs":{},"df":0,"s":{"docs":{},"df":0,"y":{"docs":{},"df":0,"n":{"docs":{},"df":0,"c":{"docs":{},"df":0,"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{"appendix/glossary.html#appendix-c-glossary":{"tf":1.0}},"df":1}}}}}}}}}}}}}},"i":{"docs":{},"df":0,"l":{"docs":{"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":2.0}},"df":1}},"f":{"docs":{},"df":0,"i":{"docs":{},"df":0,"c":{"docs":{},"df":0,"i":{"docs":{"compiler-debugging.html#getting-logging-output":{"tf":1.0},"compiler-debugging.html#debugging-llvm":{"tf":1.0}},"df":2}}},"e":{"docs":{},"df":0,"r":{"docs":{"conventions.html#formatting-and-the-tidy-script":{"tf":1.0},"appendix/glossary.html#appendix-c-glossary":{"tf":1.0},"tests/intro.html#testing-on-emulators":{"tf":1.0},"query.html#invoking-queries":{"tf":1.0}},"df":4}},"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"t":{"docs":{"appendix/glossary.html#appendix-c-glossary":{"tf":1.0},"hir.html#identifiers-in-the-hir":{"tf":1.0},"miri.html#allocations":{"tf":1.0}},"df":3}}}}},"r":{"docs":{},"df":0,"g":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{"query.html#queries-demand-driven-compilation":{"tf":1.0},"compiletest.html#introduction":{"tf":1.7320508075688773},"hir.html#out-of-band-storage-and-the--crate--type":{"tf":1.0}},"df":3}}},"i":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{"how-to-build-and-run.html#how-to-build-the-compiler-and-run-what-you-built":{"tf":1.0},"compiler-debugging.html#getting-logging-output":{"tf":1.0}},"df":2}}},"g":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{"ty.html#allocating-and-working-with-types":{"tf":1.0},"traits/canonicalization.html#canonicalizing-the-query-result":{"tf":1.4142135623730952},"traits/canonicalization.html#processing-the-canonicalized-query-result":{"tf":1.4142135623730952},"mir/index.html#key-mir-vocabulary":{"tf":1.0},"traits/canonicalization.html#executing-the-query":{"tf":1.0},"incrcomp-debugging.html#dumping-the-graph":{"tf":1.4142135623730952},"traits/canonical-queries.html#a-trait-query-in-rustc":{"tf":1.0},"incremental-compilation.html#the-try-mark-green-algorithm":{"tf":1.0},"traits/hrtb.html#higher-ranked-trait-obligations":{"tf":1.0},"traits/canonicalization.html#canonicalizing-the-query":{"tf":1.0},"type-inference.html#subtyping-obligations":{"tf":1.0},"traits/canonicalization.html#canonicalization":{"tf":1.0},"traits/canonical-queries.html#the-traditional-interactive-prolog-query":{"tf":1.0}},"df":13}}}},"d":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"type-inference.html#snapshots":{"tf":1.0},"traits/canonicalization.html#executing-the-query":{"tf":1.0},"high-level-overview.html#the-main-stages-of-compilation":{"tf":1.0},"traits/resolution.html#candidate-assembly":{"tf":1.0},"compiletest.html#implementing-the-behavior-change":{"tf":1.0},"mir/visitor.html#traversal":{"tf":1.7320508075688773},"how-to-build-and-run.html#creating-a-rustup-toolchain":{"tf":1.0},"rustc-driver.html#the-rustc-driver":{"tf":1.0},"traits/lowering-to-logic.html#type-checking-normal-functions":{"tf":1.0},"mir/regionck.html#what-is-a-universe":{"tf":1.0},"variance.html#variance-and-object-types":{"tf":1.0},"query.html#cycles-between-queries":{"tf":1.0},"traits/canonicalization.html#canonicalization":{"tf":1.0},"rustdoc.html#hot-potato":{"tf":1.0},"macro-expansion.html#the-macro-parser":{"tf":1.0},"traits/lowering-to-logic.html#type-checking-generic-functions-beyond-horn-clauses":{"tf":1.0},"tests/adding.html#comment-explaining-what-the-test-is-about":{"tf":1.0},"incremental-compilation.html#the-try-mark-green-algorithm":{"tf":1.0},"incremental-compilation.html#the-query-dag":{"tf":2.0},"miri.html#miri":{"tf":1.0},"mir/visitor.html#mir-visitor":{"tf":1.0},"traits/bibliography.html#bibliography":{"tf":1.0},"traits/chalk-overview.html#parsing":{"tf":1.0}},"df":23}},"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{"traits/associated-types.html#skolemized-associated-types":{"tf":1.0},"mir/regionck.html#skolemization-and-outlives-constraints":{"tf":1.0},"name-resolution.html#scopes-and-ribs":{"tf":1.0},"traits/associated-types.html#integration-with-unification":{"tf":1.0}},"df":4}}}}}},"t":{"docs":{},"df":0,"h":{"docs":{},"df":0,"o":{"docs":{},"df":0,"g":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{"traits/chalk-overview.html#parsing":{"tf":1.0}},"df":1}}}}}},"c":{"docs":{},"df":0,"h":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"r":{"docs":{"tests/intro.html#the-compiler-testing-framework":{"tf":1.0},"tests/intro.html#testing-on-emulators":{"tf":1.0}},"df":2}}}}}}},"c":{"docs":{},"df":0,"c":{"docs":{},"df":0,"u":{"docs":{},"df":0,"r":{"docs":{"rustdoc.html#from-clean-to-crate":{"tf":1.0},"traits/resolution.html#candidate-assembly":{"tf":1.0},"query.html#cycles-between-queries":{"tf":1.7320508075688773},"rustdoc.html#hot-potato":{"tf":1.0},"query.html#adding-a-new-kind-of-query":{"tf":1.0},"variance.html#variance-and-object-types":{"tf":1.0},"type-inference.html#snapshots":{"tf":1.0},"incremental-compilation.html#the-try-mark-green-algorithm":{"tf":1.0},"appendix/glossary.html#appendix-c-glossary":{"tf":1.0},"macro-expansion.html#the-macro-parser":{"tf":1.7320508075688773}},"df":10}}}},"v":{"docs":{"traits/canonicalization.html#canonicalizing-the-query":{"tf":1.4142135623730952}},"df":1,"e":{"docs":{},"df":0,"r":{"docs":{"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.0},"traits/associated-types.html#associated-type-projection-and-normalization":{"tf":1.0},"tests/intro.html#testing-infrastructure":{"tf":1.0},"diag.html#error-messages":{"tf":1.0},"appendix/stupid-stats.html#appendix-a-a-tutorial-on-creating-a-drop-in-replacement-for-rustc":{"tf":1.0},"hir.html#out-of-band-storage-and-the--crate--type":{"tf":1.4142135623730952},"variance.html#the-algorithm":{"tf":1.0},"rustdoc.html#from-crate-to-clean":{"tf":1.0},"mir/regionck.html#skolemization-and-outlives-constraints":{"tf":1.0},"traits/chalk-overview.html#lowering":{"tf":1.0},"traits/resolution.html#candidate-assembly":{"tf":1.0},"ty.html#the-tcx-and-how-it-uses-lifetimes":{"tf":1.4142135623730952},"query.html#adding-a-new-kind-of-query":{"tf":1.0},"type-inference.html#inference-variables":{"tf":1.0},"rustdoc.html#hot-potato":{"tf":1.4142135623730952},"high-level-overview.html#the-main-stages-of-compilation":{"tf":1.0},"appendix/stupid-stats.html#overview-of-the-compilation-process":{"tf":1.4142135623730952},"traits/chalk-overview.html#rules":{"tf":1.0},"high-level-overview.html#crate-structure":{"tf":1.0},"mir/index.html#key-mir-vocabulary":{"tf":1.0},"mir/regionck.html#extending-the-universal-regions-check":{"tf":1.0}},"df":21,"w":{"docs":{},"df":0,"h":{"docs":{},"df":0,"e":{"docs":{},"df":0,"l":{"docs":{},"df":0,"m":{"docs":{"incrcomp-debugging.html#dumping-the-graph":{"tf":1.0}},"df":1}}}}},"v":{"docs":{},"df":0,"i":{"docs":{},"df":0,"e":{"docs":{},"df":0,"w":{"docs":{"traits/chalk-overview.html#an-overview-of-chalk":{"tf":1.0},"tests/intro.html#the-compiler-testing-framework":{"tf":1.0},"high-level-overview.html#high-level-overview-of-the-compiler-source":{"tf":1.0},"rustdoc.html#the-walking-tour-of-rustdoc":{"tf":1.0},"traits/resolution.html#overview":{"tf":1.0},"appendix/stupid-stats.html#overview-of-the-compilation-process":{"tf":1.0},"method-lookup.html#method-lookup":{"tf":1.0},"query.html#queries-demand-driven-compilation":{"tf":1.0}},"df":8}}}},"l":{"docs":{},"df":0,"a":{"docs":{},"df":0,"p":{"docs":{"const-eval.html#constant-evaluation":{"tf":1.0},"traits/specialization.html#specialization":{"tf":1.7320508075688773},"traits/resolution.html#overview":{"tf":1.0}},"df":3}}},"f":{"docs":{},"df":0,"l":{"docs":{},"df":0,"o":{"docs":{},"df":0,"w":{"docs":{"tests/adding.html#header-commands-configuring-rustc":{"tf":1.0},"miri.html#miri":{"tf":1.4142135623730952},"mir/index.html#key-mir-vocabulary":{"tf":1.0}},"df":3}}}},"a":{"docs":{},"df":0,"l":{"docs":{"rustc-driver.html#the-rustc-driver":{"tf":1.0},"incremental-compilation.html#incremental-compilation":{"tf":1.0},"mir/borrowck.html#major-phases-of-the-borrow-checker":{"tf":1.0},"query.html#queries-demand-driven-compilation":{"tf":1.0},"name-resolution.html#todo":{"tf":1.0},"name-resolution.html#overall-strategy":{"tf":1.0},"high-level-overview.html#crate-structure":{"tf":1.0}},"df":7}},"r":{"docs":{},"df":0,"i":{"docs":{},"df":0,"d":{"docs":{"compiletest.html#adding-a-new-header-command":{"tf":1.4142135623730952},"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.0},"incrcomp-debugging.html#dumping-the-graph":{"tf":1.0},"mir/visitor.html#mir-visitor":{"tf":1.4142135623730952},"diag.html#declaring-a-lint":{"tf":1.4142135623730952}},"df":5,"d":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{"compiletest.html#implementing-the-behavior-change":{"tf":1.0},"traits/specialization.html#specialization":{"tf":1.0}},"df":2}}}}}}}}},"m":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{"compiler-debugging.html#getting-a-backtrace-for-errors":{"tf":1.0}},"df":1}}},"h":{"docs":{"diag.html#suggestions":{"tf":1.7320508075688773},"diag.html#error-messages":{"tf":1.0}},"df":2},"d":{"docs":{},"df":0,"i":{"docs":{},"df":0,"r":{"docs":{"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":2.0}},"df":1}}},"p":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"appendix/stupid-stats.html#overview-of-the-compilation-process":{"tf":1.0},"mir/borrowck.html#major-phases-of-the-borrow-checker":{"tf":1.0},"const-eval.html#constant-evaluation":{"tf":1.0},"type-inference.html#enforcing-equality--subtyping":{"tf":1.0},"appendix/stupid-stats.html#appendix-a-a-tutorial-on-creating-a-drop-in-replacement-for-rustc":{"tf":1.0},"macro-expansion.html#example":{"tf":1.0},"type-inference.html#inference-variables":{"tf":1.0},"miri.html#allocations":{"tf":1.0},"high-level-overview.html#the-main-stages-of-compilation":{"tf":1.7320508075688773},"mir/visitor.html#mir-visitor":{"tf":1.4142135623730952},"ty.html#allocating-and-working-with-types":{"tf":1.0},"type-inference.html#snapshots":{"tf":1.4142135623730952},"compiler-debugging.html#expensive-operations-in-logs":{"tf":1.7320508075688773}},"df":13,"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{"mir/index.html#key-mir-vocabulary":{"tf":2.449489742783178},"mir/index.html#mir-data-types":{"tf":1.4142135623730952}},"df":2}}}},"n":{"docs":{"appendix/glossary.html#appendix-c-glossary":{"tf":1.0},"incrcomp-debugging.html#tracking-down-incorrect-edges":{"tf":1.0},"macro-expansion.html#example":{"tf":1.0},"about-this-guide.html#about-this-guide":{"tf":1.4142135623730952},"tests/running.html#running-tests":{"tf":1.0},"traits/bibliography.html#bibliography":{"tf":1.0},"tests/intro.html#testing-infrastructure":{"tf":1.0},"traits/chalk-overview.html#an-overview-of-chalk":{"tf":1.0},"compiler-debugging.html#debugging-the-compiler":{"tf":1.0},"how-to-build-and-run.html#create-a-configtoml":{"tf":1.0}},"df":10}},"t":{"docs":{"compiler-debugging.html#debugging-llvm":{"tf":1.4142135623730952},"tests/intro.html#compiletest-test-suites":{"tf":1.0},"tests/adding.html#what-kind-of-test-should-i-add":{"tf":1.0}},"df":3,"i":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{"conventions.html#copyright-notice":{"tf":1.0},"rustdoc.html#other-tricks-up-its-sleeve":{"tf":1.0},"traits/canonical-queries.html#examples":{"tf":1.4142135623730952},"how-to-build-and-run.html#running-xpy-and-building-a-stage1-compiler":{"tf":1.4142135623730952},"appendix/stupid-stats.html#compilercalls":{"tf":1.0},"method-lookup.html#steps":{"tf":1.0},"tests/running.html#running-an-individual-test":{"tf":1.4142135623730952},"mir/passes.html#seeing-how-the-mir-changes-as-the-compiler-executes":{"tf":1.0},"query.html#adding-a-new-kind-of-query":{"tf":1.0},"rustc-driver.html#a-note-on-lifetimes":{"tf":1.0},"compiletest.html#adding-a-new-header-command":{"tf":1.7320508075688773},"compiler-debugging.html#formatting-graphviz-output-dot-files":{"tf":1.0}},"df":12,"a":{"docs":{},"df":0,"l":{"docs":{},"df":0,"f":{"docs":{},"df":0,"n":{"docs":{},"df":0,"<":{"docs":{},"df":0,"b":{"docs":{"variance.html#the-algorithm":{"tf":1.0}},"df":1}}}},"m":{"docs":{},"df":0,"a":{"docs":{},"df":0,"p":{"docs":{},"df":0,"<":{"docs":{},"df":0,"c":{"docs":{"variance.html#the-algorithm":{"tf":1.0}},"df":1}}}}}}},"<":{"docs":{},"df":0,"p":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{},"df":0,"h":{"docs":{"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":2.23606797749979}},"df":1,"b":{"docs":{},"df":0,"u":{"docs":{},"df":0,"f":{"docs":{"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.4142135623730952}},"df":1}}}}}}},"a":{"docs":{"variance.html#the-algorithm":{"tf":1.0}},"df":1},"n":{"docs":{},"df":0,"o":{"docs":{},"df":0,"d":{"docs":{},"df":0,"e":{"docs":{},"df":0,"<":{"docs":{},"df":0,"'":{"docs":{},"df":0,"t":{"docs":{},"df":0,"c":{"docs":{},"df":0,"x":{"docs":{"hir.html#the-hir-map":{"tf":1.0}},"df":1}}}}},"i":{"docs":{},"df":0,"d":{"docs":{"hir.html#the-hir-map":{"tf":1.0}},"df":1}}}}}},"?":{"docs":{},"df":0,"t":{"docs":{"traits/associated-types.html#associated-type-projection-and-normalization":{"tf":1.0}},"df":1},"u":{"docs":{"traits/canonical-queries.html#examples":{"tf":1.4142135623730952}},"df":1}},"(":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"p":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.0}},"df":1}}}}}},"_":{"docs":{"traits/canonical-queries.html#examples":{"tf":1.4142135623730952}},"df":1},"v":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"<":{"docs":{},"df":0,"?":{"docs":{},"df":0,"v":{"docs":{"traits/canonical-queries.html#examples":{"tf":1.0}},"df":1}}}}}},"i":{"docs":{},"df":0,"3":{"docs":{},"df":0,"2":{"docs":{"compiletest.html#adding-a-new-header-command":{"tf":1.0}},"df":1}}},"u":{"docs":{},"df":0,"1":{"docs":{},"df":0,"2":{"docs":{},"df":0,"8":{"docs":{"miri.html#datastructures":{"tf":1.0}},"df":1}}},"3":{"docs":{},"df":0,"2":{"docs":{"traits/associated-types.html#associated-type-projection-and-normalization":{"tf":1.4142135623730952}},"df":1}}},"b":{"docs":{"traits/canonical-queries.html#examples":{"tf":1.4142135623730952}},"df":1,"o":{"docs":{},"df":0,"x":{"docs":{},"df":0,"<":{"docs":{},"df":0,"f":{"docs":{},"df":0,"o":{"docs":{},"df":0,"o":{"docs":{"traits/goals-and-clauses.html#coinductive-goals":{"tf":1.7320508075688773}},"df":1}}}}}}},"t":{"docs":{"traits/associated-types.html#skolemized-associated-types":{"tf":1.0},"traits/associated-types.html#associated-type-projection-and-normalization":{"tf":1.7320508075688773}},"df":2}}}},"m":{"docs":{"const-eval.html#constant-evaluation":{"tf":1.0},"tests/intro.html#compiletest-test-suites":{"tf":1.4142135623730952},"variance.html#the-algorithm":{"tf":1.0},"mir/passes.html#implementing-and-registering-a-pass":{"tf":1.4142135623730952},"high-level-overview.html#the-main-stages-of-compilation":{"tf":1.7320508075688773},"appendix/glossary.html#appendix-c-glossary":{"tf":1.7320508075688773},"how-to-build-and-run.html#running-xpy-and-building-a-stage1-compiler":{"tf":1.4142135623730952},"compiler-debugging.html#debugging-llvm":{"tf":2.23606797749979},"mir/index.html#the-mir-mid-level-ir":{"tf":1.0},"mir/passes.html#mir-passes":{"tf":2.23606797749979},"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.0},"traits/specialization.html#specialization":{"tf":1.4142135623730952},"traits/canonicalization.html#processing-the-canonicalized-query-result":{"tf":1.0},"mir/optimizations.html#mir-optimizations":{"tf":1.0},"mir/passes.html#stealing":{"tf":1.4142135623730952}},"df":15,"i":{"docs":{},"df":0,"z":{"docs":{},"df":0,"e":{"docs":{},"df":0,"d":{"docs":{},"df":0,"_":{"docs":{},"df":0,"m":{"docs":{},"df":0,"i":{"docs":{},"df":0,"r":{"docs":{"mir/passes.html#implementing-and-registering-a-pass":{"tf":1.4142135623730952}},"df":1,"(":{"docs":{},"df":0,"d":{"docs":{"mir/passes.html#mir-passes":{"tf":1.4142135623730952}},"df":1,"e":{"docs":{},"df":0,"f":{"docs":{},"df":0,"_":{"docs":{},"df":0,"i":{"docs":{},"df":0,"d":{"docs":{"mir/passes.html#mir-passes":{"tf":1.0}},"df":1}}}}}}}}}}}}}},"s":{"docs":{"appendix/stupid-stats.html#overview-of-the-compilation-process":{"tf":1.0}},"df":1}}}},"=":{"docs":{},"df":0,".":{"docs":{},"df":0,"/":{"docs":{},"df":0,"b":{"docs":{},"df":0,"u":{"docs":{},"df":0,"i":{"docs":{},"df":0,"l":{"docs":{},"df":0,"d":{"docs":{},"df":0,"/":{"docs":{},"df":0,"$":{"docs":{},"df":0,"t":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{},"df":0,"p":{"docs":{},"df":0,"l":{"docs":{},"df":0,"e":{"docs":{},"df":0,"/":{"docs":{},"df":0,"l":{"docs":{},"df":0,"l":{"docs":{},"df":0,"v":{"docs":{},"df":0,"m":{"docs":{},"df":0,"/":{"docs":{},"df":0,"b":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"/":{"docs":{},"df":0,"o":{"docs":{},"df":0,"p":{"docs":{},"df":0,"t":{"docs":{"compiler-debugging.html#debugging-llvm":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"m":{"docs":{},"df":0,"i":{"docs":{},"df":0,"z":{"docs":{"appendix/glossary.html#appendix-c-glossary":{"tf":1.0}},"df":1}}}},"p":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"t":{"docs":{},"df":0,"u":{"docs":{},"df":0,"n":{"docs":{"appendix/stupid-stats.html#compilercalls":{"tf":1.0}},"df":1,"i":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"i":{"docs":{},"df":0,"c":{"docs":{},"df":0,"_":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"o":{"docs":{},"df":0,"l":{"docs":{},"df":0,"v":{"docs":{},"df":0,"e":{"docs":{},"df":0,"_":{"docs":{},"df":0,"v":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{"type-inference.html#region-constraints":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{"tests/adding.html#other-header-commands":{"tf":1.0}},"df":1}}}},"u":{"docs":{},"df":0,"g":{"docs":{},"df":0,"h":{"docs":{},"df":0,"t":{"docs":{"tests/intro.html#compiletest-test-suites":{"tf":1.0},"mir/regionck.html#subtyping-and-skolemization":{"tf":1.0},"mir/regionck.html#skolemization-and-universes":{"tf":1.0}},"df":3}}},"t":{"docs":{"miri.html#miri":{"tf":1.4142135623730952},"tests/intro.html#testing-with-docker-images":{"tf":1.0},"rustdoc.html#cheat-sheet":{"tf":1.4142135623730952},"traits/resolution.html#major-concepts":{"tf":1.4142135623730952},"type-inference.html#trying-equality":{"tf":1.0},"mir/index.html#mir-data-types":{"tf":1.0},"incremental-compilation.html#the-query-dag":{"tf":1.0},"incrcomp-debugging.html#dumping-the-graph":{"tf":1.0},"type-checking.html#type-collection":{"tf":1.0},"traits/index.html#trait-solving-new-style":{"tf":1.4142135623730952},"appendix/stupid-stats.html#overview-of-the-compilation-process":{"tf":1.4142135623730952},"rustdoc.html#from-crate-to-clean":{"tf":1.0},"rustdoc.html#from-clean-to-crate":{"tf":2.23606797749979},"traits/hrtb.html#basic-matching-and-skolemization-leaks":{"tf":1.0},"tests/adding.html#other-header-commands":{"tf":1.0},"traits/canonicalization.html#executing-the-query":{"tf":1.0},"mir/index.html#key-mir-vocabulary":{"tf":1.0},"appendix/glossary.html#appendix-c-glossary":{"tf":1.4142135623730952},"appendix/background.html#what-is-a-control-flow-graph":{"tf":1.0},"appendix/background.html#what-is-co--and-contra-variance":{"tf":1.0},"appendix/stupid-stats.html#what-next":{"tf":1.0},"type-inference.html#snapshots":{"tf":1.0},"hir.html#identifiers-in-the-hir":{"tf":1.0},"rustc-driver.html#the-rustc-driver":{"tf":1.0},"rustdoc.html#dotting-is-and-crossing-ts":{"tf":1.0},"variance.html#addendum-variance-on-traits":{"tf":1.0},"traits/lowering-to-logic.html#type-checking-generic-functions-beyond-horn-clauses":{"tf":1.4142135623730952},"hir.html#the-hir-map":{"tf":1.0},"high-level-overview.html#the-main-stages-of-compilation":{"tf":1.7320508075688773},"query.html#how-the-compiler-executes-a-query":{"tf":1.0},"hir.html#out-of-band-storage-and-the--crate--type":{"tf":1.0},"variance.html#trait-variance-and-vtable-resolution":{"tf":1.4142135623730952},"rustdoc.html#the-walking-tour-of-rustdoc":{"tf":1.0},"compiler-debugging.html#getting-logging-output":{"tf":1.4142135623730952},"traits/resolution.html#trait-resolution-old-style":{"tf":1.0},"tests/adding.html#guide-to-the-ui-tests":{"tf":1.0},"traits/canonical-queries.html#the-traditional-interactive-prolog-query":{"tf":1.0},"mir/borrowck.html#mir-borrow-check":{"tf":1.0},"mir/borrowck.html#major-phases-of-the-borrow-checker":{"tf":1.0},"method-lookup.html#candidate-assembly":{"tf":1.0},"high-level-overview.html#crate-structure":{"tf":1.0},"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.4142135623730952},"traits/lowering-to-logic.html#lowering-to-logic":{"tf":1.0},"traits/hrtb.html#higher-ranked-trait-obligations":{"tf":1.0},"variance.html#variance-and-associated-types":{"tf":2.0},"mir/regionck.html#what-is-a-universe":{"tf":1.0},"traits/resolution.html#selection-during-translation":{"tf":1.4142135623730952},"method-lookup.html#candidate-search":{"tf":1.0},"mir/regionck.html#final-example":{"tf":1.0}},"df":49,"e":{"docs":{},"df":0,"r":{"docs":{"ty.html#the-tcx-and-how-it-uses-lifetimes":{"tf":1.0},"name-resolution.html#scopes-and-ribs":{"tf":1.7320508075688773}},"df":2,"m":{"docs":{},"df":0,"o":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{"ty.html#allocating-and-working-with-types":{"tf":1.0}},"df":1}}}}}},"d":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{"traits/chalk-overview.html#an-overview-of-chalk":{"tf":1.0}},"df":1}}},"s":{"docs":{},"df":0,"i":{"docs":{},"df":0,"d":{"docs":{"appendix/background.html#what-is-a-free-region-or-a-free-variable-what-about-bound-region":{"tf":1.4142135623730952},"hir.html#the-hir-map":{"tf":1.0},"variance.html#variance-and-object-types":{"tf":1.0},"rustdoc.html#from-soup-to-nuts":{"tf":1.0},"traits/lowering-rules.html#lowering-traits":{"tf":1.0}},"df":5}},"o":{"docs":{},"df":0,"u":{"docs":{},"df":0,"r":{"docs":{},"df":0,"c":{"docs":{"appendix/stupid-stats.html#overview-of-the-compilation-process":{"tf":1.0}},"df":1}}}}},"w":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"d":{"docs":{"name-resolution.html#scopes-and-ribs":{"tf":1.0}},"df":1}}}},"l":{"docs":{},"df":0,"i":{"docs":{},"df":0,"v":{"docs":{"mir/regionck.html#subtyping-and-skolemization":{"tf":1.0},"type-inference.html#region-constraints":{"tf":1.0},"mir/regionck.html#skolemization-and-outlives-constraints":{"tf":2.23606797749979},"mir/regionck.html#another-example":{"tf":1.4142135623730952},"type-inference.html#extracting-region-constraints":{"tf":1.0},"mir/regionck.html#mir-based-region-checking-nll":{"tf":1.4142135623730952},"type-inference.html#lexical-region-resolution":{"tf":1.0},"traits/lowering-rules.html#transforming-the-lowered-where-clauses":{"tf":1.0},"mir/regionck.html#extending-the-universal-regions-check":{"tf":1.0},"mir/regionck.html#back-to-our-example":{"tf":1.7320508075688773},"mir/regionck.html#final-example":{"tf":1.4142135623730952},"traits/goals-and-clauses.html#domain-goals":{"tf":1.0}},"df":12,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"(":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"g":{"docs":{},"df":0,"i":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{"traits/goals-and-clauses.html#domain-goals":{"tf":1.4142135623730952}},"df":1}}}}}},"t":{"docs":{"traits/lowering-rules.html#lowering-where-clauses":{"tf":1.0}},"df":1,"y":{"docs":{},"df":0,"p":{"docs":{"traits/goals-and-clauses.html#domain-goals":{"tf":1.4142135623730952}},"df":1}}},"&":{"docs":{},"df":0,"'":{"docs":{},"df":0,"a":{"docs":{"traits/goals-and-clauses.html#domain-goals":{"tf":1.0}},"df":1}}},"'":{"docs":{},"df":0,"a":{"docs":{"traits/goals-and-clauses.html#domain-goals":{"tf":1.0},"traits/lowering-rules.html#lowering-where-clauses":{"tf":1.0}},"df":2}}}}}}}},"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"m":{"docs":{"traits/resolution.html#selection":{"tf":1.0}},"df":1}}},"p":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{"incremental-compilation.html#the-try-mark-green-algorithm":{"tf":1.0},"tests/adding.html#guide-to-the-ui-tests":{"tf":2.0},"rustdoc.html#dotting-is-and-crossing-ts":{"tf":1.0},"traits/resolution.html#confirmation":{"tf":1.0},"rustdoc.html#other-tricks-up-its-sleeve":{"tf":1.0},"tests/adding.html#editing-and-updating-the-reference-files":{"tf":1.0},"rustdoc.html#cheat-sheet":{"tf":1.0},"diag.html#suggestions":{"tf":1.0},"compiler-debugging.html#getting-logging-output":{"tf":3.0},"rustdoc.html#from-crate-to-clean":{"tf":1.0},"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.4142135623730952},"macro-expansion.html#the-macro-parser":{"tf":1.4142135623730952},"tests/adding.html#normalization":{"tf":1.4142135623730952},"appendix/stupid-stats.html#overview-of-the-compilation-process":{"tf":1.4142135623730952},"tests/adding.html#adding-new-tests":{"tf":1.0},"appendix/stupid-stats.html#appendix-a-a-tutorial-on-creating-a-drop-in-replacement-for-rustc":{"tf":1.0},"appendix/stupid-stats.html#what-next":{"tf":1.0},"mir/index.html#key-mir-vocabulary":{"tf":1.4142135623730952},"tests/adding.html#what-kind-of-test-should-i-add":{"tf":1.4142135623730952},"compiler-debugging.html#expensive-operations-in-logs":{"tf":1.0},"compiler-debugging.html#formatting-graphviz-output-dot-files":{"tf":1.0},"appendix/glossary.html#appendix-c-glossary":{"tf":1.4142135623730952},"compiler-debugging.html#debugging-llvm":{"tf":1.0},"rustdoc.html#hot-potato":{"tf":1.0},"traits/resolution.html#major-concepts":{"tf":1.0}},"df":25}}}}},"l":{"docs":{},"df":0,"d":{"docs":{"traits/resolution.html#trait-resolution-old-style":{"tf":1.0}},"df":1,"e":{"docs":{},"df":0,"r":{"docs":{"how-to-build-and-run.html#running-xpy-and-building-a-stage1-compiler":{"tf":1.7320508075688773},"traits/associated-types.html#integration-with-unification":{"tf":1.0}},"df":2}}}},"n":{"docs":{"incrcomp-debugging.html#dumping-the-graph":{"tf":1.0},"traits/lowering-rules.html#trait-header":{"tf":1.0},"type-inference.html#extracting-region-constraints":{"tf":1.0},"traits/associated-types.html#associated-type-projection-and-normalization":{"tf":1.7320508075688773},"tests/running.html#running-an-individual-test":{"tf":1.4142135623730952},"traits/lowering-to-logic.html#rust-traits-and-logic":{"tf":1.4142135623730952},"appendix/glossary.html#appendix-c-glossary":{"tf":1.7320508075688773},"appendix/stupid-stats.html#appendix-a-a-tutorial-on-creating-a-drop-in-replacement-for-rustc":{"tf":1.0},"conventions.html#how-to-structure-your-pr":{"tf":1.4142135623730952},"name-resolution.html#namespaces":{"tf":1.0},"mir/regionck.html#back-to-our-example":{"tf":1.4142135623730952},"query.html#how-the-compiler-executes-a-query":{"tf":2.0},"mir/index.html#key-mir-vocabulary":{"tf":2.0},"rustdoc.html#from-clean-to-crate":{"tf":1.0},"variance.html#variance-and-object-types":{"tf":1.4142135623730952},"compiletest.html#adding-a-new-header-command":{"tf":1.0},"traits/goals-and-clauses.html#coinductive-goals":{"tf":1.0},"ty.html#allocating-and-working-with-types":{"tf":1.4142135623730952},"compiler-debugging.html#expensive-operations-in-logs":{"tf":1.0},"method-lookup.html#method-lookup":{"tf":1.4142135623730952},"mir/regionck.html#final-example":{"tf":2.0},"traits/canonical-queries.html#the-traditional-interactive-prolog-query":{"tf":1.0},"tests/adding.html#normalization":{"tf":1.0},"type-inference.html#subtyping-obligations":{"tf":1.4142135623730952},"diag.html#error-messages":{"tf":1.4142135623730952},"appendix/background.html#what-is-a-control-flow-graph":{"tf":1.0},"traits/resolution.html#overview":{"tf":1.0},"mir/regionck.html#subtyping-and-skolemization":{"tf":1.0},"tests/adding.html#tests-that-do-not-result-in-compile-errors":{"tf":1.4142135623730952},"method-lookup.html#candidate-assembly":{"tf":1.0},"mir/regionck.html#mir-based-region-checking-nll":{"tf":1.4142135623730952},"type-inference.html#snapshots":{"tf":1.0},"rustdoc.html#hot-potato":{"tf":1.7320508075688773},"query.html#queries-demand-driven-compilation":{"tf":1.0},"traits/canonicalization.html#canonicalizing-the-query-result":{"tf":1.0},"macro-expansion.html#the-macro-parser":{"tf":2.23606797749979},"query.html#adding-a-new-kind-of-query":{"tf":2.23606797749979},"diag.html#suggestions":{"tf":1.0},"how-to-build-and-run.html#creating-a-rustup-toolchain":{"tf":1.0},"traits/resolution.html#selection-during-translation":{"tf":1.4142135623730952},"traits/caching.html#where-clauses-and-the-local-vs-global-cache":{"tf":1.0},"traits/canonicalization.html#executing-the-query":{"tf":1.0},"traits/specialization.html#specialization":{"tf":1.4142135623730952},"compiler-debugging.html#logging-etiquette":{"tf":1.0},"tests/intro.html#testing-infrastructure":{"tf":1.0},"conventions.html#use-todo-comments-for-things-you-dont-want-to-forget":{"tf":1.0},"incremental-compilation.html#the-query-dag":{"tf":1.0},"mir/regionck.html#skolemization-and-outlives-constraints":{"tf":1.0},"high-level-overview.html#the-main-stages-of-compilation":{"tf":1.0},"variance.html#addendum-variance-on-traits":{"tf":1.4142135623730952},"how-to-build-and-run.html#running-xpy-and-building-a-stage1-compiler":{"tf":1.0},"rustdoc.html#from-crate-to-clean":{"tf":1.0},"traits/canonicalization.html#canonicalization":{"tf":1.0},"variance.html#trait-variance-and-vtable-resolution":{"tf":1.0},"traits/caching.html#an-example":{"tf":1.0},"traits/associated-types.html#equality-and-associated-types":{"tf":1.4142135623730952},"hir.html#out-of-band-storage-and-the--crate--type":{"tf":1.4142135623730952},"traits/lowering-to-logic.html#type-checking-normal-functions":{"tf":1.0},"rustdoc.html#the-walking-tour-of-rustdoc":{"tf":1.0},"name-resolution.html#overall-strategy":{"tf":1.0},"tests/adding.html#adding-new-tests":{"tf":1.0},"type-inference.html#region-constraints":{"tf":1.0},"traits/chalk-overview.html#rules":{"tf":1.0},"traits/canonical-queries.html#examples":{"tf":1.0},"compiler-debugging.html#debugging-llvm":{"tf":1.0},"mir/passes.html#implementing-and-registering-a-pass":{"tf":1.0},"mir/regionck.html#what-is-a-universe":{"tf":2.23606797749979},"traits/chalk-overview.html#lowering":{"tf":1.0},"traits/goals-and-clauses.html#domain-goals":{"tf":1.7320508075688773},"traits/hrtb.html#higher-ranked-trait-bounds":{"tf":1.0},"compiletest.html#implementing-the-behavior-change":{"tf":1.0},"rustdoc.html#other-tricks-up-its-sleeve":{"tf":1.0},"mir/regionck.html#extending-the-universal-regions-check":{"tf":1.0},"traits/resolution.html#candidate-assembly":{"tf":2.23606797749979},"traits/goals-and-clauses.html#goals-and-clauses-meta-structure":{"tf":1.0},"miri.html#miri":{"tf":1.4142135623730952},"name-resolution.html#scopes-and-ribs":{"tf":2.6457513110645909},"compiler-debugging.html#getting-logging-output":{"tf":1.0}},"df":78,"t":{"docs":{},"df":0,"o":{"docs":{"name-resolution.html#scopes-and-ribs":{"tf":1.0},"traits/lowering-to-logic.html#lowering-to-logic":{"tf":1.0}},"df":2}},"c":{"docs":{"appendix/glossary.html#appendix-c-glossary":{"tf":1.0},"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.0},"traits/resolution.html#overview":{"tf":1.0},"traits/canonicalization.html#executing-the-query":{"tf":1.0},"traits/lowering-to-logic.html#type-checking-generic-functions-beyond-horn-clauses":{"tf":1.0},"how-to-build-and-run.html#running-xpy-and-building-a-stage1-compiler":{"tf":1.0},"tests/adding.html#revisions":{"tf":1.7320508075688773},"miri.html#miri":{"tf":1.0},"mir/regionck.html#mir-based-region-checking-nll":{"tf":1.0},"ty.html#allocating-and-working-with-types":{"tf":1.0},"traits/index.html#trait-solving-new-style":{"tf":1.0},"ty.html#the-tcx-and-how-it-uses-lifetimes":{"tf":1.7320508075688773},"traits/hrtb.html#higher-ranked-trait-obligations":{"tf":1.0},"traits/resolution.html#candidate-assembly":{"tf":1.0},"incremental-compilation.html#the-query-dag":{"tf":1.0},"type-inference.html#extracting-region-constraints":{"tf":1.4142135623730952},"mir/regionck.html#subtyping-and-skolemization":{"tf":1.0},"how-to-build-and-run.html#creating-a-rustup-toolchain":{"tf":1.0},"high-level-overview.html#the-main-stages-of-compilation":{"tf":1.7320508075688773},"type-checking.html#type-collection":{"tf":1.0}},"df":20},"g":{"docs":{},"df":0,"o":{"docs":{"mir/regionck.html#skolemization-and-universes":{"tf":1.0},"rustc-driver.html#the-rustc-driver":{"tf":1.0}},"df":2}}},"k":{"docs":{"mir/regionck.html#back-to-our-example":{"tf":1.0},"traits/goals-and-clauses.html#coinductive-goals":{"tf":1.4142135623730952},"traits/lowering-to-logic.html#type-checking-normal-functions":{"tf":1.4142135623730952},"variance.html#trait-variance-and-vtable-resolution":{"tf":1.4142135623730952},"conventions.html#how-to-structure-your-pr":{"tf":1.0},"type-inference.html#trying-equality":{"tf":1.4142135623730952},"incrcomp-debugging.html#testing-the-dependency-graph":{"tf":1.0},"traits/canonicalization.html#executing-the-query":{"tf":1.0}},"df":8,"a":{"docs":{},"df":0,"y":{"docs":{"traits/goals-and-clauses.html#domain-goals":{"tf":1.0}},"df":1}},"(":{"docs":{},"df":0,"n":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{"traits/resolution.html#selection":{"tf":1.0}},"df":1}}},"s":{"docs":{},"df":0,"o":{"docs":{},"df":0,"m":{"docs":{},"df":0,"e":{"docs":{},"df":0,"(":{"docs":{},"df":0,"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"l":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{"traits/resolution.html#selection":{"tf":1.0}},"df":1}}}}}}}}}}},"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"u":{"docs":{},"df":0,"l":{"docs":{},"df":0,"t":{"docs":{"query.html#cycles-between-queries":{"tf":1.0}},"df":1}}}}}}}},"2":{"docs":{"compiler-debugging.html#debugging-llvm":{"tf":1.0}},"df":1},"b":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{},"df":0,"g":{"docs":{"type-inference.html#enforcing-equality--subtyping":{"tf":1.0},"traits/resolution.html#selection":{"tf":2.6457513110645909},"traits/hrtb.html#higher-ranked-trait-obligations":{"tf":2.23606797749979},"appendix/glossary.html#appendix-c-glossary":{"tf":1.0},"traits/resolution.html#major-concepts":{"tf":1.4142135623730952},"traits/resolution.html#confirmation":{"tf":1.4142135623730952},"traits/hrtb.html#basic-matching-and-skolemization-leaks":{"tf":2.0},"traits/resolution.html#overview":{"tf":3.0},"traits/resolution.html#candidate-assembly":{"tf":3.872983346207417},"type-inference.html#subtyping-obligations":{"tf":1.7320508075688773},"traits/canonical-queries.html#examples":{"tf":1.4142135623730952},"traits/resolution.html#selection-during-translation":{"tf":2.23606797749979}},"df":12}}},"t":{"docs":{},"df":0,"a":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{"miri.html#miri":{"tf":1.0},"param_env.html#parameter-environment":{"tf":1.4142135623730952}},"df":2}}}},"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"v":{"docs":{"traits/lowering-to-logic.html#rust-traits-and-logic":{"tf":1.0},"traits/lowering-to-logic.html#lowering-to-logic":{"tf":1.0},"hir.html#out-of-band-storage-and-the--crate--type":{"tf":1.0},"incrcomp-debugging.html#tracking-down-incorrect-edges":{"tf":1.0}},"df":4}}}},"v":{"docs":{},"df":0,"i":{"docs":{},"df":0,"o":{"docs":{},"df":0,"u":{"docs":{"variance.html#addendum-variance-on-traits":{"tf":1.0},"traits/resolution.html#trait-resolution-old-style":{"tf":1.0},"name-resolution.html#scopes-and-ribs":{"tf":1.0}},"df":3,"s":{"docs":{"compiletest.html#implementing-the-behavior-change":{"tf":1.0},"traits/hrtb.html#higher-ranked-trait-obligations":{"tf":1.0}},"df":2}}}}},"j":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{"appendix/stupid-stats.html#compilercalls":{"tf":1.0},"method-lookup.html#candidate-assembly":{"tf":1.4142135623730952},"variance.html#addendum-variance-on-traits":{"tf":1.0},"appendix/stupid-stats.html#overview-of-the-compilation-process":{"tf":1.4142135623730952},"variance.html#variance-and-object-types":{"tf":3.0},"appendix/glossary.html#appendix-c-glossary":{"tf":1.4142135623730952},"appendix/stupid-stats.html#compilercontroller":{"tf":1.0},"variance.html#trait-variance-and-vtable-resolution":{"tf":3.0},"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.4142135623730952}},"df":9,",":{"docs":{},"df":0,"i":{"docs":{},"df":0,"3":{"docs":{},"df":0,"2":{"docs":{"variance.html#trait-variance-and-vtable-resolution":{"tf":1.0}},"df":1}}}}}}}}}},"v":{"docs":{"high-level-overview.html#crate-structure":{"tf":1.7320508075688773},"traits/canonical-queries.html#examples":{"tf":1.7320508075688773},"traits/resolution.html#major-concepts":{"tf":1.4142135623730952},"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.4142135623730952},"mir/passes.html#stealing":{"tf":1.0}},"df":5,"o":{"docs":{},"df":0,"c":{"docs":{},"df":0,"a":{"docs":{},"df":0,"b":{"docs":{},"df":0,"u":{"docs":{},"df":0,"l":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{"mir/index.html#key-mir-vocabulary":{"tf":1.0}},"df":1}}}}}}}},"l":{"docs":{},"df":0,"u":{"docs":{},"df":0,"m":{"docs":{"traits/bibliography.html#bibliography":{"tf":1.0}},"df":1}}},"i":{"docs":{},"df":0,"l":{"docs":{},"df":0,"a":{"docs":{"incrcomp-debugging.html#tracking-down-incorrect-edges":{"tf":1.0}},"df":1}}}},"t":{"docs":{},"df":0,"a":{"docs":{},"df":0,"b":{"docs":{},"df":0,"l":{"docs":{"variance.html#addendum-variance-on-traits":{"tf":1.4142135623730952},"variance.html#trait-variance-and-vtable-resolution":{"tf":1.0}},"df":2}}}},"i":{"docs":{},"df":0,"s":{"docs":{},"df":0,"i":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{"query.html#queries-demand-driven-compilation":{"tf":1.4142135623730952}},"df":1}},"t":{"docs":{"the-parser.html#the-parser":{"tf":1.0},"mir/visitor.html#mir-visitor":{"tf":1.0},"type-checking.html#type-collection":{"tf":1.0},"incremental-compilation.html#the-try-mark-green-algorithm":{"tf":1.0},"incremental-compilation.html#the-query-dag":{"tf":1.4142135623730952}},"df":5,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"w":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{},"df":0,"k":{"docs":{},"df":0,"_":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"m":{"docs":{},"df":0,"(":{"docs":{},"df":0,"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"l":{"docs":{},"df":0,"f":{"docs":{"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.0}},"df":1}}}}}}}}},"c":{"docs":{},"df":0,"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"(":{"docs":{},"df":0,"&":{"docs":{},"df":0,"m":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.0}},"df":1}}}}}}}}}},"m":{"docs":{},"df":0,"a":{"docs":{},"df":0,"c":{"docs":{},"df":0,"(":{"docs":{},"df":0,"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"l":{"docs":{},"df":0,"f":{"docs":{"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.0}},"df":1}}}}}}}}}}}}},"v":{"docs":{},"df":0,"i":{"docs":{},"df":0,"s":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"<":{"docs":{},"df":0,"'":{"docs":{},"df":0,"v":{"docs":{"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.0}},"df":1}}}}}}}}}}}},"_":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"m":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{"mir/visitor.html#mir-visitor":{"tf":1.0}},"df":1}}}}}},"f":{"docs":{},"df":0,"o":{"docs":{},"df":0,"o":{"docs":{"mir/visitor.html#mir-visitor":{"tf":1.0}},"df":1,"(":{"docs":{},"df":0,"&":{"docs":{},"df":0,"m":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{"mir/visitor.html#mir-visitor":{"tf":1.0}},"df":1}}}}}}}},"i":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"m":{"docs":{"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.0}},"df":1,"(":{"docs":{},"df":0,"&":{"docs":{},"df":0,"m":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.0}},"df":1}}}}}}}}},"m":{"docs":{},"df":0,"a":{"docs":{},"df":0,"c":{"docs":{"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.0}},"df":1,"(":{"docs":{},"df":0,"&":{"docs":{},"df":0,"m":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.0}},"df":1}}}}}}}},"a":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"r":{"docs":{},"df":0,"u":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"d":{"docs":{},"df":0,"o":{"docs":{},"df":0,"c":{"docs":{},"df":0,"v":{"docs":{},"df":0,"i":{"docs":{},"df":0,"s":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{"rustdoc.html#from-crate-to-clean":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}},".":{"docs":{},"df":0,"r":{"docs":{"rustdoc.html#from-crate-to-clean":{"tf":1.0}},"df":1}}}}}},"o":{"docs":{},"df":0,"r":{"docs":{"mir/visitor.html#traversal":{"tf":1.0},"mir/visitor.html#mir-visitor":{"tf":3.0},"mir/passes.html#implementing-and-registering-a-pass":{"tf":1.4142135623730952},"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.7320508075688773}},"df":4,".":{"docs":{},"df":0,"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"m":{"docs":{},"df":0,"p":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"_":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"g":{"docs":{},"df":0,"_":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}},"p":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{},"df":0,"l":{"docs":{},"df":0,"n":{"docs":{},"df":0,"_":{"docs":{},"df":0,"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"u":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}},"b":{"docs":{},"df":0,"l":{"docs":{"mir/regionck.html#final-example":{"tf":1.0},"rustdoc.html#from-crate-to-clean":{"tf":1.0},"mir/regionck.html#skolemization-and-outlives-constraints":{"tf":1.0},"name-resolution.html#scopes-and-ribs":{"tf":2.23606797749979},"mir/regionck.html#what-is-a-universe":{"tf":1.4142135623730952}},"df":5}}}},"c":{"docs":{},"df":0,"e":{"docs":{"traits/goals-and-clauses.html#domain-goals":{"tf":1.4142135623730952},"type-inference.html#region-constraints":{"tf":1.0}},"df":2}},"e":{"docs":{},"df":0,"w":{"docs":{"type-inference.html#region-constraints":{"tf":1.0},"appendix/stupid-stats.html#appendix-a-a-tutorial-on-creating-a-drop-in-replacement-for-rustc":{"tf":1.0},"mir/passes.html#seeing-how-the-mir-changes-as-the-compiler-executes":{"tf":1.0},"compiler-debugging.html#formatting-graphviz-output-dot-files":{"tf":1.0},"mir/index.html#key-mir-vocabulary":{"tf":1.0},"hir.html#the-hir":{"tf":1.0}},"df":6,"e":{"docs":{},"df":0,"r":{"docs":{"compiler-debugging.html#formatting-graphviz-output-dot-files":{"tf":1.0}},"df":1}}}},"a":{"docs":{"tests/intro.html#testing-on-emulators":{"tf":1.0},"incremental-compilation.html#improvements-to-the-basic-algorithm":{"tf":1.0},"rustdoc.html#from-clean-to-crate":{"tf":1.4142135623730952},"traits/resolution.html#selection":{"tf":1.4142135623730952},"traits/resolution.html#candidate-assembly":{"tf":1.0},"traits/associated-types.html#projection-equality":{"tf":1.0},"const-eval.html#constant-evaluation":{"tf":1.4142135623730952},"miri.html#miri":{"tf":1.0},"param_env.html#parameter-environment":{"tf":1.4142135623730952},"the-parser.html#the-parser":{"tf":1.0},"miri.html#interpretation":{"tf":1.0},"type-inference.html#subtyping-obligations":{"tf":1.0},"hir.html#identifiers-in-the-hir":{"tf":1.0},"tests/intro.html#other-tests":{"tf":1.0},"hir.html#the-hir-map":{"tf":1.7320508075688773},"appendix/glossary.html#appendix-c-glossary":{"tf":1.0},"conventions.html#how-to-structure-your-pr":{"tf":1.0},"miri.html#datastructures":{"tf":1.0},"mir/visitor.html#mir-visitor":{"tf":1.0},"variance.html#variance-and-object-types":{"tf":1.0}},"df":20},"r":{"docs":{},"df":0,"t":{"docs":{},"df":0,"u":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{"miri.html#miri":{"tf":2.0},"variance.html#variance-and-object-types":{"tf":1.0},"miri.html#datastructures":{"tf":1.0},"variance.html#addendum-variance-on-traits":{"tf":1.0},"miri.html#interpretation":{"tf":1.4142135623730952},"const-eval.html#constant-evaluation":{"tf":1.0}},"df":6}}}}}},"(":{"docs":{},"df":0,"a":{"docs":{"variance.html#the-algorithm":{"tf":1.4142135623730952}},"df":1},"x":{"docs":{"variance.html#the-algorithm":{"tf":1.7320508075688773}},"df":1},"b":{"docs":{"variance.html#the-algorithm":{"tf":1.4142135623730952}},"df":1},"c":{"docs":{"variance.html#the-algorithm":{"tf":1.4142135623730952}},"df":1,")":{"docs":{},"df":0,"=":{"docs":{},"df":0,"o":{"docs":{"variance.html#the-algorithm":{"tf":1.0}},"df":1}}}}},"1":{"docs":{"variance.html#the-algorithm":{"tf":1.0},"mir/regionck.html#skolemization-and-outlives-constraints":{"tf":2.0},"mir/regionck.html#back-to-our-example":{"tf":2.23606797749979},"mir/regionck.html#final-example":{"tf":2.23606797749979},"mir/regionck.html#extending-the-universal-regions-check":{"tf":1.4142135623730952}},"df":5,".":{"docs":{},"df":0,"x":{"docs":{},"df":0,"f":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"m":{"docs":{},"df":0,"(":{"docs":{},"df":0,"v":{"docs":{},"df":0,"2":{"docs":{"variance.html#the-algorithm":{"tf":1.0}},"df":1}}}}}}}}}},"_":{"docs":{"variance.html#trait-variance-and-vtable-resolution":{"tf":2.0}},"df":1,"o":{"docs":{"variance.html#trait-variance-and-vtable-resolution":{"tf":2.0}},"df":1}},"2":{"docs":{"variance.html#the-algorithm":{"tf":1.0},"mir/regionck.html#final-example":{"tf":2.6457513110645909},"mir/regionck.html#skolemization-and-outlives-constraints":{"tf":1.7320508075688773}},"df":3},"v":{"docs":{"how-to-build-and-run.html#creating-a-rustup-toolchain":{"tf":1.4142135623730952}},"df":1},"3":{"docs":{"variance.html#the-algorithm":{"tf":1.0},"mir/regionck.html#final-example":{"tf":3.1622776601683797}},"df":2},"s":{"docs":{"conventions.html#tabs-vs-spaces":{"tf":1.0},"appendix/background.html#what-is-a-free-region-or-a-free-variable-what-about-bound-region":{"tf":1.0},"mir/regionck.html#region-variables-and-constraints":{"tf":1.0},"name-resolution.html#namespaces":{"tf":1.4142135623730952},"traits/caching.html#where-clauses-and-the-local-vs-global-cache":{"tf":1.0},"mir/regionck.html#back-to-our-example":{"tf":2.0}},"df":6},"a":{"docs":{},"df":0,"g":{"docs":{},"df":0,"u":{"docs":{"name-resolution.html#todo":{"tf":1.0}},"df":1}},"l":{"docs":{"name-resolution.html#scopes-and-ribs":{"tf":2.449489742783178}},"df":1,"g":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{"tests/intro.html#compiletest-test-suites":{"tf":1.4142135623730952},"how-to-build-and-run.html#create-a-configtoml":{"tf":1.0}},"df":2}}}}},"i":{"docs":{},"df":0,"d":{"docs":{"tests/intro.html#compiletest-test-suites":{"tf":1.0},"traits/goals-and-clauses.html#coinductive-goals":{"tf":1.0},"tests/intro.html#other-tests":{"tf":1.0},"variance.html#the-algorithm":{"tf":1.0},"param_env.html#parameter-environment":{"tf":1.0}},"df":5,"l":{"docs":{},"df":0,"i":{"docs":{"variance.html#variance-and-associated-types":{"tf":1.0}},"df":1}}}},"u":{"docs":{"traits/canonicalization.html#canonicalizing-the-query-result":{"tf":2.0},"traits/lowering-to-logic.html#rust-traits-and-logic":{"tf":1.0},"mir/regionck.html#universes-and-skolemized-region-elements":{"tf":1.7320508075688773},"miri.html#datastructures":{"tf":1.4142135623730952},"mir/index.html#mir-data-types":{"tf":1.4142135623730952},"query.html#how-the-compiler-executes-a-query":{"tf":1.0},"incremental-compilation.html#improvements-to-the-basic-algorithm":{"tf":1.0},"type-inference.html#lexical-region-resolution":{"tf":1.0},"miri.html#interpretation":{"tf":1.0},"mir/regionck.html#final-example":{"tf":1.0},"macro-expansion.html#example":{"tf":1.0},"traits/goals-and-clauses.html#coinductive-goals":{"tf":1.4142135623730952},"traits/canonical-queries.html#the-traditional-interactive-prolog-query":{"tf":1.0},"const-eval.html#constant-evaluation":{"tf":1.4142135623730952},"variance.html#trait-variance-and-vtable-resolution":{"tf":1.7320508075688773},"incremental-compilation.html#the-try-mark-green-algorithm":{"tf":1.0},"traits/resolution.html#confirmation":{"tf":1.0},"mir/regionck.html#back-to-our-example":{"tf":1.4142135623730952},"miri.html#miri":{"tf":2.0},"mir/index.html#key-mir-vocabulary":{"tf":2.0},"method-lookup.html#candidate-assembly":{"tf":1.4142135623730952},"type-inference.html#type-inference":{"tf":1.0},"compiler-debugging.html#expensive-operations-in-logs":{"tf":1.0},"mir/regionck.html#what-is-a-universe":{"tf":1.7320508075688773},"ty.html#beyond-types-other-kinds-of-arena-allocated-data-structures":{"tf":1.4142135623730952},"hir.html#out-of-band-storage-and-the--crate--type":{"tf":1.0},"mir/regionck.html#mir-based-region-checking-nll":{"tf":1.0},"traits/canonicalization.html#canonicalizing-the-query":{"tf":1.0},"mir/regionck.html#causal-tracking":{"tf":1.0},"mir/regionck.html#extending-the-universal-regions-check":{"tf":1.0},"compiletest.html#adding-a-new-header-command":{"tf":2.6457513110645909},"variance.html#variance-and-object-types":{"tf":1.4142135623730952},"incremental-compilation.html#the-basic-algorithm":{"tf":1.0},"param_env.html#parameter-environment":{"tf":1.4142135623730952},"query.html#cycles-between-queries":{"tf":1.0},"query.html#adding-a-new-kind-of-query":{"tf":1.0},"traits/lowering-rules.html#function-and-constant-values":{"tf":1.0},"traits/canonicalization.html#canonicalization":{"tf":1.0},"traits/canonical-queries.html#examples":{"tf":2.8284271247461905},"traits/canonicalization.html#executing-the-query":{"tf":1.7320508075688773},"traits/canonical-queries.html#a-trait-query-in-rustc":{"tf":2.6457513110645909},"traits/canonicalization.html#processing-the-canonicalized-query-result":{"tf":3.0},"mir/regionck.html#another-example":{"tf":1.0},"mir/regionck.html#representing-the-values-of-a-region-variable":{"tf":2.0},"traits/lowering-rules.html#lowering-function-and-constant-declarations":{"tf":1.0},"name-resolution.html#namespaces":{"tf":1.0},"type-inference.html#inference-variables":{"tf":1.4142135623730952},"traits/lowering-rules.html#associated-type-values":{"tf":1.0},"name-resolution.html#scopes-and-ribs":{"tf":1.4142135623730952},"type-inference.html#enforcing-equality--subtyping":{"tf":1.0},"mir/borrowck.html#mir-borrow-check":{"tf":1.4142135623730952},"mir/borrowck.html#major-phases-of-the-borrow-checker":{"tf":1.0},"appendix/glossary.html#appendix-c-glossary":{"tf":2.449489742783178},"compiletest.html#implementing-the-behavior-change":{"tf":2.0}},"df":54,"e":{"docs":{},"df":0,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"b":{"docs":{},"df":0,"y":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"f":{"docs":{"const-eval.html#constant-evaluation":{"tf":1.0}},"df":1}}},"v":{"docs":{"const-eval.html#constant-evaluation":{"tf":1.0}},"df":1,"a":{"docs":{},"df":0,"l":{"docs":{},"df":0,"p":{"docs":{},"df":0,"a":{"docs":{},"df":0,"i":{"docs":{},"df":0,"r":{"docs":{"const-eval.html#constant-evaluation":{"tf":1.0}},"df":1,"(":{"docs":{},"df":0,"p":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{},"df":0,"m":{"docs":{},"df":0,"v":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{},"df":0,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"b":{"docs":{},"df":0,"y":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"(":{"docs":{},"df":0,"4":{"docs":{},"df":0,"0":{"docs":{},"df":0,"5":{"docs":{},"df":0,"4":{"docs":{"miri.html#miri":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}}}}}}},"(":{"docs":{},"df":0,"p":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{},"df":0,"m":{"docs":{},"df":0,"v":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{},"df":0,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"u":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{},"df":0,"e":{"docs":{},"df":0,"f":{"docs":{"miri.html#miri":{"tf":1.0}},"df":1}}}}},"b":{"docs":{},"df":0,"y":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"(":{"docs":{},"df":0,"4":{"docs":{},"df":0,"0":{"docs":{},"df":0,"5":{"docs":{},"df":0,"4":{"docs":{"miri.html#miri":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}}}}}}}}}},"'":{"docs":{"appendix/glossary.html#appendix-c-glossary":{"tf":1.0}},"df":1},"s":{"docs":{},"df":0,"[":{"docs":{},"df":0,"2":{"docs":{"traits/canonicalization.html#processing-the-canonicalized-query-result":{"tf":1.0}},"df":1}}},"(":{"docs":{},"df":0,"v":{"docs":{},"df":0,"2":{"docs":{"mir/regionck.html#skolemization-and-outlives-constraints":{"tf":1.4142135623730952}},"df":1},"1":{"docs":{"mir/regionck.html#skolemization-and-outlives-constraints":{"tf":1.7320508075688773}},"df":1}}}}}},"r":{"docs":{"traits/canonical-queries.html#examples":{"tf":1.4142135623730952},"traits/canonical-queries.html#a-trait-query-in-rustc":{"tf":1.4142135623730952}},"df":2,"_":{"docs":{},"df":0,"v":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{},"df":0,"u":{"docs":{"traits/canonicalization.html#canonicalizing-the-query-result":{"tf":1.7320508075688773},"traits/canonicalization.html#processing-the-canonicalized-query-result":{"tf":1.4142135623730952}},"df":2}}}}},"i":{"docs":{"traits/canonical-queries.html#a-trait-query-in-rustc":{"tf":1.0},"variance.html#addendum-variance-on-traits":{"tf":1.0},"traits/caching.html#where-clauses-and-the-local-vs-global-cache":{"tf":1.0}},"df":3,"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{"conventions.html#prefer-exhaustive-matches":{"tf":1.7320508075688773},"mir/index.html#mir-data-types":{"tf":1.0},"appendix/glossary.html#appendix-c-glossary":{"tf":1.0},"const-eval.html#constant-evaluation":{"tf":1.4142135623730952},"ty.html#allocating-and-working-with-types":{"tf":1.0},"query.html#adding-a-new-kind-of-query":{"tf":1.0},"high-level-overview.html#the-main-stages-of-compilation":{"tf":1.0},"traits/canonicalization.html#processing-the-canonicalized-query-result":{"tf":1.0},"traits/lowering-to-logic.html#lowering-to-logic":{"tf":1.0},"incremental-compilation.html#incremental-compilation":{"tf":1.0}},"df":10},"c":{"docs":{"appendix/glossary.html#appendix-c-glossary":{"tf":2.0},"variance.html#addendum-variance-on-traits":{"tf":2.23606797749979},"appendix/background.html#what-is-co--and-contra-variance":{"tf":1.7320508075688773},"variance.html#trait-variance-and-vtable-resolution":{"tf":1.7320508075688773},"variance.html#variance-of-type-and-lifetime-parameters":{"tf":3.3166247903554},"variance.html#constraints":{"tf":2.0},"variance.html#dependency-graph-management":{"tf":2.23606797749979},"variance.html#variance-and-associated-types":{"tf":1.0},"variance.html#the-algorithm":{"tf":3.7416573867739415},"variance.html#variance-and-object-types":{"tf":1.4142135623730952}},"df":10,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"_":{"docs":{},"df":0,"o":{"docs":{},"df":0,"f":{"docs":{"variance.html#dependency-graph-management":{"tf":1.7320508075688773}},"df":1}}}}}}},"b":{"docs":{"mir/regionck.html#mir-based-region-checking-nll":{"tf":1.0}},"df":1,"l":{"docs":{"traits/hrtb.html#basic-matching-and-skolemization-leaks":{"tf":2.0},"mir/regionck.html#skolemization-and-outlives-constraints":{"tf":1.7320508075688773},"type-inference.html#subtyping-obligations":{"tf":1.7320508075688773},"appendix/background.html#what-is-a-free-region-or-a-free-variable-what-about-bound-region":{"tf":2.8284271247461905},"traits/caching.html#caching-and-subtle-considerations-therewith":{"tf":1.4142135623730952},"mir/regionck.html#another-example":{"tf":2.0},"type-checking.html#type-collection":{"tf":1.0},"mir/regionck.html#back-to-our-example":{"tf":1.0},"traits/canonicalization.html#canonicalizing-the-query-result":{"tf":2.23606797749979},"mir/regionck.html#mir-based-region-checking-nll":{"tf":2.0},"ty.html#allocating-and-working-with-types":{"tf":1.4142135623730952},"traits/associated-types.html#integration-with-unification":{"tf":1.0},"traits/canonicalization.html#canonicalizing-the-query":{"tf":2.23606797749979},"mir/regionck.html#representing-the-values-of-a-region-variable":{"tf":1.0},"rustdoc.html#from-soup-to-nuts":{"tf":1.0},"traits/canonicalization.html#canonicalization":{"tf":2.8284271247461905},"incrcomp-debugging.html#tracking-down-incorrect-edges":{"tf":1.0},"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.0},"miri.html#allocations":{"tf":1.4142135623730952},"name-resolution.html#scopes-and-ribs":{"tf":1.4142135623730952},"traits/resolution.html#selection":{"tf":1.0},"mir/borrowck.html#major-phases-of-the-borrow-checker":{"tf":1.0},"mir/regionck.html#region-variables-and-constraints":{"tf":1.0},"traits/resolution.html#candidate-assembly":{"tf":2.0},"mir/regionck.html#causal-tracking":{"tf":1.0},"mir/regionck.html#universes-and-skolemized-region-elements":{"tf":2.23606797749979},"mir/regionck.html#what-is-a-universe":{"tf":2.6457513110645909},"type-inference.html#a-note-on-terminology":{"tf":1.4142135623730952},"traits/canonicalization.html#processing-the-canonicalized-query-result":{"tf":2.449489742783178},"type-inference.html#extracting-region-constraints":{"tf":1.0},"traits/associated-types.html#associated-type-projection-and-normalization":{"tf":1.0},"mir/regionck.html#extending-the-universal-regions-check":{"tf":1.0},"type-inference.html#enforcing-equality--subtyping":{"tf":1.0},"traits/caching.html#an-example":{"tf":1.4142135623730952},"traits/hrtb.html#higher-ranked-trait-obligations":{"tf":1.0},"traits/canonical-queries.html#a-trait-query-in-rustc":{"tf":1.4142135623730952},"compiler-debugging.html#getting-logging-output":{"tf":1.0},"mir/borrowck.html#mir-borrow-check":{"tf":1.0},"mir/index.html#key-mir-vocabulary":{"tf":2.8284271247461905},"traits/resolution.html#selection-during-translation":{"tf":1.0},"incrcomp-debugging.html#dumping-the-graph":{"tf":1.4142135623730952},"traits/canonical-queries.html#examples":{"tf":2.23606797749979},"miri.html#interpretation":{"tf":1.4142135623730952},"name-resolution.html#namespaces":{"tf":1.4142135623730952},"variance.html#the-algorithm":{"tf":1.4142135623730952},"traits/canonical-queries.html#the-traditional-interactive-prolog-query":{"tf":1.0},"method-lookup.html#method-lookup":{"tf":1.4142135623730952},"type-inference.html#lexical-region-resolution":{"tf":1.7320508075688773},"traits/canonicalization.html#executing-the-query":{"tf":2.449489742783178},"appendix/glossary.html#appendix-c-glossary":{"tf":3.605551275463989},"traits/specialization.html#specialization":{"tf":1.0},"mir/index.html#mir-data-types":{"tf":1.7320508075688773},"macro-expansion.html#example":{"tf":1.4142135623730952},"mir/regionck.html#subtyping-and-skolemization":{"tf":1.0},"type-inference.html#inference-variables":{"tf":3.3166247903554},"mir/regionck.html#final-example":{"tf":1.4142135623730952}},"df":56,"e":{"docs":{},"df":0,"'":{"docs":{"mir/regionck.html#what-is-a-universe":{"tf":1.0}},"df":1}}}},"t":{"docs":{"traits/resolution.html#confirmation":{"tf":1.0}},"df":1}},"b":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{"traits/canonicalization.html#canonicalizing-the-query":{"tf":1.0}},"df":1}}},"e":{"docs":{},"df":0,"t":{"docs":{},"df":0,"i":{"docs":{"tests/intro.html#the-compiler-testing-framework":{"tf":1.0},"type-inference.html#inference-variables":{"tf":1.0}},"df":2}}},"o":{"docs":{},"df":0,"u":{"docs":{"query.html#queries-demand-driven-compilation":{"tf":1.0},"hir.html#the-hir-map":{"tf":1.0},"query.html#adding-a-new-kind-of-query":{"tf":1.0},"traits/implied-bounds.html#implied-bounds":{"tf":1.0},"type-inference.html#region-constraints":{"tf":1.0},"high-level-overview.html#crate-structure":{"tf":1.4142135623730952},"ty.html#allocating-and-working-with-types":{"tf":1.7320508075688773},"macro-expansion.html#the-macro-parser":{"tf":1.0},"high-level-overview.html#the-main-stages-of-compilation":{"tf":1.0},"type-inference.html#type-inference":{"tf":1.0},"variance.html#trait-variance-and-vtable-resolution":{"tf":1.0},"query.html#how-the-compiler-executes-a-query":{"tf":1.0},"type-inference.html#inference-variables":{"tf":1.0},"tests/intro.html#other-tests":{"tf":1.0},"rustdoc.html#dotting-is-and-crossing-ts":{"tf":1.0},"ty.html#beyond-types-other-kinds-of-arena-allocated-data-structures":{"tf":1.0},"traits/hrtb.html#higher-ranked-trait-obligations":{"tf":1.0},"type-inference.html#snapshots":{"tf":1.0},"incrcomp-debugging.html#testing-the-dependency-graph":{"tf":1.0},"appendix/glossary.html#appendix-c-glossary":{"tf":1.7320508075688773},"type-checking.html#type-collection":{"tf":1.0},"the-parser.html#the-parser":{"tf":1.0},"tests/adding.html#adding-new-tests":{"tf":1.0},"compiler-debugging.html#formatting-graphviz-output-dot-files":{"tf":1.0},"rustc-driver.html#the-rustc-driver":{"tf":1.4142135623730952},"compiletest.html#introduction":{"tf":1.0},"traits/wf.html#well-formedness-checking":{"tf":1.0}},"df":27}}}}},"e":{"docs":{},"df":0,"c":{"docs":{"compiletest.html#adding-a-new-header-command":{"tf":1.4142135623730952},"mir/index.html#key-mir-vocabulary":{"tf":1.7320508075688773},"appendix/glossary.html#appendix-c-glossary":{"tf":1.0},"type-inference.html#type-inference":{"tf":1.0},"traits/canonical-queries.html#examples":{"tf":1.4142135623730952}},"df":5,"t":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{"mir/index.html#mir-data-types":{"tf":1.7320508075688773},"variance.html#trait-variance-and-vtable-resolution":{"tf":1.4142135623730952},"traits/canonical-queries.html#examples":{"tf":1.7320508075688773},"traits/canonicalization.html#processing-the-canonicalized-query-result":{"tf":1.0},"incremental-compilation.html#the-try-mark-green-algorithm":{"tf":1.0},"traits/lowering-module.html#the--program_clauses_for--query":{"tf":1.0},"traits/canonicalization.html#canonicalizing-the-query":{"tf":1.0}},"df":7}}},"!":{"docs":{},"df":0,"[":{"docs":{},"df":0,"u":{"docs":{},"df":0,"8":{"docs":{"miri.html#miri":{"tf":1.4142135623730952}},"df":1}},"\"":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"r":{"docs":{"variance.html#trait-variance-and-vtable-resolution":{"tf":1.0}},"df":1}}}}}},"<":{"docs":{},"df":0,"t":{"docs":{"traits/associated-types.html#skolemized-associated-types":{"tf":1.0},"traits/canonical-queries.html#examples":{"tf":1.0},"traits/resolution.html#major-concepts":{"tf":1.4142135623730952},"traits/resolution.html#selection-during-translation":{"tf":1.0},"appendix/glossary.html#appendix-c-glossary":{"tf":1.0},"traits/lowering-to-logic.html#rust-traits-and-logic":{"tf":1.4142135623730952},"traits/goals-and-clauses.html#domain-goals":{"tf":1.4142135623730952},"traits/chalk-overview.html#lowering":{"tf":1.7320508075688773}},"df":8},"i":{"docs":{},"df":0,"3":{"docs":{},"df":0,"2":{"docs":{"traits/canonical-queries.html#the-traditional-interactive-prolog-query":{"tf":2.0},"traits/canonical-queries.html#a-trait-query-in-rustc":{"tf":1.0}},"df":2}},"s":{"docs":{"traits/resolution.html#selection-during-translation":{"tf":1.0},"traits/resolution.html#major-concepts":{"tf":1.0}},"df":2}},"?":{"docs":{"traits/canonicalization.html#canonicalizing-the-query-result":{"tf":1.4142135623730952},"traits/canonicalization.html#executing-the-query":{"tf":1.0}},"df":2,"u":{"docs":{"traits/canonical-queries.html#the-traditional-interactive-prolog-query":{"tf":1.0},"traits/lowering-to-logic.html#rust-traits-and-logic":{"tf":1.0}},"df":2},"t":{"docs":{"traits/lowering-to-logic.html#rust-traits-and-logic":{"tf":1.0},"traits/canonical-queries.html#a-trait-query-in-rustc":{"tf":1.0},"traits/canonical-queries.html#examples":{"tf":3.3166247903554}},"df":3},"v":{"docs":{"traits/canonical-queries.html#examples":{"tf":1.7320508075688773}},"df":1},"0":{"docs":{"traits/canonicalization.html#processing-the-canonicalized-query-result":{"tf":1.0},"traits/canonicalization.html#canonicalizing-the-query-result":{"tf":1.0}},"df":2},"c":{"docs":{"traits/canonicalization.html#processing-the-canonicalized-query-result":{"tf":1.4142135623730952}},"df":1}},"x":{"docs":{"traits/canonicalization.html#executing-the-query":{"tf":1.0}},"df":1},"f":{"docs":{},"df":0,"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"m":{"docs":{"miri.html#interpretation":{"tf":1.0}},"df":1}}}},"_":{"docs":{"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.0},"traits/canonical-queries.html#examples":{"tf":1.4142135623730952}},"df":2},"(":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"r":{"docs":{"compiletest.html#adding-a-new-header-command":{"tf":1.4142135623730952}},"df":1}}}},"b":{"docs":{},"df":0,"o":{"docs":{},"df":0,"x":{"docs":{},"df":0,"<":{"docs":{},"df":0,"b":{"docs":{},"df":0,"o":{"docs":{},"df":0,"x":{"docs":{},"df":0,"<":{"docs":{},"df":0,"i":{"docs":{},"df":0,"3":{"docs":{},"df":0,"2":{"docs":{"traits/canonical-queries.html#the-traditional-interactive-prolog-query":{"tf":1.0}},"df":1}}},"b":{"docs":{},"df":0,"o":{"docs":{},"df":0,"x":{"docs":{},"df":0,"<":{"docs":{},"df":0,"i":{"docs":{},"df":0,"3":{"docs":{},"df":0,"2":{"docs":{"traits/canonical-queries.html#the-traditional-interactive-prolog-query":{"tf":1.0}},"df":1}}}}}}}}}}},"i":{"docs":{},"df":0,"3":{"docs":{},"df":0,"2":{"docs":{"traits/canonical-queries.html#the-traditional-interactive-prolog-query":{"tf":1.0}},"df":1}}}}}}},"u":{"docs":{"appendix/glossary.html#appendix-c-glossary":{"tf":1.0}},"df":1,"s":{"docs":{"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.0}},"df":1}},"a":{"docs":{"traits/lowering-rules.html#notation":{"tf":1.0}},"df":1}},".":{"docs":{},"df":0,"p":{"docs":{},"df":0,"u":{"docs":{},"df":0,"s":{"docs":{},"df":0,"h":{"docs":{},"df":0,"(":{"docs":{},"df":0,"1":{"docs":{"mir/index.html#key-mir-vocabulary":{"tf":1.0}},"df":1},"2":{"docs":{"mir/index.html#key-mir-vocabulary":{"tf":1.0}},"df":1}}}}}}},":":{"docs":{},"df":0,":":{"docs":{},"df":0,"n":{"docs":{},"df":0,"e":{"docs":{},"df":0,"w":{"docs":{"mir/index.html#key-mir-vocabulary":{"tf":2.0},"traits/resolution.html#major-concepts":{"tf":1.0}},"df":2}}}}},"_":{"docs":{},"df":0,"b":{"docs":{"traits/canonical-queries.html#examples":{"tf":1.4142135623730952}},"df":1}}},"r":{"docs":{},"df":0,"b":{"docs":{},"df":0,"o":{"docs":{},"df":0,"s":{"docs":{"tests/adding.html#revisions":{"tf":1.0},"compiler-debugging.html#getting-a-backtrace-for-errors":{"tf":1.0}},"df":2}}},"i":{"docs":{"hir.html#identifiers-in-the-hir":{"tf":1.0},"compiletest.html#introduction":{"tf":1.0},"type-inference.html#extracting-region-constraints":{"tf":1.0},"tests/running.html#running-tests":{"tf":1.4142135623730952},"traits/lowering-to-logic.html#type-checking-normal-functions":{"tf":1.0},"incremental-compilation.html#improvements-to-the-basic-algorithm":{"tf":1.0},"diag.html#declaring-a-lint":{"tf":1.0},"appendix/stupid-stats.html#appendix-a-a-tutorial-on-creating-a-drop-in-replacement-for-rustc":{"tf":1.0},"tests/adding.html#comment-explaining-what-the-test-is-about":{"tf":1.4142135623730952},"rustc-driver.html#the-rustc-driver":{"tf":1.0},"traits/canonicalization.html#canonicalization":{"tf":1.0},"high-level-overview.html#the-main-stages-of-compilation":{"tf":1.0},"traits/caching.html#where-clauses-and-the-local-vs-global-cache":{"tf":1.4142135623730952},"mir/visitor.html#mir-visitor":{"tf":1.0},"appendix/background.html#what-is-a-control-flow-graph":{"tf":1.0},"appendix/glossary.html#appendix-c-glossary":{"tf":1.4142135623730952},"how-to-build-and-run.html#running-xpy-and-building-a-stage1-compiler":{"tf":1.0},"mir/index.html#the-mir-mid-level-ir":{"tf":1.0},"traits/lowering-to-logic.html#lowering-to-logic":{"tf":1.0},"mir/regionck.html#final-example":{"tf":1.0},"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.7320508075688773},"compiler-debugging.html#getting-logging-output":{"tf":1.4142135623730952}},"df":22,"f":{"docs":{"traits/canonicalization.html#processing-the-canonicalized-query-result":{"tf":1.0}},"df":1,"i":{"docs":{"traits/resolution.html#major-concepts":{"tf":1.0},"type-inference.html#region-constraints":{"tf":1.0},"traits/goals-and-clauses.html#domain-goals":{"tf":1.0},"tests/intro.html#other-tests":{"tf":1.4142135623730952}},"df":4}}},"s":{"docs":{},"df":0,"a":{"docs":{"traits/goals-and-clauses.html#domain-goals":{"tf":1.4142135623730952},"type-inference.html#region-constraints":{"tf":1.0}},"df":2},"i":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{"traits/lowering-to-logic.html#source":{"tf":1.0},"conventions.html#copyright-notice":{"tf":1.0},"how-to-build-and-run.html#creating-a-rustup-toolchain":{"tf":1.4142135623730952},"how-to-build-and-run.html#running-xpy-and-building-a-stage1-compiler":{"tf":2.23606797749979},"tests/adding.html#other-header-commands":{"tf":1.4142135623730952},"compiletest.html#adding-a-new-header-command":{"tf":1.0},"high-level-overview.html#the-main-stages-of-compilation":{"tf":1.0},"hir.html#identifiers-in-the-hir":{"tf":1.4142135623730952},"traits/caching.html#an-example":{"tf":1.0}},"df":9}}},"u":{"docs":{"conventions.html#prefer-exhaustive-matches":{"tf":1.0},"conventions.html#how-to-structure-your-pr":{"tf":1.0}},"df":2}}}},".":{"docs":{},"df":0,"p":{"docs":{},"df":0,"u":{"docs":{},"df":0,"s":{"docs":{},"df":0,"h":{"docs":{},"df":0,"(":{"docs":{},"df":0,"(":{"docs":{},"df":0,"*":{"docs":{},"df":0,"e":{"docs":{},"df":0,")":{"docs":{},"df":0,".":{"docs":{},"df":0,"c":{"docs":{},"df":0,"l":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{"traits/resolution.html#major-concepts":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}},"u":{"docs":{"traits/canonical-queries.html#examples":{"tf":4.69041575982343},"traits/lowering-to-logic.html#type-checking-normal-functions":{"tf":1.4142135623730952},"traits/canonicalization.html#canonicalization":{"tf":2.449489742783178},"traits/associated-types.html#projection-equality":{"tf":2.0},"traits/goals-and-clauses.html#domain-goals":{"tf":1.0},"appendix/glossary.html#appendix-c-glossary":{"tf":1.0},"traits/caching.html#an-example":{"tf":1.0},"traits/resolution.html#selection-during-translation":{"tf":1.0},"traits/canonical-queries.html#the-traditional-interactive-prolog-query":{"tf":1.4142135623730952},"traits/lowering-to-logic.html#rust-traits-and-logic":{"tf":1.0},"traits/lowering-rules.html#associated-type-declarations":{"tf":1.7320508075688773},"type-inference.html#subtyping-obligations":{"tf":1.7320508075688773},"type-inference.html#enforcing-equality--subtyping":{"tf":1.4142135623730952},"variance.html#variance-and-associated-types":{"tf":2.0}},"df":14,"n":{"docs":{},"df":0,"k":{"docs":{},"df":0,"n":{"docs":{},"df":0,"o":{"docs":{},"df":0,"w":{"docs":{},"df":0,"n":{"docs":{"mir/regionck.html#representing-the-values-of-a-region-variable":{"tf":1.0},"mir/regionck.html#subtyping-and-skolemization":{"tf":1.7320508075688773},"tests/intro.html#testing-on-emulators":{"tf":1.0},"how-to-build-and-run.html#creating-a-rustup-toolchain":{"tf":1.7320508075688773},"compiler-debugging.html#getting-a-backtrace-for-errors":{"tf":1.7320508075688773},"mir/regionck.html#universes-and-skolemized-region-elements":{"tf":1.0},"compiler-debugging.html#getting-a-backtrace":{"tf":1.0},"variance.html#variance-and-object-types":{"tf":1.4142135623730952},"appendix/glossary.html#appendix-c-glossary":{"tf":1.0},"variance.html#variance-and-associated-types":{"tf":1.0}},"df":10}}}}},"u":{"docs":{},"df":0,"s":{"docs":{"query.html#adding-a-new-kind-of-query":{"tf":1.0},"name-resolution.html#name-resolution":{"tf":1.0}},"df":2}},"c":{"docs":{},"df":0,"l":{"docs":{},"df":0,"e":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{"ty.html#allocating-and-working-with-types":{"tf":1.0},"tests/intro.html#testing-on-emulators":{"tf":1.0}},"df":2}}}},"o":{"docs":{},"df":0,"v":{"docs":{"type-inference.html#inference-variables":{"tf":1.0}},"df":1},"n":{"docs":{},"df":0,"d":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{"tests/adding.html#normalization":{"tf":1.0}},"df":1}}}}},"h":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"g":{"docs":{"mir/regionck.html#skolemization-and-outlives-constraints":{"tf":1.0}},"df":1}}}}},"d":{"docs":{},"df":0,"o":{"docs":{"type-inference.html#snapshots":{"tf":1.0}},"df":1},"e":{"docs":{},"df":0,"r":{"docs":{"traits/chalk-overview.html#an-overview-of-chalk":{"tf":1.0},"compiletest.html#adding-a-new-test-file":{"tf":1.0},"tests/running.html#running-tests":{"tf":1.0},"conventions.html#copyright-notice":{"tf":1.0},"tests/running.html#running-an-individual-test":{"tf":1.0},"tests/intro.html#testing-on-emulators":{"tf":1.4142135623730952},"compiletest.html#adding-a-new-header-command":{"tf":1.0},"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.0},"tests/intro.html#other-tests":{"tf":1.0},"traits/lowering-to-logic.html#rust-traits-and-logic":{"tf":1.0},"high-level-overview.html#crate-structure":{"tf":1.0},"traits/lowering-to-logic.html#type-checking-normal-functions":{"tf":1.0},"rustdoc.html#the-walking-tour-of-rustdoc":{"tf":1.0}},"df":13,"s":{"docs":{},"df":0,"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{"mir/index.html#key-mir-vocabulary":{"tf":1.0}},"df":1}}},"t":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{"traits/chalk-overview.html#parsing":{"tf":1.0},"ty.html#the-tcx-and-how-it-uses-lifetimes":{"tf":1.0},"appendix/glossary.html#appendix-c-glossary":{"tf":1.0},"traits/hrtb.html#basic-matching-and-skolemization-leaks":{"tf":1.0}},"df":4}}},"o":{"docs":{},"df":0,"o":{"docs":{},"df":0,"d":{"docs":{"conventions.html#how-to-structure-your-pr":{"tf":1.0}},"df":1}}}}},"l":{"docs":{},"df":0,"i":{"docs":{"appendix/background.html#what-is-a-control-flow-graph":{"tf":1.0}},"df":1}}}}},"t":{"docs":{},"df":0,"i":{"docs":{},"df":0,"l":{"docs":{"conventions.html#use-todo-comments-for-things-you-dont-want-to-forget":{"tf":1.0},"method-lookup.html#steps":{"tf":1.0},"miri.html#miri":{"tf":1.0},"miri.html#interpretation":{"tf":1.0},"query.html#queries-demand-driven-compilation":{"tf":1.0},"compiler-debugging.html#expensive-operations-in-logs":{"tf":1.0},"appendix/stupid-stats.html#what-next":{"tf":1.0},"high-level-overview.html#the-main-stages-of-compilation":{"tf":1.4142135623730952},"mir/index.html#key-mir-vocabulary":{"tf":1.0},"type-inference.html#lexical-region-resolution":{"tf":1.0},"variance.html#the-algorithm":{"tf":1.0},"variance.html#variance-and-object-types":{"tf":1.0},"traits/canonical-queries.html#the-traditional-interactive-prolog-query":{"tf":1.0}},"df":13}}},"p":{"docs":{},"df":0,"a":{"docs":{},"df":0,"c":{"docs":{},"df":0,"k":{"docs":{"tests/intro.html#other-tests":{"tf":1.0}},"df":1}}},"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"v":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{"traits/canonical-queries.html#examples":{"tf":1.0}},"df":1}}}},"e":{"docs":{},"df":0,"d":{"docs":{},"df":0,"i":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{"appendix/stupid-stats.html#appendix-a-a-tutorial-on-creating-a-drop-in-replacement-for-rustc":{"tf":1.0}},"df":1}}}}}}},"e":{"docs":{},"df":0,"v":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{},"df":0,"u":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"d":{"docs":{},"df":0,"(":{"docs":{},"df":0,"f":{"docs":{},"df":0,"o":{"docs":{},"df":0,"o":{"docs":{"miri.html#miri":{"tf":1.0}},"df":1}}}}}}}}}}}},"x":{"docs":{},"df":0,"p":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{"compiler-debugging.html#getting-a-backtrace-for-errors":{"tf":1.0}},"df":1,"e":{"docs":{},"df":0,"d":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{"compiler-debugging.html#getting-a-backtrace-for-errors":{"tf":1.0}},"df":1}}}}}}},"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{"appendix/stupid-stats.html#overview-of-the-compilation-process":{"tf":1.0}},"df":1}}}},"t":{"docs":{},"df":0,"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"d":{"docs":{},"df":0,".":{"docs":{},"df":0,"l":{"docs":{"compiler-debugging.html#debugging-llvm":{"tf":1.0}},"df":1}}}}}}}}}}},"a":{"docs":{},"df":0,"m":{"docs":{},"df":0,"b":{"docs":{},"df":0,"i":{"docs":{},"df":0,"g":{"docs":{},"df":0,"u":{"docs":{"appendix/glossary.html#appendix-c-glossary":{"tf":1.0},"traits/canonical-queries.html#a-trait-query-in-rustc":{"tf":1.0},"traits/resolution.html#candidate-assembly":{"tf":1.4142135623730952}},"df":3}}}}}},"n":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"s":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{"compiler-debugging.html#logging-etiquette":{"tf":1.0},"rustc-driver.html#a-note-on-lifetimes":{"tf":1.0}},"df":2,"l":{"docs":{},"df":0,"i":{"docs":{"rustc-driver.html#the-rustc-driver":{"tf":1.0}},"df":1}}}}}}}},"c":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"s":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{"compiletest.html#adding-a-new-header-command":{"tf":1.0}},"df":1}}}}}}}}}}}},"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"o":{"docs":{},"df":0,"l":{"docs":{},"df":0,"v":{"docs":{"type-inference.html#inference-variables":{"tf":1.0}},"df":1}}}}}},"i":{"docs":{},"df":0,"v":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"s":{"docs":{"mir/regionck.html#universes-and-skolemized-region-elements":{"tf":2.449489742783178},"mir/regionck.html#extending-the-universal-regions-check":{"tf":2.0},"mir/regionck.html#back-to-our-example":{"tf":2.0},"appendix/background.html#what-is-universally-quantified-what-about-existentially-quantified":{"tf":1.0},"mir/regionck.html#what-is-a-universe":{"tf":5.5677643628300219},"mir/regionck.html#subtyping-and-skolemization":{"tf":1.0},"mir/regionck.html#representing-the-values-of-a-region-variable":{"tf":1.4142135623730952},"appendix/glossary.html#appendix-c-glossary":{"tf":1.7320508075688773},"mir/regionck.html#another-example":{"tf":1.0},"traits/goals-and-clauses.html#goals-and-clauses-meta-structure":{"tf":1.0},"mir/regionck.html#skolemization-and-outlives-constraints":{"tf":2.449489742783178},"traits/bibliography.html#bibliography":{"tf":1.0},"mir/regionck.html#universal-regions":{"tf":1.0},"traits/chalk-overview.html#lowering":{"tf":1.4142135623730952},"mir/regionck.html#skolemization-and-universes":{"tf":1.0},"traits/lowering-to-logic.html#type-checking-generic-functions-beyond-horn-clauses":{"tf":1.0},"mir/regionck.html#mir-based-region-checking-nll":{"tf":1.0}},"df":17,"a":{"docs":{},"df":0,"l":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"g":{"docs":{},"df":0,"i":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{"mir/regionck.html#universal-regions":{"tf":1.0}},"df":1}}}}}}}}}}}},"m":{"docs":{},"df":0,"p":{"docs":{},"df":0,"l":{"docs":{"conventions.html#use-todo-comments-for-things-you-dont-want-to-forget":{"tf":1.0}},"df":1}}},"q":{"docs":{},"df":0,"u":{"docs":{"appendix/glossary.html#appendix-c-glossary":{"tf":1.0}},"df":1}},"n":{"docs":{},"df":0,"d":{"docs":{"rustdoc.html#hot-potato":{"tf":1.0}},"df":1}},"t":{"docs":{"compiler-debugging.html#debugging-llvm":{"tf":1.4142135623730952},"appendix/glossary.html#appendix-c-glossary":{"tf":2.23606797749979},"how-to-build-and-run.html#create-a-configtoml":{"tf":1.0},"traits/lowering-module.html#the--program_clauses_for--query":{"tf":1.0},"query.html#queries-demand-driven-compilation":{"tf":1.4142135623730952},"mir/index.html#key-mir-vocabulary":{"tf":1.0},"traits/lowering-module.html#unit-tests":{"tf":1.7320508075688773},"macro-expansion.html#example":{"tf":1.0},"high-level-overview.html#the-main-stages-of-compilation":{"tf":1.0}},"df":9,"s":{"docs":{},"df":0,"=":{"docs":{},"df":0,"1":{"docs":{"compiler-debugging.html#debugging-llvm":{"tf":1.7320508075688773}},"df":1}}},"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{"tests/intro.html#other-tests":{"tf":1.4142135623730952}},"df":1}}}}},"f":{"docs":{"traits/associated-types.html#skolemized-associated-types":{"tf":1.0},"traits/chalk-overview.html#blog-posts":{"tf":1.4142135623730952},"type-inference.html#inference-variables":{"tf":1.4142135623730952},"traits/associated-types.html#equality-and-associated-types":{"tf":1.0},"traits/resolution.html#selection":{"tf":1.0},"type-inference.html#enforcing-equality--subtyping":{"tf":1.0},"type-inference.html#region-constraints":{"tf":1.4142135623730952},"traits/resolution.html#candidate-assembly":{"tf":1.7320508075688773},"traits/associated-types.html#integration-with-unification":{"tf":2.449489742783178}},"df":9,"i":{"docs":{"traits/canonicalization.html#canonicalizing-the-query-result":{"tf":1.0},"traits/canonicalization.html#executing-the-query":{"tf":1.0},"traits/canonical-queries.html#examples":{"tf":1.0},"traits/resolution.html#candidate-assembly":{"tf":2.449489742783178},"type-inference.html#region-constraints":{"tf":1.0},"traits/associated-types.html#integration-with-unification":{"tf":1.7320508075688773},"type-inference.html#subtyping-obligations":{"tf":1.0},"traits/canonical-queries.html#the-traditional-interactive-prolog-query":{"tf":1.0},"traits/caching.html#an-example":{"tf":1.4142135623730952},"traits/resolution.html#confirmation":{"tf":1.0},"traits/canonicalization.html#processing-the-canonicalized-query-result":{"tf":1.4142135623730952},"type-inference.html#inference-variables":{"tf":1.7320508075688773},"method-lookup.html#method-lookup":{"tf":1.0}},"df":13},"y":{"docs":{},"df":0,"(":{"docs":{},"df":0,"a":{"docs":{"traits/associated-types.html#integration-with-unification":{"tf":1.0}},"df":1}}}}},"f":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"t":{"docs":{},"df":0,"u":{"docs":{},"df":0,"n":{"docs":{"appendix/stupid-stats.html#compilercalls":{"tf":1.0}},"df":1}}}}},"a":{"docs":{},"df":0,"m":{"docs":{},"df":0,"i":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{"compiletest.html#introduction":{"tf":1.0}},"df":1}}}}}}}},"s":{"docs":{},"df":0,"o":{"docs":{},"df":0,"u":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{"mir/regionck.html#another-example":{"tf":1.0},"mir/regionck.html#final-example":{"tf":1.0}},"df":2}}}},"p":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"i":{"docs":{},"df":0,"f":{"docs":{},"df":0,"i":{"docs":{"diag.html#suggestions":{"tf":1.0}},"df":1}}}}}},"k":{"docs":{},"df":0,"o":{"docs":{},"df":0,"l":{"docs":{},"df":0,"e":{"docs":{},"df":0,"m":{"docs":{"traits/associated-types.html#integration-with-unification":{"tf":1.0}},"df":1}}}}},"e":{"docs":{},"df":0,"t":{"docs":{"compiler-debugging.html#expensive-operations-in-logs":{"tf":1.0}},"df":1}},"i":{"docs":{},"df":0,"z":{"docs":{"method-lookup.html#steps":{"tf":1.0},"method-lookup.html#method-lookup":{"tf":1.0}},"df":2}},"a":{"docs":{},"df":0,"t":{"docs":{},"df":0,"i":{"docs":{},"df":0,"s":{"docs":{},"df":0,"f":{"docs":{},"df":0,"i":{"docs":{"traits/hrtb.html#basic-matching-and-skolemization-leaks":{"tf":1.0}},"df":1}}}}},"f":{"docs":{"miri.html#allocations":{"tf":1.0},"miri.html#interpretation":{"tf":1.0}},"df":2}},"t":{"docs":{},"df":0,"a":{"docs":{},"df":0,"b":{"docs":{},"df":0,"l":{"docs":{"tests/adding.html#other-header-commands":{"tf":1.0},"rustc-driver.html#the-rustc-driver":{"tf":1.0},"appendix/stupid-stats.html#appendix-a-a-tutorial-on-creating-a-drop-in-replacement-for-rustc":{"tf":1.0},"how-to-build-and-run.html#running-xpy-and-building-a-stage1-compiler":{"tf":1.0}},"df":4}}}}},"w":{"docs":{},"df":0,"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"p":{"docs":{},"df":0,"_":{"docs":{},"df":0,"u":{"docs":{},"df":0,"6":{"docs":{},"df":0,"4":{"docs":{"miri.html#datastructures":{"tf":1.0}},"df":1}}}}}}},"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{"mir/visitor.html#mir-visitor":{"tf":1.0},"mir/index.html#key-mir-vocabulary":{"tf":1.7320508075688773},"mir/passes.html#implementing-and-registering-a-pass":{"tf":1.4142135623730952}},"df":3}}}},"l":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"s":{"docs":{"traits/specialization.html#specialization":{"tf":1.0},"traits/canonicalization.html#canonicalization":{"tf":1.0},"compiler-debugging.html#getting-logging-output":{"tf":1.0},"conventions.html#prefer-exhaustive-matches":{"tf":1.0},"compiler-debugging.html#expensive-operations-in-logs":{"tf":1.4142135623730952},"variance.html#variance-and-associated-types":{"tf":1.0},"ty.html#allocating-and-working-with-types":{"tf":1.0},"how-to-build-and-run.html#running-xpy-and-building-a-stage1-compiler":{"tf":1.0}},"df":8}}},"i":{"docs":{},"df":0,"k":{"docs":{"diag.html#error-messages":{"tf":1.0},"incrcomp-debugging.html#tracking-down-incorrect-edges":{"tf":1.0},"rustdoc.html#hot-potato":{"tf":1.0},"macro-expansion.html#example":{"tf":1.0}},"df":4}}},"b":{"docs":{},"df":0,"o":{"docs":{},"df":0,"u":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{"traits/caching.html#an-example":{"tf":1.4142135623730952},"traits/resolution.html#candidate-assembly":{"tf":1.0},"traits/canonical-queries.html#examples":{"tf":1.4142135623730952},"traits/canonicalization.html#canonicalizing-the-query":{"tf":1.4142135623730952},"traits/canonical-queries.html#a-trait-query-in-rustc":{"tf":1.0},"traits/canonicalization.html#canonicalization":{"tf":1.7320508075688773},"type-inference.html#subtyping-obligations":{"tf":1.0},"traits/resolution.html#selection":{"tf":1.0}},"df":8}}}},"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"k":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{"rustdoc.html#from-soup-to-nuts":{"tf":1.0}},"df":1}}}}}}},"(":{"docs":{},"df":0,"v":{"docs":{},"df":0,"2":{"docs":{"mir/regionck.html#skolemization-and-outlives-constraints":{"tf":1.4142135623730952}},"df":1},"1":{"docs":{"mir/regionck.html#skolemization-and-outlives-constraints":{"tf":2.0}},"df":1}}},"2":{"docs":{"mir/regionck.html#final-example":{"tf":2.23606797749979},"mir/regionck.html#what-is-a-universe":{"tf":3.1622776601683797},"mir/regionck.html#another-example":{"tf":1.0}},"df":3},"3":{"docs":{"mir/regionck.html#universes-and-skolemized-region-elements":{"tf":1.0}},"df":1,"2":{"docs":{"mir/regionck.html#mir-based-region-checking-nll":{"tf":1.0},"mir/regionck.html#what-is-a-universe":{"tf":1.7320508075688773},"mir/regionck.html#another-example":{"tf":4.0},"appendix/background.html#what-is-a-free-region-or-a-free-variable-what-about-bound-region":{"tf":1.4142135623730952},"traits/associated-types.html#integration-with-unification":{"tf":1.0},"traits/canonical-queries.html#examples":{"tf":1.4142135623730952},"traits/chalk-overview.html#lowering":{"tf":1.4142135623730952},"mir/regionck.html#skolemization-and-universes":{"tf":1.4142135623730952},"mir/regionck.html#final-example":{"tf":4.898979485566356},"mir/regionck.html#back-to-our-example":{"tf":1.4142135623730952},"name-resolution.html#namespaces":{"tf":1.0},"ty.html#beyond-types-other-kinds-of-arena-allocated-data-structures":{"tf":1.0},"traits/goals-and-clauses.html#domain-goals":{"tf":1.4142135623730952},"mir/regionck.html#subtyping-and-skolemization":{"tf":2.449489742783178},"traits/associated-types.html#associated-type-projection-and-normalization":{"tf":1.0},"appendix/glossary.html#appendix-c-glossary":{"tf":1.7320508075688773},"type-inference.html#trying-equality":{"tf":1.4142135623730952},"traits/canonical-queries.html#canonical-queries":{"tf":1.0},"type-inference.html#a-note-on-terminology":{"tf":1.0}},"df":19}},"l":{"docs":{},"df":0,"t":{"docs":{},"df":0,"i":{"docs":{},"df":0,"m":{"docs":{"tests/intro.html#compiletest-test-suites":{"tf":1.0},"high-level-overview.html#the-main-stages-of-compilation":{"tf":1.4142135623730952},"query.html#how-the-compiler-executes-a-query":{"tf":1.0},"variance.html#dependency-graph-management":{"tf":1.0},"type-inference.html#extracting-region-constraints":{"tf":1.0},"traits/chalk-overview.html#testing":{"tf":1.0},"query.html#cycles-between-queries":{"tf":1.0}},"df":7}}}},"1":{"docs":{"mir/regionck.html#final-example":{"tf":1.0},"mir/regionck.html#what-is-a-universe":{"tf":3.4641016151377546}},"df":2,"6":{"docs":{"tests/adding.html#normalization":{"tf":1.0}},"df":1}},"6":{"docs":{},"df":0,"4":{"docs":{"miri.html#datastructures":{"tf":1.0}},"df":1}},"f":{"docs":{},"df":0,"c":{"docs":{"method-lookup.html#method-lookup":{"tf":1.0},"appendix/glossary.html#appendix-c-glossary":{"tf":1.0}},"df":2}},"=":{"docs":{},"df":0,"[":{"docs":{},"df":0,"t":{"docs":{"method-lookup.html#candidate-assembly":{"tf":1.0}},"df":1}},"b":{"docs":{},"df":0,"o":{"docs":{},"df":0,"x":{"docs":{},"df":0,"<":{"docs":{},"df":0,"t":{"docs":{"method-lookup.html#candidate-assembly":{"tf":1.0}},"df":1}}}}},"u":{"docs":{},"df":0,"s":{"docs":{"traits/resolution.html#selection-during-translation":{"tf":1.0}},"df":1}}},"8":{"docs":{"traits/goals-and-clauses.html#domain-goals":{"tf":1.7320508075688773},"miri.html#miri":{"tf":1.0}},"df":2},"s":{"docs":{"hir.html#hir-bodies":{"tf":1.0},"tests/adding.html#other-header-commands":{"tf":1.0},"traits/lowering-module.html#the--program_clauses_for--query":{"tf":1.0},"appendix/stupid-stats.html#overview-of-the-compilation-process":{"tf":2.449489742783178},"traits/goals-and-clauses.html#coinductive-goals":{"tf":1.7320508075688773},"const-eval.html#constant-evaluation":{"tf":1.7320508075688773},"conventions.html#prefer-exhaustive-matches":{"tf":1.4142135623730952},"conventions.html#copyright-notice":{"tf":1.0},"traits/lowering-rules.html#trait-header":{"tf":1.4142135623730952},"mir/passes.html#implementing-and-registering-a-pass":{"tf":1.4142135623730952},"appendix/stupid-stats.html#what-next":{"tf":2.0},"traits/index.html#trait-solving-new-style":{"tf":1.4142135623730952},"mir/borrowck.html#mir-borrow-check":{"tf":1.4142135623730952},"tests/intro.html#testing-on-emulators":{"tf":1.0},"mir/regionck.html#another-example":{"tf":1.0},"miri.html#datastructures":{"tf":1.4142135623730952},"tests/intro.html#other-tests":{"tf":1.0},"diag.html#error-messages":{"tf":2.0},"traits/chalk-overview.html#lowering":{"tf":1.4142135623730952},"ty.html#import-conventions":{"tf":1.4142135623730952},"tests/running.html#running-a-subset-of-the-test-suites":{"tf":1.0},"macro-expansion.html#example":{"tf":1.4142135623730952},"traits/hrtb.html#basic-matching-and-skolemization-leaks":{"tf":1.0},"type-inference.html#creating-an-inference-context":{"tf":1.0},"mir/regionck.html#skolemization-and-outlives-constraints":{"tf":1.0},"traits/resolution.html#overview":{"tf":1.4142135623730952},"traits/lowering-rules.html#associated-type-values":{"tf":1.0},"traits/chalk-overview.html#intermediate-representation-ir":{"tf":1.0},"miri.html#miri":{"tf":2.23606797749979},"traits/canonical-queries.html#a-trait-query-in-rustc":{"tf":1.4142135623730952},"ty.html#the-tcx-and-how-it-uses-lifetimes":{"tf":2.8284271247461905},"conventions.html#use-todo-comments-for-things-you-dont-want-to-forget":{"tf":1.7320508075688773},"param_env.html#parameter-environment":{"tf":2.23606797749979},"query.html#cycles-between-queries":{"tf":2.23606797749979},"variance.html#the-algorithm":{"tf":1.7320508075688773},"incremental-compilation.html#the-try-mark-green-algorithm":{"tf":1.0},"query.html#how-the-compiler-executes-a-query":{"tf":1.7320508075688773},"traits/canonicalization.html#canonicalizing-the-query-result":{"tf":1.4142135623730952},"macro-expansion.html#macro-expansion":{"tf":1.0},"rustdoc.html#dotting-is-and-crossing-ts":{"tf":1.4142135623730952},"tests/intro.html#testing-infrastructure":{"tf":1.4142135623730952},"compiler-debugging.html#getting-logging-output":{"tf":1.7320508075688773},"name-resolution.html#overall-strategy":{"tf":1.4142135623730952},"traits/lowering-to-logic.html#type-checking-generic-functions-beyond-horn-clauses":{"tf":1.7320508075688773},"mir/passes.html#stealing":{"tf":1.7320508075688773},"variance.html#addendum-variance-on-traits":{"tf":1.7320508075688773},"rustc-driver.html#a-note-on-lifetimes":{"tf":2.0},"appendix/stupid-stats.html#compilercontroller":{"tf":1.4142135623730952},"traits/associated-types.html#associated-type-projection-and-normalization":{"tf":1.4142135623730952},"incrcomp-debugging.html#testing-the-dependency-graph":{"tf":1.4142135623730952},"tests/adding.html#revisions":{"tf":1.4142135623730952},"compiler-debugging.html#expensive-operations-in-logs":{"tf":1.7320508075688773},"traits/lowering-rules.html#lowering-where-clauses":{"tf":2.0},"high-level-overview.html#the-main-stages-of-compilation":{"tf":1.0},"variance.html#variance-of-type-and-lifetime-parameters":{"tf":2.23606797749979},"rustdoc.html#from-clean-to-crate":{"tf":1.0},"name-resolution.html#name-resolution":{"tf":1.0},"high-level-overview.html#crate-structure":{"tf":1.7320508075688773},"tests/intro.html#testing-with-docker-images":{"tf":1.4142135623730952},"diag.html#declaring-a-lint":{"tf":2.23606797749979},"tests/adding.html#adding-new-tests":{"tf":1.0},"type-inference.html#a-note-on-terminology":{"tf":1.4142135623730952},"traits/resolution.html#candidate-assembly":{"tf":1.7320508075688773},"compiletest.html#implementing-the-behavior-change":{"tf":1.0},"diag.html#span":{"tf":1.4142135623730952},"traits/lowering-rules.html#notation":{"tf":1.4142135623730952},"traits/associated-types.html#skolemized-associated-types":{"tf":1.0},"how-to-build-and-run.html#other-xpy-commands":{"tf":1.4142135623730952},"variance.html#variance-and-associated-types":{"tf":1.0},"incremental-compilation.html#the-basic-algorithm":{"tf":1.0},"hir.html#the-hir":{"tf":1.0},"query.html#adding-a-new-kind-of-query":{"tf":3.0},"ty.html#beyond-types-other-kinds-of-arena-allocated-data-structures":{"tf":1.0},"traits/resolution.html#major-concepts":{"tf":1.0},"appendix/code-index.html#appendix-d-code-index":{"tf":2.449489742783178},"traits/lowering-to-logic.html#lowering-to-logic":{"tf":1.0},"mir/index.html#key-mir-vocabulary":{"tf":2.0},"type-inference.html#lexical-region-resolution":{"tf":1.0},"mir/visitor.html#traversal":{"tf":1.0},"tests/adding.html#normalization":{"tf":2.0},"compiler-debugging.html#getting-a-backtrace-for-errors":{"tf":1.0},"ty.html#allocating-and-working-with-types":{"tf":2.0},"tests/adding.html#comment-explaining-what-the-test-is-about":{"tf":1.7320508075688773},"compiler-debugging.html#debugging-llvm":{"tf":2.0},"how-to-build-and-run.html#create-a-configtoml":{"tf":1.4142135623730952},"mir/regionck.html#representing-the-values-of-a-region-variable":{"tf":1.0},"tests/running.html#running-tests":{"tf":1.4142135623730952},"type-inference.html#enforcing-equality--subtyping":{"tf":1.4142135623730952},"variance.html#trait-variance-and-vtable-resolution":{"tf":1.7320508075688773},"conventions.html#using-crates-from-cratesio":{"tf":1.4142135623730952},"compiler-debugging.html#getting-a-backtrace":{"tf":1.0},"how-to-build-and-run.html#how-to-build-the-compiler-and-run-what-you-built":{"tf":1.0},"traits/associated-types.html#integration-with-unification":{"tf":1.0},"how-to-build-and-run.html#running-xpy-and-building-a-stage1-compiler":{"tf":2.449489742783178},"name-resolution.html#todo":{"tf":1.7320508075688773},"rustdoc.html#hot-potato":{"tf":1.4142135623730952},"tests/adding.html#header-commands-configuring-rustc":{"tf":1.0},"method-lookup.html#candidate-assembly":{"tf":1.0},"traits/associated-types.html#projection-equality":{"tf":1.4142135623730952},"tests/adding.html#naming-your-test":{"tf":1.0},"appendix/stupid-stats.html#the-driver-customisation-apis":{"tf":1.4142135623730952},"rustdoc.html#from-soup-to-nuts":{"tf":1.0},"type-inference.html#extracting-region-constraints":{"tf":1.0},"rustdoc.html#from-crate-to-clean":{"tf":1.7320508075688773},"incrcomp-debugging.html#dumping-the-graph":{"tf":1.0},"conventions.html#formatting-and-the-tidy-script":{"tf":1.0},"the-parser.html#the-parser":{"tf":1.0},"compiletest.html#adding-a-new-header-command":{"tf":1.7320508075688773},"traits/goals-and-clauses.html#domain-goals":{"tf":1.4142135623730952},"tests/adding.html#ignoring-tests":{"tf":1.0},"rustdoc.html#cheat-sheet":{"tf":2.8284271247461905},"mir/borrowck.html#major-phases-of-the-borrow-checker":{"tf":1.0},"appendix/stupid-stats.html#appendix-a-a-tutorial-on-creating-a-drop-in-replacement-for-rustc":{"tf":2.23606797749979},"mir/index.html#the-mir-mid-level-ir":{"tf":1.0},"appendix/glossary.html#appendix-c-glossary":{"tf":4.0},"type-inference.html#region-constraints":{"tf":1.0},"rustdoc.html#the-walking-tour-of-rustdoc":{"tf":1.7320508075688773},"type-inference.html#snapshots":{"tf":1.7320508075688773},"conventions.html#how-to-structure-your-pr":{"tf":1.4142135623730952},"appendix/background.html#what-is-a-control-flow-graph":{"tf":1.7320508075688773},"traits/canonicalization.html#canonicalization":{"tf":1.0},"type-checking.html#type-collection":{"tf":1.0},"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":3.0},"diag.html#lint-groups":{"tf":1.4142135623730952},"traits/specialization.html#specialization":{"tf":2.449489742783178},"diag.html#suggestions":{"tf":2.8284271247461905},"rustc-driver.html#the-rustc-driver":{"tf":1.7320508075688773},"macro-expansion.html#the-macro-parser":{"tf":3.0},"tests/adding.html#what-kind-of-test-should-i-add":{"tf":2.0},"hir.html#identifiers-in-the-hir":{"tf":1.4142135623730952},"hir.html#the-hir-map":{"tf":1.7320508075688773},"mir/passes.html#mir-passes":{"tf":1.4142135623730952},"traits/caching.html#where-clauses-and-the-local-vs-global-cache":{"tf":2.23606797749979},"mir/regionck.html#what-is-a-universe":{"tf":1.4142135623730952},"mir/regionck.html#mir-based-region-checking-nll":{"tf":1.0}},"df":135,"a":{"docs":{},"df":0,"b":{"docs":{},"df":0,"l":{"docs":{"ty.html#the-tcx-and-how-it-uses-lifetimes":{"tf":1.0},"traits/hrtb.html#higher-ranked-trait-obligations":{"tf":1.0},"variance.html#trait-variance-and-vtable-resolution":{"tf":1.0},"name-resolution.html#scopes-and-ribs":{"tf":1.0}},"df":4}},"g":{"docs":{"tests/adding.html#other-header-commands":{"tf":1.0},"tests/adding.html#normalization":{"tf":1.0},"ty.html#the-tcx-and-how-it-uses-lifetimes":{"tf":1.0}},"df":3}},"i":{"docs":{},"df":0,"z":{"docs":{"traits/lowering-to-logic.html#rust-traits-and-logic":{"tf":2.0},"traits/caching.html#an-example":{"tf":2.449489742783178},"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.0},"traits/resolution.html#confirmation":{"tf":2.0},"miri.html#miri":{"tf":2.449489742783178},"tests/adding.html#revisions":{"tf":1.0},"traits/resolution.html#candidate-assembly":{"tf":2.23606797749979},"traits/lowering-to-logic.html#type-checking-normal-functions":{"tf":2.0}},"df":8}},"e":{"docs":{},"df":0,"r":{"docs":{"type-checking.html#type-collection":{"tf":1.0},"mir/index.html#key-mir-vocabulary":{"tf":1.0},"appendix/stupid-stats.html#appendix-a-a-tutorial-on-creating-a-drop-in-replacement-for-rustc":{"tf":1.0},"macro-expansion.html#the-macro-parser":{"tf":1.0},"type-inference.html#type-inference":{"tf":1.0},"traits/associated-types.html#skolemized-associated-types":{"tf":1.0},"high-level-overview.html#the-main-stages-of-compilation":{"tf":1.0},"diag.html#lint-groups":{"tf":1.0},"appendix/glossary.html#appendix-c-glossary":{"tf":1.0},"how-to-build-and-run.html#how-to-build-the-compiler-and-run-what-you-built":{"tf":1.0},"rustc-driver.html#the-rustc-driver":{"tf":1.4142135623730952},"traits/associated-types.html#associated-type-projection-and-normalization":{"tf":1.0},"query.html#cycles-between-queries":{"tf":1.4142135623730952},"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.4142135623730952},"rustc-driver.html#a-note-on-lifetimes":{"tf":1.0}},"df":15,"'":{"docs":{"appendix/glossary.html#appendix-c-glossary":{"tf":1.0},"mir/index.html#key-mir-vocabulary":{"tf":1.0},"appendix/code-index.html#appendix-d-code-index":{"tf":1.0}},"df":3}},"l":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"s":{"docs":{"traits/goals-and-clauses.html#coinductive-goals":{"tf":1.0}},"df":1}}}},"a":{"docs":{},"df":0,"b":{"docs":{},"df":0,"l":{"docs":{"rustdoc.html#cheat-sheet":{"tf":1.0}},"df":1}}}},"u":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.4142135623730952},"miri.html#miri":{"tf":1.0},"appendix/stupid-stats.html#compilercalls":{"tf":1.0},"diag.html#error-messages":{"tf":1.0},"incrcomp-debugging.html#dumping-the-graph":{"tf":1.4142135623730952},"conventions.html#how-to-structure-your-pr":{"tf":1.0},"appendix/glossary.html#appendix-c-glossary":{"tf":1.0},"mir/passes.html#seeing-how-the-mir-changes-as-the-compiler-executes":{"tf":1.0},"miri.html#datastructures":{"tf":1.0},"rustdoc.html#from-crate-to-clean":{"tf":1.0},"tests/running.html#running-a-subset-of-the-test-suites":{"tf":1.4142135623730952},"query.html#how-the-compiler-executes-a-query":{"tf":1.0},"the-parser.html#the-parser":{"tf":1.0},"name-resolution.html#namespaces":{"tf":1.0}},"df":14}}}},"p":{"docs":{"high-level-overview.html#crate-structure":{"tf":1.4142135623730952},"rustdoc.html#the-walking-tour-of-rustdoc":{"tf":1.0},"mir/regionck.html#subtyping-and-skolemization":{"tf":1.4142135623730952},"traits/canonicalization.html#canonicalizing-the-query-result":{"tf":1.4142135623730952},"variance.html#dependency-graph-management":{"tf":1.0},"hir.html#out-of-band-storage-and-the--crate--type":{"tf":1.0},"tests/adding.html#error-annotations":{"tf":1.0},"variance.html#variance-and-object-types":{"tf":1.0},"traits/associated-types.html#integration-with-unification":{"tf":1.0},"tests/running.html#running-an-individual-test":{"tf":1.0},"query.html#queries-demand-driven-compilation":{"tf":1.0},"mir/regionck.html#another-example":{"tf":1.0},"query.html#adding-a-new-kind-of-query":{"tf":1.0},"appendix/stupid-stats.html#appendix-a-a-tutorial-on-creating-a-drop-in-replacement-for-rustc":{"tf":1.0},"mir/regionck.html#extending-the-universal-regions-check":{"tf":1.0},"appendix/background.html#what-is-a-free-region-or-a-free-variable-what-about-bound-region":{"tf":1.0},"mir/regionck.html#final-example":{"tf":1.0},"how-to-build-and-run.html#other-xpy-commands":{"tf":1.4142135623730952},"query.html#how-the-compiler-executes-a-query":{"tf":1.0},"traits/caching.html#an-example":{"tf":1.0},"conventions.html#how-to-structure-your-pr":{"tf":1.0},"how-to-build-and-run.html#create-a-configtoml":{"tf":1.0},"const-eval.html#constant-evaluation":{"tf":1.0},"traits/resolution.html#major-concepts":{"tf":1.0},"mir/passes.html#stealing":{"tf":1.0},"compiler-debugging.html#debugging-llvm":{"tf":1.4142135623730952},"rustdoc.html#cheat-sheet":{"tf":1.0},"diag.html#span":{"tf":1.4142135623730952},"rustdoc.html#other-tricks-up-its-sleeve":{"tf":1.4142135623730952},"how-to-build-and-run.html#running-xpy-and-building-a-stage1-compiler":{"tf":1.0},"rustdoc.html#from-clean-to-crate":{"tf":1.4142135623730952},"traits/hrtb.html#higher-ranked-trait-obligations":{"tf":1.0},"traits/chalk-overview.html#rules":{"tf":1.0},"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.4142135623730952},"traits/specialization.html#specialization":{"tf":1.0},"traits/canonical-queries.html#examples":{"tf":1.4142135623730952},"traits/canonicalization.html#executing-the-query":{"tf":1.4142135623730952},"incremental-compilation.html#the-try-mark-green-algorithm":{"tf":1.0},"appendix/code-index.html#appendix-d-code-index":{"tf":1.0},"tests/intro.html#testing-on-emulators":{"tf":1.4142135623730952},"traits/goals-and-clauses.html#coinductive-goals":{"tf":1.4142135623730952},"traits/lowering-rules.html#function-and-constant-values":{"tf":1.0}},"df":42,"d":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{"tests/adding.html#editing-and-updating-the-reference-files":{"tf":1.0},"compiler-debugging.html#debugging-the-compiler":{"tf":1.0},"method-lookup.html#method-lookup":{"tf":1.0}},"df":3}}},"c":{"docs":{},"df":0,"a":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{"variance.html#constraints":{"tf":1.4142135623730952},"variance.html#variance-and-associated-types":{"tf":1.0}},"df":2}}},"o":{"docs":{},"df":0,"m":{"docs":{"diag.html#edition-gated-lints":{"tf":1.0}},"df":1}}},"o":{"docs":{},"df":0,"n":{"docs":{"rustc-driver.html#a-note-on-lifetimes":{"tf":1.0}},"df":1}},"p":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"mir/regionck.html#skolemization-and-outlives-constraints":{"tf":1.0},"name-resolution.html#namespaces":{"tf":1.0},"type-inference.html#lexical-region-resolution":{"tf":1.0}},"df":3}}}},"i":{"docs":{"tests/adding.html#adding-new-tests":{"tf":1.0},"traits/lowering-module.html#unit-tests":{"tf":1.0},"tests/running.html#running-a-subset-of-the-test-suites":{"tf":1.0},"tests/adding.html#guide-to-the-ui-tests":{"tf":1.4142135623730952},"tests/intro.html#compiletest-test-suites":{"tf":1.4142135623730952},"tests/adding.html#tests-that-do-not-result-in-compile-errors":{"tf":1.4142135623730952},"tests/adding.html#other-header-commands":{"tf":1.4142135623730952},"tests/adding.html#what-kind-of-test-should-i-add":{"tf":2.0}},"df":8,"/":{"docs":{},"df":0,"t":{"docs":{},"df":0,"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"s":{"docs":{},"df":0,"m":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"/":{"docs":{},"df":0,"m":{"docs":{},"df":0,"a":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,".":{"docs":{},"df":0,"r":{"docs":{"tests/adding.html#normalization":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}},"h":{"docs":{},"df":0,"e":{"docs":{},"df":0,"l":{"docs":{},"df":0,"l":{"docs":{},"df":0,"o":{"docs":{},"df":0,"_":{"docs":{},"df":0,"w":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"l":{"docs":{},"df":0,"d":{"docs":{},"df":0,"/":{"docs":{},"df":0,"m":{"docs":{},"df":0,"a":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,".":{"docs":{},"df":0,"r":{"docs":{"tests/adding.html#guide-to-the-ui-tests":{"tf":1.0}},"df":1},"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"d":{"docs":{},"df":0,"o":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{"tests/adding.html#guide-to-the-ui-tests":{"tf":1.0}},"df":1}}},"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"r":{"docs":{"tests/adding.html#guide-to-the-ui-tests":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"df":0,"i":{"docs":{},"df":0,"l":{"docs":{"diag.html#error-messages":{"tf":1.0}},"df":1}}},"0":{"docs":{"mir/regionck.html#back-to-our-example":{"tf":1.0},"mir/regionck.html#what-is-a-universe":{"tf":3.1622776601683797},"mir/regionck.html#skolemization-and-outlives-constraints":{"tf":1.0}},"df":3}},"1":{"docs":{"incremental-compilation.html#the-basic-algorithm":{"tf":1.0},"mir/index.html#key-mir-vocabulary":{"tf":2.0},"mir/regionck.html#subtyping-and-skolemization":{"tf":2.6457513110645909},"tests/adding.html#header-commands-configuring-rustc":{"tf":1.4142135623730952},"how-to-build-and-run.html#running-xpy-and-building-a-stage1-compiler":{"tf":2.23606797749979},"name-resolution.html#namespaces":{"tf":1.0},"variance.html#the-algorithm":{"tf":1.4142135623730952},"mir/regionck.html#what-is-a-universe":{"tf":2.0},"appendix/stupid-stats.html#overview-of-the-compilation-process":{"tf":1.0},"mir/regionck.html#extending-the-universal-regions-check":{"tf":1.0},"mir/regionck.html#back-to-our-example":{"tf":1.7320508075688773},"name-resolution.html#scopes-and-ribs":{"tf":1.4142135623730952},"tests/adding.html#editing-and-updating-the-reference-files":{"tf":1.0},"compiler-debugging.html#getting-a-backtrace-for-errors":{"tf":1.7320508075688773},"miri.html#miri":{"tf":1.0},"traits/canonicalization.html#canonicalizing-the-query-result":{"tf":1.7320508075688773},"rustdoc.html#cheat-sheet":{"tf":1.4142135623730952},"mir/regionck.html#representing-the-values-of-a-region-variable":{"tf":1.4142135623730952},"high-level-overview.html#the-main-stages-of-compilation":{"tf":1.4142135623730952},"traits/canonicalization.html#canonicalizing-the-query":{"tf":1.0},"compiletest.html#adding-a-new-header-command":{"tf":2.0},"tests/running.html#running-a-subset-of-the-test-suites":{"tf":2.23606797749979},"traits/canonical-queries.html#examples":{"tf":1.4142135623730952},"mir/regionck.html#another-example":{"tf":1.7320508075688773},"compiler-debugging.html#getting-a-backtrace":{"tf":1.0},"tests/running.html#running-an-individual-test":{"tf":1.0},"traits/chalk-overview.html#blog-posts":{"tf":1.0},"traits/canonicalization.html#processing-the-canonicalized-query-result":{"tf":1.4142135623730952},"traits/canonicalization.html#canonicalization":{"tf":2.0},"compiletest.html#implementing-the-behavior-change":{"tf":1.4142135623730952},"how-to-build-and-run.html#other-xpy-commands":{"tf":2.0},"appendix/background.html#what-is-a-control-flow-graph":{"tf":2.8284271247461905},"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.4142135623730952},"traits/specialization.html#specialization":{"tf":1.0},"mir/regionck.html#final-example":{"tf":2.449489742783178}},"df":35,"6":{"docs":{"tests/adding.html#normalization":{"tf":1.0}},"df":1,"1":{"docs":{"mir/passes.html#seeing-how-the-mir-changes-as-the-compiler-executes":{"tf":1.0}},"df":1}},"0":{"docs":{},"df":0,"1":{"docs":{"compiletest.html#implementing-the-behavior-change":{"tf":1.4142135623730952},"compiletest.html#adding-a-new-header-command":{"tf":1.4142135623730952}},"df":2},"0":{"docs":{"conventions.html#line-length":{"tf":1.0}},"df":1}},"i":{"docs":{},"df":0,"3":{"docs":{},"df":0,"2":{"docs":{"mir/index.html#key-mir-vocabulary":{"tf":1.0}},"df":1}}},"8":{"docs":{},"df":0,"2":{"docs":{},"df":0,"9":{"docs":{},"df":0,"0":{"docs":{"traits/caching.html#where-clauses-and-the-local-vs-global-cache":{"tf":1.0}},"df":1}}},"0":{"docs":{},"df":0,"6":{"docs":{},"df":0,"0":{"docs":{"tests/adding.html#comment-explaining-what-the-test-is-about":{"tf":1.0}},"df":1}}}},".":{"docs":{},"df":0,"2":{"docs":{},"df":0,"5":{"docs":{},"df":0,".":{"docs":{},"df":0,"0":{"docs":{"how-to-build-and-run.html#creating-a-rustup-toolchain":{"tf":1.4142135623730952}},"df":1}}},"4":{"docs":{},"df":0,".":{"docs":{},"df":0,"0":{"docs":{"compiler-debugging.html#getting-a-backtrace-for-errors":{"tf":1.0}},"df":1}}}}},"2":{"docs":{"miri.html#miri":{"tf":1.0},"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.0}},"df":2,"3":{"docs":{},"df":0,"4":{"docs":{"tests/running.html#running-an-individual-test":{"tf":1.4142135623730952},"tests/adding.html#naming-your-test":{"tf":1.0}},"df":2,"5":{"docs":{},"df":0,".":{"docs":{},"df":0,"r":{"docs":{"tests/adding.html#naming-your-test":{"tf":1.4142135623730952}},"df":1}}},".":{"docs":{},"df":0,"r":{"docs":{"tests/running.html#running-an-individual-test":{"tf":1.0}},"df":1}}}},"1":{"docs":{},"df":0,"1":{"docs":{"mir/index.html#the-mir-mid-level-ir":{"tf":1.0}},"df":1}}}},"_":{"docs":{"compiletest.html#adding-a-new-header-command":{"tf":1.0},"conventions.html#prefer-exhaustive-matches":{"tf":1.4142135623730952},"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":3.605551275463989}},"df":3,"4":{"docs":{"mir/index.html#key-mir-vocabulary":{"tf":1.0}},"df":1},"n":{"docs":{},"df":0,"o":{"docs":{},"df":0,"t":{"docs":{},"df":0,"_":{"docs":{"diag.html#error-messages":{"tf":1.0}},"df":1}}}},"5":{"docs":{"mir/index.html#key-mir-vocabulary":{"tf":1.0}},"df":1},"3":{"docs":{"mir/index.html#key-mir-vocabulary":{"tf":2.8284271247461905}},"df":1,".":{"docs":{},"df":0,"f":{"docs":{"mir/index.html#key-mir-vocabulary":{"tf":1.0}},"df":1}}},"0":{"docs":{"miri.html#miri":{"tf":2.0},"mir/index.html#key-mir-vocabulary":{"tf":1.7320508075688773}},"df":2},"1":{"docs":{"mir/index.html#key-mir-vocabulary":{"tf":3.4641016151377546},"miri.html#miri":{"tf":2.23606797749979},"mir/index.html#mir-data-types":{"tf":1.7320508075688773}},"df":3,".":{"docs":{},"df":0,"f":{"docs":{"mir/index.html#key-mir-vocabulary":{"tf":1.0},"mir/index.html#mir-data-types":{"tf":1.0}},"df":2},"0":{"docs":{"miri.html#miri":{"tf":1.0}},"df":1}}},"2":{"docs":{"mir/index.html#key-mir-vocabulary":{"tf":1.7320508075688773}},"df":1}},"a":{"docs":{},"df":0,"b":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"t":{"docs":{"compiler-debugging.html#getting-a-backtrace-for-errors":{"tf":1.0},"diag.html#suggestions":{"tf":1.4142135623730952},"traits/lowering-module.html#unit-tests":{"tf":1.0}},"df":3}},"v":{"docs":{"tests/intro.html#compiletest-test-suites":{"tf":1.0},"query.html#adding-a-new-kind-of-query":{"tf":1.0},"traits/associated-types.html#associated-type-projection-and-normalization":{"tf":1.0},"how-to-build-and-run.html#creating-a-rustup-toolchain":{"tf":1.0},"traits/lowering-rules.html#lowering-where-clauses":{"tf":1.0},"traits/chalk-overview.html#testing":{"tf":1.0},"compiletest.html#adding-a-new-header-command":{"tf":1.0},"traits/lowering-rules.html#associated-type-values":{"tf":1.0},"mir/regionck.html#back-to-our-example":{"tf":1.0},"query.html#how-the-compiler-executes-a-query":{"tf":1.4142135623730952},"appendix/stupid-stats.html#compilercontroller":{"tf":1.0},"traits/lowering-rules.html#trait-header":{"tf":1.0},"traits/goals-and-clauses.html#domain-goals":{"tf":1.0},"diag.html#suggestions":{"tf":1.0},"macro-expansion.html#the-macro-parser":{"tf":1.4142135623730952},"variance.html#addendum-variance-on-traits":{"tf":1.0},"compiler-debugging.html#getting-a-backtrace-for-errors":{"tf":1.0},"traits/lowering-to-logic.html#rust-traits-and-logic":{"tf":1.0},"traits/goals-and-clauses.html#coinductive-goals":{"tf":1.0},"traits/resolution.html#selection-during-translation":{"tf":1.0},"rustdoc.html#from-crate-to-clean":{"tf":1.0},"incrcomp-debugging.html#testing-the-dependency-graph":{"tf":1.0},"type-inference.html#subtyping-obligations":{"tf":1.0},"rustdoc.html#cheat-sheet":{"tf":1.0},"mir/visitor.html#mir-visitor":{"tf":1.0},"type-inference.html#enforcing-equality--subtyping":{"tf":1.0}},"df":26}},"b":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"v":{"docs":{"appendix/glossary.html#appendix-c-glossary":{"tf":1.0}},"df":1,"i":{"docs":{"appendix/glossary.html#appendix-c-glossary":{"tf":1.0}},"df":1}}}}},"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{"appendix/stupid-stats.html#overview-of-the-compilation-process":{"tf":1.4142135623730952},"hir.html#the-hir":{"tf":1.0},"high-level-overview.html#the-main-stages-of-compilation":{"tf":1.0},"appendix/code-index.html#appendix-d-code-index":{"tf":1.0},"macro-expansion.html#example":{"tf":1.0},"traits/bibliography.html#bibliography":{"tf":1.0},"the-parser.html#the-parser":{"tf":1.0},"traits/lowering-to-logic.html#type-checking-generic-functions-beyond-horn-clauses":{"tf":1.0},"name-resolution.html#scopes-and-ribs":{"tf":1.0},"traits/canonical-queries.html#canonical-queries":{"tf":1.0},"traits/chalk-overview.html#parsing":{"tf":1.0},"appendix/glossary.html#appendix-c-glossary":{"tf":1.0}},"df":12}}}}},"o":{"docs":{},"df":0,"l":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{"hir.html#identifiers-in-the-hir":{"tf":1.7320508075688773}},"df":1}}}}},"i":{"docs":{},"df":0,"l":{"docs":{"rustdoc.html#the-walking-tour-of-rustdoc":{"tf":1.0},"rustdoc.html#dotting-is-and-crossing-ts":{"tf":1.0},"rustc-driver.html#the-rustc-driver":{"tf":1.0}},"df":3}}},"0":{"docs":{"traits/lowering-rules.html#lowering-impls":{"tf":1.4142135623730952},"traits/lowering-rules.html#lowering-where-clauses":{"tf":1.4142135623730952}},"df":2},"n":{"docs":{},"df":0,"d":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"appendix/background.html#what-is-a-dataflow-analysis":{"tf":1.0}},"df":1}},"/":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{"tests/intro.html#compiletest-test-suites":{"tf":1.0},"compiletest.html#introduction":{"tf":1.0},"param_env.html#parameter-environment":{"tf":1.0}},"df":3}}},"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"i":{"docs":{},"df":0,"d":{"docs":{"tests/adding.html#ignoring-tests":{"tf":1.0},"tests/intro.html#testing-on-emulators":{"tf":1.4142135623730952}},"df":2}}}}},"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"y":{"docs":{},"df":0,"m":{"docs":{"diag.html#edition-gated-lints":{"tf":1.0}},"df":1,"o":{"docs":{},"df":0,"u":{"docs":{},"df":0,"s":{"docs":{},"df":0,"_":{"docs":{},"df":0,"p":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"m":{"docs":{},"df":0,"e":{"docs":{},"df":0,"t":{"docs":{"diag.html#edition-gated-lints":{"tf":1.4142135623730952}},"df":1}}}}}}}}}}}}}},"t":{"docs":{},"df":0,"h":{"docs":{"appendix/stupid-stats.html#appendix-a-a-tutorial-on-creating-a-drop-in-replacement-for-rustc":{"tf":1.0},"traits/specialization.html#specialization":{"tf":1.0},"traits/resolution.html#candidate-assembly":{"tf":1.0},"variance.html#variance-and-object-types":{"tf":1.4142135623730952},"variance.html#trait-variance-and-vtable-resolution":{"tf":1.0},"incremental-compilation.html#the-basic-algorithm":{"tf":1.0},"traits/hrtb.html#basic-matching-and-skolemization-leaks":{"tf":1.0},"macro-expansion.html#the-macro-parser":{"tf":1.0},"traits/canonical-queries.html#the-traditional-interactive-prolog-query":{"tf":1.7320508075688773},"mir/index.html#key-mir-vocabulary":{"tf":1.0},"miri.html#allocations":{"tf":1.0},"mir/regionck.html#mir-based-region-checking-nll":{"tf":1.0},"variance.html#variance-and-associated-types":{"tf":1.0},"method-lookup.html#candidate-assembly":{"tf":1.0},"miri.html#miri":{"tf":1.0},"param_env.html#parameter-environment":{"tf":1.0},"name-resolution.html#scopes-and-ribs":{"tf":1.7320508075688773},"tests/running.html#running-an-individual-test":{"tf":1.0},"compiler-debugging.html#expensive-operations-in-logs":{"tf":1.0},"mir/regionck.html#what-is-a-universe":{"tf":1.0},"traits/associated-types.html#projection-equality":{"tf":1.0},"traits/hrtb.html#higher-ranked-trait-obligations":{"tf":1.0},"appendix/glossary.html#appendix-c-glossary":{"tf":1.4142135623730952},"mir/regionck.html#extending-the-universal-regions-check":{"tf":1.0},"rustdoc.html#from-crate-to-clean":{"tf":1.0},"type-inference.html#snapshots":{"tf":1.0},"traits/lowering-to-logic.html#rust-traits-and-logic":{"tf":1.0},"miri.html#interpretation":{"tf":1.0},"mir/regionck.html#another-example":{"tf":1.0},"traits/goals-and-clauses.html#goals-and-clauses-meta-structure":{"tf":1.0},"traits/canonicalization.html#executing-the-query":{"tf":1.0}},"df":31}}},"n":{"docs":{},"df":0,"o":{"docs":{},"df":0,"y":{"docs":{"variance.html#addendum-variance-on-traits":{"tf":1.0},"tests/intro.html#compiletest-test-suites":{"tf":1.0},"appendix/stupid-stats.html#appendix-a-a-tutorial-on-creating-a-drop-in-replacement-for-rustc":{"tf":1.0},"rustdoc.html#hot-potato":{"tf":1.0},"traits/caching.html#where-clauses-and-the-local-vs-global-cache":{"tf":1.0},"compiler-debugging.html#expensive-operations-in-logs":{"tf":1.0}},"df":6},"t":{"docs":{"tests/adding.html#tests-that-do-not-result-in-compile-errors":{"tf":1.0},"tests/adding.html#adding-new-tests":{"tf":1.0},"traits/lowering-module.html#unit-tests":{"tf":1.4142135623730952},"incrcomp-debugging.html#testing-the-dependency-graph":{"tf":2.0},"variance.html#addendum-variance-on-traits":{"tf":1.0},"tests/adding.html#error-annotations":{"tf":1.4142135623730952},"type-checking.html#type-collection":{"tf":1.0},"compiletest.html#header-commands":{"tf":1.0},"type-inference.html#type-inference":{"tf":1.0},"compiletest.html#introduction":{"tf":1.0}},"df":10}}},"y":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{"traits/hrtb.html#basic-matching-and-skolemization-leaks":{"tf":2.23606797749979}},"df":1}}},"m":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{"method-lookup.html#steps":{"tf":1.0}},"df":1}}},"o":{"docs":{},"df":0,"n":{"docs":{"compiler-debugging.html#expensive-operations-in-logs":{"tf":1.0},"mir/passes.html#stealing":{"tf":1.0}},"df":2}},"h":{"docs":{},"df":0,"o":{"docs":{},"df":0,"w":{"docs":{"ty.html#the-tcx-and-how-it-uses-lifetimes":{"tf":1.0}},"df":1}}},"t":{"docs":{},"df":0,"h":{"docs":{"miri.html#miri":{"tf":1.0},"miri.html#datastructures":{"tf":1.4142135623730952},"rustdoc.html#from-crate-to-clean":{"tf":1.0},"tests/intro.html#testing-on-emulators":{"tf":1.0},"traits/lowering-module.html#unit-tests":{"tf":1.0},"mir/regionck.html#what-is-a-universe":{"tf":1.0},"ty.html#the-tcx-and-how-it-uses-lifetimes":{"tf":1.0},"name-resolution.html#scopes-and-ribs":{"tf":1.0},"mir/regionck.html#another-example":{"tf":1.0},"compiler-debugging.html#debugging-the-compiler":{"tf":1.0},"compiler-debugging.html#getting-logging-output":{"tf":1.0},"compiler-debugging.html#debugging-llvm":{"tf":1.4142135623730952},"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.0},"mir/regionck.html#back-to-our-example":{"tf":1.0},"param_env.html#parameter-environment":{"tf":1.0},"traits/canonicalization.html#processing-the-canonicalized-query-result":{"tf":1.0},"compiler-debugging.html#expensive-operations-in-logs":{"tf":1.0},"appendix/stupid-stats.html#compilercalls":{"tf":1.4142135623730952}},"df":18}},"w":{"docs":{},"df":0,"a":{"docs":{},"df":0,"y":{"docs":{"tests/running.html#running-tests":{"tf":1.0},"traits/lowering-to-logic.html#type-checking-generic-functions-beyond-horn-clauses":{"tf":1.0},"traits/specialization.html#specialization":{"tf":1.0}},"df":3}},"h":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"hir.html#identifiers-in-the-hir":{"tf":1.0}},"df":1}}}}},"a":{"docs":{},"df":0,"l":{"docs":{},"df":0,"o":{"docs":{},"df":0,"g":{"docs":{"macro-expansion.html#the-macro-parser":{"tf":1.0},"traits/chalk-overview.html#intermediate-representation-ir":{"tf":1.0},"appendix/background.html#what-is-a-free-region-or-a-free-variable-what-about-bound-region":{"tf":1.0}},"df":3}},"y":{"docs":{},"df":0,"s":{"docs":{"mir/borrowck.html#major-phases-of-the-borrow-checker":{"tf":1.4142135623730952},"high-level-overview.html#the-main-stages-of-compilation":{"tf":1.7320508075688773},"rustc-driver.html#the-rustc-driver":{"tf":1.0},"appendix/stupid-stats.html#compilercontroller":{"tf":1.0}},"df":4,"i":{"docs":{"mir/regionck.html#mir-based-region-checking-nll":{"tf":1.4142135623730952},"mir/borrowck.html#major-phases-of-the-borrow-checker":{"tf":1.0},"appendix/stupid-stats.html#what-next":{"tf":1.7320508075688773},"appendix/stupid-stats.html#compilercontroller":{"tf":1.7320508075688773},"appendix/stupid-stats.html#overview-of-the-compilation-process":{"tf":1.4142135623730952},"the-parser.html#the-parser":{"tf":1.0},"appendix/background.html#what-is-a-dataflow-analysis":{"tf":1.4142135623730952},"rustc-driver.html#the-rustc-driver":{"tf":1.7320508075688773},"appendix/glossary.html#appendix-c-glossary":{"tf":1.4142135623730952},"hir.html#the-hir":{"tf":1.0}},"df":10}}}}},"s":{"docs":{},"df":0,"w":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"traits/canonical-queries.html#the-traditional-interactive-prolog-query":{"tf":2.6457513110645909},"variance.html#trait-variance-and-vtable-resolution":{"tf":1.4142135623730952},"traits/hrtb.html#basic-matching-and-skolemization-leaks":{"tf":1.0},"query.html#how-the-compiler-executes-a-query":{"tf":1.4142135623730952},"mir/regionck.html#what-is-a-universe":{"tf":1.0},"conventions.html#prefer-exhaustive-matches":{"tf":1.0},"traits/canonical-queries.html#examples":{"tf":1.0},"traits/canonical-queries.html#canonical-queries":{"tf":1.0},"traits/canonicalization.html#canonicalization":{"tf":1.4142135623730952},"traits/canonical-queries.html#a-trait-query-in-rustc":{"tf":2.23606797749979},"traits/associated-types.html#projection-equality":{"tf":1.0}},"df":11,"(":{"docs":{"traits/canonical-queries.html#a-trait-query-in-rustc":{"tf":1.0}},"df":1}}}}}},"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"c":{"docs":{},"df":0,"h":{"docs":{},"df":0,"6":{"docs":{},"df":0,"4":{"docs":{"tests/adding.html#ignoring-tests":{"tf":1.0}},"df":1}}}}}},"h":{"docs":{},"df":0,"e":{"docs":{},"df":0,"a":{"docs":{},"df":0,"d":{"docs":{"traits/canonicalization.html#executing-the-query":{"tf":1.0},"mir/index.html#key-mir-vocabulary":{"tf":1.0}},"df":2}}}},"u":{"docs":{},"df":0,"t":{"docs":{},"df":0,"o":{"docs":{"method-lookup.html#candidate-search":{"tf":1.4142135623730952},"traits/goals-and-clauses.html#coinductive-goals":{"tf":2.0}},"df":2,"d":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"f":{"docs":{"method-lookup.html#method-lookup":{"tf":1.4142135623730952}},"df":1}}}}},"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"f":{"docs":{"method-lookup.html#method-lookup":{"tf":1.0},"method-lookup.html#candidate-search":{"tf":1.0}},"df":2}}},"m":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{"tests/intro.html#testing-infrastructure":{"tf":1.0},"tests/intro.html#testing-on-emulators":{"tf":1.0},"tests/adding.html#editing-and-updating-the-reference-files":{"tf":1.0},"conventions.html#copyright-notice":{"tf":1.0},"diag.html#suggestions":{"tf":1.0},"conventions.html#using-crates-from-cratesio":{"tf":1.0},"conventions.html#formatting-and-the-tidy-script":{"tf":1.4142135623730952},"type-inference.html#type-inference":{"tf":1.0}},"df":8}}}},"h":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{"compiletest.html#introduction":{"tf":1.4142135623730952}},"df":1,"s":{"docs":{},"df":0,"h":{"docs":{},"df":0,"i":{"docs":{},"df":0,"p":{"docs":{"conventions.html#copyright-notice":{"tf":1.0}},"df":1}}}}}}}},"g":{"docs":{},"df":0,"m":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{"traits/lowering-to-logic.html#type-checking-generic-functions-beyond-horn-clauses":{"tf":1.0}},"df":1}}}}}},"t":{"docs":{},"df":0,"t":{"docs":{},"df":0,"a":{"docs":{},"df":0,"c":{"docs":{},"df":0,"h":{"docs":{"rustc-driver.html#the-rustc-driver":{"tf":1.4142135623730952},"tests/adding.html#error-annotations":{"tf":1.0},"diag.html#span":{"tf":1.0},"traits/caching.html#where-clauses-and-the-local-vs-global-cache":{"tf":1.4142135623730952},"traits/lowering-module.html#unit-tests":{"tf":1.0}},"df":5}}},"e":{"docs":{},"df":0,"m":{"docs":{},"df":0,"p":{"docs":{},"df":0,"t":{"docs":{"miri.html#miri":{"tf":1.0},"type-inference.html#region-constraints":{"tf":1.0},"tests/adding.html#other-header-commands":{"tf":1.0},"appendix/code-index.html#appendix-d-code-index":{"tf":1.0},"traits/caching.html#caching-and-subtle-considerations-therewith":{"tf":1.0},"traits/hrtb.html#basic-matching-and-skolemization-leaks":{"tf":1.0},"type-inference.html#extracting-region-constraints":{"tf":1.0},"mir/passes.html#stealing":{"tf":1.0},"traits/resolution.html#candidate-assembly":{"tf":1.0},"appendix/glossary.html#appendix-c-glossary":{"tf":1.0}},"df":10}}}},"r":{"docs":{},"df":0,"i":{"docs":{},"df":0,"b":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{"compiler-debugging.html#formatting-graphviz-output-dot-files":{"tf":1.0},"rustdoc.html#from-crate-to-clean":{"tf":1.4142135623730952},"rustdoc.html#hot-potato":{"tf":2.23606797749979},"appendix/stupid-stats.html#overview-of-the-compilation-process":{"tf":1.4142135623730952},"compiletest.html#adding-a-new-header-command":{"tf":1.0},"rustc-driver.html#the-rustc-driver":{"tf":1.0}},"df":6}}}},":":{"docs":{},"df":0,":":{"docs":{},"df":0,"f":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{},"df":0,"_":{"docs":{},"df":0,"c":{"docs":{},"df":0,"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"_":{"docs":{},"df":0,"n":{"docs":{},"df":0,"a":{"docs":{},"df":0,"m":{"docs":{},"df":0,"e":{"docs":{},"df":0,"(":{"docs":{},"df":0,"&":{"docs":{},"df":0,"k":{"docs":{},"df":0,"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,".":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{},"df":0,"t":{"docs":{},"df":0,"r":{"docs":{"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"o":{"docs":{},"df":0,"m":{"docs":{"type-inference.html#snapshots":{"tf":1.0}},"df":1}}},"m":{"docs":{},"df":0,"a":{"docs":{},"df":0,"z":{"docs":{"appendix/stupid-stats.html#appendix-a-a-tutorial-on-creating-a-drop-in-replacement-for-rustc":{"tf":1.0}},"df":1}},"b":{"docs":{},"df":0,"i":{"docs":{},"df":0,"g":{"docs":{},"df":0,"u":{"docs":{"traits/canonical-queries.html#examples":{"tf":1.4142135623730952},"traits/goals-and-clauses.html#goals-and-clauses-meta-structure":{"tf":1.0},"traits/canonical-queries.html#a-trait-query-in-rustc":{"tf":1.4142135623730952},"macro-expansion.html#the-macro-parser":{"tf":1.4142135623730952},"traits/resolution.html#candidate-assembly":{"tf":1.7320508075688773},"traits/canonicalization.html#executing-the-query":{"tf":1.0},"traits/resolution.html#overview":{"tf":1.0}},"df":7}}}},"o":{"docs":{},"df":0,"u":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{"the-parser.html#the-parser":{"tf":1.0},"traits/resolution.html#candidate-assembly":{"tf":1.0},"high-level-overview.html#crate-structure":{"tf":1.0},"high-level-overview.html#the-main-stages-of-compilation":{"tf":1.0},"type-inference.html#region-constraints":{"tf":1.0}},"df":5}}}},"e":{"docs":{},"df":0,"n":{"docs":{"method-lookup.html#method-lookup":{"tf":1.0},"hir.html#the-hir":{"tf":1.0}},"df":2}}},"r":{"docs":{},"df":0,"m":{"docs":{"tests/intro.html#testing-on-emulators":{"tf":1.7320508075688773},"tests/adding.html#ignoring-tests":{"tf":1.0},"tests/adding.html#comment-explaining-what-the-test-is-about":{"tf":1.0},"macro-expansion.html#the-macro-parser":{"tf":2.0}},"df":4,"h":{"docs":{},"df":0,"f":{"docs":{"tests/intro.html#testing-on-emulators":{"tf":1.4142135623730952}},"df":1}}},"c":{"docs":{"query.html#adding-a-new-kind-of-query":{"tf":1.0}},"df":1,"h":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{},"df":0,"u":{"docs":{},"df":0,"r":{"docs":{"tests/adding.html#ignoring-tests":{"tf":1.0},"tests/intro.html#testing-on-emulators":{"tf":1.4142135623730952}},"df":2}}}}}}}}},"b":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{},"df":0,"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{"tests/running.html#running-a-subset-of-the-test-suites":{"tf":1.0},"appendix/stupid-stats.html#compilercalls":{"tf":1.0}},"df":2}}}}}}},"t":{"docs":{},"df":0,"i":{"docs":{},"df":0,"f":{"docs":{},"df":0,"i":{"docs":{},"df":0,"c":{"docs":{},"df":0,"i":{"docs":{"traits/canonical-queries.html#examples":{"tf":1.0}},"df":1}}}}}},"g":{"docs":{"tests/adding.html#other-header-commands":{"tf":1.0},"tests/adding.html#editing-and-updating-the-reference-files":{"tf":1.0},"compiler-debugging.html#debugging-llvm":{"tf":1.7320508075688773},"tests/running.html#running-an-individual-test":{"tf":1.4142135623730952},"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.4142135623730952},"mir/regionck.html#final-example":{"tf":1.4142135623730952}},"df":6,"u":{"docs":{},"df":0,"m":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{"traits/lowering-rules.html#notation":{"tf":1.0},"rustc-driver.html#the-rustc-driver":{"tf":1.0},"variance.html#trait-variance-and-vtable-resolution":{"tf":1.0},"mir/regionck.html#final-example":{"tf":1.0},"appendix/background.html#what-is-a-free-region-or-a-free-variable-what-about-bound-region":{"tf":1.0},"mir/regionck.html#subtyping-and-skolemization":{"tf":1.4142135623730952},"traits/canonical-queries.html#examples":{"tf":1.0},"traits/associated-types.html#skolemized-associated-types":{"tf":1.0},"query.html#how-the-compiler-executes-a-query":{"tf":1.0},"mir/index.html#key-mir-vocabulary":{"tf":1.4142135623730952},"mir/regionck.html#mir-based-region-checking-nll":{"tf":1.0},"miri.html#miri":{"tf":1.0},"compiletest.html#adding-a-new-header-command":{"tf":1.7320508075688773},"mir/regionck.html#skolemization-and-universes":{"tf":1.0},"appendix/stupid-stats.html#overview-of-the-compilation-process":{"tf":1.0},"appendix/stupid-stats.html#compilercalls":{"tf":1.7320508075688773},"appendix/stupid-stats.html#appendix-a-a-tutorial-on-creating-a-drop-in-replacement-for-rustc":{"tf":1.0},"miri.html#interpretation":{"tf":1.0},"appendix/stupid-stats.html#the-driver-customisation-apis":{"tf":1.0},"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":3.0},"mir/regionck.html#another-example":{"tf":2.0},"traits/lowering-to-logic.html#type-checking-normal-functions":{"tf":1.0},"query.html#adding-a-new-kind-of-query":{"tf":1.7320508075688773}},"df":23}}}}},"_":{"docs":{},"df":0,"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"u":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.0}},"df":1}}}}}}},"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"y":{"docs":{"miri.html#miri":{"tf":1.4142135623730952},"const-eval.html#constant-evaluation":{"tf":1.0},"variance.html#trait-variance-and-vtable-resolution":{"tf":1.0},"traits/canonicalization.html#canonicalizing-the-query":{"tf":1.0}},"df":4,"_":{"docs":{},"df":0,"t":{"docs":{},"df":0,"i":{"docs":{"ty.html#allocating-and-working-with-types":{"tf":1.0}},"df":1}}}}}},"i":{"docs":{},"df":0,"s":{"docs":{"appendix/background.html#appendix-b-background-topics":{"tf":1.0},"mir/regionck.html#mir-based-region-checking-nll":{"tf":1.4142135623730952},"query.html#cycles-between-queries":{"tf":1.4142135623730952},"traits/associated-types.html#associated-type-projection-and-normalization":{"tf":1.0},"type-inference.html#inference-variables":{"tf":1.7320508075688773}},"df":5}},"e":{"docs":{},"df":0,"a":{"docs":{"name-resolution.html#scopes-and-ribs":{"tf":1.0},"tests/adding.html#naming-your-test":{"tf":1.0}},"df":2},"n":{"docs":{},"df":0,"'":{"docs":{},"df":0,"t":{"docs":{"tests/intro.html#other-tests":{"tf":1.0},"tests/intro.html#testing-on-emulators":{"tf":1.0},"variance.html#trait-variance-and-vtable-resolution":{"tf":1.0}},"df":3}},"a":{"docs":{"ty.html#the-tcx-and-how-it-uses-lifetimes":{"tf":4.0},"appendix/glossary.html#appendix-c-glossary":{"tf":1.0},"rustc-driver.html#a-note-on-lifetimes":{"tf":1.0},"ty.html#allocating-and-working-with-types":{"tf":2.0},"type-inference.html#creating-an-inference-context":{"tf":1.7320508075688773},"ty.html#beyond-types-other-kinds-of-arena-allocated-data-structures":{"tf":1.4142135623730952}},"df":6}}},"o":{"docs":{},"df":0,"s":{"docs":{"mir/regionck.html#what-is-a-universe":{"tf":1.0}},"df":1},"u":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{"ty.html#the-tcx-and-how-it-uses-lifetimes":{"tf":1.0},"hir.html#identifiers-in-the-hir":{"tf":1.4142135623730952},"macro-expansion.html#the-macro-parser":{"tf":1.0},"mir/index.html#mir-data-types":{"tf":1.0},"appendix/glossary.html#appendix-c-glossary":{"tf":1.4142135623730952},"rustdoc.html#from-clean-to-crate":{"tf":1.0},"rustdoc.html#from-crate-to-clean":{"tf":1.0},"traits/index.html#trait-solving-new-style":{"tf":1.0},"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.0}},"df":9}}}}},"l":{"docs":{"variance.html#variance-of-type-and-lifetime-parameters":{"tf":1.0}},"df":1,"o":{"docs":{},"df":0,"n":{"docs":{"appendix/stupid-stats.html#overview-of-the-compilation-process":{"tf":1.0}},"df":1,"g":{"docs":{"mir/passes.html#implementing-and-registering-a-pass":{"tf":1.4142135623730952},"traits/goals-and-clauses.html#domain-goals":{"tf":1.4142135623730952},"method-lookup.html#candidate-assembly":{"tf":1.0},"compiletest.html#introduction":{"tf":1.0},"mir/index.html#mir-data-types":{"tf":1.0},"rustdoc.html#from-soup-to-nuts":{"tf":1.0},"incremental-compilation.html#the-query-dag":{"tf":1.0},"ty.html#beyond-types-other-kinds-of-arena-allocated-data-structures":{"tf":1.0},"conventions.html#how-to-structure-your-pr":{"tf":1.0},"appendix/glossary.html#appendix-c-glossary":{"tf":1.4142135623730952},"method-lookup.html#method-lookup":{"tf":1.0},"mir/regionck.html#what-is-a-universe":{"tf":1.0},"traits/caching.html#an-example":{"tf":1.0},"traits/lowering-rules.html#associated-type-declarations":{"tf":1.0}},"df":14,"s":{"docs":{},"df":0,"i":{"docs":{},"df":0,"d":{"docs":{"rustdoc.html#from-soup-to-nuts":{"tf":1.0},"rustdoc.html#from-clean-to-crate":{"tf":1.0}},"df":2}}}}}},"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"t":{"docs":{"query.html#adding-a-new-kind-of-query":{"tf":1.0}},"df":1}}},"i":{"docs":{},"df":0,"a":{"docs":{"ty.html#allocating-and-working-with-types":{"tf":1.4142135623730952}},"df":1}},"g":{"docs":{},"df":0,"e":{"docs":{},"df":0,"b":{"docs":{},"df":0,"r":{"docs":{},"df":0,"a":{"docs":{"appendix/glossary.html#appendix-c-glossary":{"tf":1.0}},"df":1}}}},"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{},"df":0,"h":{"docs":{},"df":0,"m":{"docs":{"variance.html#variance-of-type-and-lifetime-parameters":{"tf":1.0},"type-inference.html#region-constraints":{"tf":1.0},"type-inference.html#type-inference":{"tf":1.0},"incremental-compilation.html#footnotes":{"tf":1.0},"traits/resolution.html#selection":{"tf":1.0},"incremental-compilation.html#improvements-to-the-basic-algorithm":{"tf":2.0},"incremental-compilation.html#the-try-mark-green-algorithm":{"tf":1.4142135623730952},"traits/hrtb.html#basic-matching-and-skolemization-leaks":{"tf":1.0},"macro-expansion.html#the-macro-parser":{"tf":1.7320508075688773},"incremental-compilation.html#incremental-compilation":{"tf":1.0},"variance.html#dependency-graph-management":{"tf":1.0},"variance.html#variance-and-object-types":{"tf":1.0},"variance.html#the-algorithm":{"tf":1.0},"incremental-compilation.html#the-basic-algorithm":{"tf":1.7320508075688773}},"df":14}}}}}}},"w":{"docs":{},"df":0,"a":{"docs":{},"df":0,"y":{"docs":{"incremental-compilation.html#the-basic-algorithm":{"tf":1.0},"how-to-build-and-run.html#create-a-configtoml":{"tf":1.0},"tests/adding.html#ignoring-tests":{"tf":1.4142135623730952},"variance.html#variance-and-object-types":{"tf":1.0},"miri.html#miri":{"tf":1.0},"mir/regionck.html#back-to-our-example":{"tf":1.4142135623730952},"mir/passes.html#implementing-and-registering-a-pass":{"tf":1.0},"query.html#cycles-between-queries":{"tf":1.0},"compiletest.html#introduction":{"tf":1.0},"query.html#how-the-compiler-executes-a-query":{"tf":1.0},"type-inference.html#trying-equality":{"tf":1.0},"variance.html#the-algorithm":{"tf":1.4142135623730952},"traits/canonicalization.html#canonicalization":{"tf":1.0},"tests/adding.html#adding-new-tests":{"tf":1.0},"conventions.html#how-to-structure-your-pr":{"tf":1.4142135623730952},"rustc-driver.html#the-rustc-driver":{"tf":1.0},"traits/associated-types.html#associated-type-projection-and-normalization":{"tf":1.4142135623730952},"traits/resolution.html#candidate-assembly":{"tf":1.0},"ty.html#allocating-and-working-with-types":{"tf":2.0},"traits/associated-types.html#integration-with-unification":{"tf":1.0},"mir/index.html#key-mir-vocabulary":{"tf":1.4142135623730952},"method-lookup.html#candidate-assembly":{"tf":1.0},"traits/index.html#trait-solving-new-style":{"tf":1.0},"tests/running.html#running-an-individual-test":{"tf":1.0},"variance.html#variance-and-associated-types":{"tf":1.0}},"df":25}}},"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"a":{"docs":{},"df":0,"d":{"docs":{},"df":0,"i":{"docs":{"name-resolution.html#overall-strategy":{"tf":1.0},"traits/resolution.html#selection":{"tf":1.0},"mir/regionck.html#skolemization-and-outlives-constraints":{"tf":1.0},"query.html#cycles-between-queries":{"tf":1.0},"mir/passes.html#stealing":{"tf":1.4142135623730952},"compiler-debugging.html#getting-logging-output":{"tf":1.0},"query.html#how-the-compiler-executes-a-query":{"tf":1.0},"appendix/stupid-stats.html#what-next":{"tf":1.0},"conventions.html#how-to-structure-your-pr":{"tf":1.0},"tests/adding.html#comment-explaining-what-the-test-is-about":{"tf":1.0},"tests/adding.html#naming-your-test":{"tf":1.0}},"df":11}}}}},"l":{"docs":{},"df":0,"o":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{"mir/index.html#key-mir-vocabulary":{"tf":1.0}},"df":1}},"w":{"docs":{"rustc-driver.html#the-rustc-driver":{"tf":1.4142135623730952},"miri.html#interpretation":{"tf":1.4142135623730952},"diag.html#span":{"tf":1.0},"traits/index.html#trait-solving-new-style":{"tf":1.0},"type-inference.html#type-inference":{"tf":1.0},"tests/adding.html#revisions":{"tf":1.0},"type-inference.html#snapshots":{"tf":1.0},"mir/regionck.html#what-is-a-universe":{"tf":1.0},"param_env.html#parameter-environment":{"tf":1.0},"appendix/glossary.html#appendix-c-glossary":{"tf":1.0},"incrcomp-debugging.html#dumping-the-graph":{"tf":1.0},"diag.html#declaring-a-lint":{"tf":1.0},"conventions.html#using-crates-from-cratesio":{"tf":1.0},"diag.html#edition-gated-lints":{"tf":1.4142135623730952},"incremental-compilation.html#the-query-dag":{"tf":1.0},"traits/lowering-to-logic.html#type-checking-generic-functions-beyond-horn-clauses":{"tf":1.0},"conventions.html#how-to-structure-your-pr":{"tf":1.0},"variance.html#addendum-variance-on-traits":{"tf":1.0},"compiletest.html#introduction":{"tf":1.4142135623730952},"traits/lowering-rules.html#trait-header":{"tf":1.4142135623730952},"traits/chalk-overview.html#lowering":{"tf":1.0},"rustdoc.html#dotting-is-and-crossing-ts":{"tf":1.0},"mir/borrowck.html#major-phases-of-the-borrow-checker":{"tf":1.0},"diag.html#error-messages":{"tf":1.7320508075688773},"incremental-compilation.html#the-try-mark-green-algorithm":{"tf":1.0},"macro-expansion.html#example":{"tf":1.0},"mir/passes.html#seeing-how-the-mir-changes-as-the-compiler-executes":{"tf":1.0}},"df":27},"c":{"docs":{"mir/passes.html#stealing":{"tf":1.0},"miri.html#miri":{"tf":1.7320508075688773},"const-eval.html#constant-evaluation":{"tf":1.0},"mir/index.html#key-mir-vocabulary":{"tf":1.4142135623730952},"appendix/stupid-stats.html#overview-of-the-compilation-process":{"tf":1.0},"ty.html#the-tcx-and-how-it-uses-lifetimes":{"tf":2.23606797749979},"miri.html#datastructures":{"tf":1.4142135623730952},"miri.html#interpretation":{"tf":1.4142135623730952},"ty.html#beyond-types-other-kinds-of-arena-allocated-data-structures":{"tf":2.0},"how-to-build-and-run.html#create-a-configtoml":{"tf":1.0},"miri.html#allocations":{"tf":3.0},"ty.html#allocating-and-working-with-types":{"tf":2.449489742783178}},"df":12}}},"t":{"docs":{"compiler-debugging.html#debugging-llvm":{"tf":1.0}},"df":1,"h":{"docs":{},"df":0,"o":{"docs":{},"df":0,"u":{"docs":{},"df":0,"g":{"docs":{},"df":0,"h":{"docs":{"traits/bibliography.html#bibliography":{"tf":1.0},"appendix/stupid-stats.html#appendix-a-a-tutorial-on-creating-a-drop-in-replacement-for-rustc":{"tf":1.4142135623730952},"appendix/stupid-stats.html#overview-of-the-compilation-process":{"tf":1.0},"ty.html#import-conventions":{"tf":1.0},"compiletest.html#implementing-the-behavior-change":{"tf":1.0},"mir/index.html#key-mir-vocabulary":{"tf":1.0},"high-level-overview.html#crate-structure":{"tf":1.0},"rustc-driver.html#a-note-on-lifetimes":{"tf":1.0},"appendix/stupid-stats.html#what-next":{"tf":1.0},"miri.html#interpretation":{"tf":1.0},"param_env.html#parameter-environment":{"tf":1.0},"mir/regionck.html#what-is-a-universe":{"tf":1.0},"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.0}},"df":13}}}}},"i":{"docs":{},"df":0,"d":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{"variance.html#variance-of-type-and-lifetime-parameters":{"tf":1.0}},"df":1}}}},"e":{"docs":{},"df":0,"r":{"docs":{"traits/lowering-rules.html#transforming-the-lowered-where-clauses":{"tf":1.0}},"df":1,"n":{"docs":{"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.0},"rustdoc.html#from-soup-to-nuts":{"tf":1.0},"mir/passes.html#stealing":{"tf":1.0},"high-level-overview.html#the-main-stages-of-compilation":{"tf":1.0}},"df":4}}}},"p":{"docs":{},"df":0,"h":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"u":{"docs":{},"df":0,"m":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"appendix/glossary.html#appendix-c-glossary":{"tf":1.0}},"df":1}}}}}}}}},"w":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{"tests/adding.html#adding-new-tests":{"tf":1.0},"conventions.html#how-to-structure-your-pr":{"tf":1.0},"compiler-debugging.html#expensive-operations-in-logs":{"tf":1.0},"type-inference.html#trying-equality":{"tf":1.0}},"df":4},"y":{"docs":{"compiler-debugging.html#debugging-llvm":{"tf":1.0},"hir.html#the-hir":{"tf":1.0},"traits/canonicalization.html#canonicalizing-the-query-result":{"tf":1.0},"mir/regionck.html#what-is-a-universe":{"tf":1.0},"appendix/stupid-stats.html#overview-of-the-compilation-process":{"tf":1.0},"ty.html#the-tcx-and-how-it-uses-lifetimes":{"tf":1.4142135623730952},"macro-expansion.html#example":{"tf":1.0},"traits/canonical-queries.html#the-traditional-interactive-prolog-query":{"tf":1.0}},"df":8}}},"d":{"docs":{"traits/lowering-rules.html#function-and-constant-values":{"tf":1.0},"conventions.html#prefer-exhaustive-matches":{"tf":1.4142135623730952},"diag.html#suggestions":{"tf":1.0},"compiletest.html#introduction":{"tf":1.0},"conventions.html#using-crates-from-cratesio":{"tf":1.0},"query.html#adding-a-new-kind-of-query":{"tf":1.7320508075688773},"tests/adding.html#revisions":{"tf":1.0},"traits/resolution.html#candidate-assembly":{"tf":1.0},"traits/chalk-overview.html#an-overview-of-chalk":{"tf":1.0},"appendix/stupid-stats.html#compilercalls":{"tf":1.0},"traits/canonical-queries.html#the-traditional-interactive-prolog-query":{"tf":1.0},"compiletest.html#adding-a-new-header-command":{"tf":1.7320508075688773},"compiletest.html#adding-a-new-test-file":{"tf":1.7320508075688773},"compiler-debugging.html#logging-etiquette":{"tf":1.0},"hir.html#identifiers-in-the-hir":{"tf":1.0},"mir/regionck.html#what-is-a-universe":{"tf":1.4142135623730952},"traits/goals-and-clauses.html#coinductive-goals":{"tf":1.0},"conventions.html#how-to-structure-your-pr":{"tf":1.0},"tests/adding.html#adding-new-tests":{"tf":1.0}},"df":19,"a":{"docs":{},"df":0,"p":{"docs":{},"df":0,"t":{"docs":{"traits/lowering-to-logic.html#source":{"tf":1.0}},"df":1}}},"d":{"docs":{"appendix/stupid-stats.html#appendix-a-a-tutorial-on-creating-a-drop-in-replacement-for-rustc":{"tf":1.0},"tests/adding.html#adding-new-tests":{"tf":1.0},"diag.html#error-messages":{"tf":1.0},"mir/regionck.html#final-example":{"tf":1.0},"compiler-debugging.html#debugging-llvm":{"tf":1.0},"rustdoc.html#hot-potato":{"tf":1.0},"tests/adding.html#revisions":{"tf":1.0},"query.html#how-the-compiler-executes-a-query":{"tf":1.0},"diag.html#edition-gated-lints":{"tf":1.0},"mir/regionck.html#mir-based-region-checking-nll":{"tf":1.0},"mir/regionck.html#skolemization-and-outlives-constraints":{"tf":1.7320508075688773},"rustdoc.html#from-clean-to-crate":{"tf":1.0},"tests/intro.html#the-compiler-testing-framework":{"tf":1.0},"appendix/stupid-stats.html#compilercontroller":{"tf":1.0},"conventions.html#line-length":{"tf":1.0},"query.html#adding-a-new-kind-of-query":{"tf":2.449489742783178},"tests/adding.html#what-kind-of-test-should-i-add":{"tf":1.0},"type-inference.html#enforcing-equality--subtyping":{"tf":1.0},"tests/adding.html#error-annotations":{"tf":1.4142135623730952},"compiletest.html#adding-a-new-header-command":{"tf":1.7320508075688773},"tests/adding.html#tests-that-do-not-result-in-compile-errors":{"tf":1.0},"appendix/stupid-stats.html#compilercalls":{"tf":1.0},"rustdoc.html#cheat-sheet":{"tf":1.0},"diag.html#suggestions":{"tf":1.0}},"df":24,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"s":{"docs":{"appendix/glossary.html#appendix-c-glossary":{"tf":1.7320508075688773}},"df":1}}}},"_":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{},"df":0,"_":{"docs":{},"df":0,"g":{"docs":{},"df":0,"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"u":{"docs":{},"df":0,"p":{"docs":{"diag.html#lint-groups":{"tf":1.0}},"df":1,"!":{"docs":{},"df":0,"(":{"docs":{},"df":0,"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"s":{"docs":{"diag.html#lint-groups":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}},"<":{"docs":{},"df":0,"i":{"docs":{},"df":0,"3":{"docs":{},"df":0,"2":{"docs":{"traits/goals-and-clauses.html#domain-goals":{"tf":1.0}},"df":1}}}},"i":{"docs":{},"df":0,"t":{"docs":{"mir/visitor.html#traversal":{"tf":1.0},"miri.html#miri":{"tf":1.0},"appendix/glossary.html#appendix-c-glossary":{"tf":1.4142135623730952},"query.html#adding-a-new-kind-of-query":{"tf":1.0},"miri.html#interpretation":{"tf":1.0},"ty.html#beyond-types-other-kinds-of-arena-allocated-data-structures":{"tf":1.0},"rustdoc.html#dotting-is-and-crossing-ts":{"tf":1.0},"traits/lowering-rules.html#transforming-the-lowered-where-clauses":{"tf":1.0},"compiletest.html#adding-a-new-header-command":{"tf":1.0},"traits/chalk-overview.html#intermediate-representation-ir":{"tf":1.0},"compiletest.html#introduction":{"tf":1.0},"traits/specialization.html#specialization":{"tf":1.0},"traits/lowering-rules.html#lowering-impls":{"tf":1.0},"name-resolution.html#scopes-and-ribs":{"tf":1.0},"traits/goals-and-clauses.html#coinductive-goals":{"tf":1.0}},"df":15,"i":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{"miri.html#allocations":{"tf":1.0},"const-eval.html#constant-evaluation":{"tf":1.0}},"df":2}}}}},"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{},"df":0,"u":{"docs":{},"df":0,"m":{"docs":{"variance.html#variance-of-type-and-lifetime-parameters":{"tf":1.0},"variance.html#addendum-variance-on-traits":{"tf":1.0}},"df":2}}}}}},"j":{"docs":{"method-lookup.html#method-lookup":{"tf":1.0}},"df":1,"u":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{"tests/adding.html#editing-and-updating-the-reference-files":{"tf":1.0},"method-lookup.html#method-lookup":{"tf":1.7320508075688773}},"df":2}}}},"v":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{},"df":0,"a":{"docs":{},"df":0,"g":{"docs":{"mir/borrowck.html#mir-borrow-check":{"tf":1.0}},"df":1}}}}},"i":{"docs":{},"df":0,"c":{"docs":{"conventions.html#prefer-exhaustive-matches":{"tf":1.0}},"df":1}}}},"g":{"docs":{},"df":0,"a":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{"query.html#cycles-between-queries":{"tf":1.0},"traits/canonical-queries.html#the-traditional-interactive-prolog-query":{"tf":1.0},"type-inference.html#creating-an-inference-context":{"tf":1.0},"traits/canonicalization.html#canonicalizing-the-query-result":{"tf":1.0},"mir/regionck.html#what-is-a-universe":{"tf":1.0},"traits/canonical-queries.html#examples":{"tf":1.0},"appendix/stupid-stats.html#compilercontroller":{"tf":1.0},"type-inference.html#subtyping-obligations":{"tf":1.0},"tests/adding.html#other-header-commands":{"tf":1.0},"appendix/stupid-stats.html#overview-of-the-compilation-process":{"tf":1.0},"how-to-build-and-run.html#running-xpy-and-building-a-stage1-compiler":{"tf":1.4142135623730952},"traits/goals-and-clauses.html#coinductive-goals":{"tf":1.0}},"df":12,"s":{"docs":{},"df":0,"t":{"docs":{"macro-expansion.html#the-macro-parser":{"tf":1.7320508075688773},"traits/hrtb.html#basic-matching-and-skolemization-leaks":{"tf":1.0},"traits/resolution.html#candidate-assembly":{"tf":1.4142135623730952},"tests/adding.html#guide-to-the-ui-tests":{"tf":1.0},"traits/chalk-overview.html#an-overview-of-chalk":{"tf":1.0},"method-lookup.html#candidate-search":{"tf":1.0},"incrcomp-debugging.html#tracking-down-incorrect-edges":{"tf":1.0},"incrcomp-debugging.html#testing-the-dependency-graph":{"tf":1.0}},"df":8}}}}},"o":{"docs":{"mir/regionck.html#another-example":{"tf":1.0}},"df":1}},"i":{"docs":{"traits/lowering-rules.html#notation":{"tf":1.0}},"df":1,"r":{"docs":{"traits/lowering-rules.html#function-and-constant-values":{"tf":1.0}},"df":1},"m":{"docs":{"appendix/glossary.html#appendix-c-glossary":{"tf":1.0},"tests/adding.html#normalization":{"tf":1.0},"macro-expansion.html#macro-expansion":{"tf":1.0},"traits/chalk-overview.html#lowering":{"tf":1.0}},"df":4}},"2":{"docs":{"traits/resolution.html#candidate-assembly":{"tf":1.7320508075688773}},"df":1},"f":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"m":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{"rustdoc.html#other-tricks-up-its-sleeve":{"tf":1.0}},"df":1}}}}}}},"f":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{"appendix/glossary.html#appendix-c-glossary":{"tf":1.0},"variance.html#constraints":{"tf":1.0},"traits/resolution.html#candidate-assembly":{"tf":1.0},"appendix/stupid-stats.html#appendix-a-a-tutorial-on-creating-a-drop-in-replacement-for-rustc":{"tf":1.0}},"df":4,"i":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{"conventions.html#formatting-and-the-tidy-script":{"tf":1.0}},"df":1}}}}}}},"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"_":{"docs":{"appendix/stupid-stats.html#compilercontroller":{"tf":1.0}},"df":1}}}}},"s":{"docs":{},"df":0,"i":{"docs":{},"df":0,"d":{"docs":{"traits/associated-types.html#associated-type-projection-and-normalization":{"tf":1.0},"macro-expansion.html#macro-expansion":{"tf":1.0},"variance.html#variance-and-object-types":{"tf":1.0}},"df":3}},"c":{"docs":{},"df":0,"i":{"docs":{},"df":0,"i":{"docs":{"appendix/glossary.html#appendix-c-glossary":{"tf":1.0}},"df":1}}},"m":{"docs":{},"df":0,".":{"docs":{},"df":0,"j":{"docs":{"tests/intro.html#testing-on-emulators":{"tf":1.0}},"df":1}},"j":{"docs":{"tests/adding.html#ignoring-tests":{"tf":1.0}},"df":1}},"t":{"docs":{"rustdoc.html#from-crate-to-clean":{"tf":1.7320508075688773},"hir.html#the-hir":{"tf":1.4142135623730952},"hir.html#out-of-band-storage-and-the--crate--type":{"tf":1.0},"appendix/stupid-stats.html#overview-of-the-compilation-process":{"tf":3.1622776601683797},"appendix/code-index.html#appendix-d-code-index":{"tf":1.4142135623730952},"traits/chalk-overview.html#parsing":{"tf":1.7320508075688773},"appendix/stupid-stats.html#compilercontroller":{"tf":1.7320508075688773},"the-parser.html#the-parser":{"tf":3.1622776601683797},"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":2.8284271247461905},"rustc-driver.html#the-rustc-driver":{"tf":1.4142135623730952},"rustdoc.html#the-walking-tour-of-rustdoc":{"tf":1.4142135623730952},"rustdoc.html#hot-potato":{"tf":1.0},"tests/intro.html#compiletest-test-suites":{"tf":1.0},"rustc-driver.html#a-note-on-lifetimes":{"tf":1.4142135623730952},"traits/chalk-overview.html#intermediate-representation-ir":{"tf":1.0},"appendix/glossary.html#appendix-c-glossary":{"tf":2.0},"rustdoc.html#from-soup-to-nuts":{"tf":1.0},"traits/chalk-overview.html#well-formedness-checks":{"tf":1.0},"high-level-overview.html#the-main-stages-of-compilation":{"tf":2.8284271247461905}},"df":19,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"m":{"docs":{"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.0}},"df":1,"_":{"docs":{},"df":0,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"m":{"docs":{},"df":0,"f":{"docs":{},"df":0,"n":{"docs":{},"df":0,"(":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"f":{"docs":{"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}},"m":{"docs":{},"df":0,"a":{"docs":{},"df":0,"c":{"docs":{"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.0}},"df":1,"_":{"docs":{},"df":0,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"m":{"docs":{},"df":0,"a":{"docs":{},"df":0,"c":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"v":{"docs":{},"df":0,"o":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{},"df":0,"t":{"docs":{},"df":0,"(":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"f":{"docs":{"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}}},"l":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{},"df":0,"k":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{},"df":0,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"b":{"docs":{},"df":0,"o":{"docs":{},"df":0,"o":{"docs":{},"df":0,"l":{"docs":{},"df":0,"(":{"docs":{},"df":0,"t":{"docs":{},"df":0,"r":{"docs":{},"df":0,"u":{"docs":{"diag.html#declaring-a-lint":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}},"c":{"docs":{},"df":0,"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{"appendix/code-index.html#appendix-d-code-index":{"tf":1.0}},"df":1}}}}}}},"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"t":{"docs":{"how-to-build-and-run.html#create-a-configtoml":{"tf":2.0},"incrcomp-debugging.html#tracking-down-incorrect-edges":{"tf":1.0},"compiler-debugging.html#debugging-llvm":{"tf":2.23606797749979},"compiler-debugging.html#getting-logging-output":{"tf":1.0},"ty.html#the-tcx-and-how-it-uses-lifetimes":{"tf":1.4142135623730952},"miri.html#miri":{"tf":1.4142135623730952}},"df":6,"i":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"s":{"docs":{},"df":0,"=":{"docs":{},"df":0,"y":{"docs":{"compiler-debugging.html#getting-logging-output":{"tf":1.4142135623730952}},"df":1},"t":{"docs":{},"df":0,"r":{"docs":{},"df":0,"u":{"docs":{"compiler-debugging.html#debugging-llvm":{"tf":1.0}},"df":1}}}}}}}},"(":{"docs":{},"df":0,"!":{"docs":{},"df":0,"(":{"docs":{},"df":0,"_":{"docs":{},"df":0,"1":{"docs":{},"df":0,".":{"docs":{},"df":0,"1":{"docs":{"miri.html#miri":{"tf":1.0}},"df":1}}}}}}}}},"m":{"docs":{},"df":0,"b":{"docs":{},"df":0,"l":{"docs":{"traits/resolution.html#candidate-assembly":{"tf":2.0},"traits/resolution.html#selection":{"tf":1.0},"method-lookup.html#candidate-assembly":{"tf":1.0}},"df":3}}}},"u":{"docs":{},"df":0,"m":{"docs":{"traits/goals-and-clauses.html#domain-goals":{"tf":1.4142135623730952},"traits/lowering-rules.html#associated-type-declarations":{"tf":1.0},"mir/regionck.html#skolemization-and-outlives-constraints":{"tf":1.0},"traits/lowering-rules.html#trait-header":{"tf":1.4142135623730952},"traits/resolution.html#candidate-assembly":{"tf":1.0},"macro-expansion.html#example":{"tf":1.0},"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.0},"traits/lowering-to-logic.html#type-checking-generic-functions-beyond-horn-clauses":{"tf":1.0},"variance.html#constraints":{"tf":1.4142135623730952}},"df":9}},"i":{"docs":{},"df":0,"g":{"docs":{},"df":0,"n":{"docs":{"high-level-overview.html#the-main-stages-of-compilation":{"tf":1.0},"traits/canonical-queries.html#examples":{"tf":1.4142135623730952},"incremental-compilation.html#the-try-mark-green-algorithm":{"tf":1.0},"mir/regionck.html#what-is-a-universe":{"tf":1.0},"incremental-compilation.html#the-basic-algorithm":{"tf":1.0},"mir/regionck.html#final-example":{"tf":1.0},"type-inference.html#lexical-region-resolution":{"tf":1.0},"traits/resolution.html#selection":{"tf":1.0},"mir/index.html#key-mir-vocabulary":{"tf":1.7320508075688773}},"df":9}}},"o":{"docs":{},"df":0,"c":{"docs":{},"df":0,"i":{"docs":{"hir.html#the-hir-map":{"tf":1.0},"rustdoc.html#from-crate-to-clean":{"tf":1.0},"traits/hrtb.html#higher-ranked-trait-obligations":{"tf":1.0},"traits/specialization.html#specialization":{"tf":1.4142135623730952},"traits/canonical-queries.html#canonical-queries":{"tf":1.0},"traits/index.html#trait-solving-new-style":{"tf":1.0},"variance.html#variance-and-associated-types":{"tf":1.7320508075688773},"hir.html#hir-bodies":{"tf":1.4142135623730952},"traits/lowering-rules.html#associated-type-values":{"tf":1.4142135623730952},"tests/adding.html#error-annotations":{"tf":1.7320508075688773},"traits/associated-types.html#skolemized-associated-types":{"tf":2.449489742783178},"appendix/code-index.html#appendix-d-code-index":{"tf":1.0},"param_env.html#parameter-environment":{"tf":1.4142135623730952},"traits/associated-types.html#associated-type-projection-and-normalization":{"tf":2.449489742783178},"traits/associated-types.html#integration-with-unification":{"tf":1.4142135623730952},"traits/lowering-rules.html#associated-type-declarations":{"tf":2.449489742783178},"traits/associated-types.html#equality-and-associated-types":{"tf":1.4142135623730952},"traits/lowering-module.html#the--program_clauses_for--query":{"tf":1.0},"compiletest.html#adding-a-new-header-command":{"tf":1.0},"appendix/glossary.html#appendix-c-glossary":{"tf":1.4142135623730952},"traits/associated-types.html#projection-equality":{"tf":2.23606797749979},"variance.html#addendum-variance-on-traits":{"tf":1.4142135623730952},"high-level-overview.html#the-main-stages-of-compilation":{"tf":1.0},"traits/goals-and-clauses.html#domain-goals":{"tf":2.449489742783178},"traits/canonical-queries.html#a-trait-query-in-rustc":{"tf":1.0},"method-lookup.html#candidate-assembly":{"tf":1.4142135623730952},"traits/lowering-to-logic.html#type-checking-normal-functions":{"tf":1.0},"query.html#adding-a-new-kind-of-query":{"tf":1.0}},"df":28},"t":{"docs":{},"df":0,"i":{"docs":{"traits/lowering-rules.html#associated-type-declarations":{"tf":2.0}},"df":1},"y":{"docs":{},"df":0,"p":{"docs":{},"df":0,"e":{"docs":{},"df":0,"<":{"docs":{},"df":0,"p":{"docs":{},"df":0,"n":{"docs":{},"df":0,"+":{"docs":{},"df":0,"1":{"docs":{},"df":0,".":{"docs":{},"df":0,".":{"docs":{},"df":0,"p":{"docs":{},"df":0,"m":{"docs":{"traits/lowering-rules.html#associated-type-values":{"tf":1.0},"traits/lowering-rules.html#associated-type-declarations":{"tf":1.0}},"df":2}}}}}}}}}}}}}}}},"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"f":{"docs":{"traits/canonical-queries.html#the-traditional-interactive-prolog-query":{"tf":1.0}},"df":1,"<":{"docs":{},"df":0,"v":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"<":{"docs":{},"df":0,"i":{"docs":{},"df":0,"3":{"docs":{},"df":0,"2":{"docs":{"traits/canonical-queries.html#the-traditional-interactive-prolog-query":{"tf":1.0}},"df":1}}}}}}},"?":{"docs":{},"df":0,"u":{"docs":{"traits/canonical-queries.html#the-traditional-interactive-prolog-query":{"tf":1.0}},"df":1}},"[":{"docs":{},"df":0,"i":{"docs":{},"df":0,"3":{"docs":{},"df":0,"2":{"docs":{"traits/canonical-queries.html#the-traditional-interactive-prolog-query":{"tf":1.0}},"df":1}}}},"t":{"docs":{"traits/canonical-queries.html#the-traditional-interactive-prolog-query":{"tf":1.0}},"df":1}}}}},"k":{"docs":{"traits/associated-types.html#integration-with-unification":{"tf":1.0},"appendix/glossary.html#appendix-c-glossary":{"tf":1.0},"conventions.html#prefer-exhaustive-matches":{"tf":1.0},"query.html#queries-demand-driven-compilation":{"tf":1.0},"name-resolution.html#name-resolution":{"tf":1.0},"rustdoc.html#from-soup-to-nuts":{"tf":1.7320508075688773},"traits/canonicalization.html#canonicalizing-the-query":{"tf":1.0},"traits/canonical-queries.html#the-traditional-interactive-prolog-query":{"tf":1.0}},"df":8},"p":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{"query.html#adding-a-new-kind-of-query":{"tf":1.0},"tests/adding.html#guide-to-the-ui-tests":{"tf":1.0}},"df":2}}}}},"1":{"docs":{"traits/resolution.html#candidate-assembly":{"tf":2.0}},"df":1},"p":{"docs":{},"df":0,"p":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{"tests/adding.html#other-header-commands":{"tf":1.0},"traits/hrtb.html#higher-ranked-trait-obligations":{"tf":1.0},"tests/adding.html#normalization":{"tf":1.0},"traits/index.html#trait-solving-new-style":{"tf":1.0},"traits/lowering-to-logic.html#type-checking-normal-functions":{"tf":1.0},"traits/canonical-queries.html#examples":{"tf":1.0},"traits/resolution.html#candidate-assembly":{"tf":2.23606797749979},"traits/lowering-to-logic.html#rust-traits-and-logic":{"tf":1.0},"method-lookup.html#steps":{"tf":1.0},"mir/regionck.html#what-is-a-universe":{"tf":1.0},"traits/caching.html#an-example":{"tf":1.4142135623730952},"traits/canonicalization.html#executing-the-query":{"tf":1.0},"diag.html#suggestions":{"tf":2.23606797749979},"variance.html#trait-variance-and-vtable-resolution":{"tf":1.0},"mir/passes.html#mir-passes":{"tf":1.7320508075688773},"appendix/background.html#what-is-a-free-region-or-a-free-variable-what-about-bound-region":{"tf":1.0},"conventions.html#prefer-exhaustive-matches":{"tf":1.0},"incrcomp-debugging.html#tracking-down-incorrect-edges":{"tf":1.0},"tests/adding.html#revisions":{"tf":1.0},"traits/associated-types.html#associated-type-projection-and-normalization":{"tf":1.0},"traits/canonicalization.html#processing-the-canonicalized-query-result":{"tf":1.4142135623730952},"type-inference.html#inference-variables":{"tf":1.0},"traits/specialization.html#specialization":{"tf":1.7320508075688773},"traits/resolution.html#selection-during-translation":{"tf":1.0},"type-inference.html#enforcing-equality--subtyping":{"tf":1.0},"tests/adding.html#guide-to-the-ui-tests":{"tf":1.0},"traits/resolution.html#selection":{"tf":1.0},"method-lookup.html#method-lookup":{"tf":1.0}},"df":28,"c":{"docs":{"traits/associated-types.html#projection-equality":{"tf":1.0},"diag.html#suggestions":{"tf":2.23606797749979},"traits/lowering-to-logic.html#rust-traits-and-logic":{"tf":1.0},"traits/resolution.html#candidate-assembly":{"tf":1.0},"variance.html#addendum-variance-on-traits":{"tf":1.0}},"df":5,"a":{"docs":{},"df":0,"b":{"docs":{},"df":0,"i":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{},"df":0,"y":{"docs":{},"df":0,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"m":{"docs":{},"df":0,"a":{"docs":{},"df":0,"c":{"docs":{},"df":0,"h":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"e":{"docs":{},"df":0,"a":{"docs":{},"df":0,"p":{"docs":{},"df":0,"p":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{},"df":0,"c":{"docs":{"diag.html#suggestions":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}}}}}}}},"v":{"docs":{},"df":0,"e":{"docs":{},"df":0,"y":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{"tests/intro.html#testing-infrastructure":{"tf":1.0}},"df":1}}}}},"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"a":{"docs":{},"df":0,"c":{"docs":{},"df":0,"h":{"docs":{"traits/specialization.html#specialization":{"tf":1.0}},"df":1}}},"x":{"docs":{},"df":0,"i":{"docs":{},"df":0,"m":{"docs":{"mir/regionck.html#skolemization-and-outlives-constraints":{"tf":1.0},"ty.html#allocating-and-working-with-types":{"tf":1.0}},"df":2}}},"p":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{"rustdoc.html#from-crate-to-clean":{"tf":1.0},"appendix/glossary.html#appendix-c-glossary":{"tf":1.0},"variance.html#variance-and-object-types":{"tf":1.0},"compiletest.html#adding-a-new-test-file":{"tf":1.0},"traits/resolution.html#major-concepts":{"tf":1.0},"appendix/stupid-stats.html#overview-of-the-compilation-process":{"tf":1.0},"mir/passes.html#implementing-and-registering-a-pass":{"tf":1.0},"query.html#adding-a-new-kind-of-query":{"tf":1.0},"tests/adding.html#other-header-commands":{"tf":1.0}},"df":9}}},"v":{"docs":{"tests/intro.html#testing-infrastructure":{"tf":1.0}},"df":1}},"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"i":{"docs":{"compiler-debugging.html#getting-a-backtrace-for-errors":{"tf":1.0}},"df":1}}}},"e":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{"method-lookup.html#candidate-search":{"tf":1.0},"traits/canonical-queries.html#a-trait-query-in-rustc":{"tf":1.0},"tests/adding.html#header-commands-configuring-rustc":{"tf":1.0},"compiler-debugging.html#getting-logging-output":{"tf":1.0},"variance.html#variance-and-object-types":{"tf":1.4142135623730952},"mir/regionck.html#universes-and-skolemized-region-elements":{"tf":1.7320508075688773},"traits/lowering-rules.html#lowering-where-clauses":{"tf":1.4142135623730952},"mir/passes.html#seeing-how-the-mir-changes-as-the-compiler-executes":{"tf":1.0},"variance.html#addendum-variance-on-traits":{"tf":1.0},"hir.html#the-hir":{"tf":1.0},"compiletest.html#header-commands":{"tf":1.0},"mir/regionck.html#what-is-a-universe":{"tf":1.0},"mir/regionck.html#mir-based-region-checking-nll":{"tf":1.4142135623730952},"appendix/background.html#what-is-a-free-region-or-a-free-variable-what-about-bound-region":{"tf":2.0},"traits/canonicalization.html#canonicalization":{"tf":1.0},"appendix/background.html#what-is-a-control-flow-graph":{"tf":1.0},"incrcomp-debugging.html#dumping-the-graph":{"tf":1.0}},"df":17}},"n":{"docs":{},"df":0,"d":{"docs":{},"df":0,"i":{"docs":{},"df":0,"x":{"docs":{"rustc-driver.html#the-rustc-driver":{"tf":1.0},"appendix/glossary.html#appendix-c-glossary":{"tf":1.0},"appendix/code-index.html#appendix-d-code-index":{"tf":1.0},"appendix/stupid-stats.html#appendix-a-a-tutorial-on-creating-a-drop-in-replacement-for-rustc":{"tf":1.0},"variance.html#variance-of-type-and-lifetime-parameters":{"tf":1.0},"appendix/background.html#appendix-b-background-topics":{"tf":1.0}},"df":6}}}}}},"a":{"docs":{},"df":0,"c":{"docs":{},"df":0,"h":{"docs":{"compiletest.html#adding-a-new-header-command":{"tf":1.4142135623730952},"conventions.html#copyright-notice":{"tf":1.4142135623730952}},"df":2}}},"t":{"docs":{"compiler-debugging.html#formatting-graphviz-output-dot-files":{"tf":1.0}},"df":1},"i":{"docs":{"rustc-driver.html#a-note-on-lifetimes":{"tf":1.0},"appendix/stupid-stats.html#what-next":{"tf":2.0},"rustc-driver.html#the-rustc-driver":{"tf":1.0},"appendix/stupid-stats.html#overview-of-the-compilation-process":{"tf":1.0},"appendix/stupid-stats.html#appendix-a-a-tutorial-on-creating-a-drop-in-replacement-for-rustc":{"tf":1.7320508075688773},"appendix/stupid-stats.html#the-driver-customisation-apis":{"tf":1.0}},"df":6}},"c":{"docs":{},"df":0,"y":{"docs":{},"df":0,"c":{"docs":{},"df":0,"l":{"docs":{"appendix/glossary.html#appendix-c-glossary":{"tf":1.0}},"df":1}}},"h":{"docs":{},"df":0,"i":{"docs":{},"df":0,"e":{"docs":{},"df":0,"v":{"docs":{"traits/goals-and-clauses.html#coinductive-goals":{"tf":1.0}},"df":1}}}},"c":{"docs":{},"df":0,"e":{"docs":{},"df":0,"p":{"docs":{},"df":0,"t":{"docs":{"appendix/glossary.html#appendix-c-glossary":{"tf":1.4142135623730952},"traits/lowering-to-logic.html#type-checking-generic-functions-beyond-horn-clauses":{"tf":1.0},"mir/regionck.html#another-example":{"tf":1.0},"mir/regionck.html#skolemization-and-universes":{"tf":1.4142135623730952}},"df":4}},"s":{"docs":{},"df":0,"s":{"docs":{"rustc-driver.html#a-note-on-lifetimes":{"tf":1.0},"high-level-overview.html#the-main-stages-of-compilation":{"tf":1.4142135623730952},"miri.html#datastructures":{"tf":1.0},"hir.html#out-of-band-storage-and-the--crate--type":{"tf":2.449489742783178},"appendix/glossary.html#appendix-c-glossary":{"tf":1.0},"ty.html#the-tcx-and-how-it-uses-lifetimes":{"tf":1.4142135623730952},"compiletest.html#implementing-the-behavior-change":{"tf":1.0},"miri.html#interpretation":{"tf":1.4142135623730952},"variance.html#dependency-graph-management":{"tf":1.0},"param_env.html#parameter-environment":{"tf":1.0},"ty.html#allocating-and-working-with-types":{"tf":1.7320508075688773},"mir/borrowck.html#mir-borrow-check":{"tf":1.0},"mir/passes.html#stealing":{"tf":1.0},"name-resolution.html#scopes-and-ribs":{"tf":2.6457513110645909},"hir.html#the-hir-map":{"tf":1.0},"mir/passes.html#mir-passes":{"tf":1.0},"tests/intro.html#testing-with-docker-images":{"tf":1.0},"traits/chalk-overview.html#intermediate-representation-ir":{"tf":1.0}},"df":18}}},"u":{"docs":{},"df":0,"r":{"docs":{"method-lookup.html#candidate-assembly":{"tf":1.0},"traits/caching.html#where-clauses-and-the-local-vs-global-cache":{"tf":1.0}},"df":2},"m":{"docs":{},"df":0,"u":{"docs":{},"df":0,"l":{"docs":{"variance.html#the-algorithm":{"tf":1.0},"traits/index.html#trait-solving-new-style":{"tf":1.0},"traits/canonicalization.html#executing-the-query":{"tf":1.0}},"df":3}}}},"o":{"docs":{},"df":0,"m":{"docs":{},"df":0,"m":{"docs":{},"df":0,"o":{"docs":{},"df":0,"d":{"docs":{"type-inference.html#type-inference":{"tf":1.0},"traits/index.html#trait-solving-new-style":{"tf":1.0}},"df":2}}},"p":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"i":{"docs":{"tests/adding.html#adding-new-tests":{"tf":1.0},"rustdoc.html#from-crate-to-clean":{"tf":1.0}},"df":2}}}}},"r":{"docs":{},"df":0,"d":{"docs":{"tests/adding.html#header-commands-configuring-rustc":{"tf":1.0},"conventions.html#copyright-notice":{"tf":1.0},"compiletest.html#adding-a-new-header-command":{"tf":1.0},"mir/regionck.html#subtyping-and-skolemization":{"tf":1.0}},"df":4,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"g":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{"tests/adding.html#ignoring-tests":{"tf":1.0}},"df":1}}}}}}},"u":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{"method-lookup.html#candidate-assembly":{"tf":1.0},"mir/regionck.html#extending-the-universal-regions-check":{"tf":1.0}},"df":2}}}},"i":{"docs":{},"df":0,"d":{"docs":{"traits/associated-types.html#skolemized-associated-types":{"tf":1.0}},"df":1}}},"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"y":{"docs":{},"df":0,"m":{"docs":{"appendix/glossary.html#appendix-c-glossary":{"tf":1.0}},"df":1}}}}},"t":{"docs":{"rustc-driver.html#the-rustc-driver":{"tf":1.0}},"df":1,"i":{"docs":{},"df":0,"v":{"docs":{"hir.html#identifiers-in-the-hir":{"tf":1.0},"query.html#how-the-compiler-executes-a-query":{"tf":1.0},"appendix/glossary.html#appendix-c-glossary":{"tf":1.0},"tests/adding.html#naming-your-test":{"tf":1.0}},"df":4},"o":{"docs":{},"df":0,"n":{"docs":{"mir/index.html#key-mir-vocabulary":{"tf":1.4142135623730952},"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.4142135623730952},"appendix/stupid-stats.html#compilercalls":{"tf":1.4142135623730952}},"df":3}}},"u":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{"traits/caching.html#where-clauses-and-the-local-vs-global-cache":{"tf":1.0},"type-inference.html#enforcing-equality--subtyping":{"tf":1.4142135623730952},"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.4142135623730952},"rustdoc.html#hot-potato":{"tf":1.0},"type-inference.html#extracting-region-constraints":{"tf":1.0},"mir/regionck.html#skolemization-and-outlives-constraints":{"tf":1.0},"name-resolution.html#todo":{"tf":1.0},"appendix/stupid-stats.html#overview-of-the-compilation-process":{"tf":1.0},"variance.html#variance-and-object-types":{"tf":1.0},"method-lookup.html#candidate-search":{"tf":1.0},"ty.html#the-tcx-and-how-it-uses-lifetimes":{"tf":1.0},"rustdoc.html#the-walking-tour-of-rustdoc":{"tf":1.0},"miri.html#interpretation":{"tf":1.0},"the-parser.html#the-parser":{"tf":1.0},"rustdoc.html#from-crate-to-clean":{"tf":1.4142135623730952},"traits/canonicalization.html#processing-the-canonicalized-query-result":{"tf":1.0},"type-inference.html#creating-an-inference-context":{"tf":1.0},"traits/resolution.html#major-concepts":{"tf":1.0},"tests/adding.html#guide-to-the-ui-tests":{"tf":1.0},"miri.html#allocations":{"tf":1.0},"type-inference.html#region-constraints":{"tf":1.0},"traits/specialization.html#specialization":{"tf":1.4142135623730952},"appendix/glossary.html#appendix-c-glossary":{"tf":1.0},"how-to-build-and-run.html#creating-a-rustup-toolchain":{"tf":1.0},"tests/adding.html#naming-your-test":{"tf":1.0},"variance.html#dependency-graph-management":{"tf":1.0},"rustdoc.html#from-clean-to-crate":{"tf":1.0},"traits/lowering-module.html#the-lowering-module-in-rustc":{"tf":1.0},"query.html#queries-demand-driven-compilation":{"tf":1.0},"compiletest.html#implementing-the-behavior-change":{"tf":1.0},"diag.html#declaring-a-lint":{"tf":1.0},"type-checking.html#type-collection":{"tf":1.0},"miri.html#miri":{"tf":1.4142135623730952},"traits/goals-and-clauses.html#goals-and-clauses-meta-structure":{"tf":1.0},"variance.html#variance-of-type-and-lifetime-parameters":{"tf":1.0},"mir/passes.html#stealing":{"tf":1.0}},"df":36}}}}},"v":{"docs":{},"df":0,"o":{"docs":{},"df":0,"i":{"docs":{},"df":0,"d":{"docs":{"incremental-compilation.html#the-basic-algorithm":{"tf":1.4142135623730952},"compiletest.html#adding-a-new-header-command":{"tf":1.0},"traits/resolution.html#candidate-assembly":{"tf":1.0},"mir/passes.html#stealing":{"tf":1.0},"incremental-compilation.html#the-try-mark-green-algorithm":{"tf":1.0},"traits/specialization.html#specialization":{"tf":1.0},"query.html#cycles-between-queries":{"tf":1.0},"diag.html#error-messages":{"tf":1.0}},"df":8}}},"a":{"docs":{},"df":0,"i":{"docs":{},"df":0,"l":{"docs":{"rustdoc.html#cheat-sheet":{"tf":1.0},"traits/resolution.html#major-concepts":{"tf":1.0},"appendix/stupid-stats.html#compilercontroller":{"tf":1.0},"incremental-compilation.html#improvements-to-the-basic-algorithm":{"tf":1.0},"rustdoc.html#from-soup-to-nuts":{"tf":1.0},"rustdoc.html#dotting-is-and-crossing-ts":{"tf":1.0},"tests/intro.html#testing-on-emulators":{"tf":1.0},"traits/resolution.html#selection-during-translation":{"tf":1.0},"rustc-driver.html#the-rustc-driver":{"tf":1.0}},"df":9}}}}},"c":{"docs":{"compiler-debugging.html#debugging-llvm":{"tf":2.6457513110645909},"traits/canonicalization.html#canonicalizing-the-query-result":{"tf":1.0},"mir/regionck.html#final-example":{"tf":1.4142135623730952},"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.4142135623730952},"mir/borrowck.html#major-phases-of-the-borrow-checker":{"tf":1.4142135623730952},"mir/regionck.html#another-example":{"tf":1.4142135623730952},"appendix/glossary.html#appendix-c-glossary":{"tf":1.0},"appendix/background.html#what-is-a-control-flow-graph":{"tf":1.4142135623730952},"traits/canonicalization.html#processing-the-canonicalized-query-result":{"tf":2.6457513110645909},"mir/index.html#key-mir-vocabulary":{"tf":1.4142135623730952},"variance.html#the-algorithm":{"tf":1.7320508075688773},"traits/canonicalization.html#executing-the-query":{"tf":1.7320508075688773}},"df":12,"o":{"docs":{"appendix/background.html#what-is-co--and-contra-variance":{"tf":1.0},"traits/goals-and-clauses.html#coinductive-goals":{"tf":2.23606797749979},"hir.html#identifiers-in-the-hir":{"tf":1.0}},"df":3,"d":{"docs":{},"df":0,"e":{"docs":{"appendix/stupid-stats.html#overview-of-the-compilation-process":{"tf":2.6457513110645909},"method-lookup.html#method-lookup":{"tf":1.0},"traits/chalk-overview.html#intermediate-representation-ir":{"tf":1.0},"mir/regionck.html#skolemization-and-outlives-constraints":{"tf":1.0},"appendix/stupid-stats.html#compilercontroller":{"tf":1.0},"query.html#how-the-compiler-executes-a-query":{"tf":1.0},"mir/borrowck.html#mir-borrow-check":{"tf":1.0},"conventions.html#coding-for-correctness":{"tf":1.0},"hir.html#hir-bodies":{"tf":1.0},"tests/adding.html#naming-your-test":{"tf":1.4142135623730952},"type-inference.html#extracting-region-constraints":{"tf":1.0},"mir/regionck.html#back-to-our-example":{"tf":1.0},"name-resolution.html#overall-strategy":{"tf":1.0},"compiletest.html#header-commands":{"tf":1.4142135623730952},"conventions.html#prefer-exhaustive-matches":{"tf":1.0},"type-inference.html#region-constraints":{"tf":1.0},"miri.html#miri":{"tf":1.0},"appendix/stupid-stats.html#appendix-a-a-tutorial-on-creating-a-drop-in-replacement-for-rustc":{"tf":2.0},"tests/intro.html#compiletest-test-suites":{"tf":1.4142135623730952},"rustdoc.html#from-clean-to-crate":{"tf":2.449489742783178},"traits/chalk-overview.html#parsing":{"tf":1.0},"name-resolution.html#todo":{"tf":1.0},"high-level-overview.html#crate-structure":{"tf":1.4142135623730952},"appendix/stupid-stats.html#the-driver-customisation-apis":{"tf":1.0},"traits/resolution.html#candidate-assembly":{"tf":1.0},"conventions.html#how-to-structure-your-pr":{"tf":1.0},"traits/chalk-overview.html#well-formedness-checks":{"tf":1.0},"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.0},"traits/chalk-overview.html#lowering":{"tf":1.4142135623730952},"rustdoc.html#cheat-sheet":{"tf":1.0},"how-to-build-and-run.html#running-xpy-and-building-a-stage1-compiler":{"tf":1.0},"high-level-overview.html#the-main-stages-of-compilation":{"tf":1.4142135623730952},"query.html#adding-a-new-kind-of-query":{"tf":1.0},"appendix/glossary.html#appendix-c-glossary":{"tf":2.0},"macro-expansion.html#example":{"tf":1.4142135623730952},"rustc-driver.html#the-rustc-driver":{"tf":1.4142135623730952},"name-resolution.html#namespaces":{"tf":1.4142135623730952},"compiletest.html#introduction":{"tf":1.4142135623730952},"compiler-debugging.html#logging-etiquette":{"tf":1.0},"traits/canonical-queries.html#examples":{"tf":1.0},"conventions.html#formatting-and-the-tidy-script":{"tf":1.7320508075688773},"rustdoc.html#dotting-is-and-crossing-ts":{"tf":1.0},"variance.html#dependency-graph-management":{"tf":1.0},"rustdoc.html#other-tricks-up-its-sleeve":{"tf":1.0},"variance.html#variance-of-type-and-lifetime-parameters":{"tf":1.0},"mir/regionck.html#representing-the-values-of-a-region-variable":{"tf":1.0},"mir/index.html#introduction-to-mir":{"tf":1.0},"miri.html#interpretation":{"tf":1.0},"diag.html#suggestions":{"tf":1.0},"mir/visitor.html#mir-visitor":{"tf":1.0},"compiletest.html#adding-a-new-header-command":{"tf":1.7320508075688773},"traits/resolution.html#overview":{"tf":1.0},"macro-expansion.html#macro-expansion":{"tf":1.4142135623730952},"traits/chalk-overview.html#resources":{"tf":1.0},"conventions.html#use-todo-comments-for-things-you-dont-want-to-forget":{"tf":1.0},"diag.html#declaring-a-lint":{"tf":1.0},"mir/regionck.html#mir-based-region-checking-nll":{"tf":1.0},"name-resolution.html#scopes-and-ribs":{"tf":1.0},"tests/intro.html#other-tests":{"tf":1.7320508075688773},"ty.html#allocating-and-working-with-types":{"tf":1.0},"hir.html#identifiers-in-the-hir":{"tf":1.4142135623730952},"traits/chalk-overview.html#an-overview-of-chalk":{"tf":1.4142135623730952},"incremental-compilation.html#the-query-dag":{"tf":1.0},"compiletest.html#implementing-the-behavior-change":{"tf":1.0},"compiler-debugging.html#expensive-operations-in-logs":{"tf":1.4142135623730952},"the-parser.html#the-parser":{"tf":1.7320508075688773},"appendix/code-index.html#appendix-d-code-index":{"tf":2.0},"about-this-guide.html#about-this-guide":{"tf":1.0},"ty.html#the-tcx-and-how-it-uses-lifetimes":{"tf":1.4142135623730952},"diag.html#span":{"tf":1.0},"macro-expansion.html#the-macro-parser":{"tf":1.0},"mir/passes.html#implementing-and-registering-a-pass":{"tf":1.0},"diag.html#error-messages":{"tf":1.0},"variance.html#variance-and-object-types":{"tf":1.0},"query.html#cycles-between-queries":{"tf":1.0},"hir.html#the-hir":{"tf":1.0},"mir/index.html#the-mir-mid-level-ir":{"tf":1.0},"appendix/stupid-stats.html#compilercalls":{"tf":1.0}},"df":78,".":{"docs":{},"df":0,"t":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{},"df":0,"m":{"docs":{},"df":0,"(":{"docs":{},"df":0,")":{"docs":{},"df":0,".":{"docs":{},"df":0,"p":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"<":{"docs":{},"df":0,"i":{"docs":{},"df":0,"3":{"docs":{},"df":0,"2":{"docs":{},"df":0,">":{"docs":{},"df":0,"(":{"docs":{},"df":0,")":{"docs":{},"df":0,".":{"docs":{},"df":0,"o":{"docs":{},"df":0,"k":{"docs":{"compiletest.html#adding-a-new-header-command":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}}}}}}}},"m":{"docs":{},"df":0,"a":{"docs":{},"df":0,"p":{"docs":{"diag.html#span":{"tf":1.4142135623730952},"appendix/code-index.html#appendix-d-code-index":{"tf":1.4142135623730952},"the-parser.html#the-parser":{"tf":1.4142135623730952},"rustc-driver.html#the-rustc-driver":{"tf":1.0}},"df":4}}},"g":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{"compiler-debugging.html#debugging-llvm":{"tf":2.23606797749979},"high-level-overview.html#the-main-stages-of-compilation":{"tf":1.0},"appendix/glossary.html#appendix-c-glossary":{"tf":1.7320508075688773},"tests/intro.html#compiletest-test-suites":{"tf":1.0},"how-to-build-and-run.html#create-a-configtoml":{"tf":1.0},"query.html#queries-demand-driven-compilation":{"tf":1.4142135623730952},"tests/adding.html#what-kind-of-test-should-i-add":{"tf":1.0}},"df":7}}}}},"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"c":{"docs":{},"df":0,"i":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{"method-lookup.html#method-lookup":{"tf":1.0}},"df":1}}}}}},"m":{"docs":{},"df":0,"m":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{"rustdoc.html#cheat-sheet":{"tf":1.0},"tests/adding.html#normalization":{"tf":1.0},"appendix/stupid-stats.html#compilercalls":{"tf":1.7320508075688773},"tests/running.html#running-tests":{"tf":1.4142135623730952},"rustc-driver.html#the-rustc-driver":{"tf":1.0},"tests/running.html#running-an-individual-test":{"tf":1.0},"appendix/stupid-stats.html#the-driver-customisation-apis":{"tf":1.0},"appendix/stupid-stats.html#overview-of-the-compilation-process":{"tf":1.0},"how-to-build-and-run.html#other-xpy-commands":{"tf":1.4142135623730952},"appendix/stupid-stats.html#appendix-a-a-tutorial-on-creating-a-drop-in-replacement-for-rustc":{"tf":1.0},"conventions.html#how-to-structure-your-pr":{"tf":1.0},"how-to-build-and-run.html#running-xpy-and-building-a-stage1-compiler":{"tf":1.4142135623730952},"rustdoc.html#dotting-is-and-crossing-ts":{"tf":1.0},"tests/adding.html#other-header-commands":{"tf":2.0},"tests/adding.html#tests-that-do-not-result-in-compile-errors":{"tf":1.0},"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.4142135623730952},"compiletest.html#header-commands":{"tf":2.23606797749979},"compiler-debugging.html#formatting-graphviz-output-dot-files":{"tf":1.0},"tests/adding.html#adding-new-tests":{"tf":1.0},"compiletest.html#adding-a-new-header-command":{"tf":4.123105625617661},"compiletest.html#implementing-the-behavior-change":{"tf":2.6457513110645909},"tests/adding.html#header-commands-configuring-rustc":{"tf":1.7320508075688773}},"df":22,"'":{"docs":{"compiletest.html#adding-a-new-header-command":{"tf":1.4142135623730952}},"df":1},":":{"docs":{},"df":0,"p":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"m":{"docs":{},"df":0,"e":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"(":{"docs":{"compiletest.html#adding-a-new-header-command":{"tf":1.0}},"df":1}}}}}}}}}}}}}},"i":{"docs":{},"df":0,"t":{"docs":{"conventions.html#use-todo-comments-for-things-you-dont-want-to-forget":{"tf":1.7320508075688773},"compiler-debugging.html#logging-etiquette":{"tf":1.0},"conventions.html#how-to-structure-your-pr":{"tf":3.605551275463989},"how-to-build-and-run.html#creating-a-rustup-toolchain":{"tf":1.4142135623730952}},"df":4,"_":{"docs":{},"df":0,"i":{"docs":{},"df":0,"f":{"docs":{},"df":0,"_":{"docs":{},"df":0,"o":{"docs":{},"df":0,"k":{"docs":{"type-inference.html#snapshots":{"tf":1.0}},"df":1}}}}}}}},"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{"tests/adding.html#adding-new-tests":{"tf":1.4142135623730952},"tests/adding.html#comment-explaining-what-the-test-is-about":{"tf":2.0},"mir/index.html#key-mir-vocabulary":{"tf":1.4142135623730952},"compiletest.html#adding-a-new-header-command":{"tf":1.7320508075688773},"conventions.html#line-length":{"tf":1.0},"tests/adding.html#revisions":{"tf":1.0},"conventions.html#use-todo-comments-for-things-you-dont-want-to-forget":{"tf":1.7320508075688773},"rustdoc.html#hot-potato":{"tf":1.7320508075688773},"macro-expansion.html#the-macro-parser":{"tf":1.0},"traits/canonical-queries.html#examples":{"tf":1.0},"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.0},"compiletest.html#header-commands":{"tf":1.0},"rustdoc.html#from-crate-to-clean":{"tf":1.0},"appendix/stupid-stats.html#what-next":{"tf":1.0},"traits/lowering-rules.html#rule-names-and-cross-references":{"tf":1.0},"tests/adding.html#error-annotations":{"tf":1.0},"appendix/stupid-stats.html#compilercalls":{"tf":1.0},"compiletest.html#introduction":{"tf":1.0},"tests/adding.html#header-commands-configuring-rustc":{"tf":1.4142135623730952}},"df":19}}},"o":{"docs":{},"df":0,"n":{"docs":{"ty.html#allocating-and-working-with-types":{"tf":1.4142135623730952},"appendix/background.html#appendix-b-background-topics":{"tf":1.0},"mir/regionck.html#another-example":{"tf":1.0},"appendix/background.html#what-is-a-control-flow-graph":{"tf":1.0},"hir.html#identifiers-in-the-hir":{"tf":1.0},"mir/regionck.html#what-is-a-universe":{"tf":1.0},"high-level-overview.html#crate-structure":{"tf":1.0},"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":2.0},"compiletest.html#adding-a-new-header-command":{"tf":1.0},"type-inference.html#inference-variables":{"tf":1.0},"tests/running.html#running-an-individual-test":{"tf":1.0},"ty.html#import-conventions":{"tf":1.0}},"df":12,"m":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"k":{"docs":{"rustdoc.html#hot-potato":{"tf":1.0}},"df":1}}}},"l":{"docs":{},"df":0,"i":{"docs":{"appendix/glossary.html#appendix-c-glossary":{"tf":1.0},"traits/resolution.html#selection":{"tf":1.0}},"df":2}},"_":{"docs":{},"df":0,"p":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"c":{"docs":{"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.4142135623730952}},"df":1}}}}},"t":{"docs":{},"df":0,"y":{"docs":{},"df":0,"p":{"docs":{"ty.html#allocating-and-working-with-types":{"tf":1.0}},"df":1}}}}},"u":{"docs":{},"df":0,"n":{"docs":{"mir/regionck.html#what-is-a-universe":{"tf":1.0},"tests/intro.html#testing-on-emulators":{"tf":1.0}},"df":2}}},"e":{"docs":{"name-resolution.html#todo":{"tf":1.0},"traits/canonical-queries.html#a-trait-query-in-rustc":{"tf":1.0},"mir/borrowck.html#major-phases-of-the-borrow-checker":{"tf":1.0},"rustdoc.html#from-soup-to-nuts":{"tf":1.0},"macro-expansion.html#the-macro-parser":{"tf":1.7320508075688773},"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.0},"tests/adding.html#adding-new-tests":{"tf":1.0},"appendix/stupid-stats.html#overview-of-the-compilation-process":{"tf":1.0},"rustdoc.html#from-clean-to-crate":{"tf":1.0},"traits/caching.html#an-example":{"tf":1.4142135623730952},"traits/lowering-to-logic.html#type-checking-normal-functions":{"tf":1.0},"mir/regionck.html#universes-and-skolemized-region-elements":{"tf":1.0},"compiler-debugging.html#getting-a-backtrace-for-errors":{"tf":1.0},"type-inference.html#inference-variables":{"tf":1.0},"mir/regionck.html#mir-based-region-checking-nll":{"tf":1.0},"incremental-compilation.html#the-query-dag":{"tf":1.0},"diag.html#span":{"tf":1.0},"traits/associated-types.html#skolemized-associated-types":{"tf":1.0},"traits/chalk-overview.html#rules":{"tf":1.0}},"df":19},"b":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{"rustdoc.html#hot-potato":{"tf":1.4142135623730952},"mir/passes.html#seeing-how-the-mir-changes-as-the-compiler-executes":{"tf":1.0},"rustdoc.html#other-tricks-up-its-sleeve":{"tf":1.0},"variance.html#variance-of-type-and-lifetime-parameters":{"tf":1.0},"appendix/glossary.html#appendix-c-glossary":{"tf":1.0},"hir.html#identifiers-in-the-hir":{"tf":1.0}},"df":6}}},"p":{"docs":{},"df":0,"l":{"docs":{},"df":0,"e":{"docs":{},"df":0,"t":{"docs":{"traits/index.html#trait-solving-new-style":{"tf":1.4142135623730952},"variance.html#variance-and-associated-types":{"tf":1.0},"traits/resolution.html#selection-during-translation":{"tf":1.0},"hir.html#identifiers-in-the-hir":{"tf":1.0},"tests/adding.html#guide-to-the-ui-tests":{"tf":1.0},"high-level-overview.html#the-main-stages-of-compilation":{"tf":1.4142135623730952},"method-lookup.html#candidate-assembly":{"tf":1.0},"traits/goals-and-clauses.html#coinductive-goals":{"tf":1.0},"mir/regionck.html#back-to-our-example":{"tf":1.0},"traits/chalk-overview.html#parsing":{"tf":1.0},"traits/resolution.html#overview":{"tf":1.0},"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.4142135623730952},"traits/lowering-rules.html#lowering-rules":{"tf":1.0},"rustdoc.html#dotting-is-and-crossing-ts":{"tf":1.0},"compiletest.html#adding-a-new-test-file":{"tf":1.0},"traits/chalk-overview.html#intermediate-representation-ir":{"tf":1.0},"appendix/glossary.html#appendix-c-glossary":{"tf":2.23606797749979},"rustdoc.html#cheat-sheet":{"tf":1.0},"ty.html#the-tcx-and-how-it-uses-lifetimes":{"tf":1.0}},"df":19},"x":{"docs":{"traits/lowering-to-logic.html#type-checking-normal-functions":{"tf":1.0},"ty.html#the-tcx-and-how-it-uses-lifetimes":{"tf":1.0},"appendix/stupid-stats.html#appendix-a-a-tutorial-on-creating-a-drop-in-replacement-for-rustc":{"tf":1.4142135623730952},"traits/caching.html#caching-and-subtle-considerations-therewith":{"tf":1.0},"macro-expansion.html#example":{"tf":1.0},"appendix/stupid-stats.html#overview-of-the-compilation-process":{"tf":1.0},"method-lookup.html#method-lookup":{"tf":1.0},"const-eval.html#constant-evaluation":{"tf":1.0},"mir/borrowck.html#mir-borrow-check":{"tf":1.0}},"df":9}},"i":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{"rustdoc.html#hot-potato":{"tf":1.0}},"df":1}}},"c":{"docs":{"variance.html#addendum-variance-on-traits":{"tf":1.0}},"df":1}}},"i":{"docs":{},"df":0,"l":{"docs":{"the-parser.html#the-parser":{"tf":1.0},"rustdoc.html#from-crate-to-clean":{"tf":1.0},"compiler-debugging.html#debugging-the-compiler":{"tf":1.7320508075688773},"query.html#how-the-compiler-executes-a-query":{"tf":2.449489742783178},"ty.html#the--ty--module-representing-types":{"tf":1.4142135623730952},"tests/adding.html#guide-to-the-ui-tests":{"tf":1.0},"appendix/stupid-stats.html#the-driver-customisation-apis":{"tf":1.7320508075688773},"name-resolution.html#namespaces":{"tf":1.0},"incrcomp-debugging.html#testing-the-dependency-graph":{"tf":1.0},"mir/index.html#the-mir-mid-level-ir":{"tf":1.0},"appendix/stupid-stats.html#compilercalls":{"tf":2.23606797749979},"tests/adding.html#revisions":{"tf":1.7320508075688773},"traits/chalk-overview.html#parsing":{"tf":1.0},"incrcomp-debugging.html#dumping-the-graph":{"tf":1.4142135623730952},"type-checking.html#type-collection":{"tf":1.4142135623730952},"rustdoc.html#the-walking-tour-of-rustdoc":{"tf":1.7320508075688773},"high-level-overview.html#the-main-stages-of-compilation":{"tf":2.6457513110645909},"mir/regionck.html#what-is-a-universe":{"tf":1.4142135623730952},"appendix/glossary.html#appendix-c-glossary":{"tf":4.123105625617661},"ty.html#allocating-and-working-with-types":{"tf":1.0},"tests/running.html#running-a-subset-of-the-test-suites":{"tf":1.4142135623730952},"tests/adding.html#ignoring-tests":{"tf":1.4142135623730952},"how-to-build-and-run.html#creating-a-rustup-toolchain":{"tf":1.4142135623730952},"tests/adding.html#other-header-commands":{"tf":2.8284271247461905},"rustc-driver.html#the-rustc-driver":{"tf":3.0},"how-to-build-and-run.html#create-a-configtoml":{"tf":1.0},"variance.html#variance-of-type-and-lifetime-parameters":{"tf":1.0},"tests/adding.html#normalization":{"tf":1.0},"diag.html#emitting-diagnostics":{"tf":1.4142135623730952},"compiler-debugging.html#debugging-llvm":{"tf":2.23606797749979},"const-eval.html#constant-evaluation":{"tf":1.0},"hir.html#identifiers-in-the-hir":{"tf":1.0},"appendix/stupid-stats.html#overview-of-the-compilation-process":{"tf":3.4641016151377546},"diag.html#suggestions":{"tf":1.0},"incremental-compilation.html#the-basic-algorithm":{"tf":2.6457513110645909},"appendix/stupid-stats.html#appendix-a-a-tutorial-on-creating-a-drop-in-replacement-for-rustc":{"tf":3.4641016151377546},"hir.html#out-of-band-storage-and-the--crate--type":{"tf":1.7320508075688773},"incremental-compilation.html#the-query-dag":{"tf":1.7320508075688773},"compiler-debugging.html#getting-a-backtrace":{"tf":1.4142135623730952},"miri.html#interpretation":{"tf":1.0},"traits/hrtb.html#basic-matching-and-skolemization-leaks":{"tf":1.0},"appendix/code-index.html#appendix-d-code-index":{"tf":2.6457513110645909},"query.html#queries-demand-driven-compilation":{"tf":3.1622776601683797},"rustc-driver.html#a-note-on-lifetimes":{"tf":2.6457513110645909},"appendix/stupid-stats.html#compilercontroller":{"tf":2.6457513110645909},"tests/adding.html#what-kind-of-test-should-i-add":{"tf":1.0},"traits/caching.html#where-clauses-and-the-local-vs-global-cache":{"tf":1.0},"compiletest.html#header-commands":{"tf":1.0},"query.html#adding-a-new-kind-of-query":{"tf":1.0},"traits/resolution.html#candidate-assembly":{"tf":1.0},"incremental-compilation.html#the-try-mark-green-algorithm":{"tf":2.23606797749979},"name-resolution.html#name-resolution":{"tf":1.4142135623730952},"tests/running.html#running-tests":{"tf":1.0},"diag.html#declaring-a-lint":{"tf":1.7320508075688773},"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":3.0},"how-to-build-and-run.html#running-xpy-and-building-a-stage1-compiler":{"tf":5.656854249492381},"how-to-build-and-run.html#how-to-build-the-compiler-and-run-what-you-built":{"tf":2.0},"appendix/background.html#appendix-b-background-topics":{"tf":1.0},"how-to-build-and-run.html#other-xpy-commands":{"tf":1.4142135623730952},"miri.html#miri":{"tf":1.7320508075688773},"tests/adding.html#adding-new-tests":{"tf":1.0},"compiler-debugging.html#getting-a-backtrace-for-errors":{"tf":2.0},"name-resolution.html#todo":{"tf":1.0},"traits/lowering-module.html#unit-tests":{"tf":1.4142135623730952},"mir/passes.html#seeing-how-the-mir-changes-as-the-compiler-executes":{"tf":1.7320508075688773},"tests/adding.html#error-annotations":{"tf":1.0},"hir.html#the-hir":{"tf":1.0},"compiler-debugging.html#formatting-graphviz-output-dot-files":{"tf":1.0},"name-resolution.html#scopes-and-ribs":{"tf":1.0},"appendix/stupid-stats.html#what-next":{"tf":1.0},"incrcomp-debugging.html#tracking-down-incorrect-edges":{"tf":1.0},"tests/adding.html#tests-that-do-not-result-in-compile-errors":{"tf":2.449489742783178},"rustdoc.html#other-tricks-up-its-sleeve":{"tf":1.0},"tests/intro.html#the-compiler-testing-framework":{"tf":1.4142135623730952},"about-this-guide.html#about-this-guide":{"tf":1.0},"mir/index.html#key-mir-vocabulary":{"tf":1.0},"diag.html#span":{"tf":1.0},"macro-expansion.html#example":{"tf":1.4142135623730952},"incremental-compilation.html#incremental-compilation":{"tf":1.4142135623730952},"tests/running.html#running-an-individual-test":{"tf":1.0},"compiletest.html#adding-a-new-header-command":{"tf":1.7320508075688773},"mir/passes.html#stealing":{"tf":1.0},"rustdoc.html#from-soup-to-nuts":{"tf":1.7320508075688773},"tests/intro.html#compiletest-test-suites":{"tf":2.8284271247461905},"compiler-debugging.html#getting-logging-output":{"tf":2.8284271247461905},"ty.html#the-tcx-and-how-it-uses-lifetimes":{"tf":2.0},"macro-expansion.html#the-macro-parser":{"tf":1.4142135623730952},"query.html#cycles-between-queries":{"tf":2.23606797749979},"high-level-overview.html#crate-structure":{"tf":3.0},"incremental-compilation.html#improvements-to-the-basic-algorithm":{"tf":1.0},"appendix/background.html#what-is-a-control-flow-graph":{"tf":1.7320508075688773},"tests/adding.html#header-commands-configuring-rustc":{"tf":1.7320508075688773},"diag.html#lints":{"tf":1.0},"compiletest.html#introduction":{"tf":2.6457513110645909},"high-level-overview.html#high-level-overview-of-the-compiler-source":{"tf":1.0}},"df":95,"a":{"docs":{},"df":0,"t":{"docs":{},"df":0,"i":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"u":{"docs":{"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.4142135623730952}},"df":1}}}}}}},"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"o":{"docs":{},"df":0,"p":{"docs":{"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.0}},"df":1}}}}}}}}}}},"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{},"df":0,"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"l":{"docs":{"appendix/stupid-stats.html#the-driver-customisation-apis":{"tf":1.0},"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.0},"rustc-driver.html#the-rustc-driver":{"tf":1.4142135623730952},"appendix/stupid-stats.html#compilercalls":{"tf":1.0}},"df":4}}}}}}},"r":{"docs":{},"df":0,"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{},"df":0,"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"l":{"docs":{"appendix/stupid-stats.html#what-next":{"tf":1.0},"appendix/stupid-stats.html#compilercontroller":{"tf":1.4142135623730952}},"df":2,"l":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"a":{"docs":{},"df":0,"f":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"_":{"docs":{},"df":0,"p":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"s":{"docs":{"appendix/stupid-stats.html#compilercontroller":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}}}},"a":{"docs":{},"df":0,"l":{"docs":{"rustc-driver.html#the-rustc-driver":{"tf":1.4142135623730952},"appendix/stupid-stats.html#compilercalls":{"tf":1.4142135623730952},"appendix/stupid-stats.html#the-driver-customisation-apis":{"tf":1.0},"rustc-driver.html#a-note-on-lifetimes":{"tf":1.0},"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.4142135623730952}},"df":5,"l":{"docs":{},"df":0,"s":{"docs":{},"df":0,"<":{"docs":{},"df":0,"'":{"docs":{},"df":0,"a":{"docs":{"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.0}},"df":1}}}}}}}},"'":{"docs":{"tests/adding.html#editing-and-updating-the-reference-files":{"tf":1.0},"appendix/stupid-stats.html#appendix-a-a-tutorial-on-creating-a-drop-in-replacement-for-rustc":{"tf":1.0},"tests/adding.html#guide-to-the-ui-tests":{"tf":1.0}},"df":3}},"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{"compiletest.html#introduction":{"tf":1.7320508075688773},"compiletest.html#adding-a-new-test-file":{"tf":1.0},"compiletest.html#implementing-the-behavior-change":{"tf":1.0},"rustdoc.html#dotting-is-and-crossing-ts":{"tf":1.0},"compiletest.html#adding-a-new-header-command":{"tf":1.4142135623730952},"tests/intro.html#compiletest-test-suites":{"tf":1.4142135623730952},"tests/adding.html#other-header-commands":{"tf":1.4142135623730952},"compiletest.html#compiletest":{"tf":1.0},"compiletest.html#header-commands":{"tf":1.0},"tests/intro.html#the-compiler-testing-framework":{"tf":1.0}},"df":10}}},"i":{"docs":{},"df":0,"m":{"docs":{"const-eval.html#constant-evaluation":{"tf":1.0}},"df":1}}},"s":{"docs":{},"df":0,"t":{"docs":{"rustc-driver.html#the-rustc-driver":{"tf":1.0},"appendix/code-index.html#appendix-d-code-index":{"tf":1.0},"appendix/stupid-stats.html#compilercontroller":{"tf":1.0},"rustc-driver.html#a-note-on-lifetimes":{"tf":1.0}},"df":4}},"_":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"p":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{"appendix/stupid-stats.html#overview-of-the-compilation-process":{"tf":1.0}},"df":1}}}}}}}}},"u":{"docs":{},"df":0,"t":{"docs":{"traits/canonicalization.html#executing-the-query":{"tf":1.0},"variance.html#variance-of-type-and-lifetime-parameters":{"tf":1.0},"incremental-compilation.html#the-basic-algorithm":{"tf":1.4142135623730952},"incremental-compilation.html#improvements-to-the-basic-algorithm":{"tf":2.0},"name-resolution.html#todo":{"tf":1.0},"mir/borrowck.html#major-phases-of-the-borrow-checker":{"tf":2.0},"query.html#how-the-compiler-executes-a-query":{"tf":1.0},"variance.html#addendum-variance-on-traits":{"tf":1.0},"traits/hrtb.html#higher-ranked-trait-obligations":{"tf":1.0},"miri.html#miri":{"tf":1.0},"query.html#queries-demand-driven-compilation":{"tf":2.23606797749979},"variance.html#trait-variance-and-vtable-resolution":{"tf":1.0},"mir/regionck.html#mir-based-region-checking-nll":{"tf":1.0},"mir/regionck.html#extending-the-universal-regions-check":{"tf":1.0},"type-checking.html#type-collection":{"tf":1.0},"macro-expansion.html#example":{"tf":1.0},"appendix/glossary.html#appendix-c-glossary":{"tf":1.4142135623730952},"variance.html#dependency-graph-management":{"tf":1.0},"const-eval.html#constant-evaluation":{"tf":1.4142135623730952},"mir/regionck.html#skolemization-and-outlives-constraints":{"tf":1.0}},"df":20,"e":{"docs":{},"df":0,"_":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"g":{"docs":{},"df":0,"i":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{"mir/regionck.html#mir-based-region-checking-nll":{"tf":1.0}},"df":1}}}}}},"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"g":{"docs":{},"df":0,"_":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.0}},"df":1}}}}}}}}}}}},"a":{"docs":{},"df":0,"t":{"docs":{"variance.html#addendum-variance-on-traits":{"tf":1.0}},"df":1},"r":{"docs":{"variance.html#variance-and-object-types":{"tf":1.0},"incremental-compilation.html#improvements-to-the-basic-algorithm":{"tf":1.0},"incremental-compilation.html#the-try-mark-green-algorithm":{"tf":1.4142135623730952},"compiletest.html#adding-a-new-header-command":{"tf":1.0},"traits/canonical-queries.html#examples":{"tf":1.0},"ty.html#allocating-and-working-with-types":{"tf":1.0},"traits/specialization.html#specialization":{"tf":1.0},"tests/adding.html#guide-to-the-ui-tests":{"tf":1.0}},"df":8}},"o":{"docs":{},"df":0,"n":{"docs":{"rustdoc.html#from-clean-to-crate":{"tf":1.0}},"df":1},"s":{"docs":{"the-parser.html#the-parser":{"tf":1.0},"appendix/glossary.html#appendix-c-glossary":{"tf":1.0}},"df":2}}}},"p":{"docs":{},"df":0,"e":{"docs":{"name-resolution.html#scopes-and-ribs":{"tf":1.4142135623730952},"name-resolution.html#namespaces":{"tf":1.0}},"df":2},"y":{"docs":{},"df":0,">":{"docs":{},"df":0,"(":{"docs":{},"df":0,"t":{"docs":{"param_env.html#parameter-environment":{"tf":1.0}},"df":1}}},"r":{"docs":{},"df":0,"i":{"docs":{},"df":0,"g":{"docs":{},"df":0,"h":{"docs":{},"df":0,"t":{"docs":{"tests/adding.html#comment-explaining-what-the-test-is-about":{"tf":1.0},"conventions.html#copyright-notice":{"tf":2.23606797749979},"tests/adding.html#header-commands-configuring-rustc":{"tf":1.0},"compiletest.html#adding-a-new-header-command":{"tf":1.4142135623730952},"conventions.html#line-length":{"tf":1.0},"tests/adding.html#adding-new-tests":{"tf":1.0}},"df":6}}}}}},"i":{"docs":{"compiletest.html#adding-a-new-header-command":{"tf":1.0},"appendix/stupid-stats.html#appendix-a-a-tutorial-on-creating-a-drop-in-replacement-for-rustc":{"tf":1.4142135623730952},"traits/resolution.html#candidate-assembly":{"tf":1.0},"traits/goals-and-clauses.html#domain-goals":{"tf":1.0},"compiler-debugging.html#debugging-the-compiler":{"tf":1.0},"the-parser.html#the-parser":{"tf":1.0},"traits/canonical-queries.html#a-trait-query-in-rustc":{"tf":1.0},"conventions.html#copyright-notice":{"tf":1.0},"traits/canonical-queries.html#the-traditional-interactive-prolog-query":{"tf":1.0},"how-to-build-and-run.html#create-a-configtoml":{"tf":1.0},"appendix/glossary.html#appendix-c-glossary":{"tf":1.0},"mir/index.html#key-mir-vocabulary":{"tf":1.7320508075688773},"mir/borrowck.html#major-phases-of-the-borrow-checker":{"tf":1.7320508075688773},"rustdoc.html#cheat-sheet":{"tf":1.0},"param_env.html#parameter-environment":{"tf":1.7320508075688773},"query.html#how-the-compiler-executes-a-query":{"tf":1.0},"rustdoc.html#from-clean-to-crate":{"tf":1.0}},"df":17}},"v":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{"appendix/glossary.html#appendix-c-glossary":{"tf":1.0},"variance.html#the-algorithm":{"tf":1.4142135623730952},"variance.html#trait-variance-and-vtable-resolution":{"tf":1.0},"variance.html#constraints":{"tf":1.0},"variance.html#variance-of-type-and-lifetime-parameters":{"tf":1.0},"variance.html#variance-and-object-types":{"tf":1.0}},"df":6}}},"e":{"docs":{},"df":0,"r":{"docs":{"traits/associated-types.html#equality-and-associated-types":{"tf":1.0},"traits/lowering-to-logic.html#rust-traits-and-logic":{"tf":1.0},"conventions.html#formatting-and-the-tidy-script":{"tf":1.0},"traits/lowering-rules.html#associated-type-declarations":{"tf":1.0},"how-to-build-and-run.html#other-xpy-commands":{"tf":1.0},"high-level-overview.html#crate-structure":{"tf":1.0},"traits/bibliography.html#bibliography":{"tf":1.4142135623730952},"variance.html#addendum-variance-on-traits":{"tf":1.0},"hir.html#the-hir":{"tf":1.0},"traits/implied-bounds.html#implied-bounds":{"tf":1.0},"traits/canonical-queries.html#canonical-queries":{"tf":1.0},"traits/lowering-rules.html#lowering-traits":{"tf":1.0},"appendix/background.html#appendix-b-background-topics":{"tf":1.0}},"df":13,"f":{"docs":{},"df":0,"l":{"docs":{},"df":0,"o":{"docs":{},"df":0,"w":{"docs":{"tests/adding.html#header-commands-configuring-rustc":{"tf":1.0}},"df":1}}}},"a":{"docs":{},"df":0,"g":{"docs":{"mir/regionck.html#mir-based-region-checking-nll":{"tf":1.0}},"df":1}}}}},"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{},"df":0,"u":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{"traits/lowering-rules.html#trait-header":{"tf":1.4142135623730952},"traits/goals-and-clauses.html#coinductive-goals":{"tf":1.0}},"df":2}}}}}},"r":{"docs":{},"df":0,"e":{"docs":{"miri.html#datastructures":{"tf":1.0},"incremental-compilation.html#the-try-mark-green-algorithm":{"tf":1.0}},"df":2,".":{"docs":{},"df":0,"r":{"docs":{"rustdoc.html#from-crate-to-clean":{"tf":1.0}},"df":1}}},"n":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"traits/chalk-overview.html#an-overview-of-chalk":{"tf":1.0}},"df":1}}},"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"p":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{"query.html#adding-a-new-kind-of-query":{"tf":1.0},"tests/adding.html#normalization":{"tf":1.0},"macro-expansion.html#the-macro-parser":{"tf":1.4142135623730952},"mir/regionck.html#universes-and-skolemized-region-elements":{"tf":1.4142135623730952},"mir/regionck.html#representing-the-values-of-a-region-variable":{"tf":1.7320508075688773},"the-parser.html#the-parser":{"tf":1.0},"traits/lowering-rules.html#rule-names-and-cross-references":{"tf":1.0},"variance.html#the-algorithm":{"tf":1.0},"type-inference.html#creating-an-inference-context":{"tf":1.0}},"df":9}}}}},"c":{"docs":{},"df":0,"t":{"docs":{"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.0},"about-this-guide.html#about-this-guide":{"tf":1.0},"rustc-driver.html#the-rustc-driver":{"tf":1.0},"conventions.html#coding-for-correctness":{"tf":1.0},"conventions.html#formatting-and-the-tidy-script":{"tf":1.0},"variance.html#variance-and-object-types":{"tf":1.0},"variance.html#trait-variance-and-vtable-resolution":{"tf":1.0}},"df":7,"l":{"docs":{},"df":0,"i":{"docs":{"tests/running.html#running-a-subset-of-the-test-suites":{"tf":1.0},"tests/intro.html#compiletest-test-suites":{"tf":1.0},"conventions.html#prefer-exhaustive-matches":{"tf":1.0},"compiler-debugging.html#debugging-llvm":{"tf":1.0}},"df":4}}}},"p":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{"ty.html#allocating-and-working-with-types":{"tf":1.0}},"df":1}}}}}}},"o":{"docs":{},"df":0,"l":{"docs":{"compiler-debugging.html#getting-a-backtrace-for-errors":{"tf":1.0},"rustc-driver.html#the-rustc-driver":{"tf":1.0}},"df":2},"r":{"docs":{},"df":0,"d":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{"tests/intro.html#testing-on-emulators":{"tf":1.0},"appendix/stupid-stats.html#overview-of-the-compilation-process":{"tf":1.7320508075688773},"tests/intro.html#testing-infrastructure":{"tf":1.0}},"df":3}}}}},"n":{"docs":{},"df":0,"f":{"docs":{},"df":0,"i":{"docs":{},"df":0,"g":{"docs":{"query.html#adding-a-new-kind-of-query":{"tf":1.0},"compiletest.html#adding-a-new-header-command":{"tf":2.449489742783178},"compiletest.html#introduction":{"tf":1.0}},"df":3,"u":{"docs":{},"df":0,"r":{"docs":{"mir/passes.html#implementing-and-registering-a-pass":{"tf":1.0},"compiler-debugging.html#getting-a-backtrace":{"tf":1.0},"high-level-overview.html#the-main-stages-of-compilation":{"tf":1.0},"appendix/stupid-stats.html#overview-of-the-compilation-process":{"tf":1.0},"compiletest.html#introduction":{"tf":1.0},"how-to-build-and-run.html#how-to-build-the-compiler-and-run-what-you-built":{"tf":1.4142135623730952},"tests/adding.html#header-commands-configuring-rustc":{"tf":1.0},"rustc-driver.html#the-rustc-driver":{"tf":1.0},"tests/intro.html#testing-infrastructure":{"tf":1.4142135623730952},"type-inference.html#creating-an-inference-context":{"tf":1.0}},"df":10}},":":{"docs":{},"df":0,":":{"docs":{},"df":0,"o":{"docs":{},"df":0,"p":{"docs":{},"df":0,"t":{"docs":{"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.4142135623730952}},"df":1}}}}},".":{"docs":{},"df":0,"p":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"_":{"docs":{},"df":0,"f":{"docs":{},"df":0,"a":{"docs":{},"df":0,"i":{"docs":{},"df":0,"l":{"docs":{},"df":0,"u":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"_":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{},"df":0,"u":{"docs":{},"df":0,"s":{"docs":{},"df":0,"(":{"docs":{},"df":0,"l":{"docs":{},"df":0,"n":{"docs":{"compiletest.html#adding-a-new-header-command":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}},"c":{"docs":{},"df":0,"u":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"o":{"docs":{},"df":0,"m":{"docs":{},"df":0,"_":{"docs":{},"df":0,"n":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"m":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{},"df":0,"z":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{},"df":0,"i":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"(":{"docs":{},"df":0,"l":{"docs":{},"df":0,"n":{"docs":{"compiletest.html#adding-a-new-header-command":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"df":0,"o":{"docs":{},"df":0,"m":{"docs":{},"df":0,"l":{"docs":{"compiler-debugging.html#getting-logging-output":{"tf":1.4142135623730952},"how-to-build-and-run.html#running-xpy-and-building-a-stage1-compiler":{"tf":1.0},"how-to-build-and-run.html#create-a-configtoml":{"tf":1.7320508075688773},"compiler-debugging.html#getting-a-backtrace":{"tf":1.0},"compiler-debugging.html#debugging-llvm":{"tf":1.0}},"df":5,".":{"docs":{},"df":0,"e":{"docs":{},"df":0,"x":{"docs":{},"df":0,"a":{"docs":{},"df":0,"m":{"docs":{},"df":0,"p":{"docs":{},"df":0,"l":{"docs":{"how-to-build-and-run.html#create-a-configtoml":{"tf":1.4142135623730952}},"df":1}}}}}}}}}}}}},"r":{"docs":{},"df":0,"m":{"docs":{"traits/resolution.html#confirmation":{"tf":2.0},"traits/resolution.html#candidate-assembly":{"tf":1.0},"traits/caching.html#an-example":{"tf":1.4142135623730952},"type-inference.html#snapshots":{"tf":1.0},"traits/resolution.html#selection":{"tf":1.0},"method-lookup.html#method-lookup":{"tf":1.4142135623730952}},"df":6,".":{"docs":{},"df":0,"r":{"docs":{"method-lookup.html#method-lookup":{"tf":1.0}},"df":1}}}}},"u":{"docs":{},"df":0,"s":{"docs":{"ty.html#the-tcx-and-how-it-uses-lifetimes":{"tf":1.0},"conventions.html#how-to-structure-your-pr":{"tf":1.0},"ty.html#allocating-and-working-with-types":{"tf":1.0},"variance.html#addendum-variance-on-traits":{"tf":1.0}},"df":4}},"l":{"docs":{},"df":0,"i":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{"conventions.html#how-to-structure-your-pr":{"tf":1.4142135623730952}},"df":1}}}}},"s":{"docs":{},"df":0,"i":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{"high-level-overview.html#crate-structure":{"tf":1.4142135623730952},"hir.html#identifiers-in-the-hir":{"tf":1.0},"traits/resolution.html#overview":{"tf":1.0},"traits/associated-types.html#equality-and-associated-types":{"tf":1.0},"traits/goals-and-clauses.html#domain-goals":{"tf":1.4142135623730952},"mir/passes.html#mir-passes":{"tf":1.0},"traits/hrtb.html#higher-ranked-trait-obligations":{"tf":1.0},"traits/canonicalization.html#canonicalization":{"tf":1.0},"mir/regionck.html#what-is-a-universe":{"tf":1.0},"ty.html#beyond-types-other-kinds-of-arena-allocated-data-structures":{"tf":1.0},"traits/canonical-queries.html#a-trait-query-in-rustc":{"tf":1.0},"how-to-build-and-run.html#create-a-configtoml":{"tf":1.0},"mir/passes.html#implementing-and-registering-a-pass":{"tf":1.0},"mir/regionck.html#mir-based-region-checking-nll":{"tf":1.0},"appendix/stupid-stats.html#compilercontroller":{"tf":1.0},"traits/hrtb.html#basic-matching-and-skolemization-leaks":{"tf":1.0},"mir/index.html#key-mir-vocabulary":{"tf":1.0}},"df":17}},"d":{"docs":{"ty.html#allocating-and-working-with-types":{"tf":1.0},"traits/resolution.html#selection-during-translation":{"tf":1.0},"traits/canonical-queries.html#examples":{"tf":1.0},"type-checking.html#type-collection":{"tf":1.0},"variance.html#variance-and-associated-types":{"tf":1.4142135623730952},"mir/regionck.html#skolemization-and-universes":{"tf":1.0},"traits/lowering-to-logic.html#rust-traits-and-logic":{"tf":1.0},"method-lookup.html#candidate-search":{"tf":1.4142135623730952},"variance.html#variance-of-type-and-lifetime-parameters":{"tf":1.4142135623730952},"traits/goals-and-clauses.html#coinductive-goals":{"tf":2.23606797749979},"appendix/background.html#what-is-a-free-region-or-a-free-variable-what-about-bound-region":{"tf":1.4142135623730952},"traits/resolution.html#selection":{"tf":1.0},"traits/hrtb.html#basic-matching-and-skolemization-leaks":{"tf":1.4142135623730952},"variance.html#constraints":{"tf":1.0},"traits/resolution.html#candidate-assembly":{"tf":2.6457513110645909},"mir/passes.html#stealing":{"tf":1.0},"traits/associated-types.html#projection-equality":{"tf":1.0},"traits/resolution.html#major-concepts":{"tf":1.0},"mir/regionck.html#what-is-a-universe":{"tf":1.0},"variance.html#dependency-graph-management":{"tf":1.0},"mir/regionck.html#extending-the-universal-regions-check":{"tf":1.0},"tests/adding.html#naming-your-test":{"tf":1.0},"appendix/background.html#what-is-a-control-flow-graph":{"tf":1.0},"incrcomp-debugging.html#dumping-the-graph":{"tf":1.0},"variance.html#the-algorithm":{"tf":1.0},"traits/associated-types.html#skolemized-associated-types":{"tf":1.4142135623730952},"traits/lowering-to-logic.html#type-checking-normal-functions":{"tf":1.0},"variance.html#variance-and-object-types":{"tf":1.4142135623730952}},"df":28,"e":{"docs":{},"df":0,"r":{"docs":{"traits/caching.html#caching-and-subtle-considerations-therewith":{"tf":1.0}},"df":1}}}},"e":{"docs":{},"df":0,"q":{"docs":{},"df":0,"u":{"docs":{"traits/chalk-overview.html#lowering":{"tf":1.4142135623730952}},"df":1}},"r":{"docs":{},"df":0,"v":{"docs":{"traits/caching.html#where-clauses-and-the-local-vs-global-cache":{"tf":1.0}},"df":1}}},"o":{"docs":{},"df":0,"l":{"docs":{"compiler-debugging.html#getting-logging-output":{"tf":1.0}},"df":1,"i":{"docs":{},"df":0,"d":{"docs":{"traits/chalk-overview.html#an-overview-of-chalk":{"tf":1.0}},"df":1}}}},"t":{"docs":{"compiletest.html#implementing-the-behavior-change":{"tf":1.0},"miri.html#interpretation":{"tf":1.0},"mir/index.html#key-mir-vocabulary":{"tf":2.0},"const-eval.html#constant-evaluation":{"tf":1.0},"hir.html#hir-bodies":{"tf":1.0},"mir/passes.html#stealing":{"tf":1.0},"miri.html#miri":{"tf":1.7320508075688773}},"df":7,"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{"appendix/glossary.html#appendix-c-glossary":{"tf":1.7320508075688773},"miri.html#miri":{"tf":2.23606797749979},"mir/index.html#representing-constants":{"tf":1.0},"traits/lowering-rules.html#lowering-function-and-constant-declarations":{"tf":1.4142135623730952},"mir/index.html#mir-data-types":{"tf":1.4142135623730952},"hir.html#hir-bodies":{"tf":1.0},"const-eval.html#constant-evaluation":{"tf":3.1622776601683797},"traits/lowering-rules.html#function-and-constant-values":{"tf":1.7320508075688773},"mir/regionck.html#extending-the-universal-regions-check":{"tf":1.0},"mir/passes.html#mir-passes":{"tf":1.4142135623730952},"miri.html#interpretation":{"tf":2.6457513110645909},"hir.html#identifiers-in-the-hir":{"tf":1.0},"mir/passes.html#seeing-how-the-mir-changes-as-the-compiler-executes":{"tf":1.0},"mir/index.html#key-mir-vocabulary":{"tf":1.7320508075688773},"param_env.html#parameter-environment":{"tf":1.4142135623730952},"mir/index.html#promoted-constants":{"tf":1.0}},"df":16,"/":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{},"df":0,"i":{"docs":{},"df":0,"c":{"docs":{},"df":0,"/":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"y":{"docs":{"const-eval.html#constant-evaluation":{"tf":1.0}},"df":1}}}}}}}}}}}}},"l":{"docs":{},"df":0,"i":{"docs":{"appendix/stupid-stats.html#appendix-a-a-tutorial-on-creating-a-drop-in-replacement-for-rustc":{"tf":1.0}},"df":1}}}}},"_":{"docs":{},"df":0,"e":{"docs":{},"df":0,"v":{"docs":{"const-eval.html#constant-evaluation":{"tf":1.7320508075688773}},"df":1}}},"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{"type-inference.html#enforcing-equality--subtyping":{"tf":1.0},"traits/canonical-queries.html#examples":{"tf":1.0}},"df":2,"t":{"docs":{"type-inference.html#region-constraints":{"tf":2.449489742783178},"traits/hrtb.html#basic-matching-and-skolemization-leaks":{"tf":1.4142135623730952},"traits/canonicalization.html#canonicalizing-the-query-result":{"tf":1.0},"mir/regionck.html#final-example":{"tf":1.4142135623730952},"traits/associated-types.html#integration-with-unification":{"tf":1.4142135623730952},"type-inference.html#extracting-region-constraints":{"tf":3.1622776601683797},"traits/canonical-queries.html#a-trait-query-in-rustc":{"tf":1.0},"mir/regionck.html#region-variables-and-constraints":{"tf":1.4142135623730952},"traits/canonicalization.html#executing-the-query":{"tf":1.0},"traits/resolution.html#selection":{"tf":1.4142135623730952},"type-inference.html#trying-equality":{"tf":1.0},"mir/regionck.html#another-example":{"tf":1.0},"traits/regions.html#region-constraints":{"tf":1.0},"traits/index.html#trait-solving-new-style":{"tf":1.7320508075688773},"traits/canonical-queries.html#examples":{"tf":1.0},"mir/regionck.html#mir-based-region-checking-nll":{"tf":1.4142135623730952},"type-inference.html#enforcing-equality--subtyping":{"tf":1.4142135623730952},"type-inference.html#lexical-region-resolution":{"tf":1.0},"mir/regionck.html#back-to-our-example":{"tf":1.7320508075688773},"variance.html#the-algorithm":{"tf":2.23606797749979},"type-inference.html#subtyping-obligations":{"tf":1.4142135623730952},"mir/regionck.html#skolemization-and-outlives-constraints":{"tf":1.7320508075688773},"variance.html#constraints":{"tf":1.0},"mir/regionck.html#extending-the-universal-regions-check":{"tf":1.4142135623730952},"traits/canonicalization.html#processing-the-canonicalized-query-result":{"tf":1.4142135623730952}},"df":25}}}},"u":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{"macro-expansion.html#example":{"tf":1.4142135623730952},"diag.html#declaring-a-lint":{"tf":1.0},"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.4142135623730952},"mir/index.html#the-mir-mid-level-ir":{"tf":1.0},"mir/regionck.html#universes-and-skolemized-region-elements":{"tf":1.0},"diag.html#span":{"tf":1.0},"hir.html#out-of-band-storage-and-the--crate--type":{"tf":1.0},"traits/canonicalization.html#executing-the-query":{"tf":1.0},"incremental-compilation.html#the-query-dag":{"tf":1.0},"mir/construction.html#mir-construction":{"tf":1.0},"mir/passes.html#mir-passes":{"tf":1.4142135623730952},"name-resolution.html#scopes-and-ribs":{"tf":1.0}},"df":12,"o":{"docs":{},"df":0,"r":{"docs":{"query.html#adding-a-new-kind-of-query":{"tf":1.7320508075688773},"rustc-driver.html#the-rustc-driver":{"tf":1.0}},"df":2}}}}}}},"u":{"docs":{},"df":0,"m":{"docs":{"name-resolution.html#todo":{"tf":1.0},"macro-expansion.html#the-macro-parser":{"tf":1.0},"mir/index.html#key-mir-vocabulary":{"tf":1.0},"appendix/code-index.html#appendix-d-code-index":{"tf":1.0}},"df":4,"e":{"docs":{},"df":0,"d":{"docs":{},"df":0,"/":{"docs":{},"df":0,"f":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"g":{"docs":{},"df":0,"o":{"docs":{},"df":0,"t":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{"appendix/stupid-stats.html#compilercontroller":{"tf":1.0}},"df":1}}}}}}}}}}}}},"l":{"docs":{},"df":0,"t":{"docs":{"traits/specialization.html#specialization":{"tf":1.7320508075688773}},"df":1}}}},"d":{"docs":{"diag.html#declaring-a-lint":{"tf":1.0}},"df":1,"i":{"docs":{},"df":0,"t":{"docs":{"variance.html#trait-variance-and-vtable-resolution":{"tf":1.0},"traits/wf.html#well-formedness-checking":{"tf":1.0},"traits/lowering-to-logic.html#type-checking-normal-functions":{"tf":1.4142135623730952},"traits/resolution.html#candidate-assembly":{"tf":1.0},"traits/lowering-to-logic.html#rust-traits-and-logic":{"tf":1.0},"traits/chalk-overview.html#lowering":{"tf":1.7320508075688773},"traits/associated-types.html#associated-type-projection-and-normalization":{"tf":1.0}},"df":7,"i":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"_":{"docs":{},"df":0,"s":{"docs":{},"df":0,"p":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{"diag.html#declaring-a-lint":{"tf":1.4142135623730952}},"df":1}}}}}}}}}},".":{"docs":{},"df":0,"n":{"docs":{},"df":0,"o":{"docs":{},"df":0,"d":{"docs":{"diag.html#declaring-a-lint":{"tf":1.0}},"df":1}}}},"2":{"docs":{"traits/chalk-overview.html#lowering":{"tf":1.0}},"df":1},"1":{"docs":{"traits/chalk-overview.html#lowering":{"tf":1.0}},"df":1}},"c":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"t":{"docs":{"traits/resolution.html#major-concepts":{"tf":1.0},"diag.html#error-messages":{"tf":1.0},"mir/regionck.html#skolemization-and-universes":{"tf":1.0},"traits/specialization.html#specialization":{"tf":1.0},"tests/adding.html#normalization":{"tf":1.0},"compiletest.html#adding-a-new-header-command":{"tf":1.0},"mir/passes.html#stealing":{"tf":1.0}},"df":7}}},"l":{"docs":{},"df":0,"u":{"docs":{},"df":0,"d":{"docs":{"incremental-compilation.html#the-try-mark-green-algorithm":{"tf":1.0}},"df":1},"s":{"docs":{"traits/caching.html#an-example":{"tf":1.0}},"df":1}}},"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"n":{"docs":{"type-checking.html#type-collection":{"tf":1.0},"compiler-debugging.html#logging-etiquette":{"tf":1.0}},"df":2}},"p":{"docs":{},"df":0,"t":{"docs":{"traits/bibliography.html#bibliography":{"tf":1.0},"mir/index.html#key-mir-vocabulary":{"tf":1.0},"traits/hrtb.html#higher-ranked-trait-bounds":{"tf":1.0},"appendix/background.html#what-is-a-free-region-or-a-free-variable-what-about-bound-region":{"tf":1.4142135623730952},"appendix/background.html#what-is-a-control-flow-graph":{"tf":1.0},"mir/index.html#mir-data-types":{"tf":1.0},"mir/regionck.html#what-is-a-universe":{"tf":1.0},"type-inference.html#inference-variables":{"tf":1.0},"traits/canonicalization.html#canonicalization":{"tf":1.0},"traits/chalk-overview.html#parsing":{"tf":1.0},"traits/resolution.html#major-concepts":{"tf":1.0},"mir/index.html#the-mir-mid-level-ir":{"tf":1.0},"hir.html#the-hir":{"tf":1.0},"type-inference.html#enforcing-equality--subtyping":{"tf":1.0},"name-resolution.html#scopes-and-ribs":{"tf":1.0}},"df":15,"u":{"docs":{"query.html#how-the-compiler-executes-a-query":{"tf":1.0},"traits/canonicalization.html#processing-the-canonicalized-query-result":{"tf":1.0},"mir/index.html#key-mir-vocabulary":{"tf":1.0},"mir/regionck.html#what-is-a-universe":{"tf":1.0}},"df":4}}}},"a":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{"rustdoc.html#hot-potato":{"tf":1.0}},"df":1}}}}},"v":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"i":{"docs":{"mir/visitor.html#mir-visitor":{"tf":1.0},"conventions.html#prefer-exhaustive-matches":{"tf":1.0},"miri.html#miri":{"tf":1.0},"traits/chalk-overview.html#parsing":{"tf":1.0}},"df":4},"t":{"docs":{"conventions.html#formatting-and-the-tidy-script":{"tf":1.4142135623730952},"name-resolution.html#namespaces":{"tf":1.0},"tests/intro.html#other-tests":{"tf":1.4142135623730952},"rustdoc.html#hot-potato":{"tf":1.0},"ty.html#import-conventions":{"tf":1.0}},"df":5}},"r":{"docs":{},"df":0,"s":{"docs":{"type-checking.html#type-collection":{"tf":1.0},"rustdoc.html#from-crate-to-clean":{"tf":1.4142135623730952},"traits/resolution.html#candidate-assembly":{"tf":1.0}},"df":3},"t":{"docs":{"traits/resolution.html#confirmation":{"tf":1.0},"high-level-overview.html#the-main-stages-of-compilation":{"tf":1.0},"method-lookup.html#method-lookup":{"tf":1.4142135623730952},"type-inference.html#subtyping-obligations":{"tf":1.0},"traits/lowering-rules.html#lowering-where-clauses":{"tf":1.0},"appendix/stupid-stats.html#what-next":{"tf":1.0},"type-checking.html#type-collection":{"tf":1.0},"appendix/glossary.html#appendix-c-glossary":{"tf":1.4142135623730952},"rustdoc.html#from-crate-to-clean":{"tf":1.0},"traits/chalk-overview.html#lowering":{"tf":1.0},"traits/canonicalization.html#canonicalizing-the-query-result":{"tf":1.0},"hir.html#the-hir":{"tf":1.0},"traits/resolution.html#candidate-assembly":{"tf":1.7320508075688773},"tests/adding.html#normalization":{"tf":1.4142135623730952},"hir.html#the-hir-map":{"tf":1.4142135623730952},"traits/hrtb.html#higher-ranked-trait-obligations":{"tf":1.0},"type-inference.html#region-constraints":{"tf":1.0},"the-parser.html#the-parser":{"tf":1.0}},"df":18,"<":{"docs":{},"df":0,"i":{"docs":{},"df":0,"s":{"docs":{"traits/resolution.html#candidate-assembly":{"tf":1.0},"traits/resolution.html#confirmation":{"tf":1.0}},"df":2}},"$":{"docs":{},"df":0,"i":{"docs":{"traits/resolution.html#candidate-assembly":{"tf":1.0}},"df":1}},"t":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"g":{"docs":{},"df":0,"e":{"docs":{},"df":0,"t":{"docs":{"traits/resolution.html#confirmation":{"tf":1.0},"traits/resolution.html#candidate-assembly":{"tf":1.0}},"df":2}}}}}},"u":{"docs":{},"df":0,"s":{"docs":{"traits/resolution.html#confirmation":{"tf":1.0},"traits/resolution.html#candidate-assembly":{"tf":1.4142135623730952}},"df":2}}},"a":{"docs":{},"df":0,"l":{"docs":{"variance.html#trait-variance-and-vtable-resolution":{"tf":1.7320508075688773}},"df":1,"l":{"docs":{},"df":0,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"<":{"docs":{},"df":0,"i":{"docs":{},"df":0,"3":{"docs":{},"df":0,"2":{"docs":{"variance.html#trait-variance-and-vtable-resolution":{"tf":1.0}},"df":1}}}}}},"<":{"docs":{},"df":0,"a":{"docs":{},"df":0,",":{"docs":{},"df":0,"t":{"docs":{},"df":0,":":{"docs":{},"df":0,"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"v":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"t":{"docs":{},"df":0,"t":{"docs":{},"df":0,"o":{"docs":{},"df":0,"<":{"docs":{},"df":0,"a":{"docs":{},"df":0,">":{"docs":{},"df":0,">":{"docs":{},"df":0,"(":{"docs":{},"df":0,"v":{"docs":{"variance.html#trait-variance-and-vtable-resolution":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}}}}}},"(":{"docs":{},"df":0,"&":{"docs":{},"df":0,"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"l":{"docs":{},"df":0,"f":{"docs":{"traits/resolution.html#confirmation":{"tf":1.0},"traits/resolution.html#candidate-assembly":{"tf":1.0}},"df":2}}}}}},"t":{"docs":{},"df":0,"o":{"docs":{"variance.html#trait-variance-and-vtable-resolution":{"tf":1.4142135623730952},"variance.html#variance-and-object-types":{"tf":1.0}},"df":2,"<":{"docs":{},"df":0,"a":{"docs":{"variance.html#variance-and-object-types":{"tf":1.0}},"df":1},"i":{"docs":{},"df":0,"3":{"docs":{},"df":0,"2":{"docs":{"variance.html#trait-variance-and-vtable-resolution":{"tf":1.7320508075688773}},"df":1}}}},"(":{"docs":{},"df":0,"&":{"docs":{},"df":0,"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"l":{"docs":{},"df":0,"f":{"docs":{"variance.html#variance-and-object-types":{"tf":1.0}},"df":1}}}}}}}}}}}},"n":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{"query.html#adding-a-new-kind-of-query":{"tf":1.0},"appendix/background.html#what-is-a-control-flow-graph":{"tf":1.0}},"df":2}}}},"t":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"u":{"docs":{"traits/associated-types.html#associated-type-projection-and-normalization":{"tf":1.0},"traits/canonical-queries.html#the-traditional-interactive-prolog-query":{"tf":2.8284271247461905},"appendix/stupid-stats.html#compilercalls":{"tf":1.0},"traits/goals-and-clauses.html#coinductive-goals":{"tf":1.0},"appendix/stupid-stats.html#compilercontroller":{"tf":1.4142135623730952},"method-lookup.html#candidate-search":{"tf":1.0},"incremental-compilation.html#the-query-dag":{"tf":1.0},"method-lookup.html#candidate-assembly":{"tf":1.0}},"df":8}}},"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{"tests/running.html#running-tests":{"tf":1.0},"hir.html#out-of-band-storage-and-the--crate--type":{"tf":2.23606797749979},"macro-expansion.html#the-macro-parser":{"tf":1.0},"rustdoc.html#other-tricks-up-its-sleeve":{"tf":1.0},"mir/visitor.html#mir-visitor":{"tf":1.0},"macro-expansion.html#macro-expansion":{"tf":1.4142135623730952}},"df":6}},"x":{"docs":{},"df":0,"t":{"docs":{"traits/canonicalization.html#executing-the-query":{"tf":2.23606797749979},"mir/regionck.html#skolemization-and-outlives-constraints":{"tf":1.0},"ty.html#the--ty--module-representing-types":{"tf":1.0},"appendix/background.html#appendix-b-background-topics":{"tf":1.0},"mir/regionck.html#universes-and-skolemized-region-elements":{"tf":1.4142135623730952},"compiler-debugging.html#debugging-llvm":{"tf":1.0},"traits/canonicalization.html#processing-the-canonicalized-query-result":{"tf":1.4142135623730952},"type-inference.html#extracting-region-constraints":{"tf":1.0},"appendix/code-index.html#appendix-d-code-index":{"tf":1.4142135623730952},"traits/canonicalization.html#canonicalizing-the-query-result":{"tf":1.0},"ty.html#the-tcx-and-how-it-uses-lifetimes":{"tf":2.0},"traits/index.html#trait-solving-new-style":{"tf":1.0},"query.html#invoking-queries":{"tf":1.0},"type-inference.html#snapshots":{"tf":1.0},"traits/canonicalization.html#canonicalization":{"tf":1.4142135623730952},"rustdoc.html#from-clean-to-crate":{"tf":1.4142135623730952},"type-inference.html#creating-an-inference-context":{"tf":2.0},"type-inference.html#enforcing-equality--subtyping":{"tf":1.4142135623730952},"rustc-driver.html#the-rustc-driver":{"tf":1.4142135623730952},"appendix/glossary.html#appendix-c-glossary":{"tf":2.0},"param_env.html#parameter-environment":{"tf":1.0},"traits/associated-types.html#skolemized-associated-types":{"tf":1.0},"type-inference.html#inference-variables":{"tf":1.4142135623730952},"rustdoc.html#from-soup-to-nuts":{"tf":1.4142135623730952},"query.html#how-the-compiler-executes-a-query":{"tf":1.0}},"df":25}}},"r":{"docs":{},"df":0,"a":{"docs":{"appendix/background.html#what-is-co--and-contra-variance":{"tf":1.0}},"df":1,"v":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{"variance.html#variance-and-associated-types":{"tf":1.0},"variance.html#variance-of-type-and-lifetime-parameters":{"tf":1.0},"variance.html#the-algorithm":{"tf":1.4142135623730952},"variance.html#trait-variance-and-vtable-resolution":{"tf":1.0},"mir/regionck.html#subtyping-and-skolemization":{"tf":1.0}},"df":5}}}},"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{"mir/regionck.html#final-example":{"tf":1.0}},"df":1}}},"s":{"docs":{},"df":0,"t":{"docs":{"traits/resolution.html#selection":{"tf":1.0},"traits/canonicalization.html#canonicalizing-the-query-result":{"tf":1.0},"ty.html#the-tcx-and-how-it-uses-lifetimes":{"tf":1.0}},"df":3}}},"i":{"docs":{},"df":0,"b":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{"traits/chalk-overview.html#an-overview-of-chalk":{"tf":1.0},"walkthrough.html#walkthrough-a-typical-contribution":{"tf":1.0}},"df":2,"o":{"docs":{},"df":0,"r":{"docs":{"about-this-guide.html#about-this-guide":{"tf":1.0}},"df":1}}}}}},"o":{"docs":{},"df":0,"l":{"docs":{"mir/borrowck.html#mir-borrow-check":{"tf":1.0},"mir/passes.html#seeing-how-the-mir-changes-as-the-compiler-executes":{"tf":1.0},"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.4142135623730952},"query.html#queries-demand-driven-compilation":{"tf":1.0},"diag.html#error-messages":{"tf":1.0},"appendix/stupid-stats.html#the-driver-customisation-apis":{"tf":1.4142135623730952},"mir/regionck.html#skolemization-and-outlives-constraints":{"tf":1.0},"appendix/stupid-stats.html#compilercalls":{"tf":1.0},"appendix/glossary.html#appendix-c-glossary":{"tf":2.0},"mir/index.html#the-mir-mid-level-ir":{"tf":1.0},"rustdoc.html#hot-potato":{"tf":1.0},"mir/index.html#key-mir-vocabulary":{"tf":1.4142135623730952},"mir/regionck.html#universes-and-skolemized-region-elements":{"tf":1.0},"mir/regionck.html#representing-the-values-of-a-region-variable":{"tf":1.4142135623730952},"mir/index.html#introduction-to-mir":{"tf":1.0},"appendix/background.html#what-is-a-control-flow-graph":{"tf":2.449489742783178},"appendix/stupid-stats.html#compilercontroller":{"tf":1.4142135623730952}},"df":17,".":{"docs":{},"df":0,"a":{"docs":{},"df":0,"f":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"_":{"docs":{},"df":0,"p":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,".":{"docs":{},"df":0,"c":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{},"df":0,"l":{"docs":{},"df":0,"b":{"docs":{},"df":0,"a":{"docs":{},"df":0,"c":{"docs":{},"df":0,"k":{"docs":{"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.0}},"df":1}}}}}}}},"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"o":{"docs":{},"df":0,"p":{"docs":{"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}}},"a":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{"rustdoc.html#dotting-is-and-crossing-ts":{"tf":1.0},"hir.html#out-of-band-storage-and-the--crate--type":{"tf":1.7320508075688773},"high-level-overview.html#crate-structure":{"tf":1.7320508075688773},"mir/passes.html#seeing-how-the-mir-changes-as-the-compiler-executes":{"tf":1.0},"rustc-driver.html#a-note-on-lifetimes":{"tf":1.0},"rustdoc.html#from-soup-to-nuts":{"tf":1.0},"mir/regionck.html#what-is-a-universe":{"tf":1.4142135623730952},"hir.html#the-hir-map":{"tf":1.0},"query.html#cycles-between-queries":{"tf":1.0},"traits/canonicalization.html#executing-the-query":{"tf":1.0},"type-checking.html#type-checking":{"tf":1.0},"tests/intro.html#compiletest-test-suites":{"tf":1.0},"traits/lowering-module.html#unit-tests":{"tf":1.0},"traits/lowering-rules.html#associated-type-values":{"tf":1.0},"mir/visitor.html#traversal":{"tf":1.0},"traits/chalk-overview.html#parsing":{"tf":1.0},"appendix/code-index.html#appendix-d-code-index":{"tf":1.7320508075688773},"traits/chalk-overview.html#intermediate-representation-ir":{"tf":1.7320508075688773},"mir/regionck.html#skolemization-and-outlives-constraints":{"tf":1.0},"mir/index.html#mir-data-types":{"tf":1.0},"traits/canonicalization.html#canonicalizing-the-query":{"tf":1.4142135623730952},"appendix/stupid-stats.html#compilercalls":{"tf":1.4142135623730952},"traits/canonicalization.html#canonicalization":{"tf":1.0},"rustdoc.html#from-crate-to-clean":{"tf":1.0},"ty.html#allocating-and-working-with-types":{"tf":1.0},"appendix/stupid-stats.html#compilercontroller":{"tf":1.4142135623730952},"query.html#how-the-compiler-executes-a-query":{"tf":1.0},"appendix/stupid-stats.html#overview-of-the-compilation-process":{"tf":1.4142135623730952},"traits/resolution.html#candidate-assembly":{"tf":1.7320508075688773},"miri.html#allocations":{"tf":1.0},"traits/resolution.html#selection":{"tf":1.0},"tests/adding.html#tests-that-do-not-result-in-compile-errors":{"tf":1.0},"macro-expansion.html#the-macro-parser":{"tf":1.0},"miri.html#interpretation":{"tf":1.0},"mir/regionck.html#extending-the-universal-regions-check":{"tf":1.0},"traits/specialization.html#specialization":{"tf":1.0},"ty.html#beyond-types-other-kinds-of-arena-allocated-data-structures":{"tf":1.0},"the-parser.html#the-parser":{"tf":1.7320508075688773}},"df":38}}}}},"s":{"docs":{},"df":0,"t":{"docs":{"how-to-build-and-run.html#create-a-configtoml":{"tf":1.0}},"df":1}},"l":{"docs":{},"df":0,"u":{"docs":{},"df":0,"m":{"docs":{},"df":0,"n":{"docs":{"macro-expansion.html#example":{"tf":1.0}},"df":1}}},"o":{"docs":{},"df":0,"n":{"docs":{"compiletest.html#adding-a-new-header-command":{"tf":1.0}},"df":1},"r":{"docs":{"incremental-compilation.html#improvements-to-the-basic-algorithm":{"tf":1.7320508075688773},"incremental-compilation.html#the-basic-algorithm":{"tf":2.0},"incremental-compilation.html#the-try-mark-green-algorithm":{"tf":2.449489742783178}},"df":3}},"l":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{"rustdoc.html#from-crate-to-clean":{"tf":1.4142135623730952},"type-inference.html#region-constraints":{"tf":1.0},"rustdoc.html#from-soup-to-nuts":{"tf":1.4142135623730952},"type-checking.html#type-checking":{"tf":1.0},"rustdoc.html#other-tricks-up-its-sleeve":{"tf":1.0},"traits/resolution.html#candidate-assembly":{"tf":1.0},"type-checking.html#type-collection":{"tf":2.449489742783178},"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":2.0},"traits/associated-types.html#associated-type-projection-and-normalization":{"tf":1.0}},"df":9,"&":{"docs":{},"df":0,"b":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{"incrcomp-debugging.html#tracking-down-incorrect-edges":{"tf":1.0}},"df":1}}}},"(":{"docs":{},"df":0,"b":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{"incrcomp-debugging.html#tracking-down-incorrect-edges":{"tf":1.4142135623730952}},"df":1}}}}}}},"a":{"docs":{},"df":0,"p":{"docs":{},"df":0,"s":{"docs":{"rustdoc.html#hot-potato":{"tf":1.0}},"df":1}}}}},"u":{"docs":{},"df":0,"r":{"docs":{},"df":0,"s":{"docs":{"about-this-guide.html#about-this-guide":{"tf":1.0},"tests/adding.html#editing-and-updating-the-reference-files":{"tf":1.0},"traits/canonical-queries.html#canonical-queries":{"tf":1.0},"traits/specialization.html#specialization":{"tf":1.0},"high-level-overview.html#crate-structure":{"tf":1.0},"tests/running.html#running-a-subset-of-the-test-suites":{"tf":1.0},"traits/lowering-to-logic.html#type-checking-normal-functions":{"tf":1.0},"mir/regionck.html#mir-based-region-checking-nll":{"tf":1.4142135623730952},"type-checking.html#type-collection":{"tf":1.0}},"df":9}},"n":{"docs":{},"df":0,"t":{"docs":{"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.4142135623730952}},"df":1,"e":{"docs":{},"df":0,"r":{"docs":{"mir/regionck.html#what-is-a-universe":{"tf":1.4142135623730952},"mir/regionck.html#universes-and-skolemized-region-elements":{"tf":1.0}},"df":2,"p":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"t":{"docs":{"compiletest.html#header-commands":{"tf":1.0}},"df":1}}}}}}}},"p":{"docs":{},"df":0,"l":{"docs":{"rustdoc.html#other-tricks-up-its-sleeve":{"tf":1.0}},"df":1}}},"h":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"traits/resolution.html#overview":{"tf":1.4142135623730952},"traits/chalk-overview.html#well-formedness-checks":{"tf":1.0},"traits/specialization.html#specialization":{"tf":1.4142135623730952}},"df":3}}}},"h":{"docs":{},"df":0,"e":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{"rustdoc.html#cheat-sheet":{"tf":1.0}},"df":1},"p":{"docs":{"incremental-compilation.html#improvements-to-the-basic-algorithm":{"tf":1.0}},"df":1,"l":{"docs":{},"df":0,"i":{"docs":{"query.html#adding-a-new-kind-of-query":{"tf":1.4142135623730952},"query.html#how-the-compiler-executes-a-query":{"tf":1.0}},"df":2}}}},"c":{"docs":{},"df":0,"k":{"docs":{"traits/wf.html#well-formedness-checking":{"tf":2.0},"incremental-compilation.html#improvements-to-the-basic-algorithm":{"tf":1.0},"incrcomp-debugging.html#testing-the-dependency-graph":{"tf":1.0},"mir/regionck.html#subtyping-and-skolemization":{"tf":1.7320508075688773},"tests/adding.html#other-header-commands":{"tf":1.0},"type-checking.html#type-checking":{"tf":1.4142135623730952},"variance.html#variance-of-type-and-lifetime-parameters":{"tf":1.0},"traits/lowering-module.html#unit-tests":{"tf":1.0},"incrcomp-debugging.html#tracking-down-incorrect-edges":{"tf":1.0},"type-checking.html#type-collection":{"tf":1.4142135623730952},"diag.html#declaring-a-lint":{"tf":1.4142135623730952},"compiletest.html#adding-a-new-header-command":{"tf":1.0},"mir/regionck.html#what-is-a-universe":{"tf":1.0},"traits/lowering-to-logic.html#type-checking-generic-functions-beyond-horn-clauses":{"tf":2.6457513110645909},"how-to-build-and-run.html#running-xpy-and-building-a-stage1-compiler":{"tf":1.4142135623730952},"mir/regionck.html#final-example":{"tf":1.0},"traits/resolution.html#selection":{"tf":1.0},"type-inference.html#extracting-region-constraints":{"tf":1.0},"traits/index.html#trait-solving-new-style":{"tf":1.4142135623730952},"how-to-build-and-run.html#create-a-configtoml":{"tf":1.0},"high-level-overview.html#the-main-stages-of-compilation":{"tf":3.0},"rustc-driver.html#the-rustc-driver":{"tf":1.4142135623730952},"mir/regionck.html#the-mir-type-check":{"tf":1.0},"mir/regionck.html#another-example":{"tf":1.0},"mir/regionck.html#extending-the-universal-regions-check":{"tf":2.449489742783178},"appendix/stupid-stats.html#compilercontroller":{"tf":1.0},"mir/regionck.html#back-to-our-example":{"tf":1.0},"const-eval.html#constant-evaluation":{"tf":1.4142135623730952},"param_env.html#parameter-environment":{"tf":1.0},"appendix/code-index.html#appendix-d-code-index":{"tf":1.4142135623730952},"incrcomp-debugging.html#dumping-the-graph":{"tf":1.0},"mir/borrowck.html#mir-borrow-check":{"tf":1.7320508075688773},"traits/lowering-to-logic.html#type-checking-normal-functions":{"tf":2.6457513110645909},"mir/regionck.html#mir-based-region-checking-nll":{"tf":1.4142135623730952},"traits/resolution.html#candidate-assembly":{"tf":1.4142135623730952},"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.0},"type-inference.html#inference-variables":{"tf":1.0},"traits/canonical-queries.html#examples":{"tf":1.4142135623730952},"traits/hrtb.html#basic-matching-and-skolemization-leaks":{"tf":2.6457513110645909},"mir/borrowck.html#major-phases-of-the-borrow-checker":{"tf":1.0},"traits/resolution.html#major-concepts":{"tf":1.0},"mir/index.html#the-mir-mid-level-ir":{"tf":1.0},"incremental-compilation.html#the-basic-algorithm":{"tf":1.0},"mir/regionck.html#skolemization-and-outlives-constraints":{"tf":1.0},"appendix/stupid-stats.html#overview-of-the-compilation-process":{"tf":1.4142135623730952},"traits/resolution.html#selection-during-translation":{"tf":1.0},"diag.html#error-messages":{"tf":1.0},"conventions.html#using-crates-from-cratesio":{"tf":1.0},"tests/adding.html#header-commands-configuring-rustc":{"tf":1.0},"mir/passes.html#mir-passes":{"tf":1.4142135623730952},"traits/chalk-overview.html#well-formedness-checks":{"tf":1.7320508075688773},"appendix/glossary.html#appendix-c-glossary":{"tf":2.23606797749979},"tests/intro.html#compiletest-test-suites":{"tf":1.7320508075688773},"appendix/background.html#what-is-co--and-contra-variance":{"tf":1.0},"traits/resolution.html#overview":{"tf":1.0},"traits/hrtb.html#higher-ranked-trait-obligations":{"tf":1.0},"mir/index.html#key-mir-vocabulary":{"tf":1.0},"traits/specialization.html#specialization":{"tf":1.4142135623730952},"mir/regionck.html#skolemization-and-universes":{"tf":1.0},"incremental-compilation.html#the-try-mark-green-algorithm":{"tf":1.0},"compiletest.html#introduction":{"tf":1.0}},"df":61,"s":{"docs":{},"df":0,"=":{"docs":{},"df":0,"o":{"docs":{},"df":0,"f":{"docs":{},"df":0,"f":{"docs":{"tests/adding.html#header-commands-configuring-rustc":{"tf":1.0}},"df":1}}}}},"_":{"docs":{},"df":0,"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{},"df":0,"_":{"docs":{},"df":0,"f":{"docs":{},"df":0,"a":{"docs":{},"df":0,"i":{"docs":{},"df":0,"l":{"docs":{},"df":0,"u":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"_":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{},"df":0,"u":{"docs":{"compiletest.html#implementing-the-behavior-change":{"tf":1.0}},"df":1,"s":{"docs":{},"df":0,"(":{"docs":{},"df":0,"&":{"docs":{},"df":0,"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"l":{"docs":{},"df":0,"f":{"docs":{"compiletest.html#implementing-the-behavior-change":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"df":0,"x":{"docs":{},"df":0,"p":{"docs":{},"df":0,"r":{"docs":{"diag.html#declaring-a-lint":{"tf":1.0}},"df":1,"(":{"docs":{},"df":0,"&":{"docs":{},"df":0,"m":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{"diag.html#declaring-a-lint":{"tf":1.0}},"df":1}}}}}}}}}},"e":{"docs":{},"df":0,"r":{"docs":{"mir/borrowck.html#major-phases-of-the-borrow-checker":{"tf":2.23606797749979},"compiler-debugging.html#formatting-graphviz-output-dot-files":{"tf":1.0},"appendix/glossary.html#appendix-c-glossary":{"tf":1.4142135623730952},"mir/regionck.html#mir-based-region-checking-nll":{"tf":1.7320508075688773},"type-inference.html#extracting-region-constraints":{"tf":1.0},"traits/canonical-queries.html#examples":{"tf":2.0},"high-level-overview.html#the-main-stages-of-compilation":{"tf":1.0},"traits/canonical-queries.html#canonical-queries":{"tf":1.0},"traits/index.html#trait-solving-new-style":{"tf":1.0},"mir/index.html#the-mir-mid-level-ir":{"tf":1.0},"mir/borrowck.html#mir-borrow-check":{"tf":2.0},"mir/regionck.html#what-is-a-universe":{"tf":1.4142135623730952},"appendix/background.html#what-is-co--and-contra-variance":{"tf":1.0}},"df":13},"d":{"docs":{},"df":0,"s":{"docs":{},"df":0,"u":{"docs":{},"df":0,"b":{"docs":{},"df":0,"(":{"docs":{},"df":0,"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{"miri.html#miri":{"tf":1.0}},"df":1}}}}}}}}}}}}}},"u":{"docs":{},"df":0,"n":{"docs":{},"df":0,"k":{"docs":{"query.html#queries-demand-driven-compilation":{"tf":1.0}},"df":1}},"r":{"docs":{},"df":0,"n":{"docs":{"rustdoc.html#the-walking-tour-of-rustdoc":{"tf":1.0}},"df":1}}},"i":{"docs":{},"df":0,"l":{"docs":{},"df":0,"d":{"docs":{"rustdoc.html#hot-potato":{"tf":1.0},"rustdoc.html#from-clean-to-crate":{"tf":1.0},"mir/regionck.html#what-is-a-universe":{"tf":2.449489742783178}},"df":3,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{"mir/regionck.html#what-is-a-universe":{"tf":1.0}},"df":1}}}}}},"a":{"docs":{},"df":0,"l":{"docs":{},"df":0,"k":{"docs":{"type-inference.html#inference-variables":{"tf":1.0},"traits/chalk-overview.html#parsing":{"tf":2.0},"traits/lowering-rules.html#function-and-constant-values":{"tf":1.0},"traits/chalk-overview.html#blog-posts":{"tf":2.449489742783178},"traits/chalk-overview.html#resources":{"tf":1.4142135623730952},"traits/chalk-overview.html#intermediate-representation-ir":{"tf":1.0},"traits/lowering-module.html#the--program_clauses_for--query":{"tf":1.0},"traits/chalk-overview.html#an-overview-of-chalk":{"tf":1.7320508075688773},"traits/specialization.html#specialization":{"tf":1.0},"traits/lowering-rules.html#lowering-function-and-constant-declarations":{"tf":1.0},"traits/lowering-rules.html#transforming-the-lowered-where-clauses":{"tf":1.0}},"df":11,"'":{"docs":{"traits/chalk-overview.html#testing":{"tf":1.0}},"df":1}}},"o":{"docs":{},"df":0,"t":{"docs":{},"df":0,"i":{"docs":{},"df":0,"c":{"docs":{"conventions.html#formatting-and-the-tidy-script":{"tf":1.0}},"df":1}}}},"p":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"traits/goals-and-clauses.html#goals-and-clauses":{"tf":1.0},"conventions.html#formatting-and-the-tidy-script":{"tf":1.0},"compiletest.html#introduction":{"tf":1.0},"macro-expansion.html#example":{"tf":1.7320508075688773},"variance.html#variance-of-type-and-lifetime-parameters":{"tf":1.0},"appendix/background.html#what-is-co--and-contra-variance":{"tf":1.4142135623730952},"hir.html#the-hir":{"tf":1.0},"type-inference.html#enforcing-equality--subtyping":{"tf":1.0},"appendix/code-index.html#appendix-d-code-index":{"tf":1.0},"traits/resolution.html#trait-resolution-old-style":{"tf":1.7320508075688773},"traits/goals-and-clauses.html#incomplete-chapter":{"tf":1.0},"traits/canonicalization.html#canonicalization":{"tf":1.0},"traits/lowering-rules.html#notation":{"tf":1.0},"macro-expansion.html#macro-expansion":{"tf":1.0},"traits/index.html#trait-solving-new-style":{"tf":2.0},"about-this-guide.html#about-this-guide":{"tf":1.0},"traits/wf.html#well-formedness-checking":{"tf":1.0},"rustdoc.html#the-walking-tour-of-rustdoc":{"tf":1.4142135623730952},"type-inference.html#creating-an-inference-context":{"tf":1.4142135623730952},"mir/index.html#key-mir-vocabulary":{"tf":1.0},"appendix/glossary.html#appendix-c-glossary":{"tf":3.0},"diag.html#emitting-diagnostics":{"tf":1.0},"traits/lowering-rules.html#associated-type-declarations":{"tf":1.0}},"df":23}}}},"n":{"docs":{},"df":0,"g":{"docs":{"appendix/stupid-stats.html#what-next":{"tf":1.0},"how-to-build-and-run.html#running-xpy-and-building-a-stage1-compiler":{"tf":1.0},"tests/adding.html#editing-and-updating-the-reference-files":{"tf":1.0},"mir/index.html#key-mir-vocabulary":{"tf":1.0},"mir/visitor.html#mir-visitor":{"tf":1.0},"conventions.html#how-to-structure-your-pr":{"tf":1.4142135623730952},"diag.html#edition-gated-lints":{"tf":1.0},"appendix/glossary.html#appendix-c-glossary":{"tf":1.7320508075688773},"name-resolution.html#scopes-and-ribs":{"tf":1.4142135623730952},"how-to-build-and-run.html#create-a-configtoml":{"tf":1.0},"method-lookup.html#candidate-assembly":{"tf":1.0},"about-this-guide.html#about-this-guide":{"tf":1.0},"hir.html#identifiers-in-the-hir":{"tf":1.0},"query.html#adding-a-new-kind-of-query":{"tf":1.0},"incremental-compilation.html#the-query-dag":{"tf":1.0},"incremental-compilation.html#improvements-to-the-basic-algorithm":{"tf":1.0},"tests/running.html#running-tests":{"tf":1.0},"appendix/stupid-stats.html#appendix-a-a-tutorial-on-creating-a-drop-in-replacement-for-rustc":{"tf":1.0},"traits/hrtb.html#basic-matching-and-skolemization-leaks":{"tf":1.0},"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.0},"compiletest.html#implementing-the-behavior-change":{"tf":2.23606797749979},"high-level-overview.html#the-main-stages-of-compilation":{"tf":1.0},"incremental-compilation.html#the-basic-algorithm":{"tf":1.4142135623730952},"variance.html#variance-and-associated-types":{"tf":1.0},"miri.html#allocations":{"tf":1.0},"incremental-compilation.html#the-try-mark-green-algorithm":{"tf":1.0},"mir/passes.html#seeing-how-the-mir-changes-as-the-compiler-executes":{"tf":1.0},"incrcomp-debugging.html#dumping-the-graph":{"tf":1.0},"high-level-overview.html#crate-structure":{"tf":1.4142135623730952},"appendix/stupid-stats.html#compilercalls":{"tf":1.0},"type-inference.html#snapshots":{"tf":1.7320508075688773},"variance.html#dependency-graph-management":{"tf":1.4142135623730952},"appendix/stupid-stats.html#compilercontroller":{"tf":1.4142135623730952},"traits/associated-types.html#associated-type-projection-and-normalization":{"tf":1.0},"compiler-debugging.html#getting-logging-output":{"tf":1.0}},"df":35},"c":{"docs":{"mir/passes.html#implementing-and-registering-a-pass":{"tf":1.0},"conventions.html#prefer-exhaustive-matches":{"tf":1.0},"hir.html#out-of-band-storage-and-the--crate--type":{"tf":1.0}},"df":3}},"r":{"docs":{"traits/resolution.html#confirmation":{"tf":1.7320508075688773}},"df":1,"t":{"docs":{"appendix/background.html#what-is-a-control-flow-graph":{"tf":1.0}},"df":1},"a":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{"macro-expansion.html#example":{"tf":1.4142135623730952},"appendix/code-index.html#appendix-d-code-index":{"tf":1.0},"conventions.html#line-length":{"tf":1.0},"the-parser.html#the-parser":{"tf":1.0}},"df":4,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{"mir/index.html#introduction-to-mir":{"tf":1.0}},"df":1}}}}}}}},"g":{"docs":{"the-parser.html#the-parser":{"tf":1.0}},"df":1}}},"o":{"docs":{},"df":0,"i":{"docs":{},"df":0,"c":{"docs":{"tests/running.html#running-a-subset-of-the-test-suites":{"tf":1.0}},"df":1}},"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{"traits/resolution.html#confirmation":{"tf":1.0}},"df":1}}},"o":{"docs":{},"df":0,"s":{"docs":{"ty.html#import-conventions":{"tf":1.0},"traits/resolution.html#major-concepts":{"tf":1.0},"traits/resolution.html#selection-during-translation":{"tf":1.0},"appendix/stupid-stats.html#compilercalls":{"tf":1.0},"diag.html#declaring-a-lint":{"tf":1.0}},"df":5}}}},"p":{"docs":{"how-to-build-and-run.html#create-a-configtoml":{"tf":1.0}},"df":1,"u":{"docs":{"tests/intro.html#testing-on-emulators":{"tf":1.0}},"df":1}},"s":{"docs":{},"df":0,"s":{"docs":{"rustdoc.html#from-clean-to-crate":{"tf":1.0}},"df":1,"/":{"docs":{},"df":0,"j":{"docs":{"rustdoc.html#cheat-sheet":{"tf":1.0}},"df":1}}}},"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{},"df":0,"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{"appendix/code-index.html#appendix-d-code-index":{"tf":1.0},"ty.html#the--ty--module-representing-types":{"tf":1.0},"ty.html#the-tcx-and-how-it-uses-lifetimes":{"tf":1.0},"rustdoc.html#from-crate-to-clean":{"tf":1.0},"high-level-overview.html#crate-structure":{"tf":1.0}},"df":5}}}}},"r":{"docs":{},"df":0,"t":{"docs":{},"df":0,"a":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{"tests/intro.html#compiletest-test-suites":{"tf":1.0},"name-resolution.html#scopes-and-ribs":{"tf":1.0},"high-level-overview.html#the-main-stages-of-compilation":{"tf":1.0},"rustdoc.html#from-clean-to-crate":{"tf":1.0},"tests/adding.html#revisions":{"tf":1.0},"mir/index.html#the-mir-mid-level-ir":{"tf":1.0},"diag.html#declaring-a-lint":{"tf":1.0}},"df":7,"t":{"docs":{},"df":0,"i":{"docs":{"traits/canonicalization.html#canonicalizing-the-query-result":{"tf":2.0},"traits/canonicalization.html#processing-the-canonicalized-query-result":{"tf":1.4142135623730952},"traits/canonical-queries.html#a-trait-query-in-rustc":{"tf":1.0},"traits/canonicalization.html#executing-the-query":{"tf":1.4142135623730952},"traits/canonical-queries.html#examples":{"tf":1.4142135623730952}},"df":5}}}}}}},"l":{"docs":{},"df":0,"l":{"docs":{"rustdoc.html#from-soup-to-nuts":{"tf":1.0}},"df":1}}},"a":{"docs":{},"df":0,"t":{"docs":{"mir/passes.html#seeing-how-the-mir-changes-as-the-compiler-executes":{"tf":1.0},"compiler-debugging.html#getting-a-backtrace-for-errors":{"tf":1.0}},"df":2},"m":{"docs":{},"df":0,"e":{"docs":{"mir/passes.html#stealing":{"tf":1.0},"tests/adding.html#naming-your-test":{"tf":1.0},"mir/passes.html#implementing-and-registering-a-pass":{"tf":1.0},"incrcomp-debugging.html#tracking-down-incorrect-edges":{"tf":1.0}},"df":4}},"l":{"docs":{},"df":0,"l":{"docs":{"rustdoc.html#the-walking-tour-of-rustdoc":{"tf":1.0},"traits/associated-types.html#skolemized-associated-types":{"tf":1.0},"traits/chalk-overview.html#intermediate-representation-ir":{"tf":1.0},"param_env.html#parameter-environment":{"tf":1.0},"query.html#cycles-between-queries":{"tf":1.0},"incremental-compilation.html#the-try-mark-green-algorithm":{"tf":1.0},"appendix/background.html#what-is-a-free-region-or-a-free-variable-what-about-bound-region":{"tf":1.0},"how-to-build-and-run.html#running-xpy-and-building-a-stage1-compiler":{"tf":1.7320508075688773},"mir/regionck.html#back-to-our-example":{"tf":1.0},"variance.html#trait-variance-and-vtable-resolution":{"tf":1.4142135623730952},"mir/regionck.html#another-example":{"tf":1.7320508075688773},"name-resolution.html#todo":{"tf":1.0},"mir/regionck.html#representing-the-values-of-a-region-variable":{"tf":1.0},"traits/hrtb.html#basic-matching-and-skolemization-leaks":{"tf":1.0},"compiler-debugging.html#getting-a-backtrace-for-errors":{"tf":1.4142135623730952},"query.html#queries-demand-driven-compilation":{"tf":1.0},"hir.html#the-hir-map":{"tf":1.0},"miri.html#miri":{"tf":1.4142135623730952},"appendix/stupid-stats.html#overview-of-the-compilation-process":{"tf":1.4142135623730952},"const-eval.html#constant-evaluation":{"tf":1.0},"traits/resolution.html#major-concepts":{"tf":1.0},"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":2.23606797749979},"compiler-debugging.html#logging-etiquette":{"tf":1.4142135623730952},"macro-expansion.html#example":{"tf":1.7320508075688773},"tests/intro.html#compiletest-test-suites":{"tf":1.0},"compiler-debugging.html#getting-logging-output":{"tf":2.8284271247461905},"appendix/stupid-stats.html#compilercalls":{"tf":1.0},"method-lookup.html#candidate-assembly":{"tf":2.23606797749979},"traits/resolution.html#selection-during-translation":{"tf":1.0},"mir/index.html#key-mir-vocabulary":{"tf":1.7320508075688773},"mir/regionck.html#what-is-a-universe":{"tf":1.7320508075688773},"macro-expansion.html#the-macro-parser":{"tf":1.4142135623730952},"type-inference.html#snapshots":{"tf":1.0},"appendix/background.html#what-is-a-control-flow-graph":{"tf":1.0},"how-to-build-and-run.html#how-to-build-the-compiler-and-run-what-you-built":{"tf":1.0},"mir/regionck.html#skolemization-and-universes":{"tf":1.0},"diag.html#error-messages":{"tf":1.0},"rustdoc.html#from-clean-to-crate":{"tf":1.4142135623730952},"the-parser.html#the-parser":{"tf":1.0},"mir/regionck.html#mir-based-region-checking-nll":{"tf":1.0},"traits/goals-and-clauses.html#domain-goals":{"tf":1.0},"miri.html#interpretation":{"tf":1.7320508075688773},"type-inference.html#a-note-on-terminology":{"tf":1.0},"appendix/stupid-stats.html#compilercontroller":{"tf":1.7320508075688773},"macro-expansion.html#macro-expansion":{"tf":1.0},"traits/lowering-to-logic.html#lowering-to-logic":{"tf":1.0},"traits/chalk-overview.html#well-formedness-checks":{"tf":1.0},"traits/lowering-to-logic.html#type-checking-normal-functions":{"tf":2.0},"conventions.html#formatting-and-the-tidy-script":{"tf":1.0},"appendix/glossary.html#appendix-c-glossary":{"tf":1.4142135623730952},"variance.html#variance-and-object-types":{"tf":2.23606797749979},"traits/lowering-to-logic.html#type-checking-generic-functions-beyond-horn-clauses":{"tf":1.0},"rustdoc.html#from-crate-to-clean":{"tf":1.4142135623730952},"traits/resolution.html#candidate-assembly":{"tf":1.4142135623730952},"query.html#adding-a-new-kind-of-query":{"tf":1.0},"type-inference.html#enforcing-equality--subtyping":{"tf":1.0},"tests/intro.html#the-compiler-testing-framework":{"tf":1.0},"incremental-compilation.html#the-basic-algorithm":{"tf":1.0},"compiler-debugging.html#debugging-llvm":{"tf":1.4142135623730952},"diag.html#declaring-a-lint":{"tf":1.0},"compiler-debugging.html#expensive-operations-in-logs":{"tf":1.0},"mir/regionck.html#subtyping-and-skolemization":{"tf":1.4142135623730952},"traits/chalk-overview.html#testing":{"tf":1.0},"appendix/stupid-stats.html#appendix-a-a-tutorial-on-creating-a-drop-in-replacement-for-rustc":{"tf":1.0},"query.html#how-the-compiler-executes-a-query":{"tf":1.0},"method-lookup.html#method-lookup":{"tf":2.0},"compiletest.html#adding-a-new-header-command":{"tf":1.0},"mir/regionck.html#skolemization-and-outlives-constraints":{"tf":1.0}},"df":68,"b":{"docs":{},"df":0,"a":{"docs":{},"df":0,"c":{"docs":{},"df":0,"k":{"docs":{"rustc-driver.html#the-rustc-driver":{"tf":1.4142135623730952},"rustc-driver.html#a-note-on-lifetimes":{"tf":1.4142135623730952},"appendix/stupid-stats.html#compilercontroller":{"tf":2.449489742783178},"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.4142135623730952},"appendix/code-index.html#appendix-d-code-index":{"tf":1.0}},"df":5}}}},"e":{"docs":{},"df":0,"r":{"docs":{"mir/regionck.html#representing-the-values-of-a-region-variable":{"tf":1.0},"traits/resolution.html#major-concepts":{"tf":1.4142135623730952},"incrcomp-debugging.html#testing-the-dependency-graph":{"tf":1.0},"variance.html#variance-and-object-types":{"tf":1.0}},"df":4,"'":{"docs":{"mir/regionck.html#representing-the-values-of-a-region-variable":{"tf":1.4142135623730952}},"df":1}},"e":{"docs":{},"df":0,".":{"docs":{},"df":0,"r":{"docs":{"incrcomp-debugging.html#testing-the-dependency-graph":{"tf":1.0}},"df":1}}}}}},"c":{"docs":{},"df":0,"h":{"docs":{"tests/running.html#running-tests":{"tf":1.0},"rustdoc.html#from-clean-to-crate":{"tf":1.0},"traits/caching.html#an-example":{"tf":2.0},"traits/caching.html#caching-and-subtle-considerations-therewith":{"tf":2.0},"traits/canonicalization.html#canonicalization":{"tf":1.0},"traits/specialization.html#specialization":{"tf":1.0},"mir/passes.html#stealing":{"tf":1.0},"traits/caching.html#where-clauses-and-the-local-vs-global-cache":{"tf":2.8284271247461905},"method-lookup.html#method-lookup":{"tf":1.0},"query.html#how-the-compiler-executes-a-query":{"tf":1.7320508075688773}},"df":10,"e":{"docs":{},"df":0,"a":{"docs":{},"df":0,"b":{"docs":{},"df":0,"l":{"docs":{"method-lookup.html#method-lookup":{"tf":1.0}},"df":1}}}}}},"p":{"docs":{},"df":0,"a":{"docs":{},"df":0,"b":{"docs":{},"df":0,"l":{"docs":{"incrcomp-debugging.html#dumping-the-graph":{"tf":1.0}},"df":1}}},"t":{"docs":{},"df":0,"u":{"docs":{},"df":0,"r":{"docs":{"tests/adding.html#what-kind-of-test-should-i-add":{"tf":1.0},"traits/lowering-to-logic.html#rust-traits-and-logic":{"tf":1.0},"tests/adding.html#guide-to-the-ui-tests":{"tf":1.4142135623730952}},"df":3}}}},"s":{"docs":{},"df":0,"e":{"docs":{"mir/regionck.html#back-to-our-example":{"tf":1.0},"traits/hrtb.html#basic-matching-and-skolemization-leaks":{"tf":1.4142135623730952},"traits/lowering-rules.html#trait-header":{"tf":1.4142135623730952},"traits/associated-types.html#associated-type-projection-and-normalization":{"tf":1.7320508075688773},"tests/adding.html#what-kind-of-test-should-i-add":{"tf":1.0},"compiletest.html#introduction":{"tf":1.0},"traits/hrtb.html#higher-ranked-trait-obligations":{"tf":1.0},"traits/canonicalization.html#canonicalizing-the-query":{"tf":1.0},"tests/adding.html#normalization":{"tf":1.0},"traits/associated-types.html#projection-equality":{"tf":1.0},"traits/chalk-overview.html#an-overview-of-chalk":{"tf":1.0},"tests/adding.html#tests-that-do-not-result-in-compile-errors":{"tf":1.0},"traits/resolution.html#candidate-assembly":{"tf":2.0},"const-eval.html#constant-evaluation":{"tf":1.0},"mir/regionck.html#another-example":{"tf":1.0},"type-inference.html#region-constraints":{"tf":1.0},"incrcomp-debugging.html#dumping-the-graph":{"tf":1.0},"mir/regionck.html#extending-the-universal-regions-check":{"tf":1.0},"tests/running.html#running-tests":{"tf":1.0},"query.html#how-the-compiler-executes-a-query":{"tf":1.4142135623730952},"query.html#adding-a-new-kind-of-query":{"tf":1.4142135623730952},"mir/index.html#key-mir-vocabulary":{"tf":1.7320508075688773},"type-inference.html#enforcing-equality--subtyping":{"tf":1.0},"traits/associated-types.html#integration-with-unification":{"tf":1.0},"miri.html#allocations":{"tf":1.0},"traits/resolution.html#major-concepts":{"tf":1.4142135623730952},"appendix/glossary.html#appendix-c-glossary":{"tf":1.0},"traits/lowering-module.html#unit-tests":{"tf":1.0},"traits/canonicalization.html#canonicalizing-the-query-result":{"tf":1.0},"appendix/stupid-stats.html#appendix-a-a-tutorial-on-creating-a-drop-in-replacement-for-rustc":{"tf":1.0},"traits/canonicalization.html#canonicalization":{"tf":1.4142135623730952},"method-lookup.html#candidate-assembly":{"tf":1.7320508075688773},"traits/canonical-queries.html#a-trait-query-in-rustc":{"tf":1.4142135623730952},"traits/canonicalization.html#processing-the-canonicalized-query-result":{"tf":1.0},"ty.html#the-tcx-and-how-it-uses-lifetimes":{"tf":1.0},"incremental-compilation.html#the-try-mark-green-algorithm":{"tf":1.4142135623730952},"method-lookup.html#candidate-search":{"tf":1.0},"query.html#cycles-between-queries":{"tf":1.7320508075688773},"compiletest.html#adding-a-new-header-command":{"tf":1.7320508075688773},"mir/regionck.html#what-is-a-universe":{"tf":1.0},"name-resolution.html#namespaces":{"tf":1.4142135623730952},"diag.html#error-messages":{"tf":1.0},"compiletest.html#implementing-the-behavior-change":{"tf":1.4142135623730952},"incremental-compilation.html#the-query-dag":{"tf":1.4142135623730952},"mir/regionck.html#final-example":{"tf":1.0},"conventions.html#line-length":{"tf":1.0},"param_env.html#parameter-environment":{"tf":1.0},"macro-expansion.html#the-macro-parser":{"tf":1.4142135623730952},"traits/caching.html#caching-and-subtle-considerations-therewith":{"tf":1.0},"variance.html#constraints":{"tf":1.0},"traits/canonical-queries.html#the-traditional-interactive-prolog-query":{"tf":1.7320508075688773},"variance.html#variance-of-type-and-lifetime-parameters":{"tf":1.0},"miri.html#miri":{"tf":1.7320508075688773},"traits/specialization.html#specialization":{"tf":1.0},"incremental-compilation.html#improvements-to-the-basic-algorithm":{"tf":1.0},"tests/intro.html#compiletest-test-suites":{"tf":1.0},"traits/resolution.html#overview":{"tf":1.0},"traits/associated-types.html#skolemized-associated-types":{"tf":1.0},"type-inference.html#trying-equality":{"tf":1.0},"diag.html#suggestions":{"tf":1.4142135623730952},"traits/resolution.html#confirmation":{"tf":1.0},"compiler-debugging.html#getting-logging-output":{"tf":1.0},"tests/adding.html#naming-your-test":{"tf":1.0},"traits/lowering-rules.html#lowering-where-clauses":{"tf":1.0},"traits/goals-and-clauses.html#coinductive-goals":{"tf":1.4142135623730952},"type-inference.html#subtyping-obligations":{"tf":2.0},"traits/canonical-queries.html#examples":{"tf":1.0},"compiler-debugging.html#logging-etiquette":{"tf":1.0},"variance.html#trait-variance-and-vtable-resolution":{"tf":1.4142135623730952},"tests/adding.html#guide-to-the-ui-tests":{"tf":1.0}},"df":70}},"r":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{"traits/canonical-queries.html#a-trait-query-in-rustc":{"tf":1.0},"hir.html#identifiers-in-the-hir":{"tf":1.4142135623730952},"type-inference.html#enforcing-equality--subtyping":{"tf":1.0},"appendix/glossary.html#appendix-c-glossary":{"tf":2.23606797749979}},"df":4,"e":{"docs":{},"df":0,"r":{"docs":{"traits/lowering-rules.html#trait-header":{"tf":1.0}},"df":1}}}},"g":{"docs":{},"df":0,"o":{"docs":{"tests/intro.html#other-tests":{"tf":2.0},"appendix/stupid-stats.html#appendix-a-a-tutorial-on-creating-a-drop-in-replacement-for-rustc":{"tf":1.0},"hir.html#the-hir":{"tf":1.0},"conventions.html#using-crates-from-cratesio":{"tf":1.0},"rustdoc.html#cheat-sheet":{"tf":1.0},"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":2.6457513110645909}},"df":6,"'":{"docs":{"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.0}},"df":1},"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{"tests/intro.html#other-tests":{"tf":1.0}},"df":1}}}}}},"e":{"docs":{"mir/passes.html#stealing":{"tf":1.0},"compiler-debugging.html#logging-etiquette":{"tf":1.0},"rustdoc.html#from-clean-to-crate":{"tf":1.0},"mir/regionck.html#skolemization-and-outlives-constraints":{"tf":1.0},"macro-expansion.html#example":{"tf":1.7320508075688773},"param_env.html#parameter-environment":{"tf":1.0},"traits/specialization.html#specialization":{"tf":1.0},"type-inference.html#subtyping-obligations":{"tf":1.0},"variance.html#dependency-graph-management":{"tf":1.0},"variance.html#variance-and-object-types":{"tf":1.0}},"df":10,"t":{"docs":{"tests/adding.html#error-annotations":{"tf":1.0}},"df":1}}},"u":{"docs":{},"df":0,"t":{"docs":{},"df":0,"i":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{"compiler-debugging.html#expensive-operations-in-logs":{"tf":1.0}},"df":1}}}},"s":{"docs":{"rustdoc.html#hot-potato":{"tf":1.0},"conventions.html#how-to-structure-your-pr":{"tf":1.0},"appendix/stupid-stats.html#overview-of-the-compilation-process":{"tf":1.0},"mir/passes.html#stealing":{"tf":1.0},"traits/resolution.html#selection":{"tf":1.0},"hir.html#identifiers-in-the-hir":{"tf":1.0},"compiler-debugging.html#debugging-llvm":{"tf":1.4142135623730952},"traits/resolution.html#candidate-assembly":{"tf":1.0}},"df":8,"a":{"docs":{},"df":0,"l":{"docs":{"mir/regionck.html#causal-tracking":{"tf":1.4142135623730952}},"df":1}}},"g":{"docs":{},"df":0,"h":{"docs":{},"df":0,"t":{"docs":{"incremental-compilation.html#footnotes":{"tf":1.0}},"df":1}}}},"n":{"docs":{},"df":0,"'":{"docs":{},"df":0,"t":{"docs":{"high-level-overview.html#the-main-stages-of-compilation":{"tf":1.4142135623730952},"mir/regionck.html#skolemization-and-outlives-constraints":{"tf":1.0},"appendix/stupid-stats.html#compilercontroller":{"tf":1.0},"traits/associated-types.html#skolemized-associated-types":{"tf":1.0},"miri.html#datastructures":{"tf":1.0},"type-inference.html#subtyping-obligations":{"tf":1.0},"traits/resolution.html#major-concepts":{"tf":1.0},"traits/lowering-to-logic.html#lowering-to-logic":{"tf":1.0},"name-resolution.html#scopes-and-ribs":{"tf":1.0},"mir/regionck.html#skolemization-and-universes":{"tf":1.0},"mir/regionck.html#back-to-our-example":{"tf":1.0},"mir/borrowck.html#mir-borrow-check":{"tf":2.0},"traits/chalk-overview.html#lowering":{"tf":1.0}},"df":13}},"o":{"docs":{},"df":0,"n":{"docs":{"traits/canonical-queries.html#canonical-queries":{"tf":1.4142135623730952},"traits/canonicalization.html#canonicalization":{"tf":2.23606797749979},"appendix/glossary.html#appendix-c-glossary":{"tf":1.0},"traits/canonicalization.html#canonicalizing-the-query":{"tf":1.4142135623730952},"traits/canonicalization.html#canonicalizing-the-query-result":{"tf":1.4142135623730952},"traits/canonicalization.html#processing-the-canonicalized-query-result":{"tf":2.23606797749979},"traits/index.html#trait-solving-new-style":{"tf":1.0},"traits/canonicalization.html#executing-the-query":{"tf":2.23606797749979}},"df":8,"i":{"docs":{},"df":0,"c":{"docs":{"traits/canonicalization.html#canonicalizing-the-query-result":{"tf":2.449489742783178},"traits/canonicalization.html#processing-the-canonicalized-query-result":{"tf":1.4142135623730952},"traits/canonicalization.html#executing-the-query":{"tf":1.0},"traits/canonicalization.html#canonicalization":{"tf":2.449489742783178},"traits/canonicalization.html#canonicalizing-the-query":{"tf":2.0},"ty.html#allocating-and-working-with-types":{"tf":1.0}},"df":6,"a":{"docs":{},"df":0,"l":{"docs":{},"df":0,"(":{"docs":{},"df":0,"q":{"docs":{},"df":0,"r":{"docs":{"traits/canonicalization.html#canonicalizing-the-query-result":{"tf":1.0}},"df":1}}},"v":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"v":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{},"df":0,"u":{"docs":{"traits/canonicalization.html#canonicalizing-the-query":{"tf":1.0}},"df":1}}}}}}}}}}}}},"d":{"docs":{},"df":0,"i":{"docs":{},"df":0,"d":{"docs":{"traits/specialization.html#specialization":{"tf":1.0},"traits/resolution.html#confirmation":{"tf":1.0},"traits/resolution.html#candidate-assembly":{"tf":3.4641016151377546},"traits/resolution.html#selection":{"tf":1.0},"method-lookup.html#candidate-assembly":{"tf":3.0},"method-lookup.html#candidate-search":{"tf":2.0}},"df":6}}},"_":{"docs":{},"df":0,"e":{"docs":{},"df":0,"q":{"docs":{"type-inference.html#trying-equality":{"tf":1.0},"type-inference.html#snapshots":{"tf":1.0}},"df":2}}}}},"i":{"docs":{},"df":0,"r":{"docs":{},"df":0,"c":{"docs":{},"df":0,"u":{"docs":{},"df":0,"m":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.0}},"df":1}}},"l":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{"traits/goals-and-clauses.html#coinductive-goals":{"tf":1.0}},"df":1,"l":{"docs":{},"df":0,"i":{"docs":{"traits/goals-and-clauses.html#coinductive-goals":{"tf":1.0}},"df":1}}}}}}}},"t":{"docs":{},"df":0,"e":{"docs":{"tests/adding.html#comment-explaining-what-the-test-is-about":{"tf":1.0}},"df":1}}},"<":{"docs":{},"df":0,"e":{"docs":{"variance.html#the-algorithm":{"tf":1.0}},"df":1}},"r":{"docs":{"tests/adding.html#normalization":{"tf":1.0}},"df":1,"e":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{"type-inference.html#creating-an-inference-context":{"tf":2.449489742783178},"const-eval.html#constant-evaluation":{"tf":1.0},"mir/regionck.html#universes-and-skolemized-region-elements":{"tf":1.0},"high-level-overview.html#the-main-stages-of-compilation":{"tf":1.0},"rustdoc.html#hot-potato":{"tf":1.0},"appendix/stupid-stats.html#appendix-a-a-tutorial-on-creating-a-drop-in-replacement-for-rustc":{"tf":1.7320508075688773},"mir/regionck.html#back-to-our-example":{"tf":1.4142135623730952},"mir/borrowck.html#major-phases-of-the-borrow-checker":{"tf":1.0},"mir/regionck.html#final-example":{"tf":1.0},"type-inference.html#inference-variables":{"tf":1.0},"traits/canonical-queries.html#examples":{"tf":1.0},"method-lookup.html#steps":{"tf":1.0},"traits/lowering-rules.html#trait-header":{"tf":1.0},"query.html#how-the-compiler-executes-a-query":{"tf":1.4142135623730952},"traits/lowering-module.html#the-lowering-module-in-rustc":{"tf":1.0},"tests/adding.html#adding-new-tests":{"tf":1.0},"traits/chalk-overview.html#rules":{"tf":1.0},"mir/passes.html#seeing-how-the-mir-changes-as-the-compiler-executes":{"tf":1.0},"mir/regionck.html#mir-based-region-checking-nll":{"tf":1.0},"traits/resolution.html#overview":{"tf":1.0},"tests/intro.html#other-tests":{"tf":1.0},"traits/lowering-rules.html#lowering-impls":{"tf":1.0},"mir/regionck.html#what-is-a-universe":{"tf":1.7320508075688773},"appendix/stupid-stats.html#overview-of-the-compilation-process":{"tf":1.0},"type-inference.html#extracting-region-constraints":{"tf":1.0},"traits/canonicalization.html#executing-the-query":{"tf":2.23606797749979},"how-to-build-and-run.html#creating-a-rustup-toolchain":{"tf":1.7320508075688773},"how-to-build-and-run.html#running-xpy-and-building-a-stage1-compiler":{"tf":1.0},"rustdoc.html#from-soup-to-nuts":{"tf":1.0},"method-lookup.html#candidate-assembly":{"tf":1.0},"rustdoc.html#the-walking-tour-of-rustdoc":{"tf":1.4142135623730952},"rustc-driver.html#the-rustc-driver":{"tf":1.0},"miri.html#miri":{"tf":1.4142135623730952},"appendix/background.html#what-is-a-free-region-or-a-free-variable-what-about-bound-region":{"tf":1.0},"traits/hrtb.html#higher-ranked-trait-obligations":{"tf":1.0},"conventions.html#copyright-notice":{"tf":1.0},"traits/hrtb.html#basic-matching-and-skolemization-leaks":{"tf":1.0},"mir/visitor.html#mir-visitor":{"tf":1.0},"tests/adding.html#comment-explaining-what-the-test-is-about":{"tf":1.0},"mir/index.html#key-mir-vocabulary":{"tf":1.0},"name-resolution.html#name-resolution":{"tf":1.0},"traits/canonicalization.html#processing-the-canonicalized-query-result":{"tf":1.0},"miri.html#interpretation":{"tf":1.0},"compiletest.html#adding-a-new-test-file":{"tf":1.0},"rustdoc.html#from-clean-to-crate":{"tf":1.0},"appendix/glossary.html#appendix-c-glossary":{"tf":2.0},"traits/associated-types.html#projection-equality":{"tf":1.0},"how-to-build-and-run.html#create-a-configtoml":{"tf":1.0},"the-parser.html#the-parser":{"tf":1.0},"variance.html#trait-variance-and-vtable-resolution":{"tf":1.0},"incrcomp-debugging.html#tracking-down-incorrect-edges":{"tf":1.0},"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.4142135623730952},"traits/canonicalization.html#canonicalizing-the-query-result":{"tf":1.4142135623730952},"tests/adding.html#naming-your-test":{"tf":1.0}},"df":54,"i":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{"miri.html#miri":{"tf":1.0}},"df":1}}},"o":{"docs":{},"df":0,"r":{"docs":{"query.html#how-the-compiler-executes-a-query":{"tf":1.0}},"df":1}}}}},"u":{"docs":{},"df":0,"c":{"docs":{},"df":0,"i":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{"traits/goals-and-clauses.html#domain-goals":{"tf":1.0},"rustdoc.html#from-soup-to-nuts":{"tf":1.0}},"df":2}}}}},"a":{"docs":{},"df":0,"s":{"docs":{},"df":0,"h":{"docs":{"compiler-debugging.html#debugging-llvm":{"tf":1.4142135623730952},"compiler-debugging.html#expensive-operations-in-logs":{"tf":1.0},"appendix/glossary.html#appendix-c-glossary":{"tf":1.0}},"df":3}},"w":{"docs":{},"df":0,"l":{"docs":{"rustdoc.html#from-crate-to-clean":{"tf":1.7320508075688773},"appendix/code-index.html#appendix-d-code-index":{"tf":1.0}},"df":2}},"t":{"docs":{},"df":0,"e":{"docs":{"rustdoc.html#from-soup-to-nuts":{"tf":1.4142135623730952},"appendix/glossary.html#appendix-c-glossary":{"tf":2.23606797749979},"appendix/code-index.html#appendix-d-code-index":{"tf":1.4142135623730952},"tests/running.html#running-an-individual-test":{"tf":1.0},"query.html#queries-demand-driven-compilation":{"tf":1.4142135623730952},"type-checking.html#type-collection":{"tf":1.0},"rustdoc.html#from-clean-to-crate":{"tf":1.7320508075688773},"diag.html#error-messages":{"tf":1.0},"rustdoc.html#from-crate-to-clean":{"tf":2.23606797749979},"the-parser.html#the-parser":{"tf":1.7320508075688773},"diag.html#declaring-a-lint":{"tf":1.0},"hir.html#out-of-band-storage-and-the--crate--type":{"tf":2.8284271247461905},"query.html#adding-a-new-kind-of-query":{"tf":1.0},"name-resolution.html#overall-strategy":{"tf":1.0},"tests/adding.html#normalization":{"tf":1.0},"conventions.html#formatting-and-the-tidy-script":{"tf":1.0},"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":2.23606797749979},"rustc-driver.html#the-rustc-driver":{"tf":2.0},"high-level-overview.html#crate-structure":{"tf":4.123105625617661},"rustdoc.html#the-walking-tour-of-rustdoc":{"tf":1.7320508075688773},"rustdoc.html#other-tricks-up-its-sleeve":{"tf":1.4142135623730952},"conventions.html#using-crates-from-cratesio":{"tf":1.7320508075688773},"high-level-overview.html#the-main-stages-of-compilation":{"tf":1.7320508075688773},"appendix/stupid-stats.html#compilercalls":{"tf":1.0},"name-resolution.html#name-resolution":{"tf":1.0},"appendix/stupid-stats.html#overview-of-the-compilation-process":{"tf":1.7320508075688773},"query.html#how-the-compiler-executes-a-query":{"tf":4.123105625617661},"rustdoc.html#hot-potato":{"tf":2.0},"traits/lowering-rules.html#rule-names-and-cross-references":{"tf":1.0},"hir.html#identifiers-in-the-hir":{"tf":2.6457513110645909},"hir.html#the-hir-map":{"tf":1.0},"type-checking.html#type-checking":{"tf":1.0},"variance.html#dependency-graph-management":{"tf":1.7320508075688773}},"df":33,"r":{"docs":{"tests/intro.html#crater":{"tf":1.0}},"df":1},"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.0}},"df":1}}},".":{"docs":{},"df":0,"i":{"docs":{},"df":0,"o":{"docs":{"conventions.html#using-crates-from-cratesio":{"tf":1.4142135623730952},"conventions.html#formatting-and-the-tidy-script":{"tf":1.0}},"df":2}}}},"'":{"docs":{"appendix/code-index.html#appendix-d-code-index":{"tf":1.0},"mir/passes.html#mir-passes":{"tf":1.0},"rustdoc.html#the-walking-tour-of-rustdoc":{"tf":1.4142135623730952}},"df":3},"n":{"docs":{},"df":0,"a":{"docs":{},"df":0,"m":{"docs":{"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.4142135623730952}},"df":1}},"u":{"docs":{},"df":0,"m":{"docs":{"hir.html#identifiers-in-the-hir":{"tf":1.0}},"df":1}}},"_":{"docs":{},"df":0,"v":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{"variance.html#dependency-graph-management":{"tf":1.7320508075688773}},"df":1}}}}}}}},"o":{"docs":{},"df":0,"s":{"docs":{},"df":0,"s":{"docs":{"rustdoc.html#dotting-is-and-crossing-ts":{"tf":1.0},"traits/lowering-rules.html#rule-names-and-cross-references":{"tf":1.0}},"df":2}}}},"y":{"docs":{},"df":0,"c":{"docs":{},"df":0,"l":{"docs":{"query.html#adding-a-new-kind-of-query":{"tf":1.4142135623730952},"traits/associated-types.html#integration-with-unification":{"tf":1.0},"traits/canonicalization.html#canonicalization":{"tf":1.0},"appendix/background.html#what-is-a-control-flow-graph":{"tf":1.4142135623730952},"traits/lowering-rules.html#trait-header":{"tf":1.0},"traits/goals-and-clauses.html#coinductive-goals":{"tf":2.0},"query.html#cycles-between-queries":{"tf":3.3166247903554}},"df":7,"i":{"docs":{},"df":0,"c":{"docs":{"traits/chalk-overview.html#blog-posts":{"tf":1.0},"query.html#cycles-between-queries":{"tf":1.0}},"df":2}}}}},"u":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"o":{"docs":{},"df":0,"m":{"docs":{"macro-expansion.html#custom-derive":{"tf":1.0},"appendix/stupid-stats.html#appendix-a-a-tutorial-on-creating-a-drop-in-replacement-for-rustc":{"tf":1.0},"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.4142135623730952},"tests/intro.html#other-tests":{"tf":1.0},"query.html#adding-a-new-kind-of-query":{"tf":1.4142135623730952},"compiletest.html#adding-a-new-header-command":{"tf":1.0},"tests/adding.html#normalization":{"tf":1.0},"tests/adding.html#header-commands-configuring-rustc":{"tf":1.0},"tests/running.html#running-a-subset-of-the-test-suites":{"tf":1.0},"tests/adding.html#revisions":{"tf":1.7320508075688773},"rustdoc.html#cheat-sheet":{"tf":1.0}},"df":11,"i":{"docs":{},"df":0,"s":{"docs":{"appendix/stupid-stats.html#overview-of-the-compilation-process":{"tf":1.0},"appendix/stupid-stats.html#the-driver-customisation-apis":{"tf":1.7320508075688773},"appendix/stupid-stats.html#appendix-a-a-tutorial-on-creating-a-drop-in-replacement-for-rustc":{"tf":1.4142135623730952}},"df":3}}}}}},"r":{"docs":{},"df":0,"i":{"docs":{},"df":0,"o":{"docs":{},"df":0,"u":{"docs":{"mir/borrowck.html#mir-borrow-check":{"tf":1.0}},"df":1}}},"l":{"docs":{},"df":0,"i":{"docs":{"name-resolution.html#scopes-and-ribs":{"tf":1.0}},"df":1}},"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{"hir.html#identifiers-in-the-hir":{"tf":1.0},"traits/index.html#trait-solving-new-style":{"tf":1.0},"tests/intro.html#testing-infrastructure":{"tf":1.0},"traits/resolution.html#trait-resolution-old-style":{"tf":1.0},"appendix/glossary.html#appendix-c-glossary":{"tf":1.4142135623730952},"traits/resolution.html#selection-during-translation":{"tf":1.4142135623730952},"how-to-build-and-run.html#running-xpy-and-building-a-stage1-compiler":{"tf":1.0},"rustdoc.html#hot-potato":{"tf":1.0},"conventions.html#how-to-structure-your-pr":{"tf":1.0},"hir.html#out-of-band-storage-and-the--crate--type":{"tf":1.4142135623730952},"query.html#cycles-between-queries":{"tf":1.0},"tests/adding.html#revisions":{"tf":1.0},"macro-expansion.html#the-macro-parser":{"tf":1.0},"incrcomp-debugging.html#dumping-the-graph":{"tf":1.0},"appendix/stupid-stats.html#compilercalls":{"tf":1.0},"hir.html#the-hir-map":{"tf":1.0},"variance.html#dependency-graph-management":{"tf":1.0},"traits/canonical-queries.html#a-trait-query-in-rustc":{"tf":1.0},"tests/adding.html#guide-to-the-ui-tests":{"tf":1.0},"appendix/stupid-stats.html#compilercontroller":{"tf":1.0},"traits/resolution.html#candidate-assembly":{"tf":1.0},"query.html#queries-demand-driven-compilation":{"tf":1.0},"miri.html#interpretation":{"tf":1.0},"tests/adding.html#error-annotations":{"tf":1.0},"compiletest.html#adding-a-new-header-command":{"tf":1.7320508075688773},"conventions.html#copyright-notice":{"tf":1.0}},"df":26}}}}}},"l":{"docs":{},"df":0,"i":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{"tests/intro.html#testing-on-emulators":{"tf":1.4142135623730952}},"df":1}}},"p":{"docs":{},"df":0,"p":{"docs":{},"df":0,"i":{"docs":{"tests/intro.html#other-tests":{"tf":1.0}},"df":1}}},"c":{"docs":{},"df":0,"k":{"docs":{"mir/index.html#key-mir-vocabulary":{"tf":1.4142135623730952}},"df":1}}},"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"e":{"docs":{"how-to-build-and-run.html#running-xpy-and-building-a-stage1-compiler":{"tf":1.0},"traits/lowering-to-logic.html#rust-traits-and-logic":{"tf":3.0},"traits/goals-and-clauses.html#domain-goals":{"tf":2.0},"traits/canonical-queries.html#the-traditional-interactive-prolog-query":{"tf":2.6457513110645909},"traits/chalk-overview.html#lowering":{"tf":2.449489742783178},"mir/passes.html#stealing":{"tf":1.0},"query.html#how-the-compiler-executes-a-query":{"tf":1.0},"traits/canonical-queries.html#a-trait-query-in-rustc":{"tf":1.7320508075688773},"diag.html#declaring-a-lint":{"tf":1.0},"traits/resolution.html#major-concepts":{"tf":1.4142135623730952}},"df":10,"a":{"docs":{},"df":0,"b":{"docs":{},"df":0,"l":{"docs":{"query.html#adding-a-new-kind-of-query":{"tf":1.0},"query.html#how-the-compiler-executes-a-query":{"tf":1.0}},"df":2}}},"_":{"docs":{},"df":0,"s":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{},"df":0,"c":{"docs":{"traits/resolution.html#major-concepts":{"tf":1.0}},"df":1,"e":{"docs":{},"df":0,"(":{"docs":{},"df":0,"&":{"docs":{},"df":0,"[":{"docs":{},"df":0,"1":{"docs":{"traits/resolution.html#major-concepts":{"tf":1.0}},"df":1}}}},"<":{"docs":{},"df":0,"t":{"docs":{},"df":0,":":{"docs":{},"df":0,"c":{"docs":{},"df":0,"l":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"e":{"docs":{},"df":0,">":{"docs":{},"df":0,"(":{"docs":{},"df":0,"x":{"docs":{"traits/resolution.html#major-concepts":{"tf":1.4142135623730952}},"df":1}}}}}}}}}}}}}}}}},">":{"docs":{},"df":0,"(":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"u":{"docs":{},"df":0,"f":{"docs":{},"df":0,"f":{"docs":{"traits/goals-and-clauses.html#domain-goals":{"tf":1.0}},"df":1}}}}}}},"(":{"docs":{},"df":0,"f":{"docs":{},"df":0,"o":{"docs":{},"df":0,"o":{"docs":{"traits/lowering-to-logic.html#rust-traits-and-logic":{"tf":1.0}},"df":1}}},"v":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"<":{"docs":{},"df":0,"u":{"docs":{},"df":0,"s":{"docs":{"traits/lowering-to-logic.html#rust-traits-and-logic":{"tf":1.0}},"df":1}},"v":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"<":{"docs":{},"df":0,"u":{"docs":{},"df":0,"s":{"docs":{"traits/lowering-to-logic.html#rust-traits-and-logic":{"tf":1.4142135623730952}},"df":1}}}}}},"?":{"docs":{},"df":0,"t":{"docs":{"traits/lowering-to-logic.html#rust-traits-and-logic":{"tf":1.0}},"df":1}},"b":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{"traits/lowering-to-logic.html#rust-traits-and-logic":{"tf":1.4142135623730952}},"df":1}}}}}}},"u":{"docs":{},"df":0,"s":{"docs":{"traits/lowering-to-logic.html#rust-traits-and-logic":{"tf":1.4142135623730952}},"df":1}},"b":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{"traits/lowering-to-logic.html#rust-traits-and-logic":{"tf":1.0}},"df":1}}},"?":{"docs":{},"df":0,"t":{"docs":{"traits/lowering-to-logic.html#rust-traits-and-logic":{"tf":1.0}},"df":1}}}}},"s":{"docs":{},"df":0,"u":{"docs":{},"df":0,"r":{"docs":{"name-resolution.html#scopes-and-ribs":{"tf":1.0},"appendix/glossary.html#appendix-c-glossary":{"tf":1.0},"appendix/background.html#what-is-a-free-region-or-a-free-variable-what-about-bound-region":{"tf":2.0},"type-inference.html#creating-an-inference-context":{"tf":1.0},"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.4142135623730952},"hir.html#hir-bodies":{"tf":1.0},"mir/regionck.html#closures":{"tf":1.0}},"df":7}},"e":{"docs":{"appendix/stupid-stats.html#appendix-a-a-tutorial-on-creating-a-drop-in-replacement-for-rustc":{"tf":1.4142135623730952},"macro-expansion.html#example":{"tf":1.0},"traits/hrtb.html#basic-matching-and-skolemization-leaks":{"tf":1.0},"type-inference.html#extracting-region-constraints":{"tf":1.4142135623730952},"high-level-overview.html#the-main-stages-of-compilation":{"tf":1.0},"traits/canonical-queries.html#canonical-queries":{"tf":1.0},"hir.html#the-hir":{"tf":1.0},"appendix/glossary.html#appendix-c-glossary":{"tf":1.0}},"df":8,"s":{"docs":{},"df":0,"t":{"docs":{"name-resolution.html#scopes-and-ribs":{"tf":1.0}},"df":1}}}}},"e":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{"param_env.html#parameter-environment":{"tf":1.0},"variance.html#addendum-variance-on-traits":{"tf":1.0},"appendix/background.html#what-is-a-control-flow-graph":{"tf":1.0},"appendix/stupid-stats.html#what-next":{"tf":1.0}},"df":4,"l":{"docs":{},"df":0,"i":{"docs":{"traits/resolution.html#candidate-assembly":{"tf":1.0},"traits/caching.html#where-clauses-and-the-local-vs-global-cache":{"tf":1.0}},"df":2}}},"n":{"docs":{"how-to-build-and-run.html#other-xpy-commands":{"tf":1.4142135623730952},"compiler-debugging.html#getting-logging-output":{"tf":1.0},"rustdoc.html#cheat-sheet":{"tf":1.0},"rustdoc.html#from-soup-to-nuts":{"tf":1.4142135623730952},"rustdoc.html#other-tricks-up-its-sleeve":{"tf":1.0},"rustdoc.html#from-crate-to-clean":{"tf":2.449489742783178},"rustdoc.html#from-clean-to-crate":{"tf":1.0},"rustdoc.html#hot-potato":{"tf":1.0},"rustdoc.html#the-walking-tour-of-rustdoc":{"tf":1.4142135623730952}},"df":9,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"c":{"docs":{},"df":0,"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{"rustdoc.html#from-soup-to-nuts":{"tf":1.0},"rustdoc.html#from-clean-to-crate":{"tf":1.0},"rustdoc.html#from-crate-to-clean":{"tf":1.0}},"df":3}}}}}},"<":{"docs":{},"df":0,"c":{"docs":{},"df":0,"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{"rustdoc.html#from-crate-to-clean":{"tf":1.0}},"df":1}}}},"t":{"docs":{"rustdoc.html#from-crate-to-clean":{"tf":1.0}},"df":1}},"/":{"docs":{},"df":0,"m":{"docs":{},"df":0,"o":{"docs":{},"df":0,"d":{"docs":{},"df":0,".":{"docs":{},"df":0,"r":{"docs":{"rustdoc.html#cheat-sheet":{"tf":1.0},"rustdoc.html#from-crate-to-clean":{"tf":2.0}},"df":2}}}}}},"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"g":{"docs":{},"df":0,"i":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{"mir/passes.html#seeing-how-the-mir-changes-as-the-compiler-executes":{"tf":2.449489742783178}},"df":1}}}}}}}}},"(":{"docs":{},"df":0,"&":{"docs":{},"df":0,"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"l":{"docs":{},"df":0,"f":{"docs":{"rustdoc.html#from-crate-to-clean":{"tf":1.0}},"df":1}}}}}}}}},"a":{"docs":{},"df":0,"u":{"docs":{},"df":0,"s":{"docs":{"traits/resolution.html#selection":{"tf":1.0},"traits/lowering-module.html#the--program_clauses_for--query":{"tf":1.4142135623730952},"traits/goals-and-clauses.html#goals-and-clauses":{"tf":2.0},"traits/resolution.html#overview":{"tf":1.0},"traits/caching.html#where-clauses-and-the-local-vs-global-cache":{"tf":2.0},"traits/lowering-rules.html#lowering-where-clauses":{"tf":2.23606797749979},"traits/lowering-to-logic.html#type-checking-normal-functions":{"tf":1.0},"traits/lowering-rules.html#transforming-the-lowered-where-clauses":{"tf":1.7320508075688773},"traits/canonical-queries.html#examples":{"tf":1.0},"traits/lowering-module.html#unit-tests":{"tf":1.0},"traits/lowering-rules.html#lowering-traits":{"tf":1.0},"traits/resolution.html#candidate-assembly":{"tf":3.3166247903554},"variance.html#constraints":{"tf":1.0},"type-checking.html#type-collection":{"tf":1.0},"traits/goals-and-clauses.html#coinductive-goals":{"tf":1.4142135623730952},"rustdoc.html#from-clean-to-crate":{"tf":1.0},"traits/associated-types.html#associated-type-projection-and-normalization":{"tf":1.7320508075688773},"traits/resolution.html#selection-during-translation":{"tf":1.0},"traits/lowering-rules.html#trait-header":{"tf":3.3166247903554},"traits/associated-types.html#projection-equality":{"tf":1.4142135623730952},"traits/lowering-rules.html#associated-type-values":{"tf":1.4142135623730952},"method-lookup.html#candidate-search":{"tf":1.0},"traits/lowering-to-logic.html#type-checking-generic-functions-beyond-horn-clauses":{"tf":2.449489742783178},"traits/lowering-rules.html#lowering-rules":{"tf":1.0},"traits/lowering-to-logic.html#lowering-to-logic":{"tf":1.0},"traits/caching.html#an-example":{"tf":1.0},"traits/goals-and-clauses.html#goals-and-clauses-meta-structure":{"tf":3.0},"traits/lowering-to-logic.html#rust-traits-and-logic":{"tf":2.0},"traits/goals-and-clauses.html#domain-goals":{"tf":1.7320508075688773},"traits/lowering-rules.html#associated-type-declarations":{"tf":1.7320508075688773},"traits/canonical-queries.html#a-trait-query-in-rustc":{"tf":1.0},"traits/chalk-overview.html#lowering":{"tf":2.23606797749979},"traits/index.html#trait-solving-new-style":{"tf":1.0},"traits/lowering-rules.html#notation":{"tf":1.0},"traits/lowering-module.html#the-lowering-module-in-rustc":{"tf":1.0},"method-lookup.html#candidate-assembly":{"tf":1.0},"traits/canonicalization.html#executing-the-query":{"tf":1.0}},"df":37,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"/":{"docs":{},"df":0,"e":{"docs":{},"df":0,"t":{"docs":{},"df":0,"c":{"docs":{"traits/resolution.html#candidate-assembly":{"tf":1.0}},"df":1}}}}},"/":{"docs":{},"df":0,"e":{"docs":{},"df":0,"t":{"docs":{},"df":0,"c":{"docs":{"traits/resolution.html#candidate-assembly":{"tf":1.0}},"df":1}}}}}}},"i":{"docs":{},"df":0,"m":{"docs":{"variance.html#constraints":{"tf":1.0}},"df":1}},"s":{"docs":{},"df":0,"s":{"docs":{"variance.html#trait-variance-and-vtable-resolution":{"tf":1.0},"diag.html#error-messages":{"tf":1.0},"tests/adding.html#revisions":{"tf":1.0},"variance.html#the-algorithm":{"tf":1.4142135623730952}},"df":4,"i":{"docs":{},"df":0,"c":{"docs":{"tests/intro.html#further-reading":{"tf":1.0}},"df":1}}},"h":{"docs":{"name-resolution.html#namespaces":{"tf":1.0}},"df":1}},"r":{"docs":{},"df":0,"i":{"docs":{},"df":0,"f":{"docs":{},"df":0,"i":{"docs":{"traits/canonical-queries.html#examples":{"tf":1.0}},"df":1}}}}}},"d":{"docs":{"how-to-build-and-run.html#create-a-configtoml":{"tf":1.0}},"df":1},"f":{"docs":{},"df":0,"g":{"docs":{"high-level-overview.html#the-main-stages-of-compilation":{"tf":1.0},"rustc-driver.html#the-rustc-driver":{"tf":1.0},"mir/visitor.html#traversal":{"tf":1.0},"tests/adding.html#revisions":{"tf":2.0},"mir/regionck.html#back-to-our-example":{"tf":2.449489742783178},"compiletest.html#adding-a-new-header-command":{"tf":1.0},"appendix/stupid-stats.html#overview-of-the-compilation-process":{"tf":1.4142135623730952},"rustdoc.html#hot-potato":{"tf":1.0}},"df":8,"(":{"docs":{},"df":0,"f":{"docs":{},"df":0,"o":{"docs":{},"df":0,"o":{"docs":{"tests/adding.html#revisions":{"tf":1.4142135623730952}},"df":1}}}}}},"x":{"docs":{"rustdoc.html#from-crate-to-clean":{"tf":1.0},"appendix/glossary.html#appendix-c-glossary":{"tf":1.4142135623730952},"type-inference.html#creating-an-inference-context":{"tf":1.4142135623730952},"diag.html#declaring-a-lint":{"tf":1.0}},"df":4,".":{"docs":{},"df":0,"t":{"docs":{},"df":0,"c":{"docs":{},"df":0,"x":{"docs":{},"df":0,".":{"docs":{},"df":0,"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"s":{"docs":{},"df":0,".":{"docs":{},"df":0,"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"d":{"docs":{},"df":0,"e":{"docs":{},"df":0,"m":{"docs":{},"df":0,"a":{"docs":{},"df":0,"p":{"docs":{},"df":0,"(":{"docs":{},"df":0,")":{"docs":{},"df":0,".":{"docs":{},"df":0,"d":{"docs":{},"df":0,"e":{"docs":{},"df":0,"f":{"docs":{},"df":0,"_":{"docs":{},"df":0,"s":{"docs":{},"df":0,"p":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"(":{"docs":{},"df":0,"e":{"docs":{},"df":0,".":{"docs":{},"df":0,"s":{"docs":{},"df":0,"p":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{"diag.html#declaring-a-lint":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"r":{"docs":{},"df":0,"u":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{},"df":0,"_":{"docs":{},"df":0,"s":{"docs":{},"df":0,"p":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"_":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{},"df":0,"(":{"docs":{},"df":0,"w":{"docs":{},"df":0,"h":{"docs":{},"df":0,"i":{"docs":{},"df":0,"l":{"docs":{},"df":0,"e":{"docs":{},"df":0,"_":{"docs":{},"df":0,"t":{"docs":{},"df":0,"r":{"docs":{},"df":0,"u":{"docs":{"diag.html#declaring-a-lint":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{"miri.html#datastructures":{"tf":1.0},"diag.html#edition-gated-lints":{"tf":1.0},"variance.html#variance-and-object-types":{"tf":1.0},"appendix/stupid-stats.html#overview-of-the-compilation-process":{"tf":1.0},"hir.html#identifiers-in-the-hir":{"tf":1.0},"compiletest.html#adding-a-new-header-command":{"tf":1.0},"appendix/stupid-stats.html#compilercontroller":{"tf":1.0},"traits/canonicalization.html#canonicalizing-the-query-result":{"tf":2.6457513110645909},"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":2.0},"diag.html#span":{"tf":1.0},"traits/chalk-overview.html#intermediate-representation-ir":{"tf":1.0},"rustc-driver.html#the-rustc-driver":{"tf":2.0},"rustdoc.html#from-soup-to-nuts":{"tf":1.7320508075688773},"traits/canonicalization.html#executing-the-query":{"tf":2.0},"miri.html#interpretation":{"tf":1.4142135623730952},"compiler-debugging.html#debugging-llvm":{"tf":1.4142135623730952},"appendix/stupid-stats.html#appendix-a-a-tutorial-on-creating-a-drop-in-replacement-for-rustc":{"tf":1.0}},"df":17,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{"traits/goals-and-clauses.html#coinductive-goals":{"tf":2.8284271247461905},"tests/intro.html#testing-on-emulators":{"tf":1.0}},"df":2},"s":{"docs":{"tests/adding.html#naming-your-test":{"tf":1.0},"type-checking.html#type-collection":{"tf":1.0},"variance.html#variance-of-type-and-lifetime-parameters":{"tf":1.4142135623730952},"variance.html#variance-and-associated-types":{"tf":1.0},"mir/regionck.html#what-is-a-universe":{"tf":1.0},"traits/canonical-queries.html#canonical-queries":{"tf":1.4142135623730952}},"df":6,"i":{"docs":{},"df":0,"t":{"docs":{"mir/index.html#the-mir-mid-level-ir":{"tf":1.0}},"df":1}}}},"v":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{"tests/adding.html#error-annotations":{"tf":1.0}},"df":1},"r":{"docs":{"mir/passes.html#mir-passes":{"tf":1.0},"rustdoc.html#from-crate-to-clean":{"tf":1.0},"rustdoc.html#from-clean-to-crate":{"tf":1.4142135623730952},"the-parser.html#the-parser":{"tf":1.0},"traits/associated-types.html#equality-and-associated-types":{"tf":1.0},"mir/borrowck.html#major-phases-of-the-borrow-checker":{"tf":1.0},"compiletest.html#adding-a-new-header-command":{"tf":1.0},"appendix/stupid-stats.html#overview-of-the-compilation-process":{"tf":1.0}},"df":8}}},"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"c":{"docs":{},"df":0,"h":{"docs":{"traits/hrtb.html#basic-matching-and-skolemization-leaks":{"tf":1.0},"method-lookup.html#candidate-search":{"tf":1.4142135623730952},"traits/lowering-rules.html#rule-names-and-cross-references":{"tf":1.0},"traits/goals-and-clauses.html#goals-and-clauses-meta-structure":{"tf":1.0},"traits/resolution.html#candidate-assembly":{"tf":1.4142135623730952},"rustdoc.html#cheat-sheet":{"tf":1.4142135623730952},"name-resolution.html#scopes-and-ribs":{"tf":1.0},"mir/passes.html#implementing-and-registering-a-pass":{"tf":1.0},"rustdoc.html#dotting-is-and-crossing-ts":{"tf":1.7320508075688773},"traits/bibliography.html#bibliography":{"tf":1.0},"rustdoc.html#from-clean-to-crate":{"tf":1.0},"method-lookup.html#candidate-assembly":{"tf":1.0}},"df":12}}}},"m":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{"appendix/stupid-stats.html#overview-of-the-compilation-process":{"tf":1.0},"appendix/stupid-stats.html#compilercontroller":{"tf":1.0}},"df":2}}}},"r":{"docs":{},"df":0,"v":{"docs":{"traits/index.html#trait-solving-new-style":{"tf":1.0},"compiletest.html#introduction":{"tf":1.0},"compiletest.html#adding-a-new-header-command":{"tf":1.0},"hir.html#out-of-band-storage-and-the--crate--type":{"tf":1.0},"traits/lowering-rules.html#trait-header":{"tf":1.0}},"df":5,"e":{"docs":{},"df":0,"r":{"docs":{"rustdoc.html#cheat-sheet":{"tf":1.0},"tests/intro.html#testing-on-emulators":{"tf":1.7320508075688773}},"df":2}},"o":{"docs":{"tests/intro.html#other-tests":{"tf":1.0}},"df":1}},"i":{"docs":{"method-lookup.html#steps":{"tf":1.0},"method-lookup.html#method-lookup":{"tf":1.0},"type-inference.html#snapshots":{"tf":1.4142135623730952},"rustdoc.html#from-clean-to-crate":{"tf":1.4142135623730952},"appendix/code-index.html#appendix-d-code-index":{"tf":1.0},"tests/intro.html#compiletest-test-suites":{"tf":1.0},"method-lookup.html#candidate-search":{"tf":1.0},"mir/index.html#key-mir-vocabulary":{"tf":1.0},"rustdoc.html#cheat-sheet":{"tf":1.0},"mir/passes.html#mir-passes":{"tf":1.0}},"df":10,"o":{"docs":{},"df":0,"u":{"docs":{"traits/caching.html#where-clauses-and-the-local-vs-global-cache":{"tf":1.0}},"df":1}},"a":{"docs":{},"df":0,"l":{"docs":{"incremental-compilation.html#the-try-mark-green-algorithm":{"tf":1.0},"incremental-compilation.html#improvements-to-the-basic-algorithm":{"tf":1.0}},"df":2}}}},"p":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{"incremental-compilation.html#improvements-to-the-basic-algorithm":{"tf":1.0},"name-resolution.html#name-resolution":{"tf":1.0},"compiletest.html#adding-a-new-header-command":{"tf":1.0},"name-resolution.html#namespaces":{"tf":1.4142135623730952},"type-inference.html#inference-variables":{"tf":1.0},"rustdoc.html#from-crate-to-clean":{"tf":1.0},"variance.html#variance-and-associated-types":{"tf":1.0},"rustdoc.html#hot-potato":{"tf":1.4142135623730952},"rustdoc.html#dotting-is-and-crossing-ts":{"tf":1.0},"incrcomp-debugging.html#dumping-the-graph":{"tf":1.0},"query.html#queries-demand-driven-compilation":{"tf":1.0}},"df":11}}},"q":{"docs":{},"df":0,"u":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"c":{"docs":{"appendix/stupid-stats.html#overview-of-the-compilation-process":{"tf":1.0},"miri.html#allocations":{"tf":1.4142135623730952},"macro-expansion.html#the-macro-parser":{"tf":1.4142135623730952}},"df":3}}}}},"l":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{"traits/caching.html#caching-and-subtle-considerations-therewith":{"tf":1.7320508075688773},"incrcomp-debugging.html#dumping-the-graph":{"tf":1.4142135623730952},"traits/resolution.html#major-concepts":{"tf":1.7320508075688773},"traits/resolution.html#confirmation":{"tf":1.0},"traits/resolution.html#overview":{"tf":2.23606797749979},"traits/specialization.html#specialization":{"tf":2.6457513110645909},"traits/caching.html#an-example":{"tf":1.4142135623730952},"method-lookup.html#method-lookup":{"tf":1.0},"mir/passes.html#seeing-how-the-mir-changes-as-the-compiler-executes":{"tf":1.7320508075688773},"traits/hrtb.html#higher-ranked-trait-bounds":{"tf":1.0},"traits/resolution.html#selection-during-translation":{"tf":3.0},"incremental-compilation.html#improvements-to-the-basic-algorithm":{"tf":1.0},"appendix/stupid-stats.html#overview-of-the-compilation-process":{"tf":1.4142135623730952},"traits/resolution.html#candidate-assembly":{"tf":1.7320508075688773},"traits/resolution.html#selection":{"tf":2.8284271247461905}},"df":15,".":{"docs":{},"df":0,"r":{"docs":{"traits/caching.html#where-clauses-and-the-local-vs-global-cache":{"tf":1.0}},"df":1}},"i":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"u":{"docs":{},"df":0,"l":{"docs":{},"df":0,"t":{"docs":{"traits/resolution.html#selection":{"tf":1.0}},"df":1}}}}}}}}}}}},"f":{"docs":{"macro-expansion.html#the-macro-parser":{"tf":1.0},"variance.html#variance-and-object-types":{"tf":2.449489742783178},"method-lookup.html#method-lookup":{"tf":1.0},"variance.html#variance-and-associated-types":{"tf":1.0},"traits/resolution.html#confirmation":{"tf":1.0},"mir/visitor.html#mir-visitor":{"tf":1.0},"param_env.html#parameter-environment":{"tf":1.0},"traits/lowering-rules.html#lowering-traits":{"tf":1.0},"traits/lowering-rules.html#trait-header":{"tf":1.0},"traits/lowering-to-logic.html#rust-traits-and-logic":{"tf":1.0},"traits/resolution.html#overview":{"tf":1.0},"diag.html#declaring-a-lint":{"tf":1.0},"traits/resolution.html#candidate-assembly":{"tf":2.6457513110645909},"variance.html#trait-variance-and-vtable-resolution":{"tf":1.4142135623730952},"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":2.8284271247461905},"method-lookup.html#candidate-assembly":{"tf":2.0},"traits/lowering-rules.html#associated-type-declarations":{"tf":1.4142135623730952},"ty.html#beyond-types-other-kinds-of-arena-allocated-data-structures":{"tf":1.0}},"df":18,".":{"docs":{},"df":0,"d":{"docs":{},"df":0,"i":{"docs":{},"df":0,"d":{"docs":{"query.html#cycles-between-queries":{"tf":1.0}},"df":1}},"e":{"docs":{},"df":0,"f":{"docs":{},"df":0,"a":{"docs":{},"df":0,"u":{"docs":{},"df":0,"l":{"docs":{},"df":0,"t":{"docs":{},"df":0,"_":{"docs":{},"df":0,"c":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{},"df":0,"l":{"docs":{},"df":0,"s":{"docs":{},"df":0,".":{"docs":{},"df":0,"l":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"_":{"docs":{},"df":0,"c":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{},"df":0,"l":{"docs":{},"df":0,"b":{"docs":{},"df":0,"a":{"docs":{},"df":0,"c":{"docs":{},"df":0,"k":{"docs":{},"df":0,"(":{"docs":{},"df":0,"t":{"docs":{"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.0}},"df":1}}}}}}}}}}}}}}},"n":{"docs":{},"df":0,"o":{"docs":{},"df":0,"_":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"p":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{},"df":0,"(":{"docs":{},"df":0,"m":{"docs":{"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}}}}}}},"n":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"m":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{},"df":0,"z":{"docs":{},"df":0,"e":{"docs":{},"df":0,"_":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"d":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"r":{"docs":{},"df":0,".":{"docs":{},"df":0,"p":{"docs":{},"df":0,"u":{"docs":{},"df":0,"s":{"docs":{},"df":0,"h":{"docs":{},"df":0,"(":{"docs":{},"df":0,"r":{"docs":{},"df":0,"u":{"docs":{},"df":0,"l":{"docs":{"compiletest.html#adding-a-new-header-command":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"df":0,"u":{"docs":{},"df":0,"p":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"_":{"docs":{},"df":0,"f":{"docs":{},"df":0,"o":{"docs":{},"df":0,"o":{"docs":{"mir/visitor.html#mir-visitor":{"tf":1.0}},"df":1}}}}}}}}},"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"c":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"m":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{},"df":0,"_":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"g":{"docs":{},"df":0,"s":{"docs":{},"df":0,"(":{"docs":{},"df":0,"d":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"l":{"docs":{},"df":0,".":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"p":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{},"df":0,"s":{"docs":{},"df":0,".":{"docs":{},"df":0,"l":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"p":{"docs":{},"df":0,"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"p":{"docs":{},"df":0,"s":{"docs":{},"df":0,".":{"docs":{},"df":0,"f":{"docs":{},"df":0,"a":{"docs":{},"df":0,"i":{"docs":{},"df":0,"l":{"docs":{},"df":0,"u":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"_":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{},"df":0,"u":{"docs":{"compiletest.html#implementing-the-behavior-change":{"tf":1.7320508075688773}},"df":1}}}}}}}}}}}}}}}}},"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{},"df":0,"l":{"docs":{},"df":0,"n":{"docs":{},"df":0,"_":{"docs":{},"df":0,"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"u":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.0}},"df":1}}}}}}}}}}}},"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"_":{"docs":{},"df":0,"n":{"docs":{},"df":0,"a":{"docs":{},"df":0,"m":{"docs":{},"df":0,"e":{"docs":{},"df":0,"_":{"docs":{},"df":0,"v":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{},"df":0,"u":{"docs":{},"df":0,"e":{"docs":{},"df":0,"_":{"docs":{},"df":0,"d":{"docs":{},"df":0,"i":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{},"df":0,"i":{"docs":{},"df":0,"v":{"docs":{},"df":0,"e":{"docs":{},"df":0,"(":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{"compiletest.html#adding-a-new-header-command":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}},"d":{"docs":{},"df":0,"i":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{},"df":0,"i":{"docs":{},"df":0,"v":{"docs":{},"df":0,"e":{"docs":{},"df":0,"(":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{"compiletest.html#adding-a-new-header-command":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"df":0,"x":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"_":{"docs":{},"df":0,"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"m":{"docs":{},"df":0,"p":{"docs":{},"df":0,"i":{"docs":{},"df":0,"l":{"docs":{},"df":0,"e":{"docs":{},"df":0,"d":{"docs":{},"df":0,"_":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{"compiletest.html#implementing-the-behavior-change":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}},"f":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{},"df":0,"_":{"docs":{},"df":0,"p":{"docs":{},"df":0,"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"c":{"docs":{},"df":0,"_":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{"compiletest.html#implementing-the-behavior-change":{"tf":1.0}},"df":1,"(":{"docs":{},"df":0,"\"":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{"compiletest.html#implementing-the-behavior-change":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}},"i":{"docs":{},"df":0,"l":{"docs":{},"df":0,"u":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"_":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{},"df":0,"u":{"docs":{"compiletest.html#adding-a-new-header-command":{"tf":1.0}},"df":1}}}}}}}}}}}}}},":":{"docs":{},"df":0,":":{"docs":{},"df":0,"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"f":{"docs":{},"df":0,"i":{"docs":{},"df":0,"g":{"docs":{},"df":0,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"q":{"docs":{},"df":0,"u":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"y":{"docs":{},"df":0,"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"f":{"docs":{},"df":0,"i":{"docs":{},"df":0,"g":{"docs":{"query.html#adding-a-new-kind-of-query":{"tf":1.0}},"df":1}}}}}},"d":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"c":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{},"df":0,"p":{"docs":{},"df":0,"t":{"docs":{"query.html#adding-a-new-kind-of-query":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}}}},"f":{"docs":{},"df":0,"o":{"docs":{},"df":0,"o":{"docs":{"type-checking.html#type-collection":{"tf":1.0}},"df":1}}},"k":{"docs":{},"df":0,"e":{"docs":{},"df":0,"y":{"docs":{},"df":0,"s":{"docs":{},"df":0,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"k":{"docs":{},"df":0,"e":{"docs":{},"df":0,"y":{"docs":{"query.html#how-the-compiler-executes-a-query":{"tf":1.0}},"df":1}}}}}}}}}}}}},"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{"traits/resolution.html#candidate-assembly":{"tf":1.0},"rustdoc.html#from-clean-to-crate":{"tf":1.0},"incremental-compilation.html#the-basic-algorithm":{"tf":1.0},"miri.html#miri":{"tf":1.0},"how-to-build-and-run.html#creating-a-rustup-toolchain":{"tf":1.0},"traits/resolution.html#selection-during-translation":{"tf":1.0},"traits/chalk-overview.html#intermediate-representation-ir":{"tf":1.0},"mir/passes.html#stealing":{"tf":1.0},"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.0},"mir/regionck.html#mir-based-region-checking-nll":{"tf":1.4142135623730952}},"df":10}}},"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"t":{"docs":{"mir/borrowck.html#mir-borrow-check":{"tf":1.0}},"df":1}}},"t":{"docs":{},"df":0,"i":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{"traits/associated-types.html#equality-and-associated-types":{"tf":1.0},"mir/index.html#mir-data-types":{"tf":1.0},"rustdoc.html#from-clean-to-crate":{"tf":1.0},"type-inference.html#inference-variables":{"tf":1.0},"mir/borrowck.html#major-phases-of-the-borrow-checker":{"tf":1.4142135623730952},"traits/chalk-overview.html#lowering":{"tf":1.0},"traits/lowering-rules.html#lowering-traits":{"tf":1.4142135623730952},"traits/associated-types.html#integration-with-unification":{"tf":1.0},"traits/goals-and-clauses.html#coinductive-goals":{"tf":1.0},"traits/goals-and-clauses.html#domain-goals":{"tf":1.7320508075688773},"variance.html#variance-of-type-and-lifetime-parameters":{"tf":1.0},"mir/passes.html#mir-passes":{"tf":1.0},"rustdoc.html#hot-potato":{"tf":1.0},"mir/regionck.html#skolemization-and-universes":{"tf":1.0},"traits/canonical-queries.html#canonical-queries":{"tf":1.0},"traits/caching.html#where-clauses-and-the-local-vs-global-cache":{"tf":1.0},"traits/canonical-queries.html#a-trait-query-in-rustc":{"tf":1.0},"how-to-build-and-run.html#other-xpy-commands":{"tf":1.4142135623730952},"traits/canonicalization.html#executing-the-query":{"tf":1.0},"traits/canonicalization.html#canonicalizing-the-query-result":{"tf":1.0},"mir/regionck.html#what-is-a-universe":{"tf":1.0},"traits/lowering-rules.html#lowering-function-and-constant-declarations":{"tf":1.0},"appendix/stupid-stats.html#appendix-a-a-tutorial-on-creating-a-drop-in-replacement-for-rustc":{"tf":1.0},"mir/regionck.html#representing-the-values-of-a-region-variable":{"tf":1.0},"traits/resolution.html#confirmation":{"tf":1.0},"traits/goals-and-clauses.html#goals-and-clauses-meta-structure":{"tf":1.0},"tests/intro.html#other-tests":{"tf":1.0},"incrcomp-debugging.html#tracking-down-incorrect-edges":{"tf":1.7320508075688773},"mir/index.html#key-mir-vocabulary":{"tf":1.0},"traits/lowering-to-logic.html#type-checking-generic-functions-beyond-horn-clauses":{"tf":1.0},"mir/regionck.html#skolemization-and-outlives-constraints":{"tf":1.0},"tests/intro.html#the-compiler-testing-framework":{"tf":1.0},"traits/lowering-rules.html#lowering-rules":{"tf":1.4142135623730952},"traits/chalk-overview.html#resources":{"tf":1.0},"traits/canonicalization.html#processing-the-canonicalized-query-result":{"tf":1.0},"type-inference.html#snapshots":{"tf":1.0},"traits/resolution.html#candidate-assembly":{"tf":1.0},"appendix/glossary.html#appendix-c-glossary":{"tf":1.0},"incremental-compilation.html#the-try-mark-green-algorithm":{"tf":1.4142135623730952},"traits/lowering-rules.html#associated-type-declarations":{"tf":1.0},"traits/lowering-module.html#the-lowering-module-in-rustc":{"tf":1.0},"appendix/background.html#appendix-b-background-topics":{"tf":1.0},"traits/lowering-rules.html#notation":{"tf":1.4142135623730952}},"df":43}}}}},"t":{"docs":{"mir/regionck.html#mir-based-region-checking-nll":{"tf":1.0},"compiletest.html#adding-a-new-header-command":{"tf":1.0},"tests/intro.html#testing-on-emulators":{"tf":1.7320508075688773},"traits/lowering-module.html#the--program_clauses_for--query":{"tf":1.0},"rustdoc.html#from-clean-to-crate":{"tf":1.7320508075688773},"traits/index.html#trait-solving-new-style":{"tf":1.0},"traits/specialization.html#specialization":{"tf":1.0},"incremental-compilation.html#the-try-mark-green-algorithm":{"tf":1.0},"mir/regionck.html#skolemization-and-outlives-constraints":{"tf":1.0},"rustdoc.html#the-walking-tour-of-rustdoc":{"tf":1.0},"rustdoc.html#dotting-is-and-crossing-ts":{"tf":1.4142135623730952},"how-to-build-and-run.html#create-a-configtoml":{"tf":1.0},"compiletest.html#header-commands":{"tf":1.0},"rustdoc.html#hot-potato":{"tf":1.0},"traits/canonical-queries.html#a-trait-query-in-rustc":{"tf":1.0},"incrcomp-debugging.html#testing-the-dependency-graph":{"tf":1.0},"mir/regionck.html#representing-the-values-of-a-region-variable":{"tf":2.0},"traits/hrtb.html#basic-matching-and-skolemization-leaks":{"tf":2.6457513110645909},"compiler-debugging.html#getting-a-backtrace":{"tf":1.0},"traits/hrtb.html#higher-ranked-trait-obligations":{"tf":1.7320508075688773},"mir/regionck.html#another-example":{"tf":1.0},"compiler-debugging.html#getting-logging-output":{"tf":1.4142135623730952},"mir/regionck.html#what-is-a-universe":{"tf":1.0},"name-resolution.html#scopes-and-ribs":{"tf":1.0},"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":2.0},"variance.html#trait-variance-and-vtable-resolution":{"tf":1.0},"compiler-debugging.html#expensive-operations-in-logs":{"tf":1.0},"high-level-overview.html#crate-structure":{"tf":1.0},"traits/associated-types.html#integration-with-unification":{"tf":1.0},"type-inference.html#extracting-region-constraints":{"tf":1.0},"appendix/background.html#what-is-a-free-region-or-a-free-variable-what-about-bound-region":{"tf":1.0},"appendix/glossary.html#appendix-c-glossary":{"tf":2.0},"tests/intro.html#testing-infrastructure":{"tf":1.4142135623730952},"query.html#how-the-compiler-executes-a-query":{"tf":1.0},"traits/resolution.html#candidate-assembly":{"tf":2.0},"traits/goals-and-clauses.html#coinductive-goals":{"tf":1.4142135623730952},"appendix/stupid-stats.html#compilercalls":{"tf":1.0},"traits/canonicalization.html#processing-the-canonicalized-query-result":{"tf":1.0},"macro-expansion.html#macro-expansion":{"tf":1.0},"appendix/background.html#what-is-a-control-flow-graph":{"tf":1.4142135623730952},"hir.html#out-of-band-storage-and-the--crate--type":{"tf":1.0},"traits/goals-and-clauses.html#domain-goals":{"tf":1.4142135623730952},"mir/regionck.html#extending-the-universal-regions-check":{"tf":1.0},"incrcomp-debugging.html#dumping-the-graph":{"tf":1.4142135623730952},"traits/lowering-rules.html#trait-header":{"tf":1.7320508075688773},"compiler-debugging.html#debugging-llvm":{"tf":1.0},"mir/passes.html#seeing-how-the-mir-changes-as-the-compiler-executes":{"tf":1.0},"tests/running.html#running-a-subset-of-the-test-suites":{"tf":1.0},"incrcomp-debugging.html#tracking-down-incorrect-edges":{"tf":1.4142135623730952},"mir/regionck.html#universes-and-skolemized-region-elements":{"tf":1.0},"ty.html#import-conventions":{"tf":1.0}},"df":51,"u":{"docs":{},"df":0,"p":{"docs":{"tests/adding.html#naming-your-test":{"tf":1.0},"variance.html#dependency-graph-management":{"tf":1.0},"query.html#queries-demand-driven-compilation":{"tf":1.0},"type-inference.html#creating-an-inference-context":{"tf":1.0},"traits/implied-bounds.html#implied-bounds":{"tf":1.0},"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.0},"traits/lowering-rules.html#trait-header":{"tf":1.0},"appendix/stupid-stats.html#what-next":{"tf":1.0},"query.html#how-the-compiler-executes-a-query":{"tf":1.0},"high-level-overview.html#the-main-stages-of-compilation":{"tf":1.4142135623730952},"tests/intro.html#the-compiler-testing-framework":{"tf":1.0}},"df":11}},"t":{"docs":{},"df":0,"l":{"docs":{"type-inference.html#snapshots":{"tf":1.0}},"df":1}}},"s":{"docs":{},"df":0,"s":{"docs":{"macro-expansion.html#the-macro-parser":{"tf":1.4142135623730952},"appendix/glossary.html#appendix-c-glossary":{"tf":1.0}},"df":2,"i":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{"appendix/glossary.html#appendix-c-glossary":{"tf":1.0},"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.7320508075688773},"rustc-driver.html#the-rustc-driver":{"tf":1.0},"diag.html#error-messages":{"tf":1.0},"appendix/code-index.html#appendix-d-code-index":{"tf":1.7320508075688773},"appendix/stupid-stats.html#compilercontroller":{"tf":1.0},"macro-expansion.html#the-macro-parser":{"tf":1.0},"appendix/stupid-stats.html#overview-of-the-compilation-process":{"tf":1.0}},"df":8}}},".":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"r":{"docs":{},"df":0,"u":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{},"df":0,"_":{"docs":{},"df":0,"s":{"docs":{},"df":0,"p":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"_":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"r":{"docs":{},"df":0,"(":{"docs":{},"df":0,"s":{"docs":{},"df":0,"p":{"docs":{"diag.html#error-messages":{"tf":1.0},"diag.html#suggestions":{"tf":1.0}},"df":2}}}}}}}}}}}}}}}}}},"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"d":{"docs":{},"df":0,"e":{"docs":{},"df":0,"m":{"docs":{},"df":0,"a":{"docs":{},"df":0,"p":{"docs":{},"df":0,"(":{"docs":{},"df":0,")":{"docs":{},"df":0,".":{"docs":{},"df":0,"s":{"docs":{},"df":0,"p":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"_":{"docs":{},"df":0,"t":{"docs":{},"df":0,"o":{"docs":{},"df":0,"_":{"docs":{},"df":0,"s":{"docs":{},"df":0,"n":{"docs":{},"df":0,"i":{"docs":{},"df":0,"p":{"docs":{},"df":0,"p":{"docs":{},"df":0,"e":{"docs":{},"df":0,"t":{"docs":{},"df":0,"(":{"docs":{},"df":0,"s":{"docs":{},"df":0,"p":{"docs":{"diag.html#error-messages":{"tf":1.0},"diag.html#suggestions":{"tf":1.0}},"df":2}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"e":{"docs":{"how-to-build-and-run.html#other-xpy-commands":{"tf":1.0},"traits/chalk-overview.html#lowering":{"tf":1.4142135623730952},"appendix/glossary.html#appendix-c-glossary":{"tf":5.830951894845301},"compiletest.html#adding-a-new-test-file":{"tf":1.0},"query.html#how-the-compiler-executes-a-query":{"tf":1.0},"mir/borrowck.html#mir-borrow-check":{"tf":1.0},"traits/goals-and-clauses.html#domain-goals":{"tf":1.4142135623730952},"ty.html#the-tcx-and-how-it-uses-lifetimes":{"tf":1.4142135623730952},"traits/lowering-to-logic.html#type-checking-generic-functions-beyond-horn-clauses":{"tf":1.4142135623730952},"rustdoc.html#from-crate-to-clean":{"tf":1.0},"mir/passes.html#seeing-how-the-mir-changes-as-the-compiler-executes":{"tf":1.0},"compiletest.html#introduction":{"tf":1.0},"appendix/background.html#what-is-co--and-contra-variance":{"tf":1.0},"variance.html#variance-of-type-and-lifetime-parameters":{"tf":1.4142135623730952},"tests/intro.html#testing-infrastructure":{"tf":1.0},"compiler-debugging.html#getting-logging-output":{"tf":2.23606797749979},"traits/associated-types.html#skolemized-associated-types":{"tf":1.0},"ty.html#allocating-and-working-with-types":{"tf":1.4142135623730952},"traits/caching.html#an-example":{"tf":1.0},"traits/lowering-rules.html#associated-type-declarations":{"tf":1.0},"diag.html#declaring-a-lint":{"tf":1.0},"traits/lowering-rules.html#lowering-function-and-constant-declarations":{"tf":1.0},"type-inference.html#enforcing-equality--subtyping":{"tf":1.0},"incrcomp-debugging.html#dumping-the-graph":{"tf":1.0},"traits/lowering-to-logic.html#rust-traits-and-logic":{"tf":1.4142135623730952},"macro-expansion.html#example":{"tf":1.0},"compiler-debugging.html#getting-a-backtrace-for-errors":{"tf":1.0},"appendix/stupid-stats.html#overview-of-the-compilation-process":{"tf":1.0},"type-inference.html#creating-an-inference-context":{"tf":1.4142135623730952},"traits/resolution.html#trait-resolution-old-style":{"tf":1.0},"compiletest.html#adding-a-new-header-command":{"tf":1.7320508075688773},"type-checking.html#type-collection":{"tf":1.0},"variance.html#variance-and-object-types":{"tf":1.0},"compiletest.html#implementing-the-behavior-change":{"tf":1.0},"ty.html#beyond-types-other-kinds-of-arena-allocated-data-structures":{"tf":1.0},"conventions.html#copyright-notice":{"tf":1.0},"tests/running.html#running-a-subset-of-the-test-suites":{"tf":1.0},"incrcomp-debugging.html#testing-the-dependency-graph":{"tf":1.0},"compiler-debugging.html#debugging-llvm":{"tf":2.0},"mir/regionck.html#final-example":{"tf":1.4142135623730952},"traits/chalk-overview.html#rules":{"tf":1.0},"traits/chalk-overview.html#well-formedness-checks":{"tf":1.0},"traits/associated-types.html#projection-equality":{"tf":1.0},"traits/lowering-rules.html#trait-header":{"tf":1.4142135623730952},"mir/index.html#key-mir-vocabulary":{"tf":3.0},"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.4142135623730952},"traits/index.html#trait-solving-new-style":{"tf":1.0},"variance.html#variance-and-associated-types":{"tf":1.4142135623730952},"mir/regionck.html#representing-the-values-of-a-region-variable":{"tf":1.0},"macro-expansion.html#the-macro-parser":{"tf":1.0},"traits/chalk-overview.html#solver":{"tf":1.0},"query.html#adding-a-new-kind-of-query":{"tf":1.0},"tests/intro.html#compiletest-test-suites":{"tf":1.0},"method-lookup.html#candidate-search":{"tf":1.0},"mir/regionck.html#skolemization-and-outlives-constraints":{"tf":1.7320508075688773},"incrcomp-debugging.html#tracking-down-incorrect-edges":{"tf":1.4142135623730952},"tests/adding.html#guide-to-the-ui-tests":{"tf":1.0},"traits/canonical-queries.html#examples":{"tf":1.4142135623730952},"appendix/stupid-stats.html#compilercalls":{"tf":1.0},"traits/canonicalization.html#canonicalizing-the-query":{"tf":1.0},"tests/adding.html#normalization":{"tf":1.0},"incremental-compilation.html#the-try-mark-green-algorithm":{"tf":1.4142135623730952},"traits/chalk-overview.html#an-overview-of-chalk":{"tf":1.0},"tests/intro.html#testing-on-emulators":{"tf":1.0},"query.html#cycles-between-queries":{"tf":1.0},"type-inference.html#subtyping-obligations":{"tf":1.0},"name-resolution.html#namespaces":{"tf":1.0},"mir/passes.html#implementing-and-registering-a-pass":{"tf":1.0},"how-to-build-and-run.html#creating-a-rustup-toolchain":{"tf":1.0},"variance.html#trait-variance-and-vtable-resolution":{"tf":1.4142135623730952},"traits/resolution.html#candidate-assembly":{"tf":1.4142135623730952},"diag.html#error-messages":{"tf":1.0},"type-inference.html#region-constraints":{"tf":1.0},"traits/canonical-queries.html#a-trait-query-in-rustc":{"tf":2.0},"tests/adding.html#ignoring-tests":{"tf":1.0},"traits/lowering-to-logic.html#type-checking-normal-functions":{"tf":1.0},"appendix/stupid-stats.html#what-next":{"tf":1.7320508075688773},"mir/regionck.html#what-is-a-universe":{"tf":2.449489742783178}},"df":78,"m":{"docs":{"mir/regionck.html#another-example":{"tf":1.0},"rustdoc.html#hot-potato":{"tf":1.0},"mir/regionck.html#final-example":{"tf":1.0},"traits/specialization.html#specialization":{"tf":1.0},"traits/caching.html#where-clauses-and-the-local-vs-global-cache":{"tf":1.0}},"df":5},"n":{"docs":{"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.0},"traits/lowering-to-logic.html#type-checking-normal-functions":{"tf":1.0},"traits/associated-types.html#associated-type-projection-and-normalization":{"tf":1.0},"traits/associated-types.html#projection-equality":{"tf":1.0}},"df":4}}},"m":{"docs":{},"df":0,"o":{"docs":{},"df":0,"o":{"docs":{},"df":0,"t":{"docs":{},"df":0,"h":{"docs":{"diag.html#suggestions":{"tf":1.0}},"df":1}}},"k":{"docs":{},"df":0,"e":{"docs":{"tests/running.html#running-a-subset-of-the-test-suites":{"tf":1.0}},"df":1}}},"a":{"docs":{},"df":0,"l":{"docs":{},"df":0,"l":{"docs":{"mir/passes.html#implementing-and-registering-a-pass":{"tf":1.0},"tests/intro.html#other-tests":{"tf":1.4142135623730952}},"df":2,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{"appendix/glossary.html#appendix-c-glossary":{"tf":1.0}},"df":1}},"r":{"docs":{"tests/running.html#running-a-subset-of-the-test-suites":{"tf":1.0},"ty.html#import-conventions":{"tf":1.0},"type-inference.html#snapshots":{"tf":1.0},"rustdoc.html#from-clean-to-crate":{"tf":1.0},"conventions.html#how-to-structure-your-pr":{"tf":1.0}},"df":5}}}},"r":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"mir/regionck.html#skolemization-and-outlives-constraints":{"tf":1.0}},"df":1}}}}}},"w":{"docs":{},"df":0,"i":{"docs":{},"df":0,"f":{"docs":{},"df":0,"t":{"docs":{"traits/bibliography.html#bibliography":{"tf":1.0}},"df":1}},"t":{"docs":{},"df":0,"c":{"docs":{},"df":0,"h":{"docs":{"rustdoc.html#from-clean-to-crate":{"tf":1.0},"traits/specialization.html#specialization":{"tf":1.0},"how-to-build-and-run.html#running-xpy-and-building-a-stage1-compiler":{"tf":1.0}},"df":3}}}},"a":{"docs":{},"df":0,"p":{"docs":{"mir/regionck.html#subtyping-and-skolemization":{"tf":1.0}},"df":1}}},"i":{"docs":{},"df":0,"z":{"docs":{},"df":0,"e":{"docs":{"traits/canonical-queries.html#examples":{"tf":2.0},"miri.html#allocations":{"tf":1.0},"const-eval.html#constant-evaluation":{"tf":1.0},"traits/goals-and-clauses.html#domain-goals":{"tf":1.0}},"df":4}},"t":{"docs":{},"df":0,"e":{"docs":{"variance.html#variance-of-type-and-lifetime-parameters":{"tf":1.0},"method-lookup.html#method-lookup":{"tf":1.0},"miri.html#miri":{"tf":1.0},"variance.html#the-algorithm":{"tf":1.7320508075688773},"traits/goals-and-clauses.html#domain-goals":{"tf":1.0}},"df":5},"u":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{"tests/adding.html#ignoring-tests":{"tf":1.0},"rustdoc.html#dotting-is-and-crossing-ts":{"tf":1.0}},"df":2}}}},"n":{"docs":{},"df":0,"g":{"docs":{},"df":0,"l":{"docs":{"appendix/stupid-stats.html#appendix-a-a-tutorial-on-creating-a-drop-in-replacement-for-rustc":{"tf":1.0},"rustdoc.html#hot-potato":{"tf":1.4142135623730952},"traits/resolution.html#candidate-assembly":{"tf":1.0},"compiletest.html#adding-a-new-header-command":{"tf":1.0},"appendix/stupid-stats.html#overview-of-the-compilation-process":{"tf":1.4142135623730952},"high-level-overview.html#the-main-stages-of-compilation":{"tf":1.0},"traits/specialization.html#specialization":{"tf":1.0},"variance.html#variance-and-associated-types":{"tf":1.0},"mir/visitor.html#mir-visitor":{"tf":1.0},"tests/intro.html#testing-infrastructure":{"tf":1.0},"miri.html#datastructures":{"tf":1.0},"macro-expansion.html#example":{"tf":1.0},"conventions.html#prefer-exhaustive-matches":{"tf":1.0},"hir.html#identifiers-in-the-hir":{"tf":1.0},"tests/adding.html#revisions":{"tf":1.0},"incrcomp-debugging.html#dumping-the-graph":{"tf":1.0},"mir/index.html#mir-data-types":{"tf":1.0}},"df":17,"e":{"docs":{},"df":0,"t":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{"traits/resolution.html#candidate-assembly":{"tf":1.0}},"df":1}}}}}}},"d":{"docs":{},"df":0,"e":{"docs":{"traits/canonicalization.html#executing-the-query":{"tf":1.0},"method-lookup.html#method-lookup":{"tf":1.4142135623730952},"high-level-overview.html#the-main-stages-of-compilation":{"tf":1.0},"type-inference.html#enforcing-equality--subtyping":{"tf":1.0},"type-inference.html#snapshots":{"tf":1.0},"traits/caching.html#an-example":{"tf":1.4142135623730952},"appendix/stupid-stats.html#overview-of-the-compilation-process":{"tf":1.4142135623730952},"type-inference.html#trying-equality":{"tf":1.0},"appendix/glossary.html#appendix-c-glossary":{"tf":1.0},"mir/regionck.html#another-example":{"tf":1.0},"rustdoc.html#the-walking-tour-of-rustdoc":{"tf":1.0},"mir/index.html#key-mir-vocabulary":{"tf":1.0}},"df":12,"b":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{"traits/index.html#trait-solving-new-style":{"tf":1.0}},"df":1}}}}},"m":{"docs":{},"df":0,"p":{"docs":{},"df":0,"l":{"docs":{"miri.html#miri":{"tf":1.0},"query.html#invoking-queries":{"tf":1.0},"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":2.0},"mir/index.html#key-mir-vocabulary":{"tf":1.0},"name-resolution.html#scopes-and-ribs":{"tf":1.0},"mir/passes.html#mir-passes":{"tf":1.0},"traits/hrtb.html#higher-ranked-trait-obligations":{"tf":1.0},"high-level-overview.html#the-main-stages-of-compilation":{"tf":1.0},"incremental-compilation.html#improvements-to-the-basic-algorithm":{"tf":1.0},"appendix/stupid-stats.html#appendix-a-a-tutorial-on-creating-a-drop-in-replacement-for-rustc":{"tf":1.0},"variance.html#the-algorithm":{"tf":1.0},"mir/visitor.html#mir-visitor":{"tf":1.0},"incremental-compilation.html#incremental-compilation":{"tf":1.0},"traits/lowering-to-logic.html#type-checking-normal-functions":{"tf":1.0},"compiletest.html#adding-a-new-header-command":{"tf":1.4142135623730952},"traits/canonicalization.html#canonicalization":{"tf":1.0},"query.html#queries-demand-driven-compilation":{"tf":1.0},"query.html#how-the-compiler-executes-a-query":{"tf":1.0},"ty.html#allocating-and-working-with-types":{"tf":1.0},"traits/lowering-to-logic.html#type-checking-generic-functions-beyond-horn-clauses":{"tf":1.0},"traits/caching.html#where-clauses-and-the-local-vs-global-cache":{"tf":1.4142135623730952},"traits/resolution.html#candidate-assembly":{"tf":1.4142135623730952},"traits/goals-and-clauses.html#domain-goals":{"tf":1.0}},"df":23,"i":{"docs":{"mir/regionck.html#another-example":{"tf":1.0},"query.html#adding-a-new-kind-of-query":{"tf":1.0},"traits/resolution.html#major-concepts":{"tf":1.0},"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.0},"incrcomp-debugging.html#tracking-down-incorrect-edges":{"tf":1.0},"tests/adding.html#normalization":{"tf":1.0},"compiletest.html#adding-a-new-test-file":{"tf":1.0},"mir/passes.html#stealing":{"tf":1.0},"type-inference.html#region-constraints":{"tf":1.0},"miri.html#interpretation":{"tf":1.0},"appendix/background.html#what-is-a-control-flow-graph":{"tf":1.0},"tests/running.html#running-tests":{"tf":1.0},"mir/passes.html#mir-passes":{"tf":1.0},"traits/goals-and-clauses.html#coinductive-goals":{"tf":1.0},"mir/passes.html#implementing-and-registering-a-pass":{"tf":1.0},"compiletest.html#implementing-the-behavior-change":{"tf":1.0}},"df":16,"f":{"docs":{},"df":0,"i":{"docs":{"rustdoc.html#the-walking-tour-of-rustdoc":{"tf":1.0},"incremental-compilation.html#incremental-compilation":{"tf":1.0},"traits/associated-types.html#associated-type-projection-and-normalization":{"tf":1.0},"traits/lowering-rules.html#trait-header":{"tf":1.0},"macro-expansion.html#the-macro-parser":{"tf":1.0},"mir/index.html#the-mir-mid-level-ir":{"tf":1.0}},"df":6}}},"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{"const-eval.html#constant-evaluation":{"tf":1.4142135623730952},"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.0},"query.html#cycles-between-queries":{"tf":1.0},"incrcomp-debugging.html#testing-the-dependency-graph":{"tf":1.0}},"df":4}},"r":{"docs":{"mir/regionck.html#mir-based-region-checking-nll":{"tf":1.0},"rustdoc.html#other-tricks-up-its-sleeve":{"tf":1.0},"traits/specialization.html#specialization":{"tf":1.0}},"df":3}}}},"i":{"docs":{},"df":0,"l":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.0},"diag.html#declaring-a-lint":{"tf":1.0},"traits/lowering-to-logic.html#type-checking-generic-functions-beyond-horn-clauses":{"tf":1.0},"mir/regionck.html#final-example":{"tf":1.0},"macro-expansion.html#the-macro-parser":{"tf":1.0},"tests/adding.html#normalization":{"tf":1.0},"traits/goals-and-clauses.html#coinductive-goals":{"tf":1.0},"param_env.html#parameter-environment":{"tf":1.0},"type-checking.html#type-collection":{"tf":1.0},"diag.html#span":{"tf":1.0},"rustdoc.html#other-tricks-up-its-sleeve":{"tf":1.0},"hir.html#out-of-band-storage-and-the--crate--type":{"tf":1.0},"traits/lowering-to-logic.html#lowering-to-logic":{"tf":1.0},"appendix/stupid-stats.html#appendix-a-a-tutorial-on-creating-a-drop-in-replacement-for-rustc":{"tf":1.0}},"df":14,"l":{"docs":{},"df":0,"i":{"docs":{"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.0},"type-inference.html#enforcing-equality--subtyping":{"tf":1.0},"hir.html#the-hir-map":{"tf":1.0},"mir/regionck.html#representing-the-values-of-a-region-variable":{"tf":1.0}},"df":4}}}}}}},"b":{"docs":{},"df":0,"l":{"docs":{"mir/regionck.html#what-is-a-universe":{"tf":1.0}},"df":1}},"g":{"docs":{},"df":0,"n":{"docs":{},"df":0,"i":{"docs":{},"df":0,"f":{"docs":{},"df":0,"i":{"docs":{},"df":0,"c":{"docs":{"tests/intro.html#other-tests":{"tf":1.4142135623730952}},"df":1}}}},"a":{"docs":{},"df":0,"l":{"docs":{"conventions.html#use-todo-comments-for-things-you-dont-want-to-forget":{"tf":1.0},"appendix/stupid-stats.html#compilercontroller":{"tf":1.0}},"df":2},"t":{"docs":{},"df":0,"u":{"docs":{},"df":0,"r":{"docs":{"variance.html#addendum-variance-on-traits":{"tf":1.0},"mir/regionck.html#extending-the-universal-regions-check":{"tf":1.0},"traits/canonical-queries.html#examples":{"tf":1.0},"type-inference.html#a-note-on-terminology":{"tf":1.0},"how-to-build-and-run.html#running-xpy-and-building-a-stage1-compiler":{"tf":1.0},"query.html#how-the-compiler-executes-a-query":{"tf":1.0},"traits/associated-types.html#integration-with-unification":{"tf":1.0},"type-checking.html#type-collection":{"tf":1.4142135623730952},"mir/regionck.html#mir-based-region-checking-nll":{"tf":1.0},"appendix/background.html#what-is-a-free-region-or-a-free-variable-what-about-bound-region":{"tf":1.0}},"df":10}}}}},"i":{"docs":{},"df":0,"l":{"docs":{"appendix/glossary.html#appendix-c-glossary":{"tf":1.4142135623730952}},"df":1}}}},"h":{"docs":{},"df":0,"e":{"docs":{},"df":0,"e":{"docs":{},"df":0,"t":{"docs":{"rustdoc.html#cheat-sheet":{"tf":1.0}},"df":1}},"n":{"docs":{},"df":0,"i":{"docs":{},"df":0,"g":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{"miri.html#interpretation":{"tf":1.0}},"df":1}}}}}},"i":{"docs":{},"df":0,"p":{"docs":{"compiler-debugging.html#logging-etiquette":{"tf":1.0}},"df":1},"f":{"docs":{},"df":0,"t":{"docs":{"ty.html#the-tcx-and-how-it-uses-lifetimes":{"tf":1.0}},"df":1}}},"o":{"docs":{},"df":0,"u":{"docs":{},"df":0,"l":{"docs":{},"df":0,"d":{"docs":{},"df":0,"n":{"docs":{},"df":0,"'":{"docs":{},"df":0,"t":{"docs":{"query.html#cycles-between-queries":{"tf":1.0}},"df":1}}}}}},"w":{"docs":{"compiler-debugging.html#debugging-llvm":{"tf":1.0},"mir/index.html#key-mir-vocabulary":{"tf":1.0},"traits/lowering-rules.html#trait-header":{"tf":1.0},"traits/implied-bounds.html#implied-bounds":{"tf":1.0},"appendix/stupid-stats.html#appendix-a-a-tutorial-on-creating-a-drop-in-replacement-for-rustc":{"tf":1.4142135623730952},"traits/lowering-rules.html#associated-type-declarations":{"tf":1.0},"compiler-debugging.html#getting-logging-output":{"tf":1.4142135623730952},"traits/lowering-to-logic.html#type-checking-normal-functions":{"tf":1.0}},"df":8,"n":{"docs":{"mir/visitor.html#mir-visitor":{"tf":1.0},"miri.html#miri":{"tf":1.0}},"df":2}},"r":{"docs":{},"df":0,"t":{"docs":{"type-inference.html#creating-an-inference-context":{"tf":1.0},"traits/canonical-queries.html#examples":{"tf":1.0},"traits/wf.html#well-formedness-checking":{"tf":1.0},"tests/adding.html#header-commands-configuring-rustc":{"tf":1.0},"variance.html#trait-variance-and-vtable-resolution":{"tf":1.0},"appendix/code-index.html#appendix-d-code-index":{"tf":1.0}},"df":6,"c":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{"rustdoc.html#other-tricks-up-its-sleeve":{"tf":1.0}},"df":1}}},"h":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{"hir.html#identifiers-in-the-hir":{"tf":1.0},"traits/associated-types.html#associated-type-projection-and-normalization":{"tf":1.0}},"df":2}}}},"l":{"docs":{},"df":0,"i":{"docs":{"traits/canonical-queries.html#a-trait-query-in-rustc":{"tf":1.0},"traits/associated-types.html#skolemized-associated-types":{"tf":1.0}},"df":2}}}}},"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{"ty.html#the-tcx-and-how-it-uses-lifetimes":{"tf":1.0},"mir/visitor.html#mir-visitor":{"tf":1.0},"appendix/glossary.html#appendix-c-glossary":{"tf":1.0},"rustdoc.html#from-soup-to-nuts":{"tf":1.0},"mir/regionck.html#what-is-a-universe":{"tf":1.0},"mir/borrowck.html#mir-borrow-check":{"tf":1.0}},"df":6,"d":{"docs":{},"df":0,"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"x":{"docs":{},"df":0,"t":{"docs":{"rustdoc.html#from-clean-to-crate":{"tf":1.0},"rustdoc.html#from-soup-to-nuts":{"tf":1.0}},"df":2}}}}}}}}}},"d":{"docs":{},"df":0,"o":{"docs":{},"df":0,"w":{"docs":{"name-resolution.html#scopes-and-ribs":{"tf":1.7320508075688773}},"df":1}}},"l":{"docs":{},"df":0,"l":{"docs":{},"df":0,"o":{"docs":{},"df":0,"w":{"docs":{"traits/resolution.html#selection-during-translation":{"tf":1.4142135623730952}},"df":1}}}}}},"c":{"docs":{},"df":0,"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{},"df":0,"c":{"docs":{},"df":0,"h":{"docs":{"traits/caching.html#an-example":{"tf":1.0}},"df":1}}}},"i":{"docs":{},"df":0,"p":{"docs":{},"df":0,"t":{"docs":{"rustdoc.html#dotting-is-and-crossing-ts":{"tf":1.4142135623730952},"conventions.html#use-todo-comments-for-things-you-dont-want-to-forget":{"tf":1.0},"tests/intro.html#testing-with-docker-images":{"tf":1.0},"conventions.html#formatting-and-the-tidy-script":{"tf":2.0},"rustdoc.html#cheat-sheet":{"tf":1.0}},"df":5}}}},"o":{"docs":{},"df":0,"p":{"docs":{},"df":0,"e":{"docs":{"mir/borrowck.html#major-phases-of-the-borrow-checker":{"tf":1.0},"mir/index.html#key-mir-vocabulary":{"tf":2.6457513110645909},"traits/caching.html#where-clauses-and-the-local-vs-global-cache":{"tf":1.7320508075688773},"traits/resolution.html#selection-during-translation":{"tf":1.0},"name-resolution.html#scopes-and-ribs":{"tf":2.0},"mir/regionck.html#what-is-a-universe":{"tf":1.7320508075688773},"traits/goals-and-clauses.html#domain-goals":{"tf":1.4142135623730952},"name-resolution.html#namespaces":{"tf":1.0},"mir/regionck.html#back-to-our-example":{"tf":1.0},"appendix/glossary.html#appendix-c-glossary":{"tf":1.0},"traits/resolution.html#candidate-assembly":{"tf":1.0}},"df":11}}},"a":{"docs":{},"df":0,"n":{"docs":{"name-resolution.html#overall-strategy":{"tf":1.0},"rustdoc.html#from-clean-to-crate":{"tf":1.0},"compiletest.html#adding-a-new-test-file":{"tf":1.0}},"df":3},"l":{"docs":{},"df":0,"a":{"docs":{},"df":0,"b":{"docs":{},"df":0,"l":{"docs":{"appendix/glossary.html#appendix-c-glossary":{"tf":1.0}},"df":1}}}}},"h":{"docs":{},"df":0,"w":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"t":{"docs":{},"df":0,"z":{"docs":{},"df":0,"b":{"docs":{},"df":0,"a":{"docs":{},"df":0,"c":{"docs":{},"df":0,"h":{"docs":{"appendix/background.html#what-is-a-dataflow-analysis":{"tf":1.0}},"df":1}}}}}}}}},"e":{"docs":{},"df":0,"m":{"docs":{},"df":0,"e":{"docs":{"incremental-compilation.html#incremental-compilation":{"tf":1.0}},"df":1}}}},"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"e":{"docs":{"variance.html#trait-variance-and-vtable-resolution":{"tf":1.0}},"df":1},"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{},"df":0,"o":{"docs":{"tests/adding.html#other-header-commands":{"tf":1.0}},"df":1}}}}}}},"y":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{},"df":0,"a":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{"macro-expansion.html#example":{"tf":1.0},"type-checking.html#type-collection":{"tf":1.0},"diag.html#declaring-a-lint":{"tf":1.0}},"df":3}},"x":{"docs":{"high-level-overview.html#crate-structure":{"tf":1.4142135623730952},"traits/chalk-overview.html#parsing":{"tf":2.6457513110645909},"incrcomp-debugging.html#tracking-down-incorrect-edges":{"tf":1.0},"traits/goals-and-clauses.html#domain-goals":{"tf":1.0},"macro-expansion.html#the-macro-parser":{"tf":1.0},"compiler-debugging.html#getting-logging-output":{"tf":1.0},"hir.html#the-hir":{"tf":1.4142135623730952},"name-resolution.html#overall-strategy":{"tf":1.0},"appendix/code-index.html#appendix-d-code-index":{"tf":1.0},"macro-expansion.html#example":{"tf":1.0},"appendix/stupid-stats.html#overview-of-the-compilation-process":{"tf":1.4142135623730952},"the-parser.html#the-parser":{"tf":1.4142135623730952},"traits/lowering-rules.html#lowering-where-clauses":{"tf":1.4142135623730952},"query.html#cycles-between-queries":{"tf":1.0},"appendix/glossary.html#appendix-c-glossary":{"tf":2.23606797749979},"traits/chalk-overview.html#testing":{"tf":1.0},"high-level-overview.html#the-main-stages-of-compilation":{"tf":1.7320508075688773},"rustdoc.html#from-clean-to-crate":{"tf":1.0},"name-resolution.html#name-resolution":{"tf":1.0},"traits/associated-types.html#associated-type-projection-and-normalization":{"tf":1.4142135623730952}},"df":20,"/":{"docs":{},"df":0,"a":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,".":{"docs":{},"df":0,"r":{"docs":{"high-level-overview.html#the-main-stages-of-compilation":{"tf":1.0}},"df":1}}}}}},":":{"docs":{},"df":0,":":{"docs":{},"df":0,"v":{"docs":{},"df":0,"i":{"docs":{},"df":0,"s":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{},"df":0,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"v":{"docs":{},"df":0,"i":{"docs":{},"df":0,"s":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}},"_":{"docs":{},"df":0,"e":{"docs":{},"df":0,"x":{"docs":{},"df":0,"t":{"docs":{"high-level-overview.html#crate-structure":{"tf":1.0}},"df":1}}},"p":{"docs":{},"df":0,"o":{"docs":{"high-level-overview.html#crate-structure":{"tf":1.0}},"df":1}}},"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"x":{"docs":{},"df":0,"t":{"docs":{},"df":0,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"e":{"docs":{},"df":0,"m":{"docs":{},"df":0,"p":{"docs":{},"df":0,"t":{"docs":{},"df":0,"i":{"docs":{"diag.html#declaring-a-lint":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}},"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"m":{"docs":{"traits/canonical-queries.html#canonical-queries":{"tf":1.4142135623730952},"traits/canonical-queries.html#the-traditional-interactive-prolog-query":{"tf":1.0},"traits/associated-types.html#skolemized-associated-types":{"tf":1.0},"traits/resolution.html#major-concepts":{"tf":1.0},"ty.html#beyond-types-other-kinds-of-arena-allocated-data-structures":{"tf":1.0},"incremental-compilation.html#incremental-compilation":{"tf":1.0},"traits/goals-and-clauses.html#domain-goals":{"tf":1.0},"rustc-driver.html#a-note-on-lifetimes":{"tf":1.0},"traits/lowering-to-logic.html#rust-traits-and-logic":{"tf":1.0},"type-inference.html#inference-variables":{"tf":1.0},"traits/chalk-overview.html#an-overview-of-chalk":{"tf":1.4142135623730952},"traits/associated-types.html#equality-and-associated-types":{"tf":1.4142135623730952},"how-to-build-and-run.html#create-a-configtoml":{"tf":1.0},"tests/intro.html#the-compiler-testing-framework":{"tf":1.0},"query.html#queries-demand-driven-compilation":{"tf":1.4142135623730952},"rustc-driver.html#the-rustc-driver":{"tf":1.0},"appendix/glossary.html#appendix-c-glossary":{"tf":1.7320508075688773},"traits/canonicalization.html#canonicalizing-the-query":{"tf":1.0},"tests/intro.html#other-tests":{"tf":1.7320508075688773},"traits/associated-types.html#integration-with-unification":{"tf":1.4142135623730952},"traits/goals-and-clauses.html#coinductive-goals":{"tf":1.0},"traits/chalk-overview.html#lowering":{"tf":1.0},"traits/lowering-to-logic.html#lowering-to-logic":{"tf":1.0}},"df":23}}}},"m":{"docs":{},"df":0,"b":{"docs":{},"df":0,"o":{"docs":{},"df":0,"l":{"docs":{"name-resolution.html#name-resolution":{"tf":1.0},"name-resolution.html#namespaces":{"tf":1.0}},"df":2}}}}},"l":{"docs":{},"df":0,"e":{"docs":{},"df":0,"e":{"docs":{},"df":0,"v":{"docs":{"rustdoc.html#other-tricks-up-its-sleeve":{"tf":1.0}},"df":1}}},"g":{"docs":{"traits/bibliography.html#bibliography":{"tf":1.0},"traits/goals-and-clauses.html#incomplete-chapter":{"tf":1.0},"traits/slg.html#the-slg-solver":{"tf":1.0},"traits/chalk-overview.html#solver":{"tf":1.0},"traits/canonical-queries.html#a-trait-query-in-rustc":{"tf":1.0},"traits/chalk-overview.html#blog-posts":{"tf":1.0}},"df":6},"a":{"docs":{},"df":0,"s":{"docs":{},"df":0,"h":{"docs":{"tests/adding.html#normalization":{"tf":1.0}},"df":1}}},"i":{"docs":{},"df":0,"c":{"docs":{},"df":0,"e":{"docs":{"appendix/glossary.html#appendix-c-glossary":{"tf":1.7320508075688773},"ty.html#beyond-types-other-kinds-of-arena-allocated-data-structures":{"tf":1.4142135623730952},"miri.html#miri":{"tf":1.0}},"df":3}},"g":{"docs":{},"df":0,"h":{"docs":{},"df":0,"t":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{"mir/index.html#key-mir-vocabulary":{"tf":1.0},"rustdoc.html#the-walking-tour-of-rustdoc":{"tf":1.0},"macro-expansion.html#the-macro-parser":{"tf":1.0},"incremental-compilation.html#incremental-compilation":{"tf":1.0},"name-resolution.html#namespaces":{"tf":1.0}},"df":5}}}}},"m":{"docs":{"traits/bibliography.html#bibliography":{"tf":1.0}},"df":1}},"o":{"docs":{},"df":0,"w":{"docs":{"compiler-debugging.html#logging-etiquette":{"tf":1.0}},"df":1,"l":{"docs":{},"df":0,"i":{"docs":{"hir.html#identifiers-in-the-hir":{"tf":1.0},"conventions.html#formatting-and-the-tidy-script":{"tf":1.0}},"df":2}}}}},"o":{"docs":{},"df":0,"u":{"docs":{},"df":0,"r":{"docs":{},"df":0,"c":{"docs":{"tests/adding.html#header-commands-configuring-rustc":{"tf":1.0},"tests/adding.html#adding-new-tests":{"tf":1.4142135623730952},"appendix/stupid-stats.html#appendix-a-a-tutorial-on-creating-a-drop-in-replacement-for-rustc":{"tf":1.0},"incrcomp-debugging.html#dumping-the-graph":{"tf":1.0},"high-level-overview.html#high-level-overview-of-the-compiler-source":{"tf":1.0},"tests/adding.html#error-annotations":{"tf":1.0},"mir/borrowck.html#major-phases-of-the-borrow-checker":{"tf":1.0},"traits/canonical-queries.html#examples":{"tf":1.0},"query.html#queries-demand-driven-compilation":{"tf":1.0},"tests/adding.html#other-header-commands":{"tf":1.4142135623730952},"compiletest.html#header-commands":{"tf":1.4142135623730952},"type-checking.html#type-checking":{"tf":1.0},"compiletest.html#introduction":{"tf":1.0},"tests/intro.html#the-compiler-testing-framework":{"tf":1.0},"traits/chalk-overview.html#well-formedness-checks":{"tf":1.0},"mir/index.html#key-mir-vocabulary":{"tf":1.0},"about-this-guide.html#about-this-guide":{"tf":1.4142135623730952},"compiletest.html#adding-a-new-test-file":{"tf":1.0},"tests/intro.html#other-tests":{"tf":1.4142135623730952},"the-parser.html#the-parser":{"tf":2.0},"appendix/stupid-stats.html#overview-of-the-compilation-process":{"tf":1.0},"mir/passes.html#implementing-and-registering-a-pass":{"tf":1.0},"traits/chalk-overview.html#parsing":{"tf":1.0},"appendix/glossary.html#appendix-c-glossary":{"tf":1.7320508075688773},"name-resolution.html#name-resolution":{"tf":1.0},"diag.html#declaring-a-lint":{"tf":1.0},"rustc-driver.html#the-rustc-driver":{"tf":1.0},"appendix/code-index.html#appendix-d-code-index":{"tf":1.7320508075688773},"traits/chalk-overview.html#lowering":{"tf":1.0},"rustdoc.html#from-clean-to-crate":{"tf":1.0},"tests/adding.html#normalization":{"tf":1.0},"macro-expansion.html#example":{"tf":1.0},"high-level-overview.html#crate-structure":{"tf":1.4142135623730952},"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.0},"traits/chalk-overview.html#resources":{"tf":1.0},"traits/chalk-overview.html#intermediate-representation-ir":{"tf":1.0},"name-resolution.html#scopes-and-ribs":{"tf":1.0},"traits/lowering-to-logic.html#source":{"tf":1.0},"compiletest.html#adding-a-new-header-command":{"tf":1.4142135623730952}},"df":39,"e":{"docs":{},"df":0,"_":{"docs":{},"df":0,"f":{"docs":{},"df":0,"i":{"docs":{},"df":0,"l":{"docs":{},"df":0,"t":{"docs":{"incrcomp-debugging.html#dumping-the-graph":{"tf":2.23606797749979}},"df":1}}}}}}}},"n":{"docs":{},"df":0,"d":{"docs":{"appendix/glossary.html#appendix-c-glossary":{"tf":2.449489742783178}},"df":1}},"p":{"docs":{"rustdoc.html#from-soup-to-nuts":{"tf":1.0}},"df":1}},"r":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{"compiler-debugging.html#getting-a-backtrace":{"tf":1.0}},"df":1}},"t":{"docs":{"hir.html#the-hir-map":{"tf":1.4142135623730952},"traits/goals-and-clauses.html#goals-and-clauses-meta-structure":{"tf":1.0},"mir/regionck.html#skolemization-and-outlives-constraints":{"tf":1.0},"ty.html#allocating-and-working-with-types":{"tf":1.0},"hir.html#identifiers-in-the-hir":{"tf":1.0},"mir/regionck.html#subtyping-and-skolemization":{"tf":1.0},"compiler-debugging.html#debugging-llvm":{"tf":1.0},"traits/chalk-overview.html#intermediate-representation-ir":{"tf":1.0}},"df":8}},"l":{"docs":{},"df":0,"d":{"docs":{},"df":0,"i":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"query.html#cycles-between-queries":{"tf":1.0}},"df":1}}}},"u":{"docs":{},"df":0,"t":{"docs":{"traits/canonical-queries.html#examples":{"tf":1.0},"variance.html#the-algorithm":{"tf":2.0},"traits/lowering-to-logic.html#lowering-to-logic":{"tf":1.0}},"df":3}},"v":{"docs":{"traits/canonicalization.html#canonicalizing-the-query":{"tf":1.0},"type-checking.html#type-checking":{"tf":1.0},"appendix/glossary.html#appendix-c-glossary":{"tf":1.0},"type-inference.html#extracting-region-constraints":{"tf":2.0},"type-inference.html#region-constraints":{"tf":1.0},"traits/goals-and-clauses.html#coinductive-goals":{"tf":1.0},"variance.html#variance-and-associated-types":{"tf":1.0},"type-inference.html#trying-equality":{"tf":1.0},"traits/goals-and-clauses.html#incomplete-chapter":{"tf":1.0},"traits/canonicalization.html#executing-the-query":{"tf":1.4142135623730952},"traits/index.html#trait-solving-new-style":{"tf":2.449489742783178}},"df":11,"e":{"docs":{},"df":0,"r":{"docs":{"traits/lowering-to-logic.html#lowering-to-logic":{"tf":1.0},"traits/goals-and-clauses.html#coinductive-goals":{"tf":1.0},"traits/canonicalization.html#executing-the-query":{"tf":1.0},"traits/bibliography.html#bibliography":{"tf":1.0},"traits/goals-and-clauses.html#goals-and-clauses":{"tf":1.0},"traits/chalk-overview.html#solver":{"tf":1.4142135623730952},"traits/canonical-queries.html#the-traditional-interactive-prolog-query":{"tf":2.8284271247461905},"traits/resolution.html#trait-resolution-old-style":{"tf":1.4142135623730952},"traits/goals-and-clauses.html#goals-and-clauses-meta-structure":{"tf":1.0},"traits/chalk-overview.html#blog-posts":{"tf":1.0},"traits/slg.html#the-slg-solver":{"tf":1.0},"traits/canonical-queries.html#a-trait-query-in-rustc":{"tf":1.4142135623730952},"traits/index.html#trait-solving-new-style":{"tf":1.4142135623730952},"type-inference.html#extracting-region-constraints":{"tf":2.0}},"df":14}}},"e":{"docs":{"traits/hrtb.html#basic-matching-and-skolemization-leaks":{"tf":1.0},"traits/hrtb.html#higher-ranked-trait-obligations":{"tf":1.0}},"df":2}},"m":{"docs":{},"df":0,"e":{"docs":{},"df":0,"h":{"docs":{},"df":0,"o":{"docs":{},"df":0,"w":{"docs":{"mir/passes.html#implementing-and-registering-a-pass":{"tf":1.0}},"df":1}}},"t":{"docs":{},"df":0,"h":{"docs":{"traits/associated-types.html#associated-type-projection-and-normalization":{"tf":1.0},"traits/lowering-module.html#the--program_clauses_for--query":{"tf":1.0},"conventions.html#use-todo-comments-for-things-you-dont-want-to-forget":{"tf":1.0},"mir/regionck.html#skolemization-and-universes":{"tf":1.0},"ty.html#beyond-types-other-kinds-of-arena-allocated-data-structures":{"tf":1.0},"miri.html#allocations":{"tf":1.0},"traits/goals-and-clauses.html#goals-and-clauses-meta-structure":{"tf":1.4142135623730952},"type-inference.html#creating-an-inference-context":{"tf":1.0},"tests/adding.html#comment-explaining-what-the-test-is-about":{"tf":1.0},"query.html#how-the-compiler-executes-a-query":{"tf":1.0},"incrcomp-debugging.html#tracking-down-incorrect-edges":{"tf":1.0},"appendix/glossary.html#appendix-c-glossary":{"tf":1.0},"query.html#adding-a-new-kind-of-query":{"tf":1.7320508075688773},"mir/regionck.html#what-is-a-universe":{"tf":1.4142135623730952},"how-to-build-and-run.html#running-xpy-and-building-a-stage1-compiler":{"tf":1.0},"rustc-driver.html#the-rustc-driver":{"tf":1.0},"traits/canonical-queries.html#the-traditional-interactive-prolog-query":{"tf":1.0},"mir/passes.html#implementing-and-registering-a-pass":{"tf":1.4142135623730952},"traits/lowering-to-logic.html#type-checking-generic-functions-beyond-horn-clauses":{"tf":1.0},"traits/canonicalization.html#executing-the-query":{"tf":1.0},"appendix/background.html#what-is-a-free-region-or-a-free-variable-what-about-bound-region":{"tf":1.0},"traits/goals-and-clauses.html#goals-and-clauses":{"tf":1.4142135623730952},"hir.html#the-hir-map":{"tf":1.0},"traits/chalk-overview.html#an-overview-of-chalk":{"tf":1.0},"traits/bibliography.html#bibliography":{"tf":1.0},"traits/canonical-queries.html#canonical-queries":{"tf":1.0},"tests/running.html#running-an-individual-test":{"tf":1.0},"mir/index.html#key-mir-vocabulary":{"tf":1.0},"miri.html#miri":{"tf":1.4142135623730952},"rustdoc.html#other-tricks-up-its-sleeve":{"tf":1.0},"query.html#queries-demand-driven-compilation":{"tf":1.0}},"df":31,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"g":{"docs":{},"df":0,"_":{"docs":{},"df":0,"e":{"docs":{},"df":0,"l":{"docs":{},"df":0,"s":{"docs":{"conventions.html#use-todo-comments-for-things-you-dont-want-to-forget":{"tf":1.0}},"df":1}}}}}}}},"i":{"docs":{},"df":0,"m":{"docs":{"conventions.html#line-length":{"tf":1.0},"traits/resolution.html#candidate-assembly":{"tf":1.0},"traits/canonicalization.html#canonicalizing-the-query":{"tf":1.0},"diag.html#edition-gated-lints":{"tf":1.0},"method-lookup.html#method-lookup":{"tf":1.0},"query.html#cycles-between-queries":{"tf":1.0},"query.html#adding-a-new-kind-of-query":{"tf":1.0},"traits/lowering-rules.html#transforming-the-lowered-where-clauses":{"tf":1.0},"incremental-compilation.html#the-try-mark-green-algorithm":{"tf":1.0},"incrcomp-debugging.html#tracking-down-incorrect-edges":{"tf":1.0},"traits/lowering-rules.html#notation":{"tf":1.0},"mir/regionck.html#skolemization-and-outlives-constraints":{"tf":1.0},"tests/adding.html#normalization":{"tf":1.0},"incremental-compilation.html#the-basic-algorithm":{"tf":1.0},"ty.html#allocating-and-working-with-types":{"tf":1.0},"macro-expansion.html#the-macro-parser":{"tf":1.0},"traits/resolution.html#selection-during-translation":{"tf":1.0},"traits/associated-types.html#skolemized-associated-types":{"tf":1.0},"type-inference.html#region-constraints":{"tf":1.0},"type-inference.html#trying-equality":{"tf":1.0}},"df":20}}},"(":{"docs":{},"df":0,"r":{"docs":{},"df":0,"u":{"docs":{},"df":0,"l":{"docs":{"compiletest.html#adding-a-new-header-command":{"tf":1.0}},"df":1},"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"_":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"r":{"docs":{"compiletest.html#implementing-the-behavior-change":{"tf":1.0}},"df":1}}}}}}}},"|":{"docs":{},"df":0,"c":{"docs":{"variance.html#the-algorithm":{"tf":1.0}},"df":1},"b":{"docs":{"variance.html#the-algorithm":{"tf":1.0}},"df":1}},"n":{"docs":{"hir.html#the-hir-map":{"tf":1.0}},"df":1,"a":{"docs":{},"df":0,"m":{"docs":{"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.0}},"df":1}}},"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"d":{"docs":{"compiletest.html#adding-a-new-header-command":{"tf":1.4142135623730952}},"df":1}}},"s":{"docs":{},"df":0,"n":{"docs":{},"df":0,"i":{"docs":{},"df":0,"p":{"docs":{},"df":0,"p":{"docs":{},"df":0,"e":{"docs":{},"df":0,"t":{"docs":{"diag.html#error-messages":{"tf":1.0},"diag.html#suggestions":{"tf":1.0}},"df":2}}}}}},"e":{"docs":{},"df":0,"l":{"docs":{},"df":0,"f":{"docs":{},"df":0,".":{"docs":{},"df":0,"p":{"docs":{},"df":0,"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"p":{"docs":{},"df":0,"s":{"docs":{},"df":0,".":{"docs":{},"df":0,"f":{"docs":{},"df":0,"a":{"docs":{},"df":0,"i":{"docs":{},"df":0,"l":{"docs":{},"df":0,"u":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"_":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{},"df":0,"u":{"docs":{"compiletest.html#implementing-the-behavior-change":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}}}}}}},"a":{"docs":{"variance.html#the-algorithm":{"tf":1.0}},"df":1},"v":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{"traits/canonical-queries.html#examples":{"tf":1.0}},"df":1}}}},"o":{"docs":{},"df":0,"n":{"docs":{"compiler-debugging.html#expensive-operations-in-logs":{"tf":1.4142135623730952},"compiler-debugging.html#logging-etiquette":{"tf":1.0}},"df":2}},"w":{"docs":{},"df":0,"h":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{"type-checking.html#type-collection":{"tf":1.0},"type-inference.html#inference-variables":{"tf":1.0},"traits/caching.html#caching-and-subtle-considerations-therewith":{"tf":1.0},"tests/adding.html#revisions":{"tf":1.0},"tests/running.html#running-a-subset-of-the-test-suites":{"tf":1.0},"traits/chalk-overview.html#an-overview-of-chalk":{"tf":1.0},"traits/canonical-queries.html#a-trait-query-in-rustc":{"tf":1.0},"type-inference.html#region-constraints":{"tf":1.0},"traits/lowering-to-logic.html#lowering-to-logic":{"tf":1.0}},"df":9}},"e":{"docs":{},"df":0,"r":{"docs":{"tests/adding.html#naming-your-test":{"tf":1.0},"query.html#how-the-compiler-executes-a-query":{"tf":1.0},"macro-expansion.html#example":{"tf":1.0}},"df":3}}}},".":{"docs":{},"df":0,"r":{"docs":{"compiler-debugging.html#getting-logging-output":{"tf":1.0}},"df":1}},"_":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"p":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{"appendix/stupid-stats.html#compilercalls":{"tf":1.0}},"df":1,"(":{"docs":{},"df":0,"&":{"docs":{},"df":0,"m":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.0}},"df":1}}}}}}}}}},"v":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{"appendix/background.html#what-is-a-control-flow-graph":{"tf":1.4142135623730952}},"df":1}}}}}}},"o":{"docs":{},"df":0,"n":{"docs":{"traits/canonical-queries.html#examples":{"tf":1.0}},"df":1}}},"p":{"docs":{"diag.html#error-messages":{"tf":1.0}},"df":1,"i":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{"macro-expansion.html#the-macro-parser":{"tf":1.0}},"df":1}}}},"j":{"docs":{"traits/hrtb.html#basic-matching-and-skolemization-leaks":{"tf":1.0}},"df":1},"e":{"docs":{},"df":0,"a":{"docs":{},"df":0,"k":{"docs":{"traits/canonicalization.html#canonicalization":{"tf":1.0},"rustdoc.html#hot-potato":{"tf":1.0}},"df":2}},"c":{"docs":{},"df":0,"i":{"docs":{},"df":0,"f":{"docs":{"traits/resolution.html#overview":{"tf":1.4142135623730952},"const-eval.html#constant-evaluation":{"tf":1.0},"tests/running.html#running-a-subset-of-the-test-suites":{"tf":1.0},"rustdoc.html#from-clean-to-crate":{"tf":1.0},"compiler-debugging.html#formatting-graphviz-output-dot-files":{"tf":1.0},"variance.html#trait-variance-and-vtable-resolution":{"tf":1.0},"compiler-debugging.html#debugging-llvm":{"tf":1.0},"compiletest.html#implementing-the-behavior-change":{"tf":1.4142135623730952},"traits/chalk-overview.html#an-overview-of-chalk":{"tf":1.0},"name-resolution.html#name-resolution":{"tf":1.0},"appendix/background.html#appendix-b-background-topics":{"tf":1.0},"compiler-debugging.html#getting-logging-output":{"tf":1.0},"traits/canonical-queries.html#canonical-queries":{"tf":1.0},"tests/adding.html#editing-and-updating-the-reference-files":{"tf":1.0},"traits/lowering-to-logic.html#type-checking-generic-functions-beyond-horn-clauses":{"tf":1.0},"hir.html#identifiers-in-the-hir":{"tf":1.0},"traits/resolution.html#major-concepts":{"tf":1.4142135623730952},"tests/running.html#running-an-individual-test":{"tf":1.0},"rustdoc.html#cheat-sheet":{"tf":1.0},"traits/resolution.html#candidate-assembly":{"tf":1.0},"type-inference.html#inference-variables":{"tf":1.0}},"df":21,"i":{"docs":{"traits/resolution.html#confirmation":{"tf":1.0},"compiletest.html#implementing-the-behavior-change":{"tf":1.4142135623730952},"tests/adding.html#header-commands-configuring-rustc":{"tf":1.0},"query.html#adding-a-new-kind-of-query":{"tf":1.4142135623730952},"tests/adding.html#error-annotations":{"tf":1.0},"ty.html#beyond-types-other-kinds-of-arena-allocated-data-structures":{"tf":1.0},"compiletest.html#adding-a-new-header-command":{"tf":2.0},"tests/running.html#running-an-individual-test":{"tf":1.0}},"df":8}},"a":{"docs":{},"df":0,"l":{"docs":{"traits/canonicalization.html#canonicalizing-the-query-result":{"tf":1.0},"rustdoc.html#from-clean-to-crate":{"tf":1.0},"mir/regionck.html#mir-based-region-checking-nll":{"tf":1.0},"traits/specialization.html#specialization":{"tf":3.872983346207417},"macro-expansion.html#example":{"tf":1.0},"traits/canonical-queries.html#a-trait-query-in-rustc":{"tf":1.0},"tests/adding.html#header-commands-configuring-rustc":{"tf":1.0},"tests/adding.html#adding-new-tests":{"tf":1.0},"tests/adding.html#revisions":{"tf":1.0},"mir/index.html#key-mir-vocabulary":{"tf":1.0},"mir/index.html#mir-data-types":{"tf":1.4142135623730952},"tests/adding.html#what-kind-of-test-should-i-add":{"tf":1.0},"traits/associated-types.html#associated-type-projection-and-normalization":{"tf":1.0},"appendix/glossary.html#appendix-c-glossary":{"tf":1.0}},"df":14}}}}},"a":{"docs":{},"df":0,"n":{"docs":{"diag.html#error-messages":{"tf":1.0},"appendix/glossary.html#appendix-c-glossary":{"tf":1.4142135623730952},"the-parser.html#the-parser":{"tf":1.0},"type-checking.html#type-collection":{"tf":1.0},"diag.html#suggestions":{"tf":1.0},"appendix/code-index.html#appendix-d-code-index":{"tf":1.0},"diag.html#span":{"tf":2.0}},"df":7,"_":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"r":{"docs":{"diag.html#error-messages":{"tf":1.4142135623730952}},"df":1}}},"w":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"n":{"docs":{"diag.html#error-messages":{"tf":1.0}},"df":1}}}},"s":{"docs":{},"df":0,"u":{"docs":{},"df":0,"g":{"docs":{},"df":0,"g":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"i":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"_":{"docs":{},"df":0,"w":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{},"df":0,"h":{"docs":{},"df":0,"_":{"docs":{},"df":0,"a":{"docs":{},"df":0,"p":{"docs":{},"df":0,"p":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{},"df":0,"c":{"docs":{"diag.html#suggestions":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"df":0,"o":{"docs":{},"df":0,"_":{"docs":{},"df":0,"s":{"docs":{},"df":0,"n":{"docs":{},"df":0,"i":{"docs":{},"df":0,"p":{"docs":{},"df":0,"p":{"docs":{},"df":0,"e":{"docs":{},"df":0,"t":{"docs":{"diag.html#span":{"tf":1.0}},"df":1}}}}}}}}}}}},"c":{"docs":{},"df":0,"e":{"docs":{"const-eval.html#constant-evaluation":{"tf":1.0},"mir/index.html#key-mir-vocabulary":{"tf":1.0},"rustdoc.html#hot-potato":{"tf":1.4142135623730952},"conventions.html#tabs-vs-spaces":{"tf":1.4142135623730952}},"df":4}},"r":{"docs":{},"df":0,"s":{"docs":{"mir/regionck.html#representing-the-values-of-a-region-variable":{"tf":1.0}},"df":1}}}},"t":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"t":{"docs":{"mir/regionck.html#another-example":{"tf":1.0},"appendix/stupid-stats.html#appendix-a-a-tutorial-on-creating-a-drop-in-replacement-for-rustc":{"tf":1.0},"appendix/stupid-stats.html#overview-of-the-compilation-process":{"tf":1.0},"type-inference.html#snapshots":{"tf":1.0},"traits/canonicalization.html#canonicalization":{"tf":1.0},"how-to-build-and-run.html#create-a-configtoml":{"tf":1.0},"query.html#queries-demand-driven-compilation":{"tf":1.0},"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.0},"incrcomp-debugging.html#dumping-the-graph":{"tf":1.0},"traits/canonical-queries.html#canonical-queries":{"tf":1.0},"incremental-compilation.html#the-query-dag":{"tf":1.0},"incremental-compilation.html#incremental-compilation":{"tf":1.0},"traits/lowering-to-logic.html#rust-traits-and-logic":{"tf":1.0},"how-to-build-and-run.html#running-xpy-and-building-a-stage1-compiler":{"tf":1.0},"name-resolution.html#namespaces":{"tf":1.0},"rustdoc.html#from-clean-to-crate":{"tf":1.0},"traits/canonical-queries.html#the-traditional-interactive-prolog-query":{"tf":1.4142135623730952},"appendix/background.html#what-is-a-control-flow-graph":{"tf":1.0},"appendix/glossary.html#appendix-c-glossary":{"tf":1.0},"miri.html#interpretation":{"tf":1.4142135623730952},"miri.html#miri":{"tf":1.4142135623730952},"traits/goals-and-clauses.html#coinductive-goals":{"tf":1.0},"ty.html#allocating-and-working-with-types":{"tf":1.0},"appendix/stupid-stats.html#compilercalls":{"tf":1.0},"mir/regionck.html#skolemization-and-outlives-constraints":{"tf":1.0}},"df":25,"/":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{"appendix/glossary.html#appendix-c-glossary":{"tf":1.0}},"df":1}}}}}},"g":{"docs":{},"df":0,"e":{"docs":{"how-to-build-and-run.html#running-xpy-and-building-a-stage1-compiler":{"tf":3.4641016151377546},"tests/adding.html#editing-and-updating-the-reference-files":{"tf":1.0},"rustdoc.html#cheat-sheet":{"tf":1.4142135623730952},"tests/running.html#running-tests":{"tf":1.0},"tests/adding.html#normalization":{"tf":1.0},"high-level-overview.html#the-main-stages-of-compilation":{"tf":1.0},"name-resolution.html#overall-strategy":{"tf":1.0},"tests/running.html#running-a-subset-of-the-test-suites":{"tf":2.449489742783178},"how-to-build-and-run.html#other-xpy-commands":{"tf":2.0},"name-resolution.html#todo":{"tf":1.0},"appendix/stupid-stats.html#overview-of-the-compilation-process":{"tf":1.0},"tests/adding.html#ignoring-tests":{"tf":1.7320508075688773},"mir/passes.html#seeing-how-the-mir-changes-as-the-compiler-executes":{"tf":1.0},"tests/running.html#running-an-individual-test":{"tf":1.0}},"df":14,"1":{"docs":{"tests/running.html#running-an-individual-test":{"tf":1.0},"tests/adding.html#ignoring-tests":{"tf":1.0},"how-to-build-and-run.html#creating-a-rustup-toolchain":{"tf":1.7320508075688773},"tests/running.html#running-a-subset-of-the-test-suites":{"tf":1.0},"how-to-build-and-run.html#running-xpy-and-building-a-stage1-compiler":{"tf":2.6457513110645909}},"df":5},"2":{"docs":{"how-to-build-and-run.html#running-xpy-and-building-a-stage1-compiler":{"tf":2.0},"how-to-build-and-run.html#creating-a-rustup-toolchain":{"tf":1.4142135623730952},"how-to-build-and-run.html#other-xpy-commands":{"tf":1.0},"tests/adding.html#ignoring-tests":{"tf":1.0}},"df":4},"0":{"docs":{"how-to-build-and-run.html#running-xpy-and-building-a-stage1-compiler":{"tf":2.0},"tests/adding.html#ignoring-tests":{"tf":1.0}},"df":2}}},"n":{"docs":{},"df":0,"d":{"docs":{"mir/index.html#key-mir-vocabulary":{"tf":1.0},"mir/regionck.html#mir-based-region-checking-nll":{"tf":1.0}},"df":2,"a":{"docs":{},"df":0,"l":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{"rustdoc.html#other-tricks-up-its-sleeve":{"tf":1.4142135623730952}},"df":1}}},"r":{"docs":{},"df":0,"d":{"docs":{"compiler-debugging.html#debugging-llvm":{"tf":1.0},"traits/lowering-to-logic.html#lowering-to-logic":{"tf":1.0},"traits/lowering-to-logic.html#rust-traits-and-logic":{"tf":1.0},"conventions.html#formatting-and-the-tidy-script":{"tf":1.0},"mir/regionck.html#mir-based-region-checking-nll":{"tf":1.0},"mir/visitor.html#traversal":{"tf":1.0},"traits/lowering-module.html#unit-tests":{"tf":1.0},"tests/intro.html#other-tests":{"tf":1.4142135623730952},"rustdoc.html#the-walking-tour-of-rustdoc":{"tf":1.0},"type-inference.html#type-inference":{"tf":1.0},"tests/running.html#running-an-individual-test":{"tf":1.0},"how-to-build-and-run.html#running-xpy-and-building-a-stage1-compiler":{"tf":1.4142135623730952},"traits/lowering-to-logic.html#type-checking-generic-functions-beyond-horn-clauses":{"tf":2.0},"compiler-debugging.html#getting-logging-output":{"tf":1.7320508075688773},"rustdoc.html#cheat-sheet":{"tf":1.4142135623730952},"high-level-overview.html#crate-structure":{"tf":1.0},"traits/index.html#trait-solving-new-style":{"tf":1.0}},"df":17}}}}},"b":{"docs":{},"df":0,"l":{"docs":{"high-level-overview.html#crate-structure":{"tf":1.0}},"df":1}},"t":{"docs":{"rustc-driver.html#the-rustc-driver":{"tf":1.0},"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":3.0},"appendix/stupid-stats.html#appendix-a-a-tutorial-on-creating-a-drop-in-replacement-for-rustc":{"tf":1.4142135623730952}},"df":3,"e":{"docs":{"mir/visitor.html#mir-visitor":{"tf":1.4142135623730952},"traits/lowering-rules.html#trait-header":{"tf":1.4142135623730952},"mir/passes.html#mir-passes":{"tf":1.0},"rustdoc.html#from-soup-to-nuts":{"tf":1.0},"traits/canonicalization.html#canonicalization":{"tf":1.0},"mir/passes.html#seeing-how-the-mir-changes-as-the-compiler-executes":{"tf":1.0},"mir/borrowck.html#mir-borrow-check":{"tf":1.0},"rustc-driver.html#the-rustc-driver":{"tf":1.0},"appendix/stupid-stats.html#compilercontroller":{"tf":2.23606797749979},"rustdoc.html#from-clean-to-crate":{"tf":1.0},"traits/lowering-to-logic.html#rust-traits-and-logic":{"tf":1.0},"rustdoc.html#from-crate-to-clean":{"tf":1.0},"appendix/stupid-stats.html#overview-of-the-compilation-process":{"tf":1.0},"rustc-driver.html#a-note-on-lifetimes":{"tf":1.4142135623730952},"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.0},"appendix/code-index.html#appendix-d-code-index":{"tf":1.4142135623730952}},"df":16,"m":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{"appendix/background.html#what-is-a-control-flow-graph":{"tf":2.0},"compiler-debugging.html#getting-logging-output":{"tf":1.0},"rustdoc.html#hot-potato":{"tf":1.0},"mir/index.html#key-mir-vocabulary":{"tf":3.0},"mir/regionck.html#representing-the-values-of-a-region-variable":{"tf":1.0},"miri.html#miri":{"tf":1.0},"mir/index.html#mir-data-types":{"tf":1.4142135623730952},"compiler-debugging.html#expensive-operations-in-logs":{"tf":1.0},"miri.html#interpretation":{"tf":1.4142135623730952}},"df":9,"s":{"docs":{},"df":0,".":{"docs":{},"df":0,"l":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{"mir/regionck.html#representing-the-values-of-a-region-variable":{"tf":1.0}},"df":1}}}}},"2":{"docs":{"appendix/background.html#what-is-a-control-flow-graph":{"tf":1.0}},"df":1},"0":{"docs":{"appendix/background.html#what-is-a-control-flow-graph":{"tf":1.0}},"df":1},"1":{"docs":{"appendix/background.html#what-is-a-control-flow-graph":{"tf":1.0}},"df":1}}}}},".":{"docs":{},"df":0,"k":{"docs":{},"df":0,"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,".":{"docs":{},"df":0,"u":{"docs":{},"df":0,"n":{"docs":{},"df":0,"w":{"docs":{},"df":0,"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"p":{"docs":{"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.0}},"df":1}}}}}}}}}}}}},"_":{"docs":{},"df":0,"a":{"docs":{},"df":0,"f":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"_":{"docs":{"rustc-driver.html#the-rustc-driver":{"tf":1.0}},"df":1}}}}}}}},"u":{"docs":{"compiletest.html#adding-a-new-header-command":{"tf":2.449489742783178},"compiletest.html#implementing-the-behavior-change":{"tf":2.6457513110645909},"compiletest.html#introduction":{"tf":1.0}},"df":3},"i":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.0}},"df":1}},"c":{"docs":{"appendix/glossary.html#appendix-c-glossary":{"tf":1.4142135623730952},"miri.html#interpretation":{"tf":1.0},"traits/lowering-module.html#unit-tests":{"tf":1.4142135623730952},"appendix/background.html#what-is-a-dataflow-analysis":{"tf":1.0},"mir/regionck.html#skolemization-and-outlives-constraints":{"tf":1.7320508075688773},"mir/regionck.html#back-to-our-example":{"tf":1.7320508075688773},"const-eval.html#constant-evaluation":{"tf":1.7320508075688773},"rustdoc.html#from-clean-to-crate":{"tf":1.0},"traits/hrtb.html#basic-matching-and-skolemization-leaks":{"tf":1.7320508075688773},"traits/goals-and-clauses.html#domain-goals":{"tf":1.0},"mir/regionck.html#skolemization-and-universes":{"tf":1.7320508075688773},"mir/regionck.html#subtyping-and-skolemization":{"tf":2.0},"miri.html#allocations":{"tf":1.0},"mir/index.html#mir-data-types":{"tf":1.0},"traits/canonicalization.html#processing-the-canonicalized-query-result":{"tf":1.7320508075688773},"traits/canonicalization.html#canonicalizing-the-query":{"tf":1.4142135623730952},"variance.html#variance-and-associated-types":{"tf":2.449489742783178},"mir/regionck.html#what-is-a-universe":{"tf":1.4142135623730952}},"df":18,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{"traits/hrtb.html#basic-matching-and-skolemization-leaks":{"tf":1.7320508075688773}},"df":1}}}}}},"c":{"docs":{},"df":0,"k":{"docs":{"compiler-debugging.html#getting-a-backtrace-for-errors":{"tf":1.0},"type-inference.html#snapshots":{"tf":1.0},"name-resolution.html#scopes-and-ribs":{"tf":2.0},"ty.html#allocating-and-working-with-types":{"tf":1.0},"mir/index.html#key-mir-vocabulary":{"tf":1.4142135623730952},"mir/regionck.html#skolemization-and-universes":{"tf":1.0},"miri.html#interpretation":{"tf":1.7320508075688773},"const-eval.html#constant-evaluation":{"tf":1.0},"compiler-debugging.html#getting-a-backtrace":{"tf":2.0}},"df":9}}},"d":{"docs":{},"df":0,"o":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{"tests/adding.html#editing-and-updating-the-reference-files":{"tf":1.0},"tests/adding.html#normalization":{"tf":1.0},"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":2.0}},"df":3,"/":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"d":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"r":{"docs":{"tests/intro.html#compiletest-test-suites":{"tf":1.0},"tests/running.html#running-tests":{"tf":1.0}},"df":2}}}}}}}}}},"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"r":{"docs":{"tests/adding.html#editing-and-updating-the-reference-files":{"tf":1.0},"tests/adding.html#normalization":{"tf":2.449489742783178},"traits/lowering-module.html#unit-tests":{"tf":1.0},"compiletest.html#adding-a-new-header-command":{"tf":1.0}},"df":4}}},":":{"docs":{},"df":0,":":{"docs":{},"df":0,"t":{"docs":{},"df":0,"h":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"a":{"docs":{},"df":0,"d":{"docs":{},"df":0,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"l":{"docs":{},"df":0,"o":{"docs":{},"df":0,"c":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{},"df":0,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"l":{"docs":{},"df":0,"o":{"docs":{},"df":0,"c":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{},"df":0,"k":{"docs":{},"df":0,"e":{"docs":{},"df":0,"y":{"docs":{},"df":0,"<":{"docs":{},"df":0,"t":{"docs":{},"df":0,">":{"docs":{},"df":0,">":{"docs":{},"df":0,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"w":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{},"df":0,"h":{"docs":{"compiler-debugging.html#getting-a-backtrace":{"tf":1.4142135623730952}},"df":1}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"m":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"k":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"s":{"docs":{"traits/lowering-module.html#unit-tests":{"tf":1.0}},"df":1}}}}}}}}},"p":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"i":{"docs":{},"df":0,"c":{"docs":{},"df":0,"k":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"g":{"docs":{},"df":0,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"d":{"docs":{},"df":0,"e":{"docs":{},"df":0,"f":{"docs":{},"df":0,"a":{"docs":{},"df":0,"u":{"docs":{},"df":0,"l":{"docs":{},"df":0,"t":{"docs":{},"df":0,"_":{"docs":{},"df":0,"h":{"docs":{},"df":0,"o":{"docs":{},"df":0,"o":{"docs":{},"df":0,"k":{"docs":{"compiler-debugging.html#getting-a-backtrace":{"tf":1.0}},"df":1,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"{":{"docs":{},"df":0,"{":{"docs":{},"df":0,"c":{"docs":{},"df":0,"l":{"docs":{},"df":0,"o":{"docs":{},"df":0,"s":{"docs":{},"df":0,"u":{"docs":{},"df":0,"r":{"docs":{"compiler-debugging.html#getting-a-backtrace":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}}}}},"b":{"docs":{},"df":0,"e":{"docs":{},"df":0,"g":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"_":{"docs":{},"df":0,"p":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{"compiler-debugging.html#getting-a-backtrace":{"tf":1.0}},"df":1}}}}}}}}},"r":{"docs":{},"df":0,"u":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"_":{"docs":{},"df":0,"p":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"i":{"docs":{},"df":0,"c":{"docs":{},"df":0,"_":{"docs":{},"df":0,"w":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{},"df":0,"h":{"docs":{},"df":0,"_":{"docs":{},"df":0,"h":{"docs":{},"df":0,"o":{"docs":{},"df":0,"o":{"docs":{},"df":0,"k":{"docs":{"compiler-debugging.html#getting-a-backtrace":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"df":0,"y":{"docs":{},"df":0,"s":{"docs":{},"df":0,"_":{"docs":{},"df":0,"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"m":{"docs":{},"df":0,"m":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"b":{"docs":{},"df":0,"a":{"docs":{},"df":0,"c":{"docs":{},"df":0,"k":{"docs":{},"df":0,"t":{"docs":{},"df":0,"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"c":{"docs":{},"df":0,"e":{"docs":{},"df":0,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"_":{"docs":{},"df":0,"p":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{"compiler-debugging.html#getting-a-backtrace":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}}}}}}}}},":":{"docs":{},"df":0,":":{"docs":{},"df":0,"i":{"docs":{},"df":0,"m":{"docs":{},"df":0,"p":{"docs":{},"df":0,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"b":{"docs":{},"df":0,"a":{"docs":{},"df":0,"c":{"docs":{},"df":0,"k":{"docs":{},"df":0,"t":{"docs":{},"df":0,"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"c":{"docs":{},"df":0,"e":{"docs":{},"df":0,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"t":{"docs":{},"df":0,"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"c":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"g":{"docs":{},"df":0,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"i":{"docs":{},"df":0,"m":{"docs":{},"df":0,"p":{"docs":{},"df":0,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"u":{"docs":{},"df":0,"n":{"docs":{},"df":0,"w":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{},"df":0,"_":{"docs":{},"df":0,"b":{"docs":{},"df":0,"a":{"docs":{},"df":0,"c":{"docs":{},"df":0,"k":{"docs":{},"df":0,"t":{"docs":{},"df":0,"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"c":{"docs":{"compiler-debugging.html#getting-a-backtrace":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"traits/lowering-module.html#unit-tests":{"tf":1.0}},"df":1,"a":{"docs":{},"df":0,"t":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,">":{"docs":{},"df":0,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"m":{"docs":{"traits/lowering-module.html#unit-tests":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}}},"o":{"docs":{},"df":0,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"{":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{"compiletest.html#adding-a-new-header-command":{"tf":1.0}},"df":1}}}}}}}}}},"v":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"v":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"<":{"docs":{},"df":0,"t":{"docs":{},"df":0,">":{"docs":{},"df":0,">":{"docs":{},"df":0,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"p":{"docs":{},"df":0,"u":{"docs":{},"df":0,"s":{"docs":{},"df":0,"h":{"docs":{},"df":0,"(":{"docs":{},"df":0,"m":{"docs":{},"df":0,"o":{"docs":{},"df":0,"v":{"docs":{"mir/index.html#key-mir-vocabulary":{"tf":1.0}},"df":1}}}}}}}},"n":{"docs":{},"df":0,"e":{"docs":{},"df":0,"w":{"docs":{"mir/index.html#key-mir-vocabulary":{"tf":1.4142135623730952}},"df":1}}}}}}}},"i":{"docs":{},"df":0,"3":{"docs":{},"df":0,"2":{"docs":{"mir/index.html#key-mir-vocabulary":{"tf":1.7320508075688773}},"df":1}}}}}}}}}}}},"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"v":{"docs":{},"df":0,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"g":{"docs":{},"df":0,"s":{"docs":{},"df":0,"(":{"docs":{},"df":0,")":{"docs":{},"df":0,".":{"docs":{},"df":0,"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"l":{"docs":{},"df":0,"l":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.0}},"df":1}}}}}}}}}}}}}},"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"t":{"docs":{},"df":0,"_":{"docs":{},"df":0,"e":{"docs":{},"df":0,"x":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{},"df":0,"_":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{},"df":0,"u":{"docs":{},"df":0,"s":{"docs":{},"df":0,"(":{"docs":{},"df":0,"0":{"docs":{"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}}}}},"o":{"docs":{},"df":0,"p":{"docs":{},"df":0,"s":{"docs":{},"df":0,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"a":{"docs":{},"df":0,"d":{"docs":{},"df":0,"d":{"docs":{"compiler-debugging.html#getting-a-backtrace-for-errors":{"tf":2.0}},"df":1}}}}}}}},"f":{"docs":{},"df":0,"m":{"docs":{},"df":0,"t":{"docs":{"compiler-debugging.html#expensive-operations-in-logs":{"tf":1.0}},"df":1,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"d":{"docs":{},"df":0,"i":{"docs":{},"df":0,"s":{"docs":{},"df":0,"p":{"docs":{},"df":0,"l":{"docs":{},"df":0,"a":{"docs":{},"df":0,"y":{"docs":{"rustdoc.html#from-clean-to-crate":{"tf":1.0}},"df":1}}}}}}},"f":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"m":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{},"df":0,"t":{"docs":{"rustdoc.html#from-clean-to-crate":{"tf":1.0}},"df":1}}}}}}}}}}}},"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"l":{"docs":{},"df":0,"l":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{},"df":0,"i":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"s":{"docs":{},"df":0,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"h":{"docs":{},"df":0,"a":{"docs":{},"df":0,"s":{"docs":{},"df":0,"h":{"docs":{},"df":0,"m":{"docs":{},"df":0,"a":{"docs":{},"df":0,"p":{"docs":{"hir.html#identifiers-in-the-hir":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}}}}}},"r":{"docs":{"type-inference.html#type-inference":{"tf":1.0},"compiletest.html#adding-a-new-header-command":{"tf":1.0},"traits/goals-and-clauses.html#domain-goals":{"tf":1.4142135623730952}},"df":3,"a":{"docs":{},"df":0,"i":{"docs":{},"df":0,"g":{"docs":{},"df":0,"h":{"docs":{},"df":0,"t":{"docs":{"rustdoc.html#other-tricks-up-its-sleeve":{"tf":1.0}},"df":1,"f":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"w":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"d":{"docs":{"variance.html#the-algorithm":{"tf":1.0},"rustdoc.html#from-crate-to-clean":{"tf":1.0},"mir/index.html#mir-data-types":{"tf":1.0},"traits/goals-and-clauses.html#goals-and-clauses-meta-structure":{"tf":1.0},"variance.html#variance-of-type-and-lifetime-parameters":{"tf":1.0},"type-inference.html#lexical-region-resolution":{"tf":1.0}},"df":6}}}}}}}}}}},"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"g":{"docs":{},"df":0,"i":{"docs":{"name-resolution.html#todo":{"tf":1.0},"conventions.html#how-to-structure-your-pr":{"tf":1.0},"traits/specialization.html#specialization":{"tf":1.0},"name-resolution.html#overall-strategy":{"tf":1.0}},"df":4}}}}},"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"g":{"docs":{"incrcomp-debugging.html#dumping-the-graph":{"tf":1.4142135623730952},"compiletest.html#adding-a-new-header-command":{"tf":1.4142135623730952},"appendix/stupid-stats.html#compilercalls":{"tf":1.0},"variance.html#trait-variance-and-vtable-resolution":{"tf":2.8284271247461905},"traits/chalk-overview.html#intermediate-representation-ir":{"tf":1.0},"diag.html#declaring-a-lint":{"tf":1.0},"rustdoc.html#hot-potato":{"tf":1.4142135623730952},"rustdoc.html#from-clean-to-crate":{"tf":1.0},"query.html#adding-a-new-kind-of-query":{"tf":1.0},"variance.html#variance-and-object-types":{"tf":1.7320508075688773}},"df":10,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"f":{"docs":{},"df":0,"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"m":{"docs":{},"df":0,"_":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"r":{"docs":{},"df":0,"(":{"docs":{},"df":0,"\"":{"docs":{},"df":0,"u":{"docs":{},"df":0,"n":{"docs":{},"df":0,"k":{"docs":{},"df":0,"n":{"docs":{},"df":0,"o":{"docs":{},"df":0,"w":{"docs":{},"df":0,"n":{"docs":{},"df":0,"_":{"docs":{},"df":0,"c":{"docs":{},"df":0,"r":{"docs":{"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}}}}},",":{"docs":{},"df":0,"i":{"docs":{},"df":0,"3":{"docs":{},"df":0,"2":{"docs":{"variance.html#trait-variance-and-vtable-resolution":{"tf":1.0}},"df":1}}}},">":{"docs":{},"df":0,"(":{"docs":{},"df":0,"v":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{"variance.html#trait-variance-and-vtable-resolution":{"tf":1.0}},"df":1}}}}}}}},"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"a":{"docs":{},"df":0,"d":{"docs":{"the-parser.html#the-parser":{"tf":1.4142135623730952},"appendix/code-index.html#appendix-d-code-index":{"tf":1.0}},"df":2}}}}}},"c":{"docs":{},"df":0,"t":{"docs":{"compiler-debugging.html#getting-logging-output":{"tf":1.0}},"df":1,"l":{"docs":{},"df":0,"i":{"docs":{"rustdoc.html#hot-potato":{"tf":1.0}},"df":1}}}},"p":{"docs":{"rustdoc.html#hot-potato":{"tf":3.0},"high-level-overview.html#the-main-stages-of-compilation":{"tf":1.0}},"df":2}},"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"g":{"docs":{"traits/specialization.html#specialization":{"tf":1.0}},"df":1,"e":{"docs":{},"df":0,"r":{"docs":{"appendix/glossary.html#appendix-c-glossary":{"tf":1.0},"traits/lowering-to-logic.html#type-checking-generic-functions-beyond-horn-clauses":{"tf":1.0}},"df":2}}}}},"e":{"docs":{},"df":0,"t":{"docs":{},"df":0,"c":{"docs":{},"df":0,"h":{"docs":{"rustdoc.html#from-soup-to-nuts":{"tf":1.0}},"df":1}}},"a":{"docs":{},"df":0,"m":{"docs":{"macro-expansion.html#example":{"tf":1.0},"macro-expansion.html#the-macro-parser":{"tf":2.0},"the-parser.html#the-parser":{"tf":2.0}},"df":3,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"g":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,">":{"docs":{},"df":0,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"m":{"docs":{},"df":0,"<":{"docs":{},"df":0,"'":{"docs":{},"df":0,"a":{"docs":{"traits/goals-and-clauses.html#domain-goals":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}}}}}}},"u":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{"method-lookup.html#candidate-assembly":{"tf":1.0},"traits/goals-and-clauses.html#coinductive-goals":{"tf":1.4142135623730952},"compiletest.html#adding-a-new-header-command":{"tf":2.0},"query.html#how-the-compiler-executes-a-query":{"tf":2.23606797749979},"traits/chalk-overview.html#parsing":{"tf":1.0},"traits/hrtb.html#basic-matching-and-skolemization-leaks":{"tf":2.0},"variance.html#variance-and-object-types":{"tf":1.0},"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":2.23606797749979},"diag.html#declaring-a-lint":{"tf":1.7320508075688773},"ty.html#the-tcx-and-how-it-uses-lifetimes":{"tf":1.0},"traits/chalk-overview.html#intermediate-representation-ir":{"tf":1.4142135623730952},"compiler-debugging.html#expensive-operations-in-logs":{"tf":1.0},"variance.html#constraints":{"tf":1.4142135623730952},"mir/passes.html#implementing-and-registering-a-pass":{"tf":1.4142135623730952},"type-checking.html#type-collection":{"tf":1.0},"the-parser.html#the-parser":{"tf":1.0},"mir/index.html#key-mir-vocabulary":{"tf":1.0},"mir/regionck.html#what-is-a-universe":{"tf":1.0},"traits/chalk-overview.html#lowering":{"tf":1.0},"traits/lowering-to-logic.html#rust-traits-and-logic":{"tf":1.0},"rustdoc.html#from-clean-to-crate":{"tf":1.0},"rustdoc.html#from-crate-to-clean":{"tf":1.4142135623730952},"appendix/code-index.html#appendix-d-code-index":{"tf":3.872983346207417},"ty.html#allocating-and-working-with-types":{"tf":1.4142135623730952},"mir/visitor.html#mir-visitor":{"tf":1.0},"appendix/glossary.html#appendix-c-glossary":{"tf":1.0},"query.html#adding-a-new-kind-of-query":{"tf":2.6457513110645909},"compiletest.html#introduction":{"tf":1.0},"appendix/stupid-stats.html#compilercontroller":{"tf":1.0},"variance.html#variance-of-type-and-lifetime-parameters":{"tf":1.0}},"df":30,"u":{"docs":{},"df":0,"r":{"docs":{"tests/adding.html#other-header-commands":{"tf":1.4142135623730952},"ty.html#the-tcx-and-how-it-uses-lifetimes":{"tf":1.0},"high-level-overview.html#crate-structure":{"tf":1.7320508075688773},"mir/index.html#key-mir-vocabulary":{"tf":1.0},"rustc-driver.html#a-note-on-lifetimes":{"tf":1.0},"tests/adding.html#naming-your-test":{"tf":1.4142135623730952},"conventions.html#how-to-structure-your-pr":{"tf":1.0},"hir.html#out-of-band-storage-and-the--crate--type":{"tf":1.7320508075688773},"diag.html#span":{"tf":1.0},"appendix/code-index.html#appendix-d-code-index":{"tf":1.7320508075688773},"appendix/background.html#what-is-a-control-flow-graph":{"tf":1.0},"conventions.html#formatting-and-the-tidy-script":{"tf":1.0},"appendix/glossary.html#appendix-c-glossary":{"tf":1.0},"mir/regionck.html#what-is-a-universe":{"tf":1.0},"name-resolution.html#namespaces":{"tf":1.0},"the-parser.html#the-parser":{"tf":1.4142135623730952},"ty.html#beyond-types-other-kinds-of-arena-allocated-data-structures":{"tf":1.4142135623730952},"mir/index.html#mir-data-types":{"tf":1.0},"name-resolution.html#scopes-and-ribs":{"tf":1.0},"ty.html#allocating-and-working-with-types":{"tf":1.0},"tests/adding.html#adding-new-tests":{"tf":1.0},"traits/goals-and-clauses.html#goals-and-clauses-meta-structure":{"tf":1.0},"traits/chalk-overview.html#blog-posts":{"tf":1.0},"traits/canonicalization.html#canonicalization":{"tf":1.0},"ty.html#the--ty--module-representing-types":{"tf":1.0}},"df":25}},"'":{"docs":{"compiletest.html#adding-a-new-header-command":{"tf":1.7320508075688773}},"df":1},"_":{"docs":{},"df":0,"s":{"docs":{},"df":0,"p":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"_":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"r":{"docs":{"diag.html#error-messages":{"tf":1.4142135623730952}},"df":1}}}}}}}}}}}}},"e":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{"mir/passes.html#stealing":{"tf":1.7320508075688773},"query.html#adding-a-new-kind-of-query":{"tf":1.4142135623730952}},"df":2,"<":{"docs":{},"df":0,"m":{"docs":{},"df":0,"i":{"docs":{},"df":0,"r":{"docs":{},"df":0,"<":{"docs":{},"df":0,"'":{"docs":{},"df":0,"t":{"docs":{},"df":0,"c":{"docs":{},"df":0,"x":{"docs":{"mir/passes.html#stealing":{"tf":1.0}},"df":1}}}}}}}}}}},"p":{"docs":{"method-lookup.html#steps":{"tf":1.7320508075688773},"the-parser.html#the-parser":{"tf":1.0},"traits/canonicalization.html#processing-the-canonicalized-query-result":{"tf":1.4142135623730952},"tests/intro.html#testing-on-emulators":{"tf":1.0},"how-to-build-and-run.html#running-xpy-and-building-a-stage1-compiler":{"tf":1.0},"miri.html#interpretation":{"tf":1.0},"method-lookup.html#candidate-assembly":{"tf":1.0},"tests/intro.html#testing-infrastructure":{"tf":1.0},"mir/borrowck.html#major-phases-of-the-borrow-checker":{"tf":1.0},"query.html#adding-a-new-kind-of-query":{"tf":1.0},"method-lookup.html#candidate-search":{"tf":2.23606797749979},"high-level-overview.html#the-main-stages-of-compilation":{"tf":1.4142135623730952},"traits/caching.html#an-example":{"tf":1.0},"conventions.html#how-to-structure-your-pr":{"tf":1.0},"rustdoc.html#the-walking-tour-of-rustdoc":{"tf":1.0},"rustdoc.html#hot-potato":{"tf":1.0}},"df":16},"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"i":{"docs":{},"df":0,"d":{"docs":{"appendix/glossary.html#appendix-c-glossary":{"tf":1.0}},"df":1}}}}},"y":{"docs":{},"df":0,"l":{"docs":{},"df":0,"e":{"docs":{"tests/intro.html#other-tests":{"tf":1.0},"query.html#cycles-between-queries":{"tf":1.0},"conventions.html#formatting-and-the-tidy-script":{"tf":1.4142135623730952},"traits/index.html#trait-solving-new-style":{"tf":1.4142135623730952},"rustc-driver.html#a-note-on-lifetimes":{"tf":1.4142135623730952},"traits/bibliography.html#bibliography":{"tf":1.0},"traits/resolution.html#trait-resolution-old-style":{"tf":1.0},"variance.html#variance-and-associated-types":{"tf":1.0}},"df":8}}},"i":{"docs":{"ty.html#allocating-and-working-with-types":{"tf":1.4142135623730952}},"df":1,"c":{"docs":{},"df":0,"k":{"docs":{"traits/specialization.html#specialization":{"tf":1.0}},"df":1}},"l":{"docs":{},"df":0,"l":{"docs":{"traits/canonical-queries.html#examples":{"tf":1.0},"traits/caching.html#where-clauses-and-the-local-vs-global-cache":{"tf":1.4142135623730952},"mir/borrowck.html#major-phases-of-the-borrow-checker":{"tf":1.0},"query.html#queries-demand-driven-compilation":{"tf":1.0},"hir.html#identifiers-in-the-hir":{"tf":1.0},"compiler-debugging.html#expensive-operations-in-logs":{"tf":1.0},"method-lookup.html#candidate-assembly":{"tf":1.0},"rustc-driver.html#a-note-on-lifetimes":{"tf":1.0},"traits/resolution.html#selection-during-translation":{"tf":1.0},"appendix/stupid-stats.html#overview-of-the-compilation-process":{"tf":1.0},"tests/adding.html#naming-your-test":{"tf":1.0},"traits/canonical-queries.html#the-traditional-interactive-prolog-query":{"tf":1.0},"mir/borrowck.html#mir-borrow-check":{"tf":1.0},"traits/index.html#trait-solving-new-style":{"tf":1.4142135623730952},"incremental-compilation.html#the-basic-algorithm":{"tf":1.4142135623730952},"name-resolution.html#todo":{"tf":1.0},"traits/associated-types.html#integration-with-unification":{"tf":1.4142135623730952},"compiler-debugging.html#logging-etiquette":{"tf":1.0},"name-resolution.html#namespaces":{"tf":1.0}},"df":19}}},"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"g":{"docs":{"appendix/glossary.html#appendix-c-glossary":{"tf":1.0},"rustc-driver.html#a-note-on-lifetimes":{"tf":1.0},"hir.html#out-of-band-storage-and-the--crate--type":{"tf":1.0},"mir/index.html#key-mir-vocabulary":{"tf":1.0}},"df":4,"e":{"docs":{},"df":0,"d":{"docs":{},"df":0,"e":{"docs":{},"df":0,"a":{"docs":{},"df":0,"d":{"docs":{},"df":0,"(":{"docs":{},"df":0,"_":{"docs":{},"df":0,"1":{"docs":{"mir/index.html#key-mir-vocabulary":{"tf":1.0}},"df":1}}}}}}},"l":{"docs":{"mir/index.html#key-mir-vocabulary":{"tf":1.0}},"df":1,"i":{"docs":{},"df":0,"v":{"docs":{},"df":0,"e":{"docs":{},"df":0,"(":{"docs":{},"df":0,"_":{"docs":{},"df":0,"3":{"docs":{"mir/index.html#key-mir-vocabulary":{"tf":1.0}},"df":1},"1":{"docs":{"mir/index.html#key-mir-vocabulary":{"tf":1.4142135623730952}},"df":1}}}}}}}}}},"e":{"docs":{"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.0},"appendix/glossary.html#appendix-c-glossary":{"tf":1.0},"traits/resolution.html#selection-during-translation":{"tf":1.0},"mir/index.html#key-mir-vocabulary":{"tf":1.0},"compiletest.html#adding-a-new-header-command":{"tf":1.0},"traits/canonical-queries.html#examples":{"tf":1.0},"incremental-compilation.html#the-query-dag":{"tf":1.0},"traits/resolution.html#major-concepts":{"tf":1.0},"tests/adding.html#naming-your-test":{"tf":1.0},"rustdoc.html#from-soup-to-nuts":{"tf":1.0},"mir/regionck.html#representing-the-values-of-a-region-variable":{"tf":1.0},"const-eval.html#constant-evaluation":{"tf":1.0},"miri.html#miri":{"tf":1.7320508075688773},"query.html#queries-demand-driven-compilation":{"tf":1.0},"type-inference.html#creating-an-inference-context":{"tf":1.0},"type-inference.html#inference-variables":{"tf":1.0},"mir/index.html#mir-data-types":{"tf":1.0},"tests/adding.html#other-header-commands":{"tf":1.0},"hir.html#out-of-band-storage-and-the--crate--type":{"tf":1.0}},"df":19}},"l":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{"mir/passes.html#stealing":{"tf":2.23606797749979}},"df":1}}},"p":{"docs":{"appendix/stupid-stats.html#the-driver-customisation-apis":{"tf":1.0},"appendix/stupid-stats.html#compilercontroller":{"tf":1.4142135623730952},"traits/canonical-queries.html#the-traditional-interactive-prolog-query":{"tf":1.4142135623730952},"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.7320508075688773},"appendix/stupid-stats.html#compilercalls":{"tf":1.0}},"df":5},"n":{"docs":{},"df":0,"e":{"docs":{"high-level-overview.html#crate-structure":{"tf":1.0}},"df":1}}},"u":{"docs":{},"df":0,"f":{"docs":{},"df":0,"f":{"docs":{"traits/canonical-queries.html#examples":{"tf":1.0},"traits/lowering-rules.html#lowering-traits":{"tf":1.4142135623730952},"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.0},"rustc-driver.html#the-rustc-driver":{"tf":1.0}},"df":4,".":{"docs":{},"df":0,"c":{"docs":{},"df":0,"l":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{"traits/goals-and-clauses.html#domain-goals":{"tf":1.0}},"df":1}}}}}}},"c":{"docs":{},"df":0,"t":{"docs":{"hir.html#out-of-band-storage-and-the--crate--type":{"tf":1.0}},"df":1},"k":{"docs":{"query.html#cycles-between-queries":{"tf":1.0}},"df":1}},"p":{"docs":{},"df":0,"i":{"docs":{},"df":0,"d":{"docs":{"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":2.449489742783178},"rustc-driver.html#the-rustc-driver":{"tf":1.0},"appendix/stupid-stats.html#appendix-a-a-tutorial-on-creating-a-drop-in-replacement-for-rustc":{"tf":1.4142135623730952}},"df":3,"c":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":2.0}},"df":1,"l":{"docs":{},"df":0,"s":{"docs":{},"df":0,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"n":{"docs":{},"df":0,"e":{"docs":{},"df":0,"w":{"docs":{"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.0}},"df":1}}}}}}}}}},"v":{"docs":{},"df":0,"i":{"docs":{},"df":0,"s":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.7320508075688773}},"df":1,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"g":{"docs":{},"df":0,"_":{"docs":{},"df":0,"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"u":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.0}},"df":1}}}}}}}}},"n":{"docs":{},"df":0,"e":{"docs":{},"df":0,"w":{"docs":{"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}},"a":{"docs":{},"df":0,"c":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{},"df":0,"f":{"docs":{},"df":0,"i":{"docs":{},"df":0,"c":{"docs":{"appendix/glossary.html#appendix-c-glossary":{"tf":1.0}},"df":1}}}}}},"d":{"docs":{"diag.html#suggestions":{"tf":2.0}},"df":1},"m":{"docs":{},"df":0,"e":{"docs":{"miri.html#miri":{"tf":1.0},"traits/specialization.html#specialization":{"tf":1.0},"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.0},"hir.html#identifiers-in-the-hir":{"tf":1.0},"incremental-compilation.html#the-try-mark-green-algorithm":{"tf":1.0},"type-inference.html#inference-variables":{"tf":1.4142135623730952},"traits/canonical-queries.html#examples":{"tf":1.4142135623730952},"appendix/stupid-stats.html#appendix-a-a-tutorial-on-creating-a-drop-in-replacement-for-rustc":{"tf":1.4142135623730952},"mir/borrowck.html#mir-borrow-check":{"tf":1.0},"high-level-overview.html#the-main-stages-of-compilation":{"tf":1.7320508075688773},"conventions.html#prefer-exhaustive-matches":{"tf":1.0},"traits/canonicalization.html#canonicalizing-the-query-result":{"tf":1.0},"mir/regionck.html#universes-and-skolemized-region-elements":{"tf":1.0},"ty.html#the-tcx-and-how-it-uses-lifetimes":{"tf":1.4142135623730952},"traits/index.html#trait-solving-new-style":{"tf":1.0},"ty.html#allocating-and-working-with-types":{"tf":1.4142135623730952},"traits/lowering-rules.html#lowering-where-clauses":{"tf":1.0},"mir/regionck.html#another-example":{"tf":1.0},"query.html#how-the-compiler-executes-a-query":{"tf":1.0},"tests/running.html#running-an-individual-test":{"tf":1.4142135623730952},"traits/chalk-overview.html#parsing":{"tf":1.0},"conventions.html#how-to-structure-your-pr":{"tf":1.0},"how-to-build-and-run.html#running-xpy-and-building-a-stage1-compiler":{"tf":1.0},"type-inference.html#region-constraints":{"tf":1.0},"incrcomp-debugging.html#tracking-down-incorrect-edges":{"tf":1.0},"macro-expansion.html#the-macro-parser":{"tf":1.7320508075688773},"traits/associated-types.html#skolemized-associated-types":{"tf":1.0},"mir/regionck.html#what-is-a-universe":{"tf":1.0},"tests/intro.html#compiletest-test-suites":{"tf":1.0},"incremental-compilation.html#the-basic-algorithm":{"tf":2.0},"type-inference.html#extracting-region-constraints":{"tf":1.0},"incremental-compilation.html#the-query-dag":{"tf":1.4142135623730952},"method-lookup.html#candidate-assembly":{"tf":1.0},"traits/chalk-overview.html#well-formedness-checks":{"tf":1.4142135623730952},"const-eval.html#constant-evaluation":{"tf":1.0},"traits/resolution.html#candidate-assembly":{"tf":1.4142135623730952},"type-checking.html#type-collection":{"tf":1.4142135623730952},"tests/adding.html#error-annotations":{"tf":1.0},"type-inference.html#enforcing-equality--subtyping":{"tf":1.4142135623730952},"traits/canonicalization.html#canonicalization":{"tf":1.4142135623730952},"name-resolution.html#scopes-and-ribs":{"tf":1.4142135623730952}},"df":41}},"l":{"docs":{},"df":0,"s":{"docs":{},"df":0,"a":{"docs":{"incremental-compilation.html#footnotes":{"tf":1.0}},"df":1}}},"u":{"docs":{},"df":0,"c":{"docs":{"mir/borrowck.html#mir-borrow-check":{"tf":1.0}},"df":1}},"w":{"docs":{"traits/canonical-queries.html#examples":{"tf":1.4142135623730952},"traits/associated-types.html#associated-type-projection-and-normalization":{"tf":1.0},"query.html#how-the-compiler-executes-a-query":{"tf":1.0}},"df":3},"n":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{},"df":0,"i":{"docs":{"how-to-build-and-run.html#running-xpy-and-building-a-stage1-compiler":{"tf":1.0}},"df":1}}}},"v":{"docs":{},"df":0,"e":{"docs":{"tests/adding.html#guide-to-the-ui-tests":{"tf":1.0},"incremental-compilation.html#improvements-to-the-basic-algorithm":{"tf":2.23606797749979},"appendix/stupid-stats.html#compilercontroller":{"tf":1.0},"incremental-compilation.html#the-basic-algorithm":{"tf":1.0},"appendix/stupid-stats.html#what-next":{"tf":1.4142135623730952},"how-to-build-and-run.html#running-xpy-and-building-a-stage1-compiler":{"tf":1.0},"incremental-compilation.html#the-try-mark-green-algorithm":{"tf":1.0}},"df":7}},"k":{"docs":{},"df":0,"e":{"docs":{"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.0},"traits/chalk-overview.html#parsing":{"tf":1.0}},"df":2}},"t":{"docs":{},"df":0,"i":{"docs":{},"df":0,"s":{"docs":{},"df":0,"f":{"docs":{},"df":0,"i":{"docs":{"compiler-debugging.html#getting-a-backtrace-for-errors":{"tf":1.4142135623730952},"traits/chalk-overview.html#lowering":{"tf":1.4142135623730952},"mir/regionck.html#back-to-our-example":{"tf":1.0},"variance.html#the-algorithm":{"tf":1.0},"traits/resolution.html#candidate-assembly":{"tf":1.7320508075688773},"variance.html#trait-variance-and-vtable-resolution":{"tf":1.4142135623730952}},"df":6}}}}},"y":{"docs":{"traits/canonical-queries.html#examples":{"tf":1.0},"mir/regionck.html#another-example":{"tf":1.0}},"df":2},"f":{"docs":{},"df":0,"e":{"docs":{"appendix/glossary.html#appendix-c-glossary":{"tf":1.7320508075688773},"traits/caching.html#where-clauses-and-the-local-vs-global-cache":{"tf":1.0},"variance.html#addendum-variance-on-traits":{"tf":1.0},"traits/lowering-to-logic.html#type-checking-generic-functions-beyond-horn-clauses":{"tf":1.0},"variance.html#variance-and-associated-types":{"tf":1.0},"ty.html#allocating-and-working-with-types":{"tf":1.0}},"df":6,"t":{"docs":{},"df":0,"i":{"docs":{"mir/index.html#the-mir-mid-level-ir":{"tf":1.0}},"df":1}}}}},"r":{"docs":{},"df":0,"c":{"docs":{"how-to-build-and-run.html#running-xpy-and-building-a-stage1-compiler":{"tf":1.7320508075688773},"high-level-overview.html#crate-structure":{"tf":1.0}},"df":2,"/":{"docs":{},"df":0,"e":{"docs":{},"df":0,"t":{"docs":{},"df":0,"c":{"docs":{},"df":0,"/":{"docs":{},"df":0,"h":{"docs":{},"df":0,"t":{"docs":{},"df":0,"m":{"docs":{},"df":0,"l":{"docs":{},"df":0,"d":{"docs":{},"df":0,"o":{"docs":{},"df":0,"c":{"docs":{},"df":0,"c":{"docs":{},"df":0,"k":{"docs":{},"df":0,".":{"docs":{},"df":0,"p":{"docs":{},"df":0,"i":{"docs":{"rustdoc.html#cheat-sheet":{"tf":1.0},"rustdoc.html#dotting-is-and-crossing-ts":{"tf":1.0}},"df":2}}}}}}}}}}}}}}}},"b":{"docs":{},"df":0,"o":{"docs":{},"df":0,"o":{"docs":{},"df":0,"t":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"p":{"docs":{},"df":0,"/":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,".":{"docs":{},"df":0,"r":{"docs":{"tests/intro.html#testing-on-emulators":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}},"m":{"docs":{},"df":0,"a":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,".":{"docs":{},"df":0,"r":{"docs":{},"df":0,"s":{"docs":{},"df":0,":":{"docs":{},"df":0,"2":{"docs":{},"df":0,":":{"docs":{},"df":0,"9":{"docs":{"mir/index.html#key-mir-vocabulary":{"tf":1.0}},"df":1}}}}}}}}}}},"l":{"docs":{},"df":0,"i":{"docs":{},"df":0,"b":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{"rustdoc.html#cheat-sheet":{"tf":1.0}},"df":1}}}},"r":{"docs":{},"df":0,"u":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"c":{"docs":{},"df":0,"_":{"docs":{},"df":0,"m":{"docs":{},"df":0,"i":{"docs":{},"df":0,"r":{"docs":{"mir/index.html#introduction-to-mir":{"tf":1.0}},"df":1,"/":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"p":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"t":{"docs":{},"df":0,"/":{"docs":{},"df":0,"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"_":{"docs":{},"df":0,"e":{"docs":{},"df":0,"v":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{},"df":0,".":{"docs":{},"df":0,"r":{"docs":{"const-eval.html#constant-evaluation":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"s":{"docs":{},"df":0,"/":{"docs":{},"df":0,"d":{"docs":{},"df":0,"i":{"docs":{},"df":0,"a":{"docs":{},"df":0,"g":{"docs":{},"df":0,"n":{"docs":{},"df":0,"o":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"i":{"docs":{},"df":0,"c":{"docs":{},"df":0,"_":{"docs":{},"df":0,"b":{"docs":{},"df":0,"u":{"docs":{},"df":0,"i":{"docs":{},"df":0,"l":{"docs":{},"df":0,"d":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,".":{"docs":{},"df":0,"r":{"docs":{"appendix/code-index.html#appendix-d-code-index":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}}}}}}}}}},"d":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{},"df":0,"v":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"/":{"docs":{},"df":0,"d":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{},"df":0,"v":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,".":{"docs":{},"df":0,"r":{"docs":{"appendix/code-index.html#appendix-d-code-index":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}},"/":{"docs":{},"df":0,"d":{"docs":{},"df":0,"e":{"docs":{},"df":0,"p":{"docs":{},"df":0,"_":{"docs":{},"df":0,"g":{"docs":{},"df":0,"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"p":{"docs":{},"df":0,"h":{"docs":{"incremental-compilation.html#the-query-dag":{"tf":1.0}},"df":1}}}}}}}}},"m":{"docs":{},"df":0,"i":{"docs":{},"df":0,"r":{"docs":{"mir/index.html#mir-data-types":{"tf":1.0},"mir/index.html#introduction-to-mir":{"tf":1.0}},"df":2}}},"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"s":{"docs":{},"df":0,"i":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"/":{"docs":{},"df":0,"m":{"docs":{},"df":0,"o":{"docs":{},"df":0,"d":{"docs":{},"df":0,".":{"docs":{},"df":0,"h":{"docs":{},"df":0,"t":{"docs":{},"df":0,"m":{"docs":{},"df":0,"l":{"docs":{"appendix/code-index.html#appendix-d-code-index":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}},"t":{"docs":{},"df":0,"y":{"docs":{},"df":0,"/":{"docs":{},"df":0,"t":{"docs":{},"df":0,"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{},"df":0,"_":{"docs":{},"df":0,"d":{"docs":{},"df":0,"e":{"docs":{},"df":0,"f":{"docs":{},"df":0,".":{"docs":{},"df":0,"r":{"docs":{"appendix/code-index.html#appendix-d-code-index":{"tf":1.0}},"df":1}}}}}}}}}}},"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"x":{"docs":{},"df":0,"t":{"docs":{},"df":0,".":{"docs":{},"df":0,"r":{"docs":{"appendix/code-index.html#appendix-d-code-index":{"tf":1.0}},"df":1}}}}}}}}},"m":{"docs":{},"df":0,"o":{"docs":{},"df":0,"d":{"docs":{},"df":0,".":{"docs":{},"df":0,"r":{"docs":{"appendix/code-index.html#appendix-d-code-index":{"tf":1.0}},"df":1}}}},"a":{"docs":{},"df":0,"p":{"docs":{},"df":0,"s":{"docs":{},"df":0,"/":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"a":{"docs":{},"df":0,"d":{"docs":{},"df":0,"m":{"docs":{},"df":0,"e":{"docs":{},"df":0,".":{"docs":{},"df":0,"m":{"docs":{},"df":0,"d":{"docs":{"high-level-overview.html#the-main-stages-of-compilation":{"tf":1.0}},"df":1}}}}}}}}},"m":{"docs":{},"df":0,"o":{"docs":{},"df":0,"d":{"docs":{},"df":0,".":{"docs":{},"df":0,"r":{"docs":{"query.html#adding-a-new-kind-of-query":{"tf":1.0}},"df":1}}}}}}}}}}}}},"h":{"docs":{},"df":0,"i":{"docs":{},"df":0,"r":{"docs":{"high-level-overview.html#the-main-stages-of-compilation":{"tf":1.0}},"df":1,"/":{"docs":{},"df":0,"m":{"docs":{},"df":0,"o":{"docs":{},"df":0,"d":{"docs":{},"df":0,".":{"docs":{},"df":0,"r":{"docs":{"appendix/code-index.html#appendix-d-code-index":{"tf":1.4142135623730952}},"df":1}}}}}}}}}}},"d":{"docs":{},"df":0,"o":{"docs":{},"df":0,"c":{"docs":{},"df":0,"/":{"docs":{},"df":0,"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,".":{"docs":{},"df":0,"r":{"docs":{"appendix/code-index.html#appendix-d-code-index":{"tf":1.0}},"df":1}}}}}}}}}}}}}},"s":{"docs":{},"df":0,"y":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{},"df":0,"a":{"docs":{},"df":0,"x":{"docs":{},"df":0,"/":{"docs":{},"df":0,"p":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"/":{"docs":{},"df":0,"l":{"docs":{},"df":0,"e":{"docs":{},"df":0,"x":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"/":{"docs":{},"df":0,"m":{"docs":{},"df":0,"o":{"docs":{},"df":0,"d":{"docs":{},"df":0,".":{"docs":{},"df":0,"r":{"docs":{"appendix/code-index.html#appendix-d-code-index":{"tf":1.0}},"df":1}}}}}}}}}}},"m":{"docs":{},"df":0,"o":{"docs":{},"df":0,"d":{"docs":{},"df":0,".":{"docs":{},"df":0,"r":{"docs":{"appendix/code-index.html#appendix-d-code-index":{"tf":1.0}},"df":1}}}}}}}}}}},"e":{"docs":{},"df":0,"x":{"docs":{},"df":0,"t":{"docs":{},"df":0,"/":{"docs":{},"df":0,"t":{"docs":{},"df":0,"t":{"docs":{"macro-expansion.html#macro-expansion":{"tf":1.0}},"df":1,"/":{"docs":{},"df":0,"m":{"docs":{},"df":0,"a":{"docs":{},"df":0,"c":{"docs":{},"df":0,"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"_":{"docs":{},"df":0,"p":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,".":{"docs":{},"df":0,"r":{"docs":{"macro-expansion.html#the-macro-parser":{"tf":1.4142135623730952}},"df":1}}}}}}}},"r":{"docs":{},"df":0,"u":{"docs":{},"df":0,"l":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,".":{"docs":{},"df":0,"r":{"docs":{"macro-expansion.html#the-macro-parser":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}}},"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"d":{"docs":{},"df":0,"e":{"docs":{},"df":0,"m":{"docs":{},"df":0,"a":{"docs":{},"df":0,"p":{"docs":{},"df":0,".":{"docs":{},"df":0,"r":{"docs":{"appendix/code-index.html#appendix-d-code-index":{"tf":1.0}},"df":1}}}}}}}}}},"_":{"docs":{},"df":0,"p":{"docs":{},"df":0,"o":{"docs":{},"df":0,"s":{"docs":{},"df":0,"/":{"docs":{},"df":0,"s":{"docs":{},"df":0,"p":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"_":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"d":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"g":{"docs":{},"df":0,".":{"docs":{},"df":0,"r":{"docs":{"appendix/code-index.html#appendix-d-code-index":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"df":0,"d":{"docs":{"how-to-build-and-run.html#other-xpy-commands":{"tf":1.0},"tests/intro.html#other-tests":{"tf":1.4142135623730952},"how-to-build-and-run.html#running-xpy-and-building-a-stage1-compiler":{"tf":1.4142135623730952},"rustdoc.html#cheat-sheet":{"tf":1.4142135623730952}},"df":4}}},"x":{"docs":{},"df":0,"x":{"docs":{},"df":0,"x":{"docs":{"high-level-overview.html#crate-structure":{"tf":1.0}},"df":1}}}}}},"c":{"docs":{},"df":0,"i":{"docs":{},"df":0,"/":{"docs":{},"df":0,"d":{"docs":{},"df":0,"o":{"docs":{},"df":0,"c":{"docs":{},"df":0,"k":{"docs":{"tests/intro.html#testing-with-docker-images":{"tf":1.0}},"df":1,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"/":{"docs":{},"df":0,"r":{"docs":{},"df":0,"u":{"docs":{},"df":0,"n":{"docs":{},"df":0,".":{"docs":{},"df":0,"s":{"docs":{},"df":0,"h":{"docs":{"tests/intro.html#testing-with-docker-images":{"tf":1.0},"tests/intro.html#testing-on-emulators":{"tf":1.0}},"df":2}}}}}}}}}}}}}}}},"d":{"docs":{},"df":0,"o":{"docs":{},"df":0,"c":{"docs":{"tests/intro.html#other-tests":{"tf":1.4142135623730952}},"df":1}}},"t":{"docs":{},"df":0,"o":{"docs":{},"df":0,"o":{"docs":{},"df":0,"l":{"docs":{},"df":0,"s":{"docs":{},"df":0,"/":{"docs":{},"df":0,"c":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"g":{"docs":{},"df":0,"o":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{"tests/intro.html#other-tests":{"tf":1.0}},"df":1}}}}}}}},"o":{"docs":{},"df":0,"m":{"docs":{},"df":0,"p":{"docs":{},"df":0,"i":{"docs":{},"df":0,"l":{"docs":{},"df":0,"e":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{"tests/intro.html#the-compiler-testing-framework":{"tf":1.0}},"df":1,"/":{"docs":{},"df":0,"s":{"docs":{},"df":0,"r":{"docs":{},"df":0,"c":{"docs":{},"df":0,"/":{"docs":{},"df":0,"r":{"docs":{},"df":0,"u":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,".":{"docs":{},"df":0,"r":{"docs":{"compiletest.html#implementing-the-behavior-change":{"tf":1.0}},"df":1}}}}}}}}},"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"m":{"docs":{},"df":0,"m":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,".":{"docs":{},"df":0,"r":{"docs":{"compiletest.html#introduction":{"tf":1.0},"compiletest.html#adding-a-new-header-command":{"tf":1.0}},"df":2}}}}}}}},"h":{"docs":{},"df":0,"e":{"docs":{},"df":0,"a":{"docs":{},"df":0,"d":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,".":{"docs":{},"df":0,"r":{"docs":{"compiletest.html#adding-a-new-header-command":{"tf":2.0}},"df":1}}}}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"df":0,"i":{"docs":{},"df":0,"d":{"docs":{},"df":0,"i":{"docs":{"conventions.html#formatting-and-the-tidy-script":{"tf":1.0},"tests/intro.html#other-tests":{"tf":1.0}},"df":2}}}},"r":{"docs":{},"df":0,"u":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"d":{"docs":{},"df":0,"o":{"docs":{},"df":0,"c":{"docs":{"rustdoc.html#the-walking-tour-of-rustdoc":{"tf":1.0},"rustdoc.html#cheat-sheet":{"tf":1.0},"rustdoc.html#dotting-is-and-crossing-ts":{"tf":1.0}},"df":3}}}}}}},"l":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"k":{"docs":{},"df":0,"c":{"docs":{},"df":0,"h":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"k":{"docs":{"tests/intro.html#other-tests":{"tf":1.0}},"df":1}}}}}}}}}}}}}},"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{"compiletest.html#adding-a-new-test-file":{"tf":1.4142135623730952},"tests/intro.html#compiletest-test-suites":{"tf":1.0}},"df":2,"/":{"docs":{},"df":0,"d":{"docs":{},"df":0,"e":{"docs":{},"df":0,"b":{"docs":{},"df":0,"u":{"docs":{},"df":0,"g":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"f":{"docs":{},"df":0,"o":{"docs":{"tests/running.html#running-a-subset-of-the-test-suites":{"tf":1.0}},"df":1}}}}}}}}},"{":{"docs":{},"df":0,"u":{"docs":{},"df":0,"i":{"docs":{},"df":0,",":{"docs":{},"df":0,"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"m":{"docs":{},"df":0,"p":{"docs":{},"df":0,"i":{"docs":{},"df":0,"l":{"docs":{"tests/running.html#running-a-subset-of-the-test-suites":{"tf":1.0}},"df":1}}}}}}}}}},"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"m":{"docs":{},"df":0,"p":{"docs":{},"df":0,"i":{"docs":{},"df":0,"l":{"docs":{"incrcomp-debugging.html#testing-the-dependency-graph":{"tf":1.0}},"df":1}}}}}},"u":{"docs":{},"df":0,"i":{"docs":{"tests/running.html#running-an-individual-test":{"tf":1.0},"tests/adding.html#editing-and-updating-the-reference-files":{"tf":1.4142135623730952}},"df":2,"/":{"docs":{},"df":0,"i":{"docs":{},"df":0,"s":{"docs":{},"df":0,"s":{"docs":{},"df":0,"u":{"docs":{"tests/running.html#running-an-individual-test":{"tf":1.0}},"df":1}}}},"c":{"docs":{},"df":0,"h":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{},"df":0,"k":{"docs":{},"df":0,"i":{"docs":{},"df":0,"f":{"docs":{},"df":0,"i":{"docs":{"traits/lowering-module.html#unit-tests":{"tf":1.0}},"df":1}}}}}}}},"r":{"docs":{},"df":0,"f":{"docs":{},"df":0,"c":{"docs":{},"df":0,"1":{"docs":{},"df":0,"2":{"docs":{},"df":0,"3":{"docs":{},"df":0,"4":{"docs":{"tests/adding.html#naming-your-test":{"tf":1.0}},"df":1}}}}}}}}}},"r":{"docs":{},"df":0,"u":{"docs":{},"df":0,"n":{"docs":{"how-to-build-and-run.html#other-xpy-commands":{"tf":1.0},"tests/adding.html#naming-your-test":{"tf":1.7320508075688773}},"df":2},"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"d":{"docs":{},"df":0,"o":{"docs":{},"df":0,"c":{"docs":{"rustdoc.html#cheat-sheet":{"tf":1.4142135623730952},"rustdoc.html#dotting-is-and-crossing-ts":{"tf":1.4142135623730952}},"df":2}}}}}}}}}}}}}}},"k":{"docs":{},"df":0,"i":{"docs":{},"df":0,"p":{"docs":{"mir/index.html#key-mir-vocabulary":{"tf":1.0},"incremental-compilation.html#the-try-mark-green-algorithm":{"tf":1.0},"tests/adding.html#ignoring-tests":{"tf":1.0},"traits/resolution.html#candidate-assembly":{"tf":1.0}},"df":4}},"o":{"docs":{},"df":0,"l":{"docs":{},"df":0,"e":{"docs":{},"df":0,"m":{"docs":{"mir/regionck.html#another-example":{"tf":1.0},"mir/regionck.html#final-example":{"tf":1.0},"mir/regionck.html#extending-the-universal-regions-check":{"tf":1.4142135623730952},"traits/associated-types.html#projection-equality":{"tf":1.4142135623730952},"mir/regionck.html#representing-the-values-of-a-region-variable":{"tf":1.7320508075688773},"mir/regionck.html#what-is-a-universe":{"tf":1.4142135623730952},"traits/hrtb.html#basic-matching-and-skolemization-leaks":{"tf":3.4641016151377546},"mir/regionck.html#skolemization-and-outlives-constraints":{"tf":1.7320508075688773},"traits/caching.html#an-example":{"tf":1.7320508075688773},"traits/hrtb.html#higher-ranked-trait-obligations":{"tf":1.7320508075688773},"traits/associated-types.html#skolemized-associated-types":{"tf":2.0},"mir/regionck.html#skolemization-and-universes":{"tf":1.0},"traits/goals-and-clauses.html#domain-goals":{"tf":1.0},"mir/regionck.html#universes-and-skolemized-region-elements":{"tf":1.7320508075688773},"mir/regionck.html#subtyping-and-skolemization":{"tf":1.7320508075688773},"appendix/glossary.html#appendix-c-glossary":{"tf":1.4142135623730952},"traits/associated-types.html#equality-and-associated-types":{"tf":1.0},"traits/lowering-rules.html#associated-type-declarations":{"tf":1.4142135623730952}},"df":18}},"(":{"docs":{},"df":0,"3":{"docs":{"mir/regionck.html#universes-and-skolemized-region-elements":{"tf":1.0}},"df":1},"2":{"docs":{"mir/regionck.html#universes-and-skolemized-region-elements":{"tf":1.0},"mir/regionck.html#final-example":{"tf":1.4142135623730952}},"df":2},"4":{"docs":{"mir/regionck.html#universes-and-skolemized-region-elements":{"tf":1.0}},"df":1},"u":{"docs":{"mir/regionck.html#extending-the-universal-regions-check":{"tf":1.0}},"df":1},"1":{"docs":{"mir/regionck.html#extending-the-universal-regions-check":{"tf":1.4142135623730952},"mir/regionck.html#universes-and-skolemized-region-elements":{"tf":1.0},"mir/regionck.html#final-example":{"tf":2.449489742783178},"mir/regionck.html#back-to-our-example":{"tf":1.7320508075688773}},"df":4},"n":{"docs":{"mir/regionck.html#universes-and-skolemized-region-elements":{"tf":1.4142135623730952}},"df":1},"x":{"docs":{"mir/regionck.html#skolemization-and-outlives-constraints":{"tf":2.23606797749979}},"df":1}}}}},"=":{"docs":{},"df":0,"&":{"docs":{},"df":0,"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"v":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"t":{"docs":{},"df":0,"t":{"docs":{},"df":0,"o":{"docs":{},"df":0,"<":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"r":{"docs":{"variance.html#variance-and-object-types":{"tf":1.0}},"df":1}}}}}}}}}}}}}}},"u":{"docs":{},"df":0,"s":{"docs":{},"df":0,"p":{"docs":{},"df":0,"i":{"docs":{},"df":0,"c":{"docs":{},"df":0,"i":{"docs":{"incrcomp-debugging.html#tracking-down-incorrect-edges":{"tf":1.0}},"df":1}}},"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{"traits/lowering-rules.html#transforming-the-lowered-where-clauses":{"tf":1.0}},"df":1}}}}},"m":{"docs":{},"df":0,"m":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{"query.html#adding-a-new-kind-of-query":{"tf":1.0},"mir/index.html#key-mir-vocabulary":{"tf":1.0},"tests/adding.html#comment-explaining-what-the-test-is-about":{"tf":1.0}},"df":3,"i":{"docs":{"tests/intro.html#compiletest-test-suites":{"tf":1.0},"appendix/stupid-stats.html#compilercontroller":{"tf":1.0}},"df":2,"s":{"docs":{"appendix/stupid-stats.html#compilercalls":{"tf":1.0}},"df":1}}}}}},"r":{"docs":{},"df":0,"f":{"docs":{},"df":0,"a":{"docs":{},"df":0,"c":{"docs":{"traits/goals-and-clauses.html#domain-goals":{"tf":1.0},"hir.html#the-hir":{"tf":1.0}},"df":2}}},"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"u":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{"param_env.html#parameter-environment":{"tf":1.0}},"df":1}}}}},"e":{"docs":{"incremental-compilation.html#the-query-dag":{"tf":1.0},"traits/canonical-queries.html#a-trait-query-in-rustc":{"tf":1.0},"traits/wf.html#well-formedness-checking":{"tf":1.0},"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.0},"compiletest.html#adding-a-new-header-command":{"tf":1.0},"traits/canonical-queries.html#examples":{"tf":1.0},"incrcomp-debugging.html#tracking-down-incorrect-edges":{"tf":1.0},"tests/intro.html#compiletest-test-suites":{"tf":1.7320508075688773},"compiler-debugging.html#getting-logging-output":{"tf":1.0},"rustdoc.html#dotting-is-and-crossing-ts":{"tf":1.0},"traits/resolution.html#selection":{"tf":1.0}},"df":11},"p":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{},"df":0,"s":{"docs":{"mir/regionck.html#another-example":{"tf":1.4142135623730952},"mir/regionck.html#what-is-a-universe":{"tf":1.0}},"df":2,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"g":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{"traits/wf.html#well-formedness-checking":{"tf":1.0},"incremental-compilation.html#incremental-compilation":{"tf":1.0}},"df":2}}}}}}}}}},"f":{"docs":{},"df":0,"f":{"docs":{},"df":0,"i":{"docs":{},"df":0,"c":{"docs":{"traits/canonicalization.html#executing-the-query":{"tf":1.0}},"df":1}}}},"g":{"docs":{},"df":0,"g":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{"tests/adding.html#other-header-commands":{"tf":1.0},"diag.html#error-messages":{"tf":2.0},"tests/adding.html#error-annotations":{"tf":1.4142135623730952},"diag.html#suggestions":{"tf":3.3166247903554},"diag.html#declaring-a-lint":{"tf":1.4142135623730952},"name-resolution.html#name-resolution":{"tf":1.0}},"df":6,"i":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"_":{"docs":{},"df":0,"s":{"docs":{},"df":0,"p":{"docs":{"diag.html#suggestions":{"tf":1.0}},"df":1}}}}}}}}}}},"c":{"docs":{},"df":0,"h":{"docs":{"high-level-overview.html#the-main-stages-of-compilation":{"tf":1.4142135623730952},"tests/intro.html#testing-on-emulators":{"tf":1.4142135623730952},"tests/intro.html#other-tests":{"tf":1.7320508075688773},"incremental-compilation.html#the-query-dag":{"tf":1.0},"how-to-build-and-run.html#create-a-configtoml":{"tf":1.0},"mir/index.html#key-mir-vocabulary":{"tf":1.0},"rustc-driver.html#a-note-on-lifetimes":{"tf":1.0},"tests/adding.html#normalization":{"tf":1.0},"appendix/glossary.html#appendix-c-glossary":{"tf":1.0},"ty.html#the-tcx-and-how-it-uses-lifetimes":{"tf":1.0},"mir/index.html#the-mir-mid-level-ir":{"tf":1.0},"rustc-driver.html#the-rustc-driver":{"tf":1.0},"method-lookup.html#method-lookup":{"tf":1.0},"type-inference.html#a-note-on-terminology":{"tf":1.0},"method-lookup.html#candidate-assembly":{"tf":1.4142135623730952},"conventions.html#using-crates-from-cratesio":{"tf":1.0},"hir.html#hir-bodies":{"tf":1.0},"type-inference.html#region-constraints":{"tf":1.0},"traits/hrtb.html#higher-ranked-trait-bounds":{"tf":1.0},"compiletest.html#adding-a-new-header-command":{"tf":1.0},"type-inference.html#inference-variables":{"tf":1.0},"hir.html#identifiers-in-the-hir":{"tf":1.0},"appendix/code-index.html#appendix-d-code-index":{"tf":1.0},"traits/lowering-to-logic.html#rust-traits-and-logic":{"tf":1.0},"query.html#adding-a-new-kind-of-query":{"tf":1.0},"macro-expansion.html#example":{"tf":1.4142135623730952},"diag.html#error-messages":{"tf":1.4142135623730952},"traits/lowering-rules.html#trait-header":{"tf":1.0},"mir/regionck.html#what-is-a-universe":{"tf":1.0},"tests/adding.html#other-header-commands":{"tf":1.0},"macro-expansion.html#the-macro-parser":{"tf":1.4142135623730952}},"df":31},"c":{"docs":{},"df":0,"e":{"docs":{"traits/resolution.html#candidate-assembly":{"tf":1.0},"mir/regionck.html#another-example":{"tf":1.0},"mir/passes.html#stealing":{"tf":1.0},"query.html#cycles-between-queries":{"tf":1.0},"traits/caching.html#an-example":{"tf":1.0},"traits/specialization.html#specialization":{"tf":1.0},"tests/adding.html#tests-that-do-not-result-in-compile-errors":{"tf":1.7320508075688773},"traits/associated-types.html#integration-with-unification":{"tf":1.0},"traits/lowering-rules.html#associated-type-declarations":{"tf":1.7320508075688773},"traits/resolution.html#major-concepts":{"tf":1.0},"type-inference.html#enforcing-equality--subtyping":{"tf":1.0},"traits/lowering-to-logic.html#type-checking-normal-functions":{"tf":1.0},"compiletest.html#introduction":{"tf":1.0},"traits/hrtb.html#basic-matching-and-skolemization-leaks":{"tf":1.0},"tests/adding.html#other-header-commands":{"tf":1.0},"compiletest.html#header-commands":{"tf":1.0}},"df":16,"s":{"docs":{},"df":0,"s":{"docs":{"type-inference.html#enforcing-equality--subtyping":{"tf":1.0},"traits/associated-types.html#integration-with-unification":{"tf":1.0},"macro-expansion.html#the-macro-parser":{"tf":1.0},"compiletest.html#introduction":{"tf":1.0},"traits/specialization.html#specialization":{"tf":1.0},"type-inference.html#trying-equality":{"tf":1.0},"traits/resolution.html#overview":{"tf":1.0},"miri.html#miri":{"tf":1.0},"tests/running.html#running-tests":{"tf":1.0},"name-resolution.html#name-resolution":{"tf":1.0}},"df":10,"o":{"docs":{},"df":0,"r":{"docs":{"mir/passes.html#stealing":{"tf":1.0},"mir/visitor.html#mir-visitor":{"tf":1.0},"mir/index.html#key-mir-vocabulary":{"tf":1.7320508075688773}},"df":3}},"f":{"docs":{},"df":0,"u":{"docs":{},"df":0,"l":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{"tests/intro.html#compiletest-test-suites":{"tf":1.0},"how-to-build-and-run.html#creating-a-rustup-toolchain":{"tf":1.0},"compiletest.html#adding-a-new-header-command":{"tf":1.7320508075688773},"compiletest.html#introduction":{"tf":1.0},"conventions.html#how-to-structure-your-pr":{"tf":1.0}},"df":5}}}}}}}},"s":{"docs":{},"df":0,"s":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{"mir/index.html#key-mir-vocabulary":{"tf":1.0}},"df":1}}}}}},"p":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"tests/adding.html#comment-explaining-what-the-test-is-about":{"tf":1.0}},"df":1,"p":{"docs":{},"df":0,"o":{"docs":{},"df":0,"w":{"docs":{"traits/goals-and-clauses.html#goals-and-clauses":{"tf":1.0}},"df":1}}},"_":{"docs":{},"df":0,"f":{"docs":{},"df":0,"o":{"docs":{},"df":0,"o":{"docs":{"mir/visitor.html#mir-visitor":{"tf":1.4142135623730952}},"df":1}}}},"t":{"docs":{},"df":0,"y":{"docs":{},"df":0,"p":{"docs":{"mir/regionck.html#subtyping-and-skolemization":{"tf":1.0},"mir/regionck.html#another-example":{"tf":1.0},"mir/regionck.html#final-example":{"tf":1.0}},"df":3}},"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{"traits/lowering-rules.html#trait-header":{"tf":1.0}},"df":1}}}}}}},"p":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{"mir/index.html#key-mir-vocabulary":{"tf":1.0},"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.4142135623730952},"traits/canonical-queries.html#a-trait-query-in-rustc":{"tf":1.0},"traits/canonical-queries.html#the-traditional-interactive-prolog-query":{"tf":1.0},"query.html#adding-a-new-kind-of-query":{"tf":1.0},"variance.html#trait-variance-and-vtable-resolution":{"tf":1.0}},"df":6},"e":{"docs":{},"df":0,"m":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{"rustdoc.html#from-soup-to-nuts":{"tf":1.0},"rustdoc.html#cheat-sheet":{"tf":1.4142135623730952},"rustdoc.html#dotting-is-and-crossing-ts":{"tf":1.0}},"df":3}}}}}}}}},"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"t":{"docs":{"tests/adding.html#naming-your-test":{"tf":1.0},"compiletest.html#introduction":{"tf":1.0},"appendix/glossary.html#appendix-c-glossary":{"tf":1.4142135623730952},"traits/lowering-to-logic.html#type-checking-generic-functions-beyond-horn-clauses":{"tf":1.4142135623730952},"type-inference.html#inference-variables":{"tf":1.0},"tests/adding.html#revisions":{"tf":1.0},"traits/chalk-overview.html#parsing":{"tf":1.0},"type-inference.html#snapshots":{"tf":1.0},"tests/adding.html#normalization":{"tf":1.0},"traits/lowering-to-logic.html#rust-traits-and-logic":{"tf":1.0},"tests/intro.html#testing-on-emulators":{"tf":1.0}},"df":11}},"s":{"docs":{"traits/canonical-queries.html#examples":{"tf":1.0},"query.html#adding-a-new-kind-of-query":{"tf":1.0},"tests/adding.html#other-header-commands":{"tf":1.7320508075688773},"traits/resolution.html#confirmation":{"tf":1.0},"traits/hrtb.html#basic-matching-and-skolemization-leaks":{"tf":1.0},"variance.html#trait-variance-and-vtable-resolution":{"tf":1.0},"traits/caching.html#an-example":{"tf":1.0},"traits/lowering-to-logic.html#rust-traits-and-logic":{"tf":1.0}},"df":8}}}},"b":{"docs":{"mir/index.html#mir-data-types":{"tf":1.0},"appendix/glossary.html#appendix-c-glossary":{"tf":1.0}},"df":2,"t":{"docs":{},"df":0,"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{"traits/resolution.html#candidate-assembly":{"tf":1.0}},"df":1}},"c":{"docs":{},"df":0,"t":{"docs":{"miri.html#miri":{"tf":1.4142135623730952}},"df":1}}}},"y":{"docs":{},"df":0,"p":{"docs":{"variance.html#variance-and-object-types":{"tf":1.4142135623730952},"type-inference.html#type-inference":{"tf":1.0},"traits/resolution.html#selection":{"tf":1.0},"mir/regionck.html#another-example":{"tf":1.0},"variance.html#variance-of-type-and-lifetime-parameters":{"tf":1.0},"type-inference.html#trying-equality":{"tf":1.0},"type-inference.html#inference-variables":{"tf":1.0},"appendix/background.html#what-is-co--and-contra-variance":{"tf":1.0},"type-inference.html#extracting-region-constraints":{"tf":1.0},"type-inference.html#enforcing-equality--subtyping":{"tf":1.4142135623730952},"appendix/glossary.html#appendix-c-glossary":{"tf":2.0},"mir/regionck.html#mir-based-region-checking-nll":{"tf":1.0},"variance.html#trait-variance-and-vtable-resolution":{"tf":1.0},"variance.html#variance-and-associated-types":{"tf":1.4142135623730952},"type-inference.html#subtyping-obligations":{"tf":2.0},"mir/regionck.html#subtyping-and-skolemization":{"tf":2.449489742783178},"traits/hrtb.html#basic-matching-and-skolemization-leaks":{"tf":1.4142135623730952},"mir/regionck.html#final-example":{"tf":1.4142135623730952},"mir/regionck.html#back-to-our-example":{"tf":1.0}},"df":19,"e":{"docs":{},"df":0,"(":{"docs":{},"df":0,"?":{"docs":{},"df":0,"t":{"docs":{"type-inference.html#subtyping-obligations":{"tf":1.0}},"df":1}}}}}},"l":{"docs":{"traits/canonicalization.html#canonicalizing-the-query-result":{"tf":1.0},"variance.html#variance-of-type-and-lifetime-parameters":{"tf":1.0},"traits/hrtb.html#higher-ranked-trait-bounds":{"tf":1.0},"traits/wf.html#well-formedness-checking":{"tf":1.0},"traits/caching.html#where-clauses-and-the-local-vs-global-cache":{"tf":1.0},"traits/caching.html#caching-and-subtle-considerations-therewith":{"tf":1.0}},"df":6}},"j":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{"mir/index.html#key-mir-vocabulary":{"tf":1.0},"method-lookup.html#candidate-assembly":{"tf":1.0}},"df":2}}}},"c":{"docs":{},"df":0,"h":{"docs":{},"df":0,"a":{"docs":{},"df":0,"p":{"docs":{},"df":0,"t":{"docs":{"traits/resolution.html#trait-resolution-old-style":{"tf":1.0}},"df":1}}}},"o":{"docs":{},"df":0,"m":{"docs":{},"df":0,"m":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{"tests/adding.html#editing-and-updating-the-reference-files":{"tf":1.0}},"df":1}}}}}}},"d":{"docs":{},"df":0,"i":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{"tests/adding.html#naming-your-test":{"tf":1.4142135623730952},"tests/intro.html#compiletest-test-suites":{"tf":1.0}},"df":2}}}}}}}}},"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"g":{"docs":{},"df":0,"i":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{"type-inference.html#extracting-region-constraints":{"tf":1.0},"traits/resolution.html#selection":{"tf":1.0},"type-inference.html#region-constraints":{"tf":1.0}},"df":3}}}}},"o":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{"traits/resolution.html#candidate-assembly":{"tf":1.0}},"df":1}}}}}},"g":{"docs":{},"df":0,"o":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{"traits/associated-types.html#integration-with-unification":{"tf":1.4142135623730952}},"df":1}}}},"s":{"docs":{},"df":0,"t":{"docs":{"appendix/glossary.html#appendix-c-glossary":{"tf":1.0},"ty.html#beyond-types-other-kinds-of-arena-allocated-data-structures":{"tf":1.4142135623730952}},"df":2,"i":{"docs":{},"df":0,"t":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{"appendix/glossary.html#appendix-c-glossary":{"tf":1.0},"traits/resolution.html#selection-during-translation":{"tf":1.0},"traits/canonical-queries.html#the-traditional-interactive-prolog-query":{"tf":1.0},"ty.html#beyond-types-other-kinds-of-arena-allocated-data-structures":{"tf":1.0},"traits/canonicalization.html#canonicalizing-the-query-result":{"tf":1.4142135623730952},"traits/canonicalization.html#executing-the-query":{"tf":1.7320508075688773},"traits/hrtb.html#higher-ranked-trait-obligations":{"tf":1.4142135623730952}},"df":7}}}},"u":{"docs":{},"df":0,"t":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{"traits/canonicalization.html#canonicalizing-the-query-result":{"tf":1.0}},"df":1}}}}},"u":{"docs":{},"df":0,"m":{"docs":{"tests/adding.html#what-kind-of-test-should-i-add":{"tf":1.0},"method-lookup.html#candidate-assembly":{"tf":1.0}},"df":2}},"e":{"docs":{},"df":0,"q":{"docs":{},"df":0,"u":{"docs":{"miri.html#interpretation":{"tf":1.0},"high-level-overview.html#the-main-stages-of-compilation":{"tf":1.0},"hir.html#identifiers-in-the-hir":{"tf":1.0}},"df":3}},"t":{"docs":{"tests/intro.html#testing-infrastructure":{"tf":1.0},"tests/running.html#running-a-subset-of-the-test-suites":{"tf":1.0},"how-to-build-and-run.html#running-xpy-and-building-a-stage1-compiler":{"tf":1.0}},"df":3},"c":{"docs":{},"df":0,"t":{"docs":{"traits/canonical-queries.html#canonical-queries":{"tf":1.0}},"df":1}}}},"f":{"docs":{},"df":0,"o":{"docs":{},"df":0,"l":{"docs":{},"df":0,"d":{"docs":{"compiletest.html#adding-a-new-test-file":{"tf":1.0}},"df":1}}}},"q":{"docs":{},"df":0,"u":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"y":{"docs":{},"df":0,"1":{"docs":{"incremental-compilation.html#the-query-dag":{"tf":1.7320508075688773}},"df":1},"2":{"docs":{"incremental-compilation.html#the-query-dag":{"tf":1.7320508075688773}},"df":1},"3":{"docs":{"incremental-compilation.html#the-query-dag":{"tf":1.0}},"df":1}},"i":{"docs":{"incremental-compilation.html#improvements-to-the-basic-algorithm":{"tf":1.0},"incremental-compilation.html#the-query-dag":{"tf":1.0},"query.html#queries-demand-driven-compilation":{"tf":1.0}},"df":3}}}}}},"i":{"docs":{},"df":0,"t":{"docs":{"mir/passes.html#mir-passes":{"tf":1.7320508075688773},"tests/intro.html#testing-infrastructure":{"tf":1.0},"compiletest.html#introduction":{"tf":2.0},"mir/passes.html#stealing":{"tf":1.7320508075688773},"appendix/stupid-stats.html#what-next":{"tf":1.0},"how-to-build-and-run.html#creating-a-rustup-toolchain":{"tf":1.0},"rustdoc.html#dotting-is-and-crossing-ts":{"tf":1.0},"appendix/glossary.html#appendix-c-glossary":{"tf":1.7320508075688773},"how-to-build-and-run.html#other-xpy-commands":{"tf":1.0},"tests/adding.html#what-kind-of-test-should-i-add":{"tf":1.4142135623730952},"tests/running.html#running-a-subset-of-the-test-suites":{"tf":2.23606797749979},"rustdoc.html#the-walking-tour-of-rustdoc":{"tf":1.0},"tests/running.html#running-tests":{"tf":1.0},"tests/intro.html#compiletest-test-suites":{"tf":2.0},"high-level-overview.html#the-main-stages-of-compilation":{"tf":1.0},"tests/adding.html#adding-new-tests":{"tf":1.4142135623730952},"tests/adding.html#naming-your-test":{"tf":1.0}},"df":17,"a":{"docs":{},"df":0,"b":{"docs":{},"df":0,"l":{"docs":{"tests/adding.html#naming-your-test":{"tf":1.0},"conventions.html#using-crates-from-cratesio":{"tf":1.0},"appendix/glossary.html#appendix-c-glossary":{"tf":1.0},"high-level-overview.html#the-main-stages-of-compilation":{"tf":1.0},"traits/goals-and-clauses.html#domain-goals":{"tf":1.0},"query.html#how-the-compiler-executes-a-query":{"tf":1.0},"traits/canonicalization.html#executing-the-query":{"tf":1.0}},"df":7}}}}}},"n":{"docs":{},"df":0,"a":{"docs":{},"df":0,"p":{"docs":{},"df":0,"s":{"docs":{},"df":0,"h":{"docs":{},"df":0,"o":{"docs":{},"df":0,"t":{"docs":{"type-inference.html#snapshots":{"tf":2.0}},"df":1}}}}},"k":{"docs":{},"df":0,"e":{"docs":{"query.html#adding-a-new-kind-of-query":{"tf":1.0},"compiletest.html#adding-a-new-header-command":{"tf":1.0}},"df":2}}},"i":{"docs":{},"df":0,"p":{"docs":{"diag.html#suggestions":{"tf":1.0},"diag.html#error-messages":{"tf":1.0}},"df":2,"p":{"docs":{},"df":0,"e":{"docs":{},"df":0,"t":{"docs":{"tests/adding.html#naming-your-test":{"tf":1.0},"macro-expansion.html#example":{"tf":1.0},"diag.html#span":{"tf":1.0},"diag.html#error-messages":{"tf":1.4142135623730952}},"df":4}}}}}}},"p":{"docs":{"appendix/glossary.html#appendix-c-glossary":{"tf":1.0},"traits/associated-types.html#integration-with-unification":{"tf":1.0},"mir/regionck.html#back-to-our-example":{"tf":1.7320508075688773},"mir/regionck.html#skolemization-and-outlives-constraints":{"tf":1.7320508075688773}},"df":4,"d":{"docs":{},"df":0,"f":{"docs":{"compiler-debugging.html#formatting-graphviz-output-dot-files":{"tf":1.4142135623730952}},"df":1}},"0":{"docs":{"traits/lowering-rules.html#associated-type-declarations":{"tf":1.0},"traits/lowering-rules.html#associated-type-values":{"tf":1.0},"traits/lowering-rules.html#lowering-traits":{"tf":1.0},"traits/goals-and-clauses.html#domain-goals":{"tf":1.4142135623730952}},"df":4,".":{"docs":{},"df":0,".":{"docs":{},"df":0,"p":{"docs":{},"df":0,"m":{"docs":{"traits/goals-and-clauses.html#domain-goals":{"tf":1.0}},"df":1},"n":{"docs":{"traits/goals-and-clauses.html#domain-goals":{"tf":1.0}},"df":1}}}}},"i":{"docs":{"traits/lowering-rules.html#notation":{"tf":1.0}},"df":1,"c":{"docs":{},"df":0,"k":{"docs":{"method-lookup.html#method-lookup":{"tf":1.0},"method-lookup.html#candidate-search":{"tf":1.7320508075688773}},"df":2,"_":{"docs":{},"df":0,"c":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{},"df":0,"i":{"docs":{},"df":0,"d":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"_":{"docs":{},"df":0,"c":{"docs":{},"df":0,"a":{"docs":{},"df":0,"c":{"docs":{},"df":0,"h":{"docs":{"traits/caching.html#where-clauses-and-the-local-vs-global-cache":{"tf":1.4142135623730952}},"df":1}}}}}}}}}}}}}}}}},"n":{"docs":{"compiler-debugging.html#logging-etiquette":{"tf":1.0}},"df":1},"e":{"docs":{},"df":0,"c":{"docs":{"rustc-driver.html#a-note-on-lifetimes":{"tf":1.0},"rustdoc.html#from-clean-to-crate":{"tf":1.0},"tests/adding.html#naming-your-test":{"tf":1.0}},"df":3}},"p":{"docs":{},"df":0,"e":{"docs":{"compiler-debugging.html#debugging-llvm":{"tf":1.0},"compiler-debugging.html#getting-logging-output":{"tf":1.0}},"df":2,"l":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{"compiler-debugging.html#debugging-llvm":{"tf":1.7320508075688773},"traits/chalk-overview.html#testing":{"tf":1.0},"mir/passes.html#stealing":{"tf":1.4142135623730952}},"df":3}}}}}},"2":{"docs":{"traits/associated-types.html#integration-with-unification":{"tf":1.0}},"df":1},"a":{"docs":{},"df":0,"p":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"traits/bibliography.html#bibliography":{"tf":1.7320508075688773},"traits/goals-and-clauses.html#goals-and-clauses-meta-structure":{"tf":1.0},"traits/hrtb.html#basic-matching-and-skolemization-leaks":{"tf":1.4142135623730952},"variance.html#variance-of-type-and-lifetime-parameters":{"tf":1.7320508075688773},"variance.html#the-algorithm":{"tf":1.0}},"df":5}}},"i":{"docs":{},"df":0,"r":{"docs":{"mir/regionck.html#representing-the-values-of-a-region-variable":{"tf":1.0},"macro-expansion.html#example":{"tf":1.0},"hir.html#out-of-band-storage-and-the--crate--type":{"tf":1.0},"traits/resolution.html#major-concepts":{"tf":1.0},"miri.html#miri":{"tf":1.0}},"df":5,"w":{"docs":{},"df":0,"i":{"docs":{},"df":0,"s":{"docs":{"variance.html#variance-and-object-types":{"tf":1.0}},"df":1}}}},"n":{"docs":{"conventions.html#how-to-structure-your-pr":{"tf":1.0}},"df":1}},"c":{"docs":{},"df":0,"k":{"docs":{"appendix/glossary.html#appendix-c-glossary":{"tf":1.0}},"df":1,"a":{"docs":{},"df":0,"g":{"docs":{"tests/intro.html#other-tests":{"tf":1.7320508075688773}},"df":1}}}},"g":{"docs":{},"df":0,"e":{"docs":{"traits/lowering-to-logic.html#source":{"tf":1.0},"rustdoc.html#from-soup-to-nuts":{"tf":1.0},"rustdoc.html#cheat-sheet":{"tf":1.0},"rustdoc.html#from-crate-to-clean":{"tf":1.7320508075688773},"rustdoc.html#the-walking-tour-of-rustdoc":{"tf":1.0},"rustdoc.html#from-clean-to-crate":{"tf":1.7320508075688773}},"df":6}},"t":{"docs":{},"df":0,"h":{"docs":{"type-inference.html#snapshots":{"tf":1.0},"type-checking.html#type-collection":{"tf":1.0},"tests/adding.html#guide-to-the-ui-tests":{"tf":1.0},"rustdoc.html#dotting-is-and-crossing-ts":{"tf":1.0},"hir.html#identifiers-in-the-hir":{"tf":1.4142135623730952},"incremental-compilation.html#the-query-dag":{"tf":1.0},"appendix/glossary.html#appendix-c-glossary":{"tf":1.0},"incrcomp-debugging.html#testing-the-dependency-graph":{"tf":2.23606797749979},"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":2.0},"incrcomp-debugging.html#tracking-down-incorrect-edges":{"tf":1.7320508075688773},"high-level-overview.html#the-main-stages-of-compilation":{"tf":1.4142135623730952},"mir/index.html#mir-data-types":{"tf":1.0},"appendix/background.html#what-is-a-control-flow-graph":{"tf":1.0},"mir/passes.html#seeing-how-the-mir-changes-as-the-compiler-executes":{"tf":1.0}},"df":14,"/":{"docs":{},"df":0,"t":{"docs":{},"df":0,"o":{"docs":{},"df":0,"/":{"docs":{},"df":0,"b":{"docs":{},"df":0,"u":{"docs":{},"df":0,"i":{"docs":{},"df":0,"l":{"docs":{},"df":0,"d":{"docs":{},"df":0,"/":{"docs":{},"df":0,"$":{"docs":{},"df":0,"t":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"g":{"docs":{},"df":0,"e":{"docs":{},"df":0,"t":{"docs":{},"df":0,"/":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"a":{"docs":{},"df":0,"g":{"docs":{},"df":0,"e":{"docs":{},"df":0,"1":{"docs":{"rustdoc.html#cheat-sheet":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}}}}}}},"_":{"docs":{},"df":0,"t":{"docs":{},"df":0,"o":{"docs":{},"df":0,"_":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"g":{"docs":{},"df":0,"(":{"docs":{},"df":0,"p":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{},"df":0,"h":{"docs":{"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}},"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"n":{"docs":{"macro-expansion.html#the-macro-parser":{"tf":2.23606797749979},"tests/adding.html#revisions":{"tf":1.0},"type-inference.html#snapshots":{"tf":1.0},"traits/goals-and-clauses.html#coinductive-goals":{"tf":1.0},"compiletest.html#adding-a-new-header-command":{"tf":1.0},"const-eval.html#constant-evaluation":{"tf":1.4142135623730952}},"df":6}}}}},"r":{"docs":{},"df":0,"t":{"docs":{"incremental-compilation.html#the-basic-algorithm":{"tf":1.0},"traits/specialization.html#specialization":{"tf":1.0},"appendix/stupid-stats.html#what-next":{"tf":1.0},"traits/lowering-to-logic.html#rust-traits-and-logic":{"tf":1.0},"mir/passes.html#implementing-and-registering-a-pass":{"tf":1.0},"hir.html#the-hir":{"tf":1.0},"traits/canonical-queries.html#canonical-queries":{"tf":1.0},"traits/canonical-queries.html#a-trait-query-in-rustc":{"tf":1.0},"name-resolution.html#todo":{"tf":1.0},"mir/passes.html#seeing-how-the-mir-changes-as-the-compiler-executes":{"tf":1.4142135623730952},"appendix/stupid-stats.html#appendix-a-a-tutorial-on-creating-a-drop-in-replacement-for-rustc":{"tf":1.0},"tests/intro.html#compiletest-test-suites":{"tf":1.4142135623730952},"name-resolution.html#scopes-and-ribs":{"tf":1.0},"traits/chalk-overview.html#well-formedness-checks":{"tf":1.0},"rustdoc.html#from-clean-to-crate":{"tf":1.4142135623730952},"traits/canonical-queries.html#examples":{"tf":1.0},"tests/adding.html#guide-to-the-ui-tests":{"tf":1.0},"traits/associated-types.html#projection-equality":{"tf":1.0},"miri.html#miri":{"tf":1.4142135623730952},"traits/resolution.html#overview":{"tf":1.0},"appendix/glossary.html#appendix-c-glossary":{"tf":1.0},"appendix/stupid-stats.html#overview-of-the-compilation-process":{"tf":1.4142135623730952},"compiler-debugging.html#getting-a-backtrace-for-errors":{"tf":1.4142135623730952},"traits/associated-types.html#equality-and-associated-types":{"tf":1.0},"traits/chalk-overview.html#blog-posts":{"tf":1.4142135623730952},"traits/caching.html#caching-and-subtle-considerations-therewith":{"tf":1.0},"traits/goals-and-clauses.html#domain-goals":{"tf":1.0},"tests/adding.html#comment-explaining-what-the-test-is-about":{"tf":1.4142135623730952},"macro-expansion.html#the-macro-parser":{"tf":1.0},"hir.html#identifiers-in-the-hir":{"tf":1.0},"method-lookup.html#candidate-assembly":{"tf":1.0},"how-to-build-and-run.html#running-xpy-and-building-a-stage1-compiler":{"tf":1.0},"traits/resolution.html#candidate-assembly":{"tf":1.0},"mir/regionck.html#what-is-a-universe":{"tf":1.0},"mir/passes.html#stealing":{"tf":1.0},"traits/canonicalization.html#canonicalization":{"tf":1.4142135623730952},"high-level-overview.html#crate-structure":{"tf":1.0},"mir/regionck.html#skolemization-and-outlives-constraints":{"tf":1.0},"traits/hrtb.html#basic-matching-and-skolemization-leaks":{"tf":1.0},"rustdoc.html#from-crate-to-clean":{"tf":1.0}},"df":40,"l":{"docs":{},"df":0,"i":{"docs":{"traits/wf.html#well-formedness-checking":{"tf":1.0}},"df":1}},"i":{"docs":{"rustc-driver.html#the-rustc-driver":{"tf":1.0}},"df":1,"c":{"docs":{},"df":0,"u":{"docs":{},"df":0,"l":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{"ty.html#import-conventions":{"tf":1.0},"type-inference.html#extracting-region-constraints":{"tf":1.0},"tests/adding.html#adding-new-tests":{"tf":1.0},"tests/adding.html#guide-to-the-ui-tests":{"tf":1.0},"traits/canonical-queries.html#a-trait-query-in-rustc":{"tf":1.0},"mir/regionck.html#mir-based-region-checking-nll":{"tf":1.0},"incrcomp-debugging.html#dumping-the-graph":{"tf":1.7320508075688773},"mir/borrowck.html#major-phases-of-the-borrow-checker":{"tf":1.0},"traits/lowering-to-logic.html#rust-traits-and-logic":{"tf":1.0},"incremental-compilation.html#improvements-to-the-basic-algorithm":{"tf":1.0},"type-inference.html#enforcing-equality--subtyping":{"tf":1.0},"mir/regionck.html#subtyping-and-skolemization":{"tf":1.0},"hir.html#identifiers-in-the-hir":{"tf":1.0},"compiletest.html#implementing-the-behavior-change":{"tf":1.0},"how-to-build-and-run.html#running-xpy-and-building-a-stage1-compiler":{"tf":1.4142135623730952},"rustc-driver.html#the-rustc-driver":{"tf":1.0},"variance.html#dependency-graph-management":{"tf":1.4142135623730952},"traits/lowering-rules.html#associated-type-declarations":{"tf":1.0},"incremental-compilation.html#the-basic-algorithm":{"tf":1.0},"variance.html#variance-and-object-types":{"tf":1.0},"query.html#adding-a-new-kind-of-query":{"tf":1.4142135623730952},"conventions.html#line-length":{"tf":1.0},"mir/passes.html#stealing":{"tf":1.0},"appendix/stupid-stats.html#what-next":{"tf":1.0},"appendix/glossary.html#appendix-c-glossary":{"tf":1.7320508075688773},"compiler-debugging.html#debugging-llvm":{"tf":1.0},"traits/resolution.html#candidate-assembly":{"tf":1.7320508075688773},"tests/running.html#running-a-subset-of-the-test-suites":{"tf":1.0},"tests/adding.html#revisions":{"tf":1.4142135623730952},"compiler-debugging.html#getting-logging-output":{"tf":1.0},"compiletest.html#adding-a-new-header-command":{"tf":1.4142135623730952},"traits/goals-and-clauses.html#domain-goals":{"tf":1.0},"the-parser.html#the-parser":{"tf":1.0},"method-lookup.html#method-lookup":{"tf":1.0},"high-level-overview.html#the-main-stages-of-compilation":{"tf":1.0},"traits/resolution.html#selection-during-translation":{"tf":1.4142135623730952}},"df":36,"l":{"docs":{},"df":0,"i":{"docs":{"ty.html#the-tcx-and-how-it-uses-lifetimes":{"tf":1.0},"ty.html#allocating-and-working-with-types":{"tf":1.0},"how-to-build-and-run.html#create-a-configtoml":{"tf":1.0},"incrcomp-debugging.html#dumping-the-graph":{"tf":1.0}},"df":4}}}}}}},"a":{"docs":{},"df":0,"l":{"docs":{"traits/specialization.html#specialization":{"tf":1.0},"traits/canonicalization.html#processing-the-canonicalized-query-result":{"tf":1.0},"rustdoc.html#other-tricks-up-its-sleeve":{"tf":1.0}},"df":3,"e":{"docs":{},"df":0,"q":{"docs":{"traits/lowering-rules.html#trait-header":{"tf":2.0}},"df":1}}}}}},"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{"mir/regionck.html#what-is-a-universe":{"tf":1.4142135623730952},"hir.html#the-hir-map":{"tf":1.0},"hir.html#out-of-band-storage-and-the--crate--type":{"tf":1.0},"traits/canonicalization.html#canonicalization":{"tf":1.0},"traits/canonicalization.html#canonicalizing-the-query-result":{"tf":1.0},"the-parser.html#the-parser":{"tf":1.0}},"df":6,"h":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{"high-level-overview.html#the-main-stages-of-compilation":{"tf":1.4142135623730952},"macro-expansion.html#example":{"tf":1.4142135623730952}},"df":2}}}}}},"s":{"docs":{"hir.html#the-hir":{"tf":1.0},"query.html#queries-demand-driven-compilation":{"tf":1.0},"compiletest.html#adding-a-new-header-command":{"tf":2.0},"macro-expansion.html#the-macro-parser":{"tf":3.3166247903554},"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":2.0},"traits/chalk-overview.html#lowering":{"tf":1.0},"appendix/stupid-stats.html#compilercontroller":{"tf":1.4142135623730952},"high-level-overview.html#the-main-stages-of-compilation":{"tf":2.0},"rustdoc.html#hot-potato":{"tf":1.0},"tests/adding.html#what-kind-of-test-should-i-add":{"tf":1.0},"the-parser.html#the-parser":{"tf":2.0},"name-resolution.html#name-resolution":{"tf":1.0},"appendix/code-index.html#appendix-d-code-index":{"tf":1.7320508075688773},"rustc-driver.html#the-rustc-driver":{"tf":1.7320508075688773},"appendix/stupid-stats.html#overview-of-the-compilation-process":{"tf":2.0},"macro-expansion.html#example":{"tf":1.0},"tests/intro.html#compiletest-test-suites":{"tf":1.4142135623730952},"appendix/glossary.html#appendix-c-glossary":{"tf":1.0},"macro-expansion.html#macro-expansion":{"tf":1.7320508075688773},"appendix/stupid-stats.html#compilercalls":{"tf":1.0},"traits/chalk-overview.html#parsing":{"tf":1.4142135623730952}},"df":21,"e":{"docs":{},"df":0,"r":{"docs":{"rustdoc.html#hot-potato":{"tf":1.7320508075688773},"rustdoc.html#from-clean-to-crate":{"tf":1.4142135623730952},"macro-expansion.html#the-macro-parser":{"tf":4.69041575982343},"appendix/code-index.html#appendix-d-code-index":{"tf":2.449489742783178},"macro-expansion.html#macro-expansion":{"tf":2.449489742783178},"high-level-overview.html#crate-structure":{"tf":1.0},"compiletest.html#adding-a-new-header-command":{"tf":3.0},"the-parser.html#the-parser":{"tf":3.3166247903554},"traits/chalk-overview.html#parsing":{"tf":1.4142135623730952}},"df":9,"'":{"docs":{"macro-expansion.html#the-macro-parser":{"tf":1.4142135623730952}},"df":1},"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"s":{"docs":{"macro-expansion.html#the-macro-parser":{"tf":1.0}},"df":1}}}}},"_":{"docs":{"the-parser.html#the-parser":{"tf":1.0}},"df":1,"<":{"docs":{},"df":0,"h":{"docs":{},"df":0,"e":{"docs":{},"df":0,"a":{"docs":{},"df":0,"d":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"_":{"docs":{},"df":0,"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"m":{"docs":{},"df":0,"m":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{"compiletest.html#adding-a-new-header-command":{"tf":1.0}},"df":1}}}}}}}}}}}}}}},"f":{"docs":{},"df":0,"a":{"docs":{},"df":0,"i":{"docs":{},"df":0,"l":{"docs":{},"df":0,"u":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"_":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{},"df":0,"u":{"docs":{"compiletest.html#adding-a-new-header-command":{"tf":1.0},"compiletest.html#implementing-the-behavior-change":{"tf":1.0}},"df":2,"s":{"docs":{},"df":0,"(":{"docs":{},"df":0,"&":{"docs":{},"df":0,"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"l":{"docs":{},"df":0,"f":{"docs":{"compiletest.html#adding-a-new-header-command":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}}},"n":{"docs":{},"df":0,"a":{"docs":{},"df":0,"m":{"docs":{},"df":0,"e":{"docs":{},"df":0,"_":{"docs":{},"df":0,"d":{"docs":{},"df":0,"i":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{"compiletest.html#adding-a-new-header-command":{"tf":1.0}},"df":1}}}}}},"v":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{},"df":0,"u":{"docs":{},"df":0,"e":{"docs":{},"df":0,"_":{"docs":{},"df":0,"d":{"docs":{},"df":0,"i":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{"compiletest.html#adding-a-new-header-command":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}},"p":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"t":{"docs":{},"df":0,"t":{"docs":{},"df":0,"i":{"docs":{"appendix/stupid-stats.html#compilercalls":{"tf":1.0}},"df":1}}}}}}},"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"s":{"docs":{"diag.html#error-messages":{"tf":1.0},"appendix/code-index.html#appendix-d-code-index":{"tf":1.0},"the-parser.html#the-parser":{"tf":1.0}},"df":3}}}}}},"a":{"docs":{},"df":0,"l":{"docs":{},"df":0,"l":{"docs":{},"df":0,"e":{"docs":{},"df":0,"l":{"docs":{"how-to-build-and-run.html#create-a-configtoml":{"tf":1.0},"compiletest.html#introduction":{"tf":1.0},"name-resolution.html#scopes-and-ribs":{"tf":1.0},"compiler-debugging.html#debugging-llvm":{"tf":1.4142135623730952},"appendix/glossary.html#appendix-c-glossary":{"tf":1.0}},"df":5}}}},"m":{"docs":{},"df":0,"_":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"v":{"docs":{"miri.html#miri":{"tf":1.0}},"df":1,".":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{},"df":0,"(":{"docs":{},"df":0,"t":{"docs":{},"df":0,"i":{"docs":{"param_env.html#parameter-environment":{"tf":1.0}},"df":1}}}}}}}}}}},"t":{"docs":{"traits/lowering-rules.html#notation":{"tf":1.0}},"df":1},"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"v":{"docs":{"param_env.html#parameter-environment":{"tf":2.449489742783178},"const-eval.html#constant-evaluation":{"tf":1.0},"traits/caching.html#where-clauses-and-the-local-vs-global-cache":{"tf":1.0}},"df":3,"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{},"df":0,"<":{"docs":{},"df":0,"t":{"docs":{},"df":0,"i":{"docs":{"param_env.html#parameter-environment":{"tf":1.0}},"df":1}}}}}}}},"t":{"docs":{"diag.html#edition-gated-lints":{"tf":1.0},"miri.html#miri":{"tf":1.0},"appendix/glossary.html#appendix-c-glossary":{"tf":2.449489742783178},"traits/resolution.html#overview":{"tf":1.0},"variance.html#addendum-variance-on-traits":{"tf":1.4142135623730952},"traits/lowering-rules.html#function-and-constant-values":{"tf":1.0},"name-resolution.html#scopes-and-ribs":{"tf":1.4142135623730952},"compiletest.html#adding-a-new-header-command":{"tf":1.0},"traits/canonicalization.html#executing-the-query":{"tf":1.0},"traits/resolution.html#confirmation":{"tf":1.4142135623730952},"method-lookup.html#candidate-assembly":{"tf":1.4142135623730952},"param_env.html#parameter-environment":{"tf":2.449489742783178},"traits/lowering-rules.html#notation":{"tf":1.0},"variance.html#variance-and-object-types":{"tf":2.449489742783178},"rustc-driver.html#the-rustc-driver":{"tf":1.0},"variance.html#trait-variance-and-vtable-resolution":{"tf":2.0},"traits/resolution.html#candidate-assembly":{"tf":1.7320508075688773},"mir/regionck.html#what-is-a-universe":{"tf":1.0},"ty.html#the-tcx-and-how-it-uses-lifetimes":{"tf":1.7320508075688773},"type-checking.html#type-collection":{"tf":1.0},"traits/associated-types.html#associated-type-projection-and-normalization":{"tf":1.0},"variance.html#the-algorithm":{"tf":2.23606797749979},"ty.html#beyond-types-other-kinds-of-arena-allocated-data-structures":{"tf":1.0},"variance.html#variance-of-type-and-lifetime-parameters":{"tf":3.0}},"df":24}}}}},"n":{"docs":{},"df":0,"i":{"docs":{},"df":0,"c":{"docs":{"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.4142135623730952},"compiler-debugging.html#expensive-operations-in-logs":{"tf":1.0},"miri.html#datastructures":{"tf":1.0},"compiletest.html#implementing-the-behavior-change":{"tf":1.0},"mir/passes.html#stealing":{"tf":1.0},"compiler-debugging.html#getting-a-backtrace-for-errors":{"tf":1.7320508075688773},"tests/intro.html#compiletest-test-suites":{"tf":1.4142135623730952},"compiler-debugging.html#getting-a-backtrace":{"tf":1.4142135623730952}},"df":8,"!":{"docs":{},"df":0,"(":{"docs":{},"df":0,"\"":{"docs":{},"df":0,"n":{"docs":{},"df":0,"o":{"docs":{"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.0}},"df":1}}}}},"=":{"docs":{},"df":0,"a":{"docs":{},"df":0,"b":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"t":{"docs":{"mir/passes.html#implementing-and-registering-a-pass":{"tf":1.0}},"df":1}}}}}},"k":{"docs":{"compiler-debugging.html#getting-a-backtrace-for-errors":{"tf":1.4142135623730952},"hir.html#the-hir-map":{"tf":1.0}},"df":2}}}},"s":{"docs":{},"df":0,"s":{"docs":{"tests/adding.html#naming-your-test":{"tf":1.0},"tests/running.html#running-a-subset-of-the-test-suites":{"tf":1.4142135623730952},"ty.html#beyond-types-other-kinds-of-arena-allocated-data-structures":{"tf":1.0},"name-resolution.html#todo":{"tf":1.4142135623730952},"rustc-driver.html#the-rustc-driver":{"tf":1.7320508075688773},"traits/hrtb.html#basic-matching-and-skolemization-leaks":{"tf":1.0},"hir.html#the-hir":{"tf":1.0},"mir/index.html#mir-data-types":{"tf":1.0},"appendix/stupid-stats.html#compilercontroller":{"tf":1.0},"mir/passes.html#implementing-and-registering-a-pass":{"tf":2.449489742783178},"rustdoc.html#from-crate-to-clean":{"tf":1.0},"compiletest.html#adding-a-new-header-command":{"tf":1.0},"appendix/code-index.html#appendix-d-code-index":{"tf":1.4142135623730952},"rustdoc.html#from-soup-to-nuts":{"tf":1.4142135623730952},"rustdoc.html#from-clean-to-crate":{"tf":1.0},"variance.html#variance-and-associated-types":{"tf":1.0},"query.html#queries-demand-driven-compilation":{"tf":1.0},"name-resolution.html#name-resolution":{"tf":1.0},"rustdoc.html#hot-potato":{"tf":3.1622776601683797},"mir/passes.html#seeing-how-the-mir-changes-as-the-compiler-executes":{"tf":2.6457513110645909},"ty.html#allocating-and-working-with-types":{"tf":1.0},"high-level-overview.html#the-main-stages-of-compilation":{"tf":1.7320508075688773},"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.7320508075688773},"variance.html#trait-variance-and-vtable-resolution":{"tf":1.0},"incrcomp-debugging.html#dumping-the-graph":{"tf":1.0},"compiletest.html#introduction":{"tf":1.0},"tests/adding.html#adding-new-tests":{"tf":1.0},"compiler-debugging.html#getting-a-backtrace-for-errors":{"tf":1.0},"mir/passes.html#mir-passes":{"tf":2.0},"mir/passes.html#stealing":{"tf":1.0},"traits/resolution.html#candidate-assembly":{"tf":2.0},"tests/intro.html#compiletest-test-suites":{"tf":1.4142135623730952},"compiler-debugging.html#debugging-llvm":{"tf":1.7320508075688773},"traits/hrtb.html#higher-ranked-trait-obligations":{"tf":1.0},"how-to-build-and-run.html#other-xpy-commands":{"tf":1.4142135623730952},"tests/adding.html#tests-that-do-not-result-in-compile-errors":{"tf":1.4142135623730952},"tests/adding.html#revisions":{"tf":1.4142135623730952},"appendix/stupid-stats.html#overview-of-the-compilation-process":{"tf":1.0},"tests/adding.html#other-header-commands":{"tf":1.4142135623730952},"tests/adding.html#what-kind-of-test-should-i-add":{"tf":1.0},"rustc-driver.html#a-note-on-lifetimes":{"tf":1.0},"tests/adding.html#editing-and-updating-the-reference-files":{"tf":1.0}},"df":42,"/":{"docs":{},"df":0,"r":{"docs":{},"df":0,"f":{"docs":{},"df":0,"c":{"docs":{},"df":0,"1":{"docs":{},"df":0,"2":{"docs":{},"df":0,"3":{"docs":{},"df":0,"4":{"docs":{"tests/adding.html#naming-your-test":{"tf":1.0}},"df":1}}}}}}},"i":{"docs":{},"df":0,"s":{"docs":{},"df":0,"s":{"docs":{},"df":0,"u":{"docs":{"tests/adding.html#naming-your-test":{"tf":1.0}},"df":1}}}}}},"t":{"docs":{"rustdoc.html#hot-potato":{"tf":1.0},"tests/adding.html#adding-new-tests":{"tf":1.0}},"df":2}}},"e":{"docs":{},"df":0,"a":{"docs":{},"df":0,"k":{"docs":{"ty.html#the-tcx-and-how-it-uses-lifetimes":{"tf":1.0}},"df":1}},"r":{"docs":{"rustdoc.html#hot-potato":{"tf":1.0},"macro-expansion.html#the-macro-parser":{"tf":1.0},"mir/regionck.html#what-is-a-universe":{"tf":1.0},"compiletest.html#implementing-the-behavior-change":{"tf":1.0},"query.html#how-the-compiler-executes-a-query":{"tf":1.4142135623730952},"hir.html#identifiers-in-the-hir":{"tf":1.0}},"df":6,"i":{"docs":{},"df":0,"o":{"docs":{},"df":0,"d":{"docs":{"type-inference.html#extracting-region-constraints":{"tf":1.0}},"df":1}}},"h":{"docs":{},"df":0,"a":{"docs":{},"df":0,"p":{"docs":{"incrcomp-debugging.html#dumping-the-graph":{"tf":1.0},"tests/adding.html#naming-your-test":{"tf":1.0},"type-inference.html#enforcing-equality--subtyping":{"tf":1.0},"how-to-build-and-run.html#create-a-configtoml":{"tf":1.0},"appendix/glossary.html#appendix-c-glossary":{"tf":1.0},"how-to-build-and-run.html#running-xpy-and-building-a-stage1-compiler":{"tf":1.0},"hir.html#identifiers-in-the-hir":{"tf":1.0},"traits/implied-bounds.html#implied-bounds":{"tf":1.0},"compiletest.html#implementing-the-behavior-change":{"tf":1.0},"ty.html#the-tcx-and-how-it-uses-lifetimes":{"tf":1.0},"ty.html#allocating-and-working-with-types":{"tf":1.0},"traits/lowering-rules.html#trait-header":{"tf":1.0},"mir/regionck.html#what-is-a-universe":{"tf":1.0},"type-inference.html#inference-variables":{"tf":1.0}},"df":14}}},"m":{"docs":{},"df":0,"i":{"docs":{},"df":0,"s":{"docs":{},"df":0,"s":{"docs":{"conventions.html#using-crates-from-cratesio":{"tf":1.0}},"df":1}},"t":{"docs":{"traits/associated-types.html#associated-type-projection-and-normalization":{"tf":1.0},"high-level-overview.html#the-main-stages-of-compilation":{"tf":1.0},"variance.html#addendum-variance-on-traits":{"tf":1.0},"traits/goals-and-clauses.html#domain-goals":{"tf":1.0},"traits/resolution.html#candidate-assembly":{"tf":1.0}},"df":5}},"a":{"docs":{},"df":0,"n":{"docs":{"type-inference.html#snapshots":{"tf":1.0}},"df":1}}},"s":{"docs":{},"df":0,"p":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{"rustc-driver.html#the-rustc-driver":{"tf":1.0}},"df":1}}}},"i":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{"mir/index.html#key-mir-vocabulary":{"tf":1.0},"variance.html#variance-of-type-and-lifetime-parameters":{"tf":1.0}},"df":2}}}},"v":{"docs":{},"df":0,"a":{"docs":{},"df":0,"s":{"docs":{"rustc-driver.html#a-note-on-lifetimes":{"tf":1.0},"high-level-overview.html#crate-structure":{"tf":1.0}},"df":2}}},"f":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{"traits/goals-and-clauses.html#coinductive-goals":{"tf":1.0}},"df":1}}}}},"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"m":{"docs":{"type-inference.html#snapshots":{"tf":1.0},"mir/passes.html#implementing-and-registering-a-pass":{"tf":1.0},"appendix/stupid-stats.html#compilercalls":{"tf":1.4142135623730952},"tests/intro.html#compiletest-test-suites":{"tf":1.0},"type-inference.html#enforcing-equality--subtyping":{"tf":1.4142135623730952},"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.0},"high-level-overview.html#the-main-stages-of-compilation":{"tf":1.4142135623730952},"traits/specialization.html#specialization":{"tf":1.0},"incremental-compilation.html#improvements-to-the-basic-algorithm":{"tf":1.4142135623730952},"tests/adding.html#normalization":{"tf":1.0},"rustdoc.html#the-walking-tour-of-rustdoc":{"tf":1.0},"ty.html#the-tcx-and-how-it-uses-lifetimes":{"tf":1.0},"mir/passes.html#mir-passes":{"tf":1.0},"how-to-build-and-run.html#create-a-configtoml":{"tf":1.0},"compiler-debugging.html#debugging-llvm":{"tf":1.0},"name-resolution.html#overall-strategy":{"tf":1.4142135623730952},"appendix/code-index.html#appendix-d-code-index":{"tf":1.0},"compiler-debugging.html#logging-etiquette":{"tf":1.0},"type-inference.html#inference-variables":{"tf":1.0},"mir/borrowck.html#major-phases-of-the-borrow-checker":{"tf":1.0}},"df":20}}}}},"o":{"docs":{},"df":0,"p":{"docs":{},"df":0,"l":{"docs":{"tests/intro.html#testing-with-docker-images":{"tf":1.0},"tests/running.html#running-an-individual-test":{"tf":1.0},"traits/associated-types.html#associated-type-projection-and-normalization":{"tf":1.0},"rustc-driver.html#a-note-on-lifetimes":{"tf":1.0}},"df":4}}}},"h":{"docs":{},"df":0,"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"s":{"docs":{},"df":0,"e":{"docs":{"variance.html#trait-variance-and-vtable-resolution":{"tf":1.0}},"df":1}}}},"a":{"docs":{},"df":0,"s":{"docs":{},"df":0,"e":{"docs":{"type-inference.html#trying-equality":{"tf":1.0},"traits/resolution.html#selection":{"tf":1.0},"hir.html#identifiers-in-the-hir":{"tf":1.0},"rustc-driver.html#a-note-on-lifetimes":{"tf":1.0},"mir/borrowck.html#major-phases-of-the-borrow-checker":{"tf":1.0},"appendix/stupid-stats.html#compilercontroller":{"tf":2.0},"traits/chalk-overview.html#lowering":{"tf":1.4142135623730952},"method-lookup.html#method-lookup":{"tf":2.0},"appendix/stupid-stats.html#appendix-a-a-tutorial-on-creating-a-drop-in-replacement-for-rustc":{"tf":1.0},"mir/passes.html#stealing":{"tf":1.0},"appendix/stupid-stats.html#the-driver-customisation-apis":{"tf":1.4142135623730952},"rustc-driver.html#the-rustc-driver":{"tf":1.7320508075688773},"rustdoc.html#from-clean-to-crate":{"tf":1.4142135623730952},"method-lookup.html#steps":{"tf":1.0},"appendix/glossary.html#appendix-c-glossary":{"tf":1.0},"appendix/stupid-stats.html#overview-of-the-compilation-process":{"tf":3.7416573867739415},"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.4142135623730952},"method-lookup.html#the-probe-phase":{"tf":1.0},"macro-expansion.html#macro-expansion":{"tf":1.0},"high-level-overview.html#crate-structure":{"tf":1.0},"traits/chalk-overview.html#parsing":{"tf":1.0},"mir/borrowck.html#mir-borrow-check":{"tf":1.0}},"df":22,"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{},"df":0,"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"l":{"docs":{"appendix/stupid-stats.html#compilercontroller":{"tf":1.7320508075688773}},"df":1}}}}}}}}},"n":{"docs":{},"df":0,"t":{"docs":{},"df":0,"o":{"docs":{},"df":0,"m":{"docs":{"query.html#adding-a-new-kind-of-query":{"tf":1.0}},"df":1,"d":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{},"df":0,"a":{"docs":{},"df":0,"<":{"docs":{},"df":0,"&":{"docs":{},"df":0,"'":{"docs":{},"df":0,"t":{"docs":{},"df":0,"c":{"docs":{},"df":0,"x":{"docs":{"query.html#adding-a-new-kind-of-query":{"tf":1.0}},"df":1}}}}}}}}}},"f":{"docs":{},"df":0,"n":{"docs":{"variance.html#addendum-variance-on-traits":{"tf":1.0}},"df":1}}}}}}}},"t":{"docs":{},"df":0,"r":{"docs":{"tests/adding.html#normalization":{"tf":2.0}},"df":1}},"n":{"docs":{},"df":0,"+":{"docs":{},"df":0,"1":{"docs":{},"df":0,".":{"docs":{},"df":0,".":{"docs":{},"df":0,"p":{"docs":{},"df":0,"m":{"docs":{"traits/lowering-rules.html#associated-type-declarations":{"tf":3.1622776601683797}},"df":1}}}}}}},"y":{"docs":{},"df":0,"t":{"docs":{},"df":0,"h":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{"how-to-build-and-run.html#how-to-build-the-compiler-and-run-what-you-built":{"tf":1.0}},"df":1}}}}},"1":{"docs":{"traits/associated-types.html#integration-with-unification":{"tf":1.0}},"df":1,".":{"docs":{},"df":0,".":{"docs":{},"df":0,"p":{"docs":{},"df":0,"n":{"docs":{"traits/lowering-rules.html#trait-header":{"tf":1.7320508075688773},"traits/lowering-rules.html#associated-type-declarations":{"tf":3.1622776601683797}},"df":2}}}}},"u":{"docs":{},"df":0,"b":{"docs":{"compiletest.html#adding-a-new-header-command":{"tf":2.23606797749979},"compiletest.html#introduction":{"tf":1.0},"rustdoc.html#from-crate-to-clean":{"tf":1.4142135623730952},"query.html#adding-a-new-kind-of-query":{"tf":1.0},"query.html#how-the-compiler-executes-a-query":{"tf":1.4142135623730952},"diag.html#declaring-a-lint":{"tf":1.0},"diag.html#edition-gated-lints":{"tf":1.0},"ty.html#allocating-and-working-with-types":{"tf":1.0}},"df":8,"l":{"docs":{},"df":0,"i":{"docs":{},"df":0,"s":{"docs":{},"df":0,"h":{"docs":{"name-resolution.html#todo":{"tf":1.0},"variance.html#variance-of-type-and-lifetime-parameters":{"tf":1.0}},"df":2}},"c":{"docs":{"high-level-overview.html#crate-structure":{"tf":1.0},"rustdoc.html#hot-potato":{"tf":1.7320508075688773},"compiletest.html#adding-a-new-header-command":{"tf":1.0}},"df":3,"l":{"docs":{},"df":0,"i":{"docs":{"rustdoc.html#from-crate-to-clean":{"tf":1.0}},"df":1}}}}}},"l":{"docs":{},"df":0,"l":{"docs":{"tests/intro.html#testing-infrastructure":{"tf":1.0},"rustc-driver.html#a-note-on-lifetimes":{"tf":1.0}},"df":2}},"r":{"docs":{},"df":0,"p":{"docs":{},"df":0,"o":{"docs":{},"df":0,"s":{"docs":{"traits/canonicalization.html#canonicalizing-the-query-result":{"tf":1.0},"compiletest.html#implementing-the-behavior-change":{"tf":1.0},"mir/passes.html#mir-passes":{"tf":1.0},"type-inference.html#inference-variables":{"tf":1.0}},"df":4}}},"e":{"docs":{"high-level-overview.html#the-main-stages-of-compilation":{"tf":1.0},"conventions.html#how-to-structure-your-pr":{"tf":1.0},"traits/chalk-overview.html#intermediate-representation-ir":{"tf":1.0}},"df":3}},"n":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{},"df":0,"u":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{"macro-expansion.html#example":{"tf":1.0}},"df":1}}}}}},"s":{"docs":{},"df":0,"h":{"docs":{"name-resolution.html#scopes-and-ribs":{"tf":1.0},"rustc-driver.html#a-note-on-lifetimes":{"tf":1.0},"type-inference.html#type-inference":{"tf":1.0}},"df":3}},"t":{"docs":{"appendix/glossary.html#appendix-c-glossary":{"tf":1.0},"tests/adding.html#naming-your-test":{"tf":1.4142135623730952},"compiler-debugging.html#getting-logging-output":{"tf":1.7320508075688773},"traits/goals-and-clauses.html#coinductive-goals":{"tf":1.0},"variance.html#addendum-variance-on-traits":{"tf":1.0},"traits/lowering-to-logic.html#rust-traits-and-logic":{"tf":1.0},"tests/adding.html#header-commands-configuring-rustc":{"tf":1.0},"variance.html#trait-variance-and-vtable-resolution":{"tf":1.0},"query.html#adding-a-new-kind-of-query":{"tf":1.0},"mir/regionck.html#what-is-a-universe":{"tf":1.0},"compiler-debugging.html#expensive-operations-in-logs":{"tf":1.4142135623730952},"traits/specialization.html#specialization":{"tf":1.0},"mir/index.html#key-mir-vocabulary":{"tf":1.0},"mir/regionck.html#extending-the-universal-regions-check":{"tf":1.0},"diag.html#emitting-diagnostics":{"tf":1.0},"conventions.html#how-to-structure-your-pr":{"tf":1.0}},"df":16}},"o":{"docs":{},"df":0,"p":{"docs":{},"df":0,"u":{"docs":{},"df":0,"l":{"docs":{"query.html#how-the-compiler-executes-a-query":{"tf":1.0}},"df":1}}},"w":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"compiler-debugging.html#getting-logging-output":{"tf":1.0}},"df":1}}},"r":{"docs":{},"df":0,"t":{"docs":{},"df":0,"i":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{"mir/regionck.html#back-to-our-example":{"tf":1.0},"mir/regionck.html#representing-the-values-of-a-region-variable":{"tf":1.0},"macro-expansion.html#macro-expansion":{"tf":1.0}},"df":3}}}}},"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{"variance.html#the-algorithm":{"tf":1.0},"how-to-build-and-run.html#creating-a-rustup-toolchain":{"tf":1.0},"mir/passes.html#mir-passes":{"tf":1.0},"miri.html#interpretation":{"tf":1.0},"type-inference.html#lexical-region-resolution":{"tf":1.0},"type-inference.html#region-constraints":{"tf":1.0},"miri.html#allocations":{"tf":1.0},"traits/goals-and-clauses.html#coinductive-goals":{"tf":1.0},"appendix/glossary.html#appendix-c-glossary":{"tf":1.4142135623730952},"compiler-debugging.html#getting-logging-output":{"tf":1.0},"traits/resolution.html#trait-resolution-old-style":{"tf":1.0},"mir/regionck.html#back-to-our-example":{"tf":1.7320508075688773},"type-inference.html#extracting-region-constraints":{"tf":1.0},"traits/canonical-queries.html#examples":{"tf":1.0},"mir/regionck.html#representing-the-values-of-a-region-variable":{"tf":1.0},"query.html#cycles-between-queries":{"tf":1.0},"appendix/stupid-stats.html#compilercontroller":{"tf":1.0},"mir/borrowck.html#major-phases-of-the-borrow-checker":{"tf":1.4142135623730952},"hir.html#identifiers-in-the-hir":{"tf":1.0},"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.0},"rustdoc.html#the-walking-tour-of-rustdoc":{"tf":1.0},"traits/canonicalization.html#canonicalizing-the-query-result":{"tf":1.0},"appendix/stupid-stats.html#compilercalls":{"tf":1.4142135623730952},"traits/lowering-module.html#the--program_clauses_for--query":{"tf":1.0},"name-resolution.html#overall-strategy":{"tf":1.4142135623730952},"tests/adding.html#header-commands-configuring-rustc":{"tf":1.0},"traits/associated-types.html#integration-with-unification":{"tf":1.0},"incremental-compilation.html#the-query-dag":{"tf":1.0},"rustdoc.html#from-crate-to-clean":{"tf":1.4142135623730952},"compiler-debugging.html#getting-a-backtrace-for-errors":{"tf":1.0},"tests/adding.html#comment-explaining-what-the-test-is-about":{"tf":1.0},"mir/regionck.html#what-is-a-universe":{"tf":1.0},"mir/regionck.html#skolemization-and-outlives-constraints":{"tf":1.4142135623730952}},"df":33,"e":{"docs":{},"df":0,"r":{"docs":{"miri.html#allocations":{"tf":2.449489742783178},"appendix/glossary.html#appendix-c-glossary":{"tf":3.605551275463989},"miri.html#datastructures":{"tf":1.0},"variance.html#trait-variance-and-vtable-resolution":{"tf":1.0},"miri.html#miri":{"tf":1.0},"tests/adding.html#ignoring-tests":{"tf":1.0},"hir.html#the-hir-map":{"tf":1.0},"const-eval.html#constant-evaluation":{"tf":1.4142135623730952},"query.html#how-the-compiler-executes-a-query":{"tf":1.0}},"df":9}}}}},"s":{"docs":{},"df":0,"t":{"docs":{"tests/intro.html#further-reading":{"tf":1.0},"traits/lowering-to-logic.html#source":{"tf":1.0},"mir/index.html#the-mir-mid-level-ir":{"tf":1.0},"traits/chalk-overview.html#blog-posts":{"tf":1.0},"type-inference.html#inference-variables":{"tf":1.0},"mir/visitor.html#traversal":{"tf":1.0},"high-level-overview.html#the-main-stages-of-compilation":{"tf":1.0}},"df":7},"i":{"docs":{},"df":0,"t":{"docs":{"traits/lowering-rules.html#lowering-where-clauses":{"tf":1.0},"variance.html#variance-and-object-types":{"tf":1.4142135623730952},"traits/hrtb.html#higher-ranked-trait-obligations":{"tf":1.0}},"df":3}},"s":{"docs":{},"df":0,"i":{"docs":{},"df":0,"b":{"docs":{},"df":0,"l":{"docs":{"traits/resolution.html#confirmation":{"tf":1.0},"type-inference.html#inference-variables":{"tf":1.0},"tests/adding.html#naming-your-test":{"tf":1.0},"traits/lowering-rules.html#associated-type-declarations":{"tf":1.0},"type-inference.html#trying-equality":{"tf":1.4142135623730952},"type-inference.html#snapshots":{"tf":1.0},"mir/index.html#key-mir-vocabulary":{"tf":1.4142135623730952},"miri.html#miri":{"tf":1.0},"how-to-build-and-run.html#create-a-configtoml":{"tf":1.0},"traits/canonical-queries.html#the-traditional-interactive-prolog-query":{"tf":2.0},"query.html#adding-a-new-kind-of-query":{"tf":1.0},"miri.html#datastructures":{"tf":1.0},"appendix/glossary.html#appendix-c-glossary":{"tf":1.0},"appendix/stupid-stats.html#appendix-a-a-tutorial-on-creating-a-drop-in-replacement-for-rustc":{"tf":1.0},"ty.html#allocating-and-working-with-types":{"tf":1.0},"appendix/stupid-stats.html#what-next":{"tf":1.0},"traits/resolution.html#candidate-assembly":{"tf":1.7320508075688773},"method-lookup.html#method-lookup":{"tf":1.0},"diag.html#suggestions":{"tf":1.4142135623730952},"traits/resolution.html#selection":{"tf":1.7320508075688773},"traits/goals-and-clauses.html#coinductive-goals":{"tf":1.0},"incremental-compilation.html#incremental-compilation":{"tf":1.0},"traits/canonical-queries.html#examples":{"tf":1.0},"compiler-debugging.html#debugging-llvm":{"tf":1.0},"appendix/background.html#what-is-a-control-flow-graph":{"tf":1.0},"traits/caching.html#an-example":{"tf":1.0},"traits/canonical-queries.html#a-trait-query-in-rustc":{"tf":2.0},"miri.html#allocations":{"tf":1.0}},"df":28}}}}},"t":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{},"df":0,"o":{"docs":{"rustdoc.html#hot-potato":{"tf":1.0}},"df":1}}},"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{},"df":0,"i":{"docs":{"appendix/stupid-stats.html#compilercontroller":{"tf":1.0},"traits/canonical-queries.html#a-trait-query-in-rustc":{"tf":1.0},"mir/index.html#key-mir-vocabulary":{"tf":1.0},"name-resolution.html#scopes-and-ribs":{"tf":1.0}},"df":4}}}}},"o":{"docs":{},"df":0,"r":{"docs":{"traits/resolution.html#candidate-assembly":{"tf":1.0}},"df":1},"l":{"docs":{"ty.html#the-tcx-and-how-it-uses-lifetimes":{"tf":1.0}},"df":1}}},"l":{"docs":{},"df":0,"e":{"docs":{},"df":0,"a":{"docs":{},"df":0,"s":{"docs":{"appendix/stupid-stats.html#what-next":{"tf":1.0},"conventions.html#how-to-structure-your-pr":{"tf":1.0},"tests/adding.html#normalization":{"tf":1.0},"compiler-debugging.html#debugging-the-compiler":{"tf":1.0},"rustdoc.html#hot-potato":{"tf":1.0},"about-this-guide.html#about-this-guide":{"tf":1.0},"traits/chalk-overview.html#an-overview-of-chalk":{"tf":1.0}},"df":7,"u":{"docs":{},"df":0,"r":{"docs":{"incrcomp-debugging.html#dumping-the-graph":{"tf":1.0}},"df":1}}}}},"a":{"docs":{},"df":0,"t":{"docs":{},"df":0,"f":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"m":{"docs":{"appendix/glossary.html#appendix-c-glossary":{"tf":1.4142135623730952},"tests/intro.html#testing-with-docker-images":{"tf":1.4142135623730952},"tests/intro.html#testing-infrastructure":{"tf":1.7320508075688773},"tests/adding.html#normalization":{"tf":1.7320508075688773},"tests/intro.html#testing-on-emulators":{"tf":1.7320508075688773}},"df":5}}}}},"u":{"docs":{},"df":0,"s":{"docs":{},"df":0,"i":{"docs":{},"df":0,"b":{"docs":{},"df":0,"l":{"docs":{"method-lookup.html#candidate-assembly":{"tf":1.0}},"df":1}}}}},"y":{"docs":{"traits/specialization.html#specialization":{"tf":1.0},"mir/regionck.html#final-example":{"tf":1.0},"mir/index.html#key-mir-vocabulary":{"tf":1.0},"compiler-debugging.html#debugging-llvm":{"tf":1.4142135623730952}},"df":4,"e":{"docs":{},"df":0,"r":{"docs":{"the-parser.html#the-parser":{"tf":1.0}},"df":1}},"g":{"docs":{},"df":0,"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"u":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{"mir/index.html#key-mir-vocabulary":{"tf":1.0}},"df":1}}}}}}},"c":{"docs":{},"df":0,"e":{"docs":{"mir/index.html#key-mir-vocabulary":{"tf":3.7416573867739415},"mir/borrowck.html#major-phases-of-the-borrow-checker":{"tf":1.0},"mir/passes.html#implementing-and-registering-a-pass":{"tf":1.0},"mir/index.html#mir-data-types":{"tf":2.0},"traits/specialization.html#specialization":{"tf":1.7320508075688773},"name-resolution.html#scopes-and-ribs":{"tf":1.4142135623730952},"query.html#how-the-compiler-executes-a-query":{"tf":1.0},"mir/borrowck.html#mir-borrow-check":{"tf":1.4142135623730952},"macro-expansion.html#the-macro-parser":{"tf":1.0},"appendix/glossary.html#appendix-c-glossary":{"tf":1.0},"miri.html#miri":{"tf":1.0},"name-resolution.html#name-resolution":{"tf":1.0},"name-resolution.html#todo":{"tf":1.0},"appendix/background.html#what-is-a-control-flow-graph":{"tf":1.0},"type-inference.html#inference-variables":{"tf":1.0},"ty.html#the-tcx-and-how-it-uses-lifetimes":{"tf":1.0},"query.html#adding-a-new-kind-of-query":{"tf":1.7320508075688773},"type-inference.html#snapshots":{"tf":1.0}},"df":18,"h":{"docs":{},"df":0,"o":{"docs":{},"df":0,"l":{"docs":{},"df":0,"d":{"docs":{"traits/canonicalization.html#canonicalization":{"tf":1.0},"diag.html#suggestions":{"tf":1.0}},"df":2}}}}}},"n":{"docs":{"query.html#how-the-compiler-executes-a-query":{"tf":1.0}},"df":1}},"d":{"docs":{},"df":0,"i":{"docs":{},"df":0,"'":{"docs":{},"df":0,"1":{"docs":{},"df":0,"1":{"docs":{"variance.html#variance-of-type-and-lifetime-parameters":{"tf":1.0}},"df":1}}}}},"u":{"docs":{"mir/regionck.html#region-variables-and-constraints":{"tf":1.0},"traits/hrtb.html#higher-ranked-trait-obligations":{"tf":1.0}},"df":2,"g":{"docs":{"rustc-driver.html#a-note-on-lifetimes":{"tf":1.0}},"df":1}}},"r":{"docs":{"tests/intro.html#testing-infrastructure":{"tf":1.0},"conventions.html#use-todo-comments-for-things-you-dont-want-to-forget":{"tf":1.4142135623730952},"conventions.html#how-to-structure-your-pr":{"tf":1.7320508075688773},"tests/running.html#running-a-subset-of-the-test-suites":{"tf":1.0},"about-this-guide.html#about-this-guide":{"tf":1.0},"compiler-debugging.html#debugging-the-compiler":{"tf":1.0},"conventions.html#formatting-and-the-tidy-script":{"tf":1.0},"tests/adding.html#adding-new-tests":{"tf":1.4142135623730952},"tests/running.html#running-tests":{"tf":1.0}},"df":9,"a":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{},"df":0,"i":{"docs":{},"df":0,"c":{"docs":{"diag.html#error-messages":{"tf":1.0},"incremental-compilation.html#improvements-to-the-basic-algorithm":{"tf":1.4142135623730952},"variance.html#variance-of-type-and-lifetime-parameters":{"tf":1.0},"high-level-overview.html#crate-structure":{"tf":1.0}},"df":4}}}}},"e":{"docs":{"traits/hrtb.html#basic-matching-and-skolemization-leaks":{"tf":1.0},"mir/visitor.html#traversal":{"tf":1.0}},"df":2,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{"appendix/stupid-stats.html#compilercalls":{"tf":1.0}},"df":1}}},"t":{"docs":{},"df":0,"i":{"docs":{"compiletest.html#adding-a-new-header-command":{"tf":1.0},"mir/index.html#key-mir-vocabulary":{"tf":1.0},"query.html#adding-a-new-kind-of-query":{"tf":1.0},"traits/caching.html#where-clauses-and-the-local-vs-global-cache":{"tf":1.0},"tests/adding.html#ignoring-tests":{"tf":1.7320508075688773},"tests/intro.html#compiletest-test-suites":{"tf":1.4142135623730952},"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.4142135623730952},"appendix/background.html#what-is-a-control-flow-graph":{"tf":1.0},"macro-expansion.html#the-macro-parser":{"tf":1.0},"appendix/stupid-stats.html#overview-of-the-compilation-process":{"tf":1.0},"appendix/stupid-stats.html#compilercalls":{"tf":1.0},"tests/adding.html#other-header-commands":{"tf":1.0},"appendix/stupid-stats.html#appendix-a-a-tutorial-on-creating-a-drop-in-replacement-for-rustc":{"tf":1.0},"appendix/stupid-stats.html#what-next":{"tf":1.4142135623730952},"query.html#queries-demand-driven-compilation":{"tf":1.0}},"df":15}}},"f":{"docs":{},"df":0,"i":{"docs":{},"df":0,"x":{"docs":{"ty.html#import-conventions":{"tf":1.0},"high-level-overview.html#crate-structure":{"tf":1.0},"traits/lowering-module.html#unit-tests":{"tf":1.0},"appendix/stupid-stats.html#overview-of-the-compilation-process":{"tf":1.0}},"df":4}},"e":{"docs":{},"df":0,"r":{"docs":{"tests/adding.html#what-kind-of-test-should-i-add":{"tf":1.4142135623730952},"conventions.html#tabs-vs-spaces":{"tf":1.0},"conventions.html#prefer-exhaustive-matches":{"tf":1.4142135623730952},"traits/index.html#trait-solving-new-style":{"tf":1.0},"appendix/stupid-stats.html#what-next":{"tf":1.0},"rustc-driver.html#a-note-on-lifetimes":{"tf":1.0},"traits/resolution.html#trait-resolution-old-style":{"tf":1.0}},"df":7}}},"v":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{"tests/adding.html#adding-new-tests":{"tf":1.0},"mir/borrowck.html#mir-borrow-check":{"tf":1.0},"const-eval.html#constant-evaluation":{"tf":1.0},"rustc-driver.html#a-note-on-lifetimes":{"tf":1.0},"traits/associated-types.html#integration-with-unification":{"tf":1.0},"variance.html#variance-and-object-types":{"tf":1.0},"mir/regionck.html#what-is-a-universe":{"tf":1.0},"tests/adding.html#what-kind-of-test-should-i-add":{"tf":1.0}},"df":8}}},"i":{"docs":{},"df":0,"o":{"docs":{},"df":0,"u":{"docs":{"compiler-debugging.html#getting-a-backtrace-for-errors":{"tf":1.0},"tests/adding.html#error-annotations":{"tf":1.4142135623730952},"traits/canonicalization.html#processing-the-canonicalized-query-result":{"tf":1.0},"tests/intro.html#compiletest-test-suites":{"tf":1.0},"mir/regionck.html#final-example":{"tf":1.4142135623730952},"rustdoc.html#hot-potato":{"tf":1.0},"diag.html#suggestions":{"tf":1.7320508075688773},"conventions.html#how-to-structure-your-pr":{"tf":1.0},"type-inference.html#snapshots":{"tf":1.0},"incremental-compilation.html#the-basic-algorithm":{"tf":2.0},"incremental-compilation.html#the-try-mark-green-algorithm":{"tf":1.4142135623730952},"incrcomp-debugging.html#tracking-down-incorrect-edges":{"tf":1.7320508075688773},"mir/index.html#mir-data-types":{"tf":1.0},"traits/resolution.html#confirmation":{"tf":1.0},"mir/regionck.html#what-is-a-universe":{"tf":1.0},"traits/canonical-queries.html#examples":{"tf":1.0},"rustdoc.html#cheat-sheet":{"tf":1.0},"traits/lowering-module.html#unit-tests":{"tf":1.0},"traits/lowering-to-logic.html#type-checking-generic-functions-beyond-horn-clauses":{"tf":1.0}},"df":19,"s":{"docs":{"traits/chalk-overview.html#intermediate-representation-ir":{"tf":1.0},"rustdoc.html#cheat-sheet":{"tf":1.0},"tests/running.html#running-tests":{"tf":1.0},"macro-expansion.html#the-macro-parser":{"tf":1.0}},"df":4}}}}},"d":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"s":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{"incrcomp-debugging.html#dumping-the-graph":{"tf":1.4142135623730952}},"df":1}}}}}}},"i":{"docs":{},"df":0,"c":{"docs":{"ty.html#beyond-types-other-kinds-of-arena-allocated-data-structures":{"tf":1.0},"traits/lowering-to-logic.html#rust-traits-and-logic":{"tf":1.4142135623730952},"traits/associated-types.html#projection-equality":{"tf":1.7320508075688773},"traits/associated-types.html#equality-and-associated-types":{"tf":1.4142135623730952},"traits/associated-types.html#associated-type-projection-and-normalization":{"tf":1.0},"traits/lowering-to-logic.html#type-checking-normal-functions":{"tf":1.0},"traits/goals-and-clauses.html#coinductive-goals":{"tf":1.0},"traits/lowering-rules.html#trait-header":{"tf":1.7320508075688773}},"df":8}}},"s":{"docs":{},"df":0,"u":{"docs":{},"df":0,"m":{"docs":{"traits/lowering-rules.html#function-and-constant-values":{"tf":1.0},"variance.html#variance-and-object-types":{"tf":1.0},"conventions.html#how-to-structure-your-pr":{"tf":1.0},"traits/resolution.html#candidate-assembly":{"tf":1.0}},"df":4}},"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"c":{"docs":{"compiletest.html#adding-a-new-header-command":{"tf":1.0}},"df":1},"t":{"docs":{"mir/regionck.html#representing-the-values-of-a-region-variable":{"tf":1.0},"mir/regionck.html#mir-based-region-checking-nll":{"tf":1.0},"rustdoc.html#from-crate-to-clean":{"tf":1.0},"tests/adding.html#guide-to-the-ui-tests":{"tf":1.0},"appendix/stupid-stats.html#overview-of-the-compilation-process":{"tf":1.0},"query.html#adding-a-new-kind-of-query":{"tf":1.0},"compiletest.html#adding-a-new-header-command":{"tf":1.0},"query.html#how-the-compiler-executes-a-query":{"tf":1.0},"mir/regionck.html#skolemization-and-outlives-constraints":{"tf":1.0},"traits/associated-types.html#associated-type-projection-and-normalization":{"tf":1.0},"name-resolution.html#name-resolution":{"tf":1.0}},"df":11}},"r":{"docs":{},"df":0,"v":{"docs":{"variance.html#addendum-variance-on-traits":{"tf":1.0},"high-level-overview.html#the-main-stages-of-compilation":{"tf":1.0}},"df":2}}}},"p":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{"conventions.html#how-to-structure-your-pr":{"tf":1.0}},"df":1}},"o":{"docs":{},"df":0,"p":{"docs":{},"df":0,"u":{"docs":{},"df":0,"l":{"docs":{"compiler-debugging.html#debugging-llvm":{"tf":1.0}},"df":1}}}}},"c":{"docs":{},"df":0,"a":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{"query.html#cycles-between-queries":{"tf":1.0}},"df":1}}},"e":{"docs":{},"df":0,"d":{"docs":{"traits/resolution.html#overview":{"tf":1.0}},"df":1}},"i":{"docs":{},"df":0,"s":{"docs":{"rustdoc.html#dotting-is-and-crossing-ts":{"tf":1.0},"type-inference.html#inference-variables":{"tf":1.0},"type-inference.html#enforcing-equality--subtyping":{"tf":1.0},"traits/resolution.html#candidate-assembly":{"tf":1.0},"variance.html#variance-and-object-types":{"tf":1.0},"traits/index.html#trait-solving-new-style":{"tf":1.4142135623730952},"traits/canonicalization.html#canonicalizing-the-query-result":{"tf":1.0}},"df":7}},"o":{"docs":{},"df":0,"m":{"docs":{},"df":0,"p":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{"const-eval.html#constant-evaluation":{"tf":1.0}},"df":1}}}}}}},"i":{"docs":{},"df":0,"m":{"docs":{},"df":0,"v":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{"miri.html#datastructures":{"tf":1.7320508075688773}},"df":1,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"b":{"docs":{},"df":0,"y":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"(":{"docs":{},"df":0,"0":{"docs":{"miri.html#miri":{"tf":1.0}},"df":1}}}}}}}}}}}},"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{"appendix/stupid-stats.html#the-driver-customisation-apis":{"tf":1.0},"diag.html#span":{"tf":1.0},"appendix/stupid-stats.html#compilercalls":{"tf":1.0},"type-inference.html#enforcing-equality--subtyping":{"tf":1.0},"hir.html#the-hir":{"tf":1.0},"rustdoc.html#from-crate-to-clean":{"tf":1.0}},"df":6,"l":{"docs":{},"df":0,"i":{"docs":{"appendix/code-index.html#appendix-d-code-index":{"tf":1.0},"appendix/glossary.html#appendix-c-glossary":{"tf":1.4142135623730952},"hir.html#identifiers-in-the-hir":{"tf":1.0},"appendix/stupid-stats.html#overview-of-the-compilation-process":{"tf":1.4142135623730952},"rustdoc.html#from-clean-to-crate":{"tf":1.0}},"df":5}}}}}},"v":{"docs":{"rustdoc.html#hot-potato":{"tf":1.4142135623730952}},"df":1,"a":{"docs":{},"df":0,"t":{"docs":{"rustdoc.html#hot-potato":{"tf":2.23606797749979}},"df":1,"e":{"docs":{},"df":0,"/":{"docs":{},"df":0,"h":{"docs":{},"df":0,"i":{"docs":{},"df":0,"d":{"docs":{},"df":0,"d":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{"rustdoc.html#hot-potato":{"tf":1.0}},"df":1}}}}}}}}},"c":{"docs":{},"df":0,"i":{"docs":{"high-level-overview.html#the-main-stages-of-compilation":{"tf":1.0}},"df":1}}}},"n":{"docs":{},"df":0,"t":{"docs":{"appendix/stupid-stats.html#what-next":{"tf":1.0},"rustdoc.html#cheat-sheet":{"tf":1.0},"macro-expansion.html#example":{"tf":1.4142135623730952},"tests/adding.html#guide-to-the-ui-tests":{"tf":1.4142135623730952},"diag.html#error-messages":{"tf":1.0},"appendix/stupid-stats.html#overview-of-the-compilation-process":{"tf":1.0},"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":2.0},"compiler-debugging.html#debugging-llvm":{"tf":2.0},"mir/index.html#key-mir-vocabulary":{"tf":1.0},"tests/adding.html#ignoring-tests":{"tf":1.0},"rustdoc.html#from-clean-to-crate":{"tf":2.0},"compiler-debugging.html#getting-logging-output":{"tf":1.0},"macro-expansion.html#the-macro-parser":{"tf":2.6457513110645909}},"df":13,"e":{"docs":{},"df":0,"r":{"docs":{"tests/intro.html#compiletest-test-suites":{"tf":1.0},"macro-expansion.html#example":{"tf":1.0},"tests/adding.html#other-header-commands":{"tf":1.0},"tests/adding.html#ignoring-tests":{"tf":1.0}},"df":4,"!":{"docs":{},"df":0,"(":{"docs":{},"df":0,"p":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{"macro-expansion.html#example":{"tf":1.0}},"df":1}}}}}}}}},"o":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{"compiler-debugging.html#debugging-llvm":{"tf":1.0}},"df":1}}},"l":{"docs":{},"df":0,"n":{"docs":{"macro-expansion.html#example":{"tf":2.0},"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":2.449489742783178},"macro-expansion.html#the-macro-parser":{"tf":1.7320508075688773}},"df":3,"_":{"docs":{},"df":0,"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"u":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.0}},"df":1}}}}}},"!":{"docs":{},"df":0,"(":{"docs":{},"df":0,"\"":{"docs":{},"df":0,"c":{"docs":{},"df":0,"l":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{"traits/goals-and-clauses.html#domain-goals":{"tf":1.0}},"df":1}}}},"{":{"docs":{},"df":0,":":{"docs":{},"df":0,".":{"docs":{},"df":0,"0":{"docs":{"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.0}},"df":1}}}},"f":{"docs":{},"df":0,"o":{"docs":{},"df":0,"u":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.0}},"df":1}}}}},"t":{"docs":{},"df":0,"h":{"docs":{"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.0}},"df":1}},"i":{"docs":{},"df":0,"n":{"docs":{"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.0}},"df":1}},"h":{"docs":{},"df":0,"e":{"docs":{},"df":0,"l":{"docs":{},"df":0,"l":{"docs":{},"df":0,"o":{"docs":{"traits/lowering-module.html#unit-tests":{"tf":1.0},"mir/passes.html#seeing-how-the-mir-changes-as-the-compiler-executes":{"tf":1.0}},"df":2}}}}}}}}}}},"c":{"docs":{},"df":0,"i":{"docs":{},"df":0,"p":{"docs":{},"df":0,"l":{"docs":{"traits/chalk-overview.html#an-overview-of-chalk":{"tf":1.0}},"df":1}}}}}},"o":{"docs":{},"df":0,"m":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{"const-eval.html#constant-evaluation":{"tf":1.0}},"df":1},"s":{"docs":{"mir/regionck.html#final-example":{"tf":1.4142135623730952}},"df":1}},"o":{"docs":{},"df":0,"t":{"docs":{"mir/index.html#promoted-constants":{"tf":1.0},"const-eval.html#constant-evaluation":{"tf":1.0},"miri.html#miri":{"tf":1.0},"mir/index.html#mir-data-types":{"tf":1.0},"mir/passes.html#seeing-how-the-mir-changes-as-the-compiler-executes":{"tf":1.0},"appendix/glossary.html#appendix-c-glossary":{"tf":1.0}},"df":6,"e":{"docs":{},"df":0,"d":{"docs":{},"df":0,"[":{"docs":{},"df":0,"1":{"docs":{},"df":0,"]":{"docs":{},"df":0,".":{"docs":{},"df":0,"0":{"docs":{},"df":0,"0":{"docs":{},"df":0,"2":{"docs":{"mir/passes.html#seeing-how-the-mir-changes-as-the-compiler-executes":{"tf":2.0}},"df":1}}}}}},"0":{"docs":{"mir/passes.html#seeing-how-the-mir-changes-as-the-compiler-executes":{"tf":1.0}},"df":1,"]":{"docs":{},"df":0,".":{"docs":{},"df":0,"0":{"docs":{},"df":0,"0":{"docs":{},"df":0,"2":{"docs":{"mir/passes.html#seeing-how-the-mir-changes-as-the-compiler-executes":{"tf":2.0}},"df":1}}}}}}}}}}}},"v":{"docs":{},"df":0,"a":{"docs":{},"df":0,"b":{"docs":{},"df":0,"l":{"docs":{"traits/goals-and-clauses.html#goals-and-clauses-meta-structure":{"tf":1.0},"traits/canonical-queries.html#a-trait-query-in-rustc":{"tf":1.0},"traits/lowering-to-logic.html#type-checking-generic-functions-beyond-horn-clauses":{"tf":1.0},"traits/lowering-to-logic.html#type-checking-normal-functions":{"tf":1.7320508075688773},"traits/chalk-overview.html#lowering":{"tf":1.0},"traits/lowering-to-logic.html#rust-traits-and-logic":{"tf":2.23606797749979}},"df":6}}},"i":{"docs":{},"df":0,"d":{"docs":{"type-inference.html#enforcing-equality--subtyping":{"tf":1.0},"name-resolution.html#todo":{"tf":1.0},"query.html#how-the-compiler-executes-a-query":{"tf":5.5677643628300219},"query.html#adding-a-new-kind-of-query":{"tf":1.7320508075688773},"traits/lowering-to-logic.html#type-checking-generic-functions-beyond-horn-clauses":{"tf":1.0},"method-lookup.html#method-lookup":{"tf":1.0},"rustc-driver.html#the-rustc-driver":{"tf":1.0},"variance.html#variance-and-object-types":{"tf":1.0},"tests/adding.html#normalization":{"tf":1.4142135623730952},"traits/resolution.html#major-concepts":{"tf":1.4142135623730952},"variance.html#trait-variance-and-vtable-resolution":{"tf":1.0},"appendix/background.html#appendix-b-background-topics":{"tf":1.0},"appendix/glossary.html#appendix-c-glossary":{"tf":1.0},"rustdoc.html#hot-potato":{"tf":1.0}},"df":14,"e":{"docs":{},"df":0,"_":{"docs":{},"df":0,"e":{"docs":{},"df":0,"x":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"n":{"docs":{"query.html#how-the-compiler-executes-a-query":{"tf":1.0}},"df":1}}}}}}},"(":{"docs":{},"df":0,"p":{"docs":{},"df":0,"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"v":{"docs":{},"df":0,"i":{"docs":{},"df":0,"d":{"docs":{"query.html#how-the-compiler-executes-a-query":{"tf":1.4142135623730952}},"df":1}}}}}}},"r":{"docs":{},"df":0,"s":{"docs":{},"df":0,".":{"docs":{},"df":0,"t":{"docs":{},"df":0,"y":{"docs":{},"df":0,"p":{"docs":{},"df":0,"e":{"docs":{},"df":0,"_":{"docs":{},"df":0,"o":{"docs":{},"df":0,"f":{"docs":{"query.html#how-the-compiler-executes-a-query":{"tf":1.0}},"df":1}}}}}}}}},"<":{"docs":{},"df":0,"'":{"docs":{},"df":0,"c":{"docs":{},"df":0,"x":{"docs":{"query.html#how-the-compiler-executes-a-query":{"tf":1.0}},"df":1}}}}}}}},"e":{"docs":{"traits/resolution.html#major-concepts":{"tf":1.0},"traits/associated-types.html#integration-with-unification":{"tf":1.0},"traits/goals-and-clauses.html#goals-and-clauses-meta-structure":{"tf":1.0},"traits/lowering-to-logic.html#type-checking-generic-functions-beyond-horn-clauses":{"tf":1.0},"traits/canonical-queries.html#a-trait-query-in-rustc":{"tf":1.7320508075688773},"ty.html#beyond-types-other-kinds-of-arena-allocated-data-structures":{"tf":1.0},"traits/lowering-to-logic.html#rust-traits-and-logic":{"tf":1.4142135623730952},"traits/wf.html#well-formedness-checking":{"tf":1.0},"traits/lowering-to-logic.html#type-checking-normal-functions":{"tf":2.23606797749979},"traits/lowering-rules.html#trait-header":{"tf":2.0},"traits/goals-and-clauses.html#coinductive-goals":{"tf":2.0},"traits/goals-and-clauses.html#goals-and-clauses":{"tf":1.0},"traits/goals-and-clauses.html#domain-goals":{"tf":1.7320508075688773},"mir/regionck.html#subtyping-and-skolemization":{"tf":1.0},"traits/canonicalization.html#processing-the-canonicalized-query-result":{"tf":1.0}},"df":15,"n":{"docs":{"traits/lowering-to-logic.html#rust-traits-and-logic":{"tf":1.0},"traits/canonical-queries.html#a-trait-query-in-rustc":{"tf":1.0},"traits/lowering-rules.html#associated-type-declarations":{"tf":1.0},"traits/canonicalization.html#canonicalizing-the-query-result":{"tf":1.4142135623730952},"traits/canonicalization.html#executing-the-query":{"tf":1.4142135623730952},"traits/associated-types.html#integration-with-unification":{"tf":1.0},"appendix/glossary.html#appendix-c-glossary":{"tf":1.0},"traits/canonicalization.html#processing-the-canonicalized-query-result":{"tf":1.4142135623730952},"traits/canonical-queries.html#examples":{"tf":1.7320508075688773},"traits/associated-types.html#projection-equality":{"tf":1.0}},"df":10}}},"o":{"docs":{},"df":0,"f":{"docs":{"traits/goals-and-clauses.html#incomplete-chapter":{"tf":1.0},"traits/goals-and-clauses.html#goals-and-clauses-meta-structure":{"tf":1.4142135623730952},"traits/lowering-to-logic.html#type-checking-generic-functions-beyond-horn-clauses":{"tf":1.0},"traits/bibliography.html#bibliography":{"tf":1.4142135623730952}},"df":4}},"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{"conventions.html#copyright-notice":{"tf":1.0}},"df":1}}},"o":{"docs":{},"df":0,"t":{"docs":{},"df":0,"y":{"docs":{},"df":0,"p":{"docs":{"variance.html#trait-variance-and-vtable-resolution":{"tf":1.0},"traits/lowering-to-logic.html#type-checking-generic-functions-beyond-horn-clauses":{"tf":1.0},"appendix/stupid-stats.html#what-next":{"tf":1.0}},"df":3}}}}},"g":{"docs":{},"df":0,"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"m":{"docs":{"traits/lowering-rules.html#trait-header":{"tf":1.0},"traits/lowering-to-logic.html#rust-traits-and-logic":{"tf":1.4142135623730952},"type-inference.html#extracting-region-constraints":{"tf":1.0},"the-parser.html#the-parser":{"tf":1.0},"tests/intro.html#testing-on-emulators":{"tf":1.4142135623730952},"traits/associated-types.html#projection-equality":{"tf":1.4142135623730952},"tests/adding.html#tests-that-do-not-result-in-compile-errors":{"tf":1.0},"high-level-overview.html#crate-structure":{"tf":1.0},"traits/lowering-rules.html#lowering-traits":{"tf":1.0},"traits/lowering-rules.html#associated-type-declarations":{"tf":1.0},"traits/lowering-rules.html#lowering-rules":{"tf":1.0},"traits/associated-types.html#associated-type-projection-and-normalization":{"tf":1.4142135623730952},"mir/index.html#key-mir-vocabulary":{"tf":2.0},"mir/regionck.html#representing-the-values-of-a-region-variable":{"tf":1.0},"appendix/background.html#what-is-a-dataflow-analysis":{"tf":1.0},"appendix/background.html#what-is-a-control-flow-graph":{"tf":1.0},"appendix/stupid-stats.html#overview-of-the-compilation-process":{"tf":1.4142135623730952},"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.7320508075688773},"traits/lowering-module.html#the-lowering-module-in-rustc":{"tf":1.0},"traits/chalk-overview.html#parsing":{"tf":1.0},"traits/lowering-to-logic.html#type-checking-normal-functions":{"tf":1.0},"traits/goals-and-clauses.html#goals-and-clauses":{"tf":1.0},"traits/chalk-overview.html#an-overview-of-chalk":{"tf":1.4142135623730952},"appendix/background.html#what-is-a-free-region-or-a-free-variable-what-about-bound-region":{"tf":1.0},"appendix/glossary.html#appendix-c-glossary":{"tf":2.449489742783178},"traits/chalk-overview.html#lowering":{"tf":1.4142135623730952},"traits/bibliography.html#bibliography":{"tf":1.0},"traits/lowering-rules.html#lowering-where-clauses":{"tf":1.0},"traits/lowering-module.html#the--program_clauses_for--query":{"tf":1.4142135623730952},"query.html#cycles-between-queries":{"tf":1.4142135623730952},"high-level-overview.html#the-main-stages-of-compilation":{"tf":1.0},"mir/regionck.html#skolemization-and-universes":{"tf":1.4142135623730952},"compiler-debugging.html#getting-logging-output":{"tf":1.0},"traits/wf.html#well-formedness-checking":{"tf":1.0},"compiler-debugging.html#getting-a-backtrace":{"tf":1.0},"rustc-driver.html#a-note-on-lifetimes":{"tf":1.0},"tests/adding.html#other-header-commands":{"tf":1.0}},"df":37,"_":{"docs":{},"df":0,"c":{"docs":{},"df":0,"l":{"docs":{},"df":0,"a":{"docs":{},"df":0,"u":{"docs":{},"df":0,"s":{"docs":{"traits/chalk-overview.html#intermediate-representation-ir":{"tf":1.0}},"df":1,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"_":{"docs":{},"df":0,"f":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{"traits/lowering-module.html#unit-tests":{"tf":1.0},"traits/lowering-module.html#the--program_clauses_for--query":{"tf":1.4142135623730952}},"df":2}}}}}}}}}}}},"c":{"docs":{},"df":0,"l":{"docs":{},"df":0,"a":{"docs":{},"df":0,"u":{"docs":{},"df":0,"s":{"docs":{"traits/chalk-overview.html#lowering":{"tf":1.0},"traits/chalk-overview.html#intermediate-representation-ir":{"tf":1.0}},"df":2}}}}}}},"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"s":{"docs":{"query.html#cycles-between-queries":{"tf":1.0},"method-lookup.html#steps":{"tf":1.0},"type-inference.html#subtyping-obligations":{"tf":1.0},"traits/index.html#trait-solving-new-style":{"tf":1.0}},"df":4}}}}},"c":{"docs":{},"df":0,"r":{"docs":{"compiletest.html#implementing-the-behavior-change":{"tf":1.0}},"df":1},"_":{"docs":{},"df":0,"r":{"docs":{"compiletest.html#implementing-the-behavior-change":{"tf":2.0}},"df":1,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,".":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{},"df":0,"u":{"docs":{"compiletest.html#implementing-the-behavior-change":{"tf":1.0}},"df":1,"s":{"docs":{},"df":0,".":{"docs":{},"df":0,"s":{"docs":{},"df":0,"u":{"docs":{},"df":0,"c":{"docs":{},"df":0,"c":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"s":{"docs":{"compiletest.html#implementing-the-behavior-change":{"tf":1.0}},"df":1}}}}}}},"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"d":{"docs":{"compiletest.html#implementing-the-behavior-change":{"tf":1.4142135623730952}},"df":1}}}}}}}}}}}}}}},"e":{"docs":{"macro-expansion.html#the-macro-parser":{"tf":1.0},"traits/resolution.html#candidate-assembly":{"tf":1.0}},"df":2,"s":{"docs":{},"df":0,"s":{"docs":{"type-inference.html#lexical-region-resolution":{"tf":1.0},"type-inference.html#extracting-region-constraints":{"tf":1.4142135623730952},"the-parser.html#the-parser":{"tf":1.0},"type-checking.html#type-collection":{"tf":1.0},"method-lookup.html#method-lookup":{"tf":1.0},"traits/resolution.html#candidate-assembly":{"tf":2.0},"mir/regionck.html#back-to-our-example":{"tf":1.0},"rustdoc.html#other-tricks-up-its-sleeve":{"tf":1.4142135623730952},"rustc-driver.html#the-rustc-driver":{"tf":1.7320508075688773},"rustdoc.html#from-clean-to-crate":{"tf":1.0},"mir/visitor.html#mir-visitor":{"tf":1.0},"mir/borrowck.html#mir-borrow-check":{"tf":1.0},"high-level-overview.html#the-main-stages-of-compilation":{"tf":2.8284271247461905},"name-resolution.html#overall-strategy":{"tf":1.0},"rustdoc.html#dotting-is-and-crossing-ts":{"tf":1.0},"mir/passes.html#stealing":{"tf":1.4142135623730952},"const-eval.html#constant-evaluation":{"tf":1.0},"traits/index.html#trait-solving-new-style":{"tf":1.0},"traits/resolution.html#selection":{"tf":1.0},"traits/canonicalization.html#canonicalization":{"tf":1.0},"type-inference.html#type-inference":{"tf":1.0},"mir/passes.html#implementing-and-registering-a-pass":{"tf":1.0},"appendix/stupid-stats.html#appendix-a-a-tutorial-on-creating-a-drop-in-replacement-for-rustc":{"tf":1.4142135623730952},"traits/resolution.html#trait-resolution-old-style":{"tf":1.4142135623730952},"traits/resolution.html#major-concepts":{"tf":1.0},"traits/associated-types.html#integration-with-unification":{"tf":1.0},"appendix/stupid-stats.html#overview-of-the-compilation-process":{"tf":1.4142135623730952},"traits/canonicalization.html#canonicalizing-the-query":{"tf":1.0},"appendix/glossary.html#appendix-c-glossary":{"tf":1.0},"traits/canonicalization.html#processing-the-canonicalized-query-result":{"tf":1.0},"query.html#adding-a-new-kind-of-query":{"tf":1.4142135623730952},"traits/caching.html#an-example":{"tf":1.4142135623730952},"traits/caching.html#caching-and-subtle-considerations-therewith":{"tf":1.7320508075688773},"macro-expansion.html#example":{"tf":1.0},"compiler-debugging.html#debugging-llvm":{"tf":1.0},"rustdoc.html#cheat-sheet":{"tf":1.0},"appendix/stupid-stats.html#compilercalls":{"tf":1.7320508075688773},"rustdoc.html#from-crate-to-clean":{"tf":2.449489742783178}},"df":38}},"d":{"docs":{},"df":0,"u":{"docs":{},"df":0,"r":{"docs":{"traits/lowering-to-logic.html#type-checking-generic-functions-beyond-horn-clauses":{"tf":1.0},"traits/associated-types.html#integration-with-unification":{"tf":1.4142135623730952},"macro-expansion.html#procedural-macros":{"tf":1.0},"traits/goals-and-clauses.html#incomplete-chapter":{"tf":1.0},"traits/bibliography.html#bibliography":{"tf":1.0},"traits/goals-and-clauses.html#goals-and-clauses-meta-structure":{"tf":1.4142135623730952},"tests/running.html#running-a-subset-of-the-test-suites":{"tf":1.0},"mir/regionck.html#skolemization-and-outlives-constraints":{"tf":1.0}},"df":8}}}}},"j":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{"compiletest.html#adding-a-new-header-command":{"tf":1.0},"mir/index.html#mir-data-types":{"tf":2.23606797749979},"rustdoc.html#cheat-sheet":{"tf":1.0},"traits/lowering-rules.html#associated-type-declarations":{"tf":1.0},"variance.html#variance-and-associated-types":{"tf":2.0},"appendix/glossary.html#appendix-c-glossary":{"tf":1.7320508075688773},"tests/adding.html#header-commands-configuring-rustc":{"tf":1.0},"tests/intro.html#other-tests":{"tf":1.0},"traits/associated-types.html#associated-type-projection-and-normalization":{"tf":2.6457513110645909},"appendix/stupid-stats.html#appendix-a-a-tutorial-on-creating-a-drop-in-replacement-for-rustc":{"tf":1.0},"compiler-debugging.html#debugging-llvm":{"tf":1.0},"traits/associated-types.html#skolemized-associated-types":{"tf":1.4142135623730952},"rustdoc.html#the-walking-tour-of-rustdoc":{"tf":1.0},"conventions.html#copyright-notice":{"tf":1.0},"traits/goals-and-clauses.html#domain-goals":{"tf":2.449489742783178},"traits/associated-types.html#integration-with-unification":{"tf":1.4142135623730952},"variance.html#addendum-variance-on-traits":{"tf":1.0},"traits/associated-types.html#projection-equality":{"tf":1.7320508075688773},"type-inference.html#inference-variables":{"tf":1.0},"tests/intro.html#the-compiler-testing-framework":{"tf":1.0},"traits/associated-types.html#equality-and-associated-types":{"tf":1.0},"traits/specialization.html#specialization":{"tf":1.0}},"df":22,"i":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"e":{"docs":{},"df":0,"q":{"docs":{"traits/associated-types.html#equality-and-associated-types":{"tf":1.0},"traits/associated-types.html#projection-equality":{"tf":2.0},"traits/goals-and-clauses.html#domain-goals":{"tf":1.0},"traits/lowering-rules.html#associated-type-declarations":{"tf":2.449489742783178}},"df":4,"<":{"docs":{},"df":0,"t":{"docs":{"traits/goals-and-clauses.html#domain-goals":{"tf":1.4142135623730952}},"df":1}},"(":{"docs":{},"df":0,"p":{"docs":{"traits/associated-types.html#integration-with-unification":{"tf":1.0}},"df":1,"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"j":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{"traits/lowering-rules.html#transforming-the-lowered-where-clauses":{"tf":1.4142135623730952},"traits/goals-and-clauses.html#domain-goals":{"tf":1.4142135623730952}},"df":2}}}}}},"1":{"docs":{"traits/associated-types.html#integration-with-unification":{"tf":1.0}},"df":1},"2":{"docs":{"traits/associated-types.html#integration-with-unification":{"tf":1.0}},"df":1}},"<":{"docs":{},"df":0,"a":{"docs":{},"df":0,"0":{"docs":{"traits/lowering-rules.html#lowering-where-clauses":{"tf":1.0}},"df":1}},"t":{"docs":{"traits/associated-types.html#projection-equality":{"tf":1.7320508075688773},"traits/lowering-module.html#unit-tests":{"tf":1.0}},"df":2},"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"l":{"docs":{},"df":0,"f":{"docs":{"traits/lowering-rules.html#associated-type-declarations":{"tf":1.0}},"df":1}}}}}}},"l":{"docs":{},"df":0,"e":{"docs":{},"df":0,"m":{"docs":{},"df":0,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"d":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"f":{"docs":{"mir/index.html#mir-data-types":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}},"d":{"docs":{},"df":0,"u":{"docs":{},"df":0,"c":{"docs":{"compiletest.html#implementing-the-behavior-change":{"tf":1.0},"name-resolution.html#name-resolution":{"tf":1.4142135623730952},"traits/lowering-rules.html#lowering-traits":{"tf":1.0},"compiler-debugging.html#formatting-graphviz-output-dot-files":{"tf":1.0},"traits/associated-types.html#integration-with-unification":{"tf":1.4142135623730952},"traits/lowering-rules.html#associated-type-declarations":{"tf":1.0},"method-lookup.html#method-lookup":{"tf":1.0},"miri.html#interpretation":{"tf":1.0},"traits/chalk-overview.html#parsing":{"tf":1.0},"appendix/stupid-stats.html#appendix-a-a-tutorial-on-creating-a-drop-in-replacement-for-rustc":{"tf":1.0},"high-level-overview.html#the-main-stages-of-compilation":{"tf":1.7320508075688773},"incremental-compilation.html#the-basic-algorithm":{"tf":1.4142135623730952},"traits/canonicalization.html#processing-the-canonicalized-query-result":{"tf":1.0},"macro-expansion.html#the-macro-parser":{"tf":1.0},"tests/adding.html#other-header-commands":{"tf":1.0},"traits/lowering-module.html#unit-tests":{"tf":1.0},"traits/lowering-module.html#the--program_clauses_for--query":{"tf":1.4142135623730952},"mir/index.html#key-mir-vocabulary":{"tf":1.0},"mir/passes.html#mir-passes":{"tf":1.0},"appendix/stupid-stats.html#compilercontroller":{"tf":1.0},"compiler-debugging.html#debugging-llvm":{"tf":1.0},"param_env.html#parameter-environment":{"tf":1.0},"how-to-build-and-run.html#running-xpy-and-building-a-stage1-compiler":{"tf":1.4142135623730952},"traits/lowering-rules.html#lowering-where-clauses":{"tf":1.0},"appendix/code-index.html#appendix-d-code-index":{"tf":1.0},"traits/lowering-rules.html#trait-header":{"tf":1.0},"traits/lowering-rules.html#associated-type-values":{"tf":1.0},"mir/passes.html#stealing":{"tf":1.0},"traits/canonical-queries.html#the-traditional-interactive-prolog-query":{"tf":1.0},"query.html#adding-a-new-kind-of-query":{"tf":1.0},"appendix/glossary.html#appendix-c-glossary":{"tf":1.7320508075688773}},"df":31}}},"b":{"docs":{},"df":0,"e":{"docs":{"type-inference.html#snapshots":{"tf":1.0},"method-lookup.html#the-probe-phase":{"tf":1.0},"method-lookup.html#steps":{"tf":1.0},"method-lookup.html#method-lookup":{"tf":1.7320508075688773}},"df":4,".":{"docs":{},"df":0,"r":{"docs":{"method-lookup.html#method-lookup":{"tf":1.0}},"df":1}},":":{"docs":{},"df":0,":":{"docs":{},"df":0,"p":{"docs":{},"df":0,"i":{"docs":{},"df":0,"c":{"docs":{},"df":0,"k":{"docs":{"method-lookup.html#method-lookup":{"tf":1.0}},"df":1}}}}}}},"a":{"docs":{},"df":0,"b":{"docs":{},"df":0,"l":{"docs":{"ty.html#allocating-and-working-with-types":{"tf":1.0},"traits/goals-and-clauses.html#coinductive-goals":{"tf":1.0},"tests/running.html#running-tests":{"tf":1.0},"param_env.html#parameter-environment":{"tf":1.0},"query.html#adding-a-new-kind-of-query":{"tf":1.0},"rustdoc.html#from-clean-to-crate":{"tf":1.0},"compiler-debugging.html#debugging-llvm":{"tf":1.0},"compiler-debugging.html#logging-etiquette":{"tf":1.0},"how-to-build-and-run.html#running-xpy-and-building-a-stage1-compiler":{"tf":1.0},"name-resolution.html#todo":{"tf":1.0},"appendix/stupid-stats.html#compilercontroller":{"tf":1.0}},"df":11}}},"l":{"docs":{},"df":0,"e":{"docs":{},"df":0,"m":{"docs":{"traits/lowering-to-logic.html#type-checking-generic-functions-beyond-horn-clauses":{"tf":1.0},"appendix/stupid-stats.html#what-next":{"tf":1.0},"variance.html#variance-and-associated-types":{"tf":1.0},"incremental-compilation.html#the-query-dag":{"tf":1.0},"traits/index.html#trait-solving-new-style":{"tf":1.0},"tests/adding.html#comment-explaining-what-the-test-is-about":{"tf":1.0},"mir/regionck.html#final-example":{"tf":1.0}},"df":7,"a":{"docs":{},"df":0,"t":{"docs":{"name-resolution.html#overall-strategy":{"tf":1.0}},"df":1}}}}}},"l":{"docs":{},"df":0,"o":{"docs":{},"df":0,"g":{"docs":{"traits/lowering-to-logic.html#type-checking-generic-functions-beyond-horn-clauses":{"tf":1.7320508075688773},"traits/bibliography.html#bibliography":{"tf":1.4142135623730952},"type-inference.html#inference-variables":{"tf":1.0},"traits/lowering-to-logic.html#lowering-to-logic":{"tf":1.4142135623730952},"traits/lowering-to-logic.html#rust-traits-and-logic":{"tf":1.4142135623730952},"traits/lowering-to-logic.html#type-checking-normal-functions":{"tf":1.0},"traits/goals-and-clauses.html#goals-and-clauses":{"tf":1.0},"traits/canonical-queries.html#a-trait-query-in-rustc":{"tf":1.0},"traits/canonical-queries.html#the-traditional-interactive-prolog-query":{"tf":2.0}},"df":9}}},"p":{"docs":{},"df":0,"a":{"docs":{},"df":0,"g":{"docs":{"mir/regionck.html#back-to-our-example":{"tf":1.0},"mir/regionck.html#extending-the-universal-regions-check":{"tf":1.0},"traits/specialization.html#specialization":{"tf":1.4142135623730952},"traits/associated-types.html#integration-with-unification":{"tf":1.0},"rustdoc.html#hot-potato":{"tf":1.4142135623730952},"mir/regionck.html#final-example":{"tf":1.0}},"df":6}},"e":{"docs":{},"df":0,"r":{"docs":{"tests/adding.html#naming-your-test":{"tf":1.0},"tests/adding.html#other-header-commands":{"tf":1.0},"traits/lowering-to-logic.html#type-checking-generic-functions-beyond-horn-clauses":{"tf":1.0}},"df":3,"t":{"docs":{},"df":0,"i":{"docs":{"compiletest.html#implementing-the-behavior-change":{"tf":1.0},"appendix/glossary.html#appendix-c-glossary":{"tf":1.0},"compiletest.html#adding-a-new-header-command":{"tf":2.8284271247461905},"mir/borrowck.html#mir-borrow-check":{"tf":1.0}},"df":4},"y":{"docs":{},"df":0,"'":{"docs":{"compiletest.html#adding-a-new-header-command":{"tf":1.0}},"df":1}}}}}}}}},"i":{"docs":{},"df":0,"3":{"docs":{},"df":0,"2":{"docs":{"mir/regionck.html#what-is-a-universe":{"tf":1.4142135623730952},"appendix/glossary.html#appendix-c-glossary":{"tf":1.0},"type-inference.html#subtyping-obligations":{"tf":3.0},"traits/associated-types.html#integration-with-unification":{"tf":1.0},"ty.html#beyond-types-other-kinds-of-arena-allocated-data-structures":{"tf":1.4142135623730952},"traits/lowering-module.html#unit-tests":{"tf":1.4142135623730952},"variance.html#trait-variance-and-vtable-resolution":{"tf":1.7320508075688773},"traits/canonical-queries.html#the-traditional-interactive-prolog-query":{"tf":1.0},"compiletest.html#implementing-the-behavior-change":{"tf":1.0},"compiletest.html#adding-a-new-header-command":{"tf":1.0}},"df":10}},"r":{"docs":{"tests/adding.html#what-kind-of-test-should-i-add":{"tf":1.4142135623730952},"traits/chalk-overview.html#well-formedness-checks":{"tf":1.0},"hir.html#the-hir":{"tf":1.0},"mir/index.html#the-mir-mid-level-ir":{"tf":1.0},"appendix/stupid-stats.html#overview-of-the-compilation-process":{"tf":1.7320508075688773},"appendix/glossary.html#appendix-c-glossary":{"tf":3.3166247903554},"high-level-overview.html#the-main-stages-of-compilation":{"tf":1.4142135623730952},"rustc-driver.html#the-rustc-driver":{"tf":1.0},"compiler-debugging.html#debugging-llvm":{"tf":2.6457513110645909},"traits/chalk-overview.html#intermediate-representation-ir":{"tf":1.7320508075688773},"trans.html#generating-llvm-ir":{"tf":1.0}},"df":11,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"l":{"docs":{},"df":0,"e":{"docs":{},"df":0,"v":{"docs":{"compiler-debugging.html#getting-a-backtrace-for-errors":{"tf":1.4142135623730952}},"df":1}}}}},":":{"docs":{},"df":0,":":{"docs":{},"df":0,"p":{"docs":{},"df":0,"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"g":{"docs":{},"df":0,"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"m":{"docs":{"traits/chalk-overview.html#intermediate-representation-ir":{"tf":1.7320508075688773}},"df":1,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"v":{"docs":{},"df":0,"i":{"docs":{},"df":0,"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{"traits/chalk-overview.html#intermediate-representation-ir":{"tf":1.0},"traits/chalk-overview.html#rules":{"tf":1.0}},"df":2}}}}}}}}}}}}}}}}},"t":{"docs":{},"df":0,"'":{"docs":{"tests/adding.html#comment-explaining-what-the-test-is-about":{"tf":1.0},"type-inference.html#region-constraints":{"tf":1.0},"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.0},"traits/lowering-to-logic.html#type-checking-generic-functions-beyond-horn-clauses":{"tf":1.4142135623730952},"traits/goals-and-clauses.html#goals-and-clauses-meta-structure":{"tf":1.0},"traits/bibliography.html#bibliography":{"tf":1.4142135623730952},"tests/intro.html#testing-on-emulators":{"tf":1.0},"appendix/stupid-stats.html#what-next":{"tf":1.0},"mir/regionck.html#another-example":{"tf":1.0},"traits/canonical-queries.html#a-trait-query-in-rustc":{"tf":1.0},"traits/specialization.html#specialization":{"tf":1.0},"mir/regionck.html#skolemization-and-outlives-constraints":{"tf":1.0},"conventions.html#how-to-structure-your-pr":{"tf":2.0},"traits/lowering-rules.html#trait-header":{"tf":1.0},"variance.html#addendum-variance-on-traits":{"tf":1.0},"rustdoc.html#from-soup-to-nuts":{"tf":1.0},"mir/regionck.html#subtyping-and-skolemization":{"tf":1.0},"traits/hrtb.html#basic-matching-and-skolemization-leaks":{"tf":1.0},"compiler-debugging.html#expensive-operations-in-logs":{"tf":1.0},"appendix/stupid-stats.html#overview-of-the-compilation-process":{"tf":1.0},"variance.html#trait-variance-and-vtable-resolution":{"tf":1.0},"rustdoc.html#cheat-sheet":{"tf":1.0},"name-resolution.html#namespaces":{"tf":1.0},"tests/running.html#running-an-individual-test":{"tf":1.0},"traits/resolution.html#candidate-assembly":{"tf":1.0},"how-to-build-and-run.html#create-a-configtoml":{"tf":1.0},"macro-expansion.html#example":{"tf":1.0},"conventions.html#line-length":{"tf":1.0},"compiler-debugging.html#getting-logging-output":{"tf":1.0},"appendix/glossary.html#appendix-c-glossary":{"tf":1.0},"appendix/background.html#what-is-a-control-flow-graph":{"tf":1.0}},"df":31,"d":{"docs":{"appendix/stupid-stats.html#what-next":{"tf":1.0}},"df":1},"l":{"docs":{},"df":0,"l":{"docs":{"appendix/stupid-stats.html#appendix-a-a-tutorial-on-creating-a-drop-in-replacement-for-rustc":{"tf":1.0}},"df":1}}},"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"l":{"docs":{},"df":0,"f":{"docs":{"mir/passes.html#implementing-and-registering-a-pass":{"tf":1.0},"variance.html#the-algorithm":{"tf":1.0},"hir.html#the-hir-map":{"tf":1.0},"ty.html#allocating-and-working-with-types":{"tf":1.0},"traits/resolution.html#overview":{"tf":1.0},"how-to-build-and-run.html#running-xpy-and-building-a-stage1-compiler":{"tf":1.7320508075688773},"traits/canonical-queries.html#a-trait-query-in-rustc":{"tf":1.0},"mir/borrowck.html#major-phases-of-the-borrow-checker":{"tf":1.0},"traits/lowering-rules.html#trait-header":{"tf":1.0},"traits/canonicalization.html#executing-the-query":{"tf":1.0},"method-lookup.html#candidate-assembly":{"tf":1.7320508075688773},"tests/intro.html#the-compiler-testing-framework":{"tf":1.0},"high-level-overview.html#crate-structure":{"tf":1.4142135623730952},"mir/regionck.html#another-example":{"tf":1.0},"the-parser.html#the-parser":{"tf":1.0},"tests/adding.html#other-header-commands":{"tf":1.0},"method-lookup.html#method-lookup":{"tf":1.0},"macro-expansion.html#the-macro-parser":{"tf":1.0},"about-this-guide.html#about-this-guide":{"tf":1.0},"traits/goals-and-clauses.html#coinductive-goals":{"tf":1.0},"rustc-driver.html#a-note-on-lifetimes":{"tf":1.0},"variance.html#constraints":{"tf":1.0},"tests/intro.html#other-tests":{"tf":1.0},"method-lookup.html#candidate-search":{"tf":1.0},"traits/hrtb.html#basic-matching-and-skolemization-leaks":{"tf":1.0},"type-inference.html#creating-an-inference-context":{"tf":1.0},"traits/hrtb.html#higher-ranked-trait-obligations":{"tf":1.0}},"df":27}}}},"e":{"docs":{},"df":0,"m":{"docs":{"rustdoc.html#from-soup-to-nuts":{"tf":1.7320508075688773},"traits/lowering-rules.html#lowering-trait-items":{"tf":1.0},"appendix/code-index.html#appendix-d-code-index":{"tf":1.0},"variance.html#dependency-graph-management":{"tf":1.4142135623730952},"traits/lowering-rules.html#lowering-impls":{"tf":1.4142135623730952},"method-lookup.html#candidate-assembly":{"tf":1.0},"miri.html#miri":{"tf":1.0},"name-resolution.html#overall-strategy":{"tf":1.4142135623730952},"traits/lowering-module.html#the--program_clauses_for--query":{"tf":1.0},"hir.html#out-of-band-storage-and-the--crate--type":{"tf":2.449489742783178},"traits/lowering-rules.html#trait-header":{"tf":1.0},"rustdoc.html#from-crate-to-clean":{"tf":2.23606797749979},"hir.html#hir-bodies":{"tf":1.0},"query.html#queries-demand-driven-compilation":{"tf":1.4142135623730952},"rustdoc.html#hot-potato":{"tf":2.449489742783178},"rustdoc.html#the-walking-tour-of-rustdoc":{"tf":1.0},"query.html#adding-a-new-kind-of-query":{"tf":1.0},"traits/lowering-rules.html#lowering-impl-items":{"tf":1.0},"traits/lowering-module.html#unit-tests":{"tf":1.0},"traits/associated-types.html#associated-type-projection-and-normalization":{"tf":1.7320508075688773},"rustdoc.html#from-clean-to-crate":{"tf":2.6457513110645909},"hir.html#identifiers-in-the-hir":{"tf":2.23606797749979},"traits/lowering-rules.html#lowering-where-clauses":{"tf":1.0},"rustdoc.html#dotting-is-and-crossing-ts":{"tf":1.4142135623730952},"param_env.html#parameter-environment":{"tf":1.4142135623730952},"name-resolution.html#name-resolution":{"tf":1.0},"traits/associated-types.html#projection-equality":{"tf":1.0},"traits/goals-and-clauses.html#domain-goals":{"tf":1.7320508075688773},"high-level-overview.html#the-main-stages-of-compilation":{"tf":1.0},"mir/regionck.html#what-is-a-universe":{"tf":1.0},"appendix/glossary.html#appendix-c-glossary":{"tf":1.4142135623730952},"traits/lowering-rules.html#lowering-traits":{"tf":1.4142135623730952},"const-eval.html#constant-evaluation":{"tf":1.7320508075688773},"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.4142135623730952},"type-checking.html#type-collection":{"tf":1.0}},"df":35,"<":{"docs":{},"df":0,"'":{"docs":{},"df":0,"a":{"docs":{"rustdoc.html#from-clean-to-crate":{"tf":1.0}},"df":1}}},"'":{"docs":{"rustdoc.html#hot-potato":{"tf":1.0},"rustdoc.html#from-soup-to-nuts":{"tf":1.0}},"df":2},"_":{"docs":{"rustdoc.html#from-clean-to-crate":{"tf":1.0}},"df":1},"i":{"docs":{},"df":0,"d":{"docs":{"hir.html#out-of-band-storage-and-the--crate--type":{"tf":1.0},"traits/chalk-overview.html#intermediate-representation-ir":{"tf":1.0}},"df":2}}},"r":{"docs":{"mir/passes.html#mir-passes":{"tf":1.0},"traits/chalk-overview.html#rules":{"tf":1.0},"rustc-driver.html#a-note-on-lifetimes":{"tf":1.0},"hir.html#out-of-band-storage-and-the--crate--type":{"tf":1.4142135623730952},"variance.html#the-algorithm":{"tf":1.7320508075688773},"mir/regionck.html#skolemization-and-outlives-constraints":{"tf":1.0},"traits/resolution.html#candidate-assembly":{"tf":1.0}},"df":7,"a":{"docs":{},"df":0,"t":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,">":{"docs":{},"df":0,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"m":{"docs":{"traits/goals-and-clauses.html#domain-goals":{"tf":1.4142135623730952}},"df":1}}}}}}},"<":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"m":{"docs":{"traits/goals-and-clauses.html#domain-goals":{"tf":1.0},"traits/lowering-module.html#unit-tests":{"tf":1.0}},"df":2}}}}}}}}}}}},"f":{"docs":{},"df":0,"f":{"docs":{"variance.html#trait-variance-and-vtable-resolution":{"tf":1.0}},"df":1}},"i":{"docs":{},"df":0,"r":{"docs":{},"df":0,"c":{"docs":{"compiler-debugging.html#getting-a-backtrace":{"tf":1.0}},"df":1}}},"g":{"docs":{},"df":0,"n":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{"tests/adding.html#ignoring-tests":{"tf":3.3166247903554},"compiletest.html#header-commands":{"tf":1.0},"traits/resolution.html#candidate-assembly":{"tf":1.0},"conventions.html#line-length":{"tf":1.4142135623730952},"tests/running.html#running-tests":{"tf":1.0},"mir/index.html#key-mir-vocabulary":{"tf":1.0},"ty.html#allocating-and-working-with-types":{"tf":1.0},"appendix/stupid-stats.html#compilercalls":{"tf":1.0},"traits/canonicalization.html#canonicalizing-the-query":{"tf":1.0},"tests/adding.html#revisions":{"tf":1.4142135623730952},"traits/canonical-queries.html#examples":{"tf":1.0},"tests/adding.html#other-header-commands":{"tf":1.0},"tests/adding.html#normalization":{"tf":1.0},"traits/canonical-queries.html#a-trait-query-in-rustc":{"tf":1.0},"variance.html#variance-and-object-types":{"tf":1.4142135623730952},"traits/index.html#trait-solving-new-style":{"tf":1.4142135623730952}},"df":16}}}},"c":{"docs":{"incremental-compilation.html#the-query-dag":{"tf":1.0},"appendix/glossary.html#appendix-c-glossary":{"tf":1.0},"query.html#cycles-between-queries":{"tf":1.0},"rustc-driver.html#a-note-on-lifetimes":{"tf":1.0},"compiler-debugging.html#debugging-llvm":{"tf":1.0},"compiler-debugging.html#getting-a-backtrace":{"tf":1.0},"type-inference.html#extracting-region-constraints":{"tf":1.0}},"df":7,"h":{"docs":{"appendix/glossary.html#appendix-c-glossary":{"tf":1.4142135623730952}},"df":1}},"l":{"docs":{},"df":0,"l":{"docs":{},"df":0,"e":{"docs":{},"df":0,"g":{"docs":{"variance.html#constraints":{"tf":1.0},"mir/regionck.html#what-is-a-universe":{"tf":1.0},"query.html#cycles-between-queries":{"tf":1.4142135623730952}},"df":3}}}},"o":{"docs":{"tests/adding.html#ignoring-tests":{"tf":1.0},"tests/intro.html#testing-on-emulators":{"tf":1.0}},"df":2},"s":{"docs":{},"df":0,"n":{"docs":{},"df":0,"'":{"docs":{},"df":0,"t":{"docs":{"name-resolution.html#scopes-and-ribs":{"tf":1.0},"rustdoc.html#from-soup-to-nuts":{"tf":1.0},"traits/lowering-rules.html#transforming-the-lowered-where-clauses":{"tf":1.0}},"df":3}}},"s":{"docs":{},"df":0,"u":{"docs":{"traits/index.html#trait-solving-new-style":{"tf":1.0},"traits/chalk-overview.html#an-overview-of-chalk":{"tf":1.4142135623730952},"mir/regionck.html#another-example":{"tf":1.4142135623730952},"rustdoc.html#hot-potato":{"tf":1.0},"appendix/stupid-stats.html#what-next":{"tf":1.0},"appendix/glossary.html#appendix-c-glossary":{"tf":1.0},"about-this-guide.html#about-this-guide":{"tf":1.0},"tests/running.html#running-an-individual-test":{"tf":1.4142135623730952},"tests/adding.html#naming-your-test":{"tf":1.4142135623730952},"tests/adding.html#comment-explaining-what-the-test-is-about":{"tf":1.0},"rustc-driver.html#a-note-on-lifetimes":{"tf":1.0},"compiler-debugging.html#debugging-the-compiler":{"tf":1.0}},"df":12}},"i":{"docs":{},"df":0,"z":{"docs":{"traits/resolution.html#major-concepts":{"tf":1.0},"traits/resolution.html#confirmation":{"tf":2.0},"traits/caching.html#an-example":{"tf":1.4142135623730952},"traits/resolution.html#selection-during-translation":{"tf":1.4142135623730952},"traits/hrtb.html#higher-ranked-trait-obligations":{"tf":2.23606797749979},"traits/resolution.html#candidate-assembly":{"tf":2.6457513110645909},"traits/hrtb.html#basic-matching-and-skolemization-leaks":{"tf":3.1622776601683797},"traits/hrtb.html#higher-ranked-trait-bounds":{"tf":1.0}},"df":8}},"o":{"docs":{},"df":0,"l":{"docs":{"conventions.html#how-to-structure-your-pr":{"tf":2.0},"conventions.html#formatting-and-the-tidy-script":{"tf":1.0},"traits/canonicalization.html#canonicalization":{"tf":1.4142135623730952}},"df":3}}},"m":{"docs":{},"df":0,"a":{"docs":{},"df":0,"g":{"docs":{"tests/intro.html#testing-with-docker-images":{"tf":2.23606797749979},"tests/intro.html#testing-on-emulators":{"tf":1.4142135623730952}},"df":2,"i":{"docs":{},"df":0,"n":{"docs":{"traits/hrtb.html#higher-ranked-trait-obligations":{"tf":1.0},"hir.html#identifiers-in-the-hir":{"tf":1.0},"traits/hrtb.html#basic-matching-and-skolemization-leaks":{"tf":1.0},"traits/canonical-queries.html#examples":{"tf":1.0},"variance.html#trait-variance-and-vtable-resolution":{"tf":1.4142135623730952},"traits/lowering-to-logic.html#rust-traits-and-logic":{"tf":1.4142135623730952},"traits/goals-and-clauses.html#coinductive-goals":{"tf":1.4142135623730952},"traits/canonical-queries.html#the-traditional-interactive-prolog-query":{"tf":1.0},"traits/resolution.html#candidate-assembly":{"tf":1.0},"traits/canonicalization.html#canonicalizing-the-query":{"tf":1.0},"incremental-compilation.html#the-query-dag":{"tf":1.7320508075688773},"method-lookup.html#candidate-assembly":{"tf":1.0}},"df":12}}}},"m":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{"appendix/glossary.html#appendix-c-glossary":{"tf":1.0},"appendix/stupid-stats.html#compilercontroller":{"tf":1.0}},"df":2}},"e":{"docs":{},"df":0,"d":{"docs":{},"df":0,"i":{"docs":{"tests/intro.html#compiletest-test-suites":{"tf":1.0},"rustdoc.html#from-soup-to-nuts":{"tf":1.0},"tests/adding.html#comment-explaining-what-the-test-is-about":{"tf":1.0},"traits/caching.html#an-example":{"tf":1.0},"appendix/stupid-stats.html#compilercontroller":{"tf":1.0},"tests/adding.html#error-annotations":{"tf":1.0},"compiletest.html#adding-a-new-header-command":{"tf":1.4142135623730952},"traits/canonical-queries.html#examples":{"tf":1.0},"hir.html#out-of-band-storage-and-the--crate--type":{"tf":1.4142135623730952},"traits/resolution.html#selection":{"tf":1.0}},"df":10}}}},"p":{"docs":{},"df":0,"'":{"docs":{},"df":0,"t":{"docs":{"mir/regionck.html#back-to-our-example":{"tf":1.0}},"df":1}},"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"t":{"docs":{"rustdoc.html#hot-potato":{"tf":2.6457513110645909},"name-resolution.html#overall-strategy":{"tf":1.0},"appendix/glossary.html#appendix-c-glossary":{"tf":1.0},"how-to-build-and-run.html#create-a-configtoml":{"tf":1.0},"method-lookup.html#candidate-assembly":{"tf":2.0},"appendix/stupid-stats.html#compilercontroller":{"tf":1.0},"incremental-compilation.html#the-try-mark-green-algorithm":{"tf":1.0},"traits/goals-and-clauses.html#domain-goals":{"tf":1.0},"rustdoc.html#from-soup-to-nuts":{"tf":1.0},"high-level-overview.html#the-main-stages-of-compilation":{"tf":1.0},"incremental-compilation.html#the-query-dag":{"tf":1.0},"mir/passes.html#stealing":{"tf":1.0},"ty.html#import-conventions":{"tf":1.7320508075688773},"compiler-debugging.html#debugging-llvm":{"tf":1.0},"mir/regionck.html#skolemization-and-outlives-constraints":{"tf":1.0},"appendix/code-index.html#appendix-d-code-index":{"tf":1.0},"name-resolution.html#name-resolution":{"tf":1.0},"traits/canonicalization.html#canonicalization":{"tf":1.0},"tests/adding.html#comment-explaining-what-the-test-is-about":{"tf":1.4142135623730952}},"df":19,"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{"how-to-build-and-run.html#create-a-configtoml":{"tf":1.0},"mir/borrowck.html#mir-borrow-check":{"tf":1.0}},"df":2}}}}}}}},"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"v":{"docs":{"appendix/stupid-stats.html#compilercalls":{"tf":1.0},"incremental-compilation.html#improvements-to-the-basic-algorithm":{"tf":1.0},"traits/canonicalization.html#canonicalization":{"tf":1.0},"incremental-compilation.html#incremental-compilation":{"tf":1.0},"high-level-overview.html#crate-structure":{"tf":1.0},"appendix/stupid-stats.html#appendix-a-a-tutorial-on-creating-a-drop-in-replacement-for-rustc":{"tf":1.4142135623730952},"appendix/stupid-stats.html#what-next":{"tf":1.0}},"df":7}}},"l":{"docs":{"query.html#adding-a-new-kind-of-query":{"tf":1.0},"method-lookup.html#candidate-assembly":{"tf":2.8284271247461905},"traits/resolution.html#selection-during-translation":{"tf":2.449489742783178},"traits/resolution.html#overview":{"tf":2.23606797749979},"traits/lowering-rules.html#trait-header":{"tf":1.4142135623730952},"traits/resolution.html#selection":{"tf":2.23606797749979},"traits/canonicalization.html#canonicalizing-the-query-result":{"tf":1.0},"compiler-debugging.html#expensive-operations-in-logs":{"tf":1.0},"traits/hrtb.html#basic-matching-and-skolemization-leaks":{"tf":2.449489742783178},"rustdoc.html#cheat-sheet":{"tf":1.0},"traits/lowering-rules.html#lowering-impls":{"tf":2.23606797749979},"variance.html#trait-variance-and-vtable-resolution":{"tf":3.0},"traits/lowering-rules.html#lowering-impl-items":{"tf":1.0},"traits/wf.html#well-formedness-checking":{"tf":1.0},"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.4142135623730952},"hir.html#identifiers-in-the-hir":{"tf":1.0},"rustdoc.html#from-crate-to-clean":{"tf":1.4142135623730952},"traits/goals-and-clauses.html#domain-goals":{"tf":1.4142135623730952},"traits/resolution.html#major-concepts":{"tf":2.8284271247461905},"traits/chalk-overview.html#parsing":{"tf":1.0},"diag.html#declaring-a-lint":{"tf":1.4142135623730952},"traits/canonicalization.html#executing-the-query":{"tf":1.4142135623730952},"traits/chalk-overview.html#well-formedness-checks":{"tf":1.0},"traits/chalk-overview.html#rules":{"tf":1.0},"method-lookup.html#candidate-search":{"tf":1.0},"traits/specialization.html#specialization":{"tf":3.1622776601683797},"traits/lowering-to-logic.html#rust-traits-and-logic":{"tf":2.23606797749979},"traits/hrtb.html#higher-ranked-trait-obligations":{"tf":2.0},"hir.html#out-of-band-storage-and-the--crate--type":{"tf":1.4142135623730952},"traits/lowering-rules.html#associated-type-values":{"tf":1.7320508075688773},"traits/canonical-queries.html#a-trait-query-in-rustc":{"tf":1.0},"traits/resolution.html#confirmation":{"tf":2.0},"traits/lowering-to-logic.html#type-checking-normal-functions":{"tf":1.4142135623730952},"traits/associated-types.html#projection-equality":{"tf":1.0},"traits/lowering-rules.html#associated-type-declarations":{"tf":1.0},"rustdoc.html#from-soup-to-nuts":{"tf":1.0},"traits/caching.html#an-example":{"tf":2.0},"traits/lowering-module.html#the--program_clauses_for--query":{"tf":1.0},"traits/associated-types.html#associated-type-projection-and-normalization":{"tf":2.0},"traits/canonical-queries.html#examples":{"tf":1.7320508075688773},"traits/resolution.html#candidate-assembly":{"tf":3.7416573867739415},"mir/visitor.html#mir-visitor":{"tf":1.0},"traits/canonical-queries.html#the-traditional-interactive-prolog-query":{"tf":1.0},"compiletest.html#adding-a-new-header-command":{"tf":3.0},"variance.html#variance-of-type-and-lifetime-parameters":{"tf":1.0}},"df":45,"i":{"docs":{"traits/goals-and-clauses.html#domain-goals":{"tf":2.449489742783178},"traits/lowering-rules.html#associated-type-values":{"tf":1.0},"traits/goals-and-clauses.html#coinductive-goals":{"tf":1.4142135623730952},"traits/wf.html#well-formedness-checking":{"tf":1.0},"traits/canonical-queries.html#examples":{"tf":1.0},"mir/regionck.html#what-is-a-universe":{"tf":1.0},"rustdoc.html#hot-potato":{"tf":1.0},"traits/lowering-to-logic.html#rust-traits-and-logic":{"tf":1.0},"traits/implied-bounds.html#implied-bounds":{"tf":1.0},"traits/resolution.html#candidate-assembly":{"tf":1.0},"traits/lowering-rules.html#associated-type-declarations":{"tf":2.0},"traits/lowering-rules.html#trait-header":{"tf":2.23606797749979}},"df":12,"c":{"docs":{"traits/lowering-rules.html#associated-type-declarations":{"tf":1.0},"traits/lowering-rules.html#trait-header":{"tf":1.0},"traits/goals-and-clauses.html#goals-and-clauses-meta-structure":{"tf":1.0},"traits/lowering-to-logic.html#type-checking-generic-functions-beyond-horn-clauses":{"tf":1.0}},"df":4,"i":{"docs":{},"df":0,"t":{"docs":{"variance.html#trait-variance-and-vtable-resolution":{"tf":1.0},"traits/resolution.html#candidate-assembly":{"tf":1.0},"variance.html#variance-and-object-types":{"tf":1.0}},"df":3}}}},"/":{"docs":{},"df":0,"w":{"docs":{},"df":0,"h":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"traits/resolution.html#candidate-assembly":{"tf":1.4142135623730952}},"df":1}}}}},"c":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{},"df":0,"i":{"docs":{},"df":0,"d":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"(":{"docs":{},"df":0,"2":{"docs":{},"df":0,"2":{"docs":{"traits/caching.html#an-example":{"tf":2.0}},"df":1}}}}}}}}}}}},"<":{"docs":{},"df":0,"t":{"docs":{"traits/lowering-module.html#unit-tests":{"tf":1.0},"variance.html#variance-and-associated-types":{"tf":1.0},"traits/canonical-queries.html#the-traditional-interactive-prolog-query":{"tf":1.0},"traits/lowering-to-logic.html#rust-traits-and-logic":{"tf":1.4142135623730952},"traits/associated-types.html#associated-type-projection-and-normalization":{"tf":1.0},"traits/canonical-queries.html#examples":{"tf":1.7320508075688773},"traits/chalk-overview.html#lowering":{"tf":1.0}},"df":7,":":{"docs":{},"df":0,"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"p":{"docs":{},"df":0,"i":{"docs":{"traits/resolution.html#candidate-assembly":{"tf":1.0}},"df":1}}}},"g":{"docs":{},"df":0,"e":{"docs":{},"df":0,"t":{"docs":{"traits/resolution.html#candidate-assembly":{"tf":1.0}},"df":1}}}}},"'":{"docs":{},"df":0,"a":{"docs":{"diag.html#declaring-a-lint":{"tf":1.0},"traits/hrtb.html#basic-matching-and-skolemization-leaks":{"tf":1.0},"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.0},"compiler-debugging.html#expensive-operations-in-logs":{"tf":1.0},"rustdoc.html#from-clean-to-crate":{"tf":1.0},"traits/canonicalization.html#executing-the-query":{"tf":1.0}},"df":6},"v":{"docs":{"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.0}},"df":1},"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{"compiletest.html#implementing-the-behavior-change":{"tf":1.7320508075688773}},"df":1}}},"c":{"docs":{},"df":0,"x":{"docs":{"query.html#adding-a-new-kind-of-query":{"tf":1.4142135623730952},"mir/visitor.html#mir-visitor":{"tf":1.0}},"df":2}}}},"p":{"docs":{},"df":0,"0":{"docs":{},"df":0,".":{"docs":{},"df":0,".":{"docs":{},"df":0,"p":{"docs":{},"df":0,"n":{"docs":{"traits/lowering-rules.html#lowering-impls":{"tf":1.0},"traits/lowering-rules.html#associated-type-values":{"tf":1.0}},"df":2}}}}}},"x":{"docs":{},"df":0,",":{"docs":{},"df":0,"f":{"docs":{"traits/hrtb.html#higher-ranked-trait-obligations":{"tf":1.0}},"df":1}}},"u":{"docs":{"traits/resolution.html#selection-during-translation":{"tf":1.0}},"df":1}},"s":{"docs":{},"df":0,"/":{"docs":{},"df":0,"w":{"docs":{},"df":0,"h":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"traits/resolution.html#candidate-assembly":{"tf":1.0}},"df":1}}}}}},"e":{"docs":{},"df":0,"m":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{"traits/lowering-to-logic.html#rust-traits-and-logic":{"tf":2.0},"traits/lowering-rules.html#lowering-impls":{"tf":1.0},"diag.html#declaring-a-lint":{"tf":1.4142135623730952},"compiler-debugging.html#getting-a-backtrace-for-errors":{"tf":2.0},"rustdoc.html#cheat-sheet":{"tf":1.0},"rustdoc.html#from-soup-to-nuts":{"tf":1.4142135623730952},"traits/lowering-to-logic.html#type-checking-normal-functions":{"tf":1.0},"traits/lowering-rules.html#trait-header":{"tf":2.0},"query.html#adding-a-new-kind-of-query":{"tf":2.23606797749979},"mir/passes.html#implementing-and-registering-a-pass":{"tf":1.4142135623730952},"traits/canonical-queries.html#canonical-queries":{"tf":1.4142135623730952},"param_env.html#parameter-environment":{"tf":1.0},"traits/canonicalization.html#canonicalization":{"tf":1.0},"traits/lowering-module.html#unit-tests":{"tf":1.0},"traits/index.html#trait-solving-new-style":{"tf":1.4142135623730952},"appendix/stupid-stats.html#compilercalls":{"tf":1.4142135623730952},"compiletest.html#adding-a-new-header-command":{"tf":1.7320508075688773},"traits/resolution.html#candidate-assembly":{"tf":1.0},"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.7320508075688773},"traits/lowering-rules.html#rule-names-and-cross-references":{"tf":1.0},"mir/visitor.html#mir-visitor":{"tf":1.4142135623730952},"traits/chalk-overview.html#an-overview-of-chalk":{"tf":1.0},"traits/hrtb.html#basic-matching-and-skolemization-leaks":{"tf":1.4142135623730952},"traits/specialization.html#specialization":{"tf":1.0},"rustc-driver.html#the-rustc-driver":{"tf":1.0},"traits/goals-and-clauses.html#domain-goals":{"tf":1.4142135623730952},"tests/adding.html#naming-your-test":{"tf":1.0},"variance.html#trait-variance-and-vtable-resolution":{"tf":1.4142135623730952},"traits/resolution.html#major-concepts":{"tf":1.4142135623730952},"rustdoc.html#from-crate-to-clean":{"tf":1.7320508075688773},"macro-expansion.html#the-macro-parser":{"tf":1.0},"traits/lowering-to-logic.html#type-checking-generic-functions-beyond-horn-clauses":{"tf":1.0},"rustdoc.html#from-clean-to-crate":{"tf":2.0},"compiletest.html#implementing-the-behavior-change":{"tf":2.23606797749979},"rustdoc.html#hot-potato":{"tf":1.0},"rustdoc.html#the-walking-tour-of-rustdoc":{"tf":1.4142135623730952},"appendix/glossary.html#appendix-c-glossary":{"tf":1.4142135623730952},"traits/chalk-overview.html#lowering":{"tf":1.4142135623730952},"traits/associated-types.html#associated-type-projection-and-normalization":{"tf":1.0}},"df":39,"e":{"docs":{},"df":0,"d":{"docs":{},"df":0,"(":{"docs":{},"df":0,"f":{"docs":{},"df":0,"o":{"docs":{},"df":0,"o":{"docs":{"traits/goals-and-clauses.html#coinductive-goals":{"tf":2.6457513110645909}},"df":1}}},"o":{"docs":{},"df":0,"p":{"docs":{},"df":0,"t":{"docs":{},"df":0,"i":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"<":{"docs":{},"df":0,"b":{"docs":{},"df":0,"o":{"docs":{},"df":0,"x":{"docs":{},"df":0,"<":{"docs":{},"df":0,"f":{"docs":{},"df":0,"o":{"docs":{},"df":0,"o":{"docs":{"traits/goals-and-clauses.html#coinductive-goals":{"tf":1.0}},"df":1}}}}}}},"t":{"docs":{"traits/associated-types.html#associated-type-projection-and-normalization":{"tf":1.0}},"df":1}}}}}}}},"t":{"docs":{"traits/lowering-module.html#unit-tests":{"tf":2.23606797749979},"traits/lowering-rules.html#trait-header":{"tf":2.0},"traits/goals-and-clauses.html#domain-goals":{"tf":1.0}},"df":3,"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"f":{"docs":{"traits/lowering-rules.html#lowering-impls":{"tf":1.0},"traits/goals-and-clauses.html#domain-goals":{"tf":1.4142135623730952},"traits/lowering-rules.html#transforming-the-lowered-where-clauses":{"tf":1.4142135623730952}},"df":3}}}}}}}},"p":{"docs":{},"df":0,"0":{"docs":{"traits/lowering-rules.html#associated-type-values":{"tf":1.4142135623730952}},"df":1}},"a":{"docs":{},"df":0,"0":{"docs":{"traits/lowering-rules.html#lowering-where-clauses":{"tf":1.0}},"df":1}},"x":{"docs":{"traits/goals-and-clauses.html#domain-goals":{"tf":1.0}},"df":1},"i":{"docs":{},"df":0,"3":{"docs":{},"df":0,"2":{"docs":{"traits/goals-and-clauses.html#domain-goals":{"tf":1.0}},"df":1}}},"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"l":{"docs":{},"df":0,"f":{"docs":{"traits/lowering-rules.html#trait-header":{"tf":1.4142135623730952},"traits/lowering-rules.html#associated-type-declarations":{"tf":1.0}},"df":2}}}}}}}}}}}}}}},"'":{"docs":{"rustdoc.html#dotting-is-and-crossing-ts":{"tf":1.0}},"df":1,"v":{"docs":{"traits/lowering-to-logic.html#type-checking-generic-functions-beyond-horn-clauses":{"tf":1.0},"appendix/stupid-stats.html#what-next":{"tf":1.0},"traits/canonical-queries.html#examples":{"tf":1.0}},"df":3},"d":{"docs":{"appendix/stupid-stats.html#what-next":{"tf":1.0}},"df":1},"l":{"docs":{},"df":0,"l":{"docs":{"appendix/stupid-stats.html#appendix-a-a-tutorial-on-creating-a-drop-in-replacement-for-rustc":{"tf":1.7320508075688773},"appendix/stupid-stats.html#compilercalls":{"tf":1.0},"traits/hrtb.html#higher-ranked-trait-obligations":{"tf":1.0},"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.0}},"df":4}},"m":{"docs":{"traits/canonical-queries.html#examples":{"tf":1.0},"traits/lowering-to-logic.html#type-checking-generic-functions-beyond-horn-clauses":{"tf":1.4142135623730952},"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.0}},"df":3}},".":{"docs":{"traits/specialization.html#specialization":{"tf":1.0},"compiler-debugging.html#debugging-llvm":{"tf":1.0},"type-inference.html#enforcing-equality--subtyping":{"tf":1.0},"traits/lowering-rules.html#lowering-traits":{"tf":1.0},"traits/chalk-overview.html#lowering":{"tf":1.0},"mir/regionck.html#skolemization-and-outlives-constraints":{"tf":1.0},"query.html#how-the-compiler-executes-a-query":{"tf":1.0},"appendix/background.html#what-is-a-free-region-or-a-free-variable-what-about-bound-region":{"tf":1.0},"diag.html#edition-gated-lints":{"tf":1.0},"appendix/stupid-stats.html#compilercalls":{"tf":1.0},"traits/goals-and-clauses.html#coinductive-goals":{"tf":1.0},"traits/lowering-to-logic.html#rust-traits-and-logic":{"tf":1.0},"how-to-build-and-run.html#running-xpy-and-building-a-stage1-compiler":{"tf":1.0},"appendix/glossary.html#appendix-c-glossary":{"tf":1.0},"query.html#queries-demand-driven-compilation":{"tf":1.0},"mir/regionck.html#mir-based-region-checking-nll":{"tf":1.0}},"df":16,"n":{"docs":{},"df":0,"o":{"docs":{},"df":0,"d":{"docs":{"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.0}},"df":1}}}},"n":{"docs":{},"df":0,"h":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"ty.html#allocating-and-working-with-types":{"tf":1.0},"method-lookup.html#method-lookup":{"tf":1.0},"method-lookup.html#candidate-assembly":{"tf":3.0}},"df":3,"i":{"docs":{},"df":0,"t":{"docs":{"traits/goals-and-clauses.html#domain-goals":{"tf":1.0}},"df":1}}}}},"c":{"docs":{},"df":0,"l":{"docs":{},"df":0,"u":{"docs":{},"df":0,"d":{"docs":{"compiler-debugging.html#getting-logging-output":{"tf":1.4142135623730952},"rustdoc.html#other-tricks-up-its-sleeve":{"tf":1.0},"traits/hrtb.html#basic-matching-and-skolemization-leaks":{"tf":1.0},"mir/regionck.html#final-example":{"tf":1.4142135623730952},"tests/adding.html#naming-your-test":{"tf":1.0},"tests/intro.html#testing-with-docker-images":{"tf":1.0},"name-resolution.html#scopes-and-ribs":{"tf":1.0},"traits/chalk-overview.html#parsing":{"tf":1.0},"compiler-debugging.html#debugging-llvm":{"tf":1.0},"macro-expansion.html#example":{"tf":1.0},"mir/regionck.html#back-to-our-example":{"tf":1.0},"ty.html#beyond-types-other-kinds-of-arena-allocated-data-structures":{"tf":1.0},"rustdoc.html#cheat-sheet":{"tf":1.0},"tests/adding.html#comment-explaining-what-the-test-is-about":{"tf":1.0},"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.0},"tests/intro.html#other-tests":{"tf":2.0},"high-level-overview.html#the-main-stages-of-compilation":{"tf":1.4142135623730952},"appendix/glossary.html#appendix-c-glossary":{"tf":1.4142135623730952},"mir/borrowck.html#major-phases-of-the-borrow-checker":{"tf":1.0},"tests/adding.html#revisions":{"tf":1.0},"method-lookup.html#method-lookup":{"tf":1.0},"traits/canonicalization.html#canonicalizing-the-query-result":{"tf":1.0},"tests/running.html#running-an-individual-test":{"tf":1.4142135623730952},"high-level-overview.html#crate-structure":{"tf":1.0},"mir/regionck.html#mir-based-region-checking-nll":{"tf":1.0},"hir.html#identifiers-in-the-hir":{"tf":1.0},"tests/intro.html#testing-on-emulators":{"tf":1.4142135623730952},"appendix/stupid-stats.html#overview-of-the-compilation-process":{"tf":1.7320508075688773}},"df":28}}},"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"s":{"docs":{},"df":0,"i":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{"traits/chalk-overview.html#an-overview-of-chalk":{"tf":1.0}},"df":1}}}}},"m":{"docs":{},"df":0,"p":{"docs":{},"df":0,"l":{"docs":{},"df":0,"e":{"docs":{},"df":0,"t":{"docs":{"name-resolution.html#todo":{"tf":1.0},"traits/goals-and-clauses.html#incomplete-chapter":{"tf":1.0}},"df":2}}},"a":{"docs":{},"df":0,"t":{"docs":{"diag.html#edition-gated-lints":{"tf":1.0}},"df":1}}}},"r":{"docs":{},"df":0,"p":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{"traits/chalk-overview.html#parsing":{"tf":1.0}},"df":1}}},"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{"incrcomp-debugging.html#tracking-down-incorrect-edges":{"tf":1.0}},"df":1}}}}}},"u":{"docs":{},"df":0,"r":{"docs":{"traits/resolution.html#candidate-assembly":{"tf":1.4142135623730952}},"df":1}},"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"m":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{"name-resolution.html#todo":{"tf":1.0},"hir.html#identifiers-in-the-hir":{"tf":1.0},"high-level-overview.html#the-main-stages-of-compilation":{"tf":1.0},"how-to-build-and-run.html#running-xpy-and-building-a-stage1-compiler":{"tf":1.4142135623730952},"incremental-compilation.html#incremental-compilation":{"tf":1.4142135623730952},"tests/adding.html#revisions":{"tf":1.4142135623730952},"incremental-compilation.html#the-try-mark-green-algorithm":{"tf":1.0},"high-level-overview.html#crate-structure":{"tf":1.0},"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.0},"incremental-compilation.html#improvements-to-the-basic-algorithm":{"tf":1.0},"query.html#queries-demand-driven-compilation":{"tf":1.0},"hir.html#out-of-band-storage-and-the--crate--type":{"tf":1.0},"tests/intro.html#compiletest-test-suites":{"tf":1.4142135623730952},"query.html#adding-a-new-kind-of-query":{"tf":1.0},"appendix/glossary.html#appendix-c-glossary":{"tf":1.7320508075688773}},"df":15,"_":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"g":{"docs":{"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.0}},"df":1}}}}}}}},"d":{"docs":{"appendix/background.html#what-is-a-dataflow-analysis":{"tf":1.0}},"df":1}}}},"d":{"docs":{},"df":0,"i":{"docs":{},"df":0,"c":{"docs":{"tests/adding.html#other-header-commands":{"tf":1.7320508075688773},"incrcomp-debugging.html#testing-the-dependency-graph":{"tf":1.0},"appendix/stupid-stats.html#compilercontroller":{"tf":1.4142135623730952},"traits/canonical-queries.html#a-trait-query-in-rustc":{"tf":1.0},"traits/goals-and-clauses.html#coinductive-goals":{"tf":1.0},"mir/passes.html#stealing":{"tf":1.0},"tests/intro.html#compiletest-test-suites":{"tf":1.0},"macro-expansion.html#example":{"tf":1.0},"variance.html#addendum-variance-on-traits":{"tf":1.0},"traits/chalk-overview.html#intermediate-representation-ir":{"tf":1.0},"appendix/glossary.html#appendix-c-glossary":{"tf":1.0},"traits/canonical-queries.html#examples":{"tf":1.0},"query.html#adding-a-new-kind-of-query":{"tf":1.0},"mir/index.html#mir-data-types":{"tf":1.0},"how-to-build-and-run.html#creating-a-rustup-toolchain":{"tf":1.0},"tests/adding.html#adding-new-tests":{"tf":1.0},"traits/lowering-rules.html#transforming-the-lowered-where-clauses":{"tf":1.4142135623730952},"traits/resolution.html#selection":{"tf":1.4142135623730952},"mir/regionck.html#skolemization-and-outlives-constraints":{"tf":1.0},"macro-expansion.html#the-macro-parser":{"tf":1.4142135623730952},"traits/canonicalization.html#canonicalizing-the-query":{"tf":1.4142135623730952},"variance.html#the-algorithm":{"tf":1.7320508075688773},"traits/lowering-rules.html#lowering-where-clauses":{"tf":1.4142135623730952},"mir/index.html#key-mir-vocabulary":{"tf":2.0}},"df":24},"v":{"docs":{},"df":0,"i":{"docs":{},"df":0,"d":{"docs":{},"df":0,"u":{"docs":{"compiletest.html#introduction":{"tf":1.0},"tests/running.html#running-an-individual-test":{"tf":1.4142135623730952},"appendix/stupid-stats.html#overview-of-the-compilation-process":{"tf":1.0},"hir.html#out-of-band-storage-and-the--crate--type":{"tf":1.0},"variance.html#dependency-graph-management":{"tf":1.0},"conventions.html#how-to-structure-your-pr":{"tf":1.4142135623730952},"compiletest.html#adding-a-new-header-command":{"tf":1.0}},"df":7}}}},"x":{"docs":{"hir.html#identifiers-in-the-hir":{"tf":1.0}},"df":1}},"e":{"docs":{"variance.html#variance-of-type-and-lifetime-parameters":{"tf":1.0},"mir/regionck.html#final-example":{"tf":1.0},"traits/canonical-queries.html#examples":{"tf":1.0},"variance.html#addendum-variance-on-traits":{"tf":1.0},"traits/lowering-rules.html#trait-header":{"tf":1.0},"appendix/stupid-stats.html#overview-of-the-compilation-process":{"tf":1.0},"mir/index.html#key-mir-vocabulary":{"tf":1.0}},"df":7,"n":{"docs":{},"df":0,"t":{"docs":{"conventions.html#tabs-vs-spaces":{"tf":1.0},"rustdoc.html#hot-potato":{"tf":1.0}},"df":2}},"p":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{"name-resolution.html#scopes-and-ribs":{"tf":1.0},"conventions.html#how-to-structure-your-pr":{"tf":1.0},"appendix/glossary.html#appendix-c-glossary":{"tf":1.0},"traits/index.html#trait-solving-new-style":{"tf":1.0},"miri.html#interpretation":{"tf":1.0}},"df":5}}}},"x":{"docs":{"appendix/glossary.html#appendix-c-glossary":{"tf":2.0},"rustdoc.html#from-clean-to-crate":{"tf":1.0},"traits/chalk-overview.html#intermediate-representation-ir":{"tf":1.0},"mir/regionck.html#representing-the-values-of-a-region-variable":{"tf":2.0},"mir/index.html#key-mir-vocabulary":{"tf":1.0},"name-resolution.html#name-resolution":{"tf":1.0},"const-eval.html#constant-evaluation":{"tf":1.0},"appendix/code-index.html#appendix-d-code-index":{"tf":1.0},"mir/index.html#mir-data-types":{"tf":1.0},"rustdoc.html#dotting-is-and-crossing-ts":{"tf":1.0},"mir/regionck.html#what-is-a-universe":{"tf":1.4142135623730952},"mir/passes.html#seeing-how-the-mir-changes-as-the-compiler-executes":{"tf":1.4142135623730952},"hir.html#identifiers-in-the-hir":{"tf":1.0},"rustdoc.html#cheat-sheet":{"tf":1.4142135623730952},"incremental-compilation.html#the-basic-algorithm":{"tf":1.0}},"df":15}},"u":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{"traits/goals-and-clauses.html#coinductive-goals":{"tf":2.8284271247461905}},"df":1}}}},"n":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"traits/goals-and-clauses.html#domain-goals":{"tf":1.0},"ty.html#the-tcx-and-how-it-uses-lifetimes":{"tf":1.0},"param_env.html#parameter-environment":{"tf":1.0},"name-resolution.html#scopes-and-ribs":{"tf":1.4142135623730952}},"df":4,"m":{"docs":{},"df":0,"o":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{"ty.html#allocating-and-working-with-types":{"tf":1.0},"ty.html#the-tcx-and-how-it-uses-lifetimes":{"tf":1.7320508075688773},"name-resolution.html#scopes-and-ribs":{"tf":1.0}},"df":3}}}}}}},"f":{"docs":{},"df":0,"c":{"docs":{},"df":0,"x":{"docs":{"appendix/glossary.html#appendix-c-glossary":{"tf":1.4142135623730952},"type-inference.html#creating-an-inference-context":{"tf":1.7320508075688773}},"df":2,".":{"docs":{},"df":0,"c":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"_":{"docs":{},"df":0,"s":{"docs":{},"df":0,"u":{"docs":{},"df":0,"b":{"docs":{"type-inference.html#trying-equality":{"tf":1.0}},"df":1}}},"e":{"docs":{},"df":0,"q":{"docs":{"type-inference.html#trying-equality":{"tf":1.0}},"df":1}}}}}},"a":{"docs":{},"df":0,"t":{"docs":{},"df":0,"(":{"docs":{},"df":0,".":{"docs":{},"df":0,".":{"docs":{},"df":0,".":{"docs":{},"df":0,")":{"docs":{},"df":0,".":{"docs":{},"df":0,"e":{"docs":{},"df":0,"q":{"docs":{},"df":0,"(":{"docs":{},"df":0,"t":{"docs":{"type-inference.html#enforcing-equality--subtyping":{"tf":1.0}},"df":1}}}}}}},")":{"docs":{},"df":0,".":{"docs":{},"df":0,"s":{"docs":{},"df":0,"u":{"docs":{},"df":0,"b":{"docs":{"type-inference.html#enforcing-equality--subtyping":{"tf":1.0}},"df":1}}}}}}}}}}}}},"l":{"docs":{},"df":0,"u":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"c":{"docs":{"traits/caching.html#caching-and-subtle-considerations-therewith":{"tf":1.0}},"df":1}}}}},"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"r":{"docs":{},"df":0,"u":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{},"df":0,"u":{"docs":{},"df":0,"r":{"docs":{"tests/intro.html#testing-infrastructure":{"tf":1.0},"diag.html#lints":{"tf":1.0}},"df":2}}}}}}}}}},"o":{"docs":{"tests/intro.html#compiletest-test-suites":{"tf":1.0},"appendix/stupid-stats.html#compilercalls":{"tf":1.0},"appendix/background.html#what-is-co--and-contra-variance":{"tf":1.0},"traits/canonicalization.html#canonicalizing-the-query-result":{"tf":1.0},"diag.html#error-messages":{"tf":1.0},"appendix/stupid-stats.html#compilercontroller":{"tf":1.4142135623730952},"compiler-debugging.html#getting-logging-output":{"tf":2.23606797749979},"diag.html#suggestions":{"tf":1.0},"compiletest.html#header-commands":{"tf":1.0}},"df":9,"r":{"docs":{},"df":0,"m":{"docs":{"appendix/glossary.html#appendix-c-glossary":{"tf":1.4142135623730952},"compiler-debugging.html#getting-logging-output":{"tf":1.0},"type-checking.html#type-collection":{"tf":1.0},"traits/resolution.html#selection-during-translation":{"tf":1.0},"mir/regionck.html#mir-based-region-checking-nll":{"tf":1.0},"tests/adding.html#normalization":{"tf":1.0},"query.html#queries-demand-driven-compilation":{"tf":1.0},"query.html#how-the-compiler-executes-a-query":{"tf":1.4142135623730952},"the-parser.html#the-parser":{"tf":1.0},"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.0},"appendix/stupid-stats.html#compilercontroller":{"tf":1.7320508075688773},"traits/chalk-overview.html#lowering":{"tf":1.0},"tests/intro.html#other-tests":{"tf":1.0},"mir/passes.html#implementing-and-registering-a-pass":{"tf":1.0},"hir.html#identifiers-in-the-hir":{"tf":1.0},"rustc-driver.html#the-rustc-driver":{"tf":1.0},"macro-expansion.html#the-macro-parser":{"tf":1.0},"traits/canonical-queries.html#a-trait-query-in-rustc":{"tf":1.4142135623730952},"traits/canonicalization.html#canonicalizing-the-query":{"tf":1.0},"appendix/stupid-stats.html#overview-of-the-compilation-process":{"tf":1.0},"macro-expansion.html#example":{"tf":1.0},"method-lookup.html#method-lookup":{"tf":1.0},"rustdoc.html#from-soup-to-nuts":{"tf":1.4142135623730952},"param_env.html#parameter-environment":{"tf":1.7320508075688773},"traits/chalk-overview.html#an-overview-of-chalk":{"tf":1.0},"appendix/code-index.html#appendix-d-code-index":{"tf":1.4142135623730952},"diag.html#suggestions":{"tf":2.0},"type-inference.html#creating-an-inference-context":{"tf":1.0}},"df":28}}},"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{"diag.html#declaring-a-lint":{"tf":1.0},"traits/canonical-queries.html#the-traditional-interactive-prolog-query":{"tf":1.0}},"df":2,"u":{"docs":{},"df":0,"m":{"docs":{"traits/goals-and-clauses.html#coinductive-goals":{"tf":1.0}},"df":1}}}}}},"e":{"docs":{},"df":0,"r":{"docs":{"traits/index.html#trait-solving-new-style":{"tf":1.0},"traits/canonicalization.html#executing-the-query":{"tf":2.8284271247461905},"type-checking.html#type-checking":{"tf":1.0},"type-inference.html#a-note-on-terminology":{"tf":1.0},"traits/resolution.html#selection":{"tf":1.0},"traits/hrtb.html#basic-matching-and-skolemization-leaks":{"tf":1.0},"traits/caching.html#an-example":{"tf":1.4142135623730952},"ty.html#allocating-and-working-with-types":{"tf":2.23606797749979},"traits/lowering-to-logic.html#lowering-to-logic":{"tf":1.4142135623730952},"type-inference.html#inference-variables":{"tf":2.449489742783178},"type-inference.html#type-inference":{"tf":2.23606797749979},"type-inference.html#creating-an-inference-context":{"tf":2.0},"traits/specialization.html#specialization":{"tf":1.0},"mir/regionck.html#extending-the-universal-regions-check":{"tf":1.0},"traits/canonicalization.html#canonicalization":{"tf":2.0},"traits/canonical-queries.html#examples":{"tf":1.4142135623730952},"mir/borrowck.html#major-phases-of-the-borrow-checker":{"tf":1.4142135623730952},"mir/regionck.html#skolemization-and-outlives-constraints":{"tf":1.0},"traits/resolution.html#candidate-assembly":{"tf":2.23606797749979},"query.html#how-the-compiler-executes-a-query":{"tf":1.0},"ty.html#the-tcx-and-how-it-uses-lifetimes":{"tf":2.449489742783178},"mir/regionck.html#back-to-our-example":{"tf":1.0},"mir/regionck.html#what-is-a-universe":{"tf":1.7320508075688773},"traits/resolution.html#selection-during-translation":{"tf":1.0},"traits/associated-types.html#associated-type-projection-and-normalization":{"tf":1.0},"traits/lowering-to-logic.html#rust-traits-and-logic":{"tf":1.0},"traits/canonical-queries.html#a-trait-query-in-rustc":{"tf":1.4142135623730952},"mir/regionck.html#mir-based-region-checking-nll":{"tf":2.0},"appendix/glossary.html#appendix-c-glossary":{"tf":2.8284271247461905},"traits/canonicalization.html#processing-the-canonicalized-query-result":{"tf":1.7320508075688773},"method-lookup.html#method-lookup":{"tf":1.0},"traits/associated-types.html#integration-with-unification":{"tf":1.0},"appendix/stupid-stats.html#overview-of-the-compilation-process":{"tf":1.0},"mir/regionck.html#universes-and-skolemized-region-elements":{"tf":1.7320508075688773},"type-inference.html#snapshots":{"tf":1.0},"variance.html#variance-of-type-and-lifetime-parameters":{"tf":2.0},"variance.html#dependency-graph-management":{"tf":1.7320508075688773},"type-inference.html#extracting-region-constraints":{"tf":1.0},"traits/canonical-queries.html#the-traditional-interactive-prolog-query":{"tf":1.0}},"df":39,"c":{"docs":{},"df":0,"t":{"docs":{},"df":0,"x":{"docs":{},"df":0,"t":{"docs":{"type-inference.html#creating-an-inference-context":{"tf":1.0},"mir/regionck.html#universes-and-skolemized-region-elements":{"tf":1.4142135623730952}},"df":2,"<":{"docs":{},"df":0,"'":{"docs":{},"df":0,"c":{"docs":{},"df":0,"x":{"docs":{"type-inference.html#creating-an-inference-context":{"tf":1.0}},"df":1}}}},"b":{"docs":{},"df":0,"u":{"docs":{},"df":0,"i":{"docs":{},"df":0,"l":{"docs":{},"df":0,"d":{"docs":{"type-inference.html#creating-an-inference-context":{"tf":1.0}},"df":1}}}}}}}}},"o":{"docs":{},"df":0,"k":{"docs":{"type-inference.html#enforcing-equality--subtyping":{"tf":1.4142135623730952},"type-inference.html#subtyping-obligations":{"tf":1.0}},"df":2}},"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"c":{"docs":{"type-inference.html#type-inference":{"tf":1.0},"type-inference.html#enforcing-equality--subtyping":{"tf":1.0},"type-inference.html#inference-variables":{"tf":1.0},"type-inference.html#region-constraints":{"tf":1.0}},"df":4}}},"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"u":{"docs":{},"df":0,"l":{"docs":{},"df":0,"t":{"docs":{"type-inference.html#enforcing-equality--subtyping":{"tf":1.0}},"df":1}}}}}}}},"a":{"docs":{},"df":0,"l":{"docs":{"traits/resolution.html#selection":{"tf":1.0}},"df":1}}},"i":{"docs":{},"df":0,"t":{"docs":{},"df":0,"i":{"docs":{"miri.html#miri":{"tf":1.0},"miri.html#interpretation":{"tf":1.0},"const-eval.html#constant-evaluation":{"tf":1.0},"mir/borrowck.html#mir-borrow-check":{"tf":1.0},"rustc-driver.html#the-rustc-driver":{"tf":1.0},"compiletest.html#adding-a-new-header-command":{"tf":1.0},"mir/passes.html#mir-passes":{"tf":1.0},"mir/regionck.html#back-to-our-example":{"tf":1.0},"mir/regionck.html#final-example":{"tf":1.0},"type-inference.html#lexical-region-resolution":{"tf":1.0},"traits/resolution.html#candidate-assembly":{"tf":1.0}},"df":11}}},"a":{"docs":{},"df":0,"c":{"docs":{},"df":0,"c":{"docs":{},"df":0,"u":{"docs":{},"df":0,"r":{"docs":{"name-resolution.html#todo":{"tf":1.0}},"df":1}}}}},"s":{"docs":{},"df":0,"p":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{"ty.html#allocating-and-working-with-types":{"tf":1.0},"incremental-compilation.html#the-try-mark-green-algorithm":{"tf":1.0},"rustc-driver.html#the-rustc-driver":{"tf":1.4142135623730952},"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.0},"conventions.html#using-crates-from-cratesio":{"tf":1.0},"tests/adding.html#what-kind-of-test-should-i-add":{"tf":1.4142135623730952},"the-parser.html#the-parser":{"tf":1.0}},"df":7}}}},"i":{"docs":{},"df":0,"g":{"docs":{},"df":0,"h":{"docs":{},"df":0,"t":{"docs":{"incremental-compilation.html#the-basic-algorithm":{"tf":1.0}},"df":1}}},"d":{"docs":{"compiler-debugging.html#expensive-operations-in-logs":{"tf":1.0},"miri.html#allocations":{"tf":1.0},"traits/goals-and-clauses.html#domain-goals":{"tf":1.4142135623730952},"rustdoc.html#from-soup-to-nuts":{"tf":1.0},"macro-expansion.html#the-macro-parser":{"tf":1.0},"rustc-driver.html#a-note-on-lifetimes":{"tf":1.0},"traits/lowering-rules.html#lowering-traits":{"tf":1.0}},"df":7}},"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"t":{"docs":{"traits/specialization.html#specialization":{"tf":1.0},"mir/passes.html#implementing-and-registering-a-pass":{"tf":1.0},"traits/lowering-rules.html#notation":{"tf":1.0},"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.0},"rustdoc.html#other-tricks-up-its-sleeve":{"tf":1.0},"conventions.html#use-todo-comments-for-things-you-dont-want-to-forget":{"tf":1.0},"query.html#how-the-compiler-executes-a-query":{"tf":1.0}},"df":7}}},"t":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{},"df":0,"i":{"docs":{"traits/canonicalization.html#processing-the-canonicalized-query-result":{"tf":1.4142135623730952},"traits/hrtb.html#basic-matching-and-skolemization-leaks":{"tf":1.0},"traits/lowering-rules.html#associated-type-declarations":{"tf":1.0},"traits/canonicalization.html#executing-the-query":{"tf":1.7320508075688773},"traits/canonicalization.html#canonicalizing-the-query-result":{"tf":1.0},"type-inference.html#inference-variables":{"tf":1.0},"mir/regionck.html#final-example":{"tf":1.0},"traits/canonical-queries.html#a-trait-query-in-rustc":{"tf":1.0},"mir/regionck.html#another-example":{"tf":1.0},"variance.html#variance-of-type-and-lifetime-parameters":{"tf":1.0},"traits/canonical-queries.html#the-traditional-interactive-prolog-query":{"tf":1.4142135623730952}},"df":11}},"c":{"docs":{"mir/index.html#mir-data-types":{"tf":1.0},"const-eval.html#constant-evaluation":{"tf":1.4142135623730952},"miri.html#allocations":{"tf":1.0},"ty.html#allocating-and-working-with-types":{"tf":1.0},"miri.html#miri":{"tf":1.0}},"df":5,"e":{"docs":{},"df":0,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"m":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"o":{"docs":{},"df":0,"(":{"docs":{},"df":0,"l":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"g":{"docs":{},"df":0,"t":{"docs":{},"df":0,"h":{"docs":{},"df":0,"_":{"docs":{},"df":0,"d":{"docs":{},"df":0,"e":{"docs":{},"df":0,"f":{"docs":{},"df":0,"_":{"docs":{},"df":0,"i":{"docs":{},"df":0,"d":{"docs":{"miri.html#miri":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}}}}}},"l":{"docs":{"compiler-debugging.html#formatting-graphviz-output-dot-files":{"tf":1.4142135623730952},"how-to-build-and-run.html#how-to-build-the-compiler-and-run-what-you-built":{"tf":1.0}},"df":2}},"e":{"docs":{},"df":0,"a":{"docs":{},"df":0,"d":{"docs":{"high-level-overview.html#crate-structure":{"tf":1.0},"type-inference.html#extracting-region-constraints":{"tf":1.0},"traits/canonical-queries.html#the-traditional-interactive-prolog-query":{"tf":1.0},"const-eval.html#constant-evaluation":{"tf":1.0},"traits/canonical-queries.html#a-trait-query-in-rustc":{"tf":1.0},"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.0},"mir/index.html#mir-data-types":{"tf":1.0},"hir.html#out-of-band-storage-and-the--crate--type":{"tf":1.0},"query.html#cycles-between-queries":{"tf":1.0},"diag.html#suggestions":{"tf":1.0},"rustc-driver.html#a-note-on-lifetimes":{"tf":1.0},"traits/canonicalization.html#processing-the-canonicalized-query-result":{"tf":1.0},"rustdoc.html#other-tricks-up-its-sleeve":{"tf":1.0},"tests/adding.html#normalization":{"tf":1.0},"mir/regionck.html#what-is-a-universe":{"tf":1.4142135623730952},"traits/canonical-queries.html#examples":{"tf":1.0},"diag.html#error-messages":{"tf":1.7320508075688773},"diag.html#declaring-a-lint":{"tf":1.4142135623730952},"how-to-build-and-run.html#create-a-configtoml":{"tf":1.0},"conventions.html#how-to-structure-your-pr":{"tf":1.0}},"df":20}}},"r":{"docs":{},"df":0,"u":{"docs":{},"df":0,"m":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{"incremental-compilation.html#the-query-dag":{"tf":1.0}},"df":1}}}},"c":{"docs":{},"df":0,"t":{"docs":{"compiletest.html#header-commands":{"tf":1.0},"traits/index.html#trait-solving-new-style":{"tf":1.0},"compiletest.html#adding-a-new-header-command":{"tf":1.0}},"df":3}}}}}},"t":{"docs":{},"df":0,"r":{"docs":{},"df":0,"a":{"docs":{"appendix/glossary.html#appendix-c-glossary":{"tf":1.0}},"df":1},"o":{"docs":{},"df":0,"d":{"docs":{},"df":0,"u":{"docs":{},"df":0,"c":{"docs":{"traits/associated-types.html#projection-equality":{"tf":1.0},"name-resolution.html#name-resolution":{"tf":1.0},"conventions.html#how-to-structure-your-pr":{"tf":1.4142135623730952},"traits/goals-and-clauses.html#incomplete-chapter":{"tf":1.0},"name-resolution.html#scopes-and-ribs":{"tf":1.4142135623730952},"traits/associated-types.html#equality-and-associated-types":{"tf":1.0},"mir/index.html#the-mir-mid-level-ir":{"tf":1.4142135623730952},"mir/regionck.html#what-is-a-universe":{"tf":1.0},"mir/regionck.html#mir-based-region-checking-nll":{"tf":1.0},"mir/index.html#key-mir-vocabulary":{"tf":1.4142135623730952},"appendix/background.html#what-is-a-free-region-or-a-free-variable-what-about-bound-region":{"tf":1.0},"name-resolution.html#overall-strategy":{"tf":1.0},"traits/goals-and-clauses.html#domain-goals":{"tf":1.0},"traits/associated-types.html#skolemized-associated-types":{"tf":1.0}},"df":14,"t":{"docs":{"compiletest.html#introduction":{"tf":1.4142135623730952},"mir/index.html#the-mir-mid-level-ir":{"tf":1.0},"mir/index.html#introduction-to-mir":{"tf":1.0}},"df":3}}}}}},"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"m":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"g":{"docs":{},"df":0,"l":{"docs":{"mir/index.html#key-mir-vocabulary":{"tf":1.0}},"df":1}}}},"e":{"docs":{},"df":0,"d":{"docs":{},"df":0,"i":{"docs":{"mir/passes.html#seeing-how-the-mir-changes-as-the-compiler-executes":{"tf":1.0},"appendix/stupid-stats.html#overview-of-the-compilation-process":{"tf":1.0},"hir.html#the-hir":{"tf":1.0},"mir/passes.html#stealing":{"tf":1.4142135623730952},"mir/index.html#the-mir-mid-level-ir":{"tf":1.0},"traits/hrtb.html#higher-ranked-trait-obligations":{"tf":1.0},"traits/chalk-overview.html#intermediate-representation-ir":{"tf":1.4142135623730952},"mir/passes.html#mir-passes":{"tf":1.0},"rustdoc.html#from-crate-to-clean":{"tf":1.4142135623730952},"conventions.html#how-to-structure-your-pr":{"tf":1.0},"high-level-overview.html#the-main-stages-of-compilation":{"tf":1.0},"appendix/glossary.html#appendix-c-glossary":{"tf":1.0}},"df":12}}}},"p":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"t":{"docs":{"appendix/glossary.html#appendix-c-glossary":{"tf":1.0},"miri.html#interpretation":{"tf":1.0},"tests/adding.html#header-commands-configuring-rustc":{"tf":1.0},"tests/adding.html#adding-new-tests":{"tf":1.4142135623730952},"variance.html#addendum-variance-on-traits":{"tf":1.0}},"df":5}},"o":{"docs":{},"df":0,"c":{"docs":{},"df":0,"e":{"docs":{},"df":0,"d":{"docs":{},"df":0,"u":{"docs":{},"df":0,"r":{"docs":{"type-checking.html#type-collection":{"tf":1.0}},"df":1}}}}}}}},"c":{"docs":{},"df":0,"h":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"g":{"docs":{"type-inference.html#a-note-on-terminology":{"tf":1.0}},"df":1}}}}},"i":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{"query.html#adding-a-new-kind-of-query":{"tf":1.0}},"df":1}}},"n":{"docs":{"appendix/stupid-stats.html#what-next":{"tf":1.0},"rustc-driver.html#the-rustc-driver":{"tf":1.4142135623730952},"traits/chalk-overview.html#well-formedness-checks":{"tf":1.0},"type-checking.html#type-collection":{"tf":1.4142135623730952},"compiler-debugging.html#getting-a-backtrace-for-errors":{"tf":1.0},"query.html#adding-a-new-kind-of-query":{"tf":1.0},"traits/associated-types.html#skolemized-associated-types":{"tf":1.0},"appendix/glossary.html#appendix-c-glossary":{"tf":1.4142135623730952},"mir/regionck.html#universes-and-skolemized-region-elements":{"tf":1.0},"ty.html#beyond-types-other-kinds-of-arena-allocated-data-structures":{"tf":1.0},"ty.html#allocating-and-working-with-types":{"tf":1.4142135623730952},"traits/canonical-queries.html#a-trait-query-in-rustc":{"tf":1.0},"ty.html#the--ty--module-representing-types":{"tf":1.0},"how-to-build-and-run.html#running-xpy-and-building-a-stage1-compiler":{"tf":1.0},"appendix/stupid-stats.html#appendix-a-a-tutorial-on-creating-a-drop-in-replacement-for-rustc":{"tf":1.0},"appendix/code-index.html#appendix-d-code-index":{"tf":1.0},"miri.html#miri":{"tf":1.4142135623730952},"query.html#how-the-compiler-executes-a-query":{"tf":1.0},"high-level-overview.html#crate-structure":{"tf":1.0},"rustc-driver.html#a-note-on-lifetimes":{"tf":1.4142135623730952},"rustdoc.html#the-walking-tour-of-rustdoc":{"tf":1.4142135623730952},"how-to-build-and-run.html#create-a-configtoml":{"tf":1.0}},"df":22,"e":{"docs":{},"df":0,"t":{"docs":{"tests/adding.html#naming-your-test":{"tf":1.0},"how-to-build-and-run.html#running-xpy-and-building-a-stage1-compiler":{"tf":1.0}},"df":2}}},"a":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{"tests/intro.html#testing-on-emulators":{"tf":1.0},"method-lookup.html#method-lookup":{"tf":1.0},"mir/regionck.html#what-is-a-universe":{"tf":1.0},"traits/caching.html#where-clauses-and-the-local-vs-global-cache":{"tf":1.0},"appendix/glossary.html#appendix-c-glossary":{"tf":1.0},"traits/canonical-queries.html#the-traditional-interactive-prolog-query":{"tf":1.0},"appendix/stupid-stats.html#appendix-a-a-tutorial-on-creating-a-drop-in-replacement-for-rustc":{"tf":1.0}},"df":7}}},"f":{"docs":{},"df":0,"a":{"docs":{},"df":0,"c":{"docs":{"appendix/stupid-stats.html#appendix-a-a-tutorial-on-creating-a-drop-in-replacement-for-rustc":{"tf":1.0},"name-resolution.html#name-resolution":{"tf":1.0},"appendix/stupid-stats.html#overview-of-the-compilation-process":{"tf":1.4142135623730952},"rustdoc.html#from-clean-to-crate":{"tf":1.0},"traits/resolution.html#selection":{"tf":1.0},"traits/canonical-queries.html#the-traditional-interactive-prolog-query":{"tf":1.0},"macro-expansion.html#the-macro-parser":{"tf":1.7320508075688773}},"df":7}}},"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{"tests/intro.html#further-reading":{"tf":1.0},"traits/canonical-queries.html#the-traditional-interactive-prolog-query":{"tf":1.4142135623730952},"traits/lowering-to-logic.html#type-checking-normal-functions":{"tf":1.4142135623730952},"tests/intro.html#testing-on-emulators":{"tf":1.0},"type-inference.html#subtyping-obligations":{"tf":1.0},"ty.html#the-tcx-and-how-it-uses-lifetimes":{"tf":1.0},"mir/passes.html#seeing-how-the-mir-changes-as-the-compiler-executes":{"tf":1.0},"mir/regionck.html#mir-based-region-checking-nll":{"tf":1.0},"traits/hrtb.html#higher-ranked-trait-obligations":{"tf":1.0},"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.4142135623730952},"traits/resolution.html#selection-during-translation":{"tf":1.0},"type-inference.html#enforcing-equality--subtyping":{"tf":1.4142135623730952}},"df":12,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"g":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{"macro-expansion.html#the-macro-parser":{"tf":1.0}},"df":1}}}}}}}},"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{"mir/regionck.html#another-example":{"tf":1.4142135623730952}},"df":1}}}}},"n":{"docs":{},"df":0,"t":{"docs":{"query.html#adding-a-new-kind-of-query":{"tf":1.0},"mir/regionck.html#mir-based-region-checking-nll":{"tf":1.0}},"df":2,"i":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{"traits/lowering-module.html#unit-tests":{"tf":1.0},"tests/adding.html#editing-and-updating-the-reference-files":{"tf":1.0}},"df":2}}}},"d":{"docs":{"traits/resolution.html#overview":{"tf":1.0},"traits/chalk-overview.html#parsing":{"tf":1.0},"high-level-overview.html#crate-structure":{"tf":1.0},"high-level-overview.html#the-main-stages-of-compilation":{"tf":1.0},"variance.html#trait-variance-and-vtable-resolution":{"tf":1.0},"mir/index.html#key-mir-vocabulary":{"tf":1.0},"tests/adding.html#guide-to-the-ui-tests":{"tf":1.0},"tests/adding.html#revisions":{"tf":1.0}},"df":8}},"g":{"docs":{"const-eval.html#constant-evaluation":{"tf":1.0},"compiler-debugging.html#getting-a-backtrace-for-errors":{"tf":2.449489742783178},"type-inference.html#inference-variables":{"tf":1.0}},"df":3,"r":{"docs":{"traits/associated-types.html#integration-with-unification":{"tf":1.4142135623730952},"type-inference.html#inference-variables":{"tf":1.4142135623730952},"tests/intro.html#testing-infrastructure":{"tf":1.0},"hir.html#out-of-band-storage-and-the--crate--type":{"tf":1.0},"traits/associated-types.html#equality-and-associated-types":{"tf":1.0}},"df":5}}},"o":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"traits/goals-and-clauses.html#domain-goals":{"tf":1.0},"traits/associated-types.html#associated-type-projection-and-normalization":{"tf":2.23606797749979},"traits/associated-types.html#skolemized-associated-types":{"tf":1.0}},"df":3,"a":{"docs":{},"df":0,"t":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"m":{"docs":{"traits/associated-types.html#skolemized-associated-types":{"tf":1.4142135623730952}},"df":1,")":{"docs":{},"df":0,"<":{"docs":{},"df":0,"t":{"docs":{"traits/associated-types.html#projection-equality":{"tf":1.0},"traits/associated-types.html#skolemized-associated-types":{"tf":1.0}},"df":2}}}}}}}}},"<":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"m":{"docs":{"traits/goals-and-clauses.html#domain-goals":{"tf":1.0}},"df":1}}}}},">":{"docs":{},"df":0,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"m":{"docs":{"traits/associated-types.html#projection-equality":{"tf":2.0},"traits/associated-types.html#associated-type-projection-and-normalization":{"tf":2.0}},"df":2}}}}}}}}}}}}}}}},"a":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{"traits/lowering-rules.html#transforming-the-lowered-where-clauses":{"tf":1.0},"type-inference.html#extracting-region-constraints":{"tf":1.0}},"df":2}}},"u":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{"mir/regionck.html#representing-the-values-of-a-region-variable":{"tf":1.0},"variance.html#trait-variance-and-vtable-resolution":{"tf":1.0},"macro-expansion.html#the-macro-parser":{"tf":1.0},"mir/regionck.html#another-example":{"tf":1.0},"variance.html#variance-and-object-types":{"tf":1.0}},"df":5}}}},"p":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{"variance.html#variance-and-associated-types":{"tf":1.0},"traits/lowering-to-logic.html#rust-traits-and-logic":{"tf":1.0},"rustc-driver.html#the-rustc-driver":{"tf":1.0},"mir/borrowck.html#major-phases-of-the-borrow-checker":{"tf":1.0},"variance.html#addendum-variance-on-traits":{"tf":1.0},"appendix/glossary.html#appendix-c-glossary":{"tf":1.0},"traits/canonicalization.html#canonicalizing-the-query-result":{"tf":1.0},"traits/specialization.html#specialization":{"tf":1.0},"high-level-overview.html#the-main-stages-of-compilation":{"tf":1.4142135623730952},"name-resolution.html#name-resolution":{"tf":1.4142135623730952},"incremental-compilation.html#the-basic-algorithm":{"tf":1.7320508075688773},"macro-expansion.html#the-macro-parser":{"tf":1.0},"traits/canonical-queries.html#a-trait-query-in-rustc":{"tf":1.0},"appendix/stupid-stats.html#compilercalls":{"tf":1.7320508075688773},"query.html#queries-demand-driven-compilation":{"tf":1.0},"incremental-compilation.html#the-try-mark-green-algorithm":{"tf":1.4142135623730952},"incremental-compilation.html#the-query-dag":{"tf":1.0},"traits/goals-and-clauses.html#domain-goals":{"tf":1.7320508075688773},"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":2.6457513110645909}},"df":19,"_":{"docs":{},"df":0,"p":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{},"df":0,"h":{"docs":{"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.4142135623730952}},"df":1}}}}}}}},"v":{"docs":{},"df":0,"o":{"docs":{},"df":0,"k":{"docs":{"miri.html#interpretation":{"tf":1.0},"query.html#adding-a-new-kind-of-query":{"tf":1.0},"mir/regionck.html#mir-based-region-checking-nll":{"tf":1.4142135623730952},"miri.html#miri":{"tf":2.23606797749979},"traits/lowering-module.html#unit-tests":{"tf":1.0},"traits/lowering-module.html#the--program_clauses_for--query":{"tf":1.0},"compiletest.html#implementing-the-behavior-change":{"tf":1.7320508075688773},"high-level-overview.html#crate-structure":{"tf":1.0},"method-lookup.html#candidate-assembly":{"tf":1.0},"hir.html#out-of-band-storage-and-the--crate--type":{"tf":1.0},"traits/canonical-queries.html#examples":{"tf":1.0},"mir/visitor.html#mir-visitor":{"tf":1.0},"query.html#how-the-compiler-executes-a-query":{"tf":2.0},"high-level-overview.html#the-main-stages-of-compilation":{"tf":1.0},"type-inference.html#snapshots":{"tf":1.0},"query.html#cycles-between-queries":{"tf":2.0},"type-inference.html#extracting-region-constraints":{"tf":2.0},"mir/borrowck.html#major-phases-of-the-borrow-checker":{"tf":1.0},"traits/resolution.html#candidate-assembly":{"tf":1.0},"tests/running.html#running-an-individual-test":{"tf":1.4142135623730952},"query.html#invoking-queries":{"tf":1.7320508075688773},"query.html#queries-demand-driven-compilation":{"tf":1.7320508075688773}},"df":22},"l":{"docs":{},"df":0,"v":{"docs":{"ty.html#allocating-and-working-with-types":{"tf":1.0},"about-this-guide.html#about-this-guide":{"tf":1.0},"type-inference.html#subtyping-obligations":{"tf":1.0},"incremental-compilation.html#the-try-mark-green-algorithm":{"tf":1.0},"variance.html#constraints":{"tf":1.0},"traits/index.html#trait-solving-new-style":{"tf":1.4142135623730952},"traits/lowering-rules.html#function-and-constant-values":{"tf":1.0}},"df":7}},"c":{"docs":{"macro-expansion.html#macro-expansion":{"tf":1.4142135623730952},"macro-expansion.html#the-macro-parser":{"tf":2.8284271247461905},"diag.html#edition-gated-lints":{"tf":1.0},"query.html#adding-a-new-kind-of-query":{"tf":1.4142135623730952},"macro-expansion.html#example":{"tf":1.4142135623730952}},"df":5}},"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"s":{"docs":{"traits/hrtb.html#higher-ranked-trait-obligations":{"tf":1.0}},"df":1}}},"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{"variance.html#variance-of-type-and-lifetime-parameters":{"tf":1.0},"variance.html#constraints":{"tf":1.0},"variance.html#addendum-variance-on-traits":{"tf":1.0},"variance.html#the-algorithm":{"tf":1.7320508075688773},"variance.html#variance-and-associated-types":{"tf":1.7320508075688773}},"df":5}}}},"l":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{"rustdoc.html#from-crate-to-clean":{"tf":1.0},"rustdoc.html#hot-potato":{"tf":1.0},"how-to-build-and-run.html#create-a-configtoml":{"tf":1.0},"compiletest.html#header-commands":{"tf":1.0}},"df":4}}}},"d":{"docs":{"mir/passes.html#mir-passes":{"tf":1.7320508075688773},"hir.html#out-of-band-storage-and-the--crate--type":{"tf":1.4142135623730952},"traits/lowering-module.html#unit-tests":{"tf":1.0},"hir.html#hir-bodies":{"tf":1.0},"appendix/glossary.html#appendix-c-glossary":{"tf":1.7320508075688773},"query.html#queries-demand-driven-compilation":{"tf":1.0},"ty.html#beyond-types-other-kinds-of-arena-allocated-data-structures":{"tf":1.0},"traits/caching.html#an-example":{"tf":1.0},"hir.html#the-hir-map":{"tf":2.0},"query.html#adding-a-new-kind-of-query":{"tf":1.0},"traits/lowering-module.html#the--program_clauses_for--query":{"tf":1.0},"hir.html#identifiers-in-the-hir":{"tf":1.4142135623730952},"appendix/stupid-stats.html#overview-of-the-compilation-process":{"tf":1.0}},"df":13,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{"traits/canonicalization.html#canonicalization":{"tf":1.0},"how-to-build-and-run.html#running-xpy-and-building-a-stage1-compiler":{"tf":1.0},"variance.html#variance-and-associated-types":{"tf":2.23606797749979},"macro-expansion.html#the-macro-parser":{"tf":1.4142135623730952}},"df":4,"i":{"docs":{},"df":0,"t":{"docs":{},"df":0,"y":{"docs":{},"df":0,">":{"docs":{},"df":0,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"o":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{"variance.html#variance-and-associated-types":{"tf":1.4142135623730952}},"df":1}}}}}}}},"f":{"docs":{},"df":0,"i":{"docs":{"mir/regionck.html#representing-the-values-of-a-region-variable":{"tf":1.0},"mir/index.html#mir-data-types":{"tf":1.4142135623730952},"mir/index.html#key-mir-vocabulary":{"tf":1.4142135623730952},"mir/regionck.html#what-is-a-universe":{"tf":1.0},"traits/resolution.html#candidate-assembly":{"tf":1.0},"traits/lowering-module.html#the--program_clauses_for--query":{"tf":1.0},"hir.html#identifiers-in-the-hir":{"tf":2.449489742783178},"traits/resolution.html#selection-during-translation":{"tf":1.0},"appendix/glossary.html#appendix-c-glossary":{"tf":2.23606797749979},"tests/adding.html#naming-your-test":{"tf":1.0},"macro-expansion.html#example":{"tf":1.0}},"df":11}}}}},"a":{"docs":{"traits/caching.html#an-example":{"tf":1.0},"incrcomp-debugging.html#testing-the-dependency-graph":{"tf":1.0},"compiler-debugging.html#debugging-llvm":{"tf":1.0},"mir/regionck.html#subtyping-and-skolemization":{"tf":1.0},"rustdoc.html#dotting-is-and-crossing-ts":{"tf":1.0},"mir/regionck.html#what-is-a-universe":{"tf":2.0},"type-inference.html#inference-variables":{"tf":1.0},"traits/canonical-queries.html#canonical-queries":{"tf":1.4142135623730952},"traits/canonicalization.html#executing-the-query":{"tf":1.0},"traits/index.html#trait-solving-new-style":{"tf":1.0},"compiler-debugging.html#getting-logging-output":{"tf":1.0},"type-inference.html#region-constraints":{"tf":1.0},"traits/lowering-to-logic.html#rust-traits-and-logic":{"tf":1.0},"traits/canonical-queries.html#the-traditional-interactive-prolog-query":{"tf":1.0},"appendix/background.html#what-is-a-control-flow-graph":{"tf":1.0},"traits/resolution.html#candidate-assembly":{"tf":1.0},"traits/canonicalization.html#canonicalization":{"tf":1.0},"incremental-compilation.html#the-basic-algorithm":{"tf":1.0},"ty.html#the-tcx-and-how-it-uses-lifetimes":{"tf":1.0},"variance.html#the-algorithm":{"tf":1.0},"query.html#queries-demand-driven-compilation":{"tf":1.4142135623730952}},"df":21,"l":{"docs":{"about-this-guide.html#about-this-guide":{"tf":1.0},"tests/adding.html#naming-your-test":{"tf":1.0}},"df":2}}}}},"r":{"docs":{"traits/lowering-rules.html#lowering-where-clauses":{"tf":1.4142135623730952},"incremental-compilation.html#the-try-mark-green-algorithm":{"tf":1.4142135623730952},"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.4142135623730952},"mir/index.html#key-mir-vocabulary":{"tf":1.0}},"df":4,"e":{"docs":{"incrcomp-debugging.html#dumping-the-graph":{"tf":1.0},"variance.html#dependency-graph-management":{"tf":1.0},"traits/canonicalization.html#executing-the-query":{"tf":1.0},"incremental-compilation.html#the-try-mark-green-algorithm":{"tf":2.0},"traits/canonicalization.html#canonicalizing-the-query-result":{"tf":1.0},"incrcomp-debugging.html#tracking-down-incorrect-edges":{"tf":1.0},"appendix/glossary.html#appendix-c-glossary":{"tf":1.0},"incremental-compilation.html#the-basic-algorithm":{"tf":1.7320508075688773}},"df":8,"p":{"docs":{},"df":0,"e":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{"tests/adding.html#adding-new-tests":{"tf":1.0},"traits/resolution.html#major-concepts":{"tf":1.0},"traits/canonicalization.html#canonicalization":{"tf":1.0},"traits/resolution.html#selection-during-translation":{"tf":1.0}},"df":4,"e":{"docs":{},"df":0,"d":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{"type-inference.html#lexical-region-resolution":{"tf":1.0}},"df":1}}}}}}},"l":{"docs":{},"df":0,"a":{"docs":{},"df":0,"c":{"docs":{"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.4142135623730952},"appendix/stupid-stats.html#appendix-a-a-tutorial-on-creating-a-drop-in-replacement-for-rustc":{"tf":1.4142135623730952},"mir/borrowck.html#major-phases-of-the-borrow-checker":{"tf":1.0},"traits/canonicalization.html#canonicalization":{"tf":1.0},"traits/canonicalization.html#canonicalizing-the-query":{"tf":1.0},"tests/adding.html#normalization":{"tf":1.7320508075688773},"traits/canonicalization.html#executing-the-query":{"tf":1.0},"high-level-overview.html#the-main-stages-of-compilation":{"tf":1.0},"traits/caching.html#an-example":{"tf":1.4142135623730952},"mir/regionck.html#subtyping-and-skolemization":{"tf":1.4142135623730952},"appendix/glossary.html#appendix-c-glossary":{"tf":1.0},"mir/regionck.html#mir-based-region-checking-nll":{"tf":1.0},"appendix/stupid-stats.html#overview-of-the-compilation-process":{"tf":1.4142135623730952},"about-this-guide.html#about-this-guide":{"tf":1.0}},"df":14,"e":{"docs":{},"df":0,"_":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"g":{"docs":{},"df":0,"i":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"s":{"docs":{},"df":0,"_":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"_":{"docs":{},"df":0,"m":{"docs":{},"df":0,"i":{"docs":{},"df":0,"r":{"docs":{"mir/regionck.html#mir-based-region-checking-nll":{"tf":1.4142135623730952}},"df":1}}}}}}}}}}}}}}}}},"y":{"docs":{"traits/caching.html#caching-and-subtle-considerations-therewith":{"tf":1.0}},"df":1}},"i":{"docs":{},"df":0,"c":{"docs":{"compiler-debugging.html#debugging-llvm":{"tf":1.0}},"df":1}}},"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"d":{"docs":{},"df":0,"u":{"docs":{},"df":0,"c":{"docs":{"traits/lowering-rules.html#associated-type-declarations":{"tf":1.0}},"df":1}}}},"e":{"docs":{},"df":0,"s":{"docs":{"mir/visitor.html#mir-visitor":{"tf":1.0},"variance.html#the-algorithm":{"tf":1.0},"diag.html#span":{"tf":1.0},"type-inference.html#inference-variables":{"tf":1.7320508075688773},"hir.html#hir-bodies":{"tf":1.0},"mir/regionck.html#representing-the-values-of-a-region-variable":{"tf":1.0},"compiletest.html#introduction":{"tf":1.0},"variance.html#trait-variance-and-vtable-resolution":{"tf":1.0},"mir/regionck.html#extending-the-universal-regions-check":{"tf":1.0},"mir/index.html#mir-data-types":{"tf":2.6457513110645909},"query.html#adding-a-new-kind-of-query":{"tf":1.4142135623730952},"mir/regionck.html#what-is-a-universe":{"tf":1.0},"mir/index.html#representing-constants":{"tf":1.0},"mir/regionck.html#skolemization-and-outlives-constraints":{"tf":1.0},"variance.html#addendum-variance-on-traits":{"tf":1.0},"diag.html#edition-gated-lints":{"tf":1.0},"high-level-overview.html#crate-structure":{"tf":1.0},"traits/canonicalization.html#executing-the-query":{"tf":1.0},"traits/canonicalization.html#canonicalization":{"tf":1.0},"type-checking.html#type-collection":{"tf":1.4142135623730952},"traits/chalk-overview.html#intermediate-representation-ir":{"tf":1.0},"traits/chalk-overview.html#lowering":{"tf":1.4142135623730952},"high-level-overview.html#the-main-stages-of-compilation":{"tf":1.0},"mir/passes.html#mir-passes":{"tf":1.4142135623730952},"traits/lowering-to-logic.html#rust-traits-and-logic":{"tf":1.0},"traits/resolution.html#candidate-assembly":{"tf":1.0},"ty.html#the--ty--module-representing-types":{"tf":1.4142135623730952},"traits/hrtb.html#basic-matching-and-skolemization-leaks":{"tf":1.0},"appendix/glossary.html#appendix-c-glossary":{"tf":1.4142135623730952},"mir/regionck.html#subtyping-and-skolemization":{"tf":1.4142135623730952},"ty.html#allocating-and-working-with-types":{"tf":1.4142135623730952},"traits/associated-types.html#skolemized-associated-types":{"tf":1.0},"traits/canonical-queries.html#examples":{"tf":1.7320508075688773},"ty.html#beyond-types-other-kinds-of-arena-allocated-data-structures":{"tf":1.0},"mir/regionck.html#back-to-our-example":{"tf":1.4142135623730952}},"df":35,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{"mir/index.html#the-mir-mid-level-ir":{"tf":1.0},"appendix/code-index.html#appendix-d-code-index":{"tf":1.4142135623730952},"traits/chalk-overview.html#intermediate-representation-ir":{"tf":1.4142135623730952},"appendix/background.html#what-is-a-control-flow-graph":{"tf":1.0},"const-eval.html#constant-evaluation":{"tf":1.4142135623730952},"type-checking.html#type-collection":{"tf":1.0},"rustdoc.html#the-walking-tour-of-rustdoc":{"tf":1.0},"appendix/glossary.html#appendix-c-glossary":{"tf":1.7320508075688773},"rustdoc.html#from-crate-to-clean":{"tf":1.0},"appendix/stupid-stats.html#overview-of-the-compilation-process":{"tf":1.0},"hir.html#out-of-band-storage-and-the--crate--type":{"tf":1.7320508075688773},"high-level-overview.html#the-main-stages-of-compilation":{"tf":1.0},"hir.html#the-hir":{"tf":1.7320508075688773}},"df":13,"a":{"docs":{},"df":0,"d":{"docs":{"miri.html#datastructures":{"tf":1.0}},"df":1}}}}}}}},"o":{"docs":{"appendix/glossary.html#appendix-c-glossary":{"tf":1.0},"compiler-debugging.html#debugging-the-compiler":{"tf":1.0},"rustdoc.html#dotting-is-and-crossing-ts":{"tf":1.0}},"df":3,"s":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{"about-this-guide.html#about-this-guide":{"tf":1.0},"high-level-overview.html#crate-structure":{"tf":1.0},"appendix/stupid-stats.html#appendix-a-a-tutorial-on-creating-a-drop-in-replacement-for-rustc":{"tf":1.0}},"df":3}}}}}},"r":{"docs":{},"df":0,"t":{"docs":{"diag.html#span":{"tf":1.0},"miri.html#miri":{"tf":1.0},"incrcomp-debugging.html#testing-the-dependency-graph":{"tf":1.0},"macro-expansion.html#the-macro-parser":{"tf":1.0},"mir/regionck.html#back-to-our-example":{"tf":1.0},"high-level-overview.html#crate-structure":{"tf":1.0},"appendix/glossary.html#appendix-c-glossary":{"tf":1.0},"incrcomp-debugging.html#tracking-down-incorrect-edges":{"tf":1.0},"diag.html#error-messages":{"tf":1.4142135623730952},"conventions.html#use-todo-comments-for-things-you-dont-want-to-forget":{"tf":1.0},"traits/resolution.html#confirmation":{"tf":1.4142135623730952},"mir/regionck.html#final-example":{"tf":1.0},"query.html#cycles-between-queries":{"tf":2.23606797749979},"appendix/code-index.html#appendix-d-code-index":{"tf":1.0},"compiler-debugging.html#getting-a-backtrace-for-errors":{"tf":1.4142135623730952}},"df":15}}}},"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{},"df":0,"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"c":{"docs":{"traits/specialization.html#specialization":{"tf":1.0}},"df":1}}}}}},"x":{"docs":{},"df":0,"p":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"t":{"docs":{"rustdoc.html#from-crate-to-clean":{"tf":1.0},"rustdoc.html#hot-potato":{"tf":1.0}},"df":2}}}}}},"l":{"docs":{"appendix/glossary.html#appendix-c-glossary":{"tf":1.0},"high-level-overview.html#crate-structure":{"tf":1.0},"hir.html#identifiers-in-the-hir":{"tf":1.0}},"df":3,"o":{"docs":{},"df":0,"c":{"docs":{"miri.html#allocations":{"tf":1.4142135623730952}},"df":1}},"i":{"docs":{"tests/running.html#running-an-individual-test":{"tf":1.0},"rustc-driver.html#a-note-on-lifetimes":{"tf":1.0},"traits/lowering-rules.html#associated-type-declarations":{"tf":1.0},"mir/index.html#the-mir-mid-level-ir":{"tf":1.0},"traits/lowering-rules.html#associated-type-values":{"tf":1.0},"variance.html#dependency-graph-management":{"tf":1.0}},"df":6},"a":{"docs":{},"df":0,"t":{"docs":{"traits/hrtb.html#basic-matching-and-skolemization-leaks":{"tf":2.23606797749979},"variance.html#variance-and-associated-types":{"tf":1.4142135623730952},"diag.html#error-messages":{"tf":1.0},"traits/lowering-rules.html#trait-header":{"tf":1.0},"type-inference.html#subtyping-obligations":{"tf":1.4142135623730952},"mir/regionck.html#subtyping-and-skolemization":{"tf":1.4142135623730952},"traits/canonical-queries.html#a-trait-query-in-rustc":{"tf":1.0},"type-inference.html#region-constraints":{"tf":1.0},"traits/lowering-rules.html#transforming-the-lowered-where-clauses":{"tf":1.0},"type-inference.html#lexical-region-resolution":{"tf":1.0},"type-checking.html#type-checking":{"tf":1.0}},"df":11,"i":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"s":{"docs":{},"df":0,"h":{"docs":{},"df":0,"i":{"docs":{},"df":0,"p":{"docs":{"mir/regionck.html#subtyping-and-skolemization":{"tf":1.7320508075688773},"mir/regionck.html#another-example":{"tf":1.0},"mir/regionck.html#final-example":{"tf":1.7320508075688773},"mir/regionck.html#extending-the-universal-regions-check":{"tf":1.0},"traits/lowering-rules.html#trait-header":{"tf":1.0},"variance.html#variance-of-type-and-lifetime-parameters":{"tf":1.0},"mir/regionck.html#mir-based-region-checking-nll":{"tf":1.0},"type-inference.html#extracting-region-constraints":{"tf":1.0},"traits/resolution.html#selection":{"tf":1.0},"variance.html#variance-and-associated-types":{"tf":1.0},"variance.html#variance-and-object-types":{"tf":1.4142135623730952},"mir/regionck.html#back-to-our-example":{"tf":1.0}},"df":12}}}}}}}}},"e":{"docs":{},"df":0,"v":{"docs":{"traits/associated-types.html#integration-with-unification":{"tf":1.0},"param_env.html#parameter-environment":{"tf":1.0},"rustdoc.html#hot-potato":{"tf":1.4142135623730952},"mir/regionck.html#back-to-our-example":{"tf":1.0},"rustdoc.html#other-tricks-up-its-sleeve":{"tf":1.0},"variance.html#dependency-graph-management":{"tf":1.0},"name-resolution.html#name-resolution":{"tf":1.0}},"df":7},"a":{"docs":{},"df":0,"s":{"docs":{"how-to-build-and-run.html#running-xpy-and-building-a-stage1-compiler":{"tf":1.0},"mir/index.html#key-mir-vocabulary":{"tf":1.0},"how-to-build-and-run.html#creating-a-rustup-toolchain":{"tf":1.0}},"df":3}}}},"n":{"docs":{},"df":0,"d":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"rustdoc.html#from-soup-to-nuts":{"tf":1.7320508075688773},"rustdoc.html#other-tricks-up-its-sleeve":{"tf":1.0},"rustdoc.html#cheat-sheet":{"tf":1.0},"rustdoc.html#the-walking-tour-of-rustdoc":{"tf":1.4142135623730952},"rustdoc.html#from-crate-to-clean":{"tf":1.0},"rustdoc.html#from-clean-to-crate":{"tf":2.8284271247461905}},"df":6}}},"a":{"docs":{},"df":0,"m":{"docs":{"incremental-compilation.html#footnotes":{"tf":1.0},"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.4142135623730952},"conventions.html#how-to-structure-your-pr":{"tf":1.7320508075688773},"how-to-build-and-run.html#running-xpy-and-building-a-stage1-compiler":{"tf":1.0}},"df":4}}},"g":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"s":{"docs":{"tests/adding.html#naming-your-test":{"tf":1.0},"tests/adding.html#adding-new-tests":{"tf":1.0},"tests/adding.html#what-kind-of-test-should-i-add":{"tf":1.0},"tests/adding.html#comment-explaining-what-the-test-is-about":{"tf":1.0},"tests/intro.html#other-tests":{"tf":1.0}},"df":5}}}},"i":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{"mir/passes.html#implementing-and-registering-a-pass":{"tf":1.0},"diag.html#declaring-a-lint":{"tf":1.0},"diag.html#edition-gated-lints":{"tf":1.0}},"df":3,"r":{"docs":{"compiletest.html#adding-a-new-test-file":{"tf":1.0}},"df":1},"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"_":{"docs":{},"df":0,"b":{"docs":{},"df":0,"u":{"docs":{},"df":0,"i":{"docs":{},"df":0,"l":{"docs":{},"df":0,"t":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{"diag.html#lint-groups":{"tf":1.0},"diag.html#edition-gated-lints":{"tf":1.0}},"df":2}}}}}}}}}}}},"o":{"docs":{},"df":0,"n":{"docs":{"type-inference.html#subtyping-obligations":{"tf":1.7320508075688773},"mir/regionck.html#extending-the-universal-regions-check":{"tf":2.8284271247461905},"mir/regionck.html#region-variables-and-constraints":{"tf":1.0},"traits/canonical-queries.html#examples":{"tf":1.0},"traits/canonicalization.html#canonicalizing-the-query-result":{"tf":1.0},"traits/regions.html#region-constraints":{"tf":1.0},"traits/hrtb.html#higher-ranked-trait-obligations":{"tf":2.449489742783178},"type-inference.html#inference-variables":{"tf":1.7320508075688773},"mir/borrowck.html#mir-borrow-check":{"tf":1.0},"mir/regionck.html#what-is-a-universe":{"tf":1.0},"mir/regionck.html#another-example":{"tf":1.7320508075688773},"type-inference.html#trying-equality":{"tf":1.4142135623730952},"mir/regionck.html#back-to-our-example":{"tf":2.0},"rustc-driver.html#the-rustc-driver":{"tf":1.0},"mir/regionck.html#representing-the-values-of-a-region-variable":{"tf":2.6457513110645909},"traits/goals-and-clauses.html#domain-goals":{"tf":2.449489742783178},"mir/regionck.html#mir-based-region-checking-nll":{"tf":3.4641016151377546},"appendix/background.html#what-is-a-free-region-or-a-free-variable-what-about-bound-region":{"tf":2.0},"traits/index.html#trait-solving-new-style":{"tf":1.4142135623730952},"type-inference.html#extracting-region-constraints":{"tf":3.1622776601683797},"mir/regionck.html#subtyping-and-skolemization":{"tf":2.6457513110645909},"traits/canonicalization.html#executing-the-query":{"tf":1.0},"type-inference.html#type-inference":{"tf":1.0},"traits/chalk-overview.html#lowering":{"tf":1.0},"type-inference.html#region-constraints":{"tf":2.0},"traits/associated-types.html#integration-with-unification":{"tf":1.0},"mir/regionck.html#universes-and-skolemized-region-elements":{"tf":2.449489742783178},"mir/regionck.html#skolemization-and-universes":{"tf":1.0},"mir/borrowck.html#major-phases-of-the-borrow-checker":{"tf":2.449489742783178},"appendix/glossary.html#appendix-c-glossary":{"tf":1.4142135623730952},"type-inference.html#a-note-on-terminology":{"tf":2.0},"mir/regionck.html#skolemization-and-outlives-constraints":{"tf":2.0},"traits/canonical-queries.html#a-trait-query-in-rustc":{"tf":1.4142135623730952},"type-inference.html#lexical-region-resolution":{"tf":2.449489742783178},"mir/regionck.html#universal-regions":{"tf":1.0},"traits/hrtb.html#basic-matching-and-skolemization-leaks":{"tf":3.1622776601683797},"traits/canonicalization.html#processing-the-canonicalized-query-result":{"tf":1.4142135623730952}},"df":37,"e":{"docs":{},"df":0,"l":{"docs":{"mir/regionck.html#representing-the-values-of-a-region-variable":{"tf":1.0}},"df":1,"e":{"docs":{},"df":0,"m":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{},"df":0,"e":{"docs":{},"df":0,"x":{"docs":{"mir/regionck.html#representing-the-values-of-a-region-variable":{"tf":1.0}},"df":1}}}}}}}}}}}},"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"f":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"c":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"x":{"docs":{},"df":0,"t":{"docs":{"mir/regionck.html#region-variables-and-constraints":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}},"_":{"docs":{},"df":0,"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{"traits/canonicalization.html#processing-the-canonicalized-query-result":{"tf":1.4142135623730952},"traits/canonicalization.html#canonicalizing-the-query-result":{"tf":1.4142135623730952},"type-inference.html#region-constraints":{"tf":1.0}},"df":3}}}}}}}}}}},"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{"traits/associated-types.html#integration-with-unification":{"tf":1.0}},"df":1}}}}}}}}},"k":{"docs":{"mir/borrowck.html#major-phases-of-the-borrow-checker":{"tf":1.0}},"df":1}}}}},"e":{"docs":{},"df":0,"x":{"docs":{"macro-expansion.html#the-macro-parser":{"tf":1.7320508075688773},"tests/adding.html#normalization":{"tf":1.7320508075688773}},"df":2}},"u":{"docs":{},"df":0,"l":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{"traits/associated-types.html#skolemized-associated-types":{"tf":1.0}},"df":1}}}},"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"d":{"docs":{"rustdoc.html#hot-potato":{"tf":1.0}},"df":1,"l":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"s":{"docs":{"high-level-overview.html#the-main-stages-of-compilation":{"tf":1.0}},"df":1}}}}}}}},"w":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{"tests/adding.html#comment-explaining-what-the-test-is-about":{"tf":1.0}},"df":1}}}}}}},"f":{"docs":{"method-lookup.html#candidate-search":{"tf":1.4142135623730952},"traits/lowering-rules.html#trait-header":{"tf":1.0},"traits/hrtb.html#basic-matching-and-skolemization-leaks":{"tf":1.0}},"df":3,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"h":{"docs":{"traits/canonical-queries.html#examples":{"tf":1.0},"traits/canonicalization.html#canonicalizing-the-query-result":{"tf":1.4142135623730952}},"df":2}}}},"e":{"docs":{},"df":0,"r":{"docs":{"tests/adding.html#guide-to-the-ui-tests":{"tf":1.0},"mir/index.html#key-mir-vocabulary":{"tf":1.0},"traits/goals-and-clauses.html#domain-goals":{"tf":2.0},"query.html#how-the-compiler-executes-a-query":{"tf":1.0},"traits/lowering-rules.html#associated-type-declarations":{"tf":1.0},"traits/chalk-overview.html#rules":{"tf":1.0},"miri.html#interpretation":{"tf":2.0},"tests/adding.html#adding-new-tests":{"tf":1.0},"high-level-overview.html#the-main-stages-of-compilation":{"tf":1.0},"traits/lowering-rules.html#lowering-rules":{"tf":1.4142135623730952},"traits/lowering-rules.html#trait-header":{"tf":1.0},"const-eval.html#constant-evaluation":{"tf":1.4142135623730952},"traits/lowering-to-logic.html#type-checking-normal-functions":{"tf":1.0},"mir/regionck.html#what-is-a-universe":{"tf":1.4142135623730952},"hir.html#the-hir-map":{"tf":1.4142135623730952},"mir/regionck.html#skolemization-and-universes":{"tf":2.0},"traits/goals-and-clauses.html#coinductive-goals":{"tf":1.0},"ty.html#the-tcx-and-how-it-uses-lifetimes":{"tf":2.23606797749979},"macro-expansion.html#example":{"tf":1.7320508075688773},"name-resolution.html#scopes-and-ribs":{"tf":1.0},"variance.html#addendum-variance-on-traits":{"tf":1.0},"traits/canonicalization.html#canonicalizing-the-query-result":{"tf":1.0},"traits/lowering-rules.html#lowering-impls":{"tf":1.0},"mir/passes.html#seeing-how-the-mir-changes-as-the-compiler-executes":{"tf":1.4142135623730952},"mir/visitor.html#mir-visitor":{"tf":1.4142135623730952},"traits/index.html#trait-solving-new-style":{"tf":1.0},"variance.html#variance-of-type-and-lifetime-parameters":{"tf":1.4142135623730952},"traits/hrtb.html#higher-ranked-trait-bounds":{"tf":1.0},"traits/resolution.html#candidate-assembly":{"tf":1.4142135623730952},"traits/hrtb.html#basic-matching-and-skolemization-leaks":{"tf":1.0},"rustc-driver.html#the-rustc-driver":{"tf":1.0},"traits/goals-and-clauses.html#goals-and-clauses-meta-structure":{"tf":1.0},"mir/regionck.html#subtyping-and-skolemization":{"tf":1.0},"traits/caching.html#an-example":{"tf":1.0},"miri.html#miri":{"tf":1.0},"ty.html#beyond-types-other-kinds-of-arena-allocated-data-structures":{"tf":1.7320508075688773},"traits/caching.html#caching-and-subtle-considerations-therewith":{"tf":1.0},"mir/borrowck.html#mir-borrow-check":{"tf":1.0},"type-inference.html#a-note-on-terminology":{"tf":1.7320508075688773},"query.html#cycles-between-queries":{"tf":1.0},"appendix/background.html#what-is-a-free-region-or-a-free-variable-what-about-bound-region":{"tf":2.449489742783178},"tests/adding.html#normalization":{"tf":1.0},"traits/associated-types.html#skolemized-associated-types":{"tf":1.0},"miri.html#allocations":{"tf":1.4142135623730952},"ty.html#allocating-and-working-with-types":{"tf":1.4142135623730952},"traits/resolution.html#major-concepts":{"tf":1.7320508075688773},"traits/lowering-rules.html#notation":{"tf":1.0},"traits/lowering-rules.html#rule-names-and-cross-references":{"tf":1.0},"appendix/glossary.html#appendix-c-glossary":{"tf":2.449489742783178},"rustc-driver.html#a-note-on-lifetimes":{"tf":1.7320508075688773},"traits/hrtb.html#higher-ranked-trait-obligations":{"tf":1.0},"miri.html#datastructures":{"tf":1.0},"variance.html#variance-and-associated-types":{"tf":1.0},"tests/adding.html#editing-and-updating-the-reference-files":{"tf":1.0},"mir/borrowck.html#major-phases-of-the-borrow-checker":{"tf":1.0},"mir/index.html#mir-data-types":{"tf":1.0},"hir.html#identifiers-in-the-hir":{"tf":1.4142135623730952}},"df":57,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"c":{"docs":{"ty.html#import-conventions":{"tf":1.0},"traits/associated-types.html#associated-type-projection-and-normalization":{"tf":1.0}},"df":2},"t":{"docs":{},"df":0,"i":{"docs":{"macro-expansion.html#the-macro-parser":{"tf":1.0}},"df":1}}}}}},"a":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{"tests/adding.html#comment-explaining-what-the-test-is-about":{"tf":1.0},"variance.html#dependency-graph-management":{"tf":1.0},"appendix/stupid-stats.html#what-next":{"tf":1.0},"how-to-build-and-run.html#running-xpy-and-building-a-stage1-compiler":{"tf":1.0},"conventions.html#how-to-structure-your-pr":{"tf":1.0}},"df":5}}}}},"i":{"docs":{},"df":0,"n":{"docs":{"incremental-compilation.html#the-try-mark-green-algorithm":{"tf":1.0},"variance.html#the-algorithm":{"tf":1.0}},"df":2}},"l":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{"mir/regionck.html#mir-based-region-checking-nll":{"tf":1.0},"traits/resolution.html#selection":{"tf":1.0},"appendix/glossary.html#appendix-c-glossary":{"tf":1.0}},"df":3}},"x":{"docs":{"traits/canonical-queries.html#the-traditional-interactive-prolog-query":{"tf":1.0},"traits/canonical-queries.html#examples":{"tf":1.0}},"df":2}}},"c":{"docs":{},"df":0,"e":{"docs":{},"df":0,"l":{"docs":{"rustdoc.html#from-soup-to-nuts":{"tf":1.0},"query.html#adding-a-new-kind-of-query":{"tf":1.0}},"df":2}}}},"t":{"docs":{},"df":0,"u":{"docs":{},"df":0,"r":{"docs":{},"df":0,"n":{"docs":{"query.html#queries-demand-driven-compilation":{"tf":2.0},"type-inference.html#enforcing-equality--subtyping":{"tf":2.23606797749979},"hir.html#the-hir-map":{"tf":2.0},"conventions.html#use-todo-comments-for-things-you-dont-want-to-forget":{"tf":1.0},"traits/resolution.html#selection":{"tf":1.0},"macro-expansion.html#the-macro-parser":{"tf":1.0},"mir/index.html#key-mir-vocabulary":{"tf":1.7320508075688773},"mir/regionck.html#representing-the-values-of-a-region-variable":{"tf":1.0},"miri.html#miri":{"tf":1.7320508075688773},"compiletest.html#header-commands":{"tf":1.0},"traits/specialization.html#specialization":{"tf":1.4142135623730952},"miri.html#interpretation":{"tf":1.0},"ty.html#allocating-and-working-with-types":{"tf":1.0},"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.0},"compiletest.html#adding-a-new-header-command":{"tf":1.0},"diag.html#error-messages":{"tf":1.0},"mir/regionck.html#final-example":{"tf":2.0},"type-inference.html#subtyping-obligations":{"tf":1.0},"mir/index.html#mir-data-types":{"tf":1.0},"variance.html#variance-and-object-types":{"tf":1.4142135623730952},"incremental-compilation.html#the-try-mark-green-algorithm":{"tf":1.4142135623730952},"traits/lowering-module.html#the--program_clauses_for--query":{"tf":1.0},"compiletest.html#implementing-the-behavior-change":{"tf":1.0},"compiletest.html#introduction":{"tf":1.0},"incremental-compilation.html#the-query-dag":{"tf":1.4142135623730952},"mir/regionck.html#skolemization-and-outlives-constraints":{"tf":1.0},"appendix/stupid-stats.html#compilercalls":{"tf":1.0},"type-inference.html#creating-an-inference-context":{"tf":1.4142135623730952},"incremental-compilation.html#improvements-to-the-basic-algorithm":{"tf":1.0},"const-eval.html#constant-evaluation":{"tf":1.0},"query.html#how-the-compiler-executes-a-query":{"tf":2.0},"rustdoc.html#from-soup-to-nuts":{"tf":1.0},"type-inference.html#trying-equality":{"tf":1.4142135623730952}},"df":33,"_":{"docs":{},"df":0,"p":{"docs":{},"df":0,"l":{"docs":{},"df":0,"a":{"docs":{},"df":0,"c":{"docs":{"mir/index.html#mir-data-types":{"tf":1.0}},"df":1}}}}}}}},"a":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{"traits/caching.html#where-clauses-and-the-local-vs-global-cache":{"tf":1.0}},"df":1}}}},"r":{"docs":{},"df":0,"u":{"docs":{},"df":0,"n":{"docs":{"tests/running.html#running-tests":{"tf":1.0}},"df":1}}},"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"v":{"docs":{"const-eval.html#constant-evaluation":{"tf":1.0}},"df":1}},"m":{"docs":{},"df":0,"b":{"docs":{},"df":0,"l":{"docs":{"hir.html#the-hir":{"tf":1.0}},"df":1}}}},"u":{"docs":{},"df":0,"l":{"docs":{},"df":0,"t":{"docs":{"tests/adding.html#guide-to-the-ui-tests":{"tf":1.0},"macro-expansion.html#example":{"tf":1.0},"traits/canonicalization.html#executing-the-query":{"tf":1.4142135623730952},"type-inference.html#extracting-region-constraints":{"tf":1.0},"variance.html#the-algorithm":{"tf":1.0},"traits/caching.html#caching-and-subtle-considerations-therewith":{"tf":1.7320508075688773},"variance.html#trait-variance-and-vtable-resolution":{"tf":1.0},"traits/canonical-queries.html#a-trait-query-in-rustc":{"tf":2.23606797749979},"incremental-compilation.html#improvements-to-the-basic-algorithm":{"tf":2.8284271247461905},"type-inference.html#inference-variables":{"tf":1.0},"rustdoc.html#dotting-is-and-crossing-ts":{"tf":1.7320508075688773},"rustdoc.html#cheat-sheet":{"tf":1.0},"traits/caching.html#where-clauses-and-the-local-vs-global-cache":{"tf":1.4142135623730952},"traits/hrtb.html#higher-ranked-trait-obligations":{"tf":1.4142135623730952},"incremental-compilation.html#the-basic-algorithm":{"tf":2.8284271247461905},"traits/resolution.html#selection-during-translation":{"tf":1.4142135623730952},"mir/passes.html#stealing":{"tf":2.449489742783178},"appendix/stupid-stats.html#overview-of-the-compilation-process":{"tf":1.4142135623730952},"compiletest.html#introduction":{"tf":1.0},"traits/canonical-queries.html#examples":{"tf":1.7320508075688773},"query.html#cycles-between-queries":{"tf":1.4142135623730952},"incremental-compilation.html#the-try-mark-green-algorithm":{"tf":2.23606797749979},"mir/borrowck.html#major-phases-of-the-borrow-checker":{"tf":1.4142135623730952},"hir.html#out-of-band-storage-and-the--crate--type":{"tf":1.0},"traits/canonicalization.html#canonicalizing-the-query":{"tf":1.0},"compiletest.html#adding-a-new-header-command":{"tf":1.0},"tests/adding.html#what-kind-of-test-should-i-add":{"tf":1.0},"tests/intro.html#compiletest-test-suites":{"tf":1.0},"query.html#adding-a-new-kind-of-query":{"tf":1.4142135623730952},"tests/adding.html#revisions":{"tf":1.4142135623730952},"const-eval.html#constant-evaluation":{"tf":1.4142135623730952},"query.html#how-the-compiler-executes-a-query":{"tf":1.4142135623730952},"traits/canonicalization.html#processing-the-canonicalized-query-result":{"tf":2.6457513110645909},"tests/adding.html#tests-that-do-not-result-in-compile-errors":{"tf":2.0},"variance.html#dependency-graph-management":{"tf":1.4142135623730952},"macro-expansion.html#the-macro-parser":{"tf":1.0},"traits/resolution.html#candidate-assembly":{"tf":1.0},"traits/index.html#trait-solving-new-style":{"tf":1.0},"query.html#queries-demand-driven-compilation":{"tf":1.4142135623730952},"compiletest.html#implementing-the-behavior-change":{"tf":1.0},"type-inference.html#subtyping-obligations":{"tf":1.0},"tests/running.html#running-tests":{"tf":1.0},"traits/resolution.html#major-concepts":{"tf":1.0},"how-to-build-and-run.html#creating-a-rustup-toolchain":{"tf":1.0},"traits/specialization.html#specialization":{"tf":1.0},"miri.html#datastructures":{"tf":1.4142135623730952},"traits/resolution.html#confirmation":{"tf":1.0},"traits/canonicalization.html#canonicalizing-the-query-result":{"tf":2.6457513110645909},"name-resolution.html#todo":{"tf":1.4142135623730952},"miri.html#miri":{"tf":1.7320508075688773},"variance.html#variance-and-associated-types":{"tf":1.0},"how-to-build-and-run.html#running-xpy-and-building-a-stage1-compiler":{"tf":1.7320508075688773},"mir/regionck.html#mir-based-region-checking-nll":{"tf":1.4142135623730952},"tests/intro.html#testing-on-emulators":{"tf":1.0}},"df":54,"<":{"docs":{},"df":0,"(":{"docs":{},"df":0,"s":{"docs":{},"df":0,"u":{"docs":{},"df":0,"b":{"docs":{},"df":0,"g":{"docs":{},"df":0,"o":{"docs":{"traits/associated-types.html#integration-with-unification":{"tf":1.0}},"df":1}}}}}},"q":{"docs":{},"df":0,"u":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"y":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"u":{"docs":{},"df":0,"l":{"docs":{},"df":0,"t":{"docs":{},"df":0,"<":{"docs":{},"df":0,"t":{"docs":{"traits/canonical-queries.html#a-trait-query-in-rustc":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}},"i":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{"rustdoc.html#the-walking-tour-of-rustdoc":{"tf":1.0}},"df":1}}},"o":{"docs":{},"df":0,"u":{"docs":{},"df":0,"r":{"docs":{},"df":0,"c":{"docs":{"appendix/background.html#what-is-a-dataflow-analysis":{"tf":1.0},"traits/chalk-overview.html#resources":{"tf":1.0}},"df":2}}},"l":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{"rustc-driver.html#the-rustc-driver":{"tf":1.4142135623730952},"traits/bibliography.html#bibliography":{"tf":1.0},"variance.html#trait-variance-and-vtable-resolution":{"tf":1.0},"traits/hrtb.html#higher-ranked-trait-bounds":{"tf":1.0},"traits/resolution.html#major-concepts":{"tf":1.7320508075688773},"traits/resolution.html#trait-resolution-old-style":{"tf":1.4142135623730952},"traits/resolution.html#candidate-assembly":{"tf":1.0},"traits/canonicalization.html#canonicalization":{"tf":1.0},"traits/resolution.html#selection-during-translation":{"tf":2.0},"appendix/stupid-stats.html#overview-of-the-compilation-process":{"tf":1.0},"high-level-overview.html#the-main-stages-of-compilation":{"tf":1.4142135623730952},"traits/resolution.html#overview":{"tf":1.0},"type-inference.html#lexical-region-resolution":{"tf":1.4142135623730952},"hir.html#the-hir":{"tf":1.0},"macro-expansion.html#macro-expansion":{"tf":1.0},"name-resolution.html#overall-strategy":{"tf":1.7320508075688773},"name-resolution.html#name-resolution":{"tf":2.0}},"df":17}},"v":{"docs":{"traits/resolution.html#overview":{"tf":1.7320508075688773},"traits/resolution.html#candidate-assembly":{"tf":1.7320508075688773},"conventions.html#how-to-structure-your-pr":{"tf":1.0},"name-resolution.html#namespaces":{"tf":1.0},"traits/resolution.html#selection-during-translation":{"tf":1.0},"name-resolution.html#overall-strategy":{"tf":1.4142135623730952},"traits/resolution.html#major-concepts":{"tf":1.0},"rustc-driver.html#the-rustc-driver":{"tf":1.0},"traits/resolution.html#selection":{"tf":2.449489742783178},"variance.html#dependency-graph-management":{"tf":1.0},"high-level-overview.html#the-main-stages-of-compilation":{"tf":1.7320508075688773}},"df":11,"e":{"docs":{},"df":0,"_":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"g":{"docs":{},"df":0,"i":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"s":{"docs":{},"df":0,"_":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{},"df":0,"_":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"p":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"t":{"docs":{},"df":0,"_":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{"type-inference.html#extracting-region-constraints":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"df":0,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"o":{"docs":{},"df":0,"l":{"docs":{},"df":0,"v":{"docs":{},"df":0,"e":{"docs":{},"df":0,"_":{"docs":{},"df":0,"c":{"docs":{},"df":0,"r":{"docs":{"name-resolution.html#name-resolution":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}},"p":{"docs":{"variance.html#variance-of-type-and-lifetime-parameters":{"tf":1.4142135623730952}},"df":1,"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"s":{"docs":{"rustdoc.html#from-clean-to-crate":{"tf":1.0},"traits/canonicalization.html#processing-the-canonicalized-query-result":{"tf":1.4142135623730952},"the-parser.html#the-parser":{"tf":1.0},"high-level-overview.html#the-main-stages-of-compilation":{"tf":1.0},"traits/canonicalization.html#canonicalizing-the-query":{"tf":1.0},"traits/canonicalization.html#canonicalizing-the-query-result":{"tf":1.0},"traits/canonical-queries.html#the-traditional-interactive-prolog-query":{"tf":1.7320508075688773},"traits/canonical-queries.html#a-trait-query-in-rustc":{"tf":1.0}},"df":8}}},"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{"variance.html#the-algorithm":{"tf":1.0},"variance.html#variance-and-object-types":{"tf":1.0},"mir/regionck.html#final-example":{"tf":1.0},"variance.html#constraints":{"tf":2.0},"variance.html#variance-and-associated-types":{"tf":1.0},"mir/regionck.html#skolemization-and-outlives-constraints":{"tf":1.0},"appendix/stupid-stats.html#appendix-a-a-tutorial-on-creating-a-drop-in-replacement-for-rustc":{"tf":1.0}},"df":7}}}},"t":{"docs":{"appendix/code-index.html#appendix-d-code-index":{"tf":1.0},"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.4142135623730952},"name-resolution.html#name-resolution":{"tf":1.0},"macro-expansion.html#example":{"tf":1.0},"high-level-overview.html#crate-structure":{"tf":1.0},"name-resolution.html#overall-strategy":{"tf":1.0}},"df":6,"r":{"docs":{},"df":0,"i":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{"tests/intro.html#testing-infrastructure":{"tf":1.0}},"df":1}}}}}},"q":{"docs":{},"df":0,"u":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{"tests/intro.html#testing-infrastructure":{"tf":1.0},"variance.html#dependency-graph-management":{"tf":1.0}},"df":2}}},"i":{"docs":{},"df":0,"r":{"docs":{"miri.html#allocations":{"tf":1.0},"high-level-overview.html#the-main-stages-of-compilation":{"tf":1.0},"mir/visitor.html#mir-visitor":{"tf":1.0},"mir/passes.html#stealing":{"tf":1.0},"mir/index.html#key-mir-vocabulary":{"tf":1.0},"incremental-compilation.html#the-basic-algorithm":{"tf":1.0},"conventions.html#how-to-structure-your-pr":{"tf":1.0},"incremental-compilation.html#improvements-to-the-basic-algorithm":{"tf":1.0},"variance.html#variance-and-object-types":{"tf":1.4142135623730952},"traits/canonical-queries.html#examples":{"tf":1.7320508075688773},"appendix/stupid-stats.html#what-next":{"tf":1.0},"traits/specialization.html#specialization":{"tf":1.0},"traits/lowering-module.html#unit-tests":{"tf":1.0},"variance.html#the-algorithm":{"tf":1.0},"traits/goals-and-clauses.html#coinductive-goals":{"tf":1.0},"traits/lowering-rules.html#associated-type-declarations":{"tf":1.0},"traits/resolution.html#overview":{"tf":1.0},"traits/goals-and-clauses.html#domain-goals":{"tf":1.0},"miri.html#miri":{"tf":1.0},"traits/resolution.html#selection":{"tf":1.0},"tests/adding.html#other-header-commands":{"tf":1.4142135623730952},"miri.html#interpretation":{"tf":1.0},"macro-expansion.html#example":{"tf":1.0}},"df":23}}}},"m":{"docs":{},"df":0,"e":{"docs":{},"df":0,"m":{"docs":{},"df":0,"b":{"docs":{"traits/lowering-rules.html#trait-header":{"tf":1.0},"traits/canonical-queries.html#a-trait-query-in-rustc":{"tf":1.0},"traits/canonicalization.html#executing-the-query":{"tf":1.0},"mir/passes.html#stealing":{"tf":1.0},"traits/index.html#trait-solving-new-style":{"tf":1.0}},"df":5}}},"o":{"docs":{},"df":0,"v":{"docs":{"tests/running.html#running-tests":{"tf":1.0},"high-level-overview.html#the-main-stages-of-compilation":{"tf":1.0},"compiler-debugging.html#getting-a-backtrace":{"tf":1.7320508075688773},"compiler-debugging.html#logging-etiquette":{"tf":1.0},"variance.html#variance-of-type-and-lifetime-parameters":{"tf":1.0},"mir/visitor.html#mir-visitor":{"tf":1.0},"appendix/glossary.html#appendix-c-glossary":{"tf":1.0},"traits/resolution.html#overview":{"tf":1.0},"mir/passes.html#implementing-and-registering-a-pass":{"tf":1.0},"compiler-debugging.html#getting-a-backtrace-for-errors":{"tf":1.4142135623730952},"rustdoc.html#hot-potato":{"tf":1.4142135623730952},"traits/resolution.html#candidate-assembly":{"tf":1.0},"conventions.html#use-todo-comments-for-things-you-dont-want-to-forget":{"tf":1.0}},"df":13},"t":{"docs":{"tests/intro.html#testing-on-emulators":{"tf":2.23606797749979},"conventions.html#how-to-structure-your-pr":{"tf":1.0}},"df":2}},"a":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{"mir/regionck.html#skolemization-and-outlives-constraints":{"tf":1.0},"traits/associated-types.html#integration-with-unification":{"tf":1.0}},"df":2,"d":{"docs":{"macro-expansion.html#example":{"tf":1.0},"appendix/background.html#what-is-a-control-flow-graph":{"tf":1.0},"mir/regionck.html#representing-the-values-of-a-region-variable":{"tf":1.0}},"df":3}}}}},"u":{"docs":{},"df":0,"s":{"docs":{"incremental-compilation.html#the-basic-algorithm":{"tf":1.0},"tests/intro.html#compiletest-test-suites":{"tf":1.0}},"df":2}},"a":{"docs":{},"df":0,"l":{"docs":{"appendix/stupid-stats.html#appendix-a-a-tutorial-on-creating-a-drop-in-replacement-for-rustc":{"tf":1.0},"high-level-overview.html#crate-structure":{"tf":1.0},"tests/intro.html#testing-on-emulators":{"tf":1.0},"incremental-compilation.html#incremental-compilation":{"tf":1.0},"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.0},"compiler-debugging.html#debugging-llvm":{"tf":1.0}},"df":6,"l":{"docs":{},"df":0,"i":{"docs":{"appendix/stupid-stats.html#what-next":{"tf":1.0},"high-level-overview.html#crate-structure":{"tf":1.0},"how-to-build-and-run.html#running-xpy-and-building-a-stage1-compiler":{"tf":1.0},"conventions.html#how-to-structure-your-pr":{"tf":1.0},"tests/adding.html#revisions":{"tf":1.0},"query.html#how-the-compiler-executes-a-query":{"tf":1.0},"traits/associated-types.html#skolemized-associated-types":{"tf":1.0},"hir.html#identifiers-in-the-hir":{"tf":1.0},"appendix/stupid-stats.html#overview-of-the-compilation-process":{"tf":1.4142135623730952},"traits/lowering-to-logic.html#type-checking-generic-functions-beyond-horn-clauses":{"tf":1.0},"traits/associated-types.html#associated-type-projection-and-normalization":{"tf":1.0},"traits/canonicalization.html#canonicalization":{"tf":1.4142135623730952},"tests/adding.html#adding-new-tests":{"tf":1.0},"macro-expansion.html#example":{"tf":1.0},"appendix/glossary.html#appendix-c-glossary":{"tf":1.0}},"df":15}},"i":{"docs":{},"df":0,"z":{"docs":{"query.html#queries-demand-driven-compilation":{"tf":1.0},"mir/regionck.html#another-example":{"tf":1.0}},"df":2}}},"c":{"docs":{},"df":0,"h":{"docs":{"mir/regionck.html#skolemization-and-outlives-constraints":{"tf":1.0},"incrcomp-debugging.html#dumping-the-graph":{"tf":1.4142135623730952},"traits/goals-and-clauses.html#coinductive-goals":{"tf":1.4142135623730952},"diag.html#error-messages":{"tf":1.0},"type-inference.html#lexical-region-resolution":{"tf":1.0}},"df":5,"a":{"docs":{},"df":0,"b":{"docs":{},"df":0,"l":{"docs":{"traits/goals-and-clauses.html#coinductive-goals":{"tf":1.0}},"df":1}}}}},"p":{"docs":{},"df":0,"p":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{"traits/canonicalization.html#executing-the-query":{"tf":1.0},"traits/canonicalization.html#canonicalizing-the-query-result":{"tf":1.0}},"df":2}}}},"d":{"docs":{"appendix/stupid-stats.html#overview-of-the-compilation-process":{"tf":1.0},"appendix/glossary.html#appendix-c-glossary":{"tf":1.0},"query.html#adding-a-new-kind-of-query":{"tf":1.0},"tests/intro.html#further-reading":{"tf":1.0},"traits/resolution.html#trait-resolution-old-style":{"tf":1.0},"traits/hrtb.html#basic-matching-and-skolemization-leaks":{"tf":1.0},"mir/index.html#mir-data-types":{"tf":1.0},"type-inference.html#inference-variables":{"tf":1.0},"mir/passes.html#mir-passes":{"tf":1.0},"traits/canonicalization.html#canonicalization":{"tf":1.0},"incremental-compilation.html#the-try-mark-green-algorithm":{"tf":1.0},"incremental-compilation.html#the-query-dag":{"tf":1.4142135623730952},"traits/bibliography.html#bibliography":{"tf":1.0},"traits/index.html#trait-solving-new-style":{"tf":1.0},"mir/passes.html#stealing":{"tf":2.23606797749979},"compiler-debugging.html#debugging-llvm":{"tf":1.0},"variance.html#dependency-graph-management":{"tf":1.4142135623730952},"traits/chalk-overview.html#lowering":{"tf":1.0},"mir/index.html#key-mir-vocabulary":{"tf":1.4142135623730952},"tests/intro.html#testing-on-emulators":{"tf":1.0},"tests/adding.html#normalization":{"tf":1.0},"rustdoc.html#other-tricks-up-its-sleeve":{"tf":1.0}},"df":22,"i":{"docs":{"how-to-build-and-run.html#running-xpy-and-building-a-stage1-compiler":{"tf":1.0},"mir/passes.html#mir-passes":{"tf":1.4142135623730952},"traits/associated-types.html#integration-with-unification":{"tf":1.0}},"df":3,"l":{"docs":{},"df":0,"i":{"docs":{"tests/intro.html#testing-on-emulators":{"tf":1.0}},"df":1}}},"m":{"docs":{"query.html#adding-a-new-kind-of-query":{"tf":1.0}},"df":1,"e":{"docs":{},"df":0,".":{"docs":{},"df":0,"m":{"docs":{},"df":0,"d":{"docs":{"high-level-overview.html#crate-structure":{"tf":1.0}},"df":1}}}}},"s":{"docs":{},"df":0,"(":{"docs":{},"df":0,"m":{"docs":{},"df":0,"a":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"_":{"docs":{},"df":0,"q":{"docs":{},"df":0,"u":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{"incremental-compilation.html#the-query-dag":{"tf":1.0}},"df":1}}}}}}}}}},"q":{"docs":{"incremental-compilation.html#the-try-mark-green-algorithm":{"tf":2.23606797749979}},"df":1}}},"a":{"docs":{},"df":0,"b":{"docs":{},"df":0,"l":{"docs":{"traits/chalk-overview.html#an-overview-of-chalk":{"tf":1.0},"mir/regionck.html#mir-based-region-checking-nll":{"tf":1.0},"traits/bibliography.html#bibliography":{"tf":1.0},"query.html#adding-a-new-kind-of-query":{"tf":1.0}},"df":4}}}},"s":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{"traits/goals-and-clauses.html#coinductive-goals":{"tf":1.0},"traits/goals-and-clauses.html#domain-goals":{"tf":1.0},"traits/goals-and-clauses.html#incomplete-chapter":{"tf":1.0},"method-lookup.html#method-lookup":{"tf":1.0},"mir/regionck.html#another-example":{"tf":1.0},"type-inference.html#snapshots":{"tf":1.0},"variance.html#the-algorithm":{"tf":1.0},"tests/adding.html#comment-explaining-what-the-test-is-about":{"tf":1.0},"traits/specialization.html#specialization":{"tf":1.4142135623730952},"variance.html#constraints":{"tf":1.0},"mir/regionck.html#skolemization-and-universes":{"tf":1.0},"traits/chalk-overview.html#blog-posts":{"tf":1.0},"traits/wf.html#well-formedness-checking":{"tf":1.0},"high-level-overview.html#crate-structure":{"tf":1.0},"variance.html#trait-variance-and-vtable-resolution":{"tf":1.0},"variance.html#variance-and-associated-types":{"tf":1.0},"hir.html#out-of-band-storage-and-the--crate--type":{"tf":1.0},"traits/caching.html#caching-and-subtle-considerations-therewith":{"tf":1.0},"traits/lowering-to-logic.html#type-checking-generic-functions-beyond-horn-clauses":{"tf":1.0},"variance.html#variance-and-object-types":{"tf":1.0}},"df":20}}}},"j":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{"tests/intro.html#other-tests":{"tf":1.0},"mir/regionck.html#skolemization-and-universes":{"tf":1.0}},"df":2}}}},"v":{"docs":{},"df":0,"i":{"docs":{},"df":0,"e":{"docs":{},"df":0,"w":{"docs":{"conventions.html#formatting-and-the-tidy-script":{"tf":1.0},"tests/adding.html#what-kind-of-test-should-i-add":{"tf":1.0},"conventions.html#how-to-structure-your-pr":{"tf":1.0}},"df":3}},"s":{"docs":{"tests/adding.html#revisions":{"tf":2.8284271247461905}},"df":1,"i":{"docs":{},"df":0,"t":{"docs":{"traits/canonical-queries.html#examples":{"tf":1.0}},"df":1}}}},"a":{"docs":{},"df":0,"m":{"docs":{},"df":0,"p":{"docs":{"traits/lowering-to-logic.html#type-checking-generic-functions-beyond-horn-clauses":{"tf":1.0}},"df":1}}},"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"s":{"docs":{"traits/lowering-rules.html#associated-type-declarations":{"tf":1.0},"type-inference.html#trying-equality":{"tf":1.0},"mir/visitor.html#traversal":{"tf":1.0}},"df":3}}}},"d":{"docs":{"incremental-compilation.html#the-try-mark-green-algorithm":{"tf":1.7320508075688773},"incremental-compilation.html#the-query-dag":{"tf":1.0},"incremental-compilation.html#the-basic-algorithm":{"tf":1.4142135623730952},"variance.html#dependency-graph-management":{"tf":1.0}},"df":4,"u":{"docs":{},"df":0,"c":{"docs":{"ty.html#the-tcx-and-how-it-uses-lifetimes":{"tf":1.0},"rustc-driver.html#a-note-on-lifetimes":{"tf":1.0},"const-eval.html#constant-evaluation":{"tf":1.0},"traits/resolution.html#candidate-assembly":{"tf":1.0}},"df":4}}},"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"m":{"docs":{},"df":0,"m":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{"query.html#adding-a-new-kind-of-query":{"tf":1.0},"type-inference.html#enforcing-equality--subtyping":{"tf":1.0},"traits/bibliography.html#bibliography":{"tf":1.0},"compiler-debugging.html#getting-logging-output":{"tf":1.0},"how-to-build-and-run.html#creating-a-rustup-toolchain":{"tf":1.0},"traits/hrtb.html#basic-matching-and-skolemization-leaks":{"tf":1.0}},"df":6}}}},"p":{"docs":{},"df":0,"i":{"docs":{},"df":0,"l":{"docs":{"appendix/glossary.html#appendix-c-glossary":{"tf":1.0}},"df":1}},"u":{"docs":{},"df":0,"t":{"docs":{"incremental-compilation.html#improvements-to-the-basic-algorithm":{"tf":1.0}},"df":1}}}},"n":{"docs":{},"df":0,"s":{"docs":{},"df":0,"i":{"docs":{},"df":0,"d":{"docs":{"method-lookup.html#candidate-assembly":{"tf":1.0}},"df":1}}}},"r":{"docs":{},"df":0,"d":{"docs":{"query.html#adding-a-new-kind-of-query":{"tf":1.0},"traits/canonicalization.html#processing-the-canonicalized-query-result":{"tf":1.4142135623730952},"rustc-driver.html#a-note-on-lifetimes":{"tf":1.0},"traits/caching.html#an-example":{"tf":1.0},"hir.html#out-of-band-storage-and-the--crate--type":{"tf":1.0},"appendix/stupid-stats.html#compilercalls":{"tf":1.4142135623730952},"type-inference.html#region-constraints":{"tf":1.0},"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.0},"type-inference.html#snapshots":{"tf":1.0}},"df":9,"_":{"docs":{},"df":0,"s":{"docs":{},"df":0,"p":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"i":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{},"df":0,"z":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{},"df":0,"i":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"_":{"docs":{},"df":0,"p":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{"traits/chalk-overview.html#well-formedness-checks":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}}}}}},"v":{"docs":{"query.html#cycles-between-queries":{"tf":1.4142135623730952}},"df":1}},"e":{"docs":{},"df":0,"i":{"docs":{},"df":0,"v":{"docs":{"method-lookup.html#candidate-search":{"tf":1.0},"variance.html#variance-and-object-types":{"tf":1.0},"method-lookup.html#method-lookup":{"tf":1.4142135623730952},"compiletest.html#implementing-the-behavior-change":{"tf":1.0},"method-lookup.html#steps":{"tf":1.4142135623730952},"method-lookup.html#candidate-assembly":{"tf":1.7320508075688773}},"df":6,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,".":{"docs":{},"df":0,"m":{"docs":{},"df":0,"e":{"docs":{},"df":0,"t":{"docs":{},"df":0,"h":{"docs":{},"df":0,"o":{"docs":{},"df":0,"d":{"docs":{"method-lookup.html#method-lookup":{"tf":1.0}},"df":1}}}}}}},"t":{"docs":{},"df":0,"y":{"docs":{},"df":0,"p":{"docs":{},"df":0,"e":{"docs":{},"df":0,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"m":{"docs":{},"df":0,"e":{"docs":{},"df":0,"t":{"docs":{},"df":0,"h":{"docs":{},"df":0,"o":{"docs":{},"df":0,"d":{"docs":{},"df":0,"(":{"docs":{},"df":0,"a":{"docs":{},"df":0,"d":{"docs":{},"df":0,"j":{"docs":{},"df":0,"(":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"e":{"docs":{},"df":0,"i":{"docs":{},"df":0,"v":{"docs":{"method-lookup.html#method-lookup":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}}}}}}},"d":{"docs":{},"df":0,"_":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{},"df":0,"u":{"docs":{"compiletest.html#implementing-the-behavior-change":{"tf":1.7320508075688773}},"df":1}}}}}}}}}}},"a":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{"traits/chalk-overview.html#an-overview-of-chalk":{"tf":1.0}},"df":1}},"l":{"docs":{"traits/canonicalization.html#processing-the-canonicalized-query-result":{"tf":1.0},"traits/specialization.html#specialization":{"tf":1.0}},"df":2}},"u":{"docs":{},"df":0,"r":{"docs":{},"df":0,"s":{"docs":{"traits/lowering-to-logic.html#rust-traits-and-logic":{"tf":1.0},"incremental-compilation.html#the-try-mark-green-algorithm":{"tf":1.0},"mir/visitor.html#mir-visitor":{"tf":1.0},"compiletest.html#adding-a-new-test-file":{"tf":1.0},"rustdoc.html#from-clean-to-crate":{"tf":1.0},"traits/goals-and-clauses.html#coinductive-goals":{"tf":1.0},"high-level-overview.html#the-main-stages-of-compilation":{"tf":1.0},"method-lookup.html#candidate-search":{"tf":1.0},"traits/resolution.html#candidate-assembly":{"tf":1.0},"miri.html#interpretation":{"tf":1.0},"name-resolution.html#overall-strategy":{"tf":1.0}},"df":11}}}},"b":{"docs":{},"df":0,"a":{"docs":{},"df":0,"s":{"docs":{"conventions.html#how-to-structure-your-pr":{"tf":1.7320508075688773}},"df":1}},"u":{"docs":{},"df":0,"i":{"docs":{},"df":0,"l":{"docs":{},"df":0,"d":{"docs":{"how-to-build-and-run.html#other-xpy-commands":{"tf":1.0},"compiler-debugging.html#getting-logging-output":{"tf":1.0},"how-to-build-and-run.html#running-xpy-and-building-a-stage1-compiler":{"tf":1.4142135623730952},"compiler-debugging.html#getting-a-backtrace":{"tf":1.0}},"df":4}}}}}},"o":{"docs":{},"df":0,"o":{"docs":{},"df":0,"t":{"docs":{"mir/regionck.html#what-is-a-universe":{"tf":3.4641016151377546},"mir/regionck.html#skolemization-and-outlives-constraints":{"tf":1.0},"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.0},"hir.html#out-of-band-storage-and-the--crate--type":{"tf":1.0},"miri.html#interpretation":{"tf":1.0},"the-parser.html#the-parser":{"tf":1.0}},"df":6}},"l":{"docs":{},"df":0,"l":{"docs":{"type-inference.html#snapshots":{"tf":1.0}},"df":1,"b":{"docs":{},"df":0,"a":{"docs":{},"df":0,"c":{"docs":{},"df":0,"k":{"docs":{},"df":0,"_":{"docs":{},"df":0,"t":{"docs":{},"df":0,"o":{"docs":{"type-inference.html#snapshots":{"tf":1.0}},"df":1}}}}}}}},"e":{"docs":{"mir/regionck.html#region-variables-and-constraints":{"tf":1.0}},"df":1}},"u":{"docs":{},"df":0,"t":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{"high-level-overview.html#crate-structure":{"tf":1.0}},"df":1}}},"n":{"docs":{},"df":0,"d":{"docs":{"traits/resolution.html#selection-during-translation":{"tf":1.0}},"df":1,"a":{"docs":{},"df":0,"b":{"docs":{},"df":0,"o":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{"rustdoc.html#from-soup-to-nuts":{"tf":1.0}},"df":1}}}}}}},"g":{"docs":{},"df":0,"h":{"docs":{"tests/adding.html#what-kind-of-test-should-i-add":{"tf":1.0}},"df":1,"l":{"docs":{},"df":0,"i":{"docs":{"type-inference.html#enforcing-equality--subtyping":{"tf":1.0},"appendix/glossary.html#appendix-c-glossary":{"tf":1.0},"high-level-overview.html#crate-structure":{"tf":1.0},"query.html#cycles-between-queries":{"tf":1.0},"traits/canonicalization.html#canonicalization":{"tf":1.0},"query.html#queries-demand-driven-compilation":{"tf":1.0}},"df":6}}}}}},"l":{"docs":{"tests/intro.html#other-tests":{"tf":1.0},"rustc-driver.html#the-rustc-driver":{"tf":1.0},"name-resolution.html#todo":{"tf":1.0}},"df":3},"s":{"docs":{"high-level-overview.html#the-main-stages-of-compilation":{"tf":1.0},"tests/running.html#running-an-individual-test":{"tf":1.0}},"df":2},"v":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{},"df":0,"u":{"docs":{"mir/index.html#key-mir-vocabulary":{"tf":2.8284271247461905},"mir/index.html#mir-data-types":{"tf":1.4142135623730952}},"df":2}}}},"f":{"docs":{"how-to-build-and-run.html#other-xpy-commands":{"tf":1.0}},"df":1,"c":{"docs":{"tests/adding.html#naming-your-test":{"tf":1.0},"traits/lowering-rules.html#trait-header":{"tf":1.0},"mir/regionck.html#mir-based-region-checking-nll":{"tf":1.0},"mir/index.html#the-mir-mid-level-ir":{"tf":1.0}},"df":4}},"i":{"docs":{},"df":0,"g":{"docs":{},"df":0,"h":{"docs":{},"df":0,"t":{"docs":{"rustdoc.html#cheat-sheet":{"tf":1.0},"traits/specialization.html#specialization":{"tf":1.4142135623730952},"traits/hrtb.html#basic-matching-and-skolemization-leaks":{"tf":1.0},"type-inference.html#extracting-region-constraints":{"tf":1.0},"traits/canonicalization.html#canonicalization":{"tf":1.0},"traits/canonical-queries.html#the-traditional-interactive-prolog-query":{"tf":1.0},"mir/index.html#key-mir-vocabulary":{"tf":1.0},"query.html#how-the-compiler-executes-a-query":{"tf":1.0},"name-resolution.html#scopes-and-ribs":{"tf":1.0},"high-level-overview.html#the-main-stages-of-compilation":{"tf":1.0},"mir/regionck.html#subtyping-and-skolemization":{"tf":1.0},"rustdoc.html#from-soup-to-nuts":{"tf":1.0},"query.html#adding-a-new-kind-of-query":{"tf":1.0},"ty.html#allocating-and-working-with-types":{"tf":1.0},"traits/goals-and-clauses.html#domain-goals":{"tf":1.0},"hir.html#identifiers-in-the-hir":{"tf":1.0},"traits/lowering-rules.html#transforming-the-lowered-where-clauses":{"tf":1.0}},"df":17}}},"b":{"docs":{"name-resolution.html#todo":{"tf":1.0},"name-resolution.html#overall-strategy":{"tf":1.4142135623730952},"name-resolution.html#scopes-and-ribs":{"tf":3.3166247903554}},"df":3},"c":{"docs":{},"df":0,"h":{"docs":{"traits/lowering-to-logic.html#rust-traits-and-logic":{"tf":1.0}},"df":1}},"s":{"docs":{},"df":0,"k":{"docs":{},"df":0,"i":{"docs":{"ty.html#allocating-and-working-with-types":{"tf":1.0}},"df":1}}},"p":{"docs":{},"df":0,"g":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"p":{"docs":{"tests/intro.html#other-tests":{"tf":1.0}},"df":1}}}}}},"a":{"docs":{},"df":0,"d":{"docs":{},"df":0,"i":{"docs":{},"df":0,"c":{"docs":{"mir/index.html#the-mir-mid-level-ir":{"tf":1.0},"mir/borrowck.html#mir-borrow-check":{"tf":1.0}},"df":2}}},"w":{"docs":{"macro-expansion.html#example":{"tf":1.0},"appendix/glossary.html#appendix-c-glossary":{"tf":1.0},"macro-expansion.html#the-macro-parser":{"tf":1.0},"miri.html#allocations":{"tf":1.0},"the-parser.html#the-parser":{"tf":1.0},"appendix/code-index.html#appendix-d-code-index":{"tf":1.0}},"df":6},"t":{"docs":{},"df":0,"e":{"docs":{"traits/caching.html#where-clauses-and-the-local-vs-global-cache":{"tf":1.0}},"df":1}},"r":{"docs":{},"df":0,"e":{"docs":{"rustc-driver.html#a-note-on-lifetimes":{"tf":1.0},"tests/running.html#running-tests":{"tf":1.0}},"df":2}},"n":{"docs":{"high-level-overview.html#the-main-stages-of-compilation":{"tf":1.0}},"df":1,"k":{"docs":{"appendix/glossary.html#appendix-c-glossary":{"tf":1.0},"traits/hrtb.html#higher-ranked-trait-bounds":{"tf":1.7320508075688773},"traits/hrtb.html#higher-ranked-trait-obligations":{"tf":1.0},"traits/hrtb.html#basic-matching-and-skolemization-leaks":{"tf":1.4142135623730952},"type-inference.html#type-inference":{"tf":1.0}},"df":5},"d":{"docs":{},"df":0,"o":{"docs":{},"df":0,"m":{"docs":{"tests/adding.html#naming-your-test":{"tf":1.0}},"df":1,"_":{"docs":{},"df":0,"o":{"docs":{},"df":0,"p":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"compiler-debugging.html#expensive-operations-in-logs":{"tf":1.0}},"df":1,"a":{"docs":{},"df":0,"t":{"docs":{},"df":0,"i":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"(":{"docs":{},"df":0,"t":{"docs":{},"df":0,"c":{"docs":{},"df":0,"x":{"docs":{"compiler-debugging.html#expensive-operations-in-logs":{"tf":1.4142135623730952}},"df":1}}}}}}}}}}}}}}}}}}},"c":{"docs":{"query.html#adding-a-new-kind-of-query":{"tf":1.0},"query.html#how-the-compiler-executes-a-query":{"tf":1.0}},"df":2,"<":{"docs":{},"df":0,"u":{"docs":{"method-lookup.html#candidate-assembly":{"tf":1.4142135623730952}},"df":1},"?":{"docs":{},"df":0,"t":{"docs":{"traits/canonical-queries.html#the-traditional-interactive-prolog-query":{"tf":1.7320508075688773},"traits/canonical-queries.html#a-trait-query-in-rustc":{"tf":1.0}},"df":2}},"b":{"docs":{},"df":0,"o":{"docs":{},"df":0,"x":{"docs":{},"df":0,"<":{"docs":{},"df":0,"[":{"docs":{},"df":0,"t":{"docs":{"method-lookup.html#candidate-assembly":{"tf":1.4142135623730952},"method-lookup.html#steps":{"tf":1.4142135623730952},"method-lookup.html#candidate-search":{"tf":1.4142135623730952}},"df":3}}}}}}}},"m":{"docs":{"how-to-build-and-run.html#other-xpy-commands":{"tf":1.0}},"df":1},"h":{"docs":{"macro-expansion.html#the-macro-parser":{"tf":1.0}},"df":1,"s":{"docs":{},"df":0,":":{"docs":{},"df":0,"t":{"docs":{},"df":0,"t":{"docs":{"macro-expansion.html#the-macro-parser":{"tf":1.0}},"df":1}}}}},"u":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{"high-level-overview.html#the-main-stages-of-compilation":{"tf":2.23606797749979},"tests/intro.html#the-compiler-testing-framework":{"tf":1.0},"tests/adding.html#adding-new-tests":{"tf":1.4142135623730952},"rustc-driver.html#a-note-on-lifetimes":{"tf":1.4142135623730952},"traits/lowering-to-logic.html#lowering-to-logic":{"tf":1.0},"appendix/background.html#appendix-b-background-topics":{"tf":1.0},"ty.html#the-tcx-and-how-it-uses-lifetimes":{"tf":1.0},"compiletest.html#adding-a-new-test-file":{"tf":1.0},"mir/regionck.html#another-example":{"tf":1.0},"conventions.html#formatting-and-the-tidy-script":{"tf":1.0},"traits/chalk-overview.html#blog-posts":{"tf":1.0},"rustdoc.html#from-clean-to-crate":{"tf":1.4142135623730952},"macro-expansion.html#the-macro-parser":{"tf":1.7320508075688773},"tests/intro.html#compiletest-test-suites":{"tf":1.4142135623730952},"mir/index.html#the-mir-mid-level-ir":{"tf":1.4142135623730952},"compiler-debugging.html#getting-a-backtrace":{"tf":1.0},"traits/lowering-rules.html#lowering-rules":{"tf":1.0},"traits/lowering-to-logic.html#rust-traits-and-logic":{"tf":2.0},"compiletest.html#adding-a-new-header-command":{"tf":1.4142135623730952},"mir/regionck.html#mir-based-region-checking-nll":{"tf":1.0},"ty.html#allocating-and-working-with-types":{"tf":1.4142135623730952},"appendix/stupid-stats.html#overview-of-the-compilation-process":{"tf":1.4142135623730952},"traits/chalk-overview.html#testing":{"tf":1.0},"conventions.html#copyright-notice":{"tf":1.0},"appendix/background.html#what-is-a-control-flow-graph":{"tf":1.0},"tests/intro.html#testing-on-emulators":{"tf":1.0},"hir.html#identifiers-in-the-hir":{"tf":1.0},"appendix/background.html#what-is-co--and-contra-variance":{"tf":1.0},"traits/chalk-overview.html#an-overview-of-chalk":{"tf":1.4142135623730952},"traits/index.html#trait-solving-new-style":{"tf":1.0},"traits/goals-and-clauses.html#domain-goals":{"tf":1.4142135623730952},"compiler-debugging.html#debugging-the-compiler":{"tf":1.0},"high-level-overview.html#crate-structure":{"tf":1.4142135623730952},"appendix/glossary.html#appendix-c-glossary":{"tf":2.6457513110645909},"conventions.html#how-to-structure-your-pr":{"tf":1.4142135623730952},"traits/chalk-overview.html#lowering":{"tf":1.0},"name-resolution.html#namespaces":{"tf":1.0},"type-inference.html#type-inference":{"tf":1.0},"macro-expansion.html#macro-expansion":{"tf":1.7320508075688773},"traits/wf.html#well-formedness-checking":{"tf":1.0},"tests/intro.html#other-tests":{"tf":2.6457513110645909},"tests/intro.html#testing-with-docker-images":{"tf":1.4142135623730952},"about-this-guide.html#about-this-guide":{"tf":1.0},"ty.html#the--ty--module-representing-types":{"tf":1.0},"compiletest.html#implementing-the-behavior-change":{"tf":1.0},"traits/lowering-rules.html#lowering-where-clauses":{"tf":1.4142135623730952},"mir/index.html#mir-data-types":{"tf":1.0},"traits/chalk-overview.html#intermediate-representation-ir":{"tf":1.7320508075688773},"compiler-debugging.html#getting-logging-output":{"tf":1.4142135623730952},"tests/adding.html#header-commands-configuring-rustc":{"tf":1.4142135623730952},"traits/lowering-to-logic.html#type-checking-generic-functions-beyond-horn-clauses":{"tf":1.0},"how-to-build-and-run.html#create-a-configtoml":{"tf":1.0},"query.html#queries-demand-driven-compilation":{"tf":1.4142135623730952},"traits/chalk-overview.html#parsing":{"tf":2.23606797749979},"mir/index.html#key-mir-vocabulary":{"tf":1.0},"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.4142135623730952},"rustdoc.html#other-tricks-up-its-sleeve":{"tf":1.4142135623730952},"how-to-build-and-run.html#running-xpy-and-building-a-stage1-compiler":{"tf":2.0},"tests/intro.html#further-reading":{"tf":1.0},"traits/goals-and-clauses.html#coinductive-goals":{"tf":1.4142135623730952},"mir/passes.html#stealing":{"tf":1.0},"the-parser.html#the-parser":{"tf":1.4142135623730952},"compiletest.html#introduction":{"tf":1.7320508075688773},"tests/running.html#running-an-individual-test":{"tf":1.0},"query.html#adding-a-new-kind-of-query":{"tf":1.0},"hir.html#the-hir":{"tf":1.0}},"df":66,"'":{"docs":{"traits/goals-and-clauses.html#goals-and-clauses-meta-structure":{"tf":1.0},"traits/goals-and-clauses.html#goals-and-clauses":{"tf":1.0},"appendix/glossary.html#appendix-c-glossary":{"tf":1.0},"type-inference.html#subtyping-obligations":{"tf":1.0},"mir/borrowck.html#mir-borrow-check":{"tf":1.0},"mir/index.html#the-mir-mid-level-ir":{"tf":1.0},"tests/intro.html#testing-infrastructure":{"tf":1.0},"traits/lowering-to-logic.html#type-checking-generic-functions-beyond-horn-clauses":{"tf":1.0},"traits/chalk-overview.html#an-overview-of-chalk":{"tf":1.0},"hir.html#the-hir":{"tf":1.0},"traits/canonical-queries.html#the-traditional-interactive-prolog-query":{"tf":1.0}},"df":11},"c":{"docs":{"compiler-debugging.html#debugging-llvm":{"tf":3.0},"how-to-build-and-run.html#how-to-build-the-compiler-and-run-what-you-built":{"tf":1.0},"conventions.html#formatting-and-the-tidy-script":{"tf":1.4142135623730952},"appendix/glossary.html#appendix-c-glossary":{"tf":1.0},"tests/adding.html#header-commands-configuring-rustc":{"tf":1.4142135623730952},"compiler-debugging.html#expensive-operations-in-logs":{"tf":1.0},"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":3.0},"ty.html#allocating-and-working-with-types":{"tf":1.0},"high-level-overview.html#crate-structure":{"tf":2.449489742783178},"how-to-build-and-run.html#create-a-configtoml":{"tf":1.0},"tests/running.html#running-a-subset-of-the-test-suites":{"tf":1.0},"macro-expansion.html#macro-expansion":{"tf":1.0},"traits/canonical-queries.html#canonical-queries":{"tf":1.4142135623730952},"appendix/stupid-stats.html#overview-of-the-compilation-process":{"tf":1.7320508075688773},"traits/chalk-overview.html#resources":{"tf":1.0},"rustdoc.html#from-crate-to-clean":{"tf":1.4142135623730952},"traits/canonical-queries.html#a-trait-query-in-rustc":{"tf":1.7320508075688773},"traits/caching.html#where-clauses-and-the-local-vs-global-cache":{"tf":1.0},"tests/adding.html#naming-your-test":{"tf":1.0},"miri.html#miri":{"tf":1.0},"traits/lowering-rules.html#rule-names-and-cross-references":{"tf":1.0},"how-to-build-and-run.html#creating-a-rustup-toolchain":{"tf":2.449489742783178},"tests/adding.html#adding-new-tests":{"tf":1.0},"mir/passes.html#seeing-how-the-mir-changes-as-the-compiler-executes":{"tf":2.0},"diag.html#declaring-a-lint":{"tf":1.0},"appendix/code-index.html#appendix-d-code-index":{"tf":1.7320508075688773},"hir.html#the-hir":{"tf":1.7320508075688773},"compiler-debugging.html#getting-logging-output":{"tf":2.449489742783178},"compiler-debugging.html#getting-a-backtrace-for-errors":{"tf":1.4142135623730952},"traits/lowering-module.html#the-lowering-module-in-rustc":{"tf":1.0},"diag.html#span":{"tf":1.0},"diag.html#suggestions":{"tf":2.0},"rustdoc.html#the-walking-tour-of-rustdoc":{"tf":1.0},"how-to-build-and-run.html#running-xpy-and-building-a-stage1-compiler":{"tf":2.8284271247461905},"appendix/stupid-stats.html#appendix-a-a-tutorial-on-creating-a-drop-in-replacement-for-rustc":{"tf":2.449489742783178},"rustc-driver.html#the-rustc-driver":{"tf":2.0},"about-this-guide.html#about-this-guide":{"tf":1.4142135623730952},"rustdoc.html#cheat-sheet":{"tf":1.0},"tests/running.html#running-an-individual-test":{"tf":1.0},"diag.html#emitting-diagnostics":{"tf":1.0}},"df":40,"_":{"docs":{"high-level-overview.html#crate-structure":{"tf":1.0},"query.html#how-the-compiler-executes-a-query":{"tf":1.4142135623730952}},"df":2,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{"diag.html#error-messages":{"tf":1.0}},"df":1}}}}},"a":{"docs":{},"df":0,"t":{"docs":{},"df":0,"t":{"docs":{},"df":0,"r":{"docs":{"traits/lowering-module.html#unit-tests":{"tf":1.0}},"df":1}}}},"i":{"docs":{},"df":0,"f":{"docs":{},"df":0,"_":{"docs":{},"df":0,"t":{"docs":{},"df":0,"h":{"docs":{},"df":0,"i":{"docs":{},"df":0,"s":{"docs":{},"df":0,"_":{"docs":{},"df":0,"c":{"docs":{},"df":0,"h":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"g":{"docs":{"incrcomp-debugging.html#testing-the-dependency-graph":{"tf":1.4142135623730952}},"df":1}}}}}}}}}}}}},"d":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{},"df":0,"v":{"docs":{"query.html#adding-a-new-kind-of-query":{"tf":1.0},"rustc-driver.html#the-rustc-driver":{"tf":2.0},"query.html#how-the-compiler-executes-a-query":{"tf":1.0},"high-level-overview.html#crate-structure":{"tf":2.0}},"df":4,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"d":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{},"df":0,"v":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"m":{"docs":{},"df":0,"p":{"docs":{},"df":0,"i":{"docs":{},"df":0,"l":{"docs":{},"df":0,"e":{"docs":{},"df":0,"_":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"p":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{"compiler-debugging.html#getting-a-backtrace":{"tf":1.4142135623730952}},"df":1}}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"df":0,"u":{"docs":{},"df":0,"n":{"docs":{},"df":0,"_":{"docs":{},"df":0,"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"m":{"docs":{},"df":0,"p":{"docs":{},"df":0,"i":{"docs":{},"df":0,"l":{"docs":{"compiler-debugging.html#getting-a-backtrace-for-errors":{"tf":1.0},"compiler-debugging.html#getting-a-backtrace":{"tf":1.4142135623730952}},"df":2,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"(":{"docs":{},"df":0,"&":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"g":{"docs":{"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}}}}}}},"u":{"docs":{},"df":0,"m":{"docs":{},"df":0,"p":{"docs":{},"df":0,"_":{"docs":{},"df":0,"p":{"docs":{},"df":0,"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"g":{"docs":{},"df":0,"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"m":{"docs":{},"df":0,"_":{"docs":{},"df":0,"c":{"docs":{},"df":0,"l":{"docs":{},"df":0,"a":{"docs":{},"df":0,"u":{"docs":{},"df":0,"s":{"docs":{"traits/lowering-module.html#unit-tests":{"tf":1.7320508075688773}},"df":1}}}}}}}}}}}}}}}}}},"t":{"docs":{},"df":0,"y":{"docs":{},"df":0,"p":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"k":{"docs":{"type-checking.html#type-checking":{"tf":1.0}},"df":1,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"c":{"docs":{},"df":0,"h":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"k":{"docs":{},"df":0,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"c":{"docs":{},"df":0,"a":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"c":{"docs":{},"df":0,"a":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"c":{"docs":{},"df":0,"h":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"k":{"docs":{},"df":0,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"c":{"docs":{},"df":0,"h":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"k":{"docs":{"compiler-debugging.html#getting-a-backtrace":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}}}}},"f":{"docs":{},"df":0,"n":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{},"df":0,"x":{"docs":{},"df":0,"t":{"docs":{},"df":0,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"l":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{},"df":0,"_":{"docs":{},"df":0,"o":{"docs":{},"df":0,"b":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{},"df":0,"g":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{},"df":0,"i":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"s":{"docs":{},"df":0,"_":{"docs":{},"df":0,"w":{"docs":{},"df":0,"h":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"_":{"docs":{},"df":0,"p":{"docs":{},"df":0,"o":{"docs":{},"df":0,"s":{"docs":{},"df":0,"s":{"docs":{"compiler-debugging.html#getting-a-backtrace-for-errors":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"_":{"docs":{},"df":0,"c":{"docs":{},"df":0,"r":{"docs":{"compiler-debugging.html#getting-a-backtrace":{"tf":1.0}},"df":1}}}}}}}}}}}}}}},"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{"compiler-debugging.html#getting-logging-output":{"tf":1.0},"high-level-overview.html#crate-structure":{"tf":1.4142135623730952}},"df":2},"i":{"docs":{},"df":0,"t":{"docs":{},"df":0,"s":{"docs":{},"df":0,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"l":{"docs":{},"df":0,"o":{"docs":{},"df":0,"w":{"docs":{"traits/lowering-module.html#the-lowering-module-in-rustc":{"tf":1.0}},"df":1}}}}}}}}}},"h":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"_":{"docs":{},"df":0,"t":{"docs":{},"df":0,"h":{"docs":{},"df":0,"i":{"docs":{},"df":0,"s":{"docs":{},"df":0,"_":{"docs":{},"df":0,"w":{"docs":{},"df":0,"o":{"docs":{},"df":0,"u":{"docs":{},"df":0,"l":{"docs":{},"df":0,"d":{"docs":{},"df":0,"_":{"docs":{},"df":0,"n":{"docs":{},"df":0,"e":{"docs":{"incrcomp-debugging.html#testing-the-dependency-graph":{"tf":1.4142135623730952}},"df":1,"e":{"docs":{},"df":0,"d":{"docs":{},"df":0,"(":{"docs":{},"df":0,"t":{"docs":{},"df":0,"y":{"docs":{},"df":0,"p":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"k":{"docs":{},"df":0,"t":{"docs":{"incrcomp-debugging.html#testing-the-dependency-graph":{"tf":1.4142135623730952}},"df":1}}}}}}}}}}}}}}}}}}}}}}}}}}}},"m":{"docs":{},"df":0,"i":{"docs":{},"df":0,"r":{"docs":{},"df":0,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"t":{"docs":{},"df":0,"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"s":{"docs":{},"df":0,"f":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"m":{"docs":{"mir/passes.html#implementing-and-registering-a-pass":{"tf":1.0}},"df":1}}}}}}}}},"b":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"w":{"docs":{},"df":0,"_":{"docs":{},"df":0,"c":{"docs":{},"df":0,"h":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"k":{"docs":{"mir/borrowck.html#major-phases-of-the-borrow-checker":{"tf":1.0}},"df":1,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"n":{"docs":{},"df":0,"l":{"docs":{"mir/regionck.html#mir-based-region-checking-nll":{"tf":1.0}},"df":1,"l":{"docs":{},"df":0,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"g":{"docs":{},"df":0,"i":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"_":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"f":{"docs":{"mir/regionck.html#representing-the-values-of-a-region-variable":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"(":{"docs":{},"df":0,"b":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"w":{"docs":{},"df":0,"c":{"docs":{},"df":0,"k":{"docs":{},"df":0,"_":{"docs":{},"df":0,"g":{"docs":{},"df":0,"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"p":{"docs":{},"df":0,"h":{"docs":{},"df":0,"v":{"docs":{},"df":0,"i":{"docs":{},"df":0,"z":{"docs":{},"df":0,"_":{"docs":{},"df":0,"p":{"docs":{},"df":0,"o":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"f":{"docs":{},"df":0,"l":{"docs":{},"df":0,"o":{"docs":{},"df":0,"w":{"docs":{},"df":0,"=":{"docs":{},"df":0,"\"":{"docs":{},"df":0,"s":{"docs":{},"df":0,"u":{"docs":{},"df":0,"f":{"docs":{},"df":0,"f":{"docs":{},"df":0,"i":{"docs":{},"df":0,"x":{"docs":{},"df":0,".":{"docs":{},"df":0,"d":{"docs":{},"df":0,"o":{"docs":{},"df":0,"t":{"docs":{"compiler-debugging.html#formatting-graphviz-output-dot-files":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"df":0,"t":{"docs":{},"df":0,"a":{"docs":{},"df":0,"d":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{},"df":0,"a":{"docs":{"query.html#how-the-compiler-executes-a-query":{"tf":1.0},"high-level-overview.html#crate-structure":{"tf":1.0}},"df":2}}}}}}}},"b":{"docs":{},"df":0,"a":{"docs":{},"df":0,"c":{"docs":{},"df":0,"k":{"docs":{"high-level-overview.html#crate-structure":{"tf":1.0}},"df":1}}},"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"w":{"docs":{},"df":0,"c":{"docs":{},"df":0,"k":{"docs":{"high-level-overview.html#crate-structure":{"tf":1.0}},"df":1}}}}}}}},"l":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{"diag.html#declaring-a-lint":{"tf":1.0}},"df":1,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{},"df":0,"b":{"docs":{"diag.html#lint-groups":{"tf":1.0},"diag.html#edition-gated-lints":{"tf":1.0}},"df":2}}}}}}}}}},".":{"docs":{},"df":0,"m":{"docs":{},"df":0,"a":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{"mir/passes.html#seeing-how-the-mir-changes-as-the-compiler-executes":{"tf":2.8284271247461905}},"df":1,".":{"docs":{},"df":0,"0":{"docs":{},"df":0,"0":{"docs":{},"df":0,"0":{"docs":{"mir/passes.html#seeing-how-the-mir-changes-as-the-compiler-executes":{"tf":2.449489742783178}},"df":1},"2":{"docs":{"mir/passes.html#seeing-how-the-mir-changes-as-the-compiler-executes":{"tf":2.0}},"df":1}}}}}}}}},"d":{"docs":{},"df":0,"e":{"docs":{},"df":0,"f":{"docs":{},"df":0,"a":{"docs":{},"df":0,"u":{"docs":{},"df":0,"l":{"docs":{},"df":0,"t":{"docs":{},"df":0,"c":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.4142135623730952}},"df":1}}}}}}}}}},":":{"docs":{},"df":0,":":{"docs":{},"df":0,"f":{"docs":{},"df":0,"o":{"docs":{},"df":0,"o":{"docs":{"compiler-debugging.html#expensive-operations-in-logs":{"tf":1.0}},"df":1}}},"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"f":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"f":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{},"df":0,"x":{"docs":{},"df":0,"t":{"docs":{},"df":0,"<":{"docs":{},"df":0,"'":{"docs":{},"df":0,"a":{"docs":{"compiler-debugging.html#getting-a-backtrace-for-errors":{"tf":1.4142135623730952}},"df":1}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"df":0,"y":{"docs":{},"df":0,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"x":{"docs":{},"df":0,"t":{"docs":{},"df":0,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"t":{"docs":{},"df":0,"y":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{},"df":0,"x":{"docs":{},"df":0,"t":{"docs":{},"df":0,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"c":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"_":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{},"df":0,"_":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{"compiler-debugging.html#getting-a-backtrace":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"df":0,"l":{"docs":{"rustc-driver.html#a-note-on-lifetimes":{"tf":1.0}},"df":1}}}}},"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{},"df":0,"s":{"docs":{},"df":0,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"_":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"p":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"t":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"g":{"docs":{},"df":0,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"<":{"docs":{},"df":0,"i":{"docs":{},"df":0,"m":{"docs":{},"df":0,"p":{"docs":{},"df":0,"l":{"docs":{"compiler-debugging.html#getting-a-backtrace-for-errors":{"tf":1.4142135623730952}},"df":1}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"m":{"docs":{},"df":0,"i":{"docs":{},"df":0,"r":{"docs":{},"df":0,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"v":{"docs":{},"df":0,"i":{"docs":{},"df":0,"s":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{"mir/visitor.html#mir-visitor":{"tf":1.0}},"df":1}}}}},"t":{"docs":{},"df":0,"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"v":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"s":{"docs":{"mir/visitor.html#traversal":{"tf":1.0}},"df":1}}}}}}}}}}}},"l":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{"diag.html#lints":{"tf":1.0}},"df":1}}}}}}},"b":{"docs":{},"df":0,"u":{"docs":{},"df":0,"i":{"docs":{},"df":0,"l":{"docs":{},"df":0,"d":{"docs":{"rustdoc.html#cheat-sheet":{"tf":1.0}},"df":1}}}}},"i":{"docs":{},"df":0,"f":{"docs":{},"df":0,"i":{"docs":{"traits/lowering-to-logic.html#type-checking-generic-functions-beyond-horn-clauses":{"tf":1.0}},"df":1}}},"_":{"docs":{},"df":0,"b":{"docs":{},"df":0,"a":{"docs":{},"df":0,"c":{"docs":{},"df":0,"k":{"docs":{},"df":0,"t":{"docs":{},"df":0,"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"c":{"docs":{},"df":0,"e":{"docs":{},"df":0,"=":{"docs":{},"df":0,"1":{"docs":{"compiler-debugging.html#getting-a-backtrace-for-errors":{"tf":1.4142135623730952},"incrcomp-debugging.html#tracking-down-incorrect-edges":{"tf":1.0},"compiler-debugging.html#getting-a-backtrace":{"tf":1.0}},"df":3},"f":{"docs":{},"df":0,"u":{"docs":{},"df":0,"l":{"docs":{"compiler-debugging.html#getting-a-backtrace-for-errors":{"tf":1.0}},"df":1}}}}}}}}}}}}},"l":{"docs":{},"df":0,"o":{"docs":{},"df":0,"g":{"docs":{"compiler-debugging.html#getting-logging-output":{"tf":1.4142135623730952},"compiler-debugging.html#expensive-operations-in-logs":{"tf":1.4142135623730952}},"df":2,"=":{"docs":{},"df":0,"d":{"docs":{},"df":0,"e":{"docs":{},"df":0,"b":{"docs":{},"df":0,"u":{"docs":{},"df":0,"g":{"docs":{"compiler-debugging.html#getting-logging-output":{"tf":1.0}},"df":1}}}}},"m":{"docs":{},"df":0,"o":{"docs":{},"df":0,"d":{"docs":{},"df":0,"u":{"docs":{},"df":0,"l":{"docs":{},"df":0,"e":{"docs":{},"df":0,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"p":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{},"df":0,"h":{"docs":{"compiler-debugging.html#getting-logging-output":{"tf":1.0}},"df":1}}}}}}}}}}}},"r":{"docs":{},"df":0,"u":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"c":{"docs":{"compiler-debugging.html#getting-logging-output":{"tf":1.0}},"df":1,"_":{"docs":{},"df":0,"t":{"docs":{},"df":0,"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"s":{"docs":{},"df":0,"=":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"f":{"docs":{},"df":0,"o":{"docs":{"compiler-debugging.html#getting-logging-output":{"tf":1.0}},"df":1}}}}}}}}}}},":":{"docs":{},"df":0,":":{"docs":{},"df":0,"b":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{"compiler-debugging.html#expensive-operations-in-logs":{"tf":1.0}},"df":1}}},"t":{"docs":{},"df":0,"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{"compiler-debugging.html#getting-logging-output":{"tf":1.4142135623730952}},"df":1}}}}}}}}}}}}}}}},"d":{"docs":{},"df":0,"e":{"docs":{},"df":0,"p":{"docs":{},"df":0,"_":{"docs":{},"df":0,"g":{"docs":{},"df":0,"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"p":{"docs":{},"df":0,"h":{"docs":{"incrcomp-debugging.html#dumping-the-graph":{"tf":1.0}},"df":1,"_":{"docs":{},"df":0,"f":{"docs":{},"df":0,"i":{"docs":{},"df":0,"l":{"docs":{},"df":0,"t":{"docs":{"incrcomp-debugging.html#dumping-the-graph":{"tf":1.7320508075688773}},"df":1,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"=":{"docs":{},"df":0,"'":{"docs":{},"df":0,"h":{"docs":{},"df":0,"i":{"docs":{},"df":0,"r":{"docs":{"incrcomp-debugging.html#dumping-the-graph":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}}}},"f":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"b":{"docs":{},"df":0,"i":{"docs":{},"df":0,"d":{"docs":{},"df":0,"_":{"docs":{},"df":0,"d":{"docs":{},"df":0,"e":{"docs":{},"df":0,"p":{"docs":{},"df":0,"_":{"docs":{},"df":0,"g":{"docs":{},"df":0,"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"p":{"docs":{},"df":0,"h":{"docs":{},"df":0,"_":{"docs":{},"df":0,"e":{"docs":{},"df":0,"d":{"docs":{},"df":0,"g":{"docs":{"incrcomp-debugging.html#tracking-down-incorrect-edges":{"tf":1.4142135623730952}},"df":1}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"_":{"docs":{},"df":0,"t":{"docs":{},"df":0,"h":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"a":{"docs":{},"df":0,"d":{"docs":{"compiletest.html#adding-a-new-header-command":{"tf":1.0}},"df":1}}}}}},"n":{"docs":{},"df":0,"o":{"docs":{},"df":0,"c":{"docs":{},"df":0,"a":{"docs":{},"df":0,"p":{"docs":{},"df":0,"t":{"docs":{},"df":0,"u":{"docs":{},"df":0,"r":{"docs":{"compiletest.html#adding-a-new-header-command":{"tf":1.0}},"df":1}}}}}}}}}}}}},"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"r":{"docs":{"compiletest.html#implementing-the-behavior-change":{"tf":1.0}},"df":1}}},"c":{"docs":{},"df":0,"h":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"k":{"docs":{},"df":0,"o":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{"how-to-build-and-run.html#create-a-configtoml":{"tf":1.0}},"df":1}}}}}}}}},"f":{"docs":{},"df":0,"m":{"docs":{},"df":0,"t":{"docs":{"tests/intro.html#other-tests":{"tf":1.0},"appendix/stupid-stats.html#appendix-a-a-tutorial-on-creating-a-drop-in-replacement-for-rustc":{"tf":1.0},"conventions.html#how-to-structure-your-pr":{"tf":2.0},"appendix/stupid-stats.html#what-next":{"tf":1.0}},"df":4}},"i":{"docs":{},"df":0,"x":{"docs":{"tests/adding.html#other-header-commands":{"tf":1.0},"diag.html#suggestions":{"tf":1.7320508075688773}},"df":2}}},"d":{"docs":{},"df":0,"o":{"docs":{},"df":0,"c":{"docs":{"appendix/code-index.html#appendix-d-code-index":{"tf":1.4142135623730952},"rustdoc.html#cheat-sheet":{"tf":2.23606797749979},"rustdoc.html#from-crate-to-clean":{"tf":1.4142135623730952},"rustdoc.html#dotting-is-and-crossing-ts":{"tf":1.0},"appendix/stupid-stats.html#what-next":{"tf":1.4142135623730952},"rustdoc.html#the-walking-tour-of-rustdoc":{"tf":2.0},"rustdoc.html#from-clean-to-crate":{"tf":1.4142135623730952},"tests/intro.html#other-tests":{"tf":1.7320508075688773},"rustdoc.html#from-soup-to-nuts":{"tf":1.0},"tests/intro.html#compiletest-test-suites":{"tf":1.4142135623730952},"appendix/stupid-stats.html#appendix-a-a-tutorial-on-creating-a-drop-in-replacement-for-rustc":{"tf":1.0},"tests/adding.html#what-kind-of-test-should-i-add":{"tf":1.4142135623730952},"rustdoc.html#hot-potato":{"tf":1.4142135623730952},"rustdoc.html#other-tricks-up-its-sleeve":{"tf":1.4142135623730952}},"df":14,"v":{"docs":{},"df":0,"i":{"docs":{},"df":0,"s":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{"rustdoc.html#from-crate-to-clean":{"tf":1.0}},"df":1}}}}}}},"'":{"docs":{"rustdoc.html#dotting-is-and-crossing-ts":{"tf":1.4142135623730952}},"df":1}}}},"u":{"docs":{},"df":0,"p":{"docs":{"how-to-build-and-run.html#creating-a-rustup-toolchain":{"tf":2.0},"rustdoc.html#cheat-sheet":{"tf":1.0}},"df":2}}}},"l":{"docs":{},"df":0,"e":{"docs":{"traits/chalk-overview.html#an-overview-of-chalk":{"tf":1.0},"traits/lowering-rules.html#lowering-where-clauses":{"tf":1.0},"ty.html#import-conventions":{"tf":1.0},"traits/lowering-to-logic.html#rust-traits-and-logic":{"tf":2.449489742783178},"traits/lowering-rules.html#associated-type-values":{"tf":1.4142135623730952},"traits/associated-types.html#associated-type-projection-and-normalization":{"tf":1.0},"traits/index.html#trait-solving-new-style":{"tf":1.7320508075688773},"traits/lowering-rules.html#notation":{"tf":1.0},"traits/lowering-rules.html#trait-header":{"tf":2.8284271247461905},"mir/regionck.html#subtyping-and-skolemization":{"tf":1.0},"compiletest.html#adding-a-new-header-command":{"tf":1.0},"conventions.html#how-to-structure-your-pr":{"tf":1.0},"name-resolution.html#namespaces":{"tf":1.0},"traits/caching.html#where-clauses-and-the-local-vs-global-cache":{"tf":1.4142135623730952},"traits/chalk-overview.html#lowering":{"tf":1.7320508075688773},"traits/implied-bounds.html#implied-bounds":{"tf":1.0},"macro-expansion.html#the-macro-parser":{"tf":1.4142135623730952},"method-lookup.html#candidate-assembly":{"tf":1.0},"traits/lowering-to-logic.html#type-checking-normal-functions":{"tf":1.4142135623730952},"name-resolution.html#scopes-and-ribs":{"tf":1.7320508075688773},"traits/lowering-rules.html#associated-type-declarations":{"tf":2.8284271247461905},"traits/lowering-module.html#the-lowering-module-in-rustc":{"tf":1.0},"traits/lowering-to-logic.html#type-checking-generic-functions-beyond-horn-clauses":{"tf":1.0},"method-lookup.html#candidate-search":{"tf":1.0},"traits/chalk-overview.html#rules":{"tf":2.0},"traits/lowering-rules.html#lowering-rules":{"tf":1.7320508075688773},"tests/adding.html#normalization":{"tf":1.0},"query.html#adding-a-new-kind-of-query":{"tf":1.0},"traits/goals-and-clauses.html#coinductive-goals":{"tf":1.7320508075688773},"traits/lowering-to-logic.html#lowering-to-logic":{"tf":1.7320508075688773},"variance.html#variance-and-object-types":{"tf":1.0},"variance.html#variance-and-associated-types":{"tf":1.0},"traits/lowering-rules.html#lowering-impls":{"tf":1.4142135623730952},"traits/lowering-rules.html#rule-names-and-cross-references":{"tf":2.0},"traits/lowering-rules.html#transforming-the-lowered-where-clauses":{"tf":1.0},"traits/goals-and-clauses.html#domain-goals":{"tf":1.0}},"df":36}},"n":{"docs":{"tests/adding.html#ignoring-tests":{"tf":1.4142135623730952},"compiletest.html#introduction":{"tf":1.7320508075688773},"tests/adding.html#what-kind-of-test-should-i-add":{"tf":2.0},"tests/adding.html#revisions":{"tf":1.4142135623730952},"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.7320508075688773},"how-to-build-and-run.html#how-to-build-the-compiler-and-run-what-you-built":{"tf":1.7320508075688773},"how-to-build-and-run.html#running-xpy-and-building-a-stage1-compiler":{"tf":1.4142135623730952},"conventions.html#how-to-structure-your-pr":{"tf":1.4142135623730952},"rustdoc.html#hot-potato":{"tf":1.4142135623730952},"tests/intro.html#testing-on-emulators":{"tf":3.1622776601683797},"variance.html#variance-and-object-types":{"tf":1.0},"how-to-build-and-run.html#other-xpy-commands":{"tf":2.23606797749979},"tests/intro.html#testing-with-docker-images":{"tf":1.4142135623730952},"tests/running.html#running-tests":{"tf":2.0},"appendix/stupid-stats.html#overview-of-the-compilation-process":{"tf":1.7320508075688773},"traits/chalk-overview.html#parsing":{"tf":1.0},"compiler-debugging.html#getting-a-backtrace-for-errors":{"tf":1.7320508075688773},"rustdoc.html#from-clean-to-crate":{"tf":1.4142135623730952},"diag.html#declaring-a-lint":{"tf":1.0},"rustc-driver.html#the-rustc-driver":{"tf":2.23606797749979},"name-resolution.html#name-resolution":{"tf":1.0},"tests/intro.html#the-compiler-testing-framework":{"tf":1.4142135623730952},"mir/regionck.html#mir-based-region-checking-nll":{"tf":1.4142135623730952},"rustdoc.html#the-walking-tour-of-rustdoc":{"tf":1.4142135623730952},"compiler-debugging.html#formatting-graphviz-output-dot-files":{"tf":1.0},"rustdoc.html#other-tricks-up-its-sleeve":{"tf":2.449489742783178},"incremental-compilation.html#the-basic-algorithm":{"tf":1.4142135623730952},"appendix/stupid-stats.html#what-next":{"tf":1.0},"tests/intro.html#testing-infrastructure":{"tf":2.23606797749979},"tests/running.html#running-a-subset-of-the-test-suites":{"tf":2.23606797749979},"tests/adding.html#tests-that-do-not-result-in-compile-errors":{"tf":2.0},"tests/adding.html#editing-and-updating-the-reference-files":{"tf":1.4142135623730952},"rustdoc.html#cheat-sheet":{"tf":1.0},"tests/adding.html#guide-to-the-ui-tests":{"tf":1.4142135623730952},"compiler-debugging.html#expensive-operations-in-logs":{"tf":2.23606797749979},"tests/adding.html#other-header-commands":{"tf":1.0},"tests/intro.html#other-tests":{"tf":3.0},"compiletest.html#implementing-the-behavior-change":{"tf":1.0},"conventions.html#formatting-and-the-tidy-script":{"tf":1.4142135623730952},"traits/resolution.html#selection-during-translation":{"tf":1.0},"mir/borrowck.html#major-phases-of-the-borrow-checker":{"tf":1.0},"how-to-build-and-run.html#creating-a-rustup-toolchain":{"tf":2.23606797749979},"incrcomp-debugging.html#tracking-down-incorrect-edges":{"tf":1.0},"compiler-debugging.html#getting-logging-output":{"tf":1.4142135623730952},"traits/chalk-overview.html#testing":{"tf":1.0},"compiler-debugging.html#debugging-llvm":{"tf":1.0},"tests/intro.html#compiletest-test-suites":{"tf":3.0},"high-level-overview.html#the-main-stages-of-compilation":{"tf":1.4142135623730952},"traits/canonical-queries.html#the-traditional-interactive-prolog-query":{"tf":1.4142135623730952},"tests/running.html#running-an-individual-test":{"tf":2.0},"query.html#queries-demand-driven-compilation":{"tf":1.0}},"df":51,"_":{"docs":{},"df":0,"p":{"docs":{},"df":0,"a":{"docs":{},"df":0,"s":{"docs":{},"df":0,"s":{"docs":{"mir/passes.html#implementing-and-registering-a-pass":{"tf":1.0},"compiletest.html#adding-a-new-header-command":{"tf":1.0}},"df":2}}}},"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"m":{"docs":{},"df":0,"p":{"docs":{},"df":0,"i":{"docs":{},"df":0,"l":{"docs":{"rustc-driver.html#a-note-on-lifetimes":{"tf":1.0},"rustc-driver.html#the-rustc-driver":{"tf":1.0}},"df":2}}}},"r":{"docs":{"rustdoc.html#from-crate-to-clean":{"tf":1.4142135623730952},"rustdoc.html#from-soup-to-nuts":{"tf":1.0}},"df":2}}}},"n":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"tests/adding.html#header-commands-configuring-rustc":{"tf":1.0},"tests/adding.html#naming-your-test":{"tf":1.0},"rustdoc.html#cheat-sheet":{"tf":1.0},"tests/running.html#running-an-individual-test":{"tf":1.4142135623730952},"rustdoc.html#other-tricks-up-its-sleeve":{"tf":1.0},"rustdoc.html#from-clean-to-crate":{"tf":1.0},"tests/running.html#running-tests":{"tf":1.0}},"df":7}}},"t":{"docs":{},"df":0,"i":{"docs":{},"df":0,"m":{"docs":{"compiletest.html#implementing-the-behavior-change":{"tf":1.0},"how-to-build-and-run.html#create-a-configtoml":{"tf":1.0},"rustdoc.html#dotting-is-and-crossing-ts":{"tf":1.0},"compiletest.html#adding-a-new-header-command":{"tf":1.0},"const-eval.html#constant-evaluation":{"tf":1.0}},"df":5}}}}}},"5":{"docs":{"name-resolution.html#scopes-and-ribs":{"tf":1.4142135623730952},"compiler-debugging.html#getting-a-backtrace":{"tf":1.0}},"df":2,"0":{"docs":{"tests/intro.html#testing-infrastructure":{"tf":1.0}},"df":1,"1":{"docs":{},"df":0,",":{"docs":{},"df":0,"6":{"docs":{"compiletest.html#implementing-the-behavior-change":{"tf":1.0}},"df":1}}}}},"m":{"docs":{"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.7320508075688773},"type-inference.html#inference-variables":{"tf":1.4142135623730952}},"df":2,"u":{"docs":{},"df":0,"d":{"docs":{},"df":0,"d":{"docs":{},"df":0,"l":{"docs":{"variance.html#dependency-graph-management":{"tf":1.0}},"df":1}}},"c":{"docs":{},"df":0,"h":{"docs":{"high-level-overview.html#crate-structure":{"tf":1.4142135623730952},"rustdoc.html#other-tricks-up-its-sleeve":{"tf":1.0},"macro-expansion.html#example":{"tf":1.4142135623730952},"miri.html#miri":{"tf":1.0},"macro-expansion.html#the-macro-parser":{"tf":1.0},"appendix/stupid-stats.html#compilercalls":{"tf":1.0},"traits/chalk-overview.html#an-overview-of-chalk":{"tf":1.0},"mir/regionck.html#mir-based-region-checking-nll":{"tf":1.4142135623730952},"type-inference.html#inference-variables":{"tf":1.0},"traits/canonical-queries.html#examples":{"tf":1.0},"tests/adding.html#naming-your-test":{"tf":1.0},"tests/running.html#running-an-individual-test":{"tf":1.0},"traits/resolution.html#selection-during-translation":{"tf":1.0},"tests/intro.html#testing-on-emulators":{"tf":1.0},"mir/index.html#introduction-to-mir":{"tf":1.0}},"df":15}},"l":{"docs":{},"df":0,"t":{"docs":{},"df":0,"i":{"docs":{},"df":0,"r":{"docs":{},"df":0,"u":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.0}},"df":1}}}},"p":{"docs":{},"df":0,"l":{"docs":{"traits/specialization.html#specialization":{"tf":1.0},"type-inference.html#snapshots":{"tf":1.0},"mir/passes.html#seeing-how-the-mir-changes-as-the-compiler-executes":{"tf":1.0},"appendix/background.html#what-is-a-control-flow-graph":{"tf":1.0},"traits/resolution.html#candidate-assembly":{"tf":1.0},"mir/passes.html#mir-passes":{"tf":1.0},"compiler-debugging.html#debugging-llvm":{"tf":1.7320508075688773},"ty.html#allocating-and-working-with-types":{"tf":1.0},"mir/index.html#key-mir-vocabulary":{"tf":1.0},"diag.html#suggestions":{"tf":1.4142135623730952},"tests/adding.html#revisions":{"tf":1.0},"name-resolution.html#overall-strategy":{"tf":1.0}},"df":12}}}}},"t":{"docs":{"rustdoc.html#from-clean-to-crate":{"tf":1.0},"mir/visitor.html#mir-visitor":{"tf":1.0},"traits/canonical-queries.html#examples":{"tf":2.0},"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.7320508075688773},"type-inference.html#type-inference":{"tf":1.0},"variance.html#trait-variance-and-vtable-resolution":{"tf":1.0},"mir/index.html#key-mir-vocabulary":{"tf":3.605551275463989},"compiler-debugging.html#expensive-operations-in-logs":{"tf":1.0},"diag.html#error-messages":{"tf":1.0},"query.html#how-the-compiler-executes-a-query":{"tf":1.7320508075688773},"method-lookup.html#candidate-search":{"tf":1.0},"diag.html#declaring-a-lint":{"tf":1.0},"method-lookup.html#candidate-assembly":{"tf":1.4142135623730952},"mir/passes.html#implementing-and-registering-a-pass":{"tf":1.0},"miri.html#miri":{"tf":1.4142135623730952},"diag.html#suggestions":{"tf":1.0},"traits/resolution.html#major-concepts":{"tf":1.0}},"df":17,"a":{"docs":{},"df":0,"b":{"docs":{},"df":0,"l":{"docs":{"query.html#adding-a-new-kind-of-query":{"tf":1.0},"mir/visitor.html#mir-visitor":{"tf":1.0},"mir/borrowck.html#mir-borrow-check":{"tf":1.0},"mir/index.html#key-mir-vocabulary":{"tf":1.0}},"df":4}},"t":{"docs":{"mir/borrowck.html#mir-borrow-check":{"tf":1.0},"query.html#how-the-compiler-executes-a-query":{"tf":1.0},"the-parser.html#the-parser":{"tf":1.0}},"df":3}},"v":{"docs":{},"df":0,"i":{"docs":{},"df":0,"s":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{"mir/visitor.html#mir-visitor":{"tf":1.4142135623730952}},"df":1,"<":{"docs":{},"df":0,"'":{"docs":{},"df":0,"t":{"docs":{},"df":0,"c":{"docs":{},"df":0,"x":{"docs":{"mir/visitor.html#mir-visitor":{"tf":1.0}},"df":1}}}}}}}}}}}}},"s":{"docs":{},"df":0,"l":{"docs":{"tests/adding.html#ignoring-tests":{"tf":1.0}},"df":1}}},"a":{"docs":{},"df":0,"t":{"docs":{},"df":0,"c":{"docs":{},"df":0,"h":{"docs":{"traits/resolution.html#overview":{"tf":1.0},"query.html#cycles-between-queries":{"tf":1.0},"method-lookup.html#candidate-search":{"tf":2.449489742783178},"rustdoc.html#dotting-is-and-crossing-ts":{"tf":1.0},"method-lookup.html#candidate-assembly":{"tf":1.0},"conventions.html#prefer-exhaustive-matches":{"tf":1.7320508075688773},"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.4142135623730952},"tests/adding.html#comment-explaining-what-the-test-is-about":{"tf":1.4142135623730952},"macro-expansion.html#the-macro-parser":{"tf":3.7416573867739415},"traits/hrtb.html#basic-matching-and-skolemization-leaks":{"tf":2.0},"compiletest.html#adding-a-new-header-command":{"tf":1.0},"incrcomp-debugging.html#dumping-the-graph":{"tf":1.0},"incrcomp-debugging.html#tracking-down-incorrect-edges":{"tf":1.0},"high-level-overview.html#the-main-stages-of-compilation":{"tf":1.4142135623730952},"traits/hrtb.html#higher-ranked-trait-obligations":{"tf":1.7320508075688773},"traits/resolution.html#selection":{"tf":1.0},"ty.html#allocating-and-working-with-types":{"tf":1.7320508075688773},"hir.html#the-hir-map":{"tf":1.0},"traits/resolution.html#candidate-assembly":{"tf":2.0},"variance.html#addendum-variance-on-traits":{"tf":1.0}},"df":20,"e":{"docs":{},"df":0,"r":{"docs":{"macro-expansion.html#the-macro-parser":{"tf":2.449489742783178}},"df":1}}}},"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{"traits/bibliography.html#bibliography":{"tf":1.0},"traits/implied-bounds.html#implied-bounds":{"tf":1.0}},"df":2}}},"s":{"docs":{},"df":0,"a":{"docs":{},"df":0,"k":{"docs":{},"df":0,"i":{"docs":{"traits/lowering-to-logic.html#source":{"tf":1.0}},"df":1}}}},"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"traits/canonical-queries.html#the-traditional-interactive-prolog-query":{"tf":1.0},"miri.html#allocations":{"tf":1.0},"traits/canonicalization.html#canonicalization":{"tf":1.0}},"df":3}}},"h":{"docs":{"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.0},"appendix/glossary.html#appendix-c-glossary":{"tf":1.0}},"df":2,"e":{"docs":{},"df":0,"m":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{"traits/lowering-to-logic.html#type-checking-generic-functions-beyond-horn-clauses":{"tf":1.0}},"df":1}}}}}},"y":{"docs":{},"df":0,"b":{"docs":{"variance.html#trait-variance-and-vtable-resolution":{"tf":1.0}},"df":1,"e":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{"diag.html#suggestions":{"tf":1.0}},"df":1}}}}}}}}},"_":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{},"df":0,"_":{"docs":{},"df":0,"s":{"docs":{},"df":0,"u":{"docs":{},"df":0,"f":{"docs":{},"df":0,"f":{"docs":{},"df":0,"i":{"docs":{},"df":0,"x":{"docs":{},"df":0,".":{"docs":{},"df":0,"d":{"docs":{},"df":0,"o":{"docs":{},"df":0,"t":{"docs":{"compiler-debugging.html#formatting-graphviz-output-dot-files":{"tf":1.0}},"df":1}}},"p":{"docs":{},"df":0,"d":{"docs":{},"df":0,"f":{"docs":{"compiler-debugging.html#formatting-graphviz-output-dot-files":{"tf":1.4142135623730952}},"df":1}}}}}}}}}}}}},"_":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"f":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"c":{"docs":{},"df":0,"e":{"docs":{},"df":0,"<":{"docs":{},"df":0,"'":{"docs":{},"df":0,"a":{"docs":{"ty.html#the-tcx-and-how-it-uses-lifetimes":{"tf":1.0}},"df":1}}}}}}}}}}}}}}},"b":{"docs":{},"df":0,"o":{"docs":{},"df":0,"d":{"docs":{},"df":0,"y":{"docs":{},"df":0,"_":{"docs":{},"df":0,"o":{"docs":{},"df":0,"w":{"docs":{},"df":0,"n":{"docs":{},"df":0,"e":{"docs":{},"df":0,"d":{"docs":{},"df":0,"_":{"docs":{},"df":0,"b":{"docs":{},"df":0,"i":{"docs":{"hir.html#hir-bodies":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}},"p":{"docs":{"traits/lowering-rules.html#lowering-where-clauses":{"tf":2.449489742783178},"traits/lowering-rules.html#trait-header":{"tf":1.0},"appendix/glossary.html#appendix-c-glossary":{"tf":1.4142135623730952},"rustc-driver.html#the-rustc-driver":{"tf":1.0},"hir.html#the-hir-map":{"tf":2.23606797749979},"traits/lowering-to-logic.html#lowering-to-logic":{"tf":1.0},"hir.html#out-of-band-storage-and-the--crate--type":{"tf":2.0},"traits/canonicalization.html#canonicalization":{"tf":1.0},"the-parser.html#the-parser":{"tf":1.0},"mir/regionck.html#skolemization-and-outlives-constraints":{"tf":1.0},"query.html#adding-a-new-kind-of-query":{"tf":1.0},"appendix/stupid-stats.html#compilercontroller":{"tf":1.0},"traits/hrtb.html#higher-ranked-trait-obligations":{"tf":1.0},"hir.html#hir-bodies":{"tf":1.0},"mir/index.html#mir-data-types":{"tf":1.0},"appendix/code-index.html#appendix-d-code-index":{"tf":1.0},"traits/lowering-to-logic.html#rust-traits-and-logic":{"tf":2.0}},"df":17},"i":{"docs":{},"df":0,"n":{"docs":{"traits/chalk-overview.html#intermediate-representation-ir":{"tf":1.0},"mir/borrowck.html#mir-borrow-check":{"tf":1.0},"tests/adding.html#header-commands-configuring-rustc":{"tf":1.0},"compiler-debugging.html#getting-a-backtrace-for-errors":{"tf":1.0},"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.4142135623730952},"compiletest.html#introduction":{"tf":1.0},"mir/index.html#key-mir-vocabulary":{"tf":1.7320508075688773},"miri.html#interpretation":{"tf":1.0},"high-level-overview.html#the-main-stages-of-compilation":{"tf":1.0},"compiletest.html#adding-a-new-header-command":{"tf":1.4142135623730952},"high-level-overview.html#crate-structure":{"tf":1.4142135623730952},"type-inference.html#inference-variables":{"tf":1.0},"mir/passes.html#seeing-how-the-mir-changes-as-the-compiler-executes":{"tf":3.1622776601683797},"traits/lowering-module.html#the--program_clauses_for--query":{"tf":1.0},"traits/lowering-module.html#unit-tests":{"tf":1.0},"hir.html#the-hir":{"tf":1.0},"mir/regionck.html#skolemization-and-universes":{"tf":1.0},"tests/intro.html#the-compiler-testing-framework":{"tf":1.0},"the-parser.html#the-parser":{"tf":1.7320508075688773},"rustc-driver.html#the-rustc-driver":{"tf":2.0},"appendix/glossary.html#appendix-c-glossary":{"tf":1.0},"mir/borrowck.html#major-phases-of-the-borrow-checker":{"tf":1.0},"traits/resolution.html#selection":{"tf":1.0},"type-inference.html#type-inference":{"tf":1.0},"rustdoc.html#the-walking-tour-of-rustdoc":{"tf":1.0},"mir/index.html#mir-data-types":{"tf":1.0},"traits/canonical-queries.html#examples":{"tf":1.4142135623730952},"mir/regionck.html#subtyping-and-skolemization":{"tf":1.0},"rustdoc.html#from-crate-to-clean":{"tf":1.0}},"df":29,"t":{"docs":{},"df":0,"a":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{"query.html#how-the-compiler-executes-a-query":{"tf":1.4142135623730952},"appendix/stupid-stats.html#overview-of-the-compilation-process":{"tf":1.0},"appendix/stupid-stats.html#appendix-a-a-tutorial-on-creating-a-drop-in-replacement-for-rustc":{"tf":1.4142135623730952},"mir/regionck.html#representing-the-values-of-a-region-variable":{"tf":1.4142135623730952},"hir.html#identifiers-in-the-hir":{"tf":1.0}},"df":5}}}},"_":{"docs":{},"df":0,"q":{"docs":{},"df":0,"u":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{"incremental-compilation.html#the-query-dag":{"tf":1.4142135623730952}},"df":1},"y":{"docs":{},"df":0,"(":{"docs":{},"df":0,"t":{"docs":{},"df":0,"c":{"docs":{},"df":0,"x":{"docs":{"incremental-compilation.html#the-query-dag":{"tf":1.0}},"df":1}}}}}}}}}},"l":{"docs":{},"df":0,"i":{"docs":{"tests/adding.html#normalization":{"tf":1.0},"rustdoc.html#from-crate-to-clean":{"tf":1.0},"miri.html#datastructures":{"tf":1.0}},"df":3}},".":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"d":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"r":{"docs":{"tests/adding.html#normalization":{"tf":1.0}},"df":1}}}}}}}}},"n":{"docs":{},"df":0,"i":{"docs":{"appendix/background.html#what-is-a-control-flow-graph":{"tf":1.0},"appendix/stupid-stats.html#appendix-a-a-tutorial-on-creating-a-drop-in-replacement-for-rustc":{"tf":1.7320508075688773},"tests/intro.html#other-tests":{"tf":1.0},"high-level-overview.html#crate-structure":{"tf":1.4142135623730952},"hir.html#the-hir":{"tf":1.0},"compiletest.html#adding-a-new-header-command":{"tf":1.0},"compiler-debugging.html#getting-logging-output":{"tf":1.0},"rustc-driver.html#a-note-on-lifetimes":{"tf":1.0},"compiletest.html#introduction":{"tf":1.4142135623730952},"traits/index.html#trait-solving-new-style":{"tf":1.0},"traits/chalk-overview.html#an-overview-of-chalk":{"tf":1.0},"traits/canonical-queries.html#examples":{"tf":1.0},"const-eval.html#constant-evaluation":{"tf":1.0},"traits/lowering-to-logic.html#type-checking-generic-functions-beyond-horn-clauses":{"tf":1.0},"mir/regionck.html#universes-and-skolemized-region-elements":{"tf":1.0},"incremental-compilation.html#improvements-to-the-basic-algorithm":{"tf":1.0}},"df":16,"p":{"docs":{},"df":0,"u":{"docs":{},"df":0,"l":{"docs":{"mir/index.html#introduction-to-mir":{"tf":1.0}},"df":1}}},"f":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{"rustc-driver.html#a-note-on-lifetimes":{"tf":1.0},"rustdoc.html#from-soup-to-nuts":{"tf":1.0}},"df":2}}}}},"a":{"docs":{},"df":0,"g":{"docs":{"rustc-driver.html#the-rustc-driver":{"tf":1.0},"variance.html#dependency-graph-management":{"tf":1.0}},"df":2}},"n":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"ty.html#the-tcx-and-how-it-uses-lifetimes":{"tf":1.0},"appendix/code-index.html#appendix-d-code-index":{"tf":1.0}},"df":2}}},"u":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{"tests/intro.html#testing-on-emulators":{"tf":1.0},"compiler-debugging.html#debugging-llvm":{"tf":1.0},"appendix/stupid-stats.html#appendix-a-a-tutorial-on-creating-a-drop-in-replacement-for-rustc":{"tf":1.0},"tests/intro.html#compiletest-test-suites":{"tf":1.0}},"df":4}}},"d":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{"conventions.html#formatting-and-the-tidy-script":{"tf":1.0}},"df":1}}}}}}},"k":{"docs":{},"df":0,"e":{"docs":{"compiler-debugging.html#debugging-the-compiler":{"tf":1.0},"traits/chalk-overview.html#lowering":{"tf":1.0},"compiler-debugging.html#getting-a-backtrace-for-errors":{"tf":1.4142135623730952},"tests/adding.html#naming-your-test":{"tf":1.0},"high-level-overview.html#crate-structure":{"tf":1.4142135623730952},"mir/visitor.html#mir-visitor":{"tf":1.0},"rustdoc.html#dotting-is-and-crossing-ts":{"tf":1.0},"variance.html#variance-of-type-and-lifetime-parameters":{"tf":1.4142135623730952},"compiler-debugging.html#debugging-llvm":{"tf":1.4142135623730952},"appendix/glossary.html#appendix-c-glossary":{"tf":1.0},"type-inference.html#region-constraints":{"tf":1.0},"mir/passes.html#seeing-how-the-mir-changes-as-the-compiler-executes":{"tf":1.0},"mir/passes.html#implementing-and-registering-a-pass":{"tf":1.0},"mir/index.html#key-mir-vocabulary":{"tf":1.0},"rustdoc.html#hot-potato":{"tf":1.4142135623730952},"traits/canonicalization.html#canonicalizing-the-query-result":{"tf":1.0},"diag.html#emitting-diagnostics":{"tf":1.0},"traits/associated-types.html#projection-equality":{"tf":1.0},"diag.html#edition-gated-lints":{"tf":1.0},"rustdoc.html#from-crate-to-clean":{"tf":1.0},"type-inference.html#snapshots":{"tf":1.0},"query.html#cycles-between-queries":{"tf":1.0},"method-lookup.html#candidate-search":{"tf":1.0},"type-inference.html#subtyping-obligations":{"tf":1.0},"high-level-overview.html#the-main-stages-of-compilation":{"tf":1.4142135623730952},"mir/passes.html#mir-passes":{"tf":1.4142135623730952},"traits/lowering-rules.html#trait-header":{"tf":1.0},"tests/adding.html#what-kind-of-test-should-i-add":{"tf":1.4142135623730952},"compiletest.html#adding-a-new-header-command":{"tf":1.0},"variance.html#variance-and-associated-types":{"tf":1.7320508075688773},"mir/regionck.html#representing-the-values-of-a-region-variable":{"tf":1.0},"hir.html#the-hir":{"tf":1.0},"tests/adding.html#tests-that-do-not-result-in-compile-errors":{"tf":1.0},"appendix/stupid-stats.html#appendix-a-a-tutorial-on-creating-a-drop-in-replacement-for-rustc":{"tf":2.0},"tests/adding.html#editing-and-updating-the-reference-files":{"tf":1.0},"diag.html#suggestions":{"tf":1.4142135623730952},"conventions.html#how-to-structure-your-pr":{"tf":2.0},"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":2.0},"rustdoc.html#cheat-sheet":{"tf":1.0},"type-inference.html#type-inference":{"tf":1.0},"compiler-debugging.html#getting-logging-output":{"tf":1.0},"param_env.html#parameter-environment":{"tf":1.0},"tests/intro.html#compiletest-test-suites":{"tf":2.23606797749979},"traits/lowering-to-logic.html#type-checking-generic-functions-beyond-horn-clauses":{"tf":1.0},"how-to-build-and-run.html#create-a-configtoml":{"tf":1.0},"miri.html#miri":{"tf":1.0}},"df":46,"_":{"docs":{},"df":0,"g":{"docs":{},"df":0,"l":{"docs":{},"df":0,"o":{"docs":{},"df":0,"b":{"docs":{},"df":0,"_":{"docs":{},"df":0,"m":{"docs":{},"df":0,"a":{"docs":{},"df":0,"p":{"docs":{"appendix/stupid-stats.html#compilercontroller":{"tf":1.0}},"df":1}}}}}}}},"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{"rustdoc.html#other-tricks-up-its-sleeve":{"tf":1.4142135623730952}},"df":1}}}}},"f":{"docs":{},"df":0,"i":{"docs":{},"df":0,"l":{"docs":{"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.0},"tests/intro.html#compiletest-test-suites":{"tf":1.0}},"df":2}}}}},"d":{"docs":{},"df":0,"e":{"docs":{"traits/canonicalization.html#canonicalizing-the-query-result":{"tf":1.0},"const-eval.html#constant-evaluation":{"tf":1.0},"mir/regionck.html#extending-the-universal-regions-check":{"tf":1.0},"appendix/glossary.html#appendix-c-glossary":{"tf":1.0}},"df":4}},"r":{"docs":{},"df":0,"k":{"docs":{"tests/adding.html#other-header-commands":{"tf":1.0},"miri.html#allocations":{"tf":1.0},"traits/resolution.html#major-concepts":{"tf":1.0},"incremental-compilation.html#the-query-dag":{"tf":1.4142135623730952},"incremental-compilation.html#the-try-mark-green-algorithm":{"tf":2.23606797749979},"incremental-compilation.html#the-basic-algorithm":{"tf":1.0},"traits/resolution.html#candidate-assembly":{"tf":1.4142135623730952}},"df":7,"e":{"docs":{},"df":0,"r":{"docs":{"compiletest.html#adding-a-new-header-command":{"tf":1.0},"rustdoc.html#hot-potato":{"tf":1.0}},"df":2,"t":{"docs":{},"df":0,"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{"variance.html#addendum-variance-on-traits":{"tf":1.0}},"df":1}}}}}}},"d":{"docs":{},"df":0,"o":{"docs":{},"df":0,"w":{"docs":{},"df":0,"n":{"docs":{"rustdoc.html#from-clean-to-crate":{"tf":1.7320508075688773},"rustdoc.html#other-tricks-up-its-sleeve":{"tf":1.4142135623730952},"rustdoc.html#cheat-sheet":{"tf":1.4142135623730952},"rustdoc.html#hot-potato":{"tf":2.0}},"df":4}}}}}},"c":{"docs":{"compiler-debugging.html#getting-a-backtrace":{"tf":1.0},"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.4142135623730952}},"df":2,"h":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{"appendix/stupid-stats.html#overview-of-the-compilation-process":{"tf":1.0},"miri.html#miri":{"tf":1.4142135623730952},"diag.html#suggestions":{"tf":1.0}},"df":3,"e":{"docs":{},"df":0,"a":{"docs":{},"df":0,"p":{"docs":{},"df":0,"p":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{},"df":0,"c":{"docs":{"diag.html#suggestions":{"tf":1.0}},"df":1}}}}}}}}}},".":{"docs":{},"df":0,"n":{"docs":{},"df":0,"o":{"docs":{},"df":0,"d":{"docs":{"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.0}},"df":1}}}},"o":{"docs":{"tests/adding.html#ignoring-tests":{"tf":1.0}},"df":1},"r":{"docs":{},"df":0,"o":{"docs":{"how-to-build-and-run.html#create-a-configtoml":{"tf":1.0},"high-level-overview.html#the-main-stages-of-compilation":{"tf":1.4142135623730952},"query.html#adding-a-new-kind-of-query":{"tf":2.23606797749979},"tests/running.html#running-a-subset-of-the-test-suites":{"tf":1.0},"diag.html#declaring-a-lint":{"tf":1.0},"diag.html#lint-groups":{"tf":1.0},"appendix/stupid-stats.html#compilercontroller":{"tf":1.0},"macro-expansion.html#macro-expansion":{"tf":3.0},"mir/visitor.html#mir-visitor":{"tf":1.0},"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.7320508075688773},"rustc-driver.html#the-rustc-driver":{"tf":1.0},"macro-expansion.html#example":{"tf":2.0},"query.html#how-the-compiler-executes-a-query":{"tf":1.0},"macro-expansion.html#the-macro-parser":{"tf":4.898979485566356},"name-resolution.html#scopes-and-ribs":{"tf":1.4142135623730952},"appendix/stupid-stats.html#overview-of-the-compilation-process":{"tf":2.23606797749979},"appendix/stupid-stats.html#appendix-a-a-tutorial-on-creating-a-drop-in-replacement-for-rustc":{"tf":1.0},"name-resolution.html#overall-strategy":{"tf":1.0},"traits/lowering-rules.html#notation":{"tf":1.4142135623730952},"traits/chalk-overview.html#testing":{"tf":1.0},"hir.html#the-hir":{"tf":1.0},"diag.html#error-messages":{"tf":1.4142135623730952},"appendix/glossary.html#appendix-c-glossary":{"tf":1.0},"name-resolution.html#namespaces":{"tf":1.0},"macro-expansion.html#procedural-macros":{"tf":1.0}},"df":25,"_":{"docs":{},"df":0,"r":{"docs":{},"df":0,"u":{"docs":{},"df":0,"l":{"docs":{"macro-expansion.html#example":{"tf":1.0},"macro-expansion.html#the-macro-parser":{"tf":1.4142135623730952}},"df":2}}}}}}},"j":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{"mir/regionck.html#mir-based-region-checking-nll":{"tf":1.0},"traits/resolution.html#major-concepts":{"tf":1.0},"rustdoc.html#the-walking-tour-of-rustdoc":{"tf":1.0},"rustdoc.html#from-crate-to-clean":{"tf":1.0},"traits/resolution.html#candidate-assembly":{"tf":1.0},"method-lookup.html#method-lookup":{"tf":1.0},"rustdoc.html#other-tricks-up-its-sleeve":{"tf":1.0},"traits/resolution.html#overview":{"tf":1.0},"rustdoc.html#from-clean-to-crate":{"tf":1.0},"rustdoc.html#hot-potato":{"tf":1.0},"mir/borrowck.html#major-phases-of-the-borrow-checker":{"tf":1.0}},"df":11}}},"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"tests/intro.html#testing-infrastructure":{"tf":1.0},"tests/adding.html#adding-new-tests":{"tf":1.0}},"df":2}}}}},"i":{"docs":{},"df":0,"c":{"docs":{},"df":0,"h":{"docs":{},"df":0,"a":{"docs":{},"df":0,"e":{"docs":{},"df":0,"l":{"docs":{"appendix/background.html#what-is-a-dataflow-analysis":{"tf":1.0}},"df":1}}}}},"s":{"docs":{},"df":0,"m":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{},"df":0,"c":{"docs":{},"df":0,"h":{"docs":{"tests/adding.html#revisions":{"tf":1.0}},"df":1}}}}},"t":{"docs":{},"df":0,"a":{"docs":{},"df":0,"k":{"docs":{"tests/adding.html#adding-new-tests":{"tf":1.0},"about-this-guide.html#about-this-guide":{"tf":1.0}},"df":2}}},"c":{"docs":{},"df":0,"e":{"docs":{},"df":0,"l":{"docs":{},"df":0,"l":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{"rustc-driver.html#the-rustc-driver":{"tf":1.0}},"df":1}}}}}}},"t":{"docs":{"conventions.html#copyright-notice":{"tf":1.4142135623730952},"compiletest.html#adding-a-new-header-command":{"tf":1.4142135623730952}},"df":2},"r":{"docs":{"tests/adding.html#what-kind-of-test-should-i-add":{"tf":1.4142135623730952},"mir/index.html#mir-data-types":{"tf":2.449489742783178},"mir/passes.html#seeing-how-the-mir-changes-as-the-compiler-executes":{"tf":2.449489742783178},"miri.html#miri":{"tf":2.0},"mir/index.html#the-mir-mid-level-ir":{"tf":2.23606797749979},"mir/borrowck.html#mir-borrow-check":{"tf":2.449489742783178},"type-inference.html#extracting-region-constraints":{"tf":1.0},"mir/passes.html#implementing-and-registering-a-pass":{"tf":3.0},"mir/optimizations.html#mir-optimizations":{"tf":1.0},"appendix/glossary.html#appendix-c-glossary":{"tf":2.23606797749979},"mir/regionck.html#mir-based-region-checking-nll":{"tf":2.449489742783178},"mir/construction.html#mir-construction":{"tf":1.0},"const-eval.html#constant-evaluation":{"tf":1.4142135623730952},"mir/index.html#key-mir-vocabulary":{"tf":3.0},"mir/visitor.html#mir-visitor":{"tf":2.449489742783178},"mir/regionck.html#representing-the-values-of-a-region-variable":{"tf":1.0},"mir/passes.html#mir-passes":{"tf":3.1622776601683797},"high-level-overview.html#the-main-stages-of-compilation":{"tf":1.7320508075688773},"query.html#queries-demand-driven-compilation":{"tf":1.0},"query.html#adding-a-new-kind-of-query":{"tf":1.0},"appendix/background.html#what-is-a-control-flow-graph":{"tf":1.0},"mir/regionck.html#the-mir-type-check":{"tf":1.0},"mir/visitor.html#traversal":{"tf":1.0},"mir/passes.html#stealing":{"tf":2.0},"diag.html#span":{"tf":1.0},"tests/intro.html#compiletest-test-suites":{"tf":1.4142135623730952},"mir/index.html#introduction-to-mir":{"tf":2.0},"mir/borrowck.html#major-phases-of-the-borrow-checker":{"tf":2.0}},"df":28,"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{"the-parser.html#the-parser":{"tf":1.0}},"df":1}}},"_":{"docs":{},"df":0,"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{"mir/passes.html#stealing":{"tf":1.4142135623730952}},"df":1,"_":{"docs":{},"df":0,"q":{"docs":{},"df":0,"u":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{},"df":0,"f":{"docs":{"mir/passes.html#stealing":{"tf":1.0}},"df":1,"(":{"docs":{},"df":0,"d":{"docs":{"mir/passes.html#stealing":{"tf":1.4142135623730952}},"df":1}}}}}}}}},"(":{"docs":{},"df":0,"d":{"docs":{"mir/passes.html#mir-passes":{"tf":1.0},"mir/passes.html#stealing":{"tf":1.4142135623730952}},"df":2}}}}}}},"v":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{},"df":0,"d":{"docs":{"mir/passes.html#stealing":{"tf":1.4142135623730952},"mir/passes.html#implementing-and-registering-a-pass":{"tf":1.0}},"df":2,"a":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"d":{"docs":{},"df":0,"(":{"docs":{},"df":0,"d":{"docs":{"mir/passes.html#mir-passes":{"tf":1.0},"mir/passes.html#stealing":{"tf":2.0}},"df":2}}}}}}}}}}},"b":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"w":{"docs":{},"df":0,"c":{"docs":{},"df":0,"k":{"docs":{"mir/borrowck.html#major-phases-of-the-borrow-checker":{"tf":1.0}},"df":1}}}}}}},"u":{"docs":{},"df":0,"i":{"docs":{},"df":0,"l":{"docs":{},"df":0,"d":{"docs":{},"df":0,"(":{"docs":{},"df":0,"d":{"docs":{"mir/passes.html#mir-passes":{"tf":1.0}},"df":1}}}}}}},"d":{"docs":{},"df":0,"u":{"docs":{},"df":0,"m":{"docs":{},"df":0,"p":{"docs":{"mir/passes.html#seeing-how-the-mir-changes-as-the-compiler-executes":{"tf":2.0}},"df":1}}}}},"i":{"docs":{"const-eval.html#constant-evaluation":{"tf":1.4142135623730952},"miri.html#allocations":{"tf":1.0},"tests/intro.html#other-tests":{"tf":1.0},"miri.html#miri":{"tf":1.7320508075688773},"miri.html#interpretation":{"tf":1.4142135623730952},"appendix/glossary.html#appendix-c-glossary":{"tf":1.0}},"df":6,"'":{"docs":{"miri.html#datastructures":{"tf":1.0}},"df":1}},"p":{"docs":{},"df":0,"a":{"docs":{},"df":0,"s":{"docs":{},"df":0,"s":{"docs":{"mir/passes.html#implementing-and-registering-a-pass":{"tf":1.7320508075688773}},"df":1}}}},"=":{"docs":{},"df":0,"f":{"docs":{"mir/passes.html#seeing-how-the-mir-changes-as-the-compiler-executes":{"tf":1.0}},"df":1,"o":{"docs":{},"df":0,"o":{"docs":{"mir/passes.html#seeing-how-the-mir-changes-as-the-compiler-executes":{"tf":1.0}},"df":1}}},"m":{"docs":{},"df":0,"a":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{"mir/passes.html#seeing-how-the-mir-changes-as-the-compiler-executes":{"tf":1.0}},"df":1}}}},"'":{"docs":{},"df":0,"m":{"docs":{},"df":0,"a":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{"mir/passes.html#seeing-how-the-mir-changes-as-the-compiler-executes":{"tf":1.4142135623730952}},"df":1}}}}}}},"x":{"docs":{"compiler-debugging.html#debugging-llvm":{"tf":1.0}},"df":1},"l":{"docs":{},"df":0,"l":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"traits/bibliography.html#bibliography":{"tf":1.0}},"df":1}}},"n":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"type-inference.html#type-inference":{"tf":1.0}},"df":1}}},"d":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{"traits/canonicalization.html#processing-the-canonicalized-query-result":{"tf":1.0}},"df":1}}}},"n":{"docs":{"tests/adding.html#other-header-commands":{"tf":1.4142135623730952}},"df":1,"g":{"docs":{},"df":0,"w":{"docs":{"compiler-debugging.html#getting-a-backtrace":{"tf":1.0}},"df":1}},"i":{"docs":{},"df":0,"m":{"docs":{"traits/lowering-module.html#unit-tests":{"tf":1.0},"rustc-driver.html#a-note-on-lifetimes":{"tf":1.0},"high-level-overview.html#the-main-stages-of-compilation":{"tf":1.0}},"df":3,"u":{"docs":{},"df":0,"m":{"docs":{"variance.html#variance-and-associated-types":{"tf":1.0}},"df":1}},"i":{"docs":{},"df":0,"s":{"docs":{"the-parser.html#the-parser":{"tf":1.0}},"df":1}}}},"d":{"docs":{"how-to-build-and-run.html#running-xpy-and-building-a-stage1-compiler":{"tf":1.0},"appendix/stupid-stats.html#appendix-a-a-tutorial-on-creating-a-drop-in-replacement-for-rustc":{"tf":1.0}},"df":2}},"d":{"docs":{"mir/index.html#the-mir-mid-level-ir":{"tf":1.4142135623730952},"appendix/glossary.html#appendix-c-glossary":{"tf":1.0}},"df":2,"d":{"docs":{},"df":0,"l":{"docs":{"high-level-overview.html#the-main-stages-of-compilation":{"tf":1.0},"high-level-overview.html#crate-structure":{"tf":1.0}},"df":2}}},"p":{"docs":{"tests/adding.html#ignoring-tests":{"tf":1.0}},"df":1}},"k":{"docs":{},"df":0,"_":{"docs":{"ty.html#allocating-and-working-with-types":{"tf":1.0}},"df":1,"s":{"docs":{},"df":0,"u":{"docs":{},"df":0,"b":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{"ty.html#beyond-types-other-kinds-of-arena-allocated-data-structures":{"tf":1.0}},"df":1}}}}}}},"ø":{"docs":{},"df":0,"l":{"docs":{},"df":0,"l":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"appendix/background.html#what-is-a-dataflow-analysis":{"tf":1.0}},"df":1}}}}},"e":{"docs":{},"df":0,"m":{"docs":{},"df":0,"c":{"docs":{},"df":0,"a":{"docs":{},"df":0,"c":{"docs":{},"df":0,"h":{"docs":{"how-to-build-and-run.html#create-a-configtoml":{"tf":1.0}},"df":1}}}},"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{"miri.html#allocations":{"tf":1.4142135623730952},"miri.html#miri":{"tf":1.7320508075688773},"const-eval.html#constant-evaluation":{"tf":1.0},"rustc-driver.html#a-note-on-lifetimes":{"tf":1.0},"miri.html#interpretation":{"tf":2.0},"traits/canonical-queries.html#the-traditional-interactive-prolog-query":{"tf":1.0},"traits/canonicalization.html#canonicalizing-the-query-result":{"tf":1.0},"the-parser.html#the-parser":{"tf":1.0},"mir/index.html#key-mir-vocabulary":{"tf":1.7320508075688773},"ty.html#the-tcx-and-how-it-uses-lifetimes":{"tf":1.7320508075688773},"rustc-driver.html#the-rustc-driver":{"tf":1.0}},"df":11}},"i":{"docs":{},"df":0,"z":{"docs":{"mir/passes.html#stealing":{"tf":1.0},"query.html#queries-demand-driven-compilation":{"tf":1.0}},"df":2}}}},"n":{"docs":{},"df":0,"t":{"docs":{},"df":0,"i":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{"traits/resolution.html#selection-during-translation":{"tf":1.0},"macro-expansion.html#the-macro-parser":{"tf":1.0},"variance.html#addendum-variance-on-traits":{"tf":1.0},"mir/index.html#mir-data-types":{"tf":1.0}},"df":4,"/":{"docs":{},"df":0,"d":{"docs":{},"df":0,"i":{"docs":{},"df":0,"s":{"docs":{},"df":0,"c":{"docs":{},"df":0,"u":{"docs":{},"df":0,"s":{"docs":{},"df":0,"s":{"docs":{"traits/specialization.html#specialization":{"tf":1.0}},"df":1}}}}}}}}}}}}},"t":{"docs":{"variance.html#the-algorithm":{"tf":1.0}},"df":1,"a":{"docs":{"tests/adding.html#other-header-commands":{"tf":1.0},"traits/goals-and-clauses.html#goals-and-clauses-meta-structure":{"tf":1.0},"traits/lowering-rules.html#trait-header":{"tf":1.0}},"df":3,"v":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{"macro-expansion.html#example":{"tf":1.4142135623730952},"macro-expansion.html#macro-expansion":{"tf":1.0},"macro-expansion.html#the-macro-parser":{"tf":2.0}},"df":3}}}},"d":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{},"df":0,"a":{"docs":{"query.html#how-the-compiler-executes-a-query":{"tf":1.0},"macro-expansion.html#the-macro-parser":{"tf":1.0},"appendix/glossary.html#appendix-c-glossary":{"tf":1.7320508075688773},"conventions.html#using-crates-from-cratesio":{"tf":1.0},"miri.html#miri":{"tf":1.0},"mir/passes.html#mir-passes":{"tf":1.0}},"df":6}}}}},"h":{"docs":{},"df":0,"o":{"docs":{},"df":0,"d":{"docs":{"miri.html#datastructures":{"tf":1.0},"appendix/glossary.html#appendix-c-glossary":{"tf":1.0},"high-level-overview.html#the-main-stages-of-compilation":{"tf":1.0},"diag.html#span":{"tf":1.0},"diag.html#declaring-a-lint":{"tf":1.7320508075688773},"hir.html#the-hir-map":{"tf":1.0},"mir/passes.html#implementing-and-registering-a-pass":{"tf":1.0},"rustc-driver.html#the-rustc-driver":{"tf":1.0},"ty.html#allocating-and-working-with-types":{"tf":1.7320508075688773},"method-lookup.html#candidate-search":{"tf":1.4142135623730952},"diag.html#error-messages":{"tf":2.23606797749979},"mir/visitor.html#mir-visitor":{"tf":1.4142135623730952},"variance.html#variance-and-object-types":{"tf":1.7320508075688773},"type-inference.html#snapshots":{"tf":1.4142135623730952},"query.html#how-the-compiler-executes-a-query":{"tf":1.0},"method-lookup.html#candidate-assembly":{"tf":3.4641016151377546},"query.html#invoking-queries":{"tf":1.0},"appendix/stupid-stats.html#overview-of-the-compilation-process":{"tf":1.0},"appendix/stupid-stats.html#compilercalls":{"tf":1.4142135623730952},"traits/caching.html#where-clauses-and-the-local-vs-global-cache":{"tf":1.0},"traits/canonicalization.html#canonicalizing-the-query":{"tf":1.0},"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.7320508075688773},"compiletest.html#adding-a-new-header-command":{"tf":1.0},"type-inference.html#enforcing-equality--subtyping":{"tf":1.4142135623730952},"variance.html#addendum-variance-on-traits":{"tf":1.0},"traits/resolution.html#candidate-assembly":{"tf":1.4142135623730952},"query.html#cycles-between-queries":{"tf":1.4142135623730952},"traits/resolution.html#selection-during-translation":{"tf":1.0},"conventions.html#how-to-structure-your-pr":{"tf":1.0},"how-to-build-and-run.html#running-xpy-and-building-a-stage1-compiler":{"tf":1.0},"miri.html#interpretation":{"tf":1.0},"diag.html#suggestions":{"tf":1.0},"type-inference.html#creating-an-inference-context":{"tf":1.0},"query.html#adding-a-new-kind-of-query":{"tf":1.4142135623730952},"method-lookup.html#method-lookup":{"tf":2.6457513110645909},"rustdoc.html#from-crate-to-clean":{"tf":1.0},"type-inference.html#trying-equality":{"tf":1.0}},"df":37}}}},"a":{"docs":{},"df":0,"n":{"docs":{"mir/regionck.html#what-is-a-universe":{"tf":1.0},"conventions.html#prefer-exhaustive-matches":{"tf":1.0},"traits/resolution.html#candidate-assembly":{"tf":1.4142135623730952},"mir/index.html#key-mir-vocabulary":{"tf":1.0},"traits/associated-types.html#associated-type-projection-and-normalization":{"tf":1.0},"name-resolution.html#scopes-and-ribs":{"tf":1.4142135623730952},"macro-expansion.html#example":{"tf":1.4142135623730952},"const-eval.html#constant-evaluation":{"tf":1.4142135623730952},"traits/goals-and-clauses.html#coinductive-goals":{"tf":1.0},"traits/canonicalization.html#processing-the-canonicalized-query-result":{"tf":1.0},"traits/index.html#trait-solving-new-style":{"tf":1.0},"type-inference.html#creating-an-inference-context":{"tf":1.0},"variance.html#addendum-variance-on-traits":{"tf":1.0},"variance.html#trait-variance-and-vtable-resolution":{"tf":1.0},"traits/lowering-to-logic.html#type-checking-normal-functions":{"tf":1.0},"traits/lowering-to-logic.html#type-checking-generic-functions-beyond-horn-clauses":{"tf":1.0},"incremental-compilation.html#the-basic-algorithm":{"tf":1.4142135623730952},"traits/chalk-overview.html#lowering":{"tf":1.0},"param_env.html#parameter-environment":{"tf":1.0},"ty.html#the-tcx-and-how-it-uses-lifetimes":{"tf":1.0},"name-resolution.html#namespaces":{"tf":1.0},"appendix/stupid-stats.html#appendix-a-a-tutorial-on-creating-a-drop-in-replacement-for-rustc":{"tf":1.0},"tests/intro.html#compiletest-test-suites":{"tf":1.0},"traits/lowering-to-logic.html#rust-traits-and-logic":{"tf":1.0},"appendix/glossary.html#appendix-c-glossary":{"tf":1.4142135623730952},"rustdoc.html#from-soup-to-nuts":{"tf":1.0},"traits/chalk-overview.html#well-formedness-checks":{"tf":1.0},"variance.html#variance-of-type-and-lifetime-parameters":{"tf":1.4142135623730952},"tests/adding.html#revisions":{"tf":1.0},"traits/canonical-queries.html#a-trait-query-in-rustc":{"tf":1.7320508075688773},"tests/adding.html#ignoring-tests":{"tf":1.0},"traits/lowering-rules.html#notation":{"tf":1.4142135623730952},"how-to-build-and-run.html#running-xpy-and-building-a-stage1-compiler":{"tf":1.0},"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.4142135623730952},"query.html#cycles-between-queries":{"tf":1.4142135623730952},"traits/lowering-rules.html#trait-header":{"tf":1.0},"variance.html#variance-and-object-types":{"tf":1.4142135623730952},"variance.html#variance-and-associated-types":{"tf":2.0},"how-to-build-and-run.html#create-a-configtoml":{"tf":1.0},"mir/regionck.html#subtyping-and-skolemization":{"tf":1.0},"mir/passes.html#stealing":{"tf":1.0},"traits/canonical-queries.html#examples":{"tf":1.0},"compiler-debugging.html#expensive-operations-in-logs":{"tf":2.0},"traits/hrtb.html#basic-matching-and-skolemization-leaks":{"tf":1.0},"compiler-debugging.html#debugging-llvm":{"tf":1.4142135623730952}},"df":45,"t":{"docs":{"rustdoc.html#cheat-sheet":{"tf":1.0},"tests/adding.html#comment-explaining-what-the-test-is-about":{"tf":1.4142135623730952},"about-this-guide.html#about-this-guide":{"tf":1.4142135623730952}},"df":3},"w":{"docs":{},"df":0,"h":{"docs":{},"df":0,"i":{"docs":{},"df":0,"l":{"docs":{"traits/resolution.html#candidate-assembly":{"tf":1.0}},"df":1}}}},"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"g":{"docs":{"conventions.html#copyright-notice":{"tf":1.0},"tests/adding.html#naming-your-test":{"tf":1.0}},"df":2}}}},"t":{"docs":{"name-resolution.html#name-resolution":{"tf":1.0}},"df":1}},"s":{"docs":{},"df":0,"s":{"docs":{"tests/adding.html#naming-your-test":{"tf":1.0}},"df":1,"a":{"docs":{},"df":0,"g":{"docs":{"diag.html#emitting-diagnostics":{"tf":1.0},"query.html#cycles-between-queries":{"tf":2.23606797749979},"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.0},"macro-expansion.html#the-macro-parser":{"tf":1.0},"miri.html#miri":{"tf":1.0},"tests/adding.html#revisions":{"tf":1.0},"name-resolution.html#name-resolution":{"tf":1.0},"compiler-debugging.html#getting-a-backtrace-for-errors":{"tf":1.0},"tests/adding.html#guide-to-the-ui-tests":{"tf":1.0},"rustc-driver.html#the-rustc-driver":{"tf":1.0},"tests/adding.html#error-annotations":{"tf":1.7320508075688773},"diag.html#error-messages":{"tf":1.7320508075688773}},"df":12}}}},"c":{"docs":{},"df":0,"h":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{"type-inference.html#subtyping-obligations":{"tf":1.0},"incrcomp-debugging.html#testing-the-dependency-graph":{"tf":1.0},"high-level-overview.html#crate-structure":{"tf":1.0},"diag.html#suggestions":{"tf":2.6457513110645909},"traits/lowering-module.html#unit-tests":{"tf":1.0},"traits/lowering-module.html#the--program_clauses_for--query":{"tf":1.0},"mir/passes.html#stealing":{"tf":1.4142135623730952}},"df":7}}}},"r":{"docs":{},"df":0,"g":{"docs":{"conventions.html#how-to-structure-your-pr":{"tf":2.0},"tests/intro.html#testing-infrastructure":{"tf":1.4142135623730952}},"df":2},"e":{"docs":{"compiletest.html#adding-a-new-header-command":{"tf":1.0},"traits/specialization.html#specialization":{"tf":1.0}},"df":2}}},"s":{"docs":{"macro-expansion.html#the-macro-parser":{"tf":2.449489742783178}},"df":1,"v":{"docs":{},"df":0,"c":{"docs":{"tests/adding.html#ignoring-tests":{"tf":1.0},"compiler-debugging.html#getting-a-backtrace":{"tf":1.0}},"df":2}},"g":{"docs":{"diag.html#declaring-a-lint":{"tf":1.4142135623730952}},"df":1}},"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"o":{"docs":{},"df":0,"m":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"p":{"docs":{},"df":0,"h":{"docs":{"traits/associated-types.html#associated-type-projection-and-normalization":{"tf":1.4142135623730952}},"df":1}}}}}}},"r":{"docs":{},"df":0,"e":{"docs":{"compiletest.html#header-commands":{"tf":1.0},"tests/adding.html#naming-your-test":{"tf":1.0},"traits/lowering-to-logic.html#rust-traits-and-logic":{"tf":1.0},"high-level-overview.html#crate-structure":{"tf":2.23606797749979},"variance.html#variance-and-associated-types":{"tf":1.0},"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.7320508075688773},"query.html#adding-a-new-kind-of-query":{"tf":1.0},"how-to-build-and-run.html#other-xpy-commands":{"tf":1.0},"rustc-driver.html#the-rustc-driver":{"tf":1.0},"high-level-overview.html#the-main-stages-of-compilation":{"tf":1.4142135623730952},"appendix/background.html#what-is-co--and-contra-variance":{"tf":1.0},"type-inference.html#creating-an-inference-context":{"tf":1.4142135623730952},"mir/borrowck.html#mir-borrow-check":{"tf":1.0},"how-to-build-and-run.html#create-a-configtoml":{"tf":1.7320508075688773},"appendix/glossary.html#appendix-c-glossary":{"tf":5.477225575051661},"mir/passes.html#seeing-how-the-mir-changes-as-the-compiler-executes":{"tf":1.0},"macro-expansion.html#the-macro-parser":{"tf":1.7320508075688773},"mir/passes.html#stealing":{"tf":1.0},"how-to-build-and-run.html#running-xpy-and-building-a-stage1-compiler":{"tf":1.0},"mir/index.html#key-mir-vocabulary":{"tf":1.0},"mir/borrowck.html#major-phases-of-the-borrow-checker":{"tf":1.4142135623730952},"traits/index.html#trait-solving-new-style":{"tf":1.4142135623730952},"traits/bibliography.html#bibliography":{"tf":1.0},"tests/adding.html#comment-explaining-what-the-test-is-about":{"tf":1.0},"appendix/stupid-stats.html#compilercontroller":{"tf":1.0},"traits/associated-types.html#associated-type-projection-and-normalization":{"tf":1.0},"traits/lowering-rules.html#lowering-impls":{"tf":1.0},"compiletest.html#adding-a-new-header-command":{"tf":1.0},"compiletest.html#introduction":{"tf":1.4142135623730952},"param_env.html#parameter-environment":{"tf":1.4142135623730952},"appendix/code-index.html#appendix-d-code-index":{"tf":1.4142135623730952},"traits/lowering-rules.html#lowering-function-and-constant-declarations":{"tf":1.0},"variance.html#variance-of-type-and-lifetime-parameters":{"tf":1.0},"traits/resolution.html#candidate-assembly":{"tf":1.0},"query.html#cycles-between-queries":{"tf":1.4142135623730952},"type-inference.html#subtyping-obligations":{"tf":1.4142135623730952},"query.html#how-the-compiler-executes-a-query":{"tf":1.0},"mir/regionck.html#what-is-a-universe":{"tf":1.0},"traits/canonicalization.html#canonicalization":{"tf":1.0},"tests/adding.html#adding-new-tests":{"tf":1.0},"rustdoc.html#the-walking-tour-of-rustdoc":{"tf":1.7320508075688773},"ty.html#allocating-and-working-with-types":{"tf":1.0},"mir/passes.html#mir-passes":{"tf":1.0},"tests/intro.html#compiletest-test-suites":{"tf":1.0},"type-inference.html#enforcing-equality--subtyping":{"tf":1.4142135623730952},"type-checking.html#type-collection":{"tf":1.0},"name-resolution.html#overall-strategy":{"tf":1.0},"hir.html#the-hir":{"tf":1.0},"diag.html#error-messages":{"tf":1.0},"appendix/background.html#what-is-a-control-flow-graph":{"tf":1.0},"traits/chalk-overview.html#lowering":{"tf":1.0},"conventions.html#formatting-and-the-tidy-script":{"tf":1.0},"miri.html#miri":{"tf":1.0},"macro-expansion.html#example":{"tf":1.4142135623730952},"diag.html#suggestions":{"tf":1.4142135623730952},"mir/regionck.html#mir-based-region-checking-nll":{"tf":1.0},"traits/lowering-rules.html#associated-type-declarations":{"tf":1.0},"traits/canonicalization.html#executing-the-query":{"tf":1.0},"rustc-driver.html#a-note-on-lifetimes":{"tf":1.0},"traits/chalk-overview.html#an-overview-of-chalk":{"tf":1.0},"method-lookup.html#method-lookup":{"tf":1.7320508075688773},"tests/intro.html#other-tests":{"tf":1.0},"traits/canonical-queries.html#canonical-queries":{"tf":1.4142135623730952},"traits/lowering-to-logic.html#type-checking-normal-functions":{"tf":1.0},"traits/hrtb.html#higher-ranked-trait-bounds":{"tf":1.0},"conventions.html#how-to-structure-your-pr":{"tf":1.0},"rustdoc.html#dotting-is-and-crossing-ts":{"tf":1.0},"traits/lowering-to-logic.html#lowering-to-logic":{"tf":1.0},"traits/canonical-queries.html#a-trait-query-in-rustc":{"tf":1.4142135623730952},"appendix/stupid-stats.html#compilercalls":{"tf":1.4142135623730952}},"df":70,"o":{"docs":{},"df":0,"v":{"docs":{"variance.html#addendum-variance-on-traits":{"tf":1.0},"mir/index.html#key-mir-vocabulary":{"tf":1.0},"mir/regionck.html#skolemization-and-outlives-constraints":{"tf":1.0},"query.html#queries-demand-driven-compilation":{"tf":1.0},"tests/adding.html#naming-your-test":{"tf":1.0},"variance.html#variance-and-associated-types":{"tf":1.0}},"df":6}}}},"d":{"docs":{"hir.html#out-of-band-storage-and-the--crate--type":{"tf":1.7320508075688773}},"df":1,"i":{"docs":{},"df":0,"f":{"docs":{"tests/intro.html#compiletest-test-suites":{"tf":1.0}},"df":1,"i":{"docs":{"mir/borrowck.html#major-phases-of-the-borrow-checker":{"tf":1.7320508075688773},"conventions.html#copyright-notice":{"tf":1.0},"miri.html#interpretation":{"tf":1.0},"mir/passes.html#implementing-and-registering-a-pass":{"tf":1.0},"query.html#adding-a-new-kind-of-query":{"tf":1.7320508075688773},"compiletest.html#adding-a-new-header-command":{"tf":1.0},"tests/running.html#running-a-subset-of-the-test-suites":{"tf":1.0},"appendix/stupid-stats.html#compilercalls":{"tf":1.0},"compiletest.html#implementing-the-behavior-change":{"tf":1.0},"query.html#how-the-compiler-executes-a-query":{"tf":1.0},"appendix/stupid-stats.html#compilercontroller":{"tf":1.0}},"df":11}}},"e":{"docs":{"rustdoc.html#other-tricks-up-its-sleeve":{"tf":1.4142135623730952},"tests/intro.html#compiletest-test-suites":{"tf":1.0},"mir/borrowck.html#major-phases-of-the-borrow-checker":{"tf":1.4142135623730952},"mir/index.html#key-mir-vocabulary":{"tf":1.0},"traits/specialization.html#specialization":{"tf":1.0}},"df":5,"l":{"docs":{"traits/lowering-rules.html#lowering-function-and-constant-declarations":{"tf":1.0},"traits/lowering-rules.html#trait-header":{"tf":1.0},"high-level-overview.html#the-main-stages-of-compilation":{"tf":1.4142135623730952},"traits/lowering-rules.html#function-and-constant-values":{"tf":1.0},"high-level-overview.html#crate-structure":{"tf":1.0},"traits/lowering-rules.html#transforming-the-lowered-where-clauses":{"tf":1.0}},"df":6}},"u":{"docs":{},"df":0,"l":{"docs":{"rustdoc.html#from-crate-to-clean":{"tf":1.7320508075688773},"mir/index.html#mir-data-types":{"tf":1.0},"compiler-debugging.html#expensive-operations-in-logs":{"tf":1.7320508075688773},"method-lookup.html#candidate-assembly":{"tf":1.4142135623730952},"name-resolution.html#scopes-and-ribs":{"tf":1.0},"ty.html#beyond-types-other-kinds-of-arena-allocated-data-structures":{"tf":1.4142135623730952},"appendix/stupid-stats.html#compilercalls":{"tf":1.0},"hir.html#out-of-band-storage-and-the--crate--type":{"tf":2.0},"mir/visitor.html#traversal":{"tf":1.0},"mir/borrowck.html#major-phases-of-the-borrow-checker":{"tf":1.0},"the-parser.html#the-parser":{"tf":2.0},"type-inference.html#region-constraints":{"tf":1.0},"type-inference.html#creating-an-inference-context":{"tf":1.0},"query.html#queries-demand-driven-compilation":{"tf":1.4142135623730952},"traits/specialization.html#specialization":{"tf":1.0},"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.0},"ty.html#allocating-and-working-with-types":{"tf":1.0},"appendix/code-index.html#appendix-d-code-index":{"tf":1.4142135623730952},"mir/index.html#introduction-to-mir":{"tf":1.0},"compiler-debugging.html#getting-logging-output":{"tf":1.0},"traits/lowering-module.html#the-lowering-module-in-rustc":{"tf":1.4142135623730952},"type-checking.html#type-collection":{"tf":1.0},"rustc-driver.html#a-note-on-lifetimes":{"tf":1.0},"rustdoc.html#hot-potato":{"tf":1.0},"ty.html#import-conventions":{"tf":1.4142135623730952},"traits/chalk-overview.html#rules":{"tf":1.4142135623730952},"high-level-overview.html#the-main-stages-of-compilation":{"tf":1.4142135623730952},"mir/regionck.html#representing-the-values-of-a-region-variable":{"tf":1.0},"diag.html#lints":{"tf":1.0},"query.html#adding-a-new-kind-of-query":{"tf":1.0},"hir.html#the-hir-map":{"tf":1.0},"name-resolution.html#namespaces":{"tf":1.0},"mir/passes.html#implementing-and-registering-a-pass":{"tf":1.0},"ty.html#the--ty--module-representing-types":{"tf":1.4142135623730952},"name-resolution.html#name-resolution":{"tf":1.0},"mir/visitor.html#mir-visitor":{"tf":1.0},"mir/regionck.html#mir-based-region-checking-nll":{"tf":1.0}},"df":37,"o":{"docs":{"type-inference.html#trying-equality":{"tf":1.0}},"df":1},"e":{"docs":{},"df":0,"'":{"docs":{"rustdoc.html#from-clean-to-crate":{"tf":1.0}},"df":1}}}}},"v":{"docs":{},"df":0,"e":{"docs":{"mir/borrowck.html#mir-borrow-check":{"tf":1.4142135623730952},"rustdoc.html#hot-potato":{"tf":1.0},"traits/lowering-to-logic.html#type-checking-normal-functions":{"tf":1.0},"traits/implied-bounds.html#implied-bounds":{"tf":1.0},"appendix/stupid-stats.html#compilercontroller":{"tf":1.0},"mir/borrowck.html#major-phases-of-the-borrow-checker":{"tf":1.7320508075688773},"mir/index.html#key-mir-vocabulary":{"tf":1.4142135623730952},"conventions.html#formatting-and-the-tidy-script":{"tf":1.0},"mir/regionck.html#mir-based-region-checking-nll":{"tf":1.0},"traits/associated-types.html#equality-and-associated-types":{"tf":1.0}},"df":10}},"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":2.0},"traits/lowering-rules.html#trait-header":{"tf":1.0},"ty.html#allocating-and-working-with-types":{"tf":1.0},"traits/wf.html#well-formedness-checking":{"tf":1.0},"traits/index.html#trait-solving-new-style":{"tf":1.0}},"df":5}}}},"m":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{"traits/resolution.html#candidate-assembly":{"tf":1.0},"conventions.html#formatting-and-the-tidy-script":{"tf":1.0},"miri.html#interpretation":{"tf":1.0},"conventions.html#copyright-notice":{"tf":1.0},"traits/caching.html#where-clauses-and-the-local-vs-global-cache":{"tf":1.0}},"df":5}}}}},"y":{"docs":{},"df":0,"_":{"docs":{},"df":0,"e":{"docs":{},"df":0,"x":{"docs":{},"df":0,"p":{"docs":{},"df":0,"r":{"docs":{"macro-expansion.html#macro-expansion":{"tf":1.0}},"df":1}}}}},"r":{"docs":{},"df":0,"i":{"docs":{},"df":0,"a":{"docs":{},"df":0,"d":{"docs":{"variance.html#addendum-variance-on-traits":{"tf":1.0}},"df":1}}}},"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"d":{"docs":{},"df":0,"e":{"docs":{},"df":0,".":{"docs":{},"df":0,"r":{"docs":{"diag.html#suggestions":{"tf":1.0}},"df":1,"s":{"docs":{},"df":0,":":{"docs":{},"df":0,"3":{"docs":{},"df":0,":":{"docs":{},"df":0,"5":{"docs":{"diag.html#suggestions":{"tf":1.4142135623730952}},"df":1}}}}}}}}}}},"t":{"docs":{},"df":0,"o":{"docs":{},"df":0,"o":{"docs":{},"df":0,"l":{"docs":{"appendix/stupid-stats.html#appendix-a-a-tutorial-on-creating-a-drop-in-replacement-for-rustc":{"tf":1.0}},"df":1}}},"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{},"df":0,"<":{"docs":{},"df":0,"&":{"docs":{},"df":0,"'":{"docs":{},"df":0,"a":{"docs":{"traits/hrtb.html#higher-ranked-trait-bounds":{"tf":1.0}},"df":1}}}}}}}}},"v":{"docs":{},"df":0,"i":{"docs":{},"df":0,"s":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{"mir/visitor.html#mir-visitor":{"tf":1.0}},"df":1}}}}}}},"p":{"docs":{},"df":0,"a":{"docs":{},"df":0,"s":{"docs":{},"df":0,"s":{"docs":{"mir/passes.html#implementing-and-registering-a-pass":{"tf":1.0}},"df":1}}}}},"v":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{"macro-expansion.html#example":{"tf":2.0},"macro-expansion.html#the-macro-parser":{"tf":1.7320508075688773}},"df":2,":":{"docs":{},"df":0,"i":{"docs":{},"df":0,"d":{"docs":{"macro-expansion.html#example":{"tf":1.4142135623730952},"macro-expansion.html#the-macro-parser":{"tf":2.449489742783178}},"df":2}}}}}}},"j":{"docs":{},"df":0,"s":{"docs":{"rustdoc.html#dotting-is-and-crossing-ts":{"tf":1.4142135623730952},"rustdoc.html#cheat-sheet":{"tf":1.0}},"df":2,"o":{"docs":{},"df":0,"n":{"docs":{"diag.html#suggestions":{"tf":1.0}},"df":1}}},"e":{"docs":{},"df":0,"m":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{},"df":0,"l":{"docs":{},"df":0,"o":{"docs":{},"df":0,"c":{"docs":{"how-to-build-and-run.html#create-a-configtoml":{"tf":1.4142135623730952}},"df":1}}}}}}},"a":{"docs":{},"df":0,"v":{"docs":{},"df":0,"a":{"docs":{"variance.html#variance-and-object-types":{"tf":1.0}},"df":1,"s":{"docs":{},"df":0,"c":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{},"df":0,"p":{"docs":{},"df":0,"t":{"docs":{"rustdoc.html#from-clean-to-crate":{"tf":1.0},"rustdoc.html#cheat-sheet":{"tf":1.0}},"df":2}}}}}}}}},"o":{"docs":{},"df":0,"b":{"docs":{"incremental-compilation.html#the-try-mark-green-algorithm":{"tf":1.0},"mir/regionck.html#mir-based-region-checking-nll":{"tf":1.4142135623730952},"traits/wf.html#well-formedness-checking":{"tf":1.0},"traits/resolution.html#major-concepts":{"tf":1.0},"type-inference.html#enforcing-equality--subtyping":{"tf":1.0},"macro-expansion.html#the-macro-parser":{"tf":1.0},"type-checking.html#type-collection":{"tf":1.0}},"df":7}},"u":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"i":{"docs":{},"df":0,"f":{"docs":{},"df":0,"i":{"docs":{"traits/lowering-rules.html#trait-header":{"tf":1.0}},"df":1}}}}}}},"h":{"docs":{"type-inference.html#inference-variables":{"tf":1.4142135623730952}},"df":1,"m":{"docs":{"type-inference.html#type-inference":{"tf":1.0}},"df":1},"t":{"docs":{},"df":0,"m":{"docs":{},"df":0,"l":{"docs":{"rustdoc.html#from-soup-to-nuts":{"tf":1.4142135623730952},"rustdoc.html#other-tricks-up-its-sleeve":{"tf":1.4142135623730952},"rustdoc.html#dotting-is-and-crossing-ts":{"tf":1.4142135623730952},"rustdoc.html#from-clean-to-crate":{"tf":1.7320508075688773},"rustdoc.html#cheat-sheet":{"tf":1.0}},"df":5,"/":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,".":{"docs":{},"df":0,"r":{"docs":{"rustdoc.html#cheat-sheet":{"tf":1.0},"rustdoc.html#from-clean-to-crate":{"tf":1.7320508075688773}},"df":2}}}}}}}},"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{},"df":0,"i":{"docs":{},"df":0,"c":{"docs":{"rustdoc.html#from-clean-to-crate":{"tf":1.0}},"df":1}}}}}},"l":{"docs":{},"df":0,"a":{"docs":{},"df":0,"y":{"docs":{},"df":0,"o":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{},"df":0,".":{"docs":{},"df":0,"r":{"docs":{"rustdoc.html#from-clean-to-crate":{"tf":1.0}},"df":1}}}}}}}},"f":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"m":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{},"df":0,".":{"docs":{},"df":0,"r":{"docs":{"rustdoc.html#from-clean-to-crate":{"tf":1.0},"rustdoc.html#cheat-sheet":{"tf":1.0}},"df":2}}}}}}}},"m":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"k":{"docs":{},"df":0,"d":{"docs":{},"df":0,"o":{"docs":{},"df":0,"w":{"docs":{},"df":0,"n":{"docs":{},"df":0,".":{"docs":{},"df":0,"r":{"docs":{"rustdoc.html#other-tricks-up-its-sleeve":{"tf":1.4142135623730952},"rustdoc.html#cheat-sheet":{"tf":1.0},"rustdoc.html#from-clean-to-crate":{"tf":1.0}},"df":3}}}}}}}}}},"h":{"docs":{},"df":0,"i":{"docs":{},"df":0,"g":{"docs":{},"df":0,"h":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{},"df":0,"g":{"docs":{},"df":0,"h":{"docs":{},"df":0,"t":{"docs":{},"df":0,".":{"docs":{},"df":0,"r":{"docs":{"rustdoc.html#from-clean-to-crate":{"tf":1.0}},"df":1}}}}}}}}}}}},"d":{"docs":{},"df":0,"o":{"docs":{},"df":0,"c":{"docs":{},"df":0,"c":{"docs":{},"df":0,"k":{"docs":{},"df":0,".":{"docs":{},"df":0,"p":{"docs":{},"df":0,"i":{"docs":{"rustdoc.html#dotting-is-and-crossing-ts":{"tf":1.0}},"df":1}}}}}}}},":":{"docs":{},"df":0,":":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"r":{"docs":{},"df":0,"u":{"docs":{},"df":0,"n":{"docs":{"rustdoc.html#from-soup-to-nuts":{"tf":1.0}},"df":1}}}}}}}}}}}}}}},"t":{"docs":{},"df":0,"p":{"docs":{},"df":0,":":{"docs":{},"df":0,"/":{"docs":{},"df":0,"/":{"docs":{},"df":0,"o":{"docs":{},"df":0,"p":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"s":{"docs":{},"df":0,"o":{"docs":{},"df":0,"u":{"docs":{},"df":0,"r":{"docs":{},"df":0,"c":{"docs":{},"df":0,"e":{"docs":{},"df":0,".":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"g":{"docs":{},"df":0,"/":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{},"df":0,"c":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"/":{"docs":{},"df":0,"m":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{"compiletest.html#adding-a-new-header-command":{"tf":1.0},"conventions.html#copyright-notice":{"tf":1.0}},"df":2}}}}}}}}}}}}}}}}}}}}}}}}}}},"w":{"docs":{},"df":0,"w":{"docs":{},"df":0,"w":{"docs":{},"df":0,".":{"docs":{},"df":0,"a":{"docs":{},"df":0,"p":{"docs":{},"df":0,"a":{"docs":{},"df":0,"c":{"docs":{},"df":0,"h":{"docs":{},"df":0,"e":{"docs":{},"df":0,".":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"g":{"docs":{},"df":0,"/":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{},"df":0,"c":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"/":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{},"df":0,"c":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"s":{"docs":{"compiletest.html#adding-a-new-header-command":{"tf":1.0},"conventions.html#copyright-notice":{"tf":1.0}},"df":2}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"df":0,"u":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{"compiletest.html#adding-a-new-header-command":{"tf":1.0},"conventions.html#copyright-notice":{"tf":1.0}},"df":2}}}}}}},"s":{"docs":{},"df":0,":":{"docs":{},"df":0,"/":{"docs":{},"df":0,"/":{"docs":{},"df":0,"g":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{},"df":0,"h":{"docs":{},"df":0,"u":{"docs":{},"df":0,"b":{"docs":{},"df":0,".":{"docs":{},"df":0,"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"m":{"docs":{},"df":0,"/":{"docs":{},"df":0,"r":{"docs":{},"df":0,"u":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{"traits/slg.html#the-slg-solver":{"tf":1.0},"compiler-debugging.html#getting-a-backtrace-for-errors":{"tf":1.0}},"df":2}}}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"f":{"docs":{"tests/intro.html#other-tests":{"tf":1.0}},"df":1}}},"i":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{"high-level-overview.html#crate-structure":{"tf":1.0},"variance.html#addendum-variance-on-traits":{"tf":1.0}},"df":2,"i":{"docs":{"conventions.html#how-to-structure-your-pr":{"tf":1.0}},"df":1}}}}},"r":{"docs":{"mir/index.html#the-mir-mid-level-ir":{"tf":1.0},"rustc-driver.html#a-note-on-lifetimes":{"tf":1.0},"ty.html#allocating-and-working-with-types":{"tf":1.0},"appendix/glossary.html#appendix-c-glossary":{"tf":3.0},"traits/chalk-overview.html#intermediate-representation-ir":{"tf":1.0},"incrcomp-debugging.html#tracking-down-incorrect-edges":{"tf":1.0},"high-level-overview.html#the-main-stages-of-compilation":{"tf":2.8284271247461905},"diag.html#span":{"tf":1.0},"rustdoc.html#cheat-sheet":{"tf":1.0},"rustc-driver.html#the-rustc-driver":{"tf":1.0},"mir/borrowck.html#mir-borrow-check":{"tf":1.4142135623730952},"appendix/code-index.html#appendix-d-code-index":{"tf":1.0},"hir.html#the-hir":{"tf":2.6457513110645909},"query.html#queries-demand-driven-compilation":{"tf":1.0},"hir.html#hir-bodies":{"tf":1.4142135623730952},"hir.html#out-of-band-storage-and-the--crate--type":{"tf":2.449489742783178},"hir.html#identifiers-in-the-hir":{"tf":2.0},"rustdoc.html#from-crate-to-clean":{"tf":1.4142135623730952},"rustdoc.html#the-walking-tour-of-rustdoc":{"tf":1.4142135623730952},"type-checking.html#type-collection":{"tf":1.0},"hir.html#the-hir-map":{"tf":2.8284271247461905}},"df":21,"(":{"docs":{},"df":0,"f":{"docs":{},"df":0,"o":{"docs":{},"df":0,"o":{"docs":{"incrcomp-debugging.html#tracking-down-incorrect-edges":{"tf":1.0},"incrcomp-debugging.html#testing-the-dependency-graph":{"tf":1.0},"incrcomp-debugging.html#dumping-the-graph":{"tf":1.0}},"df":3}}}},":":{"docs":{},"df":0,":":{"docs":{},"df":0,"t":{"docs":{},"df":0,"i":{"docs":{"type-checking.html#type-collection":{"tf":1.4142135623730952}},"df":1}},"c":{"docs":{},"df":0,"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{"appendix/code-index.html#appendix-d-code-index":{"tf":1.0},"rustdoc.html#from-crate-to-clean":{"tf":1.0}},"df":2}}}},"m":{"docs":{},"df":0,"a":{"docs":{},"df":0,"p":{"docs":{"hir.html#the-hir-map":{"tf":1.0}},"df":1}}},"l":{"docs":{},"df":0,"o":{"docs":{},"df":0,"w":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"g":{"docs":{},"df":0,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"o":{"docs":{},"df":0,"l":{"docs":{},"df":0,"v":{"docs":{"name-resolution.html#name-resolution":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}},"e":{"docs":{},"df":0,"x":{"docs":{},"df":0,"p":{"docs":{},"df":0,"r":{"docs":{"diag.html#declaring-a-lint":{"tf":1.0},"hir.html#the-hir-map":{"tf":1.0}},"df":2,"l":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{},"df":0,"(":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"f":{"docs":{"diag.html#declaring-a-lint":{"tf":1.0}},"df":1}}}}}}},"w":{"docs":{},"df":0,"h":{"docs":{},"df":0,"i":{"docs":{},"df":0,"l":{"docs":{},"df":0,"e":{"docs":{},"df":0,"(":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"f":{"docs":{"diag.html#declaring-a-lint":{"tf":1.0}},"df":1}}}}}}}}}}}}},"i":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"m":{"docs":{"hir.html#out-of-band-storage-and-the--crate--type":{"tf":1.0}},"df":1}}}}}},"&":{"docs":{},"df":0,"f":{"docs":{},"df":0,"o":{"docs":{},"df":0,"o":{"docs":{"incrcomp-debugging.html#tracking-down-incorrect-edges":{"tf":1.0}},"df":1}}}},"i":{"docs":{},"df":0,"d":{"docs":{"hir.html#identifiers-in-the-hir":{"tf":1.4142135623730952},"appendix/glossary.html#appendix-c-glossary":{"tf":1.4142135623730952}},"df":2}}},"n":{"docs":{},"df":0,"d":{"docs":{},"df":0,"l":{"docs":{},"df":0,"e":{"docs":{},"df":0,"y":{"docs":{"type-inference.html#type-inference":{"tf":1.0}},"df":1}}}}},"g":{"docs":{},"df":0,"h":{"docs":{"high-level-overview.html#the-main-stages-of-compilation":{"tf":1.4142135623730952},"mir/index.html#the-mir-mid-level-ir":{"tf":1.0},"appendix/glossary.html#appendix-c-glossary":{"tf":1.0},"appendix/stupid-stats.html#appendix-a-a-tutorial-on-creating-a-drop-in-replacement-for-rustc":{"tf":1.0},"rustdoc.html#the-walking-tour-of-rustdoc":{"tf":1.0},"high-level-overview.html#high-level-overview-of-the-compiler-source":{"tf":1.0},"query.html#queries-demand-driven-compilation":{"tf":1.0},"incremental-compilation.html#the-basic-algorithm":{"tf":1.0},"traits/canonical-queries.html#canonical-queries":{"tf":1.0},"appendix/stupid-stats.html#the-driver-customisation-apis":{"tf":1.0},"traits/caching.html#an-example":{"tf":1.0},"high-level-overview.html#crate-structure":{"tf":1.0},"hir.html#the-hir":{"tf":1.0},"about-this-guide.html#about-this-guide":{"tf":1.0},"appendix/stupid-stats.html#overview-of-the-compilation-process":{"tf":1.0},"traits/caching.html#where-clauses-and-the-local-vs-global-cache":{"tf":1.0},"compiletest.html#adding-a-new-header-command":{"tf":1.0}},"df":17,"l":{"docs":{},"df":0,"i":{"docs":{"traits/chalk-overview.html#an-overview-of-chalk":{"tf":1.0}},"df":1,"g":{"docs":{},"df":0,"h":{"docs":{},"df":0,"t":{"docs":{"conventions.html#how-to-structure-your-pr":{"tf":1.0},"tests/adding.html#comment-explaining-what-the-test-is-about":{"tf":1.4142135623730952},"rustdoc.html#from-clean-to-crate":{"tf":1.0}},"df":3}}}}},"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{"appendix/stupid-stats.html#overview-of-the-compilation-process":{"tf":1.0}},"df":1}},"r":{"docs":{"traits/hrtb.html#higher-ranked-trait-bounds":{"tf":1.7320508075688773},"traits/hrtb.html#higher-ranked-trait-obligations":{"tf":1.0},"appendix/glossary.html#appendix-c-glossary":{"tf":1.0},"traits/bibliography.html#bibliography":{"tf":1.0},"type-inference.html#type-inference":{"tf":1.0},"traits/hrtb.html#basic-matching-and-skolemization-leaks":{"tf":1.4142135623730952},"type-inference.html#snapshots":{"tf":1.0}},"df":7,"_":{"docs":{},"df":0,"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"k":{"docs":{},"df":0,"e":{"docs":{},"df":0,"d":{"docs":{},"df":0,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"p":{"docs":{},"df":0,"l":{"docs":{},"df":0,"u":{"docs":{},"df":0,"g":{"docs":{},"df":0,"_":{"docs":{},"df":0,"l":{"docs":{},"df":0,"e":{"docs":{},"df":0,"a":{"docs":{},"df":0,"k":{"docs":{"traits/hrtb.html#higher-ranked-trait-obligations":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{"traits/caching.html#where-clauses-and-the-local-vs-global-cache":{"tf":1.0},"traits/canonical-queries.html#the-traditional-interactive-prolog-query":{"tf":1.7320508075688773},"traits/caching.html#an-example":{"tf":1.7320508075688773}},"df":3},"d":{"docs":{},"df":0,"d":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{"rustdoc.html#hot-potato":{"tf":1.4142135623730952},"tests/adding.html#what-kind-of-test-should-i-add":{"tf":1.0}},"df":2}}}},"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"c":{"docs":{},"df":0,"h":{"docs":{"name-resolution.html#scopes-and-ribs":{"tf":1.0}},"df":1,"i":{"docs":{"traits/specialization.html#specialization":{"tf":1.4142135623730952},"name-resolution.html#namespaces":{"tf":1.0},"name-resolution.html#overall-strategy":{"tf":1.0}},"df":3}}}}}}}},"u":{"docs":{},"df":0,"m":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{"mir/index.html#key-mir-vocabulary":{"tf":1.0},"query.html#adding-a-new-kind-of-query":{"tf":1.0}},"df":2}}},"g":{"docs":{},"df":0,"e":{"docs":{"tests/adding.html#naming-your-test":{"tf":1.0}},"df":1}}},"y":{"docs":{},"df":0,"g":{"docs":{},"df":0,"i":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{"name-resolution.html#scopes-and-ribs":{"tf":1.0},"macro-expansion.html#hygiene":{"tf":1.0}},"df":2}}}}},"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{"traits/implied-bounds.html#implied-bounds":{"tf":1.0},"traits/associated-types.html#integration-with-unification":{"tf":1.0},"compiletest.html#header-commands":{"tf":1.0},"query.html#queries-demand-driven-compilation":{"tf":1.0},"rustdoc.html#hot-potato":{"tf":1.0},"traits/chalk-overview.html#resources":{"tf":1.0},"traits/lowering-rules.html#associated-type-declarations":{"tf":1.0},"mir/passes.html#seeing-how-the-mir-changes-as-the-compiler-executes":{"tf":1.0},"compiler-debugging.html#debugging-llvm":{"tf":1.0},"diag.html#error-messages":{"tf":1.4142135623730952},"traits/lowering-rules.html#transforming-the-lowered-where-clauses":{"tf":1.0},"tests/adding.html#normalization":{"tf":1.0},"traits/hrtb.html#higher-ranked-trait-obligations":{"tf":1.4142135623730952},"name-resolution.html#namespaces":{"tf":1.0},"traits/bibliography.html#bibliography":{"tf":1.0},"variance.html#the-algorithm":{"tf":1.4142135623730952},"traits/lowering-to-logic.html#lowering-to-logic":{"tf":1.0},"traits/hrtb.html#basic-matching-and-skolemization-leaks":{"tf":1.4142135623730952},"mir/regionck.html#final-example":{"tf":1.0},"how-to-build-and-run.html#running-xpy-and-building-a-stage1-compiler":{"tf":1.7320508075688773},"traits/lowering-to-logic.html#type-checking-generic-functions-beyond-horn-clauses":{"tf":1.0},"tests/intro.html#compiletest-test-suites":{"tf":1.0},"ty.html#the-tcx-and-how-it-uses-lifetimes":{"tf":1.7320508075688773},"appendix/glossary.html#appendix-c-glossary":{"tf":1.4142135623730952},"traits/canonical-queries.html#a-trait-query-in-rustc":{"tf":1.0},"tests/intro.html#testing-on-emulators":{"tf":1.0},"name-resolution.html#scopes-and-ribs":{"tf":2.0},"mir/index.html#key-mir-vocabulary":{"tf":1.4142135623730952},"miri.html#miri":{"tf":1.0},"traits/lowering-to-logic.html#type-checking-normal-functions":{"tf":1.0},"traits/resolution.html#selection-during-translation":{"tf":1.0},"traits/goals-and-clauses.html#coinductive-goals":{"tf":1.0},"compiletest.html#adding-a-new-header-command":{"tf":1.7320508075688773},"type-inference.html#type-inference":{"tf":1.0},"how-to-build-and-run.html#other-xpy-commands":{"tf":1.0},"appendix/background.html#what-is-a-free-region-or-a-free-variable-what-about-bound-region":{"tf":1.0},"type-inference.html#creating-an-inference-context":{"tf":1.0},"variance.html#variance-and-object-types":{"tf":1.0},"mir/borrowck.html#mir-borrow-check":{"tf":1.0},"diag.html#suggestions":{"tf":2.0},"traits/specialization.html#specialization":{"tf":1.0},"traits/lowering-rules.html#trait-header":{"tf":1.0},"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.0},"rustdoc.html#from-clean-to-crate":{"tf":1.4142135623730952},"tests/adding.html#other-header-commands":{"tf":1.0},"mir/regionck.html#what-is-a-universe":{"tf":2.0},"tests/adding.html#what-kind-of-test-should-i-add":{"tf":1.0},"mir/regionck.html#skolemization-and-outlives-constraints":{"tf":1.4142135623730952},"mir/regionck.html#back-to-our-example":{"tf":1.4142135623730952},"macro-expansion.html#the-macro-parser":{"tf":1.0},"mir/regionck.html#another-example":{"tf":1.4142135623730952},"rustdoc.html#other-tricks-up-its-sleeve":{"tf":1.0},"appendix/stupid-stats.html#compilercalls":{"tf":1.0},"appendix/stupid-stats.html#compilercontroller":{"tf":1.0},"mir/regionck.html#subtyping-and-skolemization":{"tf":1.4142135623730952},"method-lookup.html#method-lookup":{"tf":1.0},"ty.html#beyond-types-other-kinds-of-arena-allocated-data-structures":{"tf":1.4142135623730952},"query.html#how-the-compiler-executes-a-query":{"tf":1.4142135623730952},"traits/canonical-queries.html#examples":{"tf":1.4142135623730952},"conventions.html#how-to-structure-your-pr":{"tf":1.0},"traits/lowering-rules.html#associated-type-values":{"tf":1.0},"variance.html#trait-variance-and-vtable-resolution":{"tf":1.0},"incremental-compilation.html#the-basic-algorithm":{"tf":1.0},"tests/adding.html#naming-your-test":{"tf":1.0},"query.html#cycles-between-queries":{"tf":1.0},"compiler-debugging.html#debugging-the-compiler":{"tf":1.0}},"df":66,"d":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{"traits/goals-and-clauses.html#goals-and-clauses":{"tf":1.0},"traits/lowering-to-logic.html#type-checking-generic-functions-beyond-horn-clauses":{"tf":1.4142135623730952},"traits/goals-and-clauses.html#goals-and-clauses-meta-structure":{"tf":1.0},"traits/bibliography.html#bibliography":{"tf":1.0}},"df":4}}}}}},"a":{"docs":{},"df":0,"f":{"docs":{},"df":0,"t":{"docs":{"variance.html#variance-of-type-and-lifetime-parameters":{"tf":1.0}},"df":1}}}}},"n":{"docs":{},"df":0,"c":{"docs":{"traits/lowering-rules.html#trait-header":{"tf":1.0},"traits/canonical-queries.html#the-traditional-interactive-prolog-query":{"tf":1.0},"mir/regionck.html#mir-based-region-checking-nll":{"tf":1.0},"incremental-compilation.html#the-query-dag":{"tf":1.0},"mir/index.html#key-mir-vocabulary":{"tf":1.0},"mir/regionck.html#another-example":{"tf":1.0},"traits/lowering-rules.html#associated-type-declarations":{"tf":1.0},"tests/intro.html#compiletest-test-suites":{"tf":1.0},"traits/caching.html#an-example":{"tf":1.0},"variance.html#variance-and-object-types":{"tf":1.0},"incremental-compilation.html#the-basic-algorithm":{"tf":1.4142135623730952},"traits/hrtb.html#basic-matching-and-skolemization-leaks":{"tf":1.0},"traits/resolution.html#confirmation":{"tf":1.0},"high-level-overview.html#the-main-stages-of-compilation":{"tf":1.0},"mir/regionck.html#skolemization-and-outlives-constraints":{"tf":1.0}},"df":15}},"a":{"docs":{},"df":0,"v":{"docs":{},"df":0,"i":{"docs":{"traits/chalk-overview.html#an-overview-of-chalk":{"tf":1.0}},"df":1,"l":{"docs":{},"df":0,"i":{"docs":{"type-checking.html#type-checking":{"tf":1.0},"rustc-driver.html#a-note-on-lifetimes":{"tf":1.0},"traits/chalk-overview.html#parsing":{"tf":1.0},"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.0}},"df":4}}}},"d":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"tests/adding.html#other-header-commands":{"tf":2.0},"tests/adding.html#adding-new-tests":{"tf":1.0},"tests/adding.html#revisions":{"tf":2.449489742783178},"compiletest.html#implementing-the-behavior-change":{"tf":2.6457513110645909},"traits/lowering-rules.html#lowering-traits":{"tf":1.0},"traits/lowering-rules.html#trait-header":{"tf":1.4142135623730952},"tests/adding.html#header-commands-configuring-rustc":{"tf":1.4142135623730952},"tests/adding.html#tests-that-do-not-result-in-compile-errors":{"tf":1.0},"compiletest.html#header-commands":{"tf":1.7320508075688773},"tests/adding.html#normalization":{"tf":1.0},"compiletest.html#adding-a-new-header-command":{"tf":4.358898943540674}},"df":11,".":{"docs":{},"df":0,"r":{"docs":{"tests/adding.html#other-header-commands":{"tf":1.0}},"df":1}},"_":{"docs":{},"df":0,"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"m":{"docs":{},"df":0,"m":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{"compiletest.html#adding-a-new-header-command":{"tf":1.0}},"df":1}}}}}}}}}}},"p":{"docs":{"const-eval.html#constant-evaluation":{"tf":1.0},"miri.html#allocations":{"tf":1.4142135623730952}},"df":2}},"l":{"docs":{},"df":0,"p":{"docs":{"diag.html#suggestions":{"tf":1.4142135623730952},"incrcomp-debugging.html#tracking-down-incorrect-edges":{"tf":1.0},"traits/index.html#trait-solving-new-style":{"tf":1.0},"high-level-overview.html#the-main-stages-of-compilation":{"tf":1.0},"macro-expansion.html#example":{"tf":1.0},"name-resolution.html#scopes-and-ribs":{"tf":1.0},"tests/adding.html#error-annotations":{"tf":1.4142135623730952},"compiler-debugging.html#logging-etiquette":{"tf":1.4142135623730952},"tests/adding.html#comment-explaining-what-the-test-is-about":{"tf":1.0},"about-this-guide.html#about-this-guide":{"tf":1.4142135623730952},"tests/intro.html#testing-on-emulators":{"tf":1.0},"tests/adding.html#what-kind-of-test-should-i-add":{"tf":1.0},"conventions.html#how-to-structure-your-pr":{"tf":1.0},"compiler-debugging.html#getting-a-backtrace-for-errors":{"tf":1.7320508075688773},"mir/borrowck.html#mir-borrow-check":{"tf":1.0},"mir/passes.html#implementing-and-registering-a-pass":{"tf":1.0},"variance.html#trait-variance-and-vtable-resolution":{"tf":1.0},"compiletest.html#implementing-the-behavior-change":{"tf":1.0},"incrcomp-debugging.html#dumping-the-graph":{"tf":1.0},"rustc-driver.html#a-note-on-lifetimes":{"tf":1.0},"diag.html#error-messages":{"tf":1.0},"variance.html#variance-and-associated-types":{"tf":1.0},"how-to-build-and-run.html#create-a-configtoml":{"tf":1.0},"name-resolution.html#name-resolution":{"tf":1.0},"type-inference.html#snapshots":{"tf":1.0},"high-level-overview.html#crate-structure":{"tf":1.0},"tests/adding.html#naming-your-test":{"tf":1.0},"appendix/stupid-stats.html#appendix-a-a-tutorial-on-creating-a-drop-in-replacement-for-rustc":{"tf":1.0}},"df":28,"e":{"docs":{},"df":0,"r":{"docs":{"name-resolution.html#name-resolution":{"tf":1.0},"query.html#cycles-between-queries":{"tf":1.0},"name-resolution.html#scopes-and-ribs":{"tf":2.449489742783178}},"df":3}}}},"u":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{"tests/adding.html#what-kind-of-test-should-i-add":{"tf":1.0}},"df":1}}}}}},"o":{"docs":{},"df":0,"c":{"docs":{"appendix/stupid-stats.html#compilercalls":{"tf":1.0},"traits/chalk-overview.html#an-overview-of-chalk":{"tf":1.0}},"df":2},"o":{"docs":{},"df":0,"d":{"docs":{"tests/running.html#running-an-individual-test":{"tf":1.0},"tests/intro.html#other-tests":{"tf":1.0}},"df":2},"k":{"docs":{"appendix/stupid-stats.html#compilercalls":{"tf":1.0}},"df":1}},"m":{"docs":{},"df":0,"e":{"docs":{},"df":0,"/":{"docs":{},"df":0,"u":{"docs":{},"df":0,"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"/":{"docs":{},"df":0,"r":{"docs":{},"df":0,"u":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"/":{"docs":{},"df":0,"s":{"docs":{},"df":0,"r":{"docs":{},"df":0,"c":{"docs":{},"df":0,"/":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{},"df":0,"b":{"docs":{},"df":0,"r":{"docs":{},"df":0,"u":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"c":{"docs":{},"df":0,"/":{"docs":{},"df":0,"t":{"docs":{},"df":0,"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{},"df":0,"s":{"docs":{},"df":0,"/":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"_":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"p":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"t":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"g":{"docs":{},"df":0,".":{"docs":{},"df":0,"r":{"docs":{},"df":0,"s":{"docs":{},"df":0,":":{"docs":{},"df":0,"8":{"docs":{},"df":0,"2":{"docs":{},"df":0,"3":{"docs":{"compiler-debugging.html#getting-a-backtrace-for-errors":{"tf":1.0}},"df":1}}},"1":{"docs":{},"df":0,"6":{"docs":{},"df":0,"0":{"docs":{"compiler-debugging.html#getting-a-backtrace-for-errors":{"tf":1.0}},"df":1}},"1":{"docs":{},"df":0,"2":{"docs":{"compiler-debugging.html#getting-a-backtrace-for-errors":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"_":{"docs":{},"df":0,"t":{"docs":{},"df":0,"y":{"docs":{},"df":0,"p":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"k":{"docs":{},"df":0,"/":{"docs":{},"df":0,"c":{"docs":{},"df":0,"h":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"k":{"docs":{},"df":0,"/":{"docs":{},"df":0,"c":{"docs":{},"df":0,"a":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,".":{"docs":{},"df":0,"r":{"docs":{},"df":0,"s":{"docs":{},"df":0,":":{"docs":{},"df":0,"3":{"docs":{},"df":0,"7":{"docs":{},"df":0,"0":{"docs":{"compiler-debugging.html#getting-a-backtrace":{"tf":1.0}},"df":1}}},"1":{"docs":{},"df":0,"1":{"docs":{},"df":0,"0":{"docs":{"compiler-debugging.html#getting-a-backtrace":{"tf":1.0}},"df":1}}},"5":{"docs":{},"df":0,"7":{"docs":{},"df":0,"2":{"docs":{"compiler-debugging.html#getting-a-backtrace":{"tf":1.0}},"df":1}}},"4":{"docs":{},"df":0,"6":{"docs":{},"df":0,"0":{"docs":{"compiler-debugging.html#getting-a-backtrace":{"tf":1.0}},"df":1}}}}}}}}}}},"m":{"docs":{},"df":0,"o":{"docs":{},"df":0,"d":{"docs":{},"df":0,".":{"docs":{},"df":0,"r":{"docs":{},"df":0,"s":{"docs":{},"df":0,":":{"docs":{},"df":0,"2":{"docs":{},"df":0,"1":{"docs":{},"df":0,"9":{"docs":{},"df":0,"2":{"docs":{"compiler-debugging.html#getting-a-backtrace-for-errors":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"s":{"docs":{},"df":0,"/":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{},"df":0,"b":{"docs":{},"df":0,".":{"docs":{},"df":0,"r":{"docs":{},"df":0,"s":{"docs":{},"df":0,":":{"docs":{},"df":0,"4":{"docs":{},"df":0,"1":{"docs":{},"df":0,"1":{"docs":{},"df":0,":":{"docs":{},"df":0,"1":{"docs":{},"df":0,"2":{"docs":{"compiler-debugging.html#getting-a-backtrace-for-errors":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}}},"d":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{},"df":0,"v":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"/":{"docs":{},"df":0,"d":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{},"df":0,"v":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,".":{"docs":{},"df":0,"r":{"docs":{},"df":0,"s":{"docs":{},"df":0,":":{"docs":{},"df":0,"2":{"docs":{},"df":0,"1":{"docs":{},"df":0,"2":{"docs":{"compiler-debugging.html#getting-a-backtrace":{"tf":1.0}},"df":1}}},"1":{"docs":{},"df":0,"0":{"docs":{},"df":0,"1":{"docs":{},"df":0,"0":{"docs":{"compiler-debugging.html#getting-a-backtrace":{"tf":1.0}},"df":1}}}}}}}}}}}}}},"l":{"docs":{},"df":0,"i":{"docs":{},"df":0,"b":{"docs":{},"df":0,".":{"docs":{},"df":0,"r":{"docs":{},"df":0,"s":{"docs":{},"df":0,":":{"docs":{},"df":0,"2":{"docs":{},"df":0,"5":{"docs":{},"df":0,"3":{"docs":{"compiler-debugging.html#getting-a-backtrace-for-errors":{"tf":1.0},"compiler-debugging.html#getting-a-backtrace":{"tf":1.0}},"df":2}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"p":{"docs":{},"df":0,"e":{"docs":{"high-level-overview.html#crate-structure":{"tf":1.0}},"df":1,"f":{"docs":{},"df":0,"u":{"docs":{},"df":0,"l":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{"incrcomp-debugging.html#dumping-the-graph":{"tf":1.0},"mir/regionck.html#mir-based-region-checking-nll":{"tf":1.4142135623730952},"appendix/stupid-stats.html#appendix-a-a-tutorial-on-creating-a-drop-in-replacement-for-rustc":{"tf":1.0},"appendix/stupid-stats.html#compilercalls":{"tf":1.0}},"df":4}}}}}}},"r":{"docs":{},"df":0,"n":{"docs":{"traits/lowering-to-logic.html#lowering-to-logic":{"tf":1.0},"traits/lowering-to-logic.html#rust-traits-and-logic":{"tf":1.7320508075688773},"traits/lowering-to-logic.html#type-checking-generic-functions-beyond-horn-clauses":{"tf":2.0},"traits/goals-and-clauses.html#goals-and-clauses":{"tf":1.0}},"df":4},"r":{"docs":{},"df":0,"i":{"docs":{},"df":0,"b":{"docs":{},"df":0,"l":{"docs":{"miri.html#interpretation":{"tf":1.0}},"df":1}}}}},"u":{"docs":{},"df":0,"s":{"docs":{"type-inference.html#inference-variables":{"tf":1.0},"tests/intro.html#compiletest-test-suites":{"tf":1.0}},"df":2},"r":{"docs":{"tests/intro.html#testing-on-emulators":{"tf":1.0}},"df":1}},"s":{"docs":{},"df":0,"t":{"docs":{"how-to-build-and-run.html#creating-a-rustup-toolchain":{"tf":1.0}},"df":1}},"l":{"docs":{},"df":0,"d":{"docs":{"traits/canonical-queries.html#examples":{"tf":1.7320508075688773},"traits/lowering-rules.html#associated-type-declarations":{"tf":1.0},"traits/resolution.html#candidate-assembly":{"tf":1.0},"traits/lowering-to-logic.html#type-checking-generic-functions-beyond-horn-clauses":{"tf":1.4142135623730952},"traits/canonical-queries.html#a-trait-query-in-rustc":{"tf":1.0},"traits/lowering-rules.html#trait-header":{"tf":1.4142135623730952},"variance.html#constraints":{"tf":1.0},"traits/goals-and-clauses.html#coinductive-goals":{"tf":1.0},"compiletest.html#introduction":{"tf":1.4142135623730952},"traits/resolution.html#selection":{"tf":1.0},"compiletest.html#adding-a-new-header-command":{"tf":1.0}},"df":11,"e":{"docs":{},"df":0,"r":{"docs":{"query.html#adding-a-new-kind-of-query":{"tf":1.0}},"df":1}}}},"t":{"docs":{"rustdoc.html#hot-potato":{"tf":1.0}},"df":1}},"a":{"docs":{},"df":0,"s":{"docs":{},"df":0,"p":{"docs":{},"df":0,"l":{"docs":{},"df":0,"a":{"docs":{},"df":0,"c":{"docs":{},"df":0,"e":{"docs":{},"df":0,"h":{"docs":{},"df":0,"o":{"docs":{},"df":0,"l":{"docs":{},"df":0,"d":{"docs":{"diag.html#suggestions":{"tf":1.0}},"df":1}}}}}}}}},"n":{"docs":{},"df":0,"'":{"docs":{},"df":0,"t":{"docs":{"mir/regionck.html#skolemization-and-universes":{"tf":1.0}},"df":1}}},"_":{"docs":{},"df":0,"c":{"docs":{},"df":0,"f":{"docs":{},"df":0,"g":{"docs":{},"df":0,"_":{"docs":{},"df":0,"p":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"f":{"docs":{},"df":0,"i":{"docs":{},"df":0,"x":{"docs":{"compiletest.html#adding-a-new-header-command":{"tf":1.0}},"df":1}}}}}}}}}}},"h":{"docs":{"incremental-compilation.html#improvements-to-the-basic-algorithm":{"tf":1.4142135623730952},"ty.html#allocating-and-working-with-types":{"tf":1.0},"incremental-compilation.html#the-try-mark-green-algorithm":{"tf":1.7320508075688773},"how-to-build-and-run.html#creating-a-rustup-toolchain":{"tf":1.0},"appendix/glossary.html#appendix-c-glossary":{"tf":1.0}},"df":5,"t":{"docs":{},"df":0,"a":{"docs":{},"df":0,"b":{"docs":{},"df":0,"l":{"docs":{"query.html#queries-demand-driven-compilation":{"tf":1.0},"appendix/glossary.html#appendix-c-glossary":{"tf":1.0}},"df":2}}}},"m":{"docs":{},"df":0,"a":{"docs":{},"df":0,"p":{"docs":{},"df":0,"<":{"docs":{},"df":0,"i":{"docs":{},"df":0,"3":{"docs":{},"df":0,"2":{"docs":{"ty.html#beyond-types-other-kinds-of-arena-allocated-data-structures":{"tf":1.0},"appendix/glossary.html#appendix-c-glossary":{"tf":1.0}},"df":2}}}}}}}}},"p":{"docs":{},"df":0,"p":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{"mir/regionck.html#back-to-our-example":{"tf":1.0},"miri.html#miri":{"tf":1.0},"traits/associated-types.html#integration-with-unification":{"tf":1.0},"macro-expansion.html#the-macro-parser":{"tf":1.0},"traits/hrtb.html#higher-ranked-trait-obligations":{"tf":1.0},"mir/regionck.html#skolemization-and-outlives-constraints":{"tf":1.0},"query.html#cycles-between-queries":{"tf":1.7320508075688773},"rustdoc.html#hot-potato":{"tf":1.0},"ty.html#allocating-and-working-with-types":{"tf":1.0},"traits/resolution.html#selection":{"tf":1.0},"name-resolution.html#namespaces":{"tf":1.0},"mir/regionck.html#subtyping-and-skolemization":{"tf":1.0},"appendix/stupid-stats.html#compilercontroller":{"tf":1.0},"macro-expansion.html#macro-expansion":{"tf":1.0},"variance.html#variance-and-object-types":{"tf":1.0},"rustdoc.html#from-crate-to-clean":{"tf":1.4142135623730952},"traits/resolution.html#candidate-assembly":{"tf":1.4142135623730952},"name-resolution.html#scopes-and-ribs":{"tf":1.0},"mir/regionck.html#universes-and-skolemized-region-elements":{"tf":1.0},"traits/caching.html#caching-and-subtle-considerations-therewith":{"tf":1.0},"query.html#how-the-compiler-executes-a-query":{"tf":1.0},"traits/canonical-queries.html#examples":{"tf":1.0},"mir/passes.html#stealing":{"tf":1.0},"const-eval.html#constant-evaluation":{"tf":1.0},"appendix/stupid-stats.html#overview-of-the-compilation-process":{"tf":1.4142135623730952},"query.html#adding-a-new-kind-of-query":{"tf":1.0},"name-resolution.html#todo":{"tf":1.0},"variance.html#trait-variance-and-vtable-resolution":{"tf":1.0},"mir/regionck.html#what-is-a-universe":{"tf":1.7320508075688773}},"df":29}},"i":{"docs":{"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.0},"variance.html#trait-variance-and-vtable-resolution":{"tf":1.0}},"df":2}}},"v":{"docs":{},"df":0,"e":{"docs":{"compiletest.html#adding-a-new-header-command":{"tf":1.0},"appendix/glossary.html#appendix-c-glossary":{"tf":1.0},"const-eval.html#constant-evaluation":{"tf":1.0},"mir/regionck.html#final-example":{"tf":1.0},"macro-expansion.html#example":{"tf":1.0},"conventions.html#prefer-exhaustive-matches":{"tf":1.0},"traits/lowering-rules.html#function-and-constant-values":{"tf":1.0},"conventions.html#how-to-structure-your-pr":{"tf":1.0}},"df":8,"n":{"docs":{},"df":0,"'":{"docs":{},"df":0,"t":{"docs":{"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.0}},"df":1}}}}},"c":{"docs":{},"df":0,"k":{"docs":{"how-to-build-and-run.html#running-xpy-and-building-a-stage1-compiler":{"tf":1.0},"how-to-build-and-run.html#how-to-build-the-compiler-and-run-what-you-built":{"tf":1.0},"tests/running.html#running-a-subset-of-the-test-suites":{"tf":1.0},"traits/index.html#trait-solving-new-style":{"tf":1.0}},"df":4}},"r":{"docs":{"rustdoc.html#cheat-sheet":{"tf":1.0},"compiletest.html#introduction":{"tf":1.0},"tests/intro.html#the-compiler-testing-framework":{"tf":1.0}},"df":3,"d":{"docs":{"appendix/glossary.html#appendix-c-glossary":{"tf":1.0},"ty.html#import-conventions":{"tf":1.0},"compiler-debugging.html#debugging-llvm":{"tf":1.0},"compiler-debugging.html#getting-logging-output":{"tf":1.0},"traits/lowering-to-logic.html#type-checking-generic-functions-beyond-horn-clauses":{"tf":1.0}},"df":5,"w":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{"tests/intro.html#testing-on-emulators":{"tf":1.0}},"df":1}}}},"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"p":{"docs":{"traits/goals-and-clauses.html#goals-and-clauses":{"tf":1.0},"traits/lowering-to-logic.html#type-checking-generic-functions-beyond-horn-clauses":{"tf":1.4142135623730952},"traits/goals-and-clauses.html#goals-and-clauses-meta-structure":{"tf":1.0},"traits/bibliography.html#bibliography":{"tf":1.0}},"df":4}}}},"n":{"docs":{},"df":0,"d":{"docs":{"rustdoc.html#from-soup-to-nuts":{"tf":1.0},"mir/regionck.html#another-example":{"tf":1.0},"variance.html#variance-of-type-and-lifetime-parameters":{"tf":1.0},"rustdoc.html#from-clean-to-crate":{"tf":1.0},"traits/caching.html#an-example":{"tf":1.0},"tests/running.html#running-an-individual-test":{"tf":1.0},"rustdoc.html#other-tricks-up-its-sleeve":{"tf":1.7320508075688773},"traits/goals-and-clauses.html#domain-goals":{"tf":1.0},"rustdoc.html#dotting-is-and-crossing-ts":{"tf":1.0},"mir/index.html#key-mir-vocabulary":{"tf":1.0},"rustdoc.html#from-crate-to-clean":{"tf":1.0}},"df":11,"i":{"docs":{"mir/passes.html#seeing-how-the-mir-changes-as-the-compiler-executes":{"tf":1.0},"mir/passes.html#implementing-and-registering-a-pass":{"tf":1.0}},"df":2},"l":{"docs":{"traits/canonical-queries.html#a-trait-query-in-rustc":{"tf":1.0},"appendix/glossary.html#appendix-c-glossary":{"tf":1.4142135623730952},"rustdoc.html#cheat-sheet":{"tf":1.0},"appendix/stupid-stats.html#the-driver-customisation-apis":{"tf":1.0},"appendix/stupid-stats.html#overview-of-the-compilation-process":{"tf":1.7320508075688773},"incrcomp-debugging.html#tracking-down-incorrect-edges":{"tf":1.0},"tests/intro.html#other-tests":{"tf":1.0},"traits/lowering-to-logic.html#type-checking-normal-functions":{"tf":1.0},"rustdoc.html#hot-potato":{"tf":1.0},"type-inference.html#extracting-region-constraints":{"tf":1.0},"mir/regionck.html#subtyping-and-skolemization":{"tf":1.0},"traits/associated-types.html#equality-and-associated-types":{"tf":1.0},"conventions.html#prefer-exhaustive-matches":{"tf":1.0},"traits/lowering-to-logic.html#type-checking-generic-functions-beyond-horn-clauses":{"tf":1.0},"appendix/background.html#what-is-co--and-contra-variance":{"tf":1.0},"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.4142135623730952}},"df":16}},"g":{"docs":{"mir/visitor.html#mir-visitor":{"tf":1.0}},"df":1}}},"h":{"docs":{"traits/goals-and-clauses.html#goals-and-clauses":{"tf":1.0}},"df":1}},"l":{"docs":{"mir/passes.html#seeing-how-the-mir-changes-as-the-compiler-executes":{"tf":1.0},"traits/canonicalization.html#canonicalizing-the-query":{"tf":1.0},"traits/canonicalization.html#processing-the-canonicalized-query-result":{"tf":1.0},"traits/canonicalization.html#canonicalizing-the-query-result":{"tf":1.0}},"df":4,"s":{"docs":{"mir/passes.html#seeing-how-the-mir-changes-as-the-compiler-executes":{"tf":1.7320508075688773}},"df":1},"t":{"docs":{},"df":0,"o":{"docs":{"appendix/glossary.html#appendix-c-glossary":{"tf":1.7320508075688773}},"df":1}},"h":{"docs":{"macro-expansion.html#the-macro-parser":{"tf":1.4142135623730952}},"df":1,"s":{"docs":{},"df":0,":":{"docs":{},"df":0,"t":{"docs":{},"df":0,"t":{"docs":{"macro-expansion.html#the-macro-parser":{"tf":1.0}},"df":1}}}}},"i":{"docs":{"rustdoc.html#from-crate-to-clean":{"tf":1.0}},"df":1,"t":{"docs":{"diag.html#declaring-a-lint":{"tf":1.0}},"df":1,"e":{"docs":{},"df":0,"r":{"docs":{"rustdoc.html#the-walking-tour-of-rustdoc":{"tf":1.0},"type-inference.html#inference-variables":{"tf":1.4142135623730952}},"df":2,"a":{"docs":{},"df":0,"t":{"docs":{},"df":0,"u":{"docs":{},"df":0,"r":{"docs":{"appendix/glossary.html#appendix-c-glossary":{"tf":1.0}},"df":1}}}}}},"t":{"docs":{},"df":0,"l":{"docs":{"traits/bibliography.html#bibliography":{"tf":1.0},"miri.html#allocations":{"tf":1.0},"rustdoc.html#from-crate-to-clean":{"tf":1.0},"mir/regionck.html#another-example":{"tf":1.0},"variance.html#addendum-variance-on-traits":{"tf":1.0}},"df":5}},".":{"docs":{},"df":0,"s":{"docs":{},"df":0,"p":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,".":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{},"df":0,"x":{"docs":{},"df":0,"t":{"docs":{"diag.html#declaring-a-lint":{"tf":1.0}},"df":1}}}}}}}}},"n":{"docs":{},"df":0,"o":{"docs":{},"df":0,"d":{"docs":{"diag.html#declaring-a-lint":{"tf":1.0}},"df":1}}}}},"b":{"docs":{},"df":0,"s":{"docs":{},"df":0,"y":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{},"df":0,"a":{"docs":{},"df":0,"x":{"docs":{"the-parser.html#the-parser":{"tf":1.0},"appendix/stupid-stats.html#overview-of-the-compilation-process":{"tf":1.0}},"df":2}}}}},"t":{"docs":{},"df":0,"d":{"docs":{"tests/intro.html#compiletest-test-suites":{"tf":1.0},"how-to-build-and-run.html#running-xpy-and-building-a-stage1-compiler":{"tf":1.7320508075688773},"how-to-build-and-run.html#other-xpy-commands":{"tf":1.4142135623730952}},"df":3}}},".":{"docs":{},"df":0,"r":{"docs":{"name-resolution.html#name-resolution":{"tf":1.0},"rustdoc.html#the-walking-tour-of-rustdoc":{"tf":1.0}},"df":2}},"r":{"docs":{},"df":0,"u":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"c":{"docs":{"appendix/stupid-stats.html#overview-of-the-compilation-process":{"tf":1.0},"appendix/stupid-stats.html#appendix-a-a-tutorial-on-creating-a-drop-in-replacement-for-rustc":{"tf":1.4142135623730952}},"df":2,"_":{"docs":{"appendix/stupid-stats.html#overview-of-the-compilation-process":{"tf":1.0}},"df":1,"l":{"docs":{},"df":0,"l":{"docs":{},"df":0,"v":{"docs":{},"df":0,"m":{"docs":{"appendix/stupid-stats.html#overview-of-the-compilation-process":{"tf":1.0}},"df":1}}}},"b":{"docs":{},"df":0,"a":{"docs":{},"df":0,"c":{"docs":{},"df":0,"k":{"docs":{"appendix/stupid-stats.html#overview-of-the-compilation-process":{"tf":1.0}},"df":1}}}},"t":{"docs":{},"df":0,"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{"traits/lowering-rules.html#rule-names-and-cross-references":{"tf":1.0}},"df":1}},"n":{"docs":{"appendix/stupid-stats.html#overview-of-the-compilation-process":{"tf":1.0}},"df":1}}}},"m":{"docs":{},"df":0,"i":{"docs":{},"df":0,"r":{"docs":{},"df":0,"/":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"p":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"t":{"docs":{},"df":0,"/":{"docs":{},"df":0,"e":{"docs":{},"df":0,"v":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{},"df":0,"_":{"docs":{},"df":0,"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"x":{"docs":{},"df":0,"t":{"docs":{},"df":0,".":{"docs":{},"df":0,"r":{"docs":{"miri.html#interpretation":{"tf":1.0}},"df":1}}}}}}}}}}}}}},"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"p":{"docs":{},"df":0,".":{"docs":{},"df":0,"r":{"docs":{"miri.html#interpretation":{"tf":1.0}},"df":1}}}}}},"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"_":{"docs":{},"df":0,"e":{"docs":{},"df":0,"v":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{},"df":0,".":{"docs":{},"df":0,"r":{"docs":{"miri.html#interpretation":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"o":{"docs":{},"df":0,"l":{"docs":{},"df":0,"v":{"docs":{"name-resolution.html#name-resolution":{"tf":1.0}},"df":1}}}}}},"d":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{},"df":0,"v":{"docs":{"query.html#how-the-compiler-executes-a-query":{"tf":1.0},"appendix/stupid-stats.html#overview-of-the-compilation-process":{"tf":1.0}},"df":2,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"/":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{},"df":0,"b":{"docs":{},"df":0,".":{"docs":{},"df":0,"r":{"docs":{"appendix/stupid-stats.html#compilercalls":{"tf":1.0}},"df":1}}}}}}}}}}}}},"/":{"docs":{},"df":0,"h":{"docs":{},"df":0,"i":{"docs":{},"df":0,"r":{"docs":{},"df":0,"/":{"docs":{},"df":0,"d":{"docs":{},"df":0,"e":{"docs":{},"df":0,"f":{"docs":{},"df":0,"_":{"docs":{},"df":0,"i":{"docs":{},"df":0,"d":{"docs":{},"df":0,".":{"docs":{},"df":0,"r":{"docs":{"appendix/glossary.html#appendix-c-glossary":{"tf":1.0}},"df":1}}}}}}}}}}}},"m":{"docs":{},"df":0,"i":{"docs":{},"df":0,"r":{"docs":{},"df":0,"/":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"p":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"t":{"docs":{"miri.html#datastructures":{"tf":1.0}},"df":1}}}}}}}}}}}}},"d":{"docs":{},"df":0,"e":{"docs":{},"df":0,"p":{"docs":{},"df":0,"_":{"docs":{},"df":0,"g":{"docs":{},"df":0,"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"p":{"docs":{},"df":0,"h":{"docs":{},"df":0,"/":{"docs":{},"df":0,"d":{"docs":{},"df":0,"e":{"docs":{},"df":0,"p":{"docs":{},"df":0,"_":{"docs":{},"df":0,"n":{"docs":{},"df":0,"o":{"docs":{},"df":0,"d":{"docs":{},"df":0,"e":{"docs":{},"df":0,".":{"docs":{},"df":0,"r":{"docs":{"query.html#adding-a-new-kind-of-query":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"f":{"docs":{"appendix/glossary.html#appendix-c-glossary":{"tf":1.0}},"df":1}}},"t":{"docs":{},"df":0,"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{"compiler-debugging.html#getting-logging-output":{"tf":1.4142135623730952}},"df":1}}}}}}},"d":{"docs":{},"df":0,"o":{"docs":{},"df":0,"c":{"docs":{"how-to-build-and-run.html#running-xpy-and-building-a-stage1-compiler":{"tf":1.0},"rustdoc.html#the-walking-tour-of-rustdoc":{"tf":1.7320508075688773}},"df":2}}}}}},"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{"appendix/stupid-stats.html#overview-of-the-compilation-process":{"tf":1.0},"how-to-build-and-run.html#running-xpy-and-building-a-stage1-compiler":{"tf":1.4142135623730952},"rustdoc.html#the-walking-tour-of-rustdoc":{"tf":1.4142135623730952},"tests/intro.html#testing-on-emulators":{"tf":1.0},"tests/intro.html#other-tests":{"tf":1.4142135623730952},"rustdoc.html#cheat-sheet":{"tf":1.4142135623730952},"high-level-overview.html#crate-structure":{"tf":1.0},"rustc-driver.html#the-rustc-driver":{"tf":1.4142135623730952}},"df":8}}}},"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{"rustdoc.html#other-tricks-up-its-sleeve":{"tf":1.0}},"df":1}}}}},"e":{"docs":{"high-level-overview.html#crate-structure":{"tf":1.0},"incrcomp-debugging.html#dumping-the-graph":{"tf":1.0}},"df":2},"f":{"docs":{},"df":0,"e":{"docs":{},"df":0,"t":{"docs":{},"df":0,"i":{"docs":{},"df":0,"m":{"docs":{"traits/goals-and-clauses.html#goals-and-clauses-meta-structure":{"tf":1.0},"traits/canonical-queries.html#a-trait-query-in-rustc":{"tf":1.0},"ty.html#the-tcx-and-how-it-uses-lifetimes":{"tf":3.3166247903554},"mir/regionck.html#what-is-a-universe":{"tf":2.23606797749979},"mir/borrowck.html#mir-borrow-check":{"tf":1.0},"ty.html#allocating-and-working-with-types":{"tf":2.0},"traits/goals-and-clauses.html#domain-goals":{"tf":1.0},"variance.html#variance-of-type-and-lifetime-parameters":{"tf":1.7320508075688773},"mir/regionck.html#another-example":{"tf":1.7320508075688773},"the-parser.html#the-parser":{"tf":1.0},"traits/chalk-overview.html#lowering":{"tf":1.0},"rustc-driver.html#a-note-on-lifetimes":{"tf":1.7320508075688773},"traits/lowering-rules.html#notation":{"tf":1.4142135623730952},"type-inference.html#inference-variables":{"tf":1.0},"type-inference.html#a-note-on-terminology":{"tf":1.0},"traits/canonicalization.html#canonicalizing-the-query":{"tf":2.23606797749979},"appendix/glossary.html#appendix-c-glossary":{"tf":2.0},"traits/canonicalization.html#canonicalizing-the-query-result":{"tf":1.4142135623730952},"query.html#how-the-compiler-executes-a-query":{"tf":1.0},"mir/regionck.html#mir-based-region-checking-nll":{"tf":1.4142135623730952},"traits/resolution.html#selection":{"tf":2.23606797749979},"appendix/stupid-stats.html#overview-of-the-compilation-process":{"tf":1.0},"type-inference.html#creating-an-inference-context":{"tf":1.4142135623730952}},"df":23}}}},"t":{"docs":{"traits/canonicalization.html#executing-the-query":{"tf":1.0},"appendix/glossary.html#appendix-c-glossary":{"tf":1.0}},"df":2}},"s":{"docs":{},"df":0,"t":{"docs":{"rustdoc.html#hot-potato":{"tf":1.0},"diag.html#declaring-a-lint":{"tf":1.0},"diag.html#lint-groups":{"tf":1.0},"high-level-overview.html#the-main-stages-of-compilation":{"tf":1.0},"traits/resolution.html#candidate-assembly":{"tf":2.0},"query.html#queries-demand-driven-compilation":{"tf":1.7320508075688773},"query.html#how-the-compiler-executes-a-query":{"tf":1.0},"mir/index.html#key-mir-vocabulary":{"tf":1.0},"tests/adding.html#other-header-commands":{"tf":1.4142135623730952},"compiletest.html#adding-a-new-header-command":{"tf":1.0},"rustc-driver.html#the-rustc-driver":{"tf":1.0},"incrcomp-debugging.html#dumping-the-graph":{"tf":1.0},"hir.html#identifiers-in-the-hir":{"tf":1.0},"method-lookup.html#candidate-assembly":{"tf":1.0},"traits/index.html#trait-solving-new-style":{"tf":1.0},"mir/passes.html#implementing-and-registering-a-pass":{"tf":1.4142135623730952},"mir/borrowck.html#mir-borrow-check":{"tf":1.0},"appendix/glossary.html#appendix-c-glossary":{"tf":1.0}},"df":18}},"m":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{"type-inference.html#subtyping-obligations":{"tf":1.0},"variance.html#the-algorithm":{"tf":1.0},"tests/running.html#running-a-subset-of-the-test-suites":{"tf":1.0},"conventions.html#line-length":{"tf":1.4142135623730952},"variance.html#dependency-graph-management":{"tf":1.0},"variance.html#addendum-variance-on-traits":{"tf":1.0},"high-level-overview.html#crate-structure":{"tf":1.0}},"df":7}}},"c":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"s":{"docs":{"compiletest.html#adding-a-new-header-command":{"tf":2.23606797749979},"conventions.html#copyright-notice":{"tf":2.23606797749979},"conventions.html#using-crates-from-cratesio":{"tf":1.0}},"df":3}}}},"v":{"docs":{},"df":0,"e":{"docs":{"type-inference.html#creating-an-inference-context":{"tf":1.0},"mir/regionck.html#mir-based-region-checking-nll":{"tf":1.0},"mir/index.html#key-mir-vocabulary":{"tf":1.0},"the-parser.html#the-parser":{"tf":1.0},"high-level-overview.html#crate-structure":{"tf":1.0},"rustdoc.html#the-walking-tour-of-rustdoc":{"tf":1.0},"name-resolution.html#name-resolution":{"tf":1.0},"mir/regionck.html#subtyping-and-skolemization":{"tf":1.0},"ty.html#the-tcx-and-how-it-uses-lifetimes":{"tf":1.0},"name-resolution.html#namespaces":{"tf":1.0},"rustdoc.html#from-clean-to-crate":{"tf":1.7320508075688773}},"df":11,"n":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"s":{"docs":{},"df":0,"_":{"docs":{},"df":0,"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{"mir/regionck.html#region-variables-and-constraints":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}},"n":{"docs":{},"df":0,"t":{"docs":{"diag.html#declaring-a-lint":{"tf":3.1622776601683797},"diag.html#emitting-diagnostics":{"tf":1.0},"appendix/code-index.html#appendix-d-code-index":{"tf":1.0},"diag.html#lint-groups":{"tf":2.0},"appendix/stupid-stats.html#overview-of-the-compilation-process":{"tf":1.0},"diag.html#edition-gated-lints":{"tf":2.0},"diag.html#lints":{"tf":1.4142135623730952},"name-resolution.html#name-resolution":{"tf":1.0}},"df":8,"p":{"docs":{},"df":0,"a":{"docs":{},"df":0,"s":{"docs":{},"df":0,"s":{"docs":{"diag.html#declaring-a-lint":{"tf":1.7320508075688773}},"df":1}}}},"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"y":{"docs":{"diag.html#declaring-a-lint":{"tf":1.0}},"df":1}}}}},"e":{"docs":{},"df":0,"r":{"docs":{"diag.html#declaring-a-lint":{"tf":1.0}},"df":1}},"_":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"y":{"docs":{},"df":0,"!":{"docs":{},"df":0,"(":{"docs":{},"df":0,"w":{"docs":{},"df":0,"h":{"docs":{},"df":0,"i":{"docs":{},"df":0,"l":{"docs":{},"df":0,"e":{"docs":{},"df":0,"_":{"docs":{},"df":0,"t":{"docs":{},"df":0,"r":{"docs":{},"df":0,"u":{"docs":{"diag.html#declaring-a-lint":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}},"u":{"docs":{},"df":0,"x":{"docs":{"tests/intro.html#testing-infrastructure":{"tf":1.0},"how-to-build-and-run.html#creating-a-rustup-toolchain":{"tf":1.0},"tests/intro.html#testing-on-emulators":{"tf":1.0},"compiler-debugging.html#getting-a-backtrace":{"tf":1.0},"tests/adding.html#ignoring-tests":{"tf":1.0},"compiler-debugging.html#getting-a-backtrace-for-errors":{"tf":1.7320508075688773}},"df":6}},"k":{"docs":{"appendix/stupid-stats.html#overview-of-the-compilation-process":{"tf":1.0},"appendix/glossary.html#appendix-c-glossary":{"tf":1.4142135623730952},"query.html#how-the-compiler-executes-a-query":{"tf":1.0},"name-resolution.html#todo":{"tf":1.0},"how-to-build-and-run.html#creating-a-rustup-toolchain":{"tf":1.4142135623730952},"rustdoc.html#the-walking-tour-of-rustdoc":{"tf":1.0},"query.html#adding-a-new-kind-of-query":{"tf":1.0},"rustdoc.html#cheat-sheet":{"tf":1.0},"high-level-overview.html#the-main-stages-of-compilation":{"tf":1.4142135623730952},"tests/intro.html#other-tests":{"tf":1.0},"the-parser.html#the-parser":{"tf":1.0},"tests/intro.html#compiletest-test-suites":{"tf":1.0},"traits/chalk-overview.html#an-overview-of-chalk":{"tf":1.0},"mir/index.html#key-mir-vocabulary":{"tf":1.0},"compiler-debugging.html#getting-logging-output":{"tf":1.0},"name-resolution.html#name-resolution":{"tf":1.0}},"df":16,"c":{"docs":{},"df":0,"h":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"k":{"docs":{"tests/intro.html#other-tests":{"tf":1.0}},"df":1}}}}}},"e":{"docs":{"appendix/stupid-stats.html#compilercalls":{"tf":1.7320508075688773},"compiler-debugging.html#getting-a-backtrace":{"tf":2.23606797749979},"macro-expansion.html#example":{"tf":1.0},"appendix/stupid-stats.html#appendix-a-a-tutorial-on-creating-a-drop-in-replacement-for-rustc":{"tf":1.0},"appendix/stupid-stats.html#the-driver-customisation-apis":{"tf":1.0},"query.html#adding-a-new-kind-of-query":{"tf":1.0},"traits/resolution.html#major-concepts":{"tf":1.0},"tests/intro.html#other-tests":{"tf":1.0},"rustc-driver.html#the-rustc-driver":{"tf":1.0},"diag.html#suggestions":{"tf":1.0},"traits/resolution.html#candidate-assembly":{"tf":1.4142135623730952},"appendix/stupid-stats.html#overview-of-the-compilation-process":{"tf":1.0},"how-to-build-and-run.html#create-a-configtoml":{"tf":1.7320508075688773},"tests/adding.html#other-header-commands":{"tf":1.0},"compiletest.html#adding-a-new-header-command":{"tf":2.0},"rustdoc.html#from-crate-to-clean":{"tf":1.0},"tests/adding.html#error-annotations":{"tf":2.449489742783178},"conventions.html#line-length":{"tf":1.7320508075688773},"rustdoc.html#hot-potato":{"tf":1.4142135623730952},"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":2.23606797749979}},"df":20,"l":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"g":{"docs":{},"df":0,"t":{"docs":{},"df":0,"h":{"docs":{"conventions.html#line-length":{"tf":1.0}},"df":1}}}}}},"a":{"docs":{},"df":0,"r":{"docs":{"miri.html#allocations":{"tf":1.0}},"df":1}},"s":{"docs":{},"df":0,"=":{"docs":{},"df":0,"t":{"docs":{},"df":0,"r":{"docs":{},"df":0,"u":{"docs":{"compiler-debugging.html#getting-a-backtrace":{"tf":1.0}},"df":1}}}}}}},"g":{"docs":{},"df":0,"h":{"docs":{},"df":0,"t":{"docs":{"method-lookup.html#candidate-assembly":{"tf":1.0}},"df":1,"l":{"docs":{},"df":0,"i":{"docs":{"high-level-overview.html#the-main-stages-of-compilation":{"tf":1.0},"traits/lowering-to-logic.html#source":{"tf":1.0}},"df":2}}}}}},"f":{"docs":{"tests/adding.html#normalization":{"tf":1.4142135623730952}},"df":1},"o":{"docs":{},"df":0,"v":{"docs":{},"df":0,"e":{"docs":{"traits/chalk-overview.html#an-overview-of-chalk":{"tf":1.0},"traits/chalk-overview.html#parsing":{"tf":1.0},"appendix/glossary.html#appendix-c-glossary":{"tf":1.0}},"df":3}},"t":{"docs":{"traits/associated-types.html#skolemized-associated-types":{"tf":1.0},"mir/passes.html#seeing-how-the-mir-changes-as-the-compiler-executes":{"tf":1.0},"conventions.html#how-to-structure-your-pr":{"tf":1.7320508075688773},"ty.html#the-tcx-and-how-it-uses-lifetimes":{"tf":1.0},"diag.html#emitting-diagnostics":{"tf":1.0},"appendix/code-index.html#appendix-d-code-index":{"tf":1.0},"diag.html#declaring-a-lint":{"tf":1.0},"compiler-debugging.html#debugging-llvm":{"tf":1.0},"rustc-driver.html#a-note-on-lifetimes":{"tf":1.7320508075688773},"how-to-build-and-run.html#running-xpy-and-building-a-stage1-compiler":{"tf":1.0},"rustdoc.html#from-soup-to-nuts":{"tf":1.0},"diag.html#error-messages":{"tf":1.0},"rustdoc.html#the-walking-tour-of-rustdoc":{"tf":1.0},"macro-expansion.html#example":{"tf":1.0},"tests/adding.html#naming-your-test":{"tf":1.0},"appendix/stupid-stats.html#appendix-a-a-tutorial-on-creating-a-drop-in-replacement-for-rustc":{"tf":1.0},"compiler-debugging.html#getting-logging-output":{"tf":1.7320508075688773},"traits/lowering-to-logic.html#type-checking-generic-functions-beyond-horn-clauses":{"tf":1.0}},"df":18},"g":{"docs":{"compiler-debugging.html#logging-etiquette":{"tf":1.0},"compiler-debugging.html#getting-logging-output":{"tf":3.7416573867739415},"how-to-build-and-run.html#create-a-configtoml":{"tf":1.0},"compiler-debugging.html#expensive-operations-in-logs":{"tf":3.0}},"df":4,"i":{"docs":{},"df":0,"c":{"docs":{"traits/index.html#trait-solving-new-style":{"tf":1.4142135623730952},"traits/lowering-to-logic.html#rust-traits-and-logic":{"tf":1.7320508075688773},"traits/chalk-overview.html#an-overview-of-chalk":{"tf":1.7320508075688773},"traits/lowering-to-logic.html#type-checking-generic-functions-beyond-horn-clauses":{"tf":1.4142135623730952},"type-inference.html#inference-variables":{"tf":1.0},"traits/lowering-to-logic.html#lowering-to-logic":{"tf":1.7320508075688773},"traits/chalk-overview.html#blog-posts":{"tf":1.0},"mir/regionck.html#what-is-a-universe":{"tf":1.0},"traits/chalk-overview.html#intermediate-representation-ir":{"tf":1.0},"traits/goals-and-clauses.html#goals-and-clauses":{"tf":1.4142135623730952},"traits/chalk-overview.html#lowering":{"tf":1.4142135623730952},"traits/lowering-to-logic.html#type-checking-normal-functions":{"tf":1.0},"rustdoc.html#from-crate-to-clean":{"tf":1.0},"traits/associated-types.html#associated-type-projection-and-normalization":{"tf":1.0},"traits/goals-and-clauses.html#goals-and-clauses-meta-structure":{"tf":1.0},"traits/bibliography.html#bibliography":{"tf":1.4142135623730952},"appendix/glossary.html#appendix-c-glossary":{"tf":1.0},"name-resolution.html#name-resolution":{"tf":1.0}},"df":18}},"g":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"compiler-debugging.html#getting-logging-output":{"tf":1.4142135623730952}},"df":1}}}},"w":{"docs":{"compiletest.html#adding-a-new-header-command":{"tf":1.4142135623730952},"conventions.html#prefer-exhaustive-matches":{"tf":1.0}},"df":2,"e":{"docs":{},"df":0,"r":{"docs":{"traits/lowering-to-logic.html#lowering-to-logic":{"tf":1.0},"high-level-overview.html#the-main-stages-of-compilation":{"tf":2.0},"traits/lowering-rules.html#lowering-where-clauses":{"tf":1.0},"traits/lowering-rules.html#lowering-function-and-constant-declarations":{"tf":1.0},"appendix/glossary.html#appendix-c-glossary":{"tf":1.0},"traits/lowering-rules.html#rule-names-and-cross-references":{"tf":1.0},"traits/implied-bounds.html#implied-bounds":{"tf":1.0},"traits/goals-and-clauses.html#goals-and-clauses":{"tf":1.0},"traits/goals-and-clauses.html#domain-goals":{"tf":1.0},"traits/chalk-overview.html#an-overview-of-chalk":{"tf":1.7320508075688773},"name-resolution.html#namespaces":{"tf":1.0},"traits/associated-types.html#associated-type-projection-and-normalization":{"tf":1.0},"traits/lowering-rules.html#lowering-traits":{"tf":1.0},"traits/lowering-module.html#the-lowering-module-in-rustc":{"tf":1.4142135623730952},"traits/lowering-rules.html#lowering-impls":{"tf":1.4142135623730952},"traits/lowering-rules.html#transforming-the-lowered-where-clauses":{"tf":1.4142135623730952},"traits/chalk-overview.html#well-formedness-checks":{"tf":1.0},"traits/lowering-rules.html#notation":{"tf":1.0},"traits/lowering-rules.html#lowering-impl-items":{"tf":1.0},"rustc-driver.html#the-rustc-driver":{"tf":1.0},"traits/lowering-rules.html#lowering-rules":{"tf":1.4142135623730952},"traits/lowering-rules.html#lowering-trait-items":{"tf":1.0},"traits/chalk-overview.html#lowering":{"tf":2.0},"traits/chalk-overview.html#blog-posts":{"tf":1.0},"traits/index.html#trait-solving-new-style":{"tf":1.7320508075688773},"traits/chalk-overview.html#rules":{"tf":1.0},"traits/associated-types.html#projection-equality":{"tf":1.0}},"df":27,"w":{"docs":{},"df":0,"h":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"l":{"docs":{},"df":0,"a":{"docs":{},"df":0,"u":{"docs":{},"df":0,"s":{"docs":{"traits/lowering-rules.html#notation":{"tf":1.0}},"df":1}}}}}}}}}},"_":{"docs":{},"df":0,"i":{"docs":{},"df":0,"m":{"docs":{},"df":0,"p":{"docs":{},"df":0,"l":{"docs":{"traits/lowering-module.html#unit-tests":{"tf":1.0}},"df":1}}}}}}}},"u":{"docs":{},"df":0,"d":{"docs":{},"df":0,"_":{"docs":{},"df":0,"c":{"docs":{},"df":0,"l":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{"traits/goals-and-clauses.html#domain-goals":{"tf":1.0}},"df":1,"e":{"docs":{},"df":0,"<":{"docs":{},"df":0,"t":{"docs":{"traits/goals-and-clauses.html#domain-goals":{"tf":1.0}},"df":1}}}}}}}}}},"c":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{"compiler-debugging.html#getting-logging-output":{"tf":2.0},"name-resolution.html#scopes-and-ribs":{"tf":1.7320508075688773},"mir/index.html#mir-data-types":{"tf":2.23606797749979},"appendix/glossary.html#appendix-c-glossary":{"tf":1.4142135623730952},"ty.html#the-tcx-and-how-it-uses-lifetimes":{"tf":1.0},"miri.html#miri":{"tf":1.0},"compiler-debugging.html#debugging-llvm":{"tf":1.0},"mir/index.html#key-mir-vocabulary":{"tf":1.7320508075688773},"appendix/background.html#what-is-a-free-region-or-a-free-variable-what-about-bound-region":{"tf":1.0},"how-to-build-and-run.html#creating-a-rustup-toolchain":{"tf":1.0},"rustc-driver.html#a-note-on-lifetimes":{"tf":1.4142135623730952},"traits/caching.html#where-clauses-and-the-local-vs-global-cache":{"tf":2.23606797749979},"mir/borrowck.html#major-phases-of-the-borrow-checker":{"tf":1.0},"how-to-build-and-run.html#running-xpy-and-building-a-stage1-compiler":{"tf":1.0},"rustdoc.html#cheat-sheet":{"tf":1.4142135623730952},"query.html#how-the-compiler-executes-a-query":{"tf":2.449489742783178},"miri.html#allocations":{"tf":1.4142135623730952},"miri.html#interpretation":{"tf":2.0},"type-checking.html#type-collection":{"tf":1.0},"mir/passes.html#mir-passes":{"tf":1.0}},"df":20,"_":{"docs":{},"df":0,"d":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"l":{"docs":{"mir/index.html#mir-data-types":{"tf":1.0}},"df":1}}}}}},"t":{"docs":{"compiletest.html#implementing-the-behavior-change":{"tf":1.0},"rustdoc.html#cheat-sheet":{"tf":1.4142135623730952},"miri.html#miri":{"tf":1.4142135623730952},"diag.html#span":{"tf":1.0},"traits/specialization.html#specialization":{"tf":1.0},"appendix/glossary.html#appendix-c-glossary":{"tf":1.0},"tests/intro.html#compiletest-test-suites":{"tf":1.0},"traits/lowering-module.html#unit-tests":{"tf":1.0},"compiler-debugging.html#getting-logging-output":{"tf":1.0},"mir/regionck.html#mir-based-region-checking-nll":{"tf":1.0},"mir/regionck.html#representing-the-values-of-a-region-variable":{"tf":1.4142135623730952},"compiletest.html#adding-a-new-test-file":{"tf":1.0},"mir/index.html#key-mir-vocabulary":{"tf":1.7320508075688773},"appendix/code-index.html#appendix-d-code-index":{"tf":1.0},"tests/adding.html#error-annotations":{"tf":1.0},"rustdoc.html#other-tricks-up-its-sleeve":{"tf":1.0}},"df":16}}},"o":{"docs":{},"df":0,"p":{"docs":{"appendix/background.html#what-is-a-control-flow-graph":{"tf":1.0},"query.html#cycles-between-queries":{"tf":1.0},"name-resolution.html#scopes-and-ribs":{"tf":1.0},"diag.html#declaring-a-lint":{"tf":2.23606797749979},"hir.html#the-hir":{"tf":1.4142135623730952}},"df":5,"\"":{"docs":{},"df":0,".":{"docs":{},"df":0,"t":{"docs":{},"df":0,"o":{"docs":{},"df":0,"_":{"docs":{},"df":0,"o":{"docs":{},"df":0,"w":{"docs":{},"df":0,"n":{"docs":{"diag.html#declaring-a-lint":{"tf":1.0}},"df":1}}}}}}}}},"k":{"docs":{"mir/regionck.html#final-example":{"tf":1.0},"traits/canonical-queries.html#a-trait-query-in-rustc":{"tf":1.0},"traits/associated-types.html#projection-equality":{"tf":1.0},"traits/caching.html#where-clauses-and-the-local-vs-global-cache":{"tf":1.0},"appendix/stupid-stats.html#overview-of-the-compilation-process":{"tf":1.0},"mir/visitor.html#mir-visitor":{"tf":1.0},"traits/chalk-overview.html#parsing":{"tf":1.0},"rustdoc.html#from-clean-to-crate":{"tf":1.0},"traits/canonical-queries.html#canonical-queries":{"tf":1.0},"mir/index.html#key-mir-vocabulary":{"tf":2.23606797749979},"diag.html#span":{"tf":1.0},"miri.html#miri":{"tf":1.0},"traits/canonicalization.html#processing-the-canonicalized-query-result":{"tf":1.0},"traits/lowering-to-logic.html#type-checking-normal-functions":{"tf":1.0},"traits/caching.html#an-example":{"tf":1.0},"ty.html#allocating-and-working-with-types":{"tf":1.4142135623730952},"query.html#adding-a-new-kind-of-query":{"tf":1.7320508075688773},"traits/lowering-to-logic.html#lowering-to-logic":{"tf":1.0},"traits/lowering-module.html#unit-tests":{"tf":1.0},"tests/intro.html#testing-on-emulators":{"tf":1.0},"query.html#how-the-compiler-executes-a-query":{"tf":1.4142135623730952},"incrcomp-debugging.html#tracking-down-incorrect-edges":{"tf":1.0},"traits/specialization.html#specialization":{"tf":1.0},"traits/associated-types.html#skolemized-associated-types":{"tf":1.0},"compiler-debugging.html#getting-a-backtrace":{"tf":1.4142135623730952},"query.html#cycles-between-queries":{"tf":1.0},"rustdoc.html#dotting-is-and-crossing-ts":{"tf":1.4142135623730952},"macro-expansion.html#the-macro-parser":{"tf":1.0},"compiletest.html#adding-a-new-header-command":{"tf":1.7320508075688773},"incrcomp-debugging.html#dumping-the-graph":{"tf":1.0},"compiler-debugging.html#getting-logging-output":{"tf":1.4142135623730952}},"df":31,"u":{"docs":{},"df":0,"p":{"docs":{"hir.html#out-of-band-storage-and-the--crate--type":{"tf":1.4142135623730952},"traits/caching.html#where-clauses-and-the-local-vs-global-cache":{"tf":1.0},"traits/caching.html#an-example":{"tf":1.0},"hir.html#the-hir-map":{"tf":1.4142135623730952},"method-lookup.html#method-lookup":{"tf":2.23606797749979}},"df":5}}}},"n":{"docs":{},"df":0,"g":{"docs":{"traits/canonicalization.html#canonicalization":{"tf":1.0},"tests/adding.html#naming-your-test":{"tf":1.0},"tests/intro.html#other-tests":{"tf":1.0},"type-inference.html#snapshots":{"tf":1.0},"appendix/stupid-stats.html#what-next":{"tf":1.4142135623730952},"traits/specialization.html#specialization":{"tf":1.0},"ty.html#the-tcx-and-how-it-uses-lifetimes":{"tf":1.0},"mir/regionck.html#another-example":{"tf":1.0},"traits/lowering-to-logic.html#type-checking-generic-functions-beyond-horn-clauses":{"tf":1.0},"tests/running.html#running-tests":{"tf":1.0},"mir/regionck.html#skolemization-and-outlives-constraints":{"tf":1.0},"incremental-compilation.html#footnotes":{"tf":1.0}},"df":12,"e":{"docs":{},"df":0,"r":{"docs":{"tests/adding.html#comment-explaining-what-the-test-is-about":{"tf":1.0},"traits/caching.html#where-clauses-and-the-local-vs-global-cache":{"tf":1.0},"incrcomp-debugging.html#tracking-down-incorrect-edges":{"tf":1.0},"traits/canonical-queries.html#examples":{"tf":1.0},"incremental-compilation.html#the-query-dag":{"tf":1.0},"variance.html#variance-and-associated-types":{"tf":1.0}},"df":6}}}},"a":{"docs":{},"df":0,"d":{"docs":{"mir/passes.html#stealing":{"tf":1.0},"query.html#queries-demand-driven-compilation":{"tf":1.0},"incremental-compilation.html#the-try-mark-green-algorithm":{"tf":1.4142135623730952},"rustdoc.html#cheat-sheet":{"tf":1.0},"rustdoc.html#from-soup-to-nuts":{"tf":1.0},"query.html#how-the-compiler-executes-a-query":{"tf":1.0}},"df":6,"_":{"docs":{},"df":0,"f":{"docs":{},"df":0,"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"m":{"docs":{"compiletest.html#adding-a-new-header-command":{"tf":1.0}},"df":1}}}}}},"n":{"docs":{"mir/borrowck.html#major-phases-of-the-borrow-checker":{"tf":1.0}},"df":1}}},"l":{"docs":{"traits/lowering-module.html#unit-tests":{"tf":1.0}},"df":1,"d":{"docs":{},"df":0,"b":{"docs":{"tests/intro.html#compiletest-test-suites":{"tf":1.0},"tests/adding.html#ignoring-tests":{"tf":1.0},"tests/adding.html#what-kind-of-test-should-i-add":{"tf":1.0}},"df":3}},"v":{"docs":{},"df":0,"m":{"docs":{"how-to-build-and-run.html#creating-a-rustup-toolchain":{"tf":1.0},"mir/index.html#key-mir-vocabulary":{"tf":1.0},"compiler-debugging.html#getting-logging-output":{"tf":1.0},"ty.html#the-tcx-and-how-it-uses-lifetimes":{"tf":1.0},"appendix/glossary.html#appendix-c-glossary":{"tf":3.7416573867739415},"how-to-build-and-run.html#create-a-configtoml":{"tf":1.7320508075688773},"tests/adding.html#other-header-commands":{"tf":1.0},"how-to-build-and-run.html#other-xpy-commands":{"tf":1.0},"miri.html#interpretation":{"tf":1.0},"appendix/stupid-stats.html#overview-of-the-compilation-process":{"tf":2.23606797749979},"high-level-overview.html#the-main-stages-of-compilation":{"tf":2.0},"rustc-driver.html#the-rustc-driver":{"tf":1.4142135623730952},"query.html#queries-demand-driven-compilation":{"tf":1.0},"compiler-debugging.html#debugging-llvm":{"tf":4.0},"tests/adding.html#what-kind-of-test-should-i-add":{"tf":1.0},"trans.html#generating-llvm-ir":{"tf":1.0},"tests/intro.html#compiletest-test-suites":{"tf":1.0}},"df":17,".":{"docs":{},"df":0,"c":{"docs":{},"df":0,"c":{"docs":{},"df":0,"a":{"docs":{},"df":0,"c":{"docs":{},"df":0,"h":{"docs":{"how-to-build-and-run.html#create-a-configtoml":{"tf":1.0}},"df":1}}}}}},"'":{"docs":{"compiler-debugging.html#debugging-llvm":{"tf":1.0},"appendix/stupid-stats.html#overview-of-the-compilation-process":{"tf":1.0}},"df":2}}}},"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{"rustdoc.html#cheat-sheet":{"tf":1.0},"conventions.html#use-todo-comments-for-things-you-dont-want-to-forget":{"tf":1.4142135623730952},"mir/regionck.html#skolemization-and-universes":{"tf":1.0}},"df":3},"g":{"docs":{"conventions.html#how-to-structure-your-pr":{"tf":1.0},"tests/adding.html#other-header-commands":{"tf":1.0},"mir/index.html#the-mir-mid-level-ir":{"tf":1.0},"traits/slg.html#the-slg-solver":{"tf":1.0}},"df":4,"/":{"docs":{},"df":0,"m":{"docs":{},"df":0,"a":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{"conventions.html#how-to-structure-your-pr":{"tf":1.0}},"df":1}}}},"r":{"docs":{},"df":0,"u":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"#":{"docs":{},"df":0,"4":{"docs":{},"df":0,"1":{"docs":{},"df":0,"7":{"docs":{},"df":0,"1":{"docs":{},"df":0,"0":{"docs":{"mir/passes.html#stealing":{"tf":1.0}},"df":1}}}}}},"/":{"docs":{},"df":0,"b":{"docs":{},"df":0,"l":{"docs":{},"df":0,"o":{"docs":{},"df":0,"b":{"docs":{},"df":0,"/":{"docs":{},"df":0,"m":{"docs":{},"df":0,"a":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"/":{"docs":{},"df":0,"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{},"df":0,"b":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"g":{"docs":{},"df":0,".":{"docs":{},"df":0,"m":{"docs":{},"df":0,"d":{"docs":{},"df":0,"#":{"docs":{},"df":0,"b":{"docs":{},"df":0,"u":{"docs":{},"df":0,"g":{"docs":{"compiler-debugging.html#getting-a-backtrace-for-errors":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"m":{"docs":{},"df":0,"p":{"docs":{},"df":0,"i":{"docs":{},"df":0,"l":{"docs":{"query.html#adding-a-new-kind-of-query":{"tf":1.0}},"df":1}}}}}}},"u":{"docs":{},"df":0,"a":{"docs":{},"df":0,"g":{"docs":{"high-level-overview.html#the-main-stages-of-compilation":{"tf":1.4142135623730952},"rustdoc.html#from-soup-to-nuts":{"tf":1.0},"type-inference.html#inference-variables":{"tf":1.0},"appendix/glossary.html#appendix-c-glossary":{"tf":1.0}},"df":4}}},".":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"g":{"docs":{},"df":0,"/":{"docs":{},"df":0,"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"p":{"docs":{},"df":0,"y":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{},"df":0,"g":{"docs":{},"df":0,"h":{"docs":{},"df":0,"t":{"docs":{"conventions.html#copyright-notice":{"tf":1.0},"compiletest.html#adding-a-new-header-command":{"tf":1.0}},"df":2}}}}}}}}}}}}}}}},"r":{"docs":{},"df":0,"g":{"docs":{"query.html#adding-a-new-kind-of-query":{"tf":1.0},"mir/regionck.html#back-to-our-example":{"tf":1.4142135623730952},"rustc-driver.html#a-note-on-lifetimes":{"tf":1.0},"appendix/stupid-stats.html#appendix-a-a-tutorial-on-creating-a-drop-in-replacement-for-rustc":{"tf":1.0},"compiletest.html#introduction":{"tf":1.0},"conventions.html#how-to-structure-your-pr":{"tf":1.0},"mir/regionck.html#extending-the-universal-regions-check":{"tf":1.0}},"df":7,"e":{"docs":{},"df":0,"r":{"docs":{"ty.html#import-conventions":{"tf":1.0}},"df":1}}}},"b":{"docs":{},"df":0,"e":{"docs":{},"df":0,"l":{"docs":{"name-resolution.html#scopes-and-ribs":{"tf":1.0},"incrcomp-debugging.html#dumping-the-graph":{"tf":1.0}},"df":2}}},"m":{"docs":{},"df":0,"b":{"docs":{},"df":0,"d":{"docs":{},"df":0,"a":{"docs":{"traits/bibliography.html#bibliography":{"tf":1.4142135623730952}},"df":1}}}},"z":{"docs":{},"df":0,"i":{"docs":{"traits/index.html#trait-solving-new-style":{"tf":1.0}},"df":1}},"t":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"rustdoc.html#from-crate-to-clean":{"tf":1.0},"rustdoc.html#other-tricks-up-its-sleeve":{"tf":1.0},"high-level-overview.html#crate-structure":{"tf":1.0},"appendix/stupid-stats.html#the-driver-customisation-apis":{"tf":1.0},"type-inference.html#creating-an-inference-context":{"tf":1.0}},"df":5}},"i":{"docs":{},"df":0,"c":{"docs":{"high-level-overview.html#crate-structure":{"tf":1.0},"type-inference.html#lexical-region-resolution":{"tf":1.0},"variance.html#the-algorithm":{"tf":1.4142135623730952}},"df":3}}},"e":{"docs":{"appendix/stupid-stats.html#compilercalls":{"tf":1.0},"traits/hrtb.html#higher-ranked-trait-obligations":{"tf":1.0}},"df":2,"l":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{},"df":0,"p":{"docs":{},"df":0,"a":{"docs":{},"df":0,"s":{"docs":{},"df":0,"s":{"docs":{"diag.html#declaring-a-lint":{"tf":1.0}},"df":1,"<":{"docs":{},"df":0,"'":{"docs":{},"df":0,"a":{"docs":{"diag.html#declaring-a-lint":{"tf":1.0}},"df":1}}}}}}}}}}},"s":{"docs":{},"df":0,"t":{"docs":{"how-to-build-and-run.html#running-xpy-and-building-a-stage1-compiler":{"tf":1.0},"traits/canonicalization.html#canonicalizing-the-query-result":{"tf":1.0}},"df":2}},"_":{"docs":{},"df":0,"c":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{},"df":0,"l":{"docs":{},"df":0,"b":{"docs":{},"df":0,"a":{"docs":{},"df":0,"c":{"docs":{},"df":0,"k":{"docs":{"appendix/stupid-stats.html#compilercalls":{"tf":1.0},"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.0}},"df":2,"(":{"docs":{},"df":0,"&":{"docs":{},"df":0,"m":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.0}},"df":1}}}}}}}}}}}}}},"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"x":{"docs":{},"df":0,"t":{"docs":{"diag.html#declaring-a-lint":{"tf":1.0}},"df":1}}}}}}},"r":{"docs":{"how-to-build-and-run.html#running-xpy-and-building-a-stage1-compiler":{"tf":1.0},"traits/resolution.html#major-concepts":{"tf":1.0},"conventions.html#use-todo-comments-for-things-you-dont-want-to-forget":{"tf":1.4142135623730952},"rustdoc.html#from-crate-to-clean":{"tf":1.4142135623730952},"traits/resolution.html#selection":{"tf":1.0},"traits/canonicalization.html#canonicalizing-the-query":{"tf":1.0},"conventions.html#how-to-structure-your-pr":{"tf":1.0},"ty.html#allocating-and-working-with-types":{"tf":1.0},"type-inference.html#inference-variables":{"tf":1.0},"high-level-overview.html#crate-structure":{"tf":1.0},"macro-expansion.html#macro-expansion":{"tf":1.0},"traits/canonicalization.html#processing-the-canonicalized-query-result":{"tf":1.4142135623730952},"appendix/stupid-stats.html#compilercalls":{"tf":1.0},"mir/index.html#key-mir-vocabulary":{"tf":1.0},"mir/regionck.html#extending-the-universal-regions-check":{"tf":1.0},"tests/adding.html#comment-explaining-what-the-test-is-about":{"tf":1.0},"traits/caching.html#an-example":{"tf":1.0},"traits/canonicalization.html#executing-the-query":{"tf":1.0}},"df":18}}},"u":{"docs":{},"df":0,"n":{"docs":{},"df":0,"c":{"docs":{},"df":0,"h":{"docs":{"tests/intro.html#testing-infrastructure":{"tf":1.0},"tests/intro.html#testing-on-emulators":{"tf":1.0}},"df":2}}}},"y":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"traits/canonical-queries.html#the-traditional-interactive-prolog-query":{"tf":1.0}},"df":1}},"o":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{"compiler-debugging.html#debugging-the-compiler":{"tf":1.0},"param_env.html#parameter-environment":{"tf":1.0}},"df":2}}}},"s":{"docs":{},"df":0,"t":{"docs":{"mir/regionck.html#final-example":{"tf":1.0},"traits/lowering-to-logic.html#type-checking-generic-functions-beyond-horn-clauses":{"tf":1.0},"ty.html#the-tcx-and-how-it-uses-lifetimes":{"tf":1.0},"incremental-compilation.html#the-basic-algorithm":{"tf":1.0},"appendix/stupid-stats.html#compilercalls":{"tf":1.0}},"df":5}}},"e":{"docs":{},"df":0,"t":{"docs":{"rustc-driver.html#the-rustc-driver":{"tf":1.0},"appendix/stupid-stats.html#the-driver-customisation-apis":{"tf":1.4142135623730952},"rustc-driver.html#a-note-on-lifetimes":{"tf":1.0}},"df":3,"'":{"docs":{"traits/hrtb.html#basic-matching-and-skolemization-leaks":{"tf":1.7320508075688773},"traits/lowering-to-logic.html#type-checking-generic-functions-beyond-horn-clauses":{"tf":1.0},"method-lookup.html#candidate-assembly":{"tf":1.0},"traits/goals-and-clauses.html#domain-goals":{"tf":1.0},"mir/regionck.html#skolemization-and-outlives-constraints":{"tf":1.0},"mir/regionck.html#what-is-a-universe":{"tf":1.7320508075688773},"query.html#how-the-compiler-executes-a-query":{"tf":1.0},"how-to-build-and-run.html#running-xpy-and-building-a-stage1-compiler":{"tf":1.0},"traits/lowering-to-logic.html#type-checking-normal-functions":{"tf":1.4142135623730952},"query.html#adding-a-new-kind-of-query":{"tf":1.0},"appendix/background.html#what-is-a-free-region-or-a-free-variable-what-about-bound-region":{"tf":1.0},"mir/regionck.html#back-to-our-example":{"tf":1.4142135623730952},"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.0},"traits/hrtb.html#higher-ranked-trait-obligations":{"tf":1.0},"traits/canonical-queries.html#examples":{"tf":1.4142135623730952},"variance.html#trait-variance-and-vtable-resolution":{"tf":1.0},"mir/regionck.html#final-example":{"tf":1.4142135623730952},"mir/regionck.html#subtyping-and-skolemization":{"tf":1.0},"traits/lowering-to-logic.html#rust-traits-and-logic":{"tf":1.0},"traits/hrtb.html#higher-ranked-trait-bounds":{"tf":1.0}},"df":20},"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"name-resolution.html#namespaces":{"tf":1.0}},"df":1}}}},"s":{"docs":{},"df":0,"s":{"docs":{"high-level-overview.html#crate-structure":{"tf":1.0},"rustdoc.html#hot-potato":{"tf":1.0},"how-to-build-and-run.html#create-a-configtoml":{"tf":1.0},"conventions.html#how-to-structure-your-pr":{"tf":1.0},"variance.html#addendum-variance-on-traits":{"tf":1.0},"mir/borrowck.html#mir-borrow-check":{"tf":1.0}},"df":6}},"x":{"docs":{"appendix/stupid-stats.html#overview-of-the-compilation-process":{"tf":1.0},"appendix/glossary.html#appendix-c-glossary":{"tf":1.0},"the-parser.html#the-parser":{"tf":1.0}},"df":3,"i":{"docs":{},"df":0,"c":{"docs":{"mir/regionck.html#mir-based-region-checking-nll":{"tf":1.7320508075688773},"type-inference.html#extracting-region-constraints":{"tf":2.0},"high-level-overview.html#the-main-stages-of-compilation":{"tf":1.0},"appendix/glossary.html#appendix-c-glossary":{"tf":1.0},"the-parser.html#the-parser":{"tf":1.0},"mir/index.html#key-mir-vocabulary":{"tf":1.0},"mir/borrowck.html#mir-borrow-check":{"tf":1.0},"type-inference.html#lexical-region-resolution":{"tf":1.4142135623730952}},"df":8,"a":{"docs":{},"df":0,"l":{"docs":{},"df":0,"_":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"g":{"docs":{},"df":0,"i":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"_":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"o":{"docs":{},"df":0,"l":{"docs":{},"df":0,"v":{"docs":{"type-inference.html#extracting-region-constraints":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}},"e":{"docs":{},"df":0,"r":{"docs":{"appendix/code-index.html#appendix-d-code-index":{"tf":1.0}},"df":1}}},"d":{"docs":{"traits/caching.html#where-clauses-and-the-local-vs-global-cache":{"tf":1.0}},"df":1},"n":{"docs":{"ty.html#allocating-and-working-with-types":{"tf":1.4142135623730952}},"df":1,"g":{"docs":{},"df":0,"t":{"docs":{},"df":0,"h":{"docs":{"miri.html#miri":{"tf":1.4142135623730952},"const-eval.html#constant-evaluation":{"tf":1.4142135623730952},"conventions.html#line-length":{"tf":1.4142135623730952},"appendix/glossary.html#appendix-c-glossary":{"tf":1.0}},"df":4}}}},"f":{"docs":{},"df":0,"t":{"docs":{"traits/resolution.html#candidate-assembly":{"tf":1.0},"mir/regionck.html#another-example":{"tf":1.0},"traits/lowering-rules.html#transforming-the-lowered-where-clauses":{"tf":1.0},"appendix/stupid-stats.html#overview-of-the-compilation-process":{"tf":1.0},"traits/goals-and-clauses.html#domain-goals":{"tf":1.0},"traits/canonicalization.html#canonicalization":{"tf":1.0},"mir/regionck.html#subtyping-and-skolemization":{"tf":1.0}},"df":7}},"v":{"docs":{},"df":0,"e":{"docs":{},"df":0,"l":{"docs":{"ty.html#the-tcx-and-how-it-uses-lifetimes":{"tf":1.7320508075688773},"compiletest.html#adding-a-new-header-command":{"tf":2.0},"traits/canonical-queries.html#canonical-queries":{"tf":1.0},"query.html#how-the-compiler-executes-a-query":{"tf":1.0},"rustdoc.html#from-clean-to-crate":{"tf":1.0},"high-level-overview.html#crate-structure":{"tf":1.0},"conventions.html#copyright-notice":{"tf":1.0},"about-this-guide.html#about-this-guide":{"tf":1.0},"appendix/glossary.html#appendix-c-glossary":{"tf":1.4142135623730952},"incremental-compilation.html#the-basic-algorithm":{"tf":1.0},"rustdoc.html#the-walking-tour-of-rustdoc":{"tf":1.0},"hir.html#out-of-band-storage-and-the--crate--type":{"tf":1.0},"appendix/code-index.html#appendix-d-code-index":{"tf":1.0},"appendix/stupid-stats.html#appendix-a-a-tutorial-on-creating-a-drop-in-replacement-for-rustc":{"tf":1.0},"high-level-overview.html#the-main-stages-of-compilation":{"tf":1.4142135623730952},"hir.html#identifiers-in-the-hir":{"tf":1.0},"mir/index.html#the-mir-mid-level-ir":{"tf":1.7320508075688773},"query.html#queries-demand-driven-compilation":{"tf":1.4142135623730952},"conventions.html#how-to-structure-your-pr":{"tf":1.0},"type-inference.html#snapshots":{"tf":1.0},"appendix/stupid-stats.html#overview-of-the-compilation-process":{"tf":1.4142135623730952},"high-level-overview.html#high-level-overview-of-the-compiler-source":{"tf":1.0},"hir.html#the-hir":{"tf":1.0},"traits/caching.html#an-example":{"tf":1.0},"tests/adding.html#error-annotations":{"tf":2.0},"appendix/stupid-stats.html#the-driver-customisation-apis":{"tf":1.0}},"df":26},"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"g":{"docs":{"traits/lowering-module.html#unit-tests":{"tf":1.0}},"df":1}}}}},"a":{"docs":{},"df":0,"v":{"docs":{"type-inference.html#extracting-region-constraints":{"tf":1.0},"conventions.html#use-todo-comments-for-things-you-dont-want-to-forget":{"tf":1.0},"appendix/stupid-stats.html#overview-of-the-compilation-process":{"tf":1.0},"compiler-debugging.html#logging-etiquette":{"tf":1.0}},"df":4},"r":{"docs":{},"df":0,"n":{"docs":{"traits/canonical-queries.html#examples":{"tf":1.0},"traits/bibliography.html#bibliography":{"tf":1.0},"name-resolution.html#todo":{"tf":1.0},"appendix/code-index.html#appendix-d-code-index":{"tf":1.0}},"df":4}},"k":{"docs":{"traits/hrtb.html#basic-matching-and-skolemization-leaks":{"tf":2.449489742783178},"mir/regionck.html#what-is-a-universe":{"tf":1.0},"traits/hrtb.html#higher-ranked-trait-obligations":{"tf":1.4142135623730952}},"df":3},"d":{"docs":{"incrcomp-debugging.html#dumping-the-graph":{"tf":1.0},"rustdoc.html#hot-potato":{"tf":1.4142135623730952},"incremental-compilation.html#the-query-dag":{"tf":1.0},"mir/index.html#key-mir-vocabulary":{"tf":1.0},"traits/resolution.html#selection":{"tf":1.0}},"df":5}},"g":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{"name-resolution.html#namespaces":{"tf":1.0},"variance.html#trait-variance-and-vtable-resolution":{"tf":1.7320508075688773},"traits/resolution.html#major-concepts":{"tf":1.0}},"df":3}}}}},"k":{"docs":{"traits/goals-and-clauses.html#goals-and-clauses-meta-structure":{"tf":1.0}},"df":1,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{"rustdoc.html#from-clean-to-crate":{"tf":1.4142135623730952},"traits/index.html#trait-solving-new-style":{"tf":1.0},"traits/lowering-rules.html#trait-header":{"tf":1.4142135623730952},"traits/chalk-overview.html#an-overview-of-chalk":{"tf":1.0},"appendix/glossary.html#appendix-c-glossary":{"tf":1.4142135623730952},"about-this-guide.html#about-this-guide":{"tf":1.0},"mir/index.html#key-mir-vocabulary":{"tf":1.0},"query.html#how-the-compiler-executes-a-query":{"tf":1.0},"traits/goals-and-clauses.html#goals-and-clauses-meta-structure":{"tf":1.0},"type-inference.html#region-constraints":{"tf":1.0},"traits/lowering-rules.html#function-and-constant-values":{"tf":1.0},"mir/regionck.html#representing-the-values-of-a-region-variable":{"tf":1.4142135623730952},"traits/bibliography.html#bibliography":{"tf":1.4142135623730952},"query.html#adding-a-new-kind-of-query":{"tf":2.23606797749979},"name-resolution.html#namespaces":{"tf":1.0},"traits/lowering-rules.html#lowering-rules":{"tf":1.0},"mir/regionck.html#mir-based-region-checking-nll":{"tf":1.0},"hir.html#hir-bodies":{"tf":1.4142135623730952},"traits/canonicalization.html#executing-the-query":{"tf":1.0},"traits/lowering-to-logic.html#lowering-to-logic":{"tf":1.0},"param_env.html#parameter-environment":{"tf":1.0},"type-inference.html#inference-variables":{"tf":1.0},"type-inference.html#creating-an-inference-context":{"tf":1.0},"hir.html#the-hir-map":{"tf":1.0},"ty.html#beyond-types-other-kinds-of-arena-allocated-data-structures":{"tf":1.0},"tests/adding.html#adding-new-tests":{"tf":1.4142135623730952},"method-lookup.html#method-lookup":{"tf":1.0},"appendix/stupid-stats.html#appendix-a-a-tutorial-on-creating-a-drop-in-replacement-for-rustc":{"tf":1.0},"name-resolution.html#overall-strategy":{"tf":1.0},"method-lookup.html#candidate-assembly":{"tf":1.4142135623730952},"tests/adding.html#what-kind-of-test-should-i-add":{"tf":1.4142135623730952},"appendix/code-index.html#appendix-d-code-index":{"tf":1.0},"name-resolution.html#name-resolution":{"tf":1.0},"high-level-overview.html#crate-structure":{"tf":1.0},"how-to-build-and-run.html#running-xpy-and-building-a-stage1-compiler":{"tf":1.0},"ty.html#allocating-and-working-with-types":{"tf":1.7320508075688773},"traits/lowering-to-logic.html#rust-traits-and-logic":{"tf":1.0},"mir/regionck.html#what-is-a-universe":{"tf":1.0}},"df":38}}},"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.4142135623730952}},"df":1}}}},"n":{"docs":{},"df":0,"o":{"docs":{},"df":0,"c":{"docs":{},"df":0,"k":{"docs":{"mir/index.html#key-mir-vocabulary":{"tf":1.0}},"df":1}},"w":{"docs":{"traits/goals-and-clauses.html#goals-and-clauses":{"tf":1.0},"type-inference.html#trying-equality":{"tf":1.0},"rustdoc.html#hot-potato":{"tf":1.0},"traits/canonicalization.html#canonicalization":{"tf":1.0},"mir/regionck.html#subtyping-and-skolemization":{"tf":1.0},"traits/resolution.html#candidate-assembly":{"tf":1.0},"traits/resolution.html#selection-during-translation":{"tf":2.0},"tests/adding.html#header-commands-configuring-rustc":{"tf":1.0},"diag.html#suggestions":{"tf":1.0},"traits/canonical-queries.html#canonical-queries":{"tf":1.4142135623730952},"param_env.html#parameter-environment":{"tf":1.0},"tests/adding.html#what-kind-of-test-should-i-add":{"tf":1.0},"variance.html#variance-and-associated-types":{"tf":1.4142135623730952},"tests/adding.html#adding-new-tests":{"tf":1.0},"appendix/stupid-stats.html#what-next":{"tf":1.4142135623730952},"mir/regionck.html#skolemization-and-universes":{"tf":1.0},"traits/associated-types.html#skolemized-associated-types":{"tf":1.0},"traits/chalk-overview.html#parsing":{"tf":1.0},"traits/resolution.html#major-concepts":{"tf":1.0},"traits/canonical-queries.html#examples":{"tf":1.4142135623730952},"ty.html#the-tcx-and-how-it-uses-lifetimes":{"tf":1.0},"traits/lowering-to-logic.html#type-checking-generic-functions-beyond-horn-clauses":{"tf":1.0},"type-inference.html#extracting-region-constraints":{"tf":1.0},"traits/lowering-rules.html#trait-header":{"tf":1.0},"high-level-overview.html#the-main-stages-of-compilation":{"tf":2.0},"compiler-debugging.html#expensive-operations-in-logs":{"tf":1.0},"mir/regionck.html#skolemization-and-outlives-constraints":{"tf":1.4142135623730952},"tests/adding.html#comment-explaining-what-the-test-is-about":{"tf":1.4142135623730952},"hir.html#the-hir-map":{"tf":1.4142135623730952},"query.html#cycles-between-queries":{"tf":1.0},"variance.html#variance-and-object-types":{"tf":1.4142135623730952},"mir/regionck.html#extending-the-universal-regions-check":{"tf":1.0},"traits/hrtb.html#higher-ranked-trait-obligations":{"tf":1.0}},"df":33,"l":{"docs":{},"df":0,"e":{"docs":{},"df":0,"d":{"docs":{},"df":0,"g":{"docs":{"macro-expansion.html#the-macro-parser":{"tf":1.0}},"df":1}}}},"n":{"docs":{"type-inference.html#extracting-region-constraints":{"tf":1.0},"traits/goals-and-clauses.html#coinductive-goals":{"tf":1.0},"variance.html#variance-and-object-types":{"tf":1.0},"compiletest.html#header-commands":{"tf":1.0},"traits/specialization.html#specialization":{"tf":1.4142135623730952},"appendix/glossary.html#appendix-c-glossary":{"tf":1.0},"ty.html#allocating-and-working-with-types":{"tf":1.4142135623730952},"mir/regionck.html#back-to-our-example":{"tf":1.0},"const-eval.html#constant-evaluation":{"tf":1.7320508075688773},"traits/caching.html#caching-and-subtle-considerations-therewith":{"tf":1.0},"mir/regionck.html#extending-the-universal-regions-check":{"tf":1.0},"type-inference.html#inference-variables":{"tf":1.0},"traits/canonical-queries.html#a-trait-query-in-rustc":{"tf":1.0},"traits/canonical-queries.html#examples":{"tf":1.4142135623730952},"type-inference.html#subtyping-obligations":{"tf":1.0}},"df":15}}},"e":{"docs":{},"df":0,"w":{"docs":{"traits/associated-types.html#projection-equality":{"tf":1.0}},"df":1}}},"e":{"docs":{},"df":0,"e":{"docs":{},"df":0,"p":{"docs":{"conventions.html#line-length":{"tf":1.0},"query.html#queries-demand-driven-compilation":{"tf":1.0},"macro-expansion.html#the-macro-parser":{"tf":1.7320508075688773},"mir/passes.html#implementing-and-registering-a-pass":{"tf":1.0},"mir/regionck.html#skolemization-and-outlives-constraints":{"tf":1.0},"ty.html#the-tcx-and-how-it-uses-lifetimes":{"tf":1.0},"appendix/glossary.html#appendix-c-glossary":{"tf":1.0},"name-resolution.html#namespaces":{"tf":1.0},"rustc-driver.html#a-note-on-lifetimes":{"tf":1.0},"mir/regionck.html#what-is-a-universe":{"tf":1.4142135623730952},"how-to-build-and-run.html#running-xpy-and-building-a-stage1-compiler":{"tf":1.0},"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":2.0},"appendix/stupid-stats.html#appendix-a-a-tutorial-on-creating-a-drop-in-replacement-for-rustc":{"tf":1.0},"traits/canonical-queries.html#the-traditional-interactive-prolog-query":{"tf":1.0}},"df":14}},"p":{"docs":{},"df":0,"t":{"docs":{"traits/canonical-queries.html#the-traditional-interactive-prolog-query":{"tf":1.0}},"df":1}},"b":{"docs":{},"df":0,"a":{"docs":{},"df":0,"b":{"docs":{"compiletest.html#adding-a-new-header-command":{"tf":1.0}},"df":1}}},"y":{"docs":{"hir.html#identifiers-in-the-hir":{"tf":1.0},"mir/index.html#introduction-to-mir":{"tf":1.0},"traits/index.html#trait-solving-new-style":{"tf":1.0},"traits/associated-types.html#integration-with-unification":{"tf":1.0},"query.html#adding-a-new-kind-of-query":{"tf":2.449489742783178},"incremental-compilation.html#the-basic-algorithm":{"tf":1.0},"traits/lowering-to-logic.html#lowering-to-logic":{"tf":1.0},"query.html#queries-demand-driven-compilation":{"tf":1.0},"appendix/code-index.html#appendix-d-code-index":{"tf":1.0},"appendix/background.html#what-is-a-control-flow-graph":{"tf":1.0},"traits/bibliography.html#bibliography":{"tf":1.0},"traits/canonicalization.html#canonicalization":{"tf":1.0},"query.html#how-the-compiler-executes-a-query":{"tf":2.0},"mir/index.html#key-mir-vocabulary":{"tf":1.4142135623730952},"traits/chalk-overview.html#lowering":{"tf":1.0},"mir/regionck.html#subtyping-and-skolemization":{"tf":1.0},"hir.html#out-of-band-storage-and-the--crate--type":{"tf":1.0},"mir/index.html#mir-data-types":{"tf":1.0},"compiletest.html#adding-a-new-header-command":{"tf":1.0},"mir/borrowck.html#mir-borrow-check":{"tf":1.0},"incremental-compilation.html#the-query-dag":{"tf":1.0}},"df":21,"w":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"d":{"docs":{"appendix/background.html#what-is-a-control-flow-graph":{"tf":1.0},"appendix/glossary.html#appendix-c-glossary":{"tf":1.0}},"df":2}}}},"/":{"docs":{},"df":0,"v":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{},"df":0,"u":{"docs":{"query.html#adding-a-new-kind-of-query":{"tf":1.0}},"df":1}}}}}}}},"2":{"docs":{"traits/specialization.html#specialization":{"tf":1.0},"traits/canonicalization.html#canonicalizing-the-query-result":{"tf":1.7320508075688773},"traits/canonicalization.html#processing-the-canonicalized-query-result":{"tf":1.7320508075688773},"tests/running.html#running-tests":{"tf":1.0},"mir/regionck.html#final-example":{"tf":2.23606797749979},"compiler-debugging.html#getting-a-backtrace":{"tf":1.0},"mir/regionck.html#another-example":{"tf":2.23606797749979},"mir/index.html#key-mir-vocabulary":{"tf":1.0},"appendix/stupid-stats.html#overview-of-the-compilation-process":{"tf":1.0},"compiler-debugging.html#getting-a-backtrace-for-errors":{"tf":1.4142135623730952},"ty.html#allocating-and-working-with-types":{"tf":1.0},"traits/chalk-overview.html#blog-posts":{"tf":1.0},"traits/canonicalization.html#executing-the-query":{"tf":1.0},"how-to-build-and-run.html#running-xpy-and-building-a-stage1-compiler":{"tf":1.4142135623730952},"high-level-overview.html#the-main-stages-of-compilation":{"tf":1.4142135623730952},"traits/resolution.html#major-concepts":{"tf":1.0},"appendix/glossary.html#appendix-c-glossary":{"tf":1.0},"compiletest.html#adding-a-new-header-command":{"tf":1.0},"variance.html#the-algorithm":{"tf":1.4142135623730952},"traits/canonicalization.html#canonicalizing-the-query":{"tf":1.7320508075688773},"name-resolution.html#scopes-and-ribs":{"tf":1.4142135623730952},"name-resolution.html#namespaces":{"tf":1.0},"tests/running.html#running-a-subset-of-the-test-suites":{"tf":1.0},"traits/canonical-queries.html#examples":{"tf":1.0},"mir/regionck.html#what-is-a-universe":{"tf":1.7320508075688773}},"df":25,".":{"docs":{},"df":0,"0":{"docs":{"conventions.html#copyright-notice":{"tf":1.4142135623730952},"compiletest.html#adding-a-new-header-command":{"tf":1.4142135623730952}},"df":2}},"5":{"docs":{"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.0}},"df":1},"0":{"docs":{},"df":0,"8":{"docs":{},"df":0,"9":{"docs":{"traits/lowering-rules.html#trait-header":{"tf":1.0}},"df":1}},"1":{"docs":{},"df":0,"8":{"docs":{"diag.html#edition-gated-lints":{"tf":1.0},"compiletest.html#adding-a-new-header-command":{"tf":1.0}},"df":2},"2":{"docs":{"conventions.html#copyright-notice":{"tf":1.0}},"df":1},"5":{"docs":{"diag.html#edition-gated-lints":{"tf":1.0}},"df":1},"3":{"docs":{"conventions.html#copyright-notice":{"tf":1.0}},"df":1},"7":{"docs":{"tests/adding.html#header-commands-configuring-rustc":{"tf":1.0}},"df":1}}},">":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{},"df":0,"l":{"docs":{"compiler-debugging.html#getting-logging-output":{"tf":1.0}},"df":1}}},"t":{"docs":{},"df":0,"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{"compiler-debugging.html#getting-logging-output":{"tf":1.0}},"df":1}}}}}},"6":{"docs":{},"df":0,"0":{"docs":{},"df":0,",":{"docs":{},"df":0,"6":{"docs":{"compiletest.html#adding-a-new-header-command":{"tf":1.0}},"df":1}}},"1":{"docs":{},"df":0,",":{"docs":{},"df":0,"7":{"docs":{"compiletest.html#adding-a-new-header-command":{"tf":1.0}},"df":1}}}},":":{"docs":{},"df":0,"1":{"docs":{},"df":0,"6":{"docs":{"mir/index.html#key-mir-vocabulary":{"tf":1.0}},"df":1}}},"9":{"docs":{},"df":0,"5":{"docs":{},"df":0,",":{"docs":{},"df":0,"1":{"docs":{},"df":0,"4":{"docs":{"compiletest.html#implementing-the-behavior-change":{"tf":1.0}},"df":1},"1":{"docs":{"compiletest.html#implementing-the-behavior-change":{"tf":1.0}},"df":1}}}}},"3":{"docs":{},"df":0,"2":{"docs":{},"df":0,",":{"docs":{},"df":0,"7":{"docs":{"compiletest.html#adding-a-new-header-command":{"tf":1.0}},"df":1},"6":{"docs":{"compiletest.html#adding-a-new-header-command":{"tf":1.0}},"df":1}}}},"2":{"docs":{"traits/caching.html#an-example":{"tf":1.7320508075688773},"mir/regionck.html#skolemization-and-universes":{"tf":1.0},"mir/index.html#key-mir-vocabulary":{"tf":1.0},"type-inference.html#inference-variables":{"tf":1.0}},"df":4,"0":{"docs":{},"df":0,"1":{"docs":{},"df":0,"9":{"docs":{"traits/caching.html#where-clauses-and-the-local-vs-global-cache":{"tf":1.0}},"df":1}}},".":{"docs":{},"df":0,"0":{"docs":{"type-inference.html#inference-variables":{"tf":1.0}},"df":1}}},"1":{"docs":{},"df":0,"7":{"docs":{},"df":0,"2":{"docs":{},"df":0,"6":{"docs":{"variance.html#variance-and-associated-types":{"tf":1.0}},"df":1}},"5":{"docs":{},"df":0,"0":{"docs":{"variance.html#variance-and-associated-types":{"tf":1.0}},"df":1}}}}},"f":{"docs":{"traits/hrtb.html#higher-ranked-trait-obligations":{"tf":1.7320508075688773},"mir/passes.html#seeing-how-the-mir-changes-as-the-compiler-executes":{"tf":1.0},"high-level-overview.html#the-main-stages-of-compilation":{"tf":1.0},"mir/index.html#mir-data-types":{"tf":1.0}},"df":4,"l":{"docs":{},"df":0,"a":{"docs":{},"df":0,"g":{"docs":{"tests/adding.html#revisions":{"tf":1.7320508075688773},"tests/adding.html#other-header-commands":{"tf":1.4142135623730952},"hir.html#the-hir":{"tf":1.0},"tests/adding.html#header-commands-configuring-rustc":{"tf":1.7320508075688773},"tests/running.html#running-an-individual-test":{"tf":1.0},"query.html#adding-a-new-kind-of-query":{"tf":1.4142135623730952},"incrcomp-debugging.html#dumping-the-graph":{"tf":1.0},"compiler-debugging.html#debugging-llvm":{"tf":1.0},"tests/adding.html#editing-and-updating-the-reference-files":{"tf":1.0},"appendix/stupid-stats.html#compilercontroller":{"tf":2.0}},"df":10},"v":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{"tests/adding.html#normalization":{"tf":1.0}},"df":1}}}},"o":{"docs":{},"df":0,"w":{"docs":{"query.html#queries-demand-driven-compilation":{"tf":1.0},"mir/index.html#key-mir-vocabulary":{"tf":1.4142135623730952},"mir/borrowck.html#major-phases-of-the-borrow-checker":{"tf":1.0},"mir/regionck.html#representing-the-values-of-a-region-variable":{"tf":1.4142135623730952},"appendix/background.html#what-is-a-control-flow-graph":{"tf":2.6457513110645909},"appendix/glossary.html#appendix-c-glossary":{"tf":2.23606797749979},"high-level-overview.html#crate-structure":{"tf":1.4142135623730952},"mir/index.html#the-mir-mid-level-ir":{"tf":1.4142135623730952},"mir/index.html#introduction-to-mir":{"tf":1.0},"mir/regionck.html#skolemization-and-outlives-constraints":{"tf":1.0},"mir/borrowck.html#mir-borrow-check":{"tf":1.0}},"df":11},"a":{"docs":{},"df":0,"t":{"docs":{"type-inference.html#inference-variables":{"tf":1.7320508075688773}},"df":1}}},"e":{"docs":{},"df":0,"x":{"docs":{},"df":0,"i":{"docs":{},"df":0,"b":{"docs":{},"df":0,"l":{"docs":{"appendix/stupid-stats.html#what-next":{"tf":1.0},"tests/intro.html#compiletest-test-suites":{"tf":1.0}},"df":2}}}}}},"m":{"docs":{},"df":0,"t":{"docs":{"compiler-debugging.html#expensive-operations-in-logs":{"tf":1.4142135623730952}},"df":1,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"f":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"m":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{},"df":0,"t":{"docs":{"compiler-debugging.html#expensive-operations-in-logs":{"tf":1.0}},"df":1}}}}}}},"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"u":{"docs":{},"df":0,"l":{"docs":{},"df":0,"t":{"docs":{"compiler-debugging.html#expensive-operations-in-logs":{"tf":1.0}},"df":1}}}}}},"d":{"docs":{},"df":0,"i":{"docs":{},"df":0,"s":{"docs":{},"df":0,"p":{"docs":{},"df":0,"l":{"docs":{},"df":0,"a":{"docs":{},"df":0,"y":{"docs":{"rustdoc.html#from-clean-to-crate":{"tf":1.4142135623730952},"rustdoc.html#cheat-sheet":{"tf":1.0}},"df":2}}}}}},"e":{"docs":{},"df":0,"b":{"docs":{},"df":0,"u":{"docs":{},"df":0,"g":{"docs":{"compiler-debugging.html#expensive-operations-in-logs":{"tf":1.4142135623730952}},"df":1,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"f":{"docs":{},"df":0,"m":{"docs":{},"df":0,"t":{"docs":{},"df":0,"(":{"docs":{},"df":0,"&":{"docs":{},"df":0,"v":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{},"df":0,"u":{"docs":{"compiler-debugging.html#expensive-operations-in-logs":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}},"(":{"docs":{},"df":0,"&":{"docs":{},"df":0,"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"l":{"docs":{},"df":0,"f":{"docs":{"compiler-debugging.html#expensive-operations-in-logs":{"tf":1.0}},"df":1}}}}}}}},"i":{"docs":{},"df":0,"g":{"docs":{},"df":0,"u":{"docs":{},"df":0,"r":{"docs":{"traits/resolution.html#major-concepts":{"tf":1.4142135623730952},"type-checking.html#type-collection":{"tf":1.0},"traits/index.html#trait-solving-new-style":{"tf":1.0},"variance.html#trait-variance-and-vtable-resolution":{"tf":1.0},"traits/hrtb.html#basic-matching-and-skolemization-leaks":{"tf":1.0},"traits/resolution.html#selection-during-translation":{"tf":1.0},"miri.html#miri":{"tf":1.0},"appendix/glossary.html#appendix-c-glossary":{"tf":1.0},"mir/borrowck.html#major-phases-of-the-borrow-checker":{"tf":1.0}},"df":9}}},"l":{"docs":{},"df":0,"l":{"docs":{"compiler-debugging.html#getting-logging-output":{"tf":1.0},"name-resolution.html#overall-strategy":{"tf":1.0}},"df":2},"e":{"docs":{"tests/adding.html#comment-explaining-what-the-test-is-about":{"tf":1.0},"high-level-overview.html#crate-structure":{"tf":1.0},"tests/adding.html#editing-and-updating-the-reference-files":{"tf":1.4142135623730952},"query.html#adding-a-new-kind-of-query":{"tf":1.0},"conventions.html#how-to-structure-your-pr":{"tf":1.4142135623730952},"macro-expansion.html#example":{"tf":1.0},"compiletest.html#introduction":{"tf":1.0},"how-to-build-and-run.html#creating-a-rustup-toolchain":{"tf":1.0},"rustdoc.html#from-clean-to-crate":{"tf":1.0},"tests/running.html#running-tests":{"tf":1.4142135623730952},"tests/adding.html#normalization":{"tf":1.0},"tests/adding.html#other-header-commands":{"tf":1.0},"about-this-guide.html#about-this-guide":{"tf":1.0},"conventions.html#copyright-notice":{"tf":2.23606797749979},"conventions.html#line-length":{"tf":1.0},"tests/adding.html#guide-to-the-ui-tests":{"tf":1.7320508075688773},"compiletest.html#header-commands":{"tf":1.4142135623730952},"name-resolution.html#name-resolution":{"tf":1.0},"rustdoc.html#cheat-sheet":{"tf":1.0},"rustdoc.html#dotting-is-and-crossing-ts":{"tf":1.4142135623730952},"appendix/stupid-stats.html#compilercalls":{"tf":1.0},"appendix/glossary.html#appendix-c-glossary":{"tf":1.0},"tests/adding.html#naming-your-test":{"tf":1.0},"mir/passes.html#seeing-how-the-mir-changes-as-the-compiler-executes":{"tf":1.7320508075688773},"tests/intro.html#compiletest-test-suites":{"tf":1.0},"conventions.html#formatting-and-the-tidy-script":{"tf":1.0},"compiletest.html#adding-a-new-test-file":{"tf":1.7320508075688773},"rustc-driver.html#the-rustc-driver":{"tf":1.0},"compiler-debugging.html#formatting-graphviz-output-dot-files":{"tf":1.7320508075688773},"compiler-debugging.html#debugging-llvm":{"tf":1.0},"rustdoc.html#other-tricks-up-its-sleeve":{"tf":1.4142135623730952},"traits/lowering-module.html#unit-tests":{"tf":1.0},"high-level-overview.html#the-main-stages-of-compilation":{"tf":1.7320508075688773},"appendix/stupid-stats.html#overview-of-the-compilation-process":{"tf":2.0},"appendix/stupid-stats.html#appendix-a-a-tutorial-on-creating-a-drop-in-replacement-for-rustc":{"tf":1.0},"tests/adding.html#adding-new-tests":{"tf":2.0},"tests/adding.html#revisions":{"tf":1.4142135623730952},"tests/running.html#running-an-individual-test":{"tf":1.0},"rustdoc.html#hot-potato":{"tf":1.0},"method-lookup.html#method-lookup":{"tf":1.0},"compiler-debugging.html#getting-logging-output":{"tf":1.0},"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.4142135623730952},"how-to-build-and-run.html#create-a-configtoml":{"tf":1.0},"compiletest.html#adding-a-new-header-command":{"tf":2.6457513110645909}},"df":44,"m":{"docs":{},"df":0,"a":{"docs":{},"df":0,"p":{"docs":{"the-parser.html#the-parser":{"tf":1.0}},"df":1}}},"n":{"docs":{},"df":0,"a":{"docs":{},"df":0,"m":{"docs":{"incrcomp-debugging.html#dumping-the-graph":{"tf":1.0},"tests/adding.html#normalization":{"tf":1.0}},"df":2}}},".":{"docs":{},"df":0,"l":{"docs":{"compiler-debugging.html#debugging-llvm":{"tf":1.0}},"df":1},"r":{"docs":{"compiler-debugging.html#debugging-llvm":{"tf":1.0},"compiler-debugging.html#getting-logging-output":{"tf":2.23606797749979}},"df":2}}},"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"compiler-debugging.html#getting-logging-output":{"tf":1.4142135623730952},"compiler-debugging.html#debugging-llvm":{"tf":1.7320508075688773},"tests/running.html#running-an-individual-test":{"tf":1.0},"incrcomp-debugging.html#dumping-the-graph":{"tf":2.0},"mir/passes.html#seeing-how-the-mir-changes-as-the-compiler-executes":{"tf":2.0},"compiler-debugging.html#expensive-operations-in-logs":{"tf":1.0},"incrcomp-debugging.html#tracking-down-incorrect-edges":{"tf":2.0}},"df":7}}}},"r":{"docs":{},"df":0,"e":{"docs":{"rustc-driver.html#the-rustc-driver":{"tf":1.0}},"df":1,"f":{"docs":{},"df":0,"o":{"docs":{},"df":0,"x":{"docs":{"compiler-debugging.html#formatting-graphviz-output-dot-files":{"tf":1.0}},"df":1}}}},"s":{"docs":{},"df":0,"t":{"docs":{"mir/regionck.html#mir-based-region-checking-nll":{"tf":1.7320508075688773},"appendix/stupid-stats.html#overview-of-the-compilation-process":{"tf":1.0},"incrcomp-debugging.html#tracking-down-incorrect-edges":{"tf":1.0},"name-resolution.html#overall-strategy":{"tf":1.0},"tests/adding.html#adding-new-tests":{"tf":1.0},"traits/goals-and-clauses.html#domain-goals":{"tf":1.0},"traits/canonicalization.html#canonicalizing-the-query-result":{"tf":1.0},"traits/hrtb.html#basic-matching-and-skolemization-leaks":{"tf":1.0},"method-lookup.html#candidate-search":{"tf":1.4142135623730952},"rustdoc.html#from-soup-to-nuts":{"tf":1.0},"traits/resolution.html#candidate-assembly":{"tf":2.0},"type-inference.html#subtyping-obligations":{"tf":1.0},"rustdoc.html#from-crate-to-clean":{"tf":1.0},"incremental-compilation.html#the-query-dag":{"tf":1.0},"traits/lowering-rules.html#trait-header":{"tf":1.0},"const-eval.html#constant-evaluation":{"tf":1.0},"incremental-compilation.html#the-basic-algorithm":{"tf":1.0},"query.html#adding-a-new-kind-of-query":{"tf":1.0},"traits/lowering-rules.html#associated-type-declarations":{"tf":1.0},"mir/regionck.html#final-example":{"tf":1.4142135623730952},"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.4142135623730952},"traits/lowering-to-logic.html#type-checking-generic-functions-beyond-horn-clauses":{"tf":1.0},"appendix/stupid-stats.html#appendix-a-a-tutorial-on-creating-a-drop-in-replacement-for-rustc":{"tf":1.0},"mir/borrowck.html#major-phases-of-the-borrow-checker":{"tf":1.0},"macro-expansion.html#the-macro-parser":{"tf":1.0},"method-lookup.html#steps":{"tf":1.0},"mir/passes.html#implementing-and-registering-a-pass":{"tf":1.0},"mir/regionck.html#another-example":{"tf":1.0},"query.html#queries-demand-driven-compilation":{"tf":1.0},"mir/index.html#key-mir-vocabulary":{"tf":1.0},"variance.html#trait-variance-and-vtable-resolution":{"tf":1.0},"traits/goals-and-clauses.html#goals-and-clauses-meta-structure":{"tf":1.0},"mir/regionck.html#skolemization-and-outlives-constraints":{"tf":1.0},"compiler-debugging.html#getting-a-backtrace-for-errors":{"tf":1.4142135623730952},"how-to-build-and-run.html#creating-a-rustup-toolchain":{"tf":1.0},"traits/caching.html#an-example":{"tf":1.0},"traits/chalk-overview.html#parsing":{"tf":1.0},"appendix/background.html#what-is-a-control-flow-graph":{"tf":1.0},"type-inference.html#enforcing-equality--subtyping":{"tf":1.0},"traits/lowering-to-logic.html#rust-traits-and-logic":{"tf":1.4142135623730952},"incremental-compilation.html#the-try-mark-green-algorithm":{"tf":1.0},"traits/specialization.html#specialization":{"tf":1.0},"name-resolution.html#todo":{"tf":1.4142135623730952},"miri.html#miri":{"tf":1.0},"traits/canonical-queries.html#examples":{"tf":1.4142135623730952},"mir/regionck.html#back-to-our-example":{"tf":1.0}},"df":46}}},"x":{"docs":{"tests/adding.html#other-header-commands":{"tf":1.0},"traits/chalk-overview.html#an-overview-of-chalk":{"tf":1.4142135623730952},"tests/adding.html#editing-and-updating-the-reference-files":{"tf":1.0},"tests/adding.html#comment-explaining-what-the-test-is-about":{"tf":1.0},"tests/adding.html#adding-new-tests":{"tf":1.0},"type-inference.html#region-constraints":{"tf":1.0},"mir/borrowck.html#mir-borrow-check":{"tf":1.0},"incrcomp-debugging.html#tracking-down-incorrect-edges":{"tf":1.0},"traits/canonicalization.html#canonicalization":{"tf":1.0},"diag.html#error-messages":{"tf":1.0},"tests/running.html#running-an-individual-test":{"tf":1.0},"traits/goals-and-clauses.html#coinductive-goals":{"tf":1.0},"conventions.html#use-todo-comments-for-things-you-dont-want-to-forget":{"tf":1.7320508075688773},"name-resolution.html#overall-strategy":{"tf":1.0},"diag.html#suggestions":{"tf":1.0},"type-inference.html#lexical-region-resolution":{"tf":1.0},"variance.html#the-algorithm":{"tf":1.0}},"df":17,"m":{"docs":{"method-lookup.html#candidate-assembly":{"tf":1.4142135623730952}},"df":1}},"e":{"docs":{},"df":0,"l":{"docs":{},"df":0,"d":{"docs":{"ty.html#allocating-and-working-with-types":{"tf":1.4142135623730952},"traits/chalk-overview.html#intermediate-representation-ir":{"tf":1.0},"high-level-overview.html#the-main-stages-of-compilation":{"tf":1.4142135623730952},"mir/passes.html#implementing-and-registering-a-pass":{"tf":1.0},"miri.html#interpretation":{"tf":1.0},"appendix/glossary.html#appendix-c-glossary":{"tf":1.0},"mir/index.html#mir-data-types":{"tf":1.4142135623730952},"traits/goals-and-clauses.html#coinductive-goals":{"tf":1.0},"diag.html#error-messages":{"tf":1.0},"rustdoc.html#from-crate-to-clean":{"tf":1.0}},"df":10}}},"n":{"docs":{},"df":0,"i":{"docs":{},"df":0,"s":{"docs":{},"df":0,"h":{"docs":{"rustc-driver.html#a-note-on-lifetimes":{"tf":1.4142135623730952}},"df":1}}},"a":{"docs":{},"df":0,"l":{"docs":{"tests/adding.html#adding-new-tests":{"tf":1.0},"type-inference.html#extracting-region-constraints":{"tf":1.0},"hir.html#the-hir-map":{"tf":1.0},"mir/regionck.html#extending-the-universal-regions-check":{"tf":1.0},"high-level-overview.html#the-main-stages-of-compilation":{"tf":1.0},"traits/hrtb.html#basic-matching-and-skolemization-leaks":{"tf":1.0},"rustdoc.html#dotting-is-and-crossing-ts":{"tf":1.4142135623730952},"tests/adding.html#other-header-commands":{"tf":1.4142135623730952},"traits/canonicalization.html#executing-the-query":{"tf":1.0},"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.4142135623730952},"high-level-overview.html#crate-structure":{"tf":1.0},"method-lookup.html#candidate-search":{"tf":1.0},"mir/index.html#key-mir-vocabulary":{"tf":1.0},"appendix/stupid-stats.html#appendix-a-a-tutorial-on-creating-a-drop-in-replacement-for-rustc":{"tf":1.0},"how-to-build-and-run.html#running-xpy-and-building-a-stage1-compiler":{"tf":1.0},"mir/passes.html#mir-passes":{"tf":1.4142135623730952},"appendix/stupid-stats.html#overview-of-the-compilation-process":{"tf":1.0},"appendix/glossary.html#appendix-c-glossary":{"tf":1.4142135623730952},"traits/canonicalization.html#processing-the-canonicalized-query-result":{"tf":1.0},"mir/borrowck.html#major-phases-of-the-borrow-checker":{"tf":1.0},"appendix/background.html#what-is-a-control-flow-graph":{"tf":1.0},"type-inference.html#subtyping-obligations":{"tf":1.0},"mir/regionck.html#final-example":{"tf":1.4142135623730952},"diag.html#declaring-a-lint":{"tf":1.0},"variance.html#addendum-variance-on-traits":{"tf":1.0}},"df":25}},"g":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"p":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{"appendix/glossary.html#appendix-c-glossary":{"tf":1.0}},"df":1}}}}}}}},"d":{"docs":{"name-resolution.html#scopes-and-ribs":{"tf":1.0},"method-lookup.html#candidate-assembly":{"tf":1.0},"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.4142135623730952},"compiler-debugging.html#getting-a-backtrace":{"tf":1.0},"hir.html#hir-bodies":{"tf":1.4142135623730952},"ty.html#allocating-and-working-with-types":{"tf":1.0},"traits/hrtb.html#basic-matching-and-skolemization-leaks":{"tf":1.0},"compiler-debugging.html#debugging-llvm":{"tf":1.0},"rustdoc.html#from-clean-to-crate":{"tf":1.4142135623730952},"mir/regionck.html#mir-based-region-checking-nll":{"tf":1.0},"traits/resolution.html#major-concepts":{"tf":1.4142135623730952},"incrcomp-debugging.html#dumping-the-graph":{"tf":1.0},"traits/chalk-overview.html#parsing":{"tf":1.0},"traits/canonical-queries.html#the-traditional-interactive-prolog-query":{"tf":1.4142135623730952},"appendix/stupid-stats.html#appendix-a-a-tutorial-on-creating-a-drop-in-replacement-for-rustc":{"tf":1.0},"macro-expansion.html#the-macro-parser":{"tf":1.0},"compiler-debugging.html#expensive-operations-in-logs":{"tf":1.0},"mir/regionck.html#final-example":{"tf":1.0},"compiletest.html#adding-a-new-test-file":{"tf":1.0},"traits/canonical-queries.html#a-trait-query-in-rustc":{"tf":1.0},"traits/resolution.html#selection-during-translation":{"tf":1.0},"hir.html#identifiers-in-the-hir":{"tf":1.0},"traits/lowering-rules.html#rule-names-and-cross-references":{"tf":1.0},"compiler-debugging.html#getting-logging-output":{"tf":1.7320508075688773},"mir/regionck.html#skolemization-and-outlives-constraints":{"tf":1.0},"query.html#how-the-compiler-executes-a-query":{"tf":1.0},"traits/index.html#trait-solving-new-style":{"tf":1.0},"traits/canonicalization.html#canonicalization":{"tf":1.0},"traits/resolution.html#candidate-assembly":{"tf":1.0},"traits/canonicalization.html#processing-the-canonicalized-query-result":{"tf":1.0},"incrcomp-debugging.html#tracking-down-incorrect-edges":{"tf":1.4142135623730952},"hir.html#the-hir-map":{"tf":1.4142135623730952},"method-lookup.html#candidate-search":{"tf":1.0},"about-this-guide.html#about-this-guide":{"tf":1.0}},"df":34,"_":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"a":{"docs":{},"df":0,"b":{"docs":{},"df":0,"l":{"docs":{},"df":0,"e":{"docs":{},"df":0,"_":{"docs":{},"df":0,"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"d":{"docs":{"rustdoc.html#other-tricks-up-its-sleeve":{"tf":1.0},"rustdoc.html#from-clean-to-crate":{"tf":1.0}},"df":2}}}}}}}}}}}}}},"e":{"docs":{"mir/regionck.html#another-example":{"tf":1.0},"rustdoc.html#hot-potato":{"tf":1.0},"appendix/stupid-stats.html#compilercalls":{"tf":1.0},"query.html#cycles-between-queries":{"tf":1.0},"tests/running.html#running-a-subset-of-the-test-suites":{"tf":1.0}},"df":5,"r":{"docs":{"rustdoc.html#hot-potato":{"tf":1.0},"appendix/stupid-stats.html#compilercontroller":{"tf":1.0},"high-level-overview.html#crate-structure":{"tf":1.0},"traits/caching.html#where-clauses-and-the-local-vs-global-cache":{"tf":1.0},"diag.html#error-messages":{"tf":1.0}},"df":5}}},"t":{"docs":{"traits/specialization.html#specialization":{"tf":1.0},"query.html#queries-demand-driven-compilation":{"tf":1.0}},"df":2}},"a":{"docs":{},"df":0,"m":{"docs":{},"df":0,"i":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{"traits/associated-types.html#associated-type-projection-and-normalization":{"tf":1.0},"traits/specialization.html#specialization":{"tf":1.0}},"df":2,"a":{"docs":{},"df":0,"r":{"docs":{"type-inference.html#inference-variables":{"tf":1.0},"mir/index.html#key-mir-vocabulary":{"tf":1.0},"appendix/background.html#what-is-a-control-flow-graph":{"tf":1.0},"appendix/background.html#what-is-a-free-region-or-a-free-variable-what-about-bound-region":{"tf":1.0}},"df":4}}}}}},"r":{"docs":{"traits/lowering-to-logic.html#type-checking-normal-functions":{"tf":1.4142135623730952},"traits/lowering-to-logic.html#rust-traits-and-logic":{"tf":1.0},"mir/borrowck.html#mir-borrow-check":{"tf":1.0},"traits/associated-types.html#projection-equality":{"tf":1.0},"traits/chalk-overview.html#an-overview-of-chalk":{"tf":1.0},"traits/associated-types.html#associated-type-projection-and-normalization":{"tf":1.0},"mir/regionck.html#back-to-our-example":{"tf":1.0}},"df":7},"s":{"docs":{},"df":0,"h":{"docs":{},"df":0,"i":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{"traits/lowering-to-logic.html#lowering-to-logic":{"tf":1.0},"type-inference.html#lexical-region-resolution":{"tf":1.0},"query.html#cycles-between-queries":{"tf":1.0}},"df":3}}}},"t":{"docs":{"ty.html#import-conventions":{"tf":1.0},"how-to-build-and-run.html#running-xpy-and-building-a-stage1-compiler":{"tf":1.0}},"df":2,"e":{"docs":{},"df":0,"r":{"docs":{"tests/running.html#running-an-individual-test":{"tf":1.0}},"df":1}}}},"c":{"docs":{},"df":0,"t":{"docs":{"conventions.html#copyright-notice":{"tf":1.0},"mir/index.html#key-mir-vocabulary":{"tf":1.4142135623730952},"mir/regionck.html#skolemization-and-outlives-constraints":{"tf":1.0},"traits/resolution.html#selection":{"tf":1.0},"traits/canonical-queries.html#examples":{"tf":1.0},"hir.html#the-hir-map":{"tf":1.0},"ty.html#allocating-and-working-with-types":{"tf":1.4142135623730952},"macro-expansion.html#macro-expansion":{"tf":1.0},"variance.html#variance-and-object-types":{"tf":1.0},"type-inference.html#region-constraints":{"tf":1.0},"incremental-compilation.html#the-try-mark-green-algorithm":{"tf":1.0},"mir/regionck.html#another-example":{"tf":1.0},"traits/canonical-queries.html#the-traditional-interactive-prolog-query":{"tf":1.0},"mir/regionck.html#what-is-a-universe":{"tf":1.0}},"df":14,"o":{"docs":{},"df":0,"r":{"docs":{"query.html#cycles-between-queries":{"tf":1.0},"method-lookup.html#method-lookup":{"tf":1.0}},"df":2}}}},"t":{"docs":{"miri.html#datastructures":{"tf":1.0},"const-eval.html#constant-evaluation":{"tf":1.0},"appendix/glossary.html#appendix-c-glossary":{"tf":2.23606797749979}},"df":3,"l":{"docs":{},"df":0,"t":{"docs":{},"df":0,"o":{"docs":{"appendix/glossary.html#appendix-c-glossary":{"tf":1.0}},"df":1}}},"a":{"docs":{},"df":0,"l":{"docs":{"macro-expansion.html#the-macro-parser":{"tf":1.0},"diag.html#error-messages":{"tf":1.0}},"df":2}}},"l":{"docs":{},"df":0,"s":{"docs":{"how-to-build-and-run.html#create-a-configtoml":{"tf":1.0},"compiletest.html#adding-a-new-header-command":{"tf":1.0},"incremental-compilation.html#the-query-dag":{"tf":1.0},"mir/regionck.html#what-is-a-universe":{"tf":1.0},"traits/canonical-queries.html#a-trait-query-in-rustc":{"tf":1.4142135623730952}},"df":5},"l":{"docs":{"type-inference.html#trying-equality":{"tf":1.0},"diag.html#suggestions":{"tf":1.0},"traits/associated-types.html#integration-with-unification":{"tf":1.0}},"df":3}},"v":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{"mir/borrowck.html#mir-borrow-check":{"tf":1.0}},"df":1,"i":{"docs":{},"df":0,"t":{"docs":{"compiler-debugging.html#formatting-graphviz-output-dot-files":{"tf":1.0}},"df":1}}}}},"i":{"docs":{},"df":0,"l":{"docs":{"miri.html#miri":{"tf":1.4142135623730952},"tests/running.html#running-tests":{"tf":1.0},"traits/lowering-to-logic.html#rust-traits-and-logic":{"tf":1.0},"tests/intro.html#compiletest-test-suites":{"tf":2.23606797749979},"incrcomp-debugging.html#testing-the-dependency-graph":{"tf":1.0},"traits/hrtb.html#basic-matching-and-skolemization-leaks":{"tf":1.0},"compiler-debugging.html#debugging-llvm":{"tf":1.0},"compiletest.html#implementing-the-behavior-change":{"tf":1.0},"traits/associated-types.html#integration-with-unification":{"tf":1.0},"tests/adding.html#revisions":{"tf":1.4142135623730952},"tests/adding.html#adding-new-tests":{"tf":1.0},"compiletest.html#introduction":{"tf":1.7320508075688773},"tests/adding.html#what-kind-of-test-should-i-add":{"tf":1.4142135623730952},"tests/adding.html#other-header-commands":{"tf":1.4142135623730952},"tests/adding.html#editing-and-updating-the-reference-files":{"tf":1.0},"tests/running.html#running-a-subset-of-the-test-suites":{"tf":1.0},"tests/adding.html#guide-to-the-ui-tests":{"tf":1.0},"mir/passes.html#stealing":{"tf":1.0},"type-inference.html#enforcing-equality--subtyping":{"tf":1.0}},"df":19,",":{"docs":{},"df":0,"r":{"docs":{},"df":0,"u":{"docs":{},"df":0,"n":{"docs":{"tests/running.html#running-a-subset-of-the-test-suites":{"tf":1.0}},"df":1}}}},"u":{"docs":{},"df":0,"r":{"docs":{"traits/hrtb.html#basic-matching-and-skolemization-leaks":{"tf":1.4142135623730952},"variance.html#constraints":{"tf":1.0},"compiletest.html#introduction":{"tf":1.7320508075688773},"compiler-debugging.html#debugging-llvm":{"tf":1.0},"compiletest.html#implementing-the-behavior-change":{"tf":2.8284271247461905},"type-inference.html#trying-equality":{"tf":1.0},"macro-expansion.html#the-macro-parser":{"tf":1.0},"tests/adding.html#guide-to-the-ui-tests":{"tf":1.0},"compiletest.html#adding-a-new-header-command":{"tf":2.449489742783178}},"df":9,"e":{"docs":{},"df":0,"_":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{},"df":0,"u":{"docs":{"compiletest.html#adding-a-new-header-command":{"tf":1.4142135623730952}},"df":1}}}}}}}}},"/":{"docs":{},"df":0,"d":{"docs":{},"df":0,"e":{"docs":{},"df":0,"p":{"docs":{"incrcomp-debugging.html#testing-the-dependency-graph":{"tf":1.0}},"df":1}}}}},"r":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{"variance.html#variance-of-type-and-lifetime-parameters":{"tf":1.0},"mir/regionck.html#mir-based-region-checking-nll":{"tf":1.0},"traits/canonical-queries.html#canonical-queries":{"tf":1.0},"mir/index.html#mir-data-types":{"tf":1.0},"type-inference.html#lexical-region-resolution":{"tf":1.0},"rustc-driver.html#a-note-on-lifetimes":{"tf":1.0},"appendix/stupid-stats.html#compilercalls":{"tf":1.0}},"df":7}}}}},"u":{"docs":{},"df":0,"t":{"docs":{},"df":0,"u":{"docs":{},"df":0,"r":{"docs":{"miri.html#allocations":{"tf":1.0},"traits/resolution.html#candidate-assembly":{"tf":1.0},"appendix/stupid-stats.html#appendix-a-a-tutorial-on-creating-a-drop-in-replacement-for-rustc":{"tf":1.0},"appendix/stupid-stats.html#compilercontroller":{"tf":1.0},"query.html#cycles-between-queries":{"tf":1.0},"traits/associated-types.html#associated-type-projection-and-normalization":{"tf":1.0},"miri.html#miri":{"tf":1.0},"mir/regionck.html#skolemization-and-outlives-constraints":{"tf":1.0},"appendix/stupid-stats.html#compilercalls":{"tf":1.0}},"df":9,"e":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"m":{"docs":{},"df":0,"p":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{},"df":0,"i":{"docs":{},"df":0,"b":{"docs":{},"df":0,"i":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{},"df":0,"y":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{"diag.html#edition-gated-lints":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"df":0,"t":{"docs":{},"df":0,"h":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"miri.html#interpretation":{"tf":1.0},"miri.html#miri":{"tf":1.0},"traits/lowering-to-logic.html#rust-traits-and-logic":{"tf":1.0},"appendix/glossary.html#appendix-c-glossary":{"tf":1.0},"tests/intro.html#further-reading":{"tf":1.0},"mir/regionck.html#another-example":{"tf":1.4142135623730952},"mir/index.html#key-mir-vocabulary":{"tf":1.0},"type-inference.html#extracting-region-constraints":{"tf":1.0},"query.html#queries-demand-driven-compilation":{"tf":1.7320508075688773},"variance.html#trait-variance-and-vtable-resolution":{"tf":1.0}},"df":10,"m":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{"method-lookup.html#candidate-assembly":{"tf":1.0}},"df":1}}}}}}}},"n":{"docs":{},"df":0,"c":{"docs":{"compiler-debugging.html#debugging-llvm":{"tf":1.0}},"df":1,"s":{"docs":{},"df":0,"=":{"docs":{},"df":0,"e":{"docs":{},"df":0,"x":{"docs":{},"df":0,"a":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{},"df":0,"_":{"docs":{},"df":0,"f":{"docs":{},"df":0,"u":{"docs":{},"df":0,"n":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{},"df":0,"i":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"_":{"docs":{},"df":0,"n":{"docs":{},"df":0,"a":{"docs":{},"df":0,"m":{"docs":{"compiler-debugging.html#debugging-llvm":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}},"_":{"docs":{},"df":0,"z":{"docs":{},"df":0,"n":{"docs":{},"df":0,"1":{"docs":{},"df":0,"1":{"docs":{},"df":0,"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"l":{"docs":{},"df":0,"l":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{},"df":0,"i":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"s":{"docs":{},"df":0,"3":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"r":{"docs":{},"df":0,"2":{"docs":{},"df":0,"1":{"docs":{},"df":0,"_":{"docs":{},"df":0,"$":{"docs":{},"df":0,"l":{"docs":{},"df":0,"t":{"docs":{},"df":0,"$":{"docs":{},"df":0,"i":{"docs":{},"df":0,"m":{"docs":{},"df":0,"p":{"docs":{},"df":0,"l":{"docs":{},"df":0,"$":{"docs":{},"df":0,"u":{"docs":{},"df":0,"2":{"docs":{},"df":0,"0":{"docs":{},"df":0,"$":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"r":{"docs":{},"df":0,"$":{"docs":{},"df":0,"g":{"docs":{},"df":0,"t":{"docs":{"compiler-debugging.html#debugging-llvm":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"=":{"docs":{},"df":0,"'":{"docs":{},"df":0,"_":{"docs":{},"df":0,"z":{"docs":{},"df":0,"n":{"docs":{},"df":0,"1":{"docs":{},"df":0,"1":{"docs":{},"df":0,"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"l":{"docs":{},"df":0,"l":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{},"df":0,"i":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"s":{"docs":{},"df":0,"3":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"r":{"docs":{},"df":0,"2":{"docs":{},"df":0,"1":{"docs":{},"df":0,"_":{"docs":{},"df":0,"$":{"docs":{},"df":0,"l":{"docs":{},"df":0,"t":{"docs":{},"df":0,"$":{"docs":{},"df":0,"i":{"docs":{},"df":0,"m":{"docs":{},"df":0,"p":{"docs":{},"df":0,"l":{"docs":{},"df":0,"$":{"docs":{},"df":0,"u":{"docs":{},"df":0,"2":{"docs":{},"df":0,"0":{"docs":{},"df":0,"$":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"r":{"docs":{},"df":0,"$":{"docs":{},"df":0,"g":{"docs":{},"df":0,"t":{"docs":{},"df":0,"$":{"docs":{},"df":0,"7":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"p":{"docs":{},"df":0,"l":{"docs":{},"df":0,"a":{"docs":{},"df":0,"c":{"docs":{},"df":0,"e":{"docs":{},"df":0,"1":{"docs":{},"df":0,"7":{"docs":{},"df":0,"h":{"docs":{},"df":0,"b":{"docs":{},"df":0,"e":{"docs":{},"df":0,"1":{"docs":{},"df":0,"0":{"docs":{},"df":0,"e":{"docs":{},"df":0,"a":{"docs":{},"df":0,"2":{"docs":{},"df":0,"e":{"docs":{},"df":0,"7":{"docs":{},"df":0,"c":{"docs":{},"df":0,"8":{"docs":{},"df":0,"0":{"docs":{},"df":0,"9":{"docs":{},"df":0,"b":{"docs":{},"df":0,"0":{"docs":{},"df":0,"b":{"docs":{"compiler-debugging.html#debugging-llvm":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"df":0,"i":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{"high-level-overview.html#the-main-stages-of-compilation":{"tf":1.0},"mir/index.html#mir-data-types":{"tf":1.0},"incrcomp-debugging.html#dumping-the-graph":{"tf":1.0},"traits/lowering-rules.html#trait-header":{"tf":1.0},"mir/regionck.html#skolemization-and-universes":{"tf":1.7320508075688773},"param_env.html#parameter-environment":{"tf":1.7320508075688773},"the-parser.html#the-parser":{"tf":1.0},"appendix/stupid-stats.html#overview-of-the-compilation-process":{"tf":1.4142135623730952},"mir/passes.html#mir-passes":{"tf":1.0},"diag.html#lint-groups":{"tf":1.0},"compiler-debugging.html#debugging-llvm":{"tf":1.0},"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":2.8284271247461905},"rustdoc.html#from-clean-to-crate":{"tf":2.0},"traits/associated-types.html#skolemized-associated-types":{"tf":1.0},"mir/regionck.html#mir-based-region-checking-nll":{"tf":2.0},"rustc-driver.html#a-note-on-lifetimes":{"tf":1.0},"variance.html#the-algorithm":{"tf":1.0},"miri.html#interpretation":{"tf":1.4142135623730952},"compiler-debugging.html#getting-logging-output":{"tf":1.4142135623730952},"mir/index.html#key-mir-vocabulary":{"tf":1.7320508075688773},"variance.html#variance-of-type-and-lifetime-parameters":{"tf":1.0},"how-to-build-and-run.html#running-xpy-and-building-a-stage1-compiler":{"tf":1.0},"name-resolution.html#scopes-and-ribs":{"tf":2.0},"traits/lowering-to-logic.html#type-checking-normal-functions":{"tf":2.0},"variance.html#variance-and-object-types":{"tf":1.4142135623730952},"type-checking.html#type-checking":{"tf":1.0},"traits/lowering-rules.html#lowering-function-and-constant-declarations":{"tf":1.4142135623730952},"appendix/glossary.html#appendix-c-glossary":{"tf":2.0},"traits/resolution.html#selection":{"tf":1.0},"traits/hrtb.html#basic-matching-and-skolemization-leaks":{"tf":1.0},"variance.html#trait-variance-and-vtable-resolution":{"tf":1.4142135623730952},"traits/lowering-to-logic.html#type-checking-generic-functions-beyond-horn-clauses":{"tf":2.23606797749979},"query.html#adding-a-new-kind-of-query":{"tf":1.7320508075688773},"traits/chalk-overview.html#testing":{"tf":1.0},"mir/regionck.html#representing-the-values-of-a-region-variable":{"tf":1.0},"traits/resolution.html#major-concepts":{"tf":1.7320508075688773},"query.html#how-the-compiler-executes-a-query":{"tf":2.6457513110645909},"variance.html#variance-and-associated-types":{"tf":1.0},"diag.html#edition-gated-lints":{"tf":1.0},"compiletest.html#implementing-the-behavior-change":{"tf":1.0},"mir/regionck.html#what-is-a-universe":{"tf":1.0},"type-inference.html#a-note-on-terminology":{"tf":1.0},"traits/lowering-rules.html#function-and-constant-values":{"tf":1.4142135623730952},"const-eval.html#constant-evaluation":{"tf":2.0},"traits/canonical-queries.html#examples":{"tf":1.0},"rustdoc.html#other-tricks-up-its-sleeve":{"tf":1.0},"miri.html#allocations":{"tf":1.0},"rustdoc.html#cheat-sheet":{"tf":1.4142135623730952},"type-checking.html#type-collection":{"tf":2.449489742783178},"type-inference.html#creating-an-inference-context":{"tf":1.0},"mir/visitor.html#traversal":{"tf":1.0},"high-level-overview.html#crate-structure":{"tf":1.0},"mir/passes.html#seeing-how-the-mir-changes-as-the-compiler-executes":{"tf":2.23606797749979},"mir/regionck.html#subtyping-and-skolemization":{"tf":1.0},"traits/goals-and-clauses.html#domain-goals":{"tf":1.7320508075688773},"miri.html#miri":{"tf":1.4142135623730952},"hir.html#out-of-band-storage-and-the--crate--type":{"tf":2.23606797749979},"mir/borrowck.html#major-phases-of-the-borrow-checker":{"tf":1.0},"hir.html#identifiers-in-the-hir":{"tf":1.0},"rustdoc.html#from-crate-to-clean":{"tf":1.0},"rustc-driver.html#the-rustc-driver":{"tf":1.4142135623730952}},"df":61,"s":{"docs":{},"df":0,"/":{"docs":{},"df":0,"m":{"docs":{},"df":0,"e":{"docs":{},"df":0,"t":{"docs":{},"df":0,"h":{"docs":{},"df":0,"o":{"docs":{},"df":0,"d":{"docs":{"param_env.html#parameter-environment":{"tf":1.0}},"df":1}}}}}}}},"'":{"docs":{"const-eval.html#constant-evaluation":{"tf":1.0}},"df":1},"/":{"docs":{},"df":0,"i":{"docs":{},"df":0,"m":{"docs":{},"df":0,"p":{"docs":{},"df":0,"l":{"docs":{"variance.html#variance-of-type-and-lifetime-parameters":{"tf":1.0}},"df":1}}}},"c":{"docs":{},"df":0,"l":{"docs":{},"df":0,"o":{"docs":{},"df":0,"s":{"docs":{},"df":0,"u":{"docs":{},"df":0,"r":{"docs":{"hir.html#hir-bodies":{"tf":1.0}},"df":1}}}}},"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{"traits/lowering-rules.html#lowering-function-and-constant-declarations":{"tf":1.0}},"df":1}}}}}}}}}}}},"l":{"docs":{},"df":0,"l":{"docs":{"rustdoc.html#dotting-is-and-crossing-ts":{"tf":1.7320508075688773},"traits/lowering-to-logic.html#rust-traits-and-logic":{"tf":1.0},"variance.html#the-algorithm":{"tf":1.0},"rustdoc.html#other-tricks-up-its-sleeve":{"tf":1.0},"macro-expansion.html#the-macro-parser":{"tf":1.0},"rustdoc.html#from-crate-to-clean":{"tf":1.0},"traits/lowering-module.html#unit-tests":{"tf":1.0},"traits/chalk-overview.html#testing":{"tf":1.0},"how-to-build-and-run.html#running-xpy-and-building-a-stage1-compiler":{"tf":1.4142135623730952},"traits/associated-types.html#equality-and-associated-types":{"tf":1.0},"tests/adding.html#what-kind-of-test-should-i-add":{"tf":1.0},"compiler-debugging.html#getting-logging-output":{"tf":1.0},"compiler-debugging.html#getting-a-backtrace":{"tf":1.0},"mir/regionck.html#what-is-a-universe":{"tf":1.0},"diag.html#declaring-a-lint":{"tf":1.0},"tests/running.html#running-tests":{"tf":1.0},"tests/running.html#running-a-subset-of-the-test-suites":{"tf":1.0},"how-to-build-and-run.html#create-a-configtoml":{"tf":1.0},"tests/intro.html#testing-infrastructure":{"tf":1.0},"name-resolution.html#scopes-and-ribs":{"tf":1.0},"incrcomp-debugging.html#dumping-the-graph":{"tf":1.0},"traits/resolution.html#selection-during-translation":{"tf":1.4142135623730952},"mir/regionck.html#mir-based-region-checking-nll":{"tf":1.0}},"df":23,"d":{"docs":{},"df":0,"e":{"docs":{},"df":0,"p":{"docs":{"tests/intro.html#compiletest-test-suites":{"tf":1.0},"tests/adding.html#what-kind-of-test-should-i-add":{"tf":1.0}},"df":2}}},"i":{"docs":{"compiletest.html#header-commands":{"tf":1.0},"traits/caching.html#caching-and-subtle-considerations-therewith":{"tf":1.0},"traits/associated-types.html#associated-type-projection-and-normalization":{"tf":1.0},"mir/index.html#introduction-to-mir":{"tf":1.0},"traits/canonicalization.html#executing-the-query":{"tf":1.0},"query.html#queries-demand-driven-compilation":{"tf":1.0}},"df":6}},"f":{"docs":{},"df":0,"i":{"docs":{},"df":0,"l":{"docs":{"traits/resolution.html#overview":{"tf":1.7320508075688773},"type-inference.html#enforcing-equality--subtyping":{"tf":1.4142135623730952}},"df":2}}}},"b":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{"query.html#how-the-compiler-executes-a-query":{"tf":1.4142135623730952}},"df":1,"<":{"docs":{},"df":0,"'":{"docs":{},"df":0,"t":{"docs":{},"df":0,"c":{"docs":{},"df":0,"x":{"docs":{"query.html#how-the-compiler-executes-a-query":{"tf":1.0}},"df":1}}},"c":{"docs":{},"df":0,"x":{"docs":{"query.html#how-the-compiler-executes-a-query":{"tf":1.0}},"df":1}}}}}}}},"o":{"docs":{},"df":0,"c":{"docs":{},"df":0,"u":{"docs":{"traits/lowering-to-logic.html#type-checking-normal-functions":{"tf":1.0}},"df":1,"s":{"docs":{"mir/regionck.html#what-is-a-universe":{"tf":1.0},"traits/lowering-rules.html#lowering-traits":{"tf":1.0},"high-level-overview.html#crate-structure":{"tf":1.0}},"df":3}}},"o":{"docs":{"traits/lowering-to-logic.html#rust-traits-and-logic":{"tf":1.4142135623730952},"mir/visitor.html#mir-visitor":{"tf":1.4142135623730952},"incrcomp-debugging.html#testing-the-dependency-graph":{"tf":1.4142135623730952},"tests/adding.html#normalization":{"tf":1.0},"traits/index.html#trait-solving-new-style":{"tf":1.0},"traits/lowering-to-logic.html#type-checking-generic-functions-beyond-horn-clauses":{"tf":2.0},"variance.html#constraints":{"tf":1.4142135623730952},"incrcomp-debugging.html#dumping-the-graph":{"tf":1.4142135623730952},"traits/hrtb.html#higher-ranked-trait-obligations":{"tf":1.0},"type-checking.html#type-collection":{"tf":1.4142135623730952},"mir/regionck.html#what-is-a-universe":{"tf":1.4142135623730952},"mir/passes.html#seeing-how-the-mir-changes-as-the-compiler-executes":{"tf":1.0},"macro-expansion.html#example":{"tf":2.0},"mir/regionck.html#skolemization-and-universes":{"tf":1.0},"mir/index.html#mir-data-types":{"tf":1.0},"query.html#adding-a-new-kind-of-query":{"tf":1.0},"traits/lowering-rules.html#rule-names-and-cross-references":{"tf":1.0},"traits/lowering-to-logic.html#type-checking-normal-functions":{"tf":2.0},"hir.html#out-of-band-storage-and-the--crate--type":{"tf":2.0},"traits/goals-and-clauses.html#coinductive-goals":{"tf":2.449489742783178},"traits/chalk-overview.html#intermediate-representation-ir":{"tf":1.0},"method-lookup.html#candidate-assembly":{"tf":2.449489742783178},"traits/lowering-rules.html#trait-header":{"tf":2.6457513110645909},"traits/canonical-queries.html#examples":{"tf":1.7320508075688773},"tests/adding.html#revisions":{"tf":2.23606797749979},"traits/hrtb.html#basic-matching-and-skolemization-leaks":{"tf":1.0},"incrcomp-debugging.html#tracking-down-incorrect-edges":{"tf":1.0},"traits/lowering-module.html#unit-tests":{"tf":2.23606797749979},"mir/regionck.html#subtyping-and-skolemization":{"tf":1.0},"macro-expansion.html#the-macro-parser":{"tf":1.7320508075688773},"miri.html#miri":{"tf":2.23606797749979},"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.0},"traits/canonicalization.html#executing-the-query":{"tf":1.0},"traits/resolution.html#candidate-assembly":{"tf":1.0},"conventions.html#use-todo-comments-for-things-you-dont-want-to-forget":{"tf":1.0},"traits/resolution.html#selection-during-translation":{"tf":1.7320508075688773}},"df":36,"t":{"docs":{},"df":0,"y":{"docs":{},"df":0,"p":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"h":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"k":{"docs":{"traits/lowering-to-logic.html#type-checking-generic-functions-beyond-horn-clauses":{"tf":1.0},"traits/lowering-to-logic.html#type-checking-normal-functions":{"tf":1.7320508075688773}},"df":2}}}}}}}},"n":{"docs":{},"df":0,"o":{"docs":{},"df":0,"t":{"docs":{"incremental-compilation.html#footnotes":{"tf":1.0},"rustdoc.html#from-clean-to-crate":{"tf":1.0}},"df":2}}}},".":{"docs":{},"df":0,"r":{"docs":{"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.7320508075688773},"mir/passes.html#seeing-how-the-mir-changes-as-the-compiler-executes":{"tf":2.0}},"df":2}},"(":{"docs":{},"df":0,"&":{"docs":{},"df":0,"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"l":{"docs":{},"df":0,"f":{"docs":{"traits/hrtb.html#higher-ranked-trait-obligations":{"tf":1.0},"variance.html#variance-and-associated-types":{"tf":1.0},"traits/hrtb.html#basic-matching-and-skolemization-leaks":{"tf":1.0}},"df":3}}}}},"x":{"docs":{"mir/regionck.html#skolemization-and-universes":{"tf":1.0},"type-checking.html#type-collection":{"tf":1.0}},"df":2},"t":{"docs":{"appendix/glossary.html#appendix-c-glossary":{"tf":1.0},"traits/canonical-queries.html#examples":{"tf":1.4142135623730952}},"df":2},"d":{"docs":{"mir/passes.html#stealing":{"tf":1.4142135623730952}},"df":1}},"]":{"docs":{},"df":0,"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"m":{"docs":{},"df":0,"p":{"docs":{},"df":0,"i":{"docs":{},"df":0,"l":{"docs":{"tests/adding.html#revisions":{"tf":1.0}},"df":1}}}}}}},"<":{"docs":{},"df":0,"$":{"docs":{},"df":0,"t":{"docs":{"traits/caching.html#an-example":{"tf":1.0}},"df":1},"u":{"docs":{"traits/caching.html#an-example":{"tf":1.0}},"df":1},"0":{"docs":{"traits/caching.html#an-example":{"tf":1.7320508075688773}},"df":1}},"t":{"docs":{"param_env.html#parameter-environment":{"tf":1.0},"traits/lowering-to-logic.html#type-checking-generic-functions-beyond-horn-clauses":{"tf":1.0},"appendix/glossary.html#appendix-c-glossary":{"tf":1.0},"variance.html#constraints":{"tf":1.0},"traits/associated-types.html#skolemized-associated-types":{"tf":1.0}},"df":5},"i":{"docs":{"variance.html#constraints":{"tf":1.4142135623730952},"traits/caching.html#an-example":{"tf":1.0}},"df":2,"s":{"docs":{"traits/caching.html#an-example":{"tf":1.0}},"df":1}},"x":{"docs":{"traits/hrtb.html#higher-ranked-trait-obligations":{"tf":1.4142135623730952},"traits/hrtb.html#basic-matching-and-skolemization-leaks":{"tf":1.0},"variance.html#constraints":{"tf":1.0}},"df":3,":":{"docs":{},"df":0,"a":{"docs":{},"df":0,"2":{"docs":{},"df":0,"+":{"docs":{},"df":0,"b":{"docs":{},"df":0,">":{"docs":{},"df":0,"(":{"docs":{},"df":0,"x":{"docs":{"traits/resolution.html#candidate-assembly":{"tf":1.0}},"df":1}}}}}}}}},"'":{"docs":{},"df":0,"a":{"docs":{"traits/canonicalization.html#executing-the-query":{"tf":1.0}},"df":1,">":{"docs":{},"df":0,"(":{"docs":{},"df":0,"&":{"docs":{},"df":0,"'":{"docs":{},"df":0,"a":{"docs":{"mir/regionck.html#mir-based-region-checking-nll":{"tf":1.0}},"df":1}}}}}},"?":{"docs":{},"df":0,"b":{"docs":{"traits/canonicalization.html#executing-the-query":{"tf":1.0}},"df":1},"1":{"docs":{"traits/canonicalization.html#canonicalizing-the-query":{"tf":1.4142135623730952},"traits/canonicalization.html#executing-the-query":{"tf":1.0},"traits/canonicalization.html#processing-the-canonicalized-query-result":{"tf":1.0},"traits/canonicalization.html#canonicalizing-the-query-result":{"tf":1.0}},"df":4}},"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{"traits/canonicalization.html#canonicalizing-the-query":{"tf":1.0},"traits/canonicalization.html#processing-the-canonicalized-query-result":{"tf":1.0}},"df":2}}}}},"a":{"docs":{"traits/canonical-queries.html#examples":{"tf":1.4142135623730952}},"df":1,"1":{"docs":{},"df":0,".":{"docs":{},"df":0,".":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{"traits/lowering-rules.html#lowering-where-clauses":{"tf":1.7320508075688773}},"df":1,">":{"docs":{},"df":0,">":{"docs":{},"df":0,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"m":{"docs":{"traits/lowering-rules.html#lowering-where-clauses":{"tf":1.0}},"df":1}}}}}}}}}}}}}},"&":{"docs":{},"df":0,"'":{"docs":{},"df":0,"0":{"docs":{"traits/hrtb.html#basic-matching-and-skolemization-leaks":{"tf":1.0}},"df":1},"a":{"docs":{"traits/hrtb.html#basic-matching-and-skolemization-leaks":{"tf":2.449489742783178},"traits/hrtb.html#higher-ranked-trait-obligations":{"tf":1.0}},"df":2},"$":{"docs":{},"df":0,"a":{"docs":{"traits/hrtb.html#basic-matching-and-skolemization-leaks":{"tf":1.0}},"df":1}},"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{"traits/hrtb.html#basic-matching-and-skolemization-leaks":{"tf":1.4142135623730952}},"df":1}}}}}},"b":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{"traits/chalk-overview.html#intermediate-representation-ir":{"tf":1.0}},"df":1}}}},":":{"docs":{},"df":0,":":{"docs":{},"df":0,"{":{"docs":{},"df":0,"{":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{},"df":0,"i":{"docs":{"miri.html#miri":{"tf":1.0}},"df":1}}}}}}}}}},"n":{"docs":{},"df":0,"t":{"docs":{"rustdoc.html#from-clean-to-crate":{"tf":1.0}},"df":1}},"l":{"docs":{},"df":0,"d":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"rustdoc.html#from-clean-to-crate":{"tf":1.0},"rustdoc.html#cheat-sheet":{"tf":1.0},"compiletest.html#introduction":{"tf":1.7320508075688773}},"df":3}}},"l":{"docs":{},"df":0,"o":{"docs":{},"df":0,"w":{"docs":{"macro-expansion.html#example":{"tf":1.4142135623730952},"type-inference.html#snapshots":{"tf":1.0},"conventions.html#coding-for-correctness":{"tf":1.0},"traits/canonicalization.html#canonicalizing-the-query-result":{"tf":1.0},"compiler-debugging.html#formatting-graphviz-output-dot-files":{"tf":1.0},"name-resolution.html#todo":{"tf":1.0},"traits/resolution.html#candidate-assembly":{"tf":1.4142135623730952},"high-level-overview.html#the-main-stages-of-compilation":{"tf":1.0},"variance.html#the-algorithm":{"tf":1.0},"how-to-build-and-run.html#running-xpy-and-building-a-stage1-compiler":{"tf":1.0},"type-inference.html#creating-an-inference-context":{"tf":1.0},"mir/borrowck.html#major-phases-of-the-borrow-checker":{"tf":1.0},"diag.html#declaring-a-lint":{"tf":1.0},"traits/lowering-to-logic.html#rust-traits-and-logic":{"tf":1.4142135623730952},"tests/intro.html#further-reading":{"tf":1.0},"tests/running.html#running-a-subset-of-the-test-suites":{"tf":1.0},"tests/intro.html#testing-on-emulators":{"tf":1.0},"mir/regionck.html#another-example":{"tf":1.0},"traits/canonicalization.html#canonicalizing-the-query":{"tf":1.4142135623730952},"tests/adding.html#error-annotations":{"tf":2.0},"traits/lowering-rules.html#lowering-impls":{"tf":1.0},"conventions.html#formatting-and-the-tidy-script":{"tf":1.0},"traits/goals-and-clauses.html#goals-and-clauses-meta-structure":{"tf":1.0},"tests/adding.html#tests-that-do-not-result-in-compile-errors":{"tf":1.0},"traits/canonical-queries.html#examples":{"tf":1.0},"type-inference.html#subtyping-obligations":{"tf":1.0},"traits/chalk-overview.html#lowering":{"tf":1.7320508075688773},"conventions.html#how-to-structure-your-pr":{"tf":1.0},"conventions.html#copyright-notice":{"tf":1.0},"tests/running.html#running-tests":{"tf":1.0},"traits/resolution.html#confirmation":{"tf":1.0},"how-to-build-and-run.html#create-a-configtoml":{"tf":1.0},"mir/regionck.html#subtyping-and-skolemization":{"tf":1.0},"mir/regionck.html#representing-the-values-of-a-region-variable":{"tf":1.0},"incremental-compilation.html#the-try-mark-green-algorithm":{"tf":1.0},"traits/lowering-rules.html#trait-header":{"tf":1.4142135623730952},"traits/goals-and-clauses.html#domain-goals":{"tf":1.4142135623730952},"traits/lowering-rules.html#associated-type-values":{"tf":1.0},"incrcomp-debugging.html#dumping-the-graph":{"tf":1.0},"traits/canonicalization.html#executing-the-query":{"tf":1.4142135623730952},"macro-expansion.html#the-macro-parser":{"tf":1.7320508075688773},"traits/lowering-rules.html#lowering-where-clauses":{"tf":1.0},"compiletest.html#adding-a-new-header-command":{"tf":1.4142135623730952}},"df":43}}}},"u":{"docs":{},"df":0,"r":{"docs":{"hir.html#identifiers-in-the-hir":{"tf":1.0},"appendix/background.html#what-is-a-control-flow-graph":{"tf":1.0},"type-inference.html#inference-variables":{"tf":1.0},"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.4142135623730952},"traits/canonical-queries.html#a-trait-query-in-rustc":{"tf":1.0}},"df":5,"t":{"docs":{},"df":0,"h":{"docs":{"tests/adding.html#ignoring-tests":{"tf":1.0}},"df":1}},"_":{"docs":{},"df":0,"p":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"c":{"docs":{"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.4142135623730952}},"df":1}}}}}},"n":{"docs":{},"df":0,"d":{"docs":{"about-this-guide.html#about-this-guide":{"tf":1.0},"rustdoc.html#dotting-is-and-crossing-ts":{"tf":1.0},"ty.html#beyond-types-other-kinds-of-arena-allocated-data-structures":{"tf":1.0},"tests/adding.html#other-header-commands":{"tf":1.4142135623730952},"type-checking.html#type-collection":{"tf":1.0},"high-level-overview.html#crate-structure":{"tf":1.0},"miri.html#datastructures":{"tf":1.0},"mir/index.html#introduction-to-mir":{"tf":1.0},"rustdoc.html#other-tricks-up-its-sleeve":{"tf":1.0},"incrcomp-debugging.html#testing-the-dependency-graph":{"tf":1.0},"mir/passes.html#implementing-and-registering-a-pass":{"tf":1.4142135623730952},"traits/resolution.html#selection":{"tf":1.0},"mir/visitor.html#mir-visitor":{"tf":1.4142135623730952},"traits/resolution.html#confirmation":{"tf":1.0},"compiletest.html#introduction":{"tf":1.0},"appendix/stupid-stats.html#overview-of-the-compilation-process":{"tf":1.0},"variance.html#variance-of-type-and-lifetime-parameters":{"tf":1.4142135623730952},"compiletest.html#implementing-the-behavior-change":{"tf":1.0},"tests/running.html#running-tests":{"tf":1.0},"compiletest.html#adding-a-new-header-command":{"tf":1.4142135623730952},"traits/caching.html#an-example":{"tf":1.0},"mir/borrowck.html#major-phases-of-the-borrow-checker":{"tf":1.7320508075688773},"mir/index.html#mir-data-types":{"tf":1.0},"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.0},"traits/resolution.html#candidate-assembly":{"tf":1.0}},"df":25}}},"h":{"docs":{},"df":0,"h":{"docs":{"traits/lowering-to-logic.html#type-checking-generic-functions-beyond-horn-clauses":{"tf":1.7320508075688773}},"df":1}},"r":{"docs":{},"df":0,"<":{"docs":{},"df":0,"t":{"docs":{"traits/canonicalization.html#processing-the-canonicalized-query-result":{"tf":1.0},"traits/canonicalization.html#canonicalizing-the-query-result":{"tf":1.0}},"df":2,",":{"docs":{},"df":0,"l":{"docs":{},"df":0,",":{"docs":{},"df":0,"t":{"docs":{"traits/canonicalization.html#executing-the-query":{"tf":1.0},"traits/canonicalization.html#processing-the-canonicalized-query-result":{"tf":1.0},"traits/canonicalization.html#canonicalizing-the-query-result":{"tf":1.0},"traits/canonicalization.html#canonicalizing-the-query":{"tf":1.0}},"df":4}}}}},"'":{"docs":{},"df":0,"a":{"docs":{"traits/hrtb.html#basic-matching-and-skolemization-leaks":{"tf":1.7320508075688773},"mir/regionck.html#skolemization-and-universes":{"tf":1.0},"appendix/glossary.html#appendix-c-glossary":{"tf":1.4142135623730952},"mir/regionck.html#another-example":{"tf":1.4142135623730952},"mir/regionck.html#subtyping-and-skolemization":{"tf":1.0},"type-inference.html#a-note-on-terminology":{"tf":1.0},"mir/regionck.html#final-example":{"tf":1.4142135623730952},"appendix/background.html#what-is-a-free-region-or-a-free-variable-what-about-bound-region":{"tf":1.0},"traits/hrtb.html#higher-ranked-trait-obligations":{"tf":1.7320508075688773},"traits/hrtb.html#higher-ranked-trait-bounds":{"tf":1.0}},"df":10},"b":{"docs":{"mir/regionck.html#final-example":{"tf":1.0},"mir/regionck.html#another-example":{"tf":1.0},"mir/regionck.html#what-is-a-universe":{"tf":1.7320508075688773}},"df":3},"c":{"docs":{"mir/regionck.html#what-is-a-universe":{"tf":1.0}},"df":1,"x":{"docs":{"query.html#how-the-compiler-executes-a-query":{"tf":1.0}},"df":1}}}},"g":{"docs":{"compiler-debugging.html#debugging-the-compiler":{"tf":1.0}},"df":1,"e":{"docs":{},"df":0,"t":{"docs":{"conventions.html#use-todo-comments-for-things-you-dont-want-to-forget":{"tf":1.0}},"df":1}},"o":{"docs":{},"df":0,"t":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{"variance.html#variance-of-type-and-lifetime-parameters":{"tf":1.0}},"df":1}}}}}},"m":{"docs":{"variance.html#constraints":{"tf":1.0},"rustc-driver.html#the-rustc-driver":{"tf":1.0},"hir.html#the-hir":{"tf":1.0},"mir/regionck.html#what-is-a-universe":{"tf":1.0},"appendix/glossary.html#appendix-c-glossary":{"tf":1.7320508075688773},"rustdoc.html#the-walking-tour-of-rustdoc":{"tf":1.0},"appendix/code-index.html#appendix-d-code-index":{"tf":1.0},"traits/wf.html#well-formedness-checking":{"tf":1.0},"traits/lowering-to-logic.html#type-checking-normal-functions":{"tf":1.4142135623730952},"traits/goals-and-clauses.html#goals-and-clauses-meta-structure":{"tf":1.4142135623730952},"traits/associated-types.html#associated-type-projection-and-normalization":{"tf":1.0},"variance.html#the-algorithm":{"tf":1.0},"mir/index.html#the-mir-mid-level-ir":{"tf":1.0},"name-resolution.html#scopes-and-ribs":{"tf":1.0},"traits/canonicalization.html#executing-the-query":{"tf":1.0},"method-lookup.html#method-lookup":{"tf":1.4142135623730952},"traits/goals-and-clauses.html#domain-goals":{"tf":1.4142135623730952},"traits/index.html#trait-solving-new-style":{"tf":1.4142135623730952},"type-inference.html#region-constraints":{"tf":1.0},"mir/regionck.html#skolemization-and-outlives-constraints":{"tf":1.0},"the-parser.html#the-parser":{"tf":1.0},"traits/canonicalization.html#canonicalization":{"tf":1.4142135623730952},"traits/lowering-rules.html#trait-header":{"tf":2.0},"traits/lowering-rules.html#associated-type-declarations":{"tf":1.7320508075688773},"traits/chalk-overview.html#lowering":{"tf":1.4142135623730952},"mir/index.html#key-mir-vocabulary":{"tf":1.0}},"df":26,"a":{"docs":{},"df":0,"t":{"docs":{"mir/index.html#key-mir-vocabulary":{"tf":1.4142135623730952},"tests/intro.html#other-tests":{"tf":1.0},"conventions.html#coding-for-correctness":{"tf":1.0},"traits/chalk-overview.html#parsing":{"tf":1.0},"appendix/stupid-stats.html#appendix-a-a-tutorial-on-creating-a-drop-in-replacement-for-rustc":{"tf":1.0},"conventions.html#formatting-and-the-tidy-script":{"tf":1.7320508075688773},"query.html#adding-a-new-kind-of-query":{"tf":1.0},"diag.html#suggestions":{"tf":1.0},"compiler-debugging.html#formatting-graphviz-output-dot-files":{"tf":1.0},"conventions.html#how-to-structure-your-pr":{"tf":1.0},"compiler-debugging.html#expensive-operations-in-logs":{"tf":1.0}},"df":11,"!":{"docs":{},"df":0,"(":{"docs":{},"df":0,"\"":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{"compiletest.html#implementing-the-behavior-change":{"tf":1.0}},"df":1}}}}},"f":{"docs":{},"df":0,"a":{"docs":{},"df":0,"i":{"docs":{},"df":0,"l":{"docs":{},"df":0,"u":{"docs":{},"df":0,"r":{"docs":{"compiletest.html#implementing-the-behavior-change":{"tf":1.0}},"df":1}}}}}},"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"m":{"docs":{},"df":0,"p":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{"query.html#adding-a-new-kind-of-query":{"tf":1.0}},"df":1}}}}}},"q":{"docs":{},"df":0,"u":{"docs":{},"df":0,"x":{"docs":{"diag.html#suggestions":{"tf":1.0},"diag.html#error-messages":{"tf":1.0}},"df":2}}}}}}}},"e":{"docs":{},"df":0,"r":{"docs":{"rustdoc.html#from-crate-to-clean":{"tf":1.0},"appendix/stupid-stats.html#the-driver-customisation-apis":{"tf":1.0},"rustdoc.html#other-tricks-up-its-sleeve":{"tf":1.0}},"df":3},"d":{"docs":{"traits/goals-and-clauses.html#domain-goals":{"tf":1.0},"traits/wf.html#well-formedness-checking":{"tf":1.0},"traits/chalk-overview.html#well-formedness-checks":{"tf":1.4142135623730952},"variance.html#constraints":{"tf":1.0}},"df":4}},"u":{"docs":{},"df":0,"l":{"docs":{"query.html#how-the-compiler-executes-a-query":{"tf":1.0},"traits/goals-and-clauses.html#domain-goals":{"tf":1.0},"traits/bibliography.html#bibliography":{"tf":1.4142135623730952}},"df":3,"a":{"docs":{"traits/goals-and-clauses.html#goals-and-clauses-meta-structure":{"tf":1.0},"traits/lowering-to-logic.html#type-checking-generic-functions-beyond-horn-clauses":{"tf":1.0},"traits/bibliography.html#bibliography":{"tf":1.0}},"df":3}}}},"k":{"docs":{"appendix/stupid-stats.html#appendix-a-a-tutorial-on-creating-a-drop-in-replacement-for-rustc":{"tf":1.0}},"df":1},"t":{"docs":{},"df":0,"h":{"docs":{"traits/canonical-queries.html#examples":{"tf":1.0},"conventions.html#how-to-structure-your-pr":{"tf":1.0},"appendix/stupid-stats.html#overview-of-the-compilation-process":{"tf":1.0},"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.0},"tests/intro.html#compiletest-test-suites":{"tf":1.0},"tests/adding.html#guide-to-the-ui-tests":{"tf":1.0},"mir/visitor.html#traversal":{"tf":1.0},"high-level-overview.html#the-main-stages-of-compilation":{"tf":1.4142135623730952},"type-inference.html#enforcing-equality--subtyping":{"tf":1.0},"query.html#adding-a-new-kind-of-query":{"tf":1.0}},"df":10}},"c":{"docs":{"compiler-debugging.html#getting-logging-output":{"tf":1.0},"appendix/glossary.html#appendix-c-glossary":{"tf":1.0},"tests/running.html#running-tests":{"tf":1.0},"traits/canonical-queries.html#examples":{"tf":1.0},"tests/adding.html#other-header-commands":{"tf":1.0},"type-inference.html#enforcing-equality--subtyping":{"tf":1.4142135623730952},"mir/passes.html#stealing":{"tf":2.0},"mir/regionck.html#skolemization-and-outlives-constraints":{"tf":1.0},"type-inference.html#subtyping-obligations":{"tf":1.0},"mir/regionck.html#another-example":{"tf":1.0}},"df":10},"e":{"docs":{},"df":0,"i":{"docs":{},"df":0,"g":{"docs":{},"df":0,"n":{"docs":{"mir/passes.html#mir-passes":{"tf":1.0},"rustdoc.html#from-soup-to-nuts":{"tf":1.0}},"df":2}}}},"w":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"d":{"docs":{"tests/adding.html#normalization":{"tf":1.0}},"df":1}}}},"a":{"docs":{},"df":0,"l":{"docs":{"mir/regionck.html#what-is-a-universe":{"tf":1.0},"traits/chalk-overview.html#lowering":{"tf":1.0},"traits/lowering-to-logic.html#type-checking-generic-functions-beyond-horn-clauses":{"tf":1.4142135623730952}},"df":3,"l":{"docs":{},"df":0,"<":{"docs":{},"df":0,"k":{"docs":{"traits/goals-and-clauses.html#goals-and-clauses-meta-structure":{"tf":1.4142135623730952}},"df":1},"i":{"docs":{"mir/regionck.html#what-is-a-universe":{"tf":1.0}},"df":1},"p":{"docs":{},"df":0,"n":{"docs":{},"df":0,"+":{"docs":{},"df":0,"1":{"docs":{},"df":0,".":{"docs":{},"df":0,".":{"docs":{},"df":0,"p":{"docs":{},"df":0,"m":{"docs":{"traits/lowering-rules.html#associated-type-values":{"tf":1.0}},"df":1}}}}}}},"0":{"docs":{},"df":0,".":{"docs":{},"df":0,".":{"docs":{},"df":0,"p":{"docs":{},"df":0,"n":{"docs":{"traits/lowering-rules.html#lowering-impls":{"tf":1.0}},"df":1},"m":{"docs":{"traits/lowering-rules.html#associated-type-values":{"tf":1.0}},"df":1}}}}}},"z":{"docs":{"mir/regionck.html#what-is-a-universe":{"tf":1.0}},"df":1},"t":{"docs":{"traits/associated-types.html#associated-type-projection-and-normalization":{"tf":1.0},"traits/lowering-to-logic.html#type-checking-generic-functions-beyond-horn-clauses":{"tf":1.0},"traits/chalk-overview.html#lowering":{"tf":2.23606797749979},"traits/associated-types.html#projection-equality":{"tf":1.4142135623730952}},"df":4,"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{"traits/chalk-overview.html#lowering":{"tf":1.0}},"df":1}}}}},"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"l":{"docs":{},"df":0,"f":{"docs":{"traits/lowering-rules.html#trait-header":{"tf":1.7320508075688773},"traits/lowering-rules.html#associated-type-declarations":{"tf":2.449489742783178}},"df":2}}}}}}}}}},"e":{"docs":{},"df":0,"e":{"docs":{},"df":0,"l":{"docs":{"mir/index.html#key-mir-vocabulary":{"tf":1.0}},"df":1},"d":{"docs":{},"df":0,"b":{"docs":{},"df":0,"a":{"docs":{},"df":0,"c":{"docs":{},"df":0,"k":{"docs":{"traits/resolution.html#selection":{"tf":1.0}},"df":1}}}}}},"w":{"docs":{"rustdoc.html#from-crate-to-clean":{"tf":1.0},"type-checking.html#type-checking":{"tf":1.0},"compiler-debugging.html#logging-etiquette":{"tf":1.0},"diag.html#suggestions":{"tf":1.0},"appendix/glossary.html#appendix-c-glossary":{"tf":1.4142135623730952},"how-to-build-and-run.html#other-xpy-commands":{"tf":1.0},"how-to-build-and-run.html#running-xpy-and-building-a-stage1-compiler":{"tf":1.0},"compiler-debugging.html#debugging-the-compiler":{"tf":1.0},"traits/lowering-rules.html#trait-header":{"tf":1.0},"traits/goals-and-clauses.html#goals-and-clauses":{"tf":1.0},"traits/hrtb.html#basic-matching-and-skolemization-leaks":{"tf":1.0},"conventions.html#coding-for-correctness":{"tf":1.0},"rustdoc.html#hot-potato":{"tf":1.0},"traits/goals-and-clauses.html#domain-goals":{"tf":1.0},"mir/index.html#mir-data-types":{"tf":1.0},"tests/intro.html#other-tests":{"tf":1.0},"traits/lowering-to-logic.html#rust-traits-and-logic":{"tf":1.0},"traits/index.html#trait-solving-new-style":{"tf":1.0},"ty.html#beyond-types-other-kinds-of-arena-allocated-data-structures":{"tf":1.0}},"df":19,"e":{"docs":{},"df":0,"r":{"docs":{"type-inference.html#type-inference":{"tf":1.0}},"df":1}}},"a":{"docs":{},"df":0,"t":{"docs":{},"df":0,"u":{"docs":{},"df":0,"r":{"docs":{"rustdoc.html#from-clean-to-crate":{"tf":1.0},"traits/lowering-module.html#unit-tests":{"tf":1.0},"rustdoc.html#dotting-is-and-crossing-ts":{"tf":1.0},"tests/adding.html#naming-your-test":{"tf":1.0},"how-to-build-and-run.html#running-xpy-and-building-a-stage1-compiler":{"tf":1.0},"miri.html#miri":{"tf":1.0},"tests/adding.html#other-header-commands":{"tf":2.0},"compiler-debugging.html#formatting-graphviz-output-dot-files":{"tf":1.0}},"df":8,"e":{"docs":{},"df":0,"(":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"m":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{},"df":0,"i":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"_":{"docs":{},"df":0,"t":{"docs":{},"df":0,"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{"compiletest.html#adding-a-new-header-command":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}},"x":{"docs":{"tests/adding.html#other-header-commands":{"tf":1.0}},"df":1},"n":{"docs":{},"df":0,"l":{"docs":{"mir/borrowck.html#major-phases-of-the-borrow-checker":{"tf":1.0}},"df":1}},"r":{"docs":{},"df":0,"u":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"c":{"docs":{},"df":0,"_":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{},"df":0,"t":{"docs":{},"df":0,"r":{"docs":{"traits/lowering-module.html#unit-tests":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}},"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{"high-level-overview.html#the-main-stages-of-compilation":{"tf":1.0},"appendix/glossary.html#appendix-c-glossary":{"tf":1.0}},"df":2}},"m":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"v":{"docs":{"traits/lowering-rules.html#trait-header":{"tf":1.4142135623730952},"traits/implied-bounds.html#implied-bounds":{"tf":1.0}},"df":2,"(":{"docs":{},"df":0,"<":{"docs":{},"df":0,"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"l":{"docs":{},"df":0,"f":{"docs":{"traits/lowering-rules.html#associated-type-declarations":{"tf":1.0},"traits/goals-and-clauses.html#domain-goals":{"tf":1.0}},"df":2}}}}},"p":{"docs":{},"df":0,"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"j":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{"traits/lowering-rules.html#transforming-the-lowered-where-clauses":{"tf":1.0},"traits/goals-and-clauses.html#domain-goals":{"tf":1.4142135623730952}},"df":2}}}}}}},"w":{"docs":{},"df":0,"c":{"docs":{"traits/lowering-rules.html#trait-header":{"tf":1.0},"traits/lowering-rules.html#transforming-the-lowered-where-clauses":{"tf":1.0}},"df":2,"1":{"docs":{"traits/lowering-rules.html#associated-type-declarations":{"tf":1.0}},"df":1}}},"t":{"docs":{"traits/lowering-rules.html#trait-header":{"tf":1.4142135623730952},"traits/goals-and-clauses.html#domain-goals":{"tf":1.4142135623730952}},"df":2,"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"f":{"docs":{"traits/goals-and-clauses.html#domain-goals":{"tf":1.4142135623730952},"traits/lowering-rules.html#transforming-the-lowered-where-clauses":{"tf":1.0}},"df":2}}}}}}}},"(":{"docs":{},"df":0,"t":{"docs":{},"df":0,"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{},"df":0,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"a":{"docs":{},"df":0,"s":{"docs":{},"df":0,"s":{"docs":{},"df":0,"o":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{},"df":0,"y":{"docs":{},"df":0,"p":{"docs":{},"df":0,"e":{"docs":{},"df":0,")":{"docs":{},"df":0,"<":{"docs":{},"df":0,"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"l":{"docs":{},"df":0,"f":{"docs":{"traits/lowering-rules.html#associated-type-declarations":{"tf":1.4142135623730952}},"df":1}}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"l":{"docs":{},"df":0,"f":{"docs":{"traits/goals-and-clauses.html#domain-goals":{"tf":1.0},"traits/lowering-rules.html#associated-type-declarations":{"tf":1.4142135623730952},"traits/lowering-rules.html#trait-header":{"tf":1.4142135623730952}},"df":3}}}},"x":{"docs":{"traits/goals-and-clauses.html#domain-goals":{"tf":1.0}},"df":1}}}}}}},"a":{"docs":{},"df":0,"m":{"docs":{},"df":0,"e":{"docs":{"appendix/stupid-stats.html#appendix-a-a-tutorial-on-creating-a-drop-in-replacement-for-rustc":{"tf":1.0},"miri.html#interpretation":{"tf":2.6457513110645909}},"df":2,"w":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"k":{"docs":{"tests/intro.html#the-compiler-testing-framework":{"tf":1.4142135623730952},"compiletest.html#introduction":{"tf":1.0}},"df":2}}}}}}},"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"h":{"docs":{"traits/hrtb.html#basic-matching-and-skolemization-leaks":{"tf":1.0},"traits/canonicalization.html#executing-the-query":{"tf":2.0},"traits/canonicalization.html#processing-the-canonicalized-query-result":{"tf":1.4142135623730952},"traits/canonicalization.html#canonicalizing-the-query-result":{"tf":1.0},"mir/borrowck.html#major-phases-of-the-borrow-checker":{"tf":1.0},"mir/regionck.html#mir-based-region-checking-nll":{"tf":1.0},"type-inference.html#creating-an-inference-context":{"tf":1.4142135623730952}},"df":7}},"e":{"docs":{"appendix/glossary.html#appendix-c-glossary":{"tf":1.4142135623730952},"mir/regionck.html#what-is-a-universe":{"tf":1.0},"type-inference.html#a-note-on-terminology":{"tf":1.0},"traits/canonicalization.html#canonicalizing-the-query":{"tf":1.0},"appendix/background.html#what-is-a-free-region-or-a-free-variable-what-about-bound-region":{"tf":3.0},"traits/canonicalization.html#canonicalizing-the-query-result":{"tf":1.4142135623730952},"mir/regionck.html#mir-based-region-checking-nll":{"tf":1.4142135623730952}},"df":7,"d":{"docs":{"ty.html#the-tcx-and-how-it-uses-lifetimes":{"tf":1.4142135623730952}},"df":1},"b":{"docs":{},"df":0,"s":{"docs":{},"df":0,"d":{"docs":{"tests/adding.html#ignoring-tests":{"tf":1.0}},"df":1}}}},"q":{"docs":{},"df":0,"u":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{"about-this-guide.html#about-this-guide":{"tf":1.0},"incrcomp-debugging.html#dumping-the-graph":{"tf":1.0}},"df":2}}}}}},"i":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{"hir.html#the-hir":{"tf":1.0},"appendix/code-index.html#appendix-d-code-index":{"tf":1.0},"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.0}},"df":3}}}}}}},"n":{"docs":{"incrcomp-debugging.html#dumping-the-graph":{"tf":1.0},"tests/adding.html#revisions":{"tf":1.0},"query.html#adding-a-new-kind-of-query":{"tf":1.7320508075688773},"type-checking.html#type-collection":{"tf":1.0},"mir/passes.html#seeing-how-the-mir-changes-as-the-compiler-executes":{"tf":1.0},"compiletest.html#implementing-the-behavior-change":{"tf":1.0},"macro-expansion.html#the-macro-parser":{"tf":1.0},"incrcomp-debugging.html#testing-the-dependency-graph":{"tf":1.7320508075688773},"traits/lowering-module.html#unit-tests":{"tf":1.0},"traits/resolution.html#candidate-assembly":{"tf":2.6457513110645909},"traits/associated-types.html#skolemized-associated-types":{"tf":1.0},"mir/index.html#key-mir-vocabulary":{"tf":1.4142135623730952},"name-resolution.html#scopes-and-ribs":{"tf":1.4142135623730952},"mir/regionck.html#subtyping-and-skolemization":{"tf":1.0},"conventions.html#use-todo-comments-for-things-you-dont-want-to-forget":{"tf":1.0},"mir/visitor.html#mir-visitor":{"tf":1.0},"mir/regionck.html#extending-the-universal-regions-check":{"tf":1.0},"hir.html#hir-bodies":{"tf":1.0},"variance.html#trait-variance-and-vtable-resolution":{"tf":1.0},"mir/regionck.html#final-example":{"tf":1.4142135623730952},"query.html#how-the-compiler-executes-a-query":{"tf":2.0},"rustdoc.html#from-crate-to-clean":{"tf":1.0},"compiletest.html#adding-a-new-header-command":{"tf":1.4142135623730952},"mir/regionck.html#what-is-a-universe":{"tf":1.7320508075688773},"traits/resolution.html#confirmation":{"tf":1.0},"tests/adding.html#header-commands-configuring-rustc":{"tf":1.0},"hir.html#out-of-band-storage-and-the--crate--type":{"tf":1.0},"traits/lowering-to-logic.html#type-checking-normal-functions":{"tf":1.4142135623730952},"mir/regionck.html#mir-based-region-checking-nll":{"tf":1.0},"traits/resolution.html#major-concepts":{"tf":1.4142135623730952},"traits/hrtb.html#higher-ranked-trait-obligations":{"tf":1.4142135623730952},"param_env.html#parameter-environment":{"tf":1.0},"traits/lowering-to-logic.html#type-checking-generic-functions-beyond-horn-clauses":{"tf":1.4142135623730952},"compiler-debugging.html#expensive-operations-in-logs":{"tf":1.0},"traits/goals-and-clauses.html#domain-goals":{"tf":1.0},"mir/regionck.html#skolemization-and-universes":{"tf":1.7320508075688773},"miri.html#interpretation":{"tf":1.0},"tests/adding.html#normalization":{"tf":2.6457513110645909},"traits/hrtb.html#basic-matching-and-skolemization-leaks":{"tf":1.4142135623730952},"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":3.0},"appendix/glossary.html#appendix-c-glossary":{"tf":1.0},"traits/canonical-queries.html#examples":{"tf":2.0},"incremental-compilation.html#the-query-dag":{"tf":1.0},"compiler-debugging.html#getting-a-backtrace-for-errors":{"tf":1.0},"ty.html#allocating-and-working-with-types":{"tf":1.0},"type-inference.html#type-inference":{"tf":1.0},"ty.html#the-tcx-and-how-it-uses-lifetimes":{"tf":1.4142135623730952},"diag.html#declaring-a-lint":{"tf":1.4142135623730952},"variance.html#variance-and-associated-types":{"tf":1.0},"mir/regionck.html#another-example":{"tf":1.0},"variance.html#variance-and-object-types":{"tf":1.0}},"df":51,"(":{"docs":{},"df":0,"&":{"docs":{},"df":0,"'":{"docs":{},"df":0,"a":{"docs":{"appendix/background.html#what-is-a-free-region-or-a-free-variable-what-about-bound-region":{"tf":1.0},"mir/regionck.html#final-example":{"tf":1.4142135623730952},"mir/regionck.html#skolemization-and-universes":{"tf":1.0},"mir/regionck.html#another-example":{"tf":1.4142135623730952},"type-inference.html#a-note-on-terminology":{"tf":1.0},"appendix/glossary.html#appendix-c-glossary":{"tf":1.0},"mir/regionck.html#subtyping-and-skolemization":{"tf":1.0}},"df":7},"!":{"docs":{},"df":0,"1":{"docs":{"mir/regionck.html#another-example":{"tf":1.4142135623730952},"mir/regionck.html#final-example":{"tf":1.4142135623730952},"mir/regionck.html#subtyping-and-skolemization":{"tf":1.0},"mir/regionck.html#back-to-our-example":{"tf":1.0}},"df":4}},"b":{"docs":{"mir/regionck.html#another-example":{"tf":1.0},"mir/regionck.html#what-is-a-universe":{"tf":1.7320508075688773},"mir/regionck.html#final-example":{"tf":1.0}},"df":3},"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{},"df":0,"i":{"docs":{},"df":0,"c":{"docs":{"mir/regionck.html#subtyping-and-skolemization":{"tf":1.4142135623730952},"mir/regionck.html#back-to-our-example":{"tf":1.0}},"df":2}}}}}},"?":{"docs":{},"df":0,"3":{"docs":{"mir/regionck.html#another-example":{"tf":1.0},"mir/regionck.html#final-example":{"tf":1.0}},"df":2}}}},"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"l":{"docs":{},"df":0,"f":{"docs":{"variance.html#trait-variance-and-vtable-resolution":{"tf":1.0}},"df":1}}}},"t":{"docs":{},"df":0,"y":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{},"df":0,"x":{"docs":{},"df":0,"t":{"docs":{},"df":0,"<":{"docs":{},"df":0,"'":{"docs":{},"df":0,"c":{"docs":{},"df":0,"x":{"docs":{"query.html#how-the-compiler-executes-a-query":{"tf":1.0}},"df":1}}}}}}}}}}}},"(":{"docs":{},"df":0,"&":{"docs":{},"df":0,"x":{"docs":{"mir/regionck.html#skolemization-and-universes":{"tf":1.0}},"df":1}}}},"4":{"docs":{"variance.html#the-algorithm":{"tf":1.4142135623730952},"conventions.html#tabs-vs-spaces":{"tf":1.0},"miri.html#miri":{"tf":1.0},"variance.html#variance-of-type-and-lifetime-parameters":{"tf":1.0},"appendix/stupid-stats.html#overview-of-the-compilation-process":{"tf":1.0},"name-resolution.html#scopes-and-ribs":{"tf":1.7320508075688773},"compiler-debugging.html#getting-a-backtrace":{"tf":1.0}},"df":7,".":{"docs":{},"df":0,"0":{"docs":{"how-to-build-and-run.html#creating-a-rustup-toolchain":{"tf":1.0}},"df":1}},"2":{"docs":{"miri.html#miri":{"tf":1.4142135623730952}},"df":1,"u":{"docs":{},"df":0,"s":{"docs":{},"df":0,"i":{"docs":{},"df":0,"z":{"docs":{"miri.html#miri":{"tf":1.0}},"df":1}}}}},"8":{"docs":{},"df":0,"8":{"docs":{},"df":0,",":{"docs":{},"df":0,"6":{"docs":{"compiletest.html#adding-a-new-header-command":{"tf":1.0}},"df":1}}}},"0":{"docs":{},"df":0,"9":{"docs":{},"df":0,"6":{"docs":{"miri.html#miri":{"tf":1.0}},"df":1}}},"9":{"docs":{},"df":0,"9":{"docs":{},"df":0,",":{"docs":{},"df":0,"7":{"docs":{"compiletest.html#implementing-the-behavior-change":{"tf":1.0}},"df":1}}},"4":{"docs":{},"df":0,",":{"docs":{},"df":0,"1":{"docs":{},"df":0,"3":{"docs":{"compiletest.html#adding-a-new-header-command":{"tf":1.0}},"df":1}}}}}},"g":{"docs":{"tests/adding.html#other-header-commands":{"tf":1.0}},"df":1,"i":{"docs":{},"df":0,"v":{"docs":{},"df":0,"e":{"docs":{"traits/lowering-rules.html#lowering-rules":{"tf":1.0},"tests/adding.html#header-commands-configuring-rustc":{"tf":1.0},"high-level-overview.html#crate-structure":{"tf":1.0},"query.html#cycles-between-queries":{"tf":1.0},"hir.html#out-of-band-storage-and-the--crate--type":{"tf":1.0},"traits/canonical-queries.html#the-traditional-interactive-prolog-query":{"tf":2.0},"how-to-build-and-run.html#create-a-configtoml":{"tf":1.0},"traits/lowering-to-logic.html#type-checking-normal-functions":{"tf":1.0},"rustc-driver.html#the-rustc-driver":{"tf":1.0},"mir/regionck.html#representing-the-values-of-a-region-variable":{"tf":1.0},"compiler-debugging.html#getting-a-backtrace-for-errors":{"tf":1.0},"query.html#adding-a-new-kind-of-query":{"tf":1.0},"traits/associated-types.html#integration-with-unification":{"tf":1.4142135623730952},"mir/passes.html#mir-passes":{"tf":1.0},"traits/lowering-to-logic.html#rust-traits-and-logic":{"tf":1.0},"appendix/glossary.html#appendix-c-glossary":{"tf":1.4142135623730952},"traits/resolution.html#selection":{"tf":1.0},"appendix/code-index.html#appendix-d-code-index":{"tf":1.0},"tests/adding.html#naming-your-test":{"tf":1.0},"traits/bibliography.html#bibliography":{"tf":1.0},"traits/goals-and-clauses.html#goals-and-clauses-meta-structure":{"tf":1.0},"mir/regionck.html#universes-and-skolemized-region-elements":{"tf":1.0},"mir/index.html#key-mir-vocabulary":{"tf":1.0},"traits/canonicalization.html#canonicalizing-the-query":{"tf":1.4142135623730952},"tests/intro.html#compiletest-test-suites":{"tf":1.0},"traits/canonical-queries.html#examples":{"tf":1.0},"tests/intro.html#the-compiler-testing-framework":{"tf":1.0},"traits/lowering-rules.html#notation":{"tf":1.0},"traits/canonical-queries.html#a-trait-query-in-rustc":{"tf":1.0},"traits/index.html#trait-solving-new-style":{"tf":1.0},"appendix/background.html#appendix-b-background-topics":{"tf":1.0},"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.4142135623730952},"mir/regionck.html#what-is-a-universe":{"tf":1.4142135623730952},"mir/visitor.html#mir-visitor":{"tf":1.4142135623730952},"appendix/stupid-stats.html#compilercalls":{"tf":1.0},"about-this-guide.html#about-this-guide":{"tf":1.0},"traits/canonicalization.html#processing-the-canonicalized-query-result":{"tf":1.0}},"df":37,"n":{"docs":{"traits/goals-and-clauses.html#domain-goals":{"tf":2.8284271247461905},"query.html#queries-demand-driven-compilation":{"tf":1.0},"traits/lowering-rules.html#rule-names-and-cross-references":{"tf":1.0},"variance.html#trait-variance-and-vtable-resolution":{"tf":1.7320508075688773},"rustdoc.html#hot-potato":{"tf":1.0},"rustdoc.html#dotting-is-and-crossing-ts":{"tf":1.0},"macro-expansion.html#the-macro-parser":{"tf":1.0},"mir/regionck.html#mir-based-region-checking-nll":{"tf":1.0},"traits/lowering-rules.html#associated-type-declarations":{"tf":1.0},"rustdoc.html#cheat-sheet":{"tf":1.0},"traits/lowering-module.html#the--program_clauses_for--query":{"tf":1.0},"traits/lowering-rules.html#notation":{"tf":1.0},"traits/lowering-rules.html#lowering-impls":{"tf":1.0},"traits/resolution.html#candidate-assembly":{"tf":1.0},"incrcomp-debugging.html#dumping-the-graph":{"tf":1.0},"incremental-compilation.html#the-try-mark-green-algorithm":{"tf":1.0},"hir.html#out-of-band-storage-and-the--crate--type":{"tf":1.0},"diag.html#error-messages":{"tf":1.4142135623730952},"hir.html#hir-bodies":{"tf":1.0},"traits/goals-and-clauses.html#coinductive-goals":{"tf":1.0},"traits/canonical-queries.html#the-traditional-interactive-prolog-query":{"tf":1.0},"traits/lowering-rules.html#associated-type-values":{"tf":1.0},"appendix/glossary.html#appendix-c-glossary":{"tf":1.4142135623730952},"appendix/background.html#what-is-a-free-region-or-a-free-variable-what-about-bound-region":{"tf":1.0},"traits/specialization.html#specialization":{"tf":1.7320508075688773},"query.html#how-the-compiler-executes-a-query":{"tf":1.0},"traits/lowering-rules.html#lowering-traits":{"tf":1.0},"traits/associated-types.html#projection-equality":{"tf":1.0},"traits/canonical-queries.html#a-trait-query-in-rustc":{"tf":1.0},"traits/associated-types.html#associated-type-projection-and-normalization":{"tf":1.0},"mir/passes.html#mir-passes":{"tf":1.0},"mir/regionck.html#skolemization-and-universes":{"tf":1.0},"compiletest.html#adding-a-new-header-command":{"tf":1.0}},"df":33}}},"t":{"docs":{"conventions.html#how-to-structure-your-pr":{"tf":1.0}},"df":1,"h":{"docs":{},"df":0,"u":{"docs":{},"df":0,"b":{"docs":{"appendix/stupid-stats.html#what-next":{"tf":1.0},"appendix/stupid-stats.html#appendix-a-a-tutorial-on-creating-a-drop-in-replacement-for-rustc":{"tf":1.0},"compiler-debugging.html#debugging-the-compiler":{"tf":1.0},"about-this-guide.html#about-this-guide":{"tf":1.0},"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.0},"tests/intro.html#testing-infrastructure":{"tf":1.0}},"df":6}}}},"d":{"docs":{"miri.html#miri":{"tf":1.0}},"df":1}},"e":{"docs":{},"df":0,"t":{"docs":{"compiler-debugging.html#getting-a-backtrace":{"tf":1.0},"compiler-debugging.html#getting-a-backtrace-for-errors":{"tf":1.0},"high-level-overview.html#crate-structure":{"tf":1.0},"rustdoc.html#from-crate-to-clean":{"tf":1.0},"traits/resolution.html#candidate-assembly":{"tf":1.0},"traits/index.html#trait-solving-new-style":{"tf":1.0},"mir/passes.html#implementing-and-registering-a-pass":{"tf":1.0},"compiler-debugging.html#getting-logging-output":{"tf":1.0},"miri.html#allocations":{"tf":1.0},"tests/intro.html#the-compiler-testing-framework":{"tf":1.0},"traits/hrtb.html#basic-matching-and-skolemization-leaks":{"tf":1.0}},"df":11,"_":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{},"df":0,"(":{"docs":{},"df":0,"&":{"docs":{},"df":0,"b":{"docs":{},"df":0,"o":{"docs":{},"df":0,"x":{"docs":{},"df":0,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"n":{"docs":{},"df":0,"e":{"docs":{},"df":0,"w":{"docs":{},"df":0,"(":{"docs":{},"df":0,"1":{"docs":{},"df":0,"_":{"docs":{},"df":0,"u":{"docs":{},"df":0,"1":{"docs":{},"df":0,"6":{"docs":{"traits/resolution.html#candidate-assembly":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}},"l":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{},"df":0,"s":{"docs":{},"df":0,"(":{"docs":{},"df":0,"&":{"docs":{},"df":0,"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"l":{"docs":{},"df":0,"f":{"docs":{"diag.html#declaring-a-lint":{"tf":1.0}},"df":1}}}}}}}}}}}},"o":{"docs":{},"df":0,"p":{"docs":{},"df":0,"t":{"docs":{},"df":0,"s":{"docs":{},"df":0,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"m":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{},"df":0,"c":{"docs":{},"df":0,"h":{"docs":{"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.7320508075688773}},"df":1}}}}}}}}}}},"(":{"docs":{},"df":0,"&":{"docs":{},"df":0,"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"l":{"docs":{},"df":0,"f":{"docs":{"traits/resolution.html#candidate-assembly":{"tf":1.7320508075688773}},"df":1}}}}}}},"n":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"type-inference.html#inference-variables":{"tf":1.0},"hir.html#the-hir":{"tf":1.0},"rustdoc.html#cheat-sheet":{"tf":1.4142135623730952},"traits/resolution.html#major-concepts":{"tf":1.7320508075688773},"high-level-overview.html#the-main-stages-of-compilation":{"tf":1.4142135623730952},"traits/canonicalization.html#canonicalizing-the-query":{"tf":1.0},"mir/regionck.html#what-is-a-universe":{"tf":1.4142135623730952},"rustc-driver.html#the-rustc-driver":{"tf":1.0},"traits/goals-and-clauses.html#domain-goals":{"tf":1.0},"param_env.html#parameter-environment":{"tf":2.0},"traits/lowering-rules.html#associated-type-declarations":{"tf":1.0},"query.html#how-the-compiler-executes-a-query":{"tf":1.0},"traits/chalk-overview.html#intermediate-representation-ir":{"tf":1.0},"traits/lowering-to-logic.html#rust-traits-and-logic":{"tf":1.4142135623730952},"ty.html#beyond-types-other-kinds-of-arena-allocated-data-structures":{"tf":1.0},"traits/resolution.html#candidate-assembly":{"tf":1.0},"macro-expansion.html#the-macro-parser":{"tf":1.0},"trans.html#generating-llvm-ir":{"tf":1.0},"traits/resolution.html#selection-during-translation":{"tf":1.0},"name-resolution.html#name-resolution":{"tf":1.0},"rustdoc.html#from-clean-to-crate":{"tf":1.0},"variance.html#variance-of-type-and-lifetime-parameters":{"tf":1.0},"tests/adding.html#other-header-commands":{"tf":1.4142135623730952},"tests/adding.html#adding-new-tests":{"tf":1.7320508075688773},"rustdoc.html#other-tricks-up-its-sleeve":{"tf":1.0},"traits/hrtb.html#higher-ranked-trait-obligations":{"tf":1.0},"traits/canonical-queries.html#canonical-queries":{"tf":1.0},"query.html#cycles-between-queries":{"tf":1.4142135623730952},"traits/goals-and-clauses.html#coinductive-goals":{"tf":1.0},"tests/intro.html#compiletest-test-suites":{"tf":2.0},"query.html#queries-demand-driven-compilation":{"tf":1.0},"appendix/stupid-stats.html#overview-of-the-compilation-process":{"tf":1.4142135623730952},"traits/chalk-overview.html#lowering":{"tf":1.0},"query.html#adding-a-new-kind-of-query":{"tf":2.0},"traits/caching.html#where-clauses-and-the-local-vs-global-cache":{"tf":1.0},"traits/resolution.html#trait-resolution-old-style":{"tf":1.0},"mir/visitor.html#mir-visitor":{"tf":1.0},"tests/running.html#running-a-subset-of-the-test-suites":{"tf":1.0},"ty.html#the-tcx-and-how-it-uses-lifetimes":{"tf":1.0},"traits/lowering-rules.html#notation":{"tf":1.4142135623730952},"diag.html#error-messages":{"tf":2.23606797749979},"rustdoc.html#from-soup-to-nuts":{"tf":1.0},"appendix/background.html#appendix-b-background-topics":{"tf":1.0},"type-inference.html#subtyping-obligations":{"tf":1.0},"incremental-compilation.html#the-basic-algorithm":{"tf":1.0},"how-to-build-and-run.html#create-a-configtoml":{"tf":1.0},"appendix/glossary.html#appendix-c-glossary":{"tf":3.1622776601683797},"mir/index.html#key-mir-vocabulary":{"tf":1.0},"traits/caching.html#caching-and-subtle-considerations-therewith":{"tf":1.0},"appendix/stupid-stats.html#appendix-a-a-tutorial-on-creating-a-drop-in-replacement-for-rustc":{"tf":1.0},"mir/index.html#the-mir-mid-level-ir":{"tf":1.0},"traits/lowering-to-logic.html#type-checking-generic-functions-beyond-horn-clauses":{"tf":2.23606797749979},"variance.html#the-algorithm":{"tf":1.4142135623730952}},"df":53}}}},"l":{"docs":{},"df":0,"e":{"docs":{},"df":0,"e":{"docs":{},"df":0,"f":{"docs":{},"df":0,"u":{"docs":{},"df":0,"l":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{"traits/canonical-queries.html#the-traditional-interactive-prolog-query":{"tf":1.0}},"df":1}}}}}}},"o":{"docs":{},"df":0,"s":{"docs":{},"df":0,"s":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{"traits/chalk-overview.html#resources":{"tf":1.0},"appendix/glossary.html#appendix-c-glossary":{"tf":1.4142135623730952}},"df":2}}}}},"b":{"docs":{"appendix/stupid-stats.html#compilercontroller":{"tf":1.0}},"df":1,"a":{"docs":{},"df":0,"l":{"docs":{"miri.html#allocations":{"tf":1.0},"query.html#how-the-compiler-executes-a-query":{"tf":1.0},"traits/caching.html#where-clauses-and-the-local-vs-global-cache":{"tf":1.7320508075688773},"ty.html#allocating-and-working-with-types":{"tf":1.0},"appendix/glossary.html#appendix-c-glossary":{"tf":1.4142135623730952},"mir/regionck.html#what-is-a-universe":{"tf":1.4142135623730952},"ty.html#the-tcx-and-how-it-uses-lifetimes":{"tf":2.23606797749979}},"df":7,"i":{"docs":{},"df":0,"d":{"docs":{"miri.html#miri":{"tf":1.4142135623730952},"const-eval.html#constant-evaluation":{"tf":1.4142135623730952}},"df":2}}}}}},"u":{"docs":{},"df":0,"e":{"docs":{"rustc-driver.html#the-rustc-driver":{"tf":1.0}},"df":1}}},"d":{"docs":{},"df":0,"b":{"docs":{"tests/adding.html#ignoring-tests":{"tf":1.0},"tests/adding.html#what-kind-of-test-should-i-add":{"tf":1.0},"tests/intro.html#compiletest-test-suites":{"tf":1.0}},"df":3,",":{"docs":{},"df":0,"l":{"docs":{},"df":0,"l":{"docs":{},"df":0,"d":{"docs":{},"df":0,"b":{"docs":{"tests/adding.html#other-header-commands":{"tf":1.0}},"df":1}}}}}}},"u":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{"appendix/stupid-stats.html#appendix-a-a-tutorial-on-creating-a-drop-in-replacement-for-rustc":{"tf":1.0}},"df":1}}}}}},"i":{"docs":{},"df":0,"d":{"docs":{"traits/chalk-overview.html#resources":{"tf":1.0},"appendix/background.html#what-is-co--and-contra-variance":{"tf":1.0},"miri.html#interpretation":{"tf":1.0},"appendix/background.html#appendix-b-background-topics":{"tf":1.0},"about-this-guide.html#about-this-guide":{"tf":2.0},"compiletest.html#adding-a-new-test-file":{"tf":1.0},"tests/adding.html#guide-to-the-ui-tests":{"tf":1.0},"rustc-driver.html#the-rustc-driver":{"tf":1.0}},"df":8,"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"c":{"docs":{"appendix/code-index.html#appendix-d-code-index":{"tf":1.0}},"df":1}}},"e":{"docs":{},"df":0,"p":{"docs":{},"df":0,"o":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{"name-resolution.html#todo":{"tf":1.0}},"df":1}}}}}}}},"n":{"docs":{},"df":0,"u":{"docs":{"tests/intro.html#testing-on-emulators":{"tf":1.4142135623730952},"how-to-build-and-run.html#creating-a-rustup-toolchain":{"tf":1.0},"tests/adding.html#ignoring-tests":{"tf":1.0},"compiler-debugging.html#getting-a-backtrace-for-errors":{"tf":1.0}},"df":4,"e":{"docs":{},"df":0,"a":{"docs":{},"df":0,"b":{"docs":{},"df":0,"i":{"docs":{},"df":0,"h":{"docs":{},"df":0,"f":{"docs":{"tests/intro.html#testing-on-emulators":{"tf":1.0}},"df":1}}}}}},"/":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"a":{"docs":{},"df":0,"g":{"docs":{},"df":0,"e":{"docs":{},"df":0,"1":{"docs":{},"df":0,"/":{"docs":{},"df":0,"b":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"/":{"docs":{},"df":0,"r":{"docs":{},"df":0,"u":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"c":{"docs":{"compiler-debugging.html#getting-a-backtrace-for-errors":{"tf":1.4142135623730952}},"df":1}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"w":{"docs":{"type-inference.html#lexical-region-resolution":{"tf":1.0},"mir/regionck.html#back-to-our-example":{"tf":1.4142135623730952}},"df":2,"n":{"docs":{"type-inference.html#lexical-region-resolution":{"tf":1.0}},"df":1}},"u":{"docs":{},"df":0,"p":{"docs":{"diag.html#lint-groups":{"tf":2.23606797749979},"compiletest.html#introduction":{"tf":1.0},"traits/index.html#trait-solving-new-style":{"tf":1.0},"appendix/glossary.html#appendix-c-glossary":{"tf":1.0},"tests/intro.html#compiletest-test-suites":{"tf":1.0},"method-lookup.html#candidate-assembly":{"tf":1.0},"miri.html#allocations":{"tf":1.0}},"df":7}}},"e":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{"param_env.html#parameter-environment":{"tf":1.0},"appendix/stupid-stats.html#what-next":{"tf":1.0},"diag.html#emitting-diagnostics":{"tf":1.0}},"df":3,"e":{"docs":{},"df":0,"r":{"docs":{"mir/regionck.html#what-is-a-universe":{"tf":1.0}},"df":1}}}},"w":{"docs":{"mir/regionck.html#back-to-our-example":{"tf":1.0}},"df":1},"e":{"docs":{},"df":0,"n":{"docs":{"incremental-compilation.html#the-query-dag":{"tf":1.4142135623730952},"incremental-compilation.html#improvements-to-the-basic-algorithm":{"tf":1.4142135623730952},"incremental-compilation.html#the-basic-algorithm":{"tf":2.0},"variance.html#dependency-graph-management":{"tf":1.4142135623730952},"incremental-compilation.html#the-try-mark-green-algorithm":{"tf":3.0}},"df":5}}},"a":{"docs":{},"df":0,"m":{"docs":{},"df":0,"m":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{"macro-expansion.html#example":{"tf":1.0},"mir/index.html#key-mir-vocabulary":{"tf":1.4142135623730952},"traits/chalk-overview.html#parsing":{"tf":1.0}},"df":3}}}},"d":{"docs":{},"df":0,"u":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{"high-level-overview.html#crate-structure":{"tf":1.0},"high-level-overview.html#the-main-stages-of-compilation":{"tf":1.0},"appendix/stupid-stats.html#appendix-a-a-tutorial-on-creating-a-drop-in-replacement-for-rustc":{"tf":1.0},"appendix/glossary.html#appendix-c-glossary":{"tf":1.0}},"df":4}}}},"b":{"docs":{"rustdoc.html#other-tricks-up-its-sleeve":{"tf":1.0},"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.0}},"df":2},"i":{"docs":{},"df":0,"n":{"docs":{"appendix/stupid-stats.html#compilercalls":{"tf":1.0},"high-level-overview.html#crate-structure":{"tf":1.0},"rustdoc.html#hot-potato":{"tf":1.0},"traits/caching.html#where-clauses-and-the-local-vs-global-cache":{"tf":1.0},"appendix/stupid-stats.html#compilercontroller":{"tf":1.0},"query.html#cycles-between-queries":{"tf":1.0}},"df":6}},"t":{"docs":{},"df":0,"u":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{"conventions.html#using-crates-from-cratesio":{"tf":1.0}},"df":1}}}},"p":{"docs":{},"df":0,"h":{"docs":{"mir/regionck.html#skolemization-and-outlives-constraints":{"tf":1.0},"variance.html#dependency-graph-management":{"tf":1.4142135623730952},"appendix/glossary.html#appendix-c-glossary":{"tf":1.7320508075688773},"compiler-debugging.html#formatting-graphviz-output-dot-files":{"tf":1.4142135623730952},"mir/index.html#the-mir-mid-level-ir":{"tf":1.0},"traits/specialization.html#specialization":{"tf":2.8284271247461905},"incrcomp-debugging.html#debugging-the-dependency-graph":{"tf":1.0},"incremental-compilation.html#the-basic-algorithm":{"tf":1.0},"mir/index.html#key-mir-vocabulary":{"tf":1.0},"appendix/background.html#what-is-a-control-flow-graph":{"tf":2.449489742783178},"mir/index.html#introduction-to-mir":{"tf":1.0},"incrcomp-debugging.html#tracking-down-incorrect-edges":{"tf":2.0},"traits/hrtb.html#basic-matching-and-skolemization-leaks":{"tf":1.0},"mir/regionck.html#representing-the-values-of-a-region-variable":{"tf":1.4142135623730952},"mir/borrowck.html#mir-borrow-check":{"tf":1.0},"incrcomp-debugging.html#testing-the-dependency-graph":{"tf":2.23606797749979},"incrcomp-debugging.html#dumping-the-graph":{"tf":2.449489742783178}},"df":17,".":{"docs":{},"df":0,"t":{"docs":{},"df":0,"x":{"docs":{},"df":0,"t":{"docs":{"incrcomp-debugging.html#tracking-down-incorrect-edges":{"tf":1.0}},"df":1}}}},"v":{"docs":{},"df":0,"i":{"docs":{},"df":0,"z":{"docs":{"compiler-debugging.html#formatting-graphviz-output-dot-files":{"tf":2.0}},"df":1}}}}}}},"o":{"docs":{"appendix/stupid-stats.html#what-next":{"tf":1.0},"how-to-build-and-run.html#running-xpy-and-building-a-stage1-compiler":{"tf":1.4142135623730952},"appendix/stupid-stats.html#appendix-a-a-tutorial-on-creating-a-drop-in-replacement-for-rustc":{"tf":1.4142135623730952},"method-lookup.html#candidate-assembly":{"tf":1.0},"traits/canonicalization.html#executing-the-query":{"tf":1.4142135623730952},"traits/goals-and-clauses.html#coinductive-goals":{"tf":1.0},"rustdoc.html#other-tricks-up-its-sleeve":{"tf":1.0},"traits/canonicalization.html#canonicalizing-the-query-result":{"tf":1.0},"traits/caching.html#an-example":{"tf":1.0},"mir/regionck.html#subtyping-and-skolemization":{"tf":1.0},"query.html#queries-demand-driven-compilation":{"tf":1.4142135623730952},"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.0},"ty.html#allocating-and-working-with-types":{"tf":1.0},"mir/regionck.html#final-example":{"tf":1.0},"mir/regionck.html#skolemization-and-outlives-constraints":{"tf":1.0},"rustdoc.html#from-soup-to-nuts":{"tf":1.0},"traits/lowering-to-logic.html#rust-traits-and-logic":{"tf":1.0},"variance.html#variance-and-object-types":{"tf":1.0},"traits/implied-bounds.html#implied-bounds":{"tf":1.0},"traits/resolution.html#candidate-assembly":{"tf":1.0},"variance.html#addendum-variance-on-traits":{"tf":1.0},"query.html#adding-a-new-kind-of-query":{"tf":1.0},"mir/passes.html#implementing-and-registering-a-pass":{"tf":1.4142135623730952},"query.html#how-the-compiler-executes-a-query":{"tf":1.0},"traits/canonical-queries.html#examples":{"tf":1.0},"mir/regionck.html#extending-the-universal-regions-check":{"tf":1.0},"how-to-build-and-run.html#how-to-build-the-compiler-and-run-what-you-built":{"tf":1.0},"mir/regionck.html#back-to-our-example":{"tf":1.0},"type-inference.html#region-constraints":{"tf":1.0},"rustc-driver.html#the-rustc-driver":{"tf":1.0}},"df":30,"p":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{"traits/bibliography.html#bibliography":{"tf":1.4142135623730952},"traits/lowering-to-logic.html#type-checking-generic-functions-beyond-horn-clauses":{"tf":1.0}},"df":2}}}}},"n":{"docs":{},"df":0,"e":{"docs":{"mir/regionck.html#final-example":{"tf":1.0}},"df":1}},"o":{"docs":{},"df":0,"d":{"docs":{"variance.html#variance-and-object-types":{"tf":1.0},"traits/lowering-module.html#unit-tests":{"tf":1.0},"compiler-debugging.html#getting-logging-output":{"tf":1.0},"compiletest.html#introduction":{"tf":1.0},"traits/resolution.html#selection-during-translation":{"tf":1.0},"traits/lowering-to-logic.html#type-checking-normal-functions":{"tf":1.0},"traits/lowering-to-logic.html#rust-traits-and-logic":{"tf":1.4142135623730952},"mir/passes.html#implementing-and-registering-a-pass":{"tf":1.4142135623730952},"traits/resolution.html#candidate-assembly":{"tf":1.0},"tests/running.html#running-a-subset-of-the-test-suites":{"tf":1.0},"compiler-debugging.html#debugging-llvm":{"tf":1.0},"mir/regionck.html#back-to-our-example":{"tf":1.0},"mir/regionck.html#final-example":{"tf":1.0},"appendix/stupid-stats.html#what-next":{"tf":1.0},"diag.html#suggestions":{"tf":1.0}},"df":15}},"a":{"docs":{},"df":0,"l":{"docs":{"traits/goals-and-clauses.html#goals-and-clauses":{"tf":1.4142135623730952},"traits/lowering-rules.html#notation":{"tf":1.0},"traits/lowering-rules.html#lowering-where-clauses":{"tf":2.0},"traits/lowering-to-logic.html#type-checking-normal-functions":{"tf":2.0},"traits/goals-and-clauses.html#domain-goals":{"tf":1.7320508075688773},"traits/goals-and-clauses.html#coinductive-goals":{"tf":2.23606797749979},"traits/chalk-overview.html#lowering":{"tf":1.0},"traits/chalk-overview.html#an-overview-of-chalk":{"tf":1.0},"traits/goals-and-clauses.html#goals-and-clauses-meta-structure":{"tf":3.605551275463989},"traits/lowering-rules.html#lowering-rules":{"tf":1.0},"rustdoc.html#hot-potato":{"tf":1.0},"traits/lowering-to-logic.html#type-checking-generic-functions-beyond-horn-clauses":{"tf":1.4142135623730952},"high-level-overview.html#the-main-stages-of-compilation":{"tf":1.0},"traits/lowering-rules.html#trait-header":{"tf":1.0},"traits/lowering-rules.html#function-and-constant-values":{"tf":1.0},"traits/index.html#trait-solving-new-style":{"tf":1.0}},"df":16}},"e":{"docs":{"tests/intro.html#testing-infrastructure":{"tf":1.0},"traits/chalk-overview.html#parsing":{"tf":1.0},"mir/regionck.html#extending-the-universal-regions-check":{"tf":1.0},"appendix/stupid-stats.html#overview-of-the-compilation-process":{"tf":1.0},"rustdoc.html#from-soup-to-nuts":{"tf":1.0}},"df":5},"v":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"n":{"docs":{"rustc-driver.html#the-rustc-driver":{"tf":1.0}},"df":1}}}},"t":{"docs":{},"df":0,"o":{"docs":{"appendix/background.html#what-is-a-control-flow-graph":{"tf":2.0}},"df":1}}},"a":{"docs":{},"df":0,"t":{"docs":{},"df":0,"h":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"rustdoc.html#from-crate-to-clean":{"tf":1.0},"appendix/code-index.html#appendix-d-code-index":{"tf":1.0}},"df":2}}},"e":{"docs":{"tests/adding.html#other-header-commands":{"tf":2.0},"diag.html#edition-gated-lints":{"tf":1.0}},"df":2}},"i":{"docs":{},"df":0,"n":{"docs":{"hir.html#out-of-band-storage-and-the--crate--type":{"tf":1.7320508075688773}},"df":1}},"v":{"docs":{},"df":0,"e":{"docs":{"traits/canonical-queries.html#the-traditional-interactive-prolog-query":{"tf":1.0}},"df":1}}},"c":{"docs":{},"df":0,"x":{"docs":{"compiler-debugging.html#getting-a-backtrace-for-errors":{"tf":1.4142135623730952},"ty.html#the-tcx-and-how-it-uses-lifetimes":{"tf":2.449489742783178},"type-inference.html#creating-an-inference-context":{"tf":1.0},"appendix/glossary.html#appendix-c-glossary":{"tf":1.0},"compiler-debugging.html#expensive-operations-in-logs":{"tf":2.23606797749979}},"df":5}}},"9":{"docs":{"compiler-debugging.html#getting-a-backtrace-for-errors":{"tf":1.0}},"df":1,"5":{"docs":{"traits/caching.html#where-clauses-and-the-local-vs-global-cache":{"tf":1.0}},"df":1}},"8":{"docs":{"miri.html#miri":{"tf":1.0},"compiler-debugging.html#getting-a-backtrace-for-errors":{"tf":1.0}},"df":2,"0":{"docs":{"conventions.html#line-length":{"tf":1.0}},"df":1}},"z":{"docs":{"tests/adding.html#revisions":{"tf":1.0},"compiler-debugging.html#getting-a-backtrace-for-errors":{"tf":1.7320508075688773},"mir/regionck.html#what-is-a-universe":{"tf":1.4142135623730952},"incrcomp-debugging.html#dumping-the-graph":{"tf":1.0},"traits/canonicalization.html#canonicalization":{"tf":1.0}},"df":5,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"o":{"docs":{"traits/canonicalization.html#canonicalization":{"tf":1.0},"compiletest.html#introduction":{"tf":1.0},"traits/lowering-rules.html#lowering-impls":{"tf":1.0}},"df":3}}},"d":{"docs":{},"df":0,"u":{"docs":{},"df":0,"m":{"docs":{},"df":0,"p":{"docs":{"mir/passes.html#seeing-how-the-mir-changes-as-the-compiler-executes":{"tf":2.449489742783178}},"df":1}}}},"u":{"docs":{},"df":0,"n":{"docs":{},"df":0,"p":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"t":{"docs":{},"df":0,"t":{"docs":{},"df":0,"y":{"docs":{},"df":0,"=":{"docs":{},"df":0,"h":{"docs":{},"df":0,"i":{"docs":{},"df":0,"r":{"docs":{"hir.html#the-hir":{"tf":1.4142135623730952}},"df":1}}}}}}}}}}}}},"d":{"docs":{"traits/canonicalization.html#executing-the-query":{"tf":1.7320508075688773},"mir/passes.html#seeing-how-the-mir-changes-as-the-compiler-executes":{"tf":1.0},"appendix/code-index.html#appendix-d-code-index":{"tf":1.0},"traits/canonicalization.html#processing-the-canonicalized-query-result":{"tf":2.0},"appendix/background.html#what-is-a-control-flow-graph":{"tf":1.4142135623730952},"traits/canonicalization.html#canonicalizing-the-query-result":{"tf":2.0},"mir/passes.html#mir-passes":{"tf":1.0}},"df":7,"y":{"docs":{},"df":0,"n":{"docs":{},"df":0,"a":{"docs":{},"df":0,"m":{"docs":{"variance.html#variance-and-object-types":{"tf":1.4142135623730952}},"df":1}}}},"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"'":{"docs":{"method-lookup.html#candidate-assembly":{"tf":1.0}},"df":1}}},"u":{"docs":{},"df":0,"p":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{},"df":0,"c":{"docs":{"rustc-driver.html#a-note-on-lifetimes":{"tf":1.0},"ty.html#allocating-and-working-with-types":{"tf":1.0}},"df":2}}}},"r":{"docs":{},"df":0,"e":{"docs":{"tests/intro.html#compiletest-test-suites":{"tf":1.0},"traits/specialization.html#specialization":{"tf":1.4142135623730952},"compiler-debugging.html#debugging-llvm":{"tf":1.0},"traits/resolution.html#selection-during-translation":{"tf":1.4142135623730952},"query.html#cycles-between-queries":{"tf":1.0},"appendix/stupid-stats.html#compilercontroller":{"tf":1.0},"ty.html#allocating-and-working-with-types":{"tf":1.0},"appendix/glossary.html#appendix-c-glossary":{"tf":1.7320508075688773},"macro-expansion.html#macro-expansion":{"tf":1.4142135623730952},"traits/resolution.html#candidate-assembly":{"tf":1.0},"rustc-driver.html#the-rustc-driver":{"tf":1.0},"traits/resolution.html#selection":{"tf":1.4142135623730952},"appendix/code-index.html#appendix-d-code-index":{"tf":1.0},"incremental-compilation.html#the-try-mark-green-algorithm":{"tf":1.4142135623730952},"traits/associated-types.html#associated-type-projection-and-normalization":{"tf":1.0},"traits/index.html#trait-solving-new-style":{"tf":1.0},"ty.html#the-tcx-and-how-it-uses-lifetimes":{"tf":1.7320508075688773},"incremental-compilation.html#the-basic-algorithm":{"tf":1.0},"tests/running.html#running-tests":{"tf":1.0},"how-to-build-and-run.html#running-xpy-and-building-a-stage1-compiler":{"tf":1.0},"rustdoc.html#from-clean-to-crate":{"tf":1.0},"traits/canonicalization.html#canonicalization":{"tf":1.0},"traits/canonical-queries.html#examples":{"tf":1.0},"traits/resolution.html#major-concepts":{"tf":1.0},"variance.html#variance-of-type-and-lifetime-parameters":{"tf":1.0},"rustdoc.html#from-soup-to-nuts":{"tf":1.4142135623730952},"query.html#adding-a-new-kind-of-query":{"tf":1.0},"appendix/stupid-stats.html#overview-of-the-compilation-process":{"tf":1.4142135623730952}},"df":28}},"m":{"docs":{},"df":0,"p":{"docs":{"traits/lowering-module.html#unit-tests":{"tf":1.0},"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.0},"incrcomp-debugging.html#dumping-the-graph":{"tf":2.23606797749979},"mir/passes.html#seeing-how-the-mir-changes-as-the-compiler-executes":{"tf":2.23606797749979},"compiler-debugging.html#formatting-graphviz-output-dot-files":{"tf":1.0},"incrcomp-debugging.html#tracking-down-incorrect-edges":{"tf":1.4142135623730952}},"df":6},"m":{"docs":{},"df":0,"i":{"docs":{"query.html#adding-a-new-kind-of-query":{"tf":1.0},"mir/passes.html#implementing-and-registering-a-pass":{"tf":1.0}},"df":2},"y":{"docs":{},"df":0,"_":{"docs":{},"df":0,"s":{"docs":{},"df":0,"p":{"docs":{"query.html#cycles-between-queries":{"tf":1.0}},"df":1}}}}}},"e":{"docs":{"query.html#cycles-between-queries":{"tf":1.0},"traits/resolution.html#selection":{"tf":1.0},"rustc-driver.html#a-note-on-lifetimes":{"tf":1.0},"diag.html#suggestions":{"tf":1.4142135623730952},"appendix/stupid-stats.html#overview-of-the-compilation-process":{"tf":1.0},"traits/canonicalization.html#executing-the-query":{"tf":1.0},"traits/lowering-module.html#unit-tests":{"tf":1.0},"compiler-debugging.html#getting-a-backtrace-for-errors":{"tf":1.0},"mir/passes.html#implementing-and-registering-a-pass":{"tf":1.0},"appendix/stupid-stats.html#appendix-a-a-tutorial-on-creating-a-drop-in-replacement-for-rustc":{"tf":1.0},"method-lookup.html#method-lookup":{"tf":1.0},"traits/specialization.html#specialization":{"tf":1.0}},"df":12}},"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"m":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{"conventions.html#how-to-structure-your-pr":{"tf":1.0}},"df":1}}},"w":{"docs":{"type-checking.html#type-checking":{"tf":1.0},"traits/caching.html#where-clauses-and-the-local-vs-global-cache":{"tf":1.0}},"df":2}},"o":{"docs":{},"df":0,"p":{"docs":{"rustdoc.html#hot-potato":{"tf":1.4142135623730952},"appendix/stupid-stats.html#appendix-a-a-tutorial-on-creating-a-drop-in-replacement-for-rustc":{"tf":2.0},"appendix/stupid-stats.html#overview-of-the-compilation-process":{"tf":1.0},"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.4142135623730952}},"df":4}},"i":{"docs":{},"df":0,"v":{"docs":{},"df":0,"e":{"docs":{"appendix/stupid-stats.html#appendix-a-a-tutorial-on-creating-a-drop-in-replacement-for-rustc":{"tf":1.0},"appendix/stupid-stats.html#compilercalls":{"tf":1.0}},"df":2,"n":{"docs":{"query.html#queries-demand-driven-compilation":{"tf":2.0}},"df":1},"r":{"docs":{"appendix/stupid-stats.html#the-driver-customisation-apis":{"tf":1.4142135623730952},"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.4142135623730952},"appendix/stupid-stats.html#overview-of-the-compilation-process":{"tf":1.7320508075688773},"rustc-driver.html#the-rustc-driver":{"tf":1.0},"appendix/stupid-stats.html#compilercalls":{"tf":1.0},"appendix/code-index.html#appendix-d-code-index":{"tf":1.4142135623730952}},"df":6,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"m":{"docs":{},"df":0,"p":{"docs":{},"df":0,"i":{"docs":{},"df":0,"l":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{},"df":0,"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"l":{"docs":{},"df":0,"l":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"b":{"docs":{},"df":0,"a":{"docs":{},"df":0,"s":{"docs":{"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.0}},"df":1}}}}},"<":{"docs":{},"df":0,"'":{"docs":{},"df":0,"a":{"docs":{"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.4142135623730952}},"df":1}}}}}}}}}}}}}}}}}}}}}}}}},"l":{"docs":{},"df":0,"l":{"docs":{"mir/index.html#key-mir-vocabulary":{"tf":1.0}},"df":1}}}},"a":{"docs":{},"df":0,"g":{"docs":{"incremental-compilation.html#the-basic-algorithm":{"tf":2.0},"appendix/glossary.html#appendix-c-glossary":{"tf":1.0},"incremental-compilation.html#the-query-dag":{"tf":2.0},"incremental-compilation.html#the-try-mark-green-algorithm":{"tf":1.4142135623730952}},"df":4},"t":{"docs":{},"df":0,"a":{"docs":{"hir.html#the-hir-map":{"tf":1.4142135623730952},"query.html#queries-demand-driven-compilation":{"tf":1.0},"mir/index.html#mir-data-types":{"tf":2.23606797749979},"appendix/code-index.html#appendix-d-code-index":{"tf":2.0},"rustdoc.html#from-soup-to-nuts":{"tf":1.0},"query.html#adding-a-new-kind-of-query":{"tf":1.0},"variance.html#variance-of-type-and-lifetime-parameters":{"tf":1.0},"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.0},"hir.html#out-of-band-storage-and-the--crate--type":{"tf":1.7320508075688773},"rustc-driver.html#a-note-on-lifetimes":{"tf":1.0},"diag.html#span":{"tf":1.0},"traits/canonicalization.html#canonicalization":{"tf":1.0},"mir/borrowck.html#major-phases-of-the-borrow-checker":{"tf":1.4142135623730952},"high-level-overview.html#crate-structure":{"tf":1.0},"ty.html#the-tcx-and-how-it-uses-lifetimes":{"tf":1.7320508075688773},"variance.html#dependency-graph-management":{"tf":1.0},"ty.html#beyond-types-other-kinds-of-arena-allocated-data-structures":{"tf":1.4142135623730952},"ty.html#the--ty--module-representing-types":{"tf":1.0},"appendix/glossary.html#appendix-c-glossary":{"tf":1.7320508075688773}},"df":19,"f":{"docs":{},"df":0,"l":{"docs":{},"df":0,"o":{"docs":{},"df":0,"w":{"docs":{"appendix/background.html#what-is-a-dataflow-analysis":{"tf":1.0},"compiler-debugging.html#formatting-graphviz-output-dot-files":{"tf":1.0},"mir/borrowck.html#major-phases-of-the-borrow-checker":{"tf":1.0}},"df":3}}}},"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"r":{"docs":{},"df":0,"u":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{},"df":0,"u":{"docs":{},"df":0,"r":{"docs":{"miri.html#datastructures":{"tf":1.4142135623730952}},"df":1}}}}}}}},"t":{"docs":{},"df":0,"y":{"docs":{},"df":0,"p":{"docs":{"appendix/glossary.html#appendix-c-glossary":{"tf":1.0}},"df":1}}}},"e":{"docs":{"traits/chalk-overview.html#rules":{"tf":1.0},"appendix/stupid-stats.html#appendix-a-a-tutorial-on-creating-a-drop-in-replacement-for-rustc":{"tf":1.0},"how-to-build-and-run.html#creating-a-rustup-toolchain":{"tf":1.0}},"df":3}},"l":{"docs":{},"df":0,"e":{"docs":{"traits/bibliography.html#bibliography":{"tf":1.0}},"df":1}}},"e":{"docs":{},"df":0,"b":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{"tests/adding.html#naming-your-test":{"tf":1.0}},"df":1}},"u":{"docs":{},"df":0,"g":{"docs":{"incrcomp-debugging.html#dumping-the-graph":{"tf":1.0},"tests/intro.html#compiletest-test-suites":{"tf":1.0},"incrcomp-debugging.html#tracking-down-incorrect-edges":{"tf":1.0},"traits/canonical-queries.html#canonical-queries":{"tf":1.0},"compiler-debugging.html#getting-logging-output":{"tf":3.1622776601683797},"compiler-debugging.html#logging-etiquette":{"tf":1.4142135623730952},"how-to-build-and-run.html#create-a-configtoml":{"tf":1.7320508075688773},"incrcomp-debugging.html#debugging-and-testing-dependencies":{"tf":1.0},"compiler-debugging.html#debugging-the-compiler":{"tf":1.7320508075688773},"compiler-debugging.html#formatting-graphviz-output-dot-files":{"tf":1.0},"compiler-debugging.html#debugging-llvm":{"tf":1.7320508075688773},"incrcomp-debugging.html#debugging-the-dependency-graph":{"tf":1.0},"compiler-debugging.html#getting-a-backtrace-for-errors":{"tf":1.0},"compiler-debugging.html#expensive-operations-in-logs":{"tf":2.0}},"df":14,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"f":{"docs":{},"df":0,"o":{"docs":{"tests/adding.html#what-kind-of-test-should-i-add":{"tf":1.0},"tests/running.html#running-a-subset-of-the-test-suites":{"tf":1.4142135623730952},"tests/adding.html#other-header-commands":{"tf":1.0},"how-to-build-and-run.html#create-a-configtoml":{"tf":2.0},"tests/adding.html#ignoring-tests":{"tf":1.0},"tests/intro.html#compiletest-test-suites":{"tf":1.0},"compiler-debugging.html#getting-a-backtrace":{"tf":1.0}},"df":7,"=":{"docs":{},"df":0,"t":{"docs":{},"df":0,"r":{"docs":{},"df":0,"u":{"docs":{"compiler-debugging.html#getting-a-backtrace":{"tf":1.0}},"df":1}}}}}}}},"g":{"docs":{"tests/adding.html#ignoring-tests":{"tf":1.0}},"df":1}}}},"t":{"docs":{},"df":0,"a":{"docs":{},"df":0,"i":{"docs":{},"df":0,"l":{"docs":{"how-to-build-and-run.html#other-xpy-commands":{"tf":1.4142135623730952},"variance.html#variance-of-type-and-lifetime-parameters":{"tf":1.0},"traits/lowering-module.html#unit-tests":{"tf":1.0},"compiler-debugging.html#getting-a-backtrace-for-errors":{"tf":1.0},"rustdoc.html#the-walking-tour-of-rustdoc":{"tf":1.0},"query.html#adding-a-new-kind-of-query":{"tf":1.0},"method-lookup.html#method-lookup":{"tf":1.0},"appendix/stupid-stats.html#compilercalls":{"tf":1.0},"mir/regionck.html#representing-the-values-of-a-region-variable":{"tf":1.0},"hir.html#out-of-band-storage-and-the--crate--type":{"tf":1.0},"traits/canonicalization.html#executing-the-query":{"tf":1.0},"tests/intro.html#compiletest-test-suites":{"tf":1.0},"type-inference.html#creating-an-inference-context":{"tf":1.0},"about-this-guide.html#about-this-guide":{"tf":1.0},"mir/borrowck.html#major-phases-of-the-borrow-checker":{"tf":1.4142135623730952},"traits/goals-and-clauses.html#goals-and-clauses-meta-structure":{"tf":1.0},"traits/lowering-rules.html#associated-type-declarations":{"tf":1.0},"traits/lowering-rules.html#function-and-constant-values":{"tf":1.0},"rustc-driver.html#the-rustc-driver":{"tf":1.0},"appendix/glossary.html#appendix-c-glossary":{"tf":1.4142135623730952},"tests/intro.html#the-compiler-testing-framework":{"tf":1.0},"high-level-overview.html#the-main-stages-of-compilation":{"tf":1.0},"compiletest.html#introduction":{"tf":1.0},"name-resolution.html#todo":{"tf":1.0},"type-checking.html#type-collection":{"tf":1.0},"traits/canonical-queries.html#a-trait-query-in-rustc":{"tf":1.4142135623730952},"traits/lowering-rules.html#lowering-function-and-constant-declarations":{"tf":1.0},"appendix/stupid-stats.html#overview-of-the-compilation-process":{"tf":1.0},"tests/adding.html#adding-new-tests":{"tf":1.0},"variance.html#variance-and-associated-types":{"tf":1.0},"mir/regionck.html#mir-based-region-checking-nll":{"tf":1.0},"tests/adding.html#ignoring-tests":{"tf":1.0},"query.html#cycles-between-queries":{"tf":1.0},"type-inference.html#region-constraints":{"tf":1.0},"type-inference.html#subtyping-obligations":{"tf":1.0}},"df":35}}},"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"m":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{"rustc-driver.html#the-rustc-driver":{"tf":1.0},"appendix/glossary.html#appendix-c-glossary":{"tf":1.0},"mir/regionck.html#universes-and-skolemized-region-elements":{"tf":1.0},"query.html#how-the-compiler-executes-a-query":{"tf":1.0},"variance.html#variance-of-type-and-lifetime-parameters":{"tf":1.0},"traits/specialization.html#specialization":{"tf":1.4142135623730952},"incremental-compilation.html#the-try-mark-green-algorithm":{"tf":1.4142135623730952},"traits/caching.html#where-clauses-and-the-local-vs-global-cache":{"tf":1.0},"mir/regionck.html#what-is-a-universe":{"tf":1.0}},"df":9,"i":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{"incremental-compilation.html#the-basic-algorithm":{"tf":1.0}},"df":1}}}}}}},"c":{"docs":{},"df":0,"t":{"docs":{"appendix/stupid-stats.html#overview-of-the-compilation-process":{"tf":1.0},"diag.html#edition-gated-lints":{"tf":1.0},"type-inference.html#type-inference":{"tf":1.0},"traits/canonicalization.html#canonicalization":{"tf":1.0}},"df":4}}}},"s":{"docs":{},"df":0,"c":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{},"df":0,"b":{"docs":{"traits/index.html#trait-solving-new-style":{"tf":1.4142135623730952},"traits/goals-and-clauses.html#goals-and-clauses":{"tf":1.0},"traits/resolution.html#trait-resolution-old-style":{"tf":1.4142135623730952},"high-level-overview.html#crate-structure":{"tf":1.0},"type-inference.html#inference-variables":{"tf":1.0},"traits/goals-and-clauses.html#coinductive-goals":{"tf":1.0},"appendix/stupid-stats.html#compilercontroller":{"tf":1.0},"appendix/stupid-stats.html#appendix-a-a-tutorial-on-creating-a-drop-in-replacement-for-rustc":{"tf":1.0},"incremental-compilation.html#incremental-compilation":{"tf":1.4142135623730952},"appendix/stupid-stats.html#compilercalls":{"tf":1.0},"rustdoc.html#from-crate-to-clean":{"tf":1.0},"mir/regionck.html#causal-tracking":{"tf":1.0},"traits/hrtb.html#basic-matching-and-skolemization-leaks":{"tf":1.0},"incrcomp-debugging.html#tracking-down-incorrect-edges":{"tf":1.4142135623730952},"appendix/background.html#what-is-a-free-region-or-a-free-variable-what-about-bound-region":{"tf":1.0},"traits/associated-types.html#integration-with-unification":{"tf":1.0},"traits/lowering-module.html#the-lowering-module-in-rustc":{"tf":1.0},"type-inference.html#snapshots":{"tf":1.0},"mir/index.html#key-mir-vocabulary":{"tf":1.0},"mir/passes.html#mir-passes":{"tf":1.0},"query.html#adding-a-new-kind-of-query":{"tf":1.0},"compiletest.html#header-commands":{"tf":1.0},"query.html#queries-demand-driven-compilation":{"tf":1.0},"type-inference.html#creating-an-inference-context":{"tf":1.0},"traits/lowering-to-logic.html#type-checking-generic-functions-beyond-horn-clauses":{"tf":1.4142135623730952},"mir/regionck.html#region-variables-and-constraints":{"tf":1.0},"rustdoc.html#other-tricks-up-its-sleeve":{"tf":1.0},"traits/lowering-module.html#the--program_clauses_for--query":{"tf":1.0},"mir/regionck.html#skolemization-and-universes":{"tf":1.0},"mir/borrowck.html#major-phases-of-the-borrow-checker":{"tf":1.0},"macro-expansion.html#the-macro-parser":{"tf":1.0},"traits/chalk-overview.html#testing":{"tf":1.0}},"df":32,"e":{"docs":{},"df":0,"(":{"docs":{},"df":0,"t":{"docs":{},"df":0,"c":{"docs":{},"df":0,"x":{"docs":{"query.html#adding-a-new-kind-of-query":{"tf":1.0}},"df":1}}}}}},"p":{"docs":{},"df":0,"t":{"docs":{"query.html#adding-a-new-kind-of-query":{"tf":1.0},"appendix/code-index.html#appendix-d-code-index":{"tf":1.0},"rustdoc.html#the-walking-tour-of-rustdoc":{"tf":1.0},"diag.html#declaring-a-lint":{"tf":1.0},"rustdoc.html#dotting-is-and-crossing-ts":{"tf":1.0},"incremental-compilation.html#improvements-to-the-basic-algorithm":{"tf":1.0},"traits/canonical-queries.html#a-trait-query-in-rustc":{"tf":1.0},"name-resolution.html#todo":{"tf":1.0}},"df":8}}}}},"p":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{"mir/regionck.html#final-example":{"tf":1.0}},"df":1}}},"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{"incremental-compilation.html#improvements-to-the-basic-algorithm":{"tf":1.4142135623730952},"incremental-compilation.html#the-try-mark-green-algorithm":{"tf":1.0}},"df":2}}},"i":{"docs":{},"df":0,"g":{"docs":{},"df":0,"n":{"docs":{"traits/resolution.html#trait-resolution-old-style":{"tf":1.0},"method-lookup.html#method-lookup":{"tf":1.0},"traits/index.html#trait-solving-new-style":{"tf":1.0},"variance.html#variance-of-type-and-lifetime-parameters":{"tf":1.0},"traits/chalk-overview.html#parsing":{"tf":1.0}},"df":5}},"r":{"docs":{"mir/regionck.html#subtyping-and-skolemization":{"tf":1.0}},"df":1}},"u":{"docs":{},"df":0,"g":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{"appendix/glossary.html#appendix-c-glossary":{"tf":1.4142135623730952},"hir.html#the-hir":{"tf":1.0},"mir/index.html#the-mir-mid-level-ir":{"tf":1.0},"high-level-overview.html#the-main-stages-of-compilation":{"tf":1.4142135623730952},"mir/borrowck.html#mir-borrow-check":{"tf":1.0}},"df":5}}}}},"m":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{"incremental-compilation.html#the-try-mark-green-algorithm":{"tf":1.0},"appendix/stupid-stats.html#compilercontroller":{"tf":1.0},"traits/bibliography.html#bibliography":{"tf":1.0},"high-level-overview.html#the-main-stages-of-compilation":{"tf":1.7320508075688773},"query.html#queries-demand-driven-compilation":{"tf":2.23606797749979},"traits/chalk-overview.html#blog-posts":{"tf":1.0}},"df":6}}},"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"r":{"docs":{"incrcomp-debugging.html#testing-the-dependency-graph":{"tf":1.0}},"df":1}}}}}},"p":{"docs":{"incrcomp-debugging.html#tracking-down-incorrect-edges":{"tf":1.7320508075688773},"query.html#adding-a-new-kind-of-query":{"tf":2.0},"incrcomp-debugging.html#dumping-the-graph":{"tf":1.4142135623730952}},"df":3,"n":{"docs":{},"df":0,"o":{"docs":{},"df":0,"d":{"docs":{"query.html#adding-a-new-kind-of-query":{"tf":1.0}},"df":1}}},"t":{"docs":{},"df":0,"h":{"docs":{"traits/goals-and-clauses.html#goals-and-clauses-meta-structure":{"tf":1.0}},"df":1}},"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{"incremental-compilation.html#the-basic-algorithm":{"tf":1.4142135623730952},"incrcomp-debugging.html#debugging-and-testing-dependencies":{"tf":1.0},"tests/intro.html#compiletest-test-suites":{"tf":1.0},"compiler-debugging.html#debugging-llvm":{"tf":1.0},"incrcomp-debugging.html#dumping-the-graph":{"tf":1.0},"high-level-overview.html#crate-structure":{"tf":1.4142135623730952},"query.html#how-the-compiler-executes-a-query":{"tf":1.4142135623730952},"hir.html#out-of-band-storage-and-the--crate--type":{"tf":1.0},"rustdoc.html#from-clean-to-crate":{"tf":1.0},"compiletest.html#implementing-the-behavior-change":{"tf":1.0},"high-level-overview.html#the-main-stages-of-compilation":{"tf":1.0},"incrcomp-debugging.html#debugging-the-dependency-graph":{"tf":1.0},"conventions.html#using-crates-from-cratesio":{"tf":1.0},"appendix/stupid-stats.html#overview-of-the-compilation-process":{"tf":1.0},"traits/canonical-queries.html#a-trait-query-in-rustc":{"tf":1.0},"variance.html#dependency-graph-management":{"tf":2.0},"variance.html#trait-variance-and-vtable-resolution":{"tf":1.0},"incrcomp-debugging.html#tracking-down-incorrect-edges":{"tf":1.0},"appendix/stupid-stats.html#compilercontroller":{"tf":1.0},"tests/adding.html#adding-new-tests":{"tf":1.0},"traits/caching.html#where-clauses-and-the-local-vs-global-cache":{"tf":1.4142135623730952},"incremental-compilation.html#the-try-mark-green-algorithm":{"tf":1.0},"compiletest.html#adding-a-new-header-command":{"tf":1.0},"incrcomp-debugging.html#testing-the-dependency-graph":{"tf":2.0},"param_env.html#parameter-environment":{"tf":1.4142135623730952},"appendix/glossary.html#appendix-c-glossary":{"tf":1.0}},"df":26}}},"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{"mir/regionck.html#mir-based-region-checking-nll":{"tf":1.0},"rustdoc.html#hot-potato":{"tf":1.0}},"df":2}}},"_":{"docs":{},"df":0,"g":{"docs":{},"df":0,"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"p":{"docs":{},"df":0,"h":{"docs":{},"df":0,".":{"docs":{},"df":0,"{":{"docs":{},"df":0,"t":{"docs":{},"df":0,"x":{"docs":{},"df":0,"t":{"docs":{},"df":0,",":{"docs":{},"df":0,"d":{"docs":{},"df":0,"o":{"docs":{},"df":0,"t":{"docs":{"incrcomp-debugging.html#dumping-the-graph":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}},"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"f":{"docs":{"rustdoc.html#from-soup-to-nuts":{"tf":1.0}},"df":1,"'":{"docs":{},"df":0,"d":{"docs":{"method-lookup.html#steps":{"tf":1.0}},"df":1}},"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"c":{"docs":{"method-lookup.html#steps":{"tf":1.0}},"df":1}}}}}}},"i":{"docs":{},"df":0,"v":{"docs":{"mir/borrowck.html#mir-borrow-check":{"tf":1.0},"macro-expansion.html#custom-derive":{"tf":1.0},"variance.html#variance-and-associated-types":{"tf":1.0},"traits/canonical-queries.html#the-traditional-interactive-prolog-query":{"tf":1.0},"traits/goals-and-clauses.html#domain-goals":{"tf":1.0},"traits/lowering-to-logic.html#type-checking-normal-functions":{"tf":1.4142135623730952},"tests/running.html#running-a-subset-of-the-test-suites":{"tf":1.0},"method-lookup.html#candidate-assembly":{"tf":2.0}},"df":8,"e":{"docs":{},"df":0,"(":{"docs":{},"df":0,"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"p":{"docs":{},"df":0,"i":{"docs":{"diag.html#declaring-a-lint":{"tf":1.0}},"df":1}}}}}}}}},"v":{"docs":{"compiler-debugging.html#getting-a-backtrace-for-errors":{"tf":1.0},"how-to-build-and-run.html#creating-a-rustup-toolchain":{"tf":1.7320508075688773}},"df":2,"e":{"docs":{},"df":0,"l":{"docs":{},"df":0,"o":{"docs":{},"df":0,"p":{"docs":{"traits/chalk-overview.html#an-overview-of-chalk":{"tf":1.0},"how-to-build-and-run.html#how-to-build-the-compiler-and-run-what-you-built":{"tf":1.0},"tests/adding.html#header-commands-configuring-rustc":{"tf":1.0},"conventions.html#copyright-notice":{"tf":1.0},"about-this-guide.html#about-this-guide":{"tf":1.0},"compiletest.html#adding-a-new-header-command":{"tf":1.0}},"df":6}}}}},"a":{"docs":{},"df":0,"l":{"docs":{"hir.html#identifiers-in-the-hir":{"tf":1.0},"traits/hrtb.html#higher-ranked-trait-obligations":{"tf":1.0},"traits/chalk-overview.html#parsing":{"tf":1.0},"traits/specialization.html#specialization":{"tf":1.0},"rustdoc.html#dotting-is-and-crossing-ts":{"tf":1.0}},"df":5}},"n":{"docs":{},"df":0,"o":{"docs":{},"df":0,"t":{"docs":{"diag.html#declaring-a-lint":{"tf":1.0},"mir/regionck.html#representing-the-values-of-a-region-variable":{"tf":1.0},"mir/index.html#key-mir-vocabulary":{"tf":1.0},"mir/regionck.html#what-is-a-universe":{"tf":1.0}},"df":4}}},"d":{"docs":{},"df":0,"i":{"docs":{},"df":0,"c":{"docs":{"traits/lowering-module.html#the--program_clauses_for--query":{"tf":1.0}},"df":1}},"u":{"docs":{},"df":0,"c":{"docs":{"traits/canonicalization.html#processing-the-canonicalized-query-result":{"tf":1.0}},"df":1}}},"f":{"docs":{"ty.html#beyond-types-other-kinds-of-arena-allocated-data-structures":{"tf":1.0},"appendix/glossary.html#appendix-c-glossary":{"tf":1.0},"mir/passes.html#seeing-how-the-mir-changes-as-the-compiler-executes":{"tf":1.0},"mir/passes.html#mir-passes":{"tf":1.7320508075688773},"query.html#adding-a-new-kind-of-query":{"tf":1.0},"hir.html#the-hir-map":{"tf":1.0},"hir.html#hir-bodies":{"tf":1.0},"traits/lowering-module.html#unit-tests":{"tf":1.0},"traits/caching.html#an-example":{"tf":1.0},"query.html#queries-demand-driven-compilation":{"tf":1.0},"traits/lowering-module.html#the--program_clauses_for--query":{"tf":1.0}},"df":11,"i":{"docs":{},"df":0,"n":{"docs":{"traits/lowering-rules.html#transforming-the-lowered-where-clauses":{"tf":1.0},"ty.html#the--ty--module-representing-types":{"tf":1.4142135623730952},"traits/associated-types.html#associated-type-projection-and-normalization":{"tf":1.4142135623730952},"traits/goals-and-clauses.html#domain-goals":{"tf":1.4142135623730952},"appendix/background.html#what-is-a-free-region-or-a-free-variable-what-about-bound-region":{"tf":1.4142135623730952},"rustdoc.html#from-crate-to-clean":{"tf":2.0},"query.html#adding-a-new-kind-of-query":{"tf":2.0},"variance.html#the-algorithm":{"tf":2.0},"traits/specialization.html#specialization":{"tf":1.0},"query.html#queries-demand-driven-compilation":{"tf":1.0},"ty.html#beyond-types-other-kinds-of-arena-allocated-data-structures":{"tf":1.0},"traits/lowering-rules.html#trait-header":{"tf":1.0},"diag.html#error-messages":{"tf":1.0},"traits/lowering-to-logic.html#type-checking-normal-functions":{"tf":1.4142135623730952},"compiletest.html#introduction":{"tf":1.0},"query.html#how-the-compiler-executes-a-query":{"tf":2.0},"ty.html#the-tcx-and-how-it-uses-lifetimes":{"tf":1.0},"diag.html#lint-groups":{"tf":1.0},"diag.html#declaring-a-lint":{"tf":1.7320508075688773},"miri.html#interpretation":{"tf":1.0},"traits/lowering-rules.html#notation":{"tf":1.0},"ty.html#allocating-and-working-with-types":{"tf":2.0},"mir/visitor.html#mir-visitor":{"tf":1.0},"rustdoc.html#cheat-sheet":{"tf":1.0},"traits/lowering-rules.html#associated-type-declarations":{"tf":1.4142135623730952},"traits/lowering-rules.html#lowering-rules":{"tf":1.0},"high-level-overview.html#the-main-stages-of-compilation":{"tf":1.7320508075688773},"traits/goals-and-clauses.html#goals-and-clauses-meta-structure":{"tf":1.0},"mir/index.html#introduction-to-mir":{"tf":1.0},"high-level-overview.html#crate-structure":{"tf":2.449489742783178},"macro-expansion.html#example":{"tf":1.0},"compiletest.html#implementing-the-behavior-change":{"tf":1.0},"compiletest.html#adding-a-new-header-command":{"tf":2.6457513110645909},"mir/passes.html#implementing-and-registering-a-pass":{"tf":1.4142135623730952},"traits/hrtb.html#basic-matching-and-skolemization-leaks":{"tf":1.0},"macro-expansion.html#the-macro-parser":{"tf":1.7320508075688773},"variance.html#variance-of-type-and-lifetime-parameters":{"tf":1.4142135623730952},"hir.html#the-hir-map":{"tf":1.4142135623730952},"query.html#invoking-queries":{"tf":1.0},"mir/index.html#key-mir-vocabulary":{"tf":1.7320508075688773},"appendix/glossary.html#appendix-c-glossary":{"tf":1.4142135623730952},"mir/index.html#mir-data-types":{"tf":1.0},"diag.html#lints":{"tf":1.0},"type-checking.html#type-collection":{"tf":1.0},"method-lookup.html#candidate-assembly":{"tf":2.449489742783178}},"df":45,"e":{"docs":{},"df":0,"_":{"docs":{},"df":0,"m":{"docs":{},"df":0,"a":{"docs":{},"df":0,"p":{"docs":{"query.html#adding-a-new-kind-of-query":{"tf":1.7320508075688773}},"df":1}}},"d":{"docs":{},"df":0,"e":{"docs":{},"df":0,"p":{"docs":{},"df":0,"_":{"docs":{},"df":0,"n":{"docs":{},"df":0,"o":{"docs":{},"df":0,"d":{"docs":{"query.html#adding-a-new-kind-of-query":{"tf":1.0}},"df":1}}}}}}}}},"t":{"docs":{"macro-expansion.html#the-macro-parser":{"tf":1.0}},"df":1},"i":{"docs":{},"df":0,"t":{"docs":{"name-resolution.html#todo":{"tf":1.0},"hir.html#the-hir-map":{"tf":1.0},"appendix/code-index.html#appendix-d-code-index":{"tf":1.0},"appendix/background.html#appendix-b-background-topics":{"tf":1.0},"query.html#adding-a-new-kind-of-query":{"tf":1.0},"variance.html#the-algorithm":{"tf":1.0},"traits/lowering-to-logic.html#type-checking-normal-functions":{"tf":1.0},"traits/lowering-module.html#the--program_clauses_for--query":{"tf":1.0},"traits/resolution.html#candidate-assembly":{"tf":1.0},"hir.html#hir-bodies":{"tf":1.0},"appendix/glossary.html#appendix-c-glossary":{"tf":1.4142135623730952},"type-checking.html#type-collection":{"tf":1.0},"macro-expansion.html#the-macro-parser":{"tf":3.0},"traits/goals-and-clauses.html#goals-and-clauses-meta-structure":{"tf":1.0},"traits/lowering-rules.html#notation":{"tf":1.0},"traits/lowering-rules.html#lowering-traits":{"tf":1.0},"traits/resolution.html#selection":{"tf":1.0},"variance.html#variance-of-type-and-lifetime-parameters":{"tf":1.7320508075688773},"traits/chalk-overview.html#intermediate-representation-ir":{"tf":1.0},"rustdoc.html#from-soup-to-nuts":{"tf":1.0},"macro-expansion.html#example":{"tf":1.0},"diag.html#declaring-a-lint":{"tf":1.0},"hir.html#identifiers-in-the-hir":{"tf":1.4142135623730952},"tests/intro.html#testing-with-docker-images":{"tf":1.0},"variance.html#dependency-graph-management":{"tf":1.0},"high-level-overview.html#crate-structure":{"tf":1.0},"traits/chalk-overview.html#parsing":{"tf":1.4142135623730952}},"df":27}},"d":{"docs":{},"df":0,"e":{"docs":{},"df":0,"x":{"docs":{"hir.html#identifiers-in-the-hir":{"tf":1.0}},"df":1}}}},"d":{"docs":{"hir.html#identifiers-in-the-hir":{"tf":2.0},"query.html#adding-a-new-kind-of-query":{"tf":1.7320508075688773},"traits/lowering-module.html#the--program_clauses_for--query":{"tf":1.0},"ty.html#the-tcx-and-how-it-uses-lifetimes":{"tf":1.4142135623730952},"appendix/glossary.html#appendix-c-glossary":{"tf":1.0},"query.html#how-the-compiler-executes-a-query":{"tf":1.4142135623730952},"hir.html#the-hir-map":{"tf":1.0}},"df":7}},"a":{"docs":{},"df":0,"u":{"docs":{},"df":0,"l":{"docs":{},"df":0,"t":{"docs":{"tests/adding.html#tests-that-do-not-result-in-compile-errors":{"tf":1.0},"compiler-debugging.html#logging-etiquette":{"tf":1.0},"tests/adding.html#other-header-commands":{"tf":1.0},"compiler-debugging.html#debugging-the-compiler":{"tf":1.0},"compiler-debugging.html#expensive-operations-in-logs":{"tf":1.0},"traits/goals-and-clauses.html#coinductive-goals":{"tf":1.0},"diag.html#declaring-a-lint":{"tf":1.0},"appendix/stupid-stats.html#compilercalls":{"tf":1.0},"rustdoc.html#hot-potato":{"tf":1.0},"diag.html#edition-gated-lints":{"tf":1.4142135623730952},"compiler-debugging.html#debugging-llvm":{"tf":1.0},"traits/specialization.html#specialization":{"tf":1.7320508075688773},"how-to-build-and-run.html#how-to-build-the-compiler-and-run-what-you-built":{"tf":1.0},"compiler-debugging.html#getting-a-backtrace":{"tf":1.0},"compiler-debugging.html#getting-logging-output":{"tf":1.0},"compiletest.html#adding-a-new-header-command":{"tf":2.23606797749979},"tests/adding.html#normalization":{"tf":1.0},"compiletest.html#implementing-the-behavior-change":{"tf":1.7320508075688773},"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.4142135623730952}},"df":19,">":{"docs":{},"df":0,"(":{"docs":{},"df":0,"v":{"docs":{"name-resolution.html#scopes-and-ribs":{"tf":1.0}},"df":1}}},"_":{"docs":{},"df":0,"c":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.0}},"df":1}}}}}}}},"p":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{},"df":0,"h":{"docs":{"appendix/glossary.html#appendix-c-glossary":{"tf":1.0}},"df":1}}}},"_":{"docs":{},"df":0,"i":{"docs":{},"df":0,"d":{"docs":{"ty.html#the-tcx-and-how-it-uses-lifetimes":{"tf":1.4142135623730952},"query.html#how-the-compiler-executes-a-query":{"tf":1.0}},"df":2}}}},"l":{"docs":{},"df":0,"a":{"docs":{},"df":0,"y":{"docs":{"traits/bibliography.html#bibliography":{"tf":1.0}},"df":1,"_":{"docs":{},"df":0,"s":{"docs":{},"df":0,"p":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"_":{"docs":{},"df":0,"b":{"docs":{},"df":0,"u":{"docs":{},"df":0,"g":{"docs":{"compiler-debugging.html#getting-a-backtrace-for-errors":{"tf":1.4142135623730952},"query.html#cycles-between-queries":{"tf":1.0}},"df":2}}}}}}}}}}},"i":{"docs":{},"df":0,"b":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"rustdoc.html#hot-potato":{"tf":1.0}},"df":1}}}},"e":{"docs":{},"df":0,"g":{"docs":{"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.4142135623730952}},"df":1}}},"c":{"docs":{},"df":0,"i":{"docs":{},"df":0,"d":{"docs":{"traits/resolution.html#selection-during-translation":{"tf":1.0},"traits/resolution.html#overview":{"tf":1.4142135623730952},"variance.html#trait-variance-and-vtable-resolution":{"tf":1.0},"variance.html#variance-and-object-types":{"tf":1.0},"method-lookup.html#method-lookup":{"tf":1.0},"traits/resolution.html#candidate-assembly":{"tf":1.0},"traits/resolution.html#selection":{"tf":1.0},"traits/canonical-queries.html#examples":{"tf":1.0}},"df":8}},"l":{"docs":{"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.0}},"df":1,"a":{"docs":{},"df":0,"r":{"docs":{"mir/index.html#key-mir-vocabulary":{"tf":1.4142135623730952},"diag.html#declaring-a-lint":{"tf":1.4142135623730952},"traits/lowering-to-logic.html#rust-traits-and-logic":{"tf":2.0},"traits/lowering-rules.html#lowering-function-and-constant-declarations":{"tf":1.0},"traits/wf.html#well-formedness-checking":{"tf":1.4142135623730952},"traits/lowering-rules.html#lowering-traits":{"tf":1.0},"diag.html#lint-groups":{"tf":1.4142135623730952},"variance.html#the-algorithm":{"tf":1.4142135623730952},"traits/lowering-rules.html#trait-header":{"tf":1.0},"traits/lowering-rules.html#associated-type-declarations":{"tf":1.7320508075688773},"traits/associated-types.html#associated-type-projection-and-normalization":{"tf":1.0},"compiletest.html#introduction":{"tf":1.0},"appendix/code-index.html#appendix-d-code-index":{"tf":1.0},"appendix/glossary.html#appendix-c-glossary":{"tf":1.4142135623730952},"traits/associated-types.html#projection-equality":{"tf":1.0},"compiletest.html#adding-a-new-header-command":{"tf":2.0},"ty.html#the-tcx-and-how-it-uses-lifetimes":{"tf":1.0},"mir/regionck.html#what-is-a-universe":{"tf":1.0}},"df":18,"e":{"docs":{},"df":0,"_":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{"diag.html#edition-gated-lints":{"tf":1.4142135623730952},"diag.html#declaring-a-lint":{"tf":1.4142135623730952}},"df":2}}}}}}}}}}},"i":{"docs":{},"df":0,"v":{"docs":{},"df":0,"i":{"docs":{},"df":0,"d":{"docs":{"method-lookup.html#method-lookup":{"tf":1.0}},"df":1},"s":{"docs":{"high-level-overview.html#crate-structure":{"tf":1.4142135623730952},"method-lookup.html#method-lookup":{"tf":1.0}},"df":2}}},"d":{"docs":{},"df":0,"n":{"docs":{},"df":0,"'":{"docs":{},"df":0,"t":{"docs":{"traits/lowering-to-logic.html#rust-traits-and-logic":{"tf":1.0},"traits/lowering-rules.html#lowering-function-and-constant-declarations":{"tf":1.0},"variance.html#variance-and-associated-types":{"tf":1.0},"traits/lowering-rules.html#function-and-constant-values":{"tf":1.0}},"df":4}}}},"c":{"docs":{},"df":0,"t":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{"traits/chalk-overview.html#lowering":{"tf":1.0}},"df":1}},"i":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{"variance.html#trait-variance-and-vtable-resolution":{"tf":1.0},"variance.html#addendum-variance-on-traits":{"tf":1.0},"variance.html#variance-and-associated-types":{"tf":1.7320508075688773}},"df":3}}}}}}}},"s":{"docs":{},"df":0,"a":{"docs":{},"df":0,"b":{"docs":{},"df":0,"l":{"docs":{"compiler-debugging.html#debugging-llvm":{"tf":1.0},"tests/adding.html#header-commands-configuring-rustc":{"tf":1.0}},"df":2}},"p":{"docs":{},"df":0,"p":{"docs":{},"df":0,"e":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{"compiler-debugging.html#debugging-llvm":{"tf":1.0},"appendix/stupid-stats.html#overview-of-the-compilation-process":{"tf":1.0}},"df":2}}}}},"l":{"docs":{},"df":0,"l":{"docs":{},"df":0,"o":{"docs":{},"df":0,"w":{"docs":{"traits/goals-and-clauses.html#coinductive-goals":{"tf":1.0}},"df":1}}}}},"t":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{},"df":0,"b":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{"tests/intro.html#other-tests":{"tf":1.0},"query.html#how-the-compiler-executes-a-query":{"tf":1.0},"compiletest.html#adding-a-new-header-command":{"tf":1.4142135623730952},"conventions.html#copyright-notice":{"tf":1.4142135623730952}},"df":4}}}}},"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{"traits/goals-and-clauses.html#domain-goals":{"tf":1.0},"ty.html#the-tcx-and-how-it-uses-lifetimes":{"tf":1.7320508075688773},"type-checking.html#type-collection":{"tf":1.0},"traits/caching.html#where-clauses-and-the-local-vs-global-cache":{"tf":1.0},"traits/canonicalization.html#canonicalization":{"tf":1.0},"tests/intro.html#compiletest-test-suites":{"tf":1.0},"mir/regionck.html#another-example":{"tf":1.4142135623730952},"high-level-overview.html#the-main-stages-of-compilation":{"tf":1.0}},"df":8}}}},"c":{"docs":{},"df":0,"h":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"k":{"docs":{"tests/intro.html#other-tests":{"tf":1.4142135623730952}},"df":1}}}}}},"c":{"docs":{},"df":0,"u":{"docs":{},"df":0,"s":{"docs":{},"df":0,"s":{"docs":{"rustdoc.html#the-walking-tour-of-rustdoc":{"tf":1.0},"traits/lowering-rules.html#associated-type-declarations":{"tf":1.0},"query.html#queries-demand-driven-compilation":{"tf":1.0},"traits/canonicalization.html#canonicalizing-the-query-result":{"tf":1.0},"traits/associated-types.html#integration-with-unification":{"tf":1.0},"type-inference.html#subtyping-obligations":{"tf":1.0},"traits/goals-and-clauses.html#domain-goals":{"tf":1.0},"mir/passes.html#stealing":{"tf":1.0}},"df":8}}},"i":{"docs":{},"df":0,"p":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{"type-inference.html#snapshots":{"tf":1.0}},"df":1}}}}},"r":{"docs":{},"df":0,"i":{"docs":{},"df":0,"m":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{"const-eval.html#constant-evaluation":{"tf":1.4142135623730952}},"df":1}}}}}},"k":{"docs":{"incremental-compilation.html#the-try-mark-green-algorithm":{"tf":1.0},"query.html#queries-demand-driven-compilation":{"tf":1.0}},"df":2},"p":{"docs":{},"df":0,"o":{"docs":{},"df":0,"s":{"docs":{"type-inference.html#creating-an-inference-context":{"tf":1.0}},"df":1}},"a":{"docs":{},"df":0,"t":{"docs":{},"df":0,"c":{"docs":{},"df":0,"h":{"docs":{"variance.html#variance-and-object-types":{"tf":1.4142135623730952},"method-lookup.html#candidate-assembly":{"tf":1.0}},"df":2}}}},"l":{"docs":{},"df":0,"a":{"docs":{},"df":0,"y":{"docs":{"diag.html#suggestions":{"tf":1.0},"ty.html#beyond-types-other-kinds-of-arena-allocated-data-structures":{"tf":1.4142135623730952},"traits/goals-and-clauses.html#domain-goals":{"tf":1.0},"rustdoc.html#cheat-sheet":{"tf":1.0},"diag.html#span":{"tf":1.0}},"df":5,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"f":{"docs":{},"df":0,"m":{"docs":{},"df":0,"t":{"docs":{"macro-expansion.html#example":{"tf":1.0}},"df":1}}}}}}}}}},"a":{"docs":{},"df":0,"m":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{"high-level-overview.html#crate-structure":{"tf":1.0}},"df":1}}}},"g":{"docs":{},"df":0,"n":{"docs":{},"df":0,"o":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{"diag.html#emitting-diagnostics":{"tf":1.0},"appendix/code-index.html#appendix-d-code-index":{"tf":1.7320508075688773}},"df":2,"i":{"docs":{},"df":0,"c":{"docs":{},"df":0,"b":{"docs":{},"df":0,"u":{"docs":{},"df":0,"i":{"docs":{},"df":0,"l":{"docs":{},"df":0,"d":{"docs":{"query.html#cycles-between-queries":{"tf":1.0},"diag.html#suggestions":{"tf":1.0},"diag.html#error-messages":{"tf":1.7320508075688773},"appendix/code-index.html#appendix-d-code-index":{"tf":1.0}},"df":4}}}}},"s":{"docs":{},"df":0,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"g":{"docs":{},"df":0,"i":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"r":{"docs":{},"df":0,"y":{"docs":{},"df":0,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"g":{"docs":{},"df":0,"i":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.4142135623730952}},"df":1}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"r":{"docs":{"tests/adding.html#normalization":{"tf":1.0}},"df":1,"t":{"docs":{},"df":0,"i":{"docs":{"incremental-compilation.html#the-try-mark-green-algorithm":{"tf":1.0}},"df":1}},"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{"appendix/glossary.html#appendix-c-glossary":{"tf":1.0},"traits/lowering-rules.html#trait-header":{"tf":1.0},"tests/running.html#running-an-individual-test":{"tf":1.0},"compiletest.html#introduction":{"tf":1.0}},"df":4,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{"how-to-build-and-run.html#creating-a-rustup-toolchain":{"tf":1.0},"mir/passes.html#seeing-how-the-mir-changes-as-the-compiler-executes":{"tf":1.0},"how-to-build-and-run.html#running-xpy-and-building-a-stage1-compiler":{"tf":1.0},"tests/adding.html#naming-your-test":{"tf":2.0},"tests/adding.html#normalization":{"tf":1.0},"high-level-overview.html#crate-structure":{"tf":1.4142135623730952},"compiletest.html#adding-a-new-header-command":{"tf":1.0},"how-to-build-and-run.html#other-xpy-commands":{"tf":1.0},"incrcomp-debugging.html#dumping-the-graph":{"tf":1.0},"rustdoc.html#hot-potato":{"tf":1.0},"conventions.html#copyright-notice":{"tf":1.0},"tests/intro.html#other-tests":{"tf":1.0},"tests/intro.html#compiletest-test-suites":{"tf":1.4142135623730952}},"df":13}}},"l":{"docs":{},"df":0,"i":{"docs":{"traits/associated-types.html#skolemized-associated-types":{"tf":1.0},"rustdoc.html#the-walking-tour-of-rustdoc":{"tf":1.0},"traits/hrtb.html#higher-ranked-trait-obligations":{"tf":1.0},"diag.html#error-messages":{"tf":1.0},"compiler-debugging.html#debugging-llvm":{"tf":1.0},"mir/passes.html#stealing":{"tf":1.4142135623730952},"const-eval.html#constant-evaluation":{"tf":1.4142135623730952},"appendix/stupid-stats.html#overview-of-the-compilation-process":{"tf":1.0},"traits/specialization.html#specialization":{"tf":1.0},"type-inference.html#snapshots":{"tf":1.0},"rustdoc.html#from-clean-to-crate":{"tf":1.0},"ty.html#import-conventions":{"tf":1.0},"miri.html#interpretation":{"tf":1.0},"rustdoc.html#from-soup-to-nuts":{"tf":1.4142135623730952},"miri.html#miri":{"tf":1.0},"traits/lowering-rules.html#lowering-where-clauses":{"tf":1.0},"traits/canonical-queries.html#the-traditional-interactive-prolog-query":{"tf":1.0},"mir/index.html#mir-data-types":{"tf":1.0}},"df":18}}}}},"/":{"docs":{},"df":0,"l":{"docs":{},"df":0,"o":{"docs":{},"df":0,"w":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"_":{"docs":{},"df":0,"i":{"docs":{},"df":0,"m":{"docs":{},"df":0,"p":{"docs":{},"df":0,"l":{"docs":{},"df":0,".":{"docs":{},"df":0,"r":{"docs":{},"df":0,"s":{"docs":{},"df":0,":":{"docs":{},"df":0,"1":{"docs":{},"df":0,"5":{"docs":{},"df":0,":":{"docs":{},"df":0,"1":{"docs":{"traits/lowering-module.html#unit-tests":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}}},"f":{"docs":{},"df":0,"f":{"docs":{"tests/adding.html#guide-to-the-ui-tests":{"tf":1.0}},"df":1,"e":{"docs":{},"df":0,"r":{"docs":{"diag.html#error-messages":{"tf":1.0},"appendix/stupid-stats.html#appendix-a-a-tutorial-on-creating-a-drop-in-replacement-for-rustc":{"tf":1.0},"conventions.html#how-to-structure-your-pr":{"tf":1.0},"compiler-debugging.html#logging-etiquette":{"tf":1.0},"name-resolution.html#scopes-and-ribs":{"tf":1.4142135623730952},"ty.html#the-tcx-and-how-it-uses-lifetimes":{"tf":1.0},"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.4142135623730952},"traits/canonical-queries.html#a-trait-query-in-rustc":{"tf":1.0},"traits/canonicalization.html#canonicalizing-the-query":{"tf":1.0},"macro-expansion.html#the-macro-parser":{"tf":1.0},"name-resolution.html#namespaces":{"tf":1.7320508075688773},"mir/visitor.html#traversal":{"tf":1.0},"tests/intro.html#testing-infrastructure":{"tf":1.0},"compiletest.html#introduction":{"tf":1.0},"tests/adding.html#revisions":{"tf":1.0},"traits/lowering-rules.html#trait-header":{"tf":1.0},"type-checking.html#type-collection":{"tf":1.7320508075688773},"tests/adding.html#normalization":{"tf":1.0},"traits/index.html#trait-solving-new-style":{"tf":1.0},"variance.html#variance-and-object-types":{"tf":1.0},"mir/index.html#key-mir-vocabulary":{"tf":2.0},"compiletest.html#implementing-the-behavior-change":{"tf":1.0},"traits/goals-and-clauses.html#domain-goals":{"tf":1.0},"appendix/stupid-stats.html#compilercalls":{"tf":1.0},"ty.html#allocating-and-working-with-types":{"tf":1.0},"compiler-debugging.html#debugging-llvm":{"tf":1.0},"rustdoc.html#dotting-is-and-crossing-ts":{"tf":1.0},"traits/chalk-overview.html#intermediate-representation-ir":{"tf":1.0},"type-inference.html#region-constraints":{"tf":1.0},"miri.html#interpretation":{"tf":1.0},"tests/intro.html#the-compiler-testing-framework":{"tf":1.0},"type-inference.html#inference-variables":{"tf":1.0}},"df":32}},"i":{"docs":{},"df":0,"c":{"docs":{},"df":0,"u":{"docs":{},"df":0,"l":{"docs":{},"df":0,"t":{"docs":{"tests/adding.html#what-kind-of-test-should-i-add":{"tf":1.0}},"df":1}}}}}}}},"o":{"docs":{"type-inference.html#enforcing-equality--subtyping":{"tf":1.0},"appendix/glossary.html#appendix-c-glossary":{"tf":1.0},"mir/regionck.html#skolemization-and-outlives-constraints":{"tf":1.0},"compiler-debugging.html#getting-logging-output":{"tf":1.0},"method-lookup.html#method-lookup":{"tf":1.0},"appendix/stupid-stats.html#what-next":{"tf":1.0},"traits/canonical-queries.html#canonical-queries":{"tf":1.0},"type-inference.html#creating-an-inference-context":{"tf":1.0},"traits/canonicalization.html#processing-the-canonicalized-query-result":{"tf":1.0},"tests/intro.html#compiletest-test-suites":{"tf":1.0},"how-to-build-and-run.html#running-xpy-and-building-a-stage1-compiler":{"tf":1.0},"query.html#queries-demand-driven-compilation":{"tf":1.0},"mir/regionck.html#mir-based-region-checking-nll":{"tf":1.0},"mir/borrowck.html#mir-borrow-check":{"tf":1.0},"tests/running.html#running-a-subset-of-the-test-suites":{"tf":1.0},"conventions.html#how-to-structure-your-pr":{"tf":1.0},"ty.html#allocating-and-working-with-types":{"tf":1.0}},"df":17,"z":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{"compiletest.html#adding-a-new-header-command":{"tf":1.0}},"df":1}}},"w":{"docs":{},"df":0,"n":{"docs":{"appendix/background.html#what-is-a-control-flow-graph":{"tf":1.0},"name-resolution.html#overall-strategy":{"tf":1.0},"compiler-debugging.html#getting-logging-output":{"tf":1.0},"mir/regionck.html#another-example":{"tf":1.0},"compiler-debugging.html#logging-etiquette":{"tf":1.4142135623730952},"traits/canonicalization.html#canonicalization":{"tf":1.0},"incrcomp-debugging.html#tracking-down-incorrect-edges":{"tf":1.4142135623730952},"traits/specialization.html#specialization":{"tf":1.0},"method-lookup.html#candidate-search":{"tf":1.4142135623730952},"traits/resolution.html#candidate-assembly":{"tf":1.0},"traits/goals-and-clauses.html#domain-goals":{"tf":1.0}},"df":11,"l":{"docs":{},"df":0,"o":{"docs":{},"df":0,"a":{"docs":{},"df":0,"d":{"docs":{"how-to-build-and-run.html#running-xpy-and-building-a-stage1-compiler":{"tf":1.0}},"df":1}}}},"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"a":{"docs":{},"df":0,"m":{"docs":{"traits/resolution.html#selection":{"tf":1.0}},"df":1}}}}}}}},"c":{"docs":{"compiler-debugging.html#getting-logging-output":{"tf":1.0},"rustdoc.html#hot-potato":{"tf":2.0},"rustdoc.html#cheat-sheet":{"tf":2.23606797749979},"rustdoc.html#from-crate-to-clean":{"tf":1.4142135623730952},"diag.html#error-messages":{"tf":1.0},"tests/intro.html#other-tests":{"tf":1.0},"diag.html#declaring-a-lint":{"tf":1.0}},"df":7,"k":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"tests/intro.html#testing-with-docker-images":{"tf":2.0},"tests/intro.html#testing-on-emulators":{"tf":1.4142135623730952}},"df":2}}},"(":{"docs":{},"df":0,"n":{"docs":{},"df":0,"o":{"docs":{},"df":0,"_":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{"rustdoc.html#from-crate-to-clean":{"tf":1.0}},"df":1}}}}}}}},"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{"rustdoc.html#from-crate-to-clean":{"tf":1.0}},"df":1}}}}},"c":{"docs":{},"df":0,"f":{"docs":{},"df":0,"g":{"docs":{"rustdoc.html#hot-potato":{"tf":1.0}},"df":1}}},"h":{"docs":{},"df":0,"i":{"docs":{},"df":0,"d":{"docs":{},"df":0,"d":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{"rustdoc.html#hot-potato":{"tf":1.4142135623730952},"rustdoc.html#from-crate-to-clean":{"tf":1.0}},"df":2}}}}}}},"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{"rustdoc.html#cheat-sheet":{"tf":1.0},"rustdoc.html#from-clean-to-crate":{"tf":1.0},"tests/intro.html#other-tests":{"tf":1.0},"rustdoc.html#other-tricks-up-its-sleeve":{"tf":1.4142135623730952}},"df":4}}},"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"e":{"docs":{},"df":0,".":{"docs":{},"df":0,"r":{"docs":{"rustdoc.html#from-crate-to-clean":{"tf":1.0}},"df":1}}}}}},"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"x":{"docs":{},"df":0,"t":{"docs":{"rustdoc.html#from-soup-to-nuts":{"tf":2.0},"appendix/code-index.html#appendix-d-code-index":{"tf":1.0},"rustdoc.html#from-crate-to-clean":{"tf":1.4142135623730952}},"df":3}}}}}}},"u":{"docs":{},"df":0,"m":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{"tests/intro.html#compiletest-test-suites":{"tf":1.0},"rustdoc.html#other-tricks-up-its-sleeve":{"tf":1.7320508075688773},"rustdoc.html#from-clean-to-crate":{"tf":2.0},"appendix/glossary.html#appendix-c-glossary":{"tf":1.0},"tests/intro.html#other-tests":{"tf":1.7320508075688773},"about-this-guide.html#about-this-guide":{"tf":1.4142135623730952},"rustdoc.html#the-walking-tour-of-rustdoc":{"tf":1.7320508075688773},"appendix/code-index.html#appendix-d-code-index":{"tf":1.0},"rustdoc.html#from-crate-to-clean":{"tf":2.23606797749979},"compiler-debugging.html#debugging-llvm":{"tf":1.0},"high-level-overview.html#crate-structure":{"tf":1.0},"rustdoc.html#hot-potato":{"tf":3.0},"traits/lowering-rules.html#rule-names-and-cross-references":{"tf":1.0},"appendix/stupid-stats.html#appendix-a-a-tutorial-on-creating-a-drop-in-replacement-for-rustc":{"tf":1.0},"traits/index.html#trait-solving-new-style":{"tf":1.0}},"df":15}}}}}},"t":{"docs":{"rustdoc.html#dotting-is-and-crossing-ts":{"tf":1.0},"compiler-debugging.html#formatting-graphviz-output-dot-files":{"tf":1.7320508075688773}},"df":2},"_":{"docs":{},"df":0,"a":{"docs":{},"df":0,"1":{"docs":{},"df":0,"(":{"docs":{},"df":0,"&":{"docs":{},"df":0,"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"l":{"docs":{},"df":0,"f":{"docs":{"traits/resolution.html#candidate-assembly":{"tf":1.0}},"df":1}}}}}}}},"s":{"docs":{},"df":0,"o":{"docs":{},"df":0,"m":{"docs":{},"df":0,"e":{"docs":{},"df":0,"t":{"docs":{},"df":0,"h":{"docs":{"conventions.html#use-todo-comments-for-things-you-dont-want-to-forget":{"tf":1.0}},"df":1,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"g":{"docs":{},"df":0,"<":{"docs":{},"df":0,"t":{"docs":{"name-resolution.html#scopes-and-ribs":{"tf":1.0}},"df":1}}}}}}}}}}},"b":{"docs":{},"df":0,"(":{"docs":{},"df":0,"&":{"docs":{},"df":0,"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"l":{"docs":{},"df":0,"f":{"docs":{"traits/resolution.html#candidate-assembly":{"tf":1.0}},"df":1}}}}}}}},"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"n":{"docs":{},"df":0,"'":{"docs":{},"df":0,"t":{"docs":{"name-resolution.html#scopes-and-ribs":{"tf":1.0},"tests/adding.html#guide-to-the-ui-tests":{"tf":1.0},"mir/visitor.html#mir-visitor":{"tf":1.0},"type-inference.html#enforcing-equality--subtyping":{"tf":1.0},"incrcomp-debugging.html#tracking-down-incorrect-edges":{"tf":1.0},"ty.html#the-tcx-and-how-it-uses-lifetimes":{"tf":1.0},"mir/regionck.html#what-is-a-universe":{"tf":1.4142135623730952},"tests/intro.html#testing-on-emulators":{"tf":1.0},"variance.html#variance-of-type-and-lifetime-parameters":{"tf":1.0},"high-level-overview.html#crate-structure":{"tf":1.0},"tests/running.html#running-a-subset-of-the-test-suites":{"tf":1.0},"traits/resolution.html#candidate-assembly":{"tf":1.0},"tests/adding.html#comment-explaining-what-the-test-is-about":{"tf":1.0},"traits/canonicalization.html#canonicalization":{"tf":1.0},"miri.html#miri":{"tf":1.0},"tests/running.html#running-an-individual-test":{"tf":1.0},"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.0},"macro-expansion.html#example":{"tf":1.0},"appendix/stupid-stats.html#compilercalls":{"tf":1.0},"compiler-debugging.html#debugging-llvm":{"tf":1.4142135623730952},"name-resolution.html#namespaces":{"tf":1.4142135623730952}},"df":21}}}}},"n":{"docs":{},"df":0,"'":{"docs":{},"df":0,"t":{"docs":{"traits/resolution.html#candidate-assembly":{"tf":1.0},"incrcomp-debugging.html#dumping-the-graph":{"tf":1.0},"query.html#adding-a-new-kind-of-query":{"tf":1.0},"mir/regionck.html#skolemization-and-outlives-constraints":{"tf":1.0},"appendix/stupid-stats.html#compilercalls":{"tf":1.0},"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":2.23606797749979},"traits/canonicalization.html#canonicalizing-the-query-result":{"tf":1.0},"incrcomp-debugging.html#tracking-down-incorrect-edges":{"tf":1.0},"mir/regionck.html#subtyping-and-skolemization":{"tf":1.0},"diag.html#suggestions":{"tf":1.0},"compiler-debugging.html#getting-a-backtrace":{"tf":1.4142135623730952},"traits/lowering-to-logic.html#type-checking-generic-functions-beyond-horn-clauses":{"tf":1.0},"variance.html#variance-and-object-types":{"tf":1.0},"traits/resolution.html#major-concepts":{"tf":1.0},"compiler-debugging.html#logging-etiquette":{"tf":1.0},"mir/index.html#key-mir-vocabulary":{"tf":1.0},"tests/intro.html#testing-with-docker-images":{"tf":1.0},"name-resolution.html#namespaces":{"tf":1.0},"incremental-compilation.html#the-try-mark-green-algorithm":{"tf":1.0},"traits/associated-types.html#projection-equality":{"tf":1.0},"traits/canonical-queries.html#examples":{"tf":1.0},"conventions.html#use-todo-comments-for-things-you-dont-want-to-forget":{"tf":1.0},"rustdoc.html#dotting-is-and-crossing-ts":{"tf":1.0},"traits/canonicalization.html#canonicalization":{"tf":1.0},"about-this-guide.html#about-this-guide":{"tf":1.0},"tests/running.html#running-tests":{"tf":1.0},"variance.html#variance-of-type-and-lifetime-parameters":{"tf":1.0},"traits/chalk-overview.html#lowering":{"tf":1.0},"mir/passes.html#stealing":{"tf":1.0},"compiler-debugging.html#getting-logging-output":{"tf":1.0},"query.html#cycles-between-queries":{"tf":1.0},"conventions.html#copyright-notice":{"tf":1.0},"rustdoc.html#from-soup-to-nuts":{"tf":1.0},"rustc-driver.html#a-note-on-lifetimes":{"tf":1.0}},"df":34}},"e":{"docs":{"tests/adding.html#revisions":{"tf":1.0},"traits/resolution.html#candidate-assembly":{"tf":1.4142135623730952},"ty.html#allocating-and-working-with-types":{"tf":1.0},"type-inference.html#snapshots":{"tf":1.4142135623730952},"how-to-build-and-run.html#running-xpy-and-building-a-stage1-compiler":{"tf":1.0},"rustc-driver.html#the-rustc-driver":{"tf":1.0},"mir/passes.html#stealing":{"tf":1.4142135623730952},"incremental-compilation.html#improvements-to-the-basic-algorithm":{"tf":1.0},"incremental-compilation.html#the-query-dag":{"tf":1.0},"tests/running.html#running-tests":{"tf":1.0},"traits/caching.html#where-clauses-and-the-local-vs-global-cache":{"tf":1.0},"traits/chalk-overview.html#well-formedness-checks":{"tf":1.0},"tests/adding.html#ignoring-tests":{"tf":1.0},"miri.html#interpretation":{"tf":1.0},"ty.html#the-tcx-and-how-it-uses-lifetimes":{"tf":1.0},"high-level-overview.html#the-main-stages-of-compilation":{"tf":1.0},"traits/hrtb.html#basic-matching-and-skolemization-leaks":{"tf":1.0},"mir/regionck.html#skolemization-and-outlives-constraints":{"tf":1.0},"traits/hrtb.html#higher-ranked-trait-obligations":{"tf":1.4142135623730952},"macro-expansion.html#the-macro-parser":{"tf":1.0},"method-lookup.html#steps":{"tf":1.0},"appendix/stupid-stats.html#overview-of-the-compilation-process":{"tf":1.4142135623730952},"const-eval.html#constant-evaluation":{"tf":1.0},"rustdoc.html#from-crate-to-clean":{"tf":1.0},"traits/resolution.html#confirmation":{"tf":1.0},"mir/regionck.html#final-example":{"tf":1.0},"miri.html#miri":{"tf":1.0},"mir/regionck.html#subtyping-and-skolemization":{"tf":1.0},"type-inference.html#lexical-region-resolution":{"tf":1.0},"the-parser.html#the-parser":{"tf":1.0},"appendix/stupid-stats.html#compilercalls":{"tf":1.7320508075688773},"traits/specialization.html#specialization":{"tf":1.0},"mir/index.html#key-mir-vocabulary":{"tf":1.0},"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.0},"query.html#how-the-compiler-executes-a-query":{"tf":1.0},"type-inference.html#extracting-region-constraints":{"tf":1.0}},"df":36}},"m":{"docs":{},"df":0,"a":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{"mir/regionck.html#representing-the-values-of-a-region-variable":{"tf":1.0},"traits/lowering-rules.html#lowering-rules":{"tf":1.0},"mir/regionck.html#back-to-our-example":{"tf":1.0},"traits/goals-and-clauses.html#domain-goals":{"tf":1.4142135623730952},"traits/lowering-rules.html#function-and-constant-values":{"tf":1.0},"traits/lowering-rules.html#trait-header":{"tf":1.0},"traits/lowering-rules.html#lowering-where-clauses":{"tf":1.0}},"df":7,"g":{"docs":{},"df":0,"o":{"docs":{"traits/goals-and-clauses.html#goals-and-clauses-meta-structure":{"tf":1.4142135623730952},"traits/goals-and-clauses.html#domain-goals":{"tf":1.4142135623730952}},"df":2}}}}}},"d":{"docs":{},"df":0,"g":{"docs":{},"df":0,"i":{"docs":{"mir/passes.html#stealing":{"tf":1.0}},"df":1}}},"u":{"docs":{},"df":0,"b":{"docs":{},"df":0,"l":{"docs":{"appendix/glossary.html#appendix-c-glossary":{"tf":1.4142135623730952}},"df":1},"t":{"docs":{"traits/associated-types.html#integration-with-unification":{"tf":1.0}},"df":1}}}},"f":{"docs":{"mir/regionck.html#skolemization-and-outlives-constraints":{"tf":1.0}},"df":1}}}},"breadcrumbs":{"root":{"docs":{},"df":0,"1":{"docs":{"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.4142135623730952},"mir/regionck.html#subtyping-and-skolemization":{"tf":2.6457513110645909},"name-resolution.html#namespaces":{"tf":1.0},"how-to-build-and-run.html#other-xpy-commands":{"tf":2.0},"compiletest.html#implementing-the-behavior-change":{"tf":1.4142135623730952},"mir/regionck.html#final-example":{"tf":2.449489742783178},"appendix/stupid-stats.html#overview-of-the-compilation-process":{"tf":1.0},"traits/canonicalization.html#canonicalizing-the-query-result":{"tf":1.7320508075688773},"mir/index.html#key-mir-vocabulary":{"tf":2.0},"mir/regionck.html#what-is-a-universe":{"tf":2.0},"miri.html#miri":{"tf":1.0},"tests/adding.html#header-commands-configuring-rustc":{"tf":1.4142135623730952},"mir/regionck.html#representing-the-values-of-a-region-variable":{"tf":1.4142135623730952},"tests/adding.html#editing-and-updating-the-reference-files":{"tf":1.0},"name-resolution.html#scopes-and-ribs":{"tf":1.4142135623730952},"mir/regionck.html#back-to-our-example":{"tf":1.7320508075688773},"traits/specialization.html#specialization":{"tf":1.0},"how-to-build-and-run.html#running-xpy-and-building-a-stage1-compiler":{"tf":2.23606797749979},"compiler-debugging.html#getting-a-backtrace":{"tf":1.0},"incremental-compilation.html#the-basic-algorithm":{"tf":1.0},"traits/canonicalization.html#canonicalization":{"tf":2.0},"tests/running.html#running-a-subset-of-the-test-suites":{"tf":2.23606797749979},"traits/canonicalization.html#processing-the-canonicalized-query-result":{"tf":1.4142135623730952},"mir/regionck.html#another-example":{"tf":1.7320508075688773},"mir/regionck.html#extending-the-universal-regions-check":{"tf":1.0},"variance.html#the-algorithm":{"tf":1.4142135623730952},"traits/chalk-overview.html#blog-posts":{"tf":1.0},"tests/running.html#running-an-individual-test":{"tf":1.0},"traits/canonicalization.html#canonicalizing-the-query":{"tf":1.0},"appendix/background.html#what-is-a-control-flow-graph":{"tf":2.8284271247461905},"high-level-overview.html#the-main-stages-of-compilation":{"tf":1.4142135623730952},"rustdoc.html#cheat-sheet":{"tf":1.4142135623730952},"compiletest.html#adding-a-new-header-command":{"tf":2.0},"traits/canonical-queries.html#examples":{"tf":1.4142135623730952},"compiler-debugging.html#getting-a-backtrace-for-errors":{"tf":1.7320508075688773}},"df":35,"8":{"docs":{},"df":0,"0":{"docs":{},"df":0,"6":{"docs":{},"df":0,"0":{"docs":{"tests/adding.html#comment-explaining-what-the-test-is-about":{"tf":1.0}},"df":1}}},"2":{"docs":{},"df":0,"9":{"docs":{},"df":0,"0":{"docs":{"traits/caching.html#where-clauses-and-the-local-vs-global-cache":{"tf":1.0}},"df":1}}}},"2":{"docs":{"miri.html#miri":{"tf":1.0},"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.0}},"df":2,"1":{"docs":{},"df":0,"1":{"docs":{"mir/index.html#the-mir-mid-level-ir":{"tf":1.0}},"df":1}},"3":{"docs":{},"df":0,"4":{"docs":{"tests/adding.html#naming-your-test":{"tf":1.0},"tests/running.html#running-an-individual-test":{"tf":1.4142135623730952}},"df":2,".":{"docs":{},"df":0,"r":{"docs":{"tests/running.html#running-an-individual-test":{"tf":1.0}},"df":1}},"5":{"docs":{},"df":0,".":{"docs":{},"df":0,"r":{"docs":{"tests/adding.html#naming-your-test":{"tf":1.4142135623730952}},"df":1}}}}}},"0":{"docs":{},"df":0,"0":{"docs":{"conventions.html#line-length":{"tf":1.0}},"df":1},"1":{"docs":{"compiletest.html#adding-a-new-header-command":{"tf":1.4142135623730952},"compiletest.html#implementing-the-behavior-change":{"tf":1.4142135623730952}},"df":2}},"i":{"docs":{},"df":0,"3":{"docs":{},"df":0,"2":{"docs":{"mir/index.html#key-mir-vocabulary":{"tf":1.0}},"df":1}}},".":{"docs":{},"df":0,"2":{"docs":{},"df":0,"5":{"docs":{},"df":0,".":{"docs":{},"df":0,"0":{"docs":{"how-to-build-and-run.html#creating-a-rustup-toolchain":{"tf":1.4142135623730952}},"df":1}}},"4":{"docs":{},"df":0,".":{"docs":{},"df":0,"0":{"docs":{"compiler-debugging.html#getting-a-backtrace-for-errors":{"tf":1.0}},"df":1}}}}},"6":{"docs":{"tests/adding.html#normalization":{"tf":1.0}},"df":1,"1":{"docs":{"mir/passes.html#seeing-how-the-mir-changes-as-the-compiler-executes":{"tf":1.0}},"df":1}}},"l":{"docs":{"mir/passes.html#seeing-how-the-mir-changes-as-the-compiler-executes":{"tf":1.0},"traits/canonicalization.html#processing-the-canonicalized-query-result":{"tf":1.0},"traits/canonicalization.html#canonicalizing-the-query-result":{"tf":1.0},"traits/canonicalization.html#canonicalizing-the-query":{"tf":1.0}},"df":4,"f":{"docs":{"tests/adding.html#normalization":{"tf":1.4142135623730952}},"df":1},"h":{"docs":{"macro-expansion.html#the-macro-parser":{"tf":1.4142135623730952}},"df":1,"s":{"docs":{},"df":0,":":{"docs":{},"df":0,"t":{"docs":{},"df":0,"t":{"docs":{"macro-expansion.html#the-macro-parser":{"tf":1.0}},"df":1}}}}},"o":{"docs":{},"df":0,"t":{"docs":{"rustdoc.html#the-walking-tour-of-rustdoc":{"tf":1.0},"conventions.html#how-to-structure-your-pr":{"tf":1.7320508075688773},"rustc-driver.html#a-note-on-lifetimes":{"tf":1.7320508075688773},"compiler-debugging.html#debugging-llvm":{"tf":1.0},"how-to-build-and-run.html#running-xpy-and-building-a-stage1-compiler":{"tf":1.0},"diag.html#declaring-a-lint":{"tf":1.0},"compiler-debugging.html#getting-logging-output":{"tf":1.7320508075688773},"traits/lowering-to-logic.html#type-checking-generic-functions-beyond-horn-clauses":{"tf":1.0},"tests/adding.html#naming-your-test":{"tf":1.0},"rustdoc.html#from-soup-to-nuts":{"tf":1.0},"macro-expansion.html#example":{"tf":1.0},"ty.html#the-tcx-and-how-it-uses-lifetimes":{"tf":1.0},"diag.html#emitting-diagnostics":{"tf":1.0},"diag.html#error-messages":{"tf":1.0},"mir/passes.html#seeing-how-the-mir-changes-as-the-compiler-executes":{"tf":1.0},"appendix/code-index.html#appendix-d-code-index":{"tf":1.0},"appendix/stupid-stats.html#appendix-a-a-tutorial-on-creating-a-drop-in-replacement-for-rustc":{"tf":1.0},"traits/associated-types.html#skolemized-associated-types":{"tf":1.0}},"df":18},"n":{"docs":{},"df":0,"g":{"docs":{"tests/intro.html#other-tests":{"tf":1.0},"mir/regionck.html#another-example":{"tf":1.0},"tests/running.html#running-tests":{"tf":1.0},"incremental-compilation.html#footnotes":{"tf":1.0},"appendix/stupid-stats.html#what-next":{"tf":1.4142135623730952},"traits/canonicalization.html#canonicalization":{"tf":1.0},"traits/lowering-to-logic.html#type-checking-generic-functions-beyond-horn-clauses":{"tf":1.0},"mir/regionck.html#skolemization-and-outlives-constraints":{"tf":1.0},"tests/adding.html#naming-your-test":{"tf":1.0},"traits/specialization.html#specialization":{"tf":1.0},"type-inference.html#snapshots":{"tf":1.0},"ty.html#the-tcx-and-how-it-uses-lifetimes":{"tf":1.0}},"df":12,"e":{"docs":{},"df":0,"r":{"docs":{"tests/adding.html#comment-explaining-what-the-test-is-about":{"tf":1.0},"incrcomp-debugging.html#tracking-down-incorrect-edges":{"tf":1.0},"traits/canonical-queries.html#examples":{"tf":1.0},"incremental-compilation.html#the-query-dag":{"tf":1.0},"variance.html#variance-and-associated-types":{"tf":1.0},"traits/caching.html#where-clauses-and-the-local-vs-global-cache":{"tf":1.0}},"df":6}}}},"u":{"docs":{},"df":0,"d":{"docs":{},"df":0,"_":{"docs":{},"df":0,"c":{"docs":{},"df":0,"l":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{"traits/goals-and-clauses.html#domain-goals":{"tf":1.0}},"df":1,"e":{"docs":{},"df":0,"<":{"docs":{},"df":0,"t":{"docs":{"traits/goals-and-clauses.html#domain-goals":{"tf":1.0}},"df":1}}}}}}}}}},"g":{"docs":{"compiler-debugging.html#expensive-operations-in-logs":{"tf":3.1622776601683797},"compiler-debugging.html#getting-logging-output":{"tf":3.872983346207417},"how-to-build-and-run.html#create-a-configtoml":{"tf":1.0},"compiler-debugging.html#logging-etiquette":{"tf":1.4142135623730952}},"df":4,"i":{"docs":{},"df":0,"c":{"docs":{"traits/associated-types.html#projection-equality":{"tf":1.0},"traits/bibliography.html#bibliography":{"tf":1.4142135623730952},"traits/lowering-to-logic.html#rust-traits-and-logic":{"tf":2.0},"traits/goals-and-clauses.html#goals-and-clauses":{"tf":1.7320508075688773},"traits/implied-bounds.html#implied-bounds":{"tf":1.0},"traits/chalk-overview.html#lowering":{"tf":1.4142135623730952},"traits/chalk-overview.html#blog-posts":{"tf":1.0},"name-resolution.html#name-resolution":{"tf":1.0},"traits/associated-types.html#associated-type-projection-and-normalization":{"tf":1.4142135623730952},"rustdoc.html#from-crate-to-clean":{"tf":1.0},"traits/associated-types.html#skolemized-associated-types":{"tf":1.0},"traits/goals-and-clauses.html#goals-and-clauses-meta-structure":{"tf":1.4142135623730952},"traits/lowering-to-logic.html#type-checking-generic-functions-beyond-horn-clauses":{"tf":1.4142135623730952},"type-inference.html#inference-variables":{"tf":1.0},"mir/regionck.html#what-is-a-universe":{"tf":1.0},"traits/associated-types.html#equality-and-associated-types":{"tf":1.0},"traits/chalk-overview.html#an-overview-of-chalk":{"tf":1.7320508075688773},"traits/index.html#trait-solving-new-style":{"tf":1.4142135623730952},"traits/lowering-to-logic.html#lowering-to-logic":{"tf":2.0},"traits/goals-and-clauses.html#incomplete-chapter":{"tf":1.0},"traits/associated-types.html#integration-with-unification":{"tf":1.0},"appendix/glossary.html#appendix-c-glossary":{"tf":1.0},"traits/lowering-to-logic.html#type-checking-normal-functions":{"tf":1.0},"traits/goals-and-clauses.html#domain-goals":{"tf":1.0},"traits/regions.html#region-constraints":{"tf":1.0},"traits/chalk-overview.html#intermediate-representation-ir":{"tf":1.0},"traits/goals-and-clauses.html#coinductive-goals":{"tf":1.0}},"df":27}},"g":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"compiler-debugging.html#getting-logging-output":{"tf":1.4142135623730952}},"df":1}}}},"c":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{"compiler-debugging.html#getting-logging-output":{"tf":2.0},"traits/caching.html#where-clauses-and-the-local-vs-global-cache":{"tf":2.449489742783178},"name-resolution.html#scopes-and-ribs":{"tf":1.7320508075688773},"type-checking.html#type-collection":{"tf":1.0},"how-to-build-and-run.html#creating-a-rustup-toolchain":{"tf":1.0},"mir/index.html#key-mir-vocabulary":{"tf":1.7320508075688773},"ty.html#the-tcx-and-how-it-uses-lifetimes":{"tf":1.0},"mir/borrowck.html#major-phases-of-the-borrow-checker":{"tf":1.0},"mir/index.html#mir-data-types":{"tf":2.23606797749979},"miri.html#allocations":{"tf":1.4142135623730952},"rustdoc.html#cheat-sheet":{"tf":1.4142135623730952},"appendix/glossary.html#appendix-c-glossary":{"tf":1.4142135623730952},"how-to-build-and-run.html#running-xpy-and-building-a-stage1-compiler":{"tf":1.0},"mir/passes.html#mir-passes":{"tf":1.0},"compiler-debugging.html#debugging-llvm":{"tf":1.0},"rustc-driver.html#a-note-on-lifetimes":{"tf":1.4142135623730952},"miri.html#miri":{"tf":1.0},"miri.html#interpretation":{"tf":2.0},"query.html#how-the-compiler-executes-a-query":{"tf":2.449489742783178},"appendix/background.html#what-is-a-free-region-or-a-free-variable-what-about-bound-region":{"tf":1.0}},"df":20,"_":{"docs":{},"df":0,"d":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"l":{"docs":{"mir/index.html#mir-data-types":{"tf":1.0}},"df":1}}}}}},"t":{"docs":{"traits/lowering-module.html#unit-tests":{"tf":1.0},"mir/regionck.html#representing-the-values-of-a-region-variable":{"tf":1.4142135623730952},"miri.html#miri":{"tf":1.4142135623730952},"compiletest.html#implementing-the-behavior-change":{"tf":1.0},"rustdoc.html#other-tricks-up-its-sleeve":{"tf":1.0},"tests/adding.html#error-annotations":{"tf":1.0},"traits/specialization.html#specialization":{"tf":1.0},"tests/intro.html#compiletest-test-suites":{"tf":1.0},"rustdoc.html#cheat-sheet":{"tf":1.4142135623730952},"appendix/glossary.html#appendix-c-glossary":{"tf":1.0},"diag.html#span":{"tf":1.0},"appendix/code-index.html#appendix-d-code-index":{"tf":1.0},"mir/index.html#key-mir-vocabulary":{"tf":1.7320508075688773},"compiletest.html#adding-a-new-test-file":{"tf":1.0},"compiler-debugging.html#getting-logging-output":{"tf":1.0},"mir/regionck.html#mir-based-region-checking-nll":{"tf":1.0}},"df":16}}},"v":{"docs":{},"df":0,"e":{"docs":{"appendix/glossary.html#appendix-c-glossary":{"tf":1.0},"traits/chalk-overview.html#an-overview-of-chalk":{"tf":1.0},"traits/chalk-overview.html#parsing":{"tf":1.0}},"df":3}},"w":{"docs":{"conventions.html#prefer-exhaustive-matches":{"tf":1.0},"compiletest.html#adding-a-new-header-command":{"tf":1.4142135623730952}},"df":2,"e":{"docs":{},"df":0,"r":{"docs":{"traits/chalk-overview.html#blog-posts":{"tf":1.0},"traits/lowering-rules.html#lowering-trait-items":{"tf":1.4142135623730952},"traits/chalk-overview.html#rules":{"tf":1.0},"traits/goals-and-clauses.html#goals-and-clauses-meta-structure":{"tf":1.0},"traits/lowering-rules.html#lowering-where-clauses":{"tf":1.4142135623730952},"traits/lowering-rules.html#lowering-traits":{"tf":1.4142135623730952},"traits/lowering-module.html#the-lowering-module-in-rustc":{"tf":2.0},"name-resolution.html#namespaces":{"tf":1.0},"traits/lowering-rules.html#lowering-impl-items":{"tf":1.4142135623730952},"traits/associated-types.html#projection-equality":{"tf":1.4142135623730952},"traits/lowering-rules.html#lowering-impls":{"tf":1.7320508075688773},"traits/lowering-module.html#the--program_clauses_for--query":{"tf":1.0},"rustc-driver.html#the-rustc-driver":{"tf":1.0},"traits/goals-and-clauses.html#incomplete-chapter":{"tf":1.0},"traits/lowering-to-logic.html#lowering-to-logic":{"tf":1.4142135623730952},"high-level-overview.html#the-main-stages-of-compilation":{"tf":2.0},"traits/lowering-rules.html#lowering-function-and-constant-declarations":{"tf":1.4142135623730952},"traits/lowering-rules.html#lowering-rules":{"tf":1.7320508075688773},"traits/goals-and-clauses.html#coinductive-goals":{"tf":1.0},"traits/lowering-module.html#unit-tests":{"tf":1.0},"traits/regions.html#region-constraints":{"tf":1.0},"traits/chalk-overview.html#an-overview-of-chalk":{"tf":1.7320508075688773},"traits/lowering-rules.html#transforming-the-lowered-where-clauses":{"tf":1.7320508075688773},"traits/lowering-rules.html#rule-names-and-cross-references":{"tf":1.0},"traits/associated-types.html#skolemized-associated-types":{"tf":1.0},"traits/implied-bounds.html#implied-bounds":{"tf":1.4142135623730952},"traits/lowering-rules.html#notation":{"tf":1.0},"traits/goals-and-clauses.html#goals-and-clauses":{"tf":1.4142135623730952},"traits/associated-types.html#equality-and-associated-types":{"tf":1.0},"traits/associated-types.html#associated-type-projection-and-normalization":{"tf":1.4142135623730952},"traits/goals-and-clauses.html#domain-goals":{"tf":1.4142135623730952},"traits/associated-types.html#integration-with-unification":{"tf":1.0},"traits/chalk-overview.html#well-formedness-checks":{"tf":1.0},"traits/chalk-overview.html#lowering":{"tf":2.23606797749979},"traits/index.html#trait-solving-new-style":{"tf":1.7320508075688773},"appendix/glossary.html#appendix-c-glossary":{"tf":1.0}},"df":36,"_":{"docs":{},"df":0,"i":{"docs":{},"df":0,"m":{"docs":{},"df":0,"p":{"docs":{},"df":0,"l":{"docs":{"traits/lowering-module.html#unit-tests":{"tf":1.0}},"df":1}}}}},"w":{"docs":{},"df":0,"h":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"l":{"docs":{},"df":0,"a":{"docs":{},"df":0,"u":{"docs":{},"df":0,"s":{"docs":{"traits/lowering-rules.html#notation":{"tf":1.0}},"df":1}}}}}}}}}}}}},"o":{"docs":{},"df":0,"k":{"docs":{"ty.html#allocating-and-working-with-types":{"tf":1.4142135623730952},"traits/lowering-to-logic.html#type-checking-normal-functions":{"tf":1.0},"tests/intro.html#testing-on-emulators":{"tf":1.0},"mir/visitor.html#mir-visitor":{"tf":1.0},"compiler-debugging.html#getting-logging-output":{"tf":1.4142135623730952},"appendix/stupid-stats.html#overview-of-the-compilation-process":{"tf":1.0},"traits/caching.html#where-clauses-and-the-local-vs-global-cache":{"tf":1.0},"incrcomp-debugging.html#tracking-down-incorrect-edges":{"tf":1.0},"traits/caching.html#an-example":{"tf":1.0},"query.html#adding-a-new-kind-of-query":{"tf":1.7320508075688773},"miri.html#miri":{"tf":1.0},"query.html#cycles-between-queries":{"tf":1.0},"traits/associated-types.html#projection-equality":{"tf":1.0},"traits/canonical-queries.html#a-trait-query-in-rustc":{"tf":1.0},"traits/chalk-overview.html#parsing":{"tf":1.0},"traits/lowering-module.html#unit-tests":{"tf":1.0},"compiletest.html#adding-a-new-header-command":{"tf":1.7320508075688773},"diag.html#span":{"tf":1.0},"traits/associated-types.html#skolemized-associated-types":{"tf":1.0},"rustdoc.html#from-clean-to-crate":{"tf":1.0},"rustdoc.html#dotting-is-and-crossing-ts":{"tf":1.4142135623730952},"mir/regionck.html#final-example":{"tf":1.0},"traits/canonical-queries.html#canonical-queries":{"tf":1.0},"query.html#how-the-compiler-executes-a-query":{"tf":1.4142135623730952},"traits/specialization.html#specialization":{"tf":1.0},"macro-expansion.html#the-macro-parser":{"tf":1.0},"mir/index.html#key-mir-vocabulary":{"tf":2.23606797749979},"traits/canonicalization.html#processing-the-canonicalized-query-result":{"tf":1.0},"compiler-debugging.html#getting-a-backtrace":{"tf":1.4142135623730952},"traits/lowering-to-logic.html#lowering-to-logic":{"tf":1.0},"incrcomp-debugging.html#dumping-the-graph":{"tf":1.0}},"df":31,"u":{"docs":{},"df":0,"p":{"docs":{"method-lookup.html#method-lookup":{"tf":2.449489742783178},"hir.html#the-hir-map":{"tf":1.4142135623730952},"hir.html#out-of-band-storage-and-the--crate--type":{"tf":1.4142135623730952},"traits/caching.html#where-clauses-and-the-local-vs-global-cache":{"tf":1.0},"traits/caching.html#an-example":{"tf":1.0}},"df":5}}},"p":{"docs":{"name-resolution.html#scopes-and-ribs":{"tf":1.0},"diag.html#declaring-a-lint":{"tf":2.23606797749979},"appendix/background.html#what-is-a-control-flow-graph":{"tf":1.0},"hir.html#the-hir":{"tf":1.4142135623730952},"query.html#cycles-between-queries":{"tf":1.0}},"df":5,"\"":{"docs":{},"df":0,".":{"docs":{},"df":0,"t":{"docs":{},"df":0,"o":{"docs":{},"df":0,"_":{"docs":{},"df":0,"o":{"docs":{},"df":0,"w":{"docs":{},"df":0,"n":{"docs":{"diag.html#declaring-a-lint":{"tf":1.0}},"df":1}}}}}}}}}},"a":{"docs":{},"df":0,"d":{"docs":{"rustdoc.html#cheat-sheet":{"tf":1.0},"mir/passes.html#stealing":{"tf":1.0},"rustdoc.html#from-soup-to-nuts":{"tf":1.0},"incremental-compilation.html#the-try-mark-green-algorithm":{"tf":1.4142135623730952},"query.html#queries-demand-driven-compilation":{"tf":1.0},"query.html#how-the-compiler-executes-a-query":{"tf":1.0}},"df":6,"_":{"docs":{},"df":0,"f":{"docs":{},"df":0,"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"m":{"docs":{"compiletest.html#adding-a-new-header-command":{"tf":1.0}},"df":1}}}}}},"n":{"docs":{"mir/borrowck.html#major-phases-of-the-borrow-checker":{"tf":1.0}},"df":1}}},"i":{"docs":{"rustdoc.html#from-crate-to-clean":{"tf":1.0}},"df":1,"m":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{"conventions.html#line-length":{"tf":1.4142135623730952},"variance.html#addendum-variance-on-traits":{"tf":1.0},"tests/running.html#running-a-subset-of-the-test-suites":{"tf":1.0},"type-inference.html#subtyping-obligations":{"tf":1.0},"variance.html#the-algorithm":{"tf":1.0},"variance.html#dependency-graph-management":{"tf":1.0},"high-level-overview.html#crate-structure":{"tf":1.0}},"df":7}}},"g":{"docs":{},"df":0,"h":{"docs":{},"df":0,"t":{"docs":{"method-lookup.html#candidate-assembly":{"tf":1.0}},"df":1,"l":{"docs":{},"df":0,"i":{"docs":{"traits/lowering-to-logic.html#source":{"tf":1.0},"high-level-overview.html#the-main-stages-of-compilation":{"tf":1.0}},"df":2}}}}},"c":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"s":{"docs":{"conventions.html#copyright-notice":{"tf":2.23606797749979},"compiletest.html#adding-a-new-header-command":{"tf":2.23606797749979},"conventions.html#using-crates-from-cratesio":{"tf":1.0}},"df":3}}}},"b":{"docs":{},"df":0,"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{"tests/intro.html#other-tests":{"tf":1.4142135623730952},"rustdoc.html#the-walking-tour-of-rustdoc":{"tf":1.4142135623730952},"how-to-build-and-run.html#running-xpy-and-building-a-stage1-compiler":{"tf":1.4142135623730952},"high-level-overview.html#crate-structure":{"tf":1.0},"rustdoc.html#cheat-sheet":{"tf":1.4142135623730952},"rustc-driver.html#the-rustc-driver":{"tf":1.4142135623730952},"tests/intro.html#testing-on-emulators":{"tf":1.0},"appendix/stupid-stats.html#overview-of-the-compilation-process":{"tf":1.0}},"df":8}}},"u":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"c":{"docs":{"appendix/stupid-stats.html#appendix-a-a-tutorial-on-creating-a-drop-in-replacement-for-rustc":{"tf":1.4142135623730952},"appendix/stupid-stats.html#overview-of-the-compilation-process":{"tf":1.0}},"df":2,"/":{"docs":{},"df":0,"d":{"docs":{},"df":0,"e":{"docs":{},"df":0,"p":{"docs":{},"df":0,"_":{"docs":{},"df":0,"g":{"docs":{},"df":0,"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"p":{"docs":{},"df":0,"h":{"docs":{},"df":0,"/":{"docs":{},"df":0,"d":{"docs":{},"df":0,"e":{"docs":{},"df":0,"p":{"docs":{},"df":0,"_":{"docs":{},"df":0,"n":{"docs":{},"df":0,"o":{"docs":{},"df":0,"d":{"docs":{},"df":0,"e":{"docs":{},"df":0,".":{"docs":{},"df":0,"r":{"docs":{"query.html#adding-a-new-kind-of-query":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"df":0,"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{"compiler-debugging.html#getting-logging-output":{"tf":1.4142135623730952}},"df":1}}}}},"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"f":{"docs":{"appendix/glossary.html#appendix-c-glossary":{"tf":1.0}},"df":1}}},"m":{"docs":{},"df":0,"i":{"docs":{},"df":0,"r":{"docs":{},"df":0,"/":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"p":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"t":{"docs":{"miri.html#datastructures":{"tf":1.0}},"df":1}}}}}}}}}}}}},"h":{"docs":{},"df":0,"i":{"docs":{},"df":0,"r":{"docs":{},"df":0,"/":{"docs":{},"df":0,"d":{"docs":{},"df":0,"e":{"docs":{},"df":0,"f":{"docs":{},"df":0,"_":{"docs":{},"df":0,"i":{"docs":{},"df":0,"d":{"docs":{},"df":0,".":{"docs":{},"df":0,"r":{"docs":{"appendix/glossary.html#appendix-c-glossary":{"tf":1.0}},"df":1}}}}}}}}}}}}},"_":{"docs":{"appendix/stupid-stats.html#overview-of-the-compilation-process":{"tf":1.0}},"df":1,"d":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{},"df":0,"v":{"docs":{"query.html#how-the-compiler-executes-a-query":{"tf":1.0},"appendix/stupid-stats.html#overview-of-the-compilation-process":{"tf":1.0}},"df":2,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"/":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{},"df":0,"b":{"docs":{},"df":0,".":{"docs":{},"df":0,"r":{"docs":{"appendix/stupid-stats.html#compilercalls":{"tf":1.0}},"df":1}}}}}}}}}}}},"m":{"docs":{},"df":0,"i":{"docs":{},"df":0,"r":{"docs":{},"df":0,"/":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"p":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"t":{"docs":{},"df":0,"/":{"docs":{},"df":0,"e":{"docs":{},"df":0,"v":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{},"df":0,"_":{"docs":{},"df":0,"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"x":{"docs":{},"df":0,"t":{"docs":{},"df":0,".":{"docs":{},"df":0,"r":{"docs":{"miri.html#interpretation":{"tf":1.0}},"df":1}}}}}}}}}}}}}},"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"p":{"docs":{},"df":0,".":{"docs":{},"df":0,"r":{"docs":{"miri.html#interpretation":{"tf":1.0}},"df":1}}}}}},"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"_":{"docs":{},"df":0,"e":{"docs":{},"df":0,"v":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{},"df":0,".":{"docs":{},"df":0,"r":{"docs":{"miri.html#interpretation":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"o":{"docs":{},"df":0,"l":{"docs":{},"df":0,"v":{"docs":{"name-resolution.html#name-resolution":{"tf":1.0}},"df":1}}}}}},"t":{"docs":{},"df":0,"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{"appendix/stupid-stats.html#overview-of-the-compilation-process":{"tf":1.0}},"df":1},"i":{"docs":{},"df":0,"t":{"docs":{"traits/lowering-rules.html#rule-names-and-cross-references":{"tf":1.0}},"df":1}}}}},"b":{"docs":{},"df":0,"a":{"docs":{},"df":0,"c":{"docs":{},"df":0,"k":{"docs":{"appendix/stupid-stats.html#overview-of-the-compilation-process":{"tf":1.0}},"df":1}}}},"l":{"docs":{},"df":0,"l":{"docs":{},"df":0,"v":{"docs":{},"df":0,"m":{"docs":{"appendix/stupid-stats.html#overview-of-the-compilation-process":{"tf":1.0}},"df":1}}}}}},"d":{"docs":{},"df":0,"o":{"docs":{},"df":0,"c":{"docs":{"how-to-build-and-run.html#running-xpy-and-building-a-stage1-compiler":{"tf":1.0},"rustdoc.html#the-walking-tour-of-rustdoc":{"tf":1.7320508075688773}},"df":2}}}}}}},"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{"rustdoc.html#other-tricks-up-its-sleeve":{"tf":1.0}},"df":1}}}},".":{"docs":{},"df":0,"r":{"docs":{"rustdoc.html#the-walking-tour-of-rustdoc":{"tf":1.0},"name-resolution.html#name-resolution":{"tf":1.0}},"df":2}},"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"d":{"docs":{"how-to-build-and-run.html#other-xpy-commands":{"tf":1.4142135623730952},"tests/intro.html#compiletest-test-suites":{"tf":1.0},"how-to-build-and-run.html#running-xpy-and-building-a-stage1-compiler":{"tf":1.7320508075688773}},"df":3}},"y":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{},"df":0,"a":{"docs":{},"df":0,"x":{"docs":{"appendix/stupid-stats.html#overview-of-the-compilation-process":{"tf":1.0},"the-parser.html#the-parser":{"tf":1.0}},"df":2}}}}}}},"e":{"docs":{"incrcomp-debugging.html#dumping-the-graph":{"tf":1.0},"high-level-overview.html#crate-structure":{"tf":1.0}},"df":2},"t":{"docs":{"diag.html#declaring-a-lint":{"tf":1.0}},"df":1,"t":{"docs":{},"df":0,"l":{"docs":{"miri.html#allocations":{"tf":1.0},"variance.html#addendum-variance-on-traits":{"tf":1.0},"mir/regionck.html#another-example":{"tf":1.0},"traits/bibliography.html#bibliography":{"tf":1.0},"rustdoc.html#from-crate-to-clean":{"tf":1.0}},"df":5}},"e":{"docs":{},"df":0,"r":{"docs":{"type-inference.html#inference-variables":{"tf":1.4142135623730952},"rustdoc.html#the-walking-tour-of-rustdoc":{"tf":1.0}},"df":2,"a":{"docs":{},"df":0,"t":{"docs":{},"df":0,"u":{"docs":{},"df":0,"r":{"docs":{"appendix/glossary.html#appendix-c-glossary":{"tf":1.0}},"df":1}}}}}},".":{"docs":{},"df":0,"n":{"docs":{},"df":0,"o":{"docs":{},"df":0,"d":{"docs":{"diag.html#declaring-a-lint":{"tf":1.0}},"df":1}}},"s":{"docs":{},"df":0,"p":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,".":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{},"df":0,"x":{"docs":{},"df":0,"t":{"docs":{"diag.html#declaring-a-lint":{"tf":1.0}},"df":1}}}}}}}}}}},"n":{"docs":{},"df":0,"e":{"docs":{"tests/intro.html#other-tests":{"tf":1.0},"conventions.html#line-length":{"tf":2.0},"rustdoc.html#hot-potato":{"tf":1.4142135623730952},"how-to-build-and-run.html#create-a-configtoml":{"tf":1.7320508075688773},"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":2.23606797749979},"query.html#adding-a-new-kind-of-query":{"tf":1.0},"traits/resolution.html#major-concepts":{"tf":1.0},"compiletest.html#adding-a-new-header-command":{"tf":2.0},"compiler-debugging.html#getting-a-backtrace":{"tf":2.23606797749979},"rustc-driver.html#the-rustc-driver":{"tf":1.0},"appendix/stupid-stats.html#appendix-a-a-tutorial-on-creating-a-drop-in-replacement-for-rustc":{"tf":1.0},"appendix/stupid-stats.html#overview-of-the-compilation-process":{"tf":1.0},"appendix/stupid-stats.html#compilercalls":{"tf":1.7320508075688773},"tests/adding.html#error-annotations":{"tf":2.449489742783178},"rustdoc.html#from-crate-to-clean":{"tf":1.0},"macro-expansion.html#example":{"tf":1.0},"diag.html#suggestions":{"tf":1.0},"tests/adding.html#other-header-commands":{"tf":1.0},"appendix/stupid-stats.html#the-driver-customisation-apis":{"tf":1.0},"traits/resolution.html#candidate-assembly":{"tf":1.4142135623730952}},"df":20,"l":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"g":{"docs":{},"df":0,"t":{"docs":{},"df":0,"h":{"docs":{"conventions.html#line-length":{"tf":1.0}},"df":1}}}}}},"a":{"docs":{},"df":0,"r":{"docs":{"miri.html#allocations":{"tf":1.0}},"df":1}},"s":{"docs":{},"df":0,"=":{"docs":{},"df":0,"t":{"docs":{},"df":0,"r":{"docs":{},"df":0,"u":{"docs":{"compiler-debugging.html#getting-a-backtrace":{"tf":1.0}},"df":1}}}}}},"u":{"docs":{},"df":0,"x":{"docs":{"tests/intro.html#testing-infrastructure":{"tf":1.0},"compiler-debugging.html#getting-a-backtrace":{"tf":1.0},"compiler-debugging.html#getting-a-backtrace-for-errors":{"tf":1.7320508075688773},"tests/intro.html#testing-on-emulators":{"tf":1.0},"how-to-build-and-run.html#creating-a-rustup-toolchain":{"tf":1.0},"tests/adding.html#ignoring-tests":{"tf":1.0}},"df":6}},"t":{"docs":{"diag.html#edition-gated-lints":{"tf":2.23606797749979},"diag.html#lint-groups":{"tf":2.23606797749979},"appendix/stupid-stats.html#overview-of-the-compilation-process":{"tf":1.0},"appendix/code-index.html#appendix-d-code-index":{"tf":1.0},"name-resolution.html#name-resolution":{"tf":1.0},"diag.html#emitting-diagnostics":{"tf":1.0},"diag.html#lints":{"tf":1.7320508075688773},"diag.html#declaring-a-lint":{"tf":3.3166247903554}},"df":8,"_":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"y":{"docs":{},"df":0,"!":{"docs":{},"df":0,"(":{"docs":{},"df":0,"w":{"docs":{},"df":0,"h":{"docs":{},"df":0,"i":{"docs":{},"df":0,"l":{"docs":{},"df":0,"e":{"docs":{},"df":0,"_":{"docs":{},"df":0,"t":{"docs":{},"df":0,"r":{"docs":{},"df":0,"u":{"docs":{"diag.html#declaring-a-lint":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}},"e":{"docs":{},"df":0,"r":{"docs":{"diag.html#declaring-a-lint":{"tf":1.0}},"df":1}},"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"y":{"docs":{"diag.html#declaring-a-lint":{"tf":1.0}},"df":1}}}}},"p":{"docs":{},"df":0,"a":{"docs":{},"df":0,"s":{"docs":{},"df":0,"s":{"docs":{"diag.html#declaring-a-lint":{"tf":1.7320508075688773}},"df":1}}}}},"k":{"docs":{"high-level-overview.html#the-main-stages-of-compilation":{"tf":1.4142135623730952},"traits/chalk-overview.html#an-overview-of-chalk":{"tf":1.0},"name-resolution.html#todo":{"tf":1.0},"appendix/stupid-stats.html#overview-of-the-compilation-process":{"tf":1.0},"query.html#how-the-compiler-executes-a-query":{"tf":1.0},"how-to-build-and-run.html#creating-a-rustup-toolchain":{"tf":1.4142135623730952},"tests/intro.html#other-tests":{"tf":1.0},"name-resolution.html#name-resolution":{"tf":1.0},"compiler-debugging.html#getting-logging-output":{"tf":1.0},"the-parser.html#the-parser":{"tf":1.0},"tests/intro.html#compiletest-test-suites":{"tf":1.0},"query.html#adding-a-new-kind-of-query":{"tf":1.0},"mir/index.html#key-mir-vocabulary":{"tf":1.0},"rustdoc.html#the-walking-tour-of-rustdoc":{"tf":1.0},"appendix/glossary.html#appendix-c-glossary":{"tf":1.4142135623730952},"rustdoc.html#cheat-sheet":{"tf":1.0}},"df":16,"c":{"docs":{},"df":0,"h":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"k":{"docs":{"tests/intro.html#other-tests":{"tf":1.0}},"df":1}}}}}}},"s":{"docs":{},"df":0,"t":{"docs":{"query.html#how-the-compiler-executes-a-query":{"tf":1.0},"traits/resolution.html#candidate-assembly":{"tf":2.0},"method-lookup.html#candidate-assembly":{"tf":1.0},"diag.html#lint-groups":{"tf":1.0},"appendix/glossary.html#appendix-c-glossary":{"tf":1.0},"rustc-driver.html#the-rustc-driver":{"tf":1.0},"mir/borrowck.html#mir-borrow-check":{"tf":1.0},"high-level-overview.html#the-main-stages-of-compilation":{"tf":1.0},"traits/index.html#trait-solving-new-style":{"tf":1.0},"compiletest.html#adding-a-new-header-command":{"tf":1.0},"mir/index.html#key-mir-vocabulary":{"tf":1.0},"query.html#queries-demand-driven-compilation":{"tf":1.7320508075688773},"rustdoc.html#hot-potato":{"tf":1.0},"tests/adding.html#other-header-commands":{"tf":1.4142135623730952},"diag.html#declaring-a-lint":{"tf":1.0},"incrcomp-debugging.html#dumping-the-graph":{"tf":1.0},"hir.html#identifiers-in-the-hir":{"tf":1.0},"mir/passes.html#implementing-and-registering-a-pass":{"tf":1.4142135623730952}},"df":18}},"f":{"docs":{},"df":0,"e":{"docs":{},"df":0,"t":{"docs":{},"df":0,"i":{"docs":{},"df":0,"m":{"docs":{"traits/canonicalization.html#canonicalizing-the-query":{"tf":2.23606797749979},"appendix/glossary.html#appendix-c-glossary":{"tf":2.0},"mir/regionck.html#mir-based-region-checking-nll":{"tf":1.4142135623730952},"mir/regionck.html#another-example":{"tf":1.7320508075688773},"traits/chalk-overview.html#lowering":{"tf":1.0},"mir/borrowck.html#mir-borrow-check":{"tf":1.0},"type-inference.html#inference-variables":{"tf":1.0},"the-parser.html#the-parser":{"tf":1.0},"traits/goals-and-clauses.html#goals-and-clauses-meta-structure":{"tf":1.0},"ty.html#allocating-and-working-with-types":{"tf":2.0},"query.html#how-the-compiler-executes-a-query":{"tf":1.0},"traits/lowering-rules.html#notation":{"tf":1.4142135623730952},"type-inference.html#creating-an-inference-context":{"tf":1.4142135623730952},"ty.html#the-tcx-and-how-it-uses-lifetimes":{"tf":3.4641016151377546},"mir/regionck.html#what-is-a-universe":{"tf":2.23606797749979},"traits/goals-and-clauses.html#domain-goals":{"tf":1.0},"traits/canonicalization.html#canonicalizing-the-query-result":{"tf":1.4142135623730952},"traits/resolution.html#selection":{"tf":2.23606797749979},"variance.html#variance-of-type-and-lifetime-parameters":{"tf":2.0},"traits/canonical-queries.html#a-trait-query-in-rustc":{"tf":1.0},"rustc-driver.html#a-note-on-lifetimes":{"tf":2.0},"type-inference.html#a-note-on-terminology":{"tf":1.0},"appendix/stupid-stats.html#overview-of-the-compilation-process":{"tf":1.0}},"df":23}}}},"t":{"docs":{"traits/canonicalization.html#executing-the-query":{"tf":1.0},"appendix/glossary.html#appendix-c-glossary":{"tf":1.0}},"df":2}},"v":{"docs":{},"df":0,"e":{"docs":{"type-inference.html#creating-an-inference-context":{"tf":1.0},"rustdoc.html#from-clean-to-crate":{"tf":1.7320508075688773},"mir/regionck.html#mir-based-region-checking-nll":{"tf":1.0},"mir/regionck.html#subtyping-and-skolemization":{"tf":1.0},"rustdoc.html#the-walking-tour-of-rustdoc":{"tf":1.0},"mir/index.html#key-mir-vocabulary":{"tf":1.0},"ty.html#the-tcx-and-how-it-uses-lifetimes":{"tf":1.0},"name-resolution.html#namespaces":{"tf":1.0},"high-level-overview.html#crate-structure":{"tf":1.0},"the-parser.html#the-parser":{"tf":1.0},"name-resolution.html#name-resolution":{"tf":1.0}},"df":11,"n":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"s":{"docs":{},"df":0,"_":{"docs":{},"df":0,"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{"mir/regionck.html#region-variables-and-constraints":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}},"l":{"docs":{"traits/lowering-module.html#unit-tests":{"tf":1.0}},"df":1,"d":{"docs":{},"df":0,"b":{"docs":{"tests/intro.html#compiletest-test-suites":{"tf":1.0},"tests/adding.html#ignoring-tests":{"tf":1.0},"tests/adding.html#what-kind-of-test-should-i-add":{"tf":1.0}},"df":3}},"v":{"docs":{},"df":0,"m":{"docs":{"how-to-build-and-run.html#other-xpy-commands":{"tf":1.0},"trans.html#generating-llvm-ir":{"tf":1.4142135623730952},"tests/adding.html#what-kind-of-test-should-i-add":{"tf":1.0},"high-level-overview.html#the-main-stages-of-compilation":{"tf":2.0},"how-to-build-and-run.html#create-a-configtoml":{"tf":1.7320508075688773},"tests/intro.html#compiletest-test-suites":{"tf":1.0},"rustc-driver.html#the-rustc-driver":{"tf":1.4142135623730952},"compiler-debugging.html#debugging-llvm":{"tf":4.123105625617661},"query.html#queries-demand-driven-compilation":{"tf":1.0},"how-to-build-and-run.html#creating-a-rustup-toolchain":{"tf":1.0},"miri.html#interpretation":{"tf":1.0},"compiler-debugging.html#getting-logging-output":{"tf":1.0},"tests/adding.html#other-header-commands":{"tf":1.0},"ty.html#the-tcx-and-how-it-uses-lifetimes":{"tf":1.0},"appendix/stupid-stats.html#overview-of-the-compilation-process":{"tf":2.23606797749979},"appendix/glossary.html#appendix-c-glossary":{"tf":3.7416573867739415},"mir/index.html#key-mir-vocabulary":{"tf":1.0}},"df":17,".":{"docs":{},"df":0,"c":{"docs":{},"df":0,"c":{"docs":{},"df":0,"a":{"docs":{},"df":0,"c":{"docs":{},"df":0,"h":{"docs":{"how-to-build-and-run.html#create-a-configtoml":{"tf":1.0}},"df":1}}}}}},"'":{"docs":{"compiler-debugging.html#debugging-llvm":{"tf":1.0},"appendix/stupid-stats.html#overview-of-the-compilation-process":{"tf":1.0}},"df":2}}}},"s":{"docs":{"mir/passes.html#seeing-how-the-mir-changes-as-the-compiler-executes":{"tf":1.7320508075688773}},"df":1},"e":{"docs":{},"df":0,"x":{"docs":{"appendix/stupid-stats.html#overview-of-the-compilation-process":{"tf":1.0},"appendix/glossary.html#appendix-c-glossary":{"tf":1.0},"the-parser.html#the-parser":{"tf":1.0}},"df":3,"e":{"docs":{},"df":0,"r":{"docs":{"appendix/code-index.html#appendix-d-code-index":{"tf":1.0}},"df":1}},"i":{"docs":{},"df":0,"c":{"docs":{"high-level-overview.html#the-main-stages-of-compilation":{"tf":1.0},"mir/index.html#key-mir-vocabulary":{"tf":1.0},"mir/borrowck.html#mir-borrow-check":{"tf":1.0},"mir/regionck.html#mir-based-region-checking-nll":{"tf":1.7320508075688773},"the-parser.html#the-parser":{"tf":1.0},"type-inference.html#lexical-region-resolution":{"tf":1.7320508075688773},"type-inference.html#extracting-region-constraints":{"tf":2.0},"appendix/glossary.html#appendix-c-glossary":{"tf":1.0}},"df":8,"a":{"docs":{},"df":0,"l":{"docs":{},"df":0,"_":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"g":{"docs":{},"df":0,"i":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"_":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"o":{"docs":{},"df":0,"l":{"docs":{},"df":0,"v":{"docs":{"type-inference.html#extracting-region-constraints":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}},"g":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{"name-resolution.html#namespaces":{"tf":1.0},"traits/resolution.html#major-concepts":{"tf":1.0},"variance.html#trait-variance-and-vtable-resolution":{"tf":1.7320508075688773}},"df":3}}},"t":{"docs":{"rustc-driver.html#the-rustc-driver":{"tf":1.0},"rustc-driver.html#a-note-on-lifetimes":{"tf":1.0},"appendix/stupid-stats.html#the-driver-customisation-apis":{"tf":1.4142135623730952}},"df":3,"'":{"docs":{"traits/hrtb.html#higher-ranked-trait-obligations":{"tf":1.0},"traits/goals-and-clauses.html#domain-goals":{"tf":1.0},"mir/regionck.html#final-example":{"tf":1.4142135623730952},"traits/lowering-to-logic.html#type-checking-normal-functions":{"tf":1.4142135623730952},"how-to-build-and-run.html#running-xpy-and-building-a-stage1-compiler":{"tf":1.0},"traits/hrtb.html#higher-ranked-trait-bounds":{"tf":1.0},"mir/regionck.html#subtyping-and-skolemization":{"tf":1.0},"method-lookup.html#candidate-assembly":{"tf":1.0},"mir/regionck.html#what-is-a-universe":{"tf":1.7320508075688773},"mir/regionck.html#back-to-our-example":{"tf":1.4142135623730952},"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.0},"appendix/background.html#what-is-a-free-region-or-a-free-variable-what-about-bound-region":{"tf":1.0},"traits/canonical-queries.html#examples":{"tf":1.4142135623730952},"traits/lowering-to-logic.html#rust-traits-and-logic":{"tf":1.0},"traits/hrtb.html#basic-matching-and-skolemization-leaks":{"tf":1.7320508075688773},"query.html#how-the-compiler-executes-a-query":{"tf":1.0},"mir/regionck.html#skolemization-and-outlives-constraints":{"tf":1.0},"variance.html#trait-variance-and-vtable-resolution":{"tf":1.0},"traits/lowering-to-logic.html#type-checking-generic-functions-beyond-horn-clauses":{"tf":1.0},"query.html#adding-a-new-kind-of-query":{"tf":1.0}},"df":20},"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"name-resolution.html#namespaces":{"tf":1.0}},"df":1}}}},"v":{"docs":{},"df":0,"e":{"docs":{},"df":0,"l":{"docs":{"mir/regionck.html#universal-regions":{"tf":1.0},"conventions.html#copyright-notice":{"tf":1.0},"incremental-compilation.html#the-basic-algorithm":{"tf":1.0},"mir/visitor.html#mir-visitor":{"tf":1.0},"traits/canonical-queries.html#canonical-queries":{"tf":1.0},"appendix/stupid-stats.html#appendix-a-a-tutorial-on-creating-a-drop-in-replacement-for-rustc":{"tf":1.0},"query.html#queries-demand-driven-compilation":{"tf":1.4142135623730952},"mir/regionck.html#closures":{"tf":1.0},"ty.html#the-tcx-and-how-it-uses-lifetimes":{"tf":1.7320508075688773},"high-level-overview.html#the-main-stages-of-compilation":{"tf":1.4142135623730952},"rustdoc.html#the-walking-tour-of-rustdoc":{"tf":1.0},"tests/adding.html#error-annotations":{"tf":2.0},"query.html#how-the-compiler-executes-a-query":{"tf":1.0},"mir/visitor.html#traversal":{"tf":1.0},"hir.html#identifiers-in-the-hir":{"tf":1.0},"mir/regionck.html#causal-tracking":{"tf":1.0},"appendix/stupid-stats.html#overview-of-the-compilation-process":{"tf":1.4142135623730952},"conventions.html#how-to-structure-your-pr":{"tf":1.0},"about-this-guide.html#about-this-guide":{"tf":1.0},"rustdoc.html#from-clean-to-crate":{"tf":1.0},"hir.html#out-of-band-storage-and-the--crate--type":{"tf":1.0},"mir/regionck.html#skolemization-and-outlives-constraints":{"tf":1.0},"mir/regionck.html#the-mir-type-check":{"tf":1.0},"mir/passes.html#implementing-and-registering-a-pass":{"tf":1.0},"mir/regionck.html#extending-the-universal-regions-check":{"tf":1.0},"mir/passes.html#seeing-how-the-mir-changes-as-the-compiler-executes":{"tf":1.0},"hir.html#the-hir":{"tf":1.0},"compiletest.html#adding-a-new-header-command":{"tf":2.0},"high-level-overview.html#high-level-overview-of-the-compiler-source":{"tf":1.4142135623730952},"mir/passes.html#stealing":{"tf":1.0},"mir/regionck.html#region-variables-and-constraints":{"tf":1.0},"traits/caching.html#an-example":{"tf":1.0},"mir/regionck.html#back-to-our-example":{"tf":1.0},"appendix/stupid-stats.html#the-driver-customisation-apis":{"tf":1.0},"mir/regionck.html#final-example":{"tf":1.0},"mir/regionck.html#mir-based-region-checking-nll":{"tf":1.0},"appendix/glossary.html#appendix-c-glossary":{"tf":1.4142135623730952},"mir/construction.html#mir-construction":{"tf":1.0},"mir/regionck.html#skolemization-and-universes":{"tf":1.0},"mir/regionck.html#representing-the-values-of-a-region-variable":{"tf":1.0},"mir/regionck.html#another-example":{"tf":1.0},"type-inference.html#snapshots":{"tf":1.0},"appendix/code-index.html#appendix-d-code-index":{"tf":1.0},"high-level-overview.html#crate-structure":{"tf":1.0},"mir/optimizations.html#mir-optimizations":{"tf":1.0},"mir/borrowck.html#major-phases-of-the-borrow-checker":{"tf":1.0},"mir/regionck.html#what-is-a-universe":{"tf":1.0},"mir/index.html#the-mir-mid-level-ir":{"tf":2.0},"mir/regionck.html#subtyping-and-skolemization":{"tf":1.0},"mir/regionck.html#universes-and-skolemized-region-elements":{"tf":1.0},"mir/passes.html#mir-passes":{"tf":1.0},"mir/borrowck.html#mir-borrow-check":{"tf":1.0}},"df":52},"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"g":{"docs":{"traits/lowering-module.html#unit-tests":{"tf":1.0}},"df":1}}}}},"n":{"docs":{"ty.html#allocating-and-working-with-types":{"tf":1.4142135623730952}},"df":1,"g":{"docs":{},"df":0,"t":{"docs":{},"df":0,"h":{"docs":{"const-eval.html#constant-evaluation":{"tf":1.4142135623730952},"miri.html#miri":{"tf":1.4142135623730952},"appendix/glossary.html#appendix-c-glossary":{"tf":1.0},"conventions.html#line-length":{"tf":1.7320508075688773}},"df":4}}}},"d":{"docs":{"traits/caching.html#where-clauses-and-the-local-vs-global-cache":{"tf":1.0}},"df":1},"s":{"docs":{},"df":0,"s":{"docs":{"variance.html#addendum-variance-on-traits":{"tf":1.0},"high-level-overview.html#crate-structure":{"tf":1.0},"mir/borrowck.html#mir-borrow-check":{"tf":1.0},"how-to-build-and-run.html#create-a-configtoml":{"tf":1.0},"rustdoc.html#hot-potato":{"tf":1.0},"conventions.html#how-to-structure-your-pr":{"tf":1.0}},"df":6}},"a":{"docs":{},"df":0,"k":{"docs":{"traits/hrtb.html#higher-ranked-trait-obligations":{"tf":1.4142135623730952},"traits/hrtb.html#basic-matching-and-skolemization-leaks":{"tf":2.6457513110645909},"mir/regionck.html#what-is-a-universe":{"tf":1.0}},"df":3},"r":{"docs":{},"df":0,"n":{"docs":{"appendix/code-index.html#appendix-d-code-index":{"tf":1.0},"name-resolution.html#todo":{"tf":1.0},"traits/bibliography.html#bibliography":{"tf":1.0},"traits/canonical-queries.html#examples":{"tf":1.0}},"df":4}},"d":{"docs":{"traits/resolution.html#selection":{"tf":1.0},"mir/index.html#key-mir-vocabulary":{"tf":1.0},"rustdoc.html#hot-potato":{"tf":1.4142135623730952},"incremental-compilation.html#the-query-dag":{"tf":1.0},"incrcomp-debugging.html#dumping-the-graph":{"tf":1.0}},"df":5},"v":{"docs":{"appendix/stupid-stats.html#overview-of-the-compilation-process":{"tf":1.0},"type-inference.html#extracting-region-constraints":{"tf":1.0},"compiler-debugging.html#logging-etiquette":{"tf":1.0},"conventions.html#use-todo-comments-for-things-you-dont-want-to-forget":{"tf":1.0}},"df":4}},"f":{"docs":{},"df":0,"t":{"docs":{"traits/canonicalization.html#canonicalization":{"tf":1.0},"mir/regionck.html#subtyping-and-skolemization":{"tf":1.0},"traits/lowering-rules.html#transforming-the-lowered-where-clauses":{"tf":1.0},"traits/goals-and-clauses.html#domain-goals":{"tf":1.0},"mir/regionck.html#another-example":{"tf":1.0},"traits/resolution.html#candidate-assembly":{"tf":1.0},"appendix/stupid-stats.html#overview-of-the-compilation-process":{"tf":1.0}},"df":7}}},"t":{"docs":{},"df":0,"o":{"docs":{"appendix/glossary.html#appendix-c-glossary":{"tf":1.7320508075688773}},"df":1}},"a":{"docs":{},"df":0,"u":{"docs":{},"df":0,"n":{"docs":{},"df":0,"c":{"docs":{},"df":0,"h":{"docs":{"tests/intro.html#testing-infrastructure":{"tf":1.0},"tests/intro.html#testing-on-emulators":{"tf":1.0}},"df":2}}}},"r":{"docs":{},"df":0,"g":{"docs":{"query.html#adding-a-new-kind-of-query":{"tf":1.0},"rustc-driver.html#a-note-on-lifetimes":{"tf":1.0},"mir/regionck.html#extending-the-universal-regions-check":{"tf":1.0},"conventions.html#how-to-structure-your-pr":{"tf":1.0},"mir/regionck.html#back-to-our-example":{"tf":1.4142135623730952},"appendix/stupid-stats.html#appendix-a-a-tutorial-on-creating-a-drop-in-replacement-for-rustc":{"tf":1.0},"compiletest.html#introduction":{"tf":1.0}},"df":7,"e":{"docs":{},"df":0,"r":{"docs":{"ty.html#import-conventions":{"tf":1.0}},"df":1}}}},"b":{"docs":{},"df":0,"e":{"docs":{},"df":0,"l":{"docs":{"incrcomp-debugging.html#dumping-the-graph":{"tf":1.0},"name-resolution.html#scopes-and-ribs":{"tf":1.0}},"df":2}}},"n":{"docs":{},"df":0,"g":{"docs":{"traits/slg.html#the-slg-solver":{"tf":1.0},"conventions.html#how-to-structure-your-pr":{"tf":1.0},"mir/index.html#the-mir-mid-level-ir":{"tf":1.0},"tests/adding.html#other-header-commands":{"tf":1.0}},"df":4,".":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"g":{"docs":{},"df":0,"/":{"docs":{},"df":0,"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"p":{"docs":{},"df":0,"y":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{},"df":0,"g":{"docs":{},"df":0,"h":{"docs":{},"df":0,"t":{"docs":{"conventions.html#copyright-notice":{"tf":1.0},"compiletest.html#adding-a-new-header-command":{"tf":1.0}},"df":2}}}}}}}}}}}}}},"u":{"docs":{},"df":0,"a":{"docs":{},"df":0,"g":{"docs":{"appendix/glossary.html#appendix-c-glossary":{"tf":1.0},"high-level-overview.html#the-main-stages-of-compilation":{"tf":1.4142135623730952},"type-inference.html#inference-variables":{"tf":1.0},"rustdoc.html#from-soup-to-nuts":{"tf":1.0}},"df":4}}},"/":{"docs":{},"df":0,"m":{"docs":{},"df":0,"a":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{"conventions.html#how-to-structure-your-pr":{"tf":1.0}},"df":1}}}},"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"m":{"docs":{},"df":0,"p":{"docs":{},"df":0,"i":{"docs":{},"df":0,"l":{"docs":{"query.html#adding-a-new-kind-of-query":{"tf":1.0}},"df":1}}}}}},"r":{"docs":{},"df":0,"u":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"/":{"docs":{},"df":0,"b":{"docs":{},"df":0,"l":{"docs":{},"df":0,"o":{"docs":{},"df":0,"b":{"docs":{},"df":0,"/":{"docs":{},"df":0,"m":{"docs":{},"df":0,"a":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"/":{"docs":{},"df":0,"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{},"df":0,"b":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"g":{"docs":{},"df":0,".":{"docs":{},"df":0,"m":{"docs":{},"df":0,"d":{"docs":{},"df":0,"#":{"docs":{},"df":0,"b":{"docs":{},"df":0,"u":{"docs":{},"df":0,"g":{"docs":{"compiler-debugging.html#getting-a-backtrace-for-errors":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"#":{"docs":{},"df":0,"4":{"docs":{},"df":0,"1":{"docs":{},"df":0,"7":{"docs":{},"df":0,"1":{"docs":{},"df":0,"0":{"docs":{"mir/passes.html#stealing":{"tf":1.0}},"df":1}}}}}}}}}}}},"d":{"docs":{"conventions.html#use-todo-comments-for-things-you-dont-want-to-forget":{"tf":1.4142135623730952},"rustdoc.html#cheat-sheet":{"tf":1.0},"mir/regionck.html#skolemization-and-universes":{"tf":1.0}},"df":3}},"y":{"docs":{},"df":0,"o":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{"compiler-debugging.html#debugging-the-compiler":{"tf":1.0},"param_env.html#parameter-environment":{"tf":1.0}},"df":2}}},"e":{"docs":{},"df":0,"r":{"docs":{"traits/canonical-queries.html#the-traditional-interactive-prolog-query":{"tf":1.0}},"df":1}}},"m":{"docs":{},"df":0,"b":{"docs":{},"df":0,"d":{"docs":{},"df":0,"a":{"docs":{"traits/bibliography.html#bibliography":{"tf":1.4142135623730952}},"df":1}}}},"z":{"docs":{},"df":0,"i":{"docs":{"traits/index.html#trait-solving-new-style":{"tf":1.0}},"df":1}},"s":{"docs":{},"df":0,"t":{"docs":{"ty.html#the-tcx-and-how-it-uses-lifetimes":{"tf":1.0},"incremental-compilation.html#the-basic-algorithm":{"tf":1.0},"mir/regionck.html#final-example":{"tf":1.0},"appendix/stupid-stats.html#compilercalls":{"tf":1.0},"traits/lowering-to-logic.html#type-checking-generic-functions-beyond-horn-clauses":{"tf":1.0}},"df":5}},"t":{"docs":{},"df":0,"t":{"docs":{},"df":0,"i":{"docs":{},"df":0,"c":{"docs":{"variance.html#the-algorithm":{"tf":1.4142135623730952},"high-level-overview.html#crate-structure":{"tf":1.0},"type-inference.html#lexical-region-resolution":{"tf":1.0}},"df":3}},"e":{"docs":{},"df":0,"r":{"docs":{"rustdoc.html#other-tricks-up-its-sleeve":{"tf":1.0},"type-inference.html#creating-an-inference-context":{"tf":1.0},"rustdoc.html#from-crate-to-clean":{"tf":1.0},"appendix/stupid-stats.html#the-driver-customisation-apis":{"tf":1.0},"high-level-overview.html#crate-structure":{"tf":1.0}},"df":5}}},"e":{"docs":{"traits/hrtb.html#higher-ranked-trait-obligations":{"tf":1.0},"appendix/stupid-stats.html#compilercalls":{"tf":1.0}},"df":2,"_":{"docs":{},"df":0,"c":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{},"df":0,"l":{"docs":{},"df":0,"b":{"docs":{},"df":0,"a":{"docs":{},"df":0,"c":{"docs":{},"df":0,"k":{"docs":{"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.0},"appendix/stupid-stats.html#compilercalls":{"tf":1.0}},"df":2,"(":{"docs":{},"df":0,"&":{"docs":{},"df":0,"m":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.0}},"df":1}}}}}}}}}}}}}},"r":{"docs":{"traits/canonicalization.html#executing-the-query":{"tf":1.0},"type-inference.html#inference-variables":{"tf":1.0},"traits/resolution.html#selection":{"tf":1.0},"mir/index.html#key-mir-vocabulary":{"tf":1.0},"traits/canonicalization.html#processing-the-canonicalized-query-result":{"tf":1.4142135623730952},"ty.html#allocating-and-working-with-types":{"tf":1.0},"tests/adding.html#comment-explaining-what-the-test-is-about":{"tf":1.0},"conventions.html#use-todo-comments-for-things-you-dont-want-to-forget":{"tf":1.4142135623730952},"conventions.html#how-to-structure-your-pr":{"tf":1.0},"rustdoc.html#from-crate-to-clean":{"tf":1.4142135623730952},"traits/resolution.html#major-concepts":{"tf":1.0},"traits/canonicalization.html#canonicalizing-the-query":{"tf":1.0},"how-to-build-and-run.html#running-xpy-and-building-a-stage1-compiler":{"tf":1.0},"high-level-overview.html#crate-structure":{"tf":1.0},"appendix/stupid-stats.html#compilercalls":{"tf":1.0},"macro-expansion.html#macro-expansion":{"tf":1.0},"traits/caching.html#an-example":{"tf":1.0},"mir/regionck.html#extending-the-universal-regions-check":{"tf":1.0}},"df":18},"l":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{},"df":0,"p":{"docs":{},"df":0,"a":{"docs":{},"df":0,"s":{"docs":{},"df":0,"s":{"docs":{"diag.html#declaring-a-lint":{"tf":1.0}},"df":1,"<":{"docs":{},"df":0,"'":{"docs":{},"df":0,"a":{"docs":{"diag.html#declaring-a-lint":{"tf":1.0}},"df":1}}}}}}}}}}},"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"x":{"docs":{},"df":0,"t":{"docs":{"diag.html#declaring-a-lint":{"tf":1.0}},"df":1}}}}}}},"s":{"docs":{},"df":0,"t":{"docs":{"traits/canonicalization.html#canonicalizing-the-query-result":{"tf":1.0},"how-to-build-and-run.html#running-xpy-and-building-a-stage1-compiler":{"tf":1.0}},"df":2}}}}}},"4":{"docs":{"compiler-debugging.html#getting-a-backtrace":{"tf":1.0},"name-resolution.html#scopes-and-ribs":{"tf":1.7320508075688773},"miri.html#miri":{"tf":1.0},"variance.html#variance-of-type-and-lifetime-parameters":{"tf":1.0},"appendix/stupid-stats.html#overview-of-the-compilation-process":{"tf":1.0},"conventions.html#tabs-vs-spaces":{"tf":1.0},"variance.html#the-algorithm":{"tf":1.4142135623730952}},"df":7,"8":{"docs":{},"df":0,"8":{"docs":{},"df":0,",":{"docs":{},"df":0,"6":{"docs":{"compiletest.html#adding-a-new-header-command":{"tf":1.0}},"df":1}}}},"0":{"docs":{},"df":0,"9":{"docs":{},"df":0,"6":{"docs":{"miri.html#miri":{"tf":1.0}},"df":1}}},".":{"docs":{},"df":0,"0":{"docs":{"how-to-build-and-run.html#creating-a-rustup-toolchain":{"tf":1.0}},"df":1}},"9":{"docs":{},"df":0,"4":{"docs":{},"df":0,",":{"docs":{},"df":0,"1":{"docs":{},"df":0,"3":{"docs":{"compiletest.html#adding-a-new-header-command":{"tf":1.0}},"df":1}}}},"9":{"docs":{},"df":0,",":{"docs":{},"df":0,"7":{"docs":{"compiletest.html#implementing-the-behavior-change":{"tf":1.0}},"df":1}}}},"2":{"docs":{"miri.html#miri":{"tf":1.4142135623730952}},"df":1,"u":{"docs":{},"df":0,"s":{"docs":{},"df":0,"i":{"docs":{},"df":0,"z":{"docs":{"miri.html#miri":{"tf":1.0}},"df":1}}}}}},"2":{"docs":{"name-resolution.html#namespaces":{"tf":1.0},"traits/canonicalization.html#processing-the-canonicalized-query-result":{"tf":1.7320508075688773},"how-to-build-and-run.html#running-xpy-and-building-a-stage1-compiler":{"tf":1.4142135623730952},"traits/canonical-queries.html#examples":{"tf":1.0},"traits/canonicalization.html#executing-the-query":{"tf":1.0},"traits/canonicalization.html#canonicalizing-the-query":{"tf":1.7320508075688773},"tests/running.html#running-tests":{"tf":1.0},"appendix/stupid-stats.html#overview-of-the-compilation-process":{"tf":1.0},"high-level-overview.html#the-main-stages-of-compilation":{"tf":1.4142135623730952},"compiler-debugging.html#getting-a-backtrace-for-errors":{"tf":1.4142135623730952},"ty.html#allocating-and-working-with-types":{"tf":1.0},"variance.html#the-algorithm":{"tf":1.4142135623730952},"mir/index.html#key-mir-vocabulary":{"tf":1.0},"name-resolution.html#scopes-and-ribs":{"tf":1.4142135623730952},"compiletest.html#adding-a-new-header-command":{"tf":1.0},"traits/resolution.html#major-concepts":{"tf":1.0},"mir/regionck.html#final-example":{"tf":2.23606797749979},"mir/regionck.html#what-is-a-universe":{"tf":1.7320508075688773},"compiler-debugging.html#getting-a-backtrace":{"tf":1.0},"traits/chalk-overview.html#blog-posts":{"tf":1.0},"tests/running.html#running-a-subset-of-the-test-suites":{"tf":1.0},"appendix/glossary.html#appendix-c-glossary":{"tf":1.0},"mir/regionck.html#another-example":{"tf":2.23606797749979},"traits/specialization.html#specialization":{"tf":1.0},"traits/canonicalization.html#canonicalizing-the-query-result":{"tf":1.7320508075688773}},"df":25,"9":{"docs":{},"df":0,"5":{"docs":{},"df":0,",":{"docs":{},"df":0,"1":{"docs":{},"df":0,"4":{"docs":{"compiletest.html#implementing-the-behavior-change":{"tf":1.0}},"df":1},"1":{"docs":{"compiletest.html#implementing-the-behavior-change":{"tf":1.0}},"df":1}}}}},"2":{"docs":{"traits/caching.html#an-example":{"tf":1.7320508075688773},"mir/index.html#key-mir-vocabulary":{"tf":1.0},"type-inference.html#inference-variables":{"tf":1.0},"mir/regionck.html#skolemization-and-universes":{"tf":1.0}},"df":4,".":{"docs":{},"df":0,"0":{"docs":{"type-inference.html#inference-variables":{"tf":1.0}},"df":1}},"0":{"docs":{},"df":0,"1":{"docs":{},"df":0,"9":{"docs":{"traits/caching.html#where-clauses-and-the-local-vs-global-cache":{"tf":1.0}},"df":1}}}},"0":{"docs":{},"df":0,"1":{"docs":{},"df":0,"3":{"docs":{"conventions.html#copyright-notice":{"tf":1.0}},"df":1},"8":{"docs":{"compiletest.html#adding-a-new-header-command":{"tf":1.0},"diag.html#edition-gated-lints":{"tf":1.0}},"df":2},"2":{"docs":{"conventions.html#copyright-notice":{"tf":1.0}},"df":1},"5":{"docs":{"diag.html#edition-gated-lints":{"tf":1.0}},"df":1},"7":{"docs":{"tests/adding.html#header-commands-configuring-rustc":{"tf":1.0}},"df":1}},"8":{"docs":{},"df":0,"9":{"docs":{"traits/lowering-rules.html#trait-header":{"tf":1.0}},"df":1}}},"5":{"docs":{"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.0}},"df":1},"3":{"docs":{},"df":0,"2":{"docs":{},"df":0,",":{"docs":{},"df":0,"7":{"docs":{"compiletest.html#adding-a-new-header-command":{"tf":1.0}},"df":1},"6":{"docs":{"compiletest.html#adding-a-new-header-command":{"tf":1.0}},"df":1}}}},"6":{"docs":{},"df":0,"1":{"docs":{},"df":0,",":{"docs":{},"df":0,"7":{"docs":{"compiletest.html#adding-a-new-header-command":{"tf":1.0}},"df":1}}},"0":{"docs":{},"df":0,",":{"docs":{},"df":0,"6":{"docs":{"compiletest.html#adding-a-new-header-command":{"tf":1.0}},"df":1}}}},":":{"docs":{},"df":0,"1":{"docs":{},"df":0,"6":{"docs":{"mir/index.html#key-mir-vocabulary":{"tf":1.0}},"df":1}}},">":{"docs":{},"df":0,"t":{"docs":{},"df":0,"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{"compiler-debugging.html#getting-logging-output":{"tf":1.0}},"df":1}}}}},"a":{"docs":{},"df":0,"l":{"docs":{},"df":0,"l":{"docs":{"compiler-debugging.html#getting-logging-output":{"tf":1.0}},"df":1}}}},"1":{"docs":{},"df":0,"7":{"docs":{},"df":0,"2":{"docs":{},"df":0,"6":{"docs":{"variance.html#variance-and-associated-types":{"tf":1.0}},"df":1}},"5":{"docs":{},"df":0,"0":{"docs":{"variance.html#variance-and-associated-types":{"tf":1.0}},"df":1}}}},".":{"docs":{},"df":0,"0":{"docs":{"compiletest.html#adding-a-new-header-command":{"tf":1.4142135623730952},"conventions.html#copyright-notice":{"tf":1.4142135623730952}},"df":2}}},"n":{"docs":{"mir/regionck.html#universes-and-skolemized-region-elements":{"tf":1.4142135623730952},"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.0},"mir/regionck.html#another-example":{"tf":1.0},"method-lookup.html#method-lookup":{"tf":1.0},"hir.html#the-hir-map":{"tf":2.0}},"df":5,"m":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{},"df":0,"s":{"docs":{},"df":0,"a":{"docs":{},"df":0,"k":{"docs":{},"df":0,"i":{"docs":{"traits/associated-types.html#integration-with-unification":{"tf":1.0},"mir/regionck.html#another-example":{"tf":1.0},"tests/running.html#running-tests":{"tf":1.0}},"df":3}}}}}}},"i":{"docs":{},"df":0,"k":{"docs":{},"df":0,"o":{"docs":{},"df":0,"m":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{},"df":0,"s":{"docs":{},"df":0,"a":{"docs":{},"df":0,"k":{"docs":{},"df":0,"i":{"docs":{"incremental-compilation.html#footnotes":{"tf":1.0}},"df":1}}}}}}}}},"g":{"docs":{},"df":0,"h":{"docs":{},"df":0,"t":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{"compiler-debugging.html#debugging-llvm":{"tf":1.4142135623730952}},"df":1}}}}},"c":{"docs":{},"df":0,"k":{"docs":{},"df":0,"n":{"docs":{},"df":0,"a":{"docs":{},"df":0,"m":{"docs":{"appendix/glossary.html#appendix-c-glossary":{"tf":1.0}},"df":1}}}},"e":{"docs":{"query.html#how-the-compiler-executes-a-query":{"tf":1.0},"conventions.html#how-to-structure-your-pr":{"tf":1.0},"hir.html#out-of-band-storage-and-the--crate--type":{"tf":1.0},"query.html#queries-demand-driven-compilation":{"tf":1.0},"query.html#cycles-between-queries":{"tf":1.0},"traits/lowering-to-logic.html#type-checking-generic-functions-beyond-horn-clauses":{"tf":1.0}},"df":6},"h":{"docs":{},"df":0,"o":{"docs":{},"df":0,"l":{"docs":{},"df":0,"a":{"docs":{"traits/lowering-to-logic.html#source":{"tf":1.0}},"df":1}}}}}},"f":{"docs":{},"df":0,"a":{"docs":{"macro-expansion.html#the-macro-parser":{"tf":1.4142135623730952}},"df":1}},"o":{"docs":{},"df":0,"d":{"docs":{},"df":0,"e":{"docs":{"hir.html#identifiers-in-the-hir":{"tf":1.4142135623730952},"query.html#adding-a-new-kind-of-query":{"tf":2.0},"incrcomp-debugging.html#dumping-the-graph":{"tf":3.4641016151377546},"appendix/glossary.html#appendix-c-glossary":{"tf":2.0},"appendix/code-index.html#appendix-d-code-index":{"tf":1.0},"rustc-driver.html#the-rustc-driver":{"tf":1.0},"appendix/stupid-stats.html#overview-of-the-compilation-process":{"tf":1.4142135623730952},"mir/regionck.html#skolemization-and-outlives-constraints":{"tf":1.4142135623730952},"the-parser.html#the-parser":{"tf":2.449489742783178},"type-checking.html#type-collection":{"tf":1.7320508075688773},"incremental-compilation.html#the-try-mark-green-algorithm":{"tf":1.7320508075688773},"hir.html#the-hir-map":{"tf":3.0},"incremental-compilation.html#improvements-to-the-basic-algorithm":{"tf":1.4142135623730952},"high-level-overview.html#the-main-stages-of-compilation":{"tf":1.4142135623730952}},"df":14,".":{"docs":{},"df":0,"j":{"docs":{"rustdoc.html#dotting-is-and-crossing-ts":{"tf":1.0}},"df":1}},"i":{"docs":{},"df":0,"d":{"docs":{"appendix/glossary.html#appendix-c-glossary":{"tf":1.0},"hir.html#identifiers-in-the-hir":{"tf":1.7320508075688773},"hir.html#the-hir-map":{"tf":1.4142135623730952}},"df":3}}}},"n":{"docs":{"mir/regionck.html#mir-based-region-checking-nll":{"tf":1.0},"appendix/glossary.html#appendix-c-glossary":{"tf":1.7320508075688773},"mir/borrowck.html#mir-borrow-check":{"tf":1.0},"type-inference.html#extracting-region-constraints":{"tf":1.4142135623730952},"tests/intro.html#testing-on-emulators":{"tf":1.0},"traits/lowering-to-logic.html#type-checking-generic-functions-beyond-horn-clauses":{"tf":1.0},"traits/resolution.html#trait-resolution-old-style":{"tf":1.0},"macro-expansion.html#the-macro-parser":{"tf":1.7320508075688773},"compiletest.html#introduction":{"tf":1.0},"query.html#adding-a-new-kind-of-query":{"tf":1.0},"appendix/stupid-stats.html#appendix-a-a-tutorial-on-creating-a-drop-in-replacement-for-rustc":{"tf":1.0},"traits/resolution.html#selection":{"tf":1.0}},"df":12,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"m":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{"traits/lowering-rules.html#notation":{"tf":1.4142135623730952}},"df":1}}}}}},"e":{"docs":{"compiletest.html#adding-a-new-header-command":{"tf":1.0},"miri.html#interpretation":{"tf":1.0},"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.0},"variance.html#the-algorithm":{"tf":1.7320508075688773},"hir.html#the-hir-map":{"tf":1.0},"traits/canonical-queries.html#examples":{"tf":1.7320508075688773},"miri.html#miri":{"tf":1.0}},"df":7,"t":{"docs":{},"df":0,"h":{"docs":{},"df":0,"e":{"docs":{},"df":0,"l":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"s":{"docs":{"traits/resolution.html#selection-during-translation":{"tf":1.0},"query.html#cycles-between-queries":{"tf":1.0}},"df":2}}}}}}}},"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"d":{"docs":{},"df":0,"_":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"y":{"docs":{},"df":0,"l":{"docs":{"diag.html#lint-groups":{"tf":1.4142135623730952}},"df":1}}}}}}}}}}}}},"_":{"docs":{},"df":0,"c":{"docs":{},"df":0,"a":{"docs":{},"df":0,"m":{"docs":{},"df":0,"e":{"docs":{},"df":0,"l":{"docs":{},"df":0,"_":{"docs":{},"df":0,"c":{"docs":{},"df":0,"a":{"docs":{},"df":0,"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"_":{"docs":{},"df":0,"t":{"docs":{},"df":0,"y":{"docs":{},"df":0,"p":{"docs":{"diag.html#lint-groups":{"tf":1.0}},"df":1}}}}}}}}}}}}}},"u":{"docs":{},"df":0,"p":{"docs":{},"df":0,"p":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"_":{"docs":{},"df":0,"c":{"docs":{},"df":0,"a":{"docs":{},"df":0,"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"_":{"docs":{},"df":0,"g":{"docs":{},"df":0,"l":{"docs":{},"df":0,"o":{"docs":{},"df":0,"b":{"docs":{"diag.html#lint-groups":{"tf":1.0}},"df":1}}}}}}}}}}}}}}},"s":{"docs":{},"df":0,"n":{"docs":{},"df":0,"a":{"docs":{},"df":0,"k":{"docs":{},"df":0,"e":{"docs":{},"df":0,"_":{"docs":{},"df":0,"c":{"docs":{},"df":0,"a":{"docs":{},"df":0,"s":{"docs":{"diag.html#lint-groups":{"tf":1.0}},"df":1}}}}}}}}}}},"l":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"g":{"docs":{},"df":0,"p":{"docs":{},"df":0,"a":{"docs":{},"df":0,"d":{"docs":{"mir/passes.html#seeing-how-the-mir-changes-as-the-compiler-executes":{"tf":1.7320508075688773},"mir/passes.html#implementing-and-registering-a-pass":{"tf":1.0},"mir/visitor.html#mir-visitor":{"tf":1.4142135623730952}},"df":3}}}}}}}}}},"r":{"docs":{},"df":0,"m":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{"incremental-compilation.html#the-try-mark-green-algorithm":{"tf":1.0},"compiler-debugging.html#getting-a-backtrace":{"tf":1.0},"traits/canonical-queries.html#a-trait-query-in-rustc":{"tf":1.0},"traits/associated-types.html#associated-type-projection-and-normalization":{"tf":3.3166247903554},"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.0},"traits/associated-types.html#projection-equality":{"tf":1.4142135623730952},"traits/goals-and-clauses.html#domain-goals":{"tf":1.7320508075688773},"traits/canonical-queries.html#canonical-queries":{"tf":1.0},"mir/regionck.html#mir-based-region-checking-nll":{"tf":1.0},"hir.html#the-hir":{"tf":1.0},"traits/associated-types.html#skolemized-associated-types":{"tf":1.4142135623730952},"traits/lowering-to-logic.html#type-checking-normal-functions":{"tf":1.4142135623730952},"tests/adding.html#normalization":{"tf":3.605551275463989},"type-inference.html#extracting-region-constraints":{"tf":1.0},"traits/lowering-rules.html#lowering-function-and-constant-declarations":{"tf":1.0},"tests/adding.html#header-commands-configuring-rustc":{"tf":1.0},"macro-expansion.html#example":{"tf":1.0},"appendix/glossary.html#appendix-c-glossary":{"tf":1.4142135623730952},"traits/lowering-rules.html#associated-type-values":{"tf":1.0},"macro-expansion.html#the-macro-parser":{"tf":2.0},"compiletest.html#adding-a-new-header-command":{"tf":1.4142135623730952},"traits/lowering-rules.html#associated-type-declarations":{"tf":1.4142135623730952},"macro-expansion.html#macro-expansion":{"tf":1.7320508075688773},"traits/lowering-rules.html#function-and-constant-values":{"tf":1.0},"traits/index.html#trait-solving-new-style":{"tf":1.0},"hir.html#identifiers-in-the-hir":{"tf":1.0},"traits/associated-types.html#equality-and-associated-types":{"tf":1.0},"tests/adding.html#guide-to-the-ui-tests":{"tf":1.4142135623730952},"appendix/stupid-stats.html#appendix-a-a-tutorial-on-creating-a-drop-in-replacement-for-rustc":{"tf":1.0}},"df":29,"i":{"docs":{},"df":0,"z":{"docs":{},"df":0,"e":{"docs":{},"df":0,"(":{"docs":{},"df":0,"p":{"docs":{},"df":0,"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"j":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{"traits/goals-and-clauses.html#domain-goals":{"tf":1.4142135623730952}},"df":1}}}}}}},"<":{"docs":{},"df":0,"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"l":{"docs":{},"df":0,"f":{"docs":{"traits/lowering-rules.html#associated-type-declarations":{"tf":1.0}},"df":1}}}},"t":{"docs":{"traits/associated-types.html#projection-equality":{"tf":1.0},"traits/goals-and-clauses.html#domain-goals":{"tf":1.0}},"df":2},"p":{"docs":{},"df":0,"0":{"docs":{"traits/lowering-rules.html#associated-type-values":{"tf":1.0}},"df":1}},"o":{"docs":{},"df":0,"p":{"docs":{},"df":0,"t":{"docs":{},"df":0,"i":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"<":{"docs":{},"df":0,"t":{"docs":{"traits/associated-types.html#associated-type-projection-and-normalization":{"tf":1.0}},"df":1}}}}}}}}}},"v":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{},"df":0,"u":{"docs":{"traits/lowering-rules.html#function-and-constant-values":{"tf":1.0}},"df":1}}}},"_":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"d":{"docs":{},"df":0,"o":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{"compiletest.html#adding-a-new-header-command":{"tf":1.4142135623730952}},"df":1}}},"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"r":{"docs":{"compiletest.html#adding-a-new-header-command":{"tf":1.4142135623730952}},"df":1}}}}}}}}}}}}}},"t":{"docs":{},"df":0,"h":{"docs":{"traits/canonical-queries.html#examples":{"tf":1.0},"method-lookup.html#candidate-assembly":{"tf":1.0},"appendix/stupid-stats.html#overview-of-the-compilation-process":{"tf":1.0},"mir/passes.html#stealing":{"tf":1.0}},"df":4},"a":{"docs":{},"df":0,"t":{"docs":{"traits/lowering-to-logic.html#rust-traits-and-logic":{"tf":1.4142135623730952},"mir/regionck.html#another-example":{"tf":1.0},"rustdoc.html#dotting-is-and-crossing-ts":{"tf":1.0},"variance.html#variance-of-type-and-lifetime-parameters":{"tf":1.4142135623730952},"traits/lowering-rules.html#notation":{"tf":1.7320508075688773},"type-inference.html#a-note-on-terminology":{"tf":1.0},"variance.html#the-algorithm":{"tf":1.0},"traits/lowering-to-logic.html#type-checking-generic-functions-beyond-horn-clauses":{"tf":1.7320508075688773}},"df":8},"b":{"docs":{},"df":0,"l":{"docs":{"macro-expansion.html#the-macro-parser":{"tf":1.0},"rustdoc.html#other-tricks-up-its-sleeve":{"tf":1.0},"mir/index.html#the-mir-mid-level-ir":{"tf":1.0}},"df":3}}},"_":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"_":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"f":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"c":{"docs":{},"df":0,"e":{"docs":{},"df":0,"<":{"docs":{},"df":0,"'":{"docs":{},"df":0,"a":{"docs":{"ty.html#the-tcx-and-how-it-uses-lifetimes":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}},"e":{"docs":{"traits/resolution.html#trait-resolution-old-style":{"tf":1.0},"compiler-debugging.html#getting-a-backtrace-for-errors":{"tf":2.23606797749979},"variance.html#variance-and-object-types":{"tf":1.4142135623730952},"rustc-driver.html#a-note-on-lifetimes":{"tf":1.4142135623730952},"traits/lowering-rules.html#associated-type-values":{"tf":1.0},"compiletest.html#implementing-the-behavior-change":{"tf":1.0},"mir/regionck.html#universes-and-skolemized-region-elements":{"tf":1.0},"compiler-debugging.html#expensive-operations-in-logs":{"tf":1.4142135623730952},"appendix/stupid-stats.html#appendix-a-a-tutorial-on-creating-a-drop-in-replacement-for-rustc":{"tf":1.0},"tests/adding.html#revisions":{"tf":1.0},"compiler-debugging.html#debugging-llvm":{"tf":1.0},"traits/resolution.html#major-concepts":{"tf":1.0},"traits/hrtb.html#basic-matching-and-skolemization-leaks":{"tf":1.0},"incremental-compilation.html#the-try-mark-green-algorithm":{"tf":1.0},"tests/running.html#running-a-subset-of-the-test-suites":{"tf":1.0},"traits/chalk-overview.html#lowering":{"tf":1.0},"compiler-debugging.html#getting-logging-output":{"tf":1.0},"compiletest.html#adding-a-new-header-command":{"tf":1.4142135623730952},"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.4142135623730952},"type-checking.html#type-collection":{"tf":1.0},"traits/goals-and-clauses.html#domain-goals":{"tf":1.0},"rustdoc.html#from-soup-to-nuts":{"tf":1.4142135623730952},"rustdoc.html#the-walking-tour-of-rustdoc":{"tf":1.4142135623730952},"traits/canonical-queries.html#the-traditional-interactive-prolog-query":{"tf":1.0},"traits/canonicalization.html#canonicalization":{"tf":1.0},"traits/resolution.html#candidate-assembly":{"tf":1.4142135623730952},"appendix/stupid-stats.html#compilercontroller":{"tf":1.0},"traits/associated-types.html#skolemized-associated-types":{"tf":1.0},"tests/adding.html#error-annotations":{"tf":1.4142135623730952},"traits/index.html#trait-solving-new-style":{"tf":1.0},"traits/resolution.html#selection":{"tf":1.0},"diag.html#error-messages":{"tf":1.0},"query.html#how-the-compiler-executes-a-query":{"tf":1.4142135623730952},"type-inference.html#a-note-on-terminology":{"tf":1.4142135623730952},"rustdoc.html#hot-potato":{"tf":1.0},"ty.html#allocating-and-working-with-types":{"tf":1.0},"mir/regionck.html#another-example":{"tf":1.0},"traits/goals-and-clauses.html#goals-and-clauses-meta-structure":{"tf":1.0},"method-lookup.html#candidate-assembly":{"tf":1.0},"traits/canonicalization.html#canonicalizing-the-query-result":{"tf":1.4142135623730952},"macro-expansion.html#the-macro-parser":{"tf":1.0},"compiler-debugging.html#debugging-the-compiler":{"tf":1.0},"traits/resolution.html#confirmation":{"tf":1.4142135623730952},"method-lookup.html#method-lookup":{"tf":1.0},"variance.html#the-algorithm":{"tf":1.0},"incrcomp-debugging.html#tracking-down-incorrect-edges":{"tf":1.0},"tests/adding.html#normalization":{"tf":1.4142135623730952},"incremental-compilation.html#the-basic-algorithm":{"tf":1.0}},"df":48,"/":{"docs":{},"df":0,"w":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"n":{"docs":{"appendix/stupid-stats.html#appendix-a-a-tutorial-on-creating-a-drop-in-replacement-for-rustc":{"tf":1.0}},"df":1}}}}}},"i":{"docs":{},"df":0,"c":{"docs":{"mir/index.html#key-mir-vocabulary":{"tf":1.0},"tests/adding.html#comment-explaining-what-the-test-is-about":{"tf":1.0},"conventions.html#line-length":{"tf":1.0},"conventions.html#copyright-notice":{"tf":1.7320508075688773},"tests/adding.html#adding-new-tests":{"tf":1.0},"tests/running.html#running-tests":{"tf":1.0}},"df":6},"o":{"docs":{},"df":0,"n":{"docs":{"type-inference.html#subtyping-obligations":{"tf":1.0},"traits/lowering-to-logic.html#type-checking-generic-functions-beyond-horn-clauses":{"tf":1.4142135623730952},"mir/regionck.html#what-is-a-universe":{"tf":1.0}},"df":3}}}},"b":{"docs":{},"df":0,"o":{"docs":{},"df":0,"d":{"docs":{},"df":0,"i":{"docs":{"mir/index.html#mir-data-types":{"tf":1.0}},"df":1}}}},"s":{"docs":{},"df":0,"o":{"docs":{},"df":0,"l":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{"traits/associated-types.html#integration-with-unification":{"tf":1.0},"traits/canonical-queries.html#a-trait-query-in-rustc":{"tf":1.0}},"df":2}}}}},"w":{"docs":{"traits/resolution.html#confirmation":{"tf":1.0},"mir/regionck.html#subtyping-and-skolemization":{"tf":1.0},"appendix/stupid-stats.html#overview-of-the-compilation-process":{"tf":1.0},"traits/canonicalization.html#canonicalizing-the-query-result":{"tf":1.0},"variance.html#trait-variance-and-vtable-resolution":{"tf":1.0},"traits/lowering-to-logic.html#rust-traits-and-logic":{"tf":1.0},"traits/associated-types.html#projection-equality":{"tf":1.0},"traits/lowering-rules.html#transforming-the-lowered-where-clauses":{"tf":1.0},"miri.html#interpretation":{"tf":1.4142135623730952},"traits/hrtb.html#higher-ranked-trait-obligations":{"tf":1.0},"miri.html#miri":{"tf":1.0},"traits/hrtb.html#basic-matching-and-skolemization-leaks":{"tf":1.4142135623730952},"compiler-debugging.html#getting-a-backtrace-for-errors":{"tf":1.4142135623730952},"query.html#how-the-compiler-executes-a-query":{"tf":1.0},"variance.html#variance-and-associated-types":{"tf":1.0},"appendix/stupid-stats.html#appendix-a-a-tutorial-on-creating-a-drop-in-replacement-for-rustc":{"tf":1.0},"how-to-build-and-run.html#running-xpy-and-building-a-stage1-compiler":{"tf":1.0},"type-inference.html#extracting-region-constraints":{"tf":1.0},"tests/adding.html#naming-your-test":{"tf":1.0},"incremental-compilation.html#the-query-dag":{"tf":1.4142135623730952},"traits/canonicalization.html#processing-the-canonicalized-query-result":{"tf":1.7320508075688773},"traits/canonicalization.html#executing-the-query":{"tf":1.0},"mir/regionck.html#skolemization-and-outlives-constraints":{"tf":1.4142135623730952},"mir/regionck.html#back-to-our-example":{"tf":1.0},"traits/associated-types.html#integration-with-unification":{"tf":1.0},"query.html#adding-a-new-kind-of-query":{"tf":1.0},"mir/regionck.html#what-is-a-universe":{"tf":1.7320508075688773},"traits/lowering-to-logic.html#type-checking-normal-functions":{"tf":1.4142135623730952},"traits/caching.html#an-example":{"tf":1.0},"hir.html#identifiers-in-the-hir":{"tf":1.0},"traits/resolution.html#candidate-assembly":{"tf":1.0},"how-to-build-and-run.html#creating-a-rustup-toolchain":{"tf":1.0},"high-level-overview.html#the-main-stages-of-compilation":{"tf":1.0},"traits/canonical-queries.html#examples":{"tf":1.4142135623730952},"mir/regionck.html#final-example":{"tf":1.7320508075688773}},"df":35},"_":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"p":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{"appendix/stupid-stats.html#compilercalls":{"tf":1.0},"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.0}},"df":2,"(":{"docs":{},"df":0,"&":{"docs":{},"df":0,"m":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.0}},"df":1}}}}}}}}}}},"m":{"docs":{},"df":0,"i":{"docs":{},"df":0,"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{"appendix/background.html#what-is-co--and-contra-variance":{"tf":1.0}},"df":1}}},"n":{"docs":{"method-lookup.html#candidate-assembly":{"tf":1.0}},"df":1}}},"i":{"docs":{},"df":0,"s":{"docs":{"conventions.html#how-to-structure-your-pr":{"tf":1.0}},"df":1}}},"l":{"docs":{},"df":0,"l":{"docs":{"mir/regionck.html#mir-based-region-checking-nll":{"tf":2.0},"type-inference.html#extracting-region-constraints":{"tf":1.7320508075688773},"mir/regionck.html#extending-the-universal-regions-check":{"tf":1.0},"mir/borrowck.html#major-phases-of-the-borrow-checker":{"tf":1.4142135623730952},"appendix/glossary.html#appendix-c-glossary":{"tf":1.0}},"df":5,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"p":{"docs":{},"df":0,"l":{"docs":{},"df":0,"a":{"docs":{},"df":0,"c":{"docs":{},"df":0,"e":{"docs":{},"df":0,"_":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"g":{"docs":{},"df":0,"i":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"s":{"docs":{},"df":0,"_":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"_":{"docs":{},"df":0,"m":{"docs":{},"df":0,"i":{"docs":{},"df":0,"r":{"docs":{"mir/borrowck.html#major-phases-of-the-borrow-checker":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}}}}}}}}},".":{"docs":{},"df":0,"b":{"docs":{"ty.html#allocating-and-working-with-types":{"tf":1.0},"query.html#how-the-compiler-executes-a-query":{"tf":1.0},"high-level-overview.html#crate-structure":{"tf":1.0}},"df":3}},"u":{"docs":{},"df":0,"t":{"docs":{"rustdoc.html#from-soup-to-nuts":{"tf":1.4142135623730952}},"df":1,"s":{"docs":{},"df":0,"h":{"docs":{},"df":0,"e":{"docs":{},"df":0,"l":{"docs":{"rustdoc.html#dotting-is-and-crossing-ts":{"tf":1.0}},"df":1}}}}},"m":{"docs":{},"df":0,"b":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"mir/borrowck.html#major-phases-of-the-borrow-checker":{"tf":1.0},"traits/lowering-rules.html#lowering-traits":{"tf":1.0},"ty.html#beyond-types-other-kinds-of-arena-allocated-data-structures":{"tf":1.0},"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":2.23606797749979},"high-level-overview.html#the-main-stages-of-compilation":{"tf":1.4142135623730952},"method-lookup.html#method-lookup":{"tf":1.0},"traits/canonical-queries.html#the-traditional-interactive-prolog-query":{"tf":1.0},"traits/lowering-rules.html#associated-type-declarations":{"tf":1.0},"mir/passes.html#seeing-how-the-mir-changes-as-the-compiler-executes":{"tf":1.0},"hir.html#the-hir-map":{"tf":1.0},"hir.html#out-of-band-storage-and-the--crate--type":{"tf":1.0},"mir/borrowck.html#mir-borrow-check":{"tf":1.0},"high-level-overview.html#crate-structure":{"tf":1.0},"traits/canonicalization.html#canonicalization":{"tf":1.0},"compiletest.html#introduction":{"tf":1.0},"appendix/stupid-stats.html#appendix-a-a-tutorial-on-creating-a-drop-in-replacement-for-rustc":{"tf":1.0},"appendix/glossary.html#appendix-c-glossary":{"tf":1.4142135623730952},"how-to-build-and-run.html#create-a-configtoml":{"tf":1.0},"tests/adding.html#comment-explaining-what-the-test-is-about":{"tf":1.0},"compiler-debugging.html#getting-a-backtrace":{"tf":1.4142135623730952},"hir.html#identifiers-in-the-hir":{"tf":1.4142135623730952},"how-to-build-and-run.html#creating-a-rustup-toolchain":{"tf":1.0},"mir/regionck.html#what-is-a-universe":{"tf":1.4142135623730952},"traits/canonical-queries.html#examples":{"tf":1.0},"tests/adding.html#naming-your-test":{"tf":1.0},"appendix/background.html#appendix-b-background-topics":{"tf":1.0}},"df":26,"/":{"docs":{},"df":0,"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"l":{"docs":{},"df":0,"u":{"docs":{},"df":0,"m":{"docs":{},"df":0,"n":{"docs":{"appendix/glossary.html#appendix-c-glossary":{"tf":1.0}},"df":1}}}}}}}}}},"e":{"docs":{},"df":0,"r":{"docs":{"miri.html#datastructures":{"tf":1.0},"traits/chalk-overview.html#intermediate-representation-ir":{"tf":1.0}},"df":2}}},"r":{"docs":{},"df":0,"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"y":{"docs":{},"df":0,"/":{"docs":{},"df":0,"c":{"docs":{},"df":0,"h":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{},"df":0,"k":{"docs":{},"df":0,"/":{"docs":{},"df":0,"b":{"docs":{},"df":0,"l":{"docs":{},"df":0,"o":{"docs":{},"df":0,"b":{"docs":{},"df":0,"/":{"docs":{},"df":0,"m":{"docs":{},"df":0,"a":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"/":{"docs":{},"df":0,"c":{"docs":{},"df":0,"h":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{},"df":0,"k":{"docs":{"traits/slg.html#the-slg-solver":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"df":0,"c":{"docs":{"appendix/stupid-stats.html#appendix-a-a-tutorial-on-creating-a-drop-in-replacement-for-rustc":{"tf":1.0},"rustc-driver.html#the-rustc-driver":{"tf":1.0}},"df":2}},"b":{"docs":{"mir/visitor.html#mir-visitor":{"tf":1.0},"ty.html#allocating-and-working-with-types":{"tf":1.0}},"df":2},"a":{"docs":{},"df":0,"d":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{},"df":0,"h":{"docs":{},"df":0,"u":{"docs":{},"df":0,"r":{"docs":{"traits/bibliography.html#bibliography":{"tf":1.4142135623730952}},"df":1,"'":{"docs":{"traits/lowering-to-logic.html#type-checking-generic-functions-beyond-horn-clauses":{"tf":1.0}},"df":1}}}}}}},"v":{"docs":{},"df":0,"i":{"docs":{},"df":0,"g":{"docs":{"appendix/glossary.html#appendix-c-glossary":{"tf":1.0}},"df":1}}},"i":{"docs":{},"df":0,"v":{"docs":{"variance.html#the-algorithm":{"tf":1.0}},"df":1}},"t":{"docs":{},"df":0,"i":{"docs":{},"df":0,"v":{"docs":{"appendix/glossary.html#appendix-c-glossary":{"tf":1.0}},"df":1}},"u":{"docs":{},"df":0,"r":{"docs":{"variance.html#variance-and-object-types":{"tf":1.4142135623730952},"appendix/stupid-stats.html#appendix-a-a-tutorial-on-creating-a-drop-in-replacement-for-rustc":{"tf":1.0},"method-lookup.html#method-lookup":{"tf":1.0},"rustc-driver.html#the-rustc-driver":{"tf":1.0},"traits/resolution.html#major-concepts":{"tf":1.0},"type-inference.html#trying-equality":{"tf":1.0},"traits/resolution.html#selection":{"tf":1.0},"traits/canonical-queries.html#the-traditional-interactive-prolog-query":{"tf":1.0},"rustdoc.html#the-walking-tour-of-rustdoc":{"tf":1.0},"mir/index.html#key-mir-vocabulary":{"tf":1.0}},"df":10}}},"r":{"docs":{},"df":0,"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"w":{"docs":{"compiler-debugging.html#getting-logging-output":{"tf":1.0}},"df":1}}}},"m":{"docs":{},"df":0,"e":{"docs":{"ty.html#allocating-and-working-with-types":{"tf":1.4142135623730952},"miri.html#interpretation":{"tf":1.0},"query.html#adding-a-new-kind-of-query":{"tf":3.1622776601683797},"high-level-overview.html#the-main-stages-of-compilation":{"tf":1.4142135623730952},"traits/lowering-rules.html#rule-names-and-cross-references":{"tf":1.7320508075688773},"hir.html#the-hir":{"tf":1.0},"name-resolution.html#name-resolution":{"tf":2.8284271247461905},"conventions.html#how-to-structure-your-pr":{"tf":1.0},"mir/regionck.html#universes-and-skolemized-region-elements":{"tf":1.0},"compiletest.html#adding-a-new-header-command":{"tf":1.0},"ty.html#import-conventions":{"tf":1.0},"diag.html#error-messages":{"tf":1.0},"tests/running.html#running-an-individual-test":{"tf":1.0},"high-level-overview.html#crate-structure":{"tf":1.4142135623730952},"incrcomp-debugging.html#dumping-the-graph":{"tf":1.0},"name-resolution.html#todo":{"tf":1.0},"traits/lowering-to-logic.html#type-checking-generic-functions-beyond-horn-clauses":{"tf":1.4142135623730952},"tests/adding.html#naming-your-test":{"tf":2.23606797749979},"rustc-driver.html#the-rustc-driver":{"tf":1.0},"ty.html#the-tcx-and-how-it-uses-lifetimes":{"tf":1.0},"mir/regionck.html#back-to-our-example":{"tf":1.0},"hir.html#identifiers-in-the-hir":{"tf":1.7320508075688773},"macro-expansion.html#macro-expansion":{"tf":1.0},"mir/passes.html#seeing-how-the-mir-changes-as-the-compiler-executes":{"tf":2.0},"traits/associated-types.html#skolemized-associated-types":{"tf":1.0},"name-resolution.html#overall-strategy":{"tf":2.0},"appendix/glossary.html#appendix-c-glossary":{"tf":1.0},"appendix/background.html#what-is-a-free-region-or-a-free-variable-what-about-bound-region":{"tf":1.0},"mir/regionck.html#what-is-a-universe":{"tf":3.3166247903554},"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.4142135623730952},"tests/adding.html#guide-to-the-ui-tests":{"tf":1.0},"name-resolution.html#scopes-and-ribs":{"tf":2.8284271247461905},"traits/lowering-rules.html#notation":{"tf":1.0},"appendix/stupid-stats.html#overview-of-the-compilation-process":{"tf":1.0},"traits/goals-and-clauses.html#domain-goals":{"tf":1.0},"mir/index.html#key-mir-vocabulary":{"tf":1.7320508075688773}},"df":36,"d":{"docs":{},"df":0,"p":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"u":{"docs":{},"df":0,"l":{"docs":{},"df":0,"t":{"docs":{"macro-expansion.html#the-macro-parser":{"tf":1.4142135623730952}},"df":1}}}}}}}}}}}},"s":{"docs":{},"df":0,"p":{"docs":{},"df":0,"a":{"docs":{},"df":0,"c":{"docs":{"name-resolution.html#namespaces":{"tf":2.23606797749979},"name-resolution.html#scopes-and-ribs":{"tf":1.7320508075688773}},"df":2}}}},"a":{"docs":{},"df":0,"b":{"docs":{},"df":0,"l":{"docs":{"hir.html#identifiers-in-the-hir":{"tf":1.0}},"df":1}}},"/":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{"appendix/glossary.html#appendix-c-glossary":{"tf":1.0}},"df":1}}}},".":{"docs":{},"df":0,"t":{"docs":{},"df":0,"o":{"docs":{},"df":0,"_":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"r":{"docs":{"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.0}},"df":1}}}}}}}}}},"e":{"docs":{},"df":0,"e":{"docs":{},"df":0,"d":{"docs":{"traits/resolution.html#major-concepts":{"tf":1.0},"const-eval.html#constant-evaluation":{"tf":2.23606797749979},"mir/regionck.html#skolemization-and-universes":{"tf":1.4142135623730952},"traits/canonicalization.html#canonicalizing-the-query-result":{"tf":1.0},"query.html#cycles-between-queries":{"tf":1.0},"macro-expansion.html#macro-expansion":{"tf":1.0},"hir.html#out-of-band-storage-and-the--crate--type":{"tf":1.0},"traits/canonicalization.html#canonicalizing-the-query":{"tf":1.0},"diag.html#error-messages":{"tf":1.0},"mir/passes.html#stealing":{"tf":1.0},"rustc-driver.html#a-note-on-lifetimes":{"tf":1.0},"traits/canonical-queries.html#a-trait-query-in-rustc":{"tf":1.0},"compiletest.html#adding-a-new-header-command":{"tf":1.0},"traits/lowering-to-logic.html#type-checking-generic-functions-beyond-horn-clauses":{"tf":2.0},"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":2.0},"mir/visitor.html#mir-visitor":{"tf":1.0},"traits/lowering-module.html#unit-tests":{"tf":1.0},"tests/adding.html#adding-new-tests":{"tf":1.0},"how-to-build-and-run.html#creating-a-rustup-toolchain":{"tf":1.0},"miri.html#miri":{"tf":1.7320508075688773},"incremental-compilation.html#the-try-mark-green-algorithm":{"tf":1.0},"ty.html#allocating-and-working-with-types":{"tf":1.0},"high-level-overview.html#crate-structure":{"tf":1.0},"traits/goals-and-clauses.html#domain-goals":{"tf":1.0},"traits/resolution.html#selection-during-translation":{"tf":1.4142135623730952},"the-parser.html#the-parser":{"tf":1.0},"traits/canonicalization.html#executing-the-query":{"tf":1.0},"rustdoc.html#hot-potato":{"tf":1.0},"rustdoc.html#from-soup-to-nuts":{"tf":1.0},"variance.html#variance-and-object-types":{"tf":1.0},"traits/specialization.html#specialization":{"tf":1.4142135623730952},"how-to-build-and-run.html#how-to-build-the-compiler-and-run-what-you-built":{"tf":1.0},"traits/lowering-to-logic.html#type-checking-normal-functions":{"tf":1.4142135623730952},"traits/lowering-to-logic.html#lowering-to-logic":{"tf":1.0},"traits/associated-types.html#integration-with-unification":{"tf":1.0},"tests/adding.html#comment-explaining-what-the-test-is-about":{"tf":1.0},"type-inference.html#extracting-region-constraints":{"tf":1.0},"how-to-build-and-run.html#running-xpy-and-building-a-stage1-compiler":{"tf":1.0},"mir/regionck.html#another-example":{"tf":1.0},"diag.html#declaring-a-lint":{"tf":1.0},"type-inference.html#region-constraints":{"tf":1.0},"high-level-overview.html#the-main-stages-of-compilation":{"tf":1.0},"ty.html#the-tcx-and-how-it-uses-lifetimes":{"tf":1.0},"compiler-debugging.html#debugging-the-compiler":{"tf":1.0},"tests/adding.html#what-kind-of-test-should-i-add":{"tf":2.23606797749979},"compiler-debugging.html#expensive-operations-in-logs":{"tf":1.4142135623730952},"compiler-debugging.html#debugging-llvm":{"tf":1.0},"query.html#queries-demand-driven-compilation":{"tf":1.0},"query.html#adding-a-new-kind-of-query":{"tf":1.4142135623730952},"traits/caching.html#an-example":{"tf":1.0},"variance.html#addendum-variance-on-traits":{"tf":1.0},"name-resolution.html#overall-strategy":{"tf":1.7320508075688773},"compiler-debugging.html#getting-logging-output":{"tf":1.0},"incrcomp-debugging.html#dumping-the-graph":{"tf":1.0},"incremental-compilation.html#the-basic-algorithm":{"tf":1.0},"macro-expansion.html#the-macro-parser":{"tf":1.4142135623730952},"mir/borrowck.html#major-phases-of-the-borrow-checker":{"tf":1.0},"method-lookup.html#candidate-assembly":{"tf":1.0}},"df":58}},"g":{"docs":{"traits/chalk-overview.html#blog-posts":{"tf":1.0},"traits/goals-and-clauses.html#incomplete-chapter":{"tf":1.0},"traits/canonical-queries.html#the-traditional-interactive-prolog-query":{"tf":1.0}},"df":3},"x":{"docs":{},"df":0,"t":{"docs":{"traits/lowering-to-logic.html#rust-traits-and-logic":{"tf":1.0},"mir/passes.html#stealing":{"tf":1.0},"traits/lowering-rules.html#trait-header":{"tf":1.4142135623730952},"traits/lowering-rules.html#associated-type-declarations":{"tf":1.4142135623730952},"tests/adding.html#adding-new-tests":{"tf":1.0},"traits/goals-and-clauses.html#coinductive-goals":{"tf":1.0},"how-to-build-and-run.html#running-xpy-and-building-a-stage1-compiler":{"tf":1.0},"traits/canonical-queries.html#examples":{"tf":1.4142135623730952},"traits/caching.html#an-example":{"tf":1.4142135623730952},"rustdoc.html#cheat-sheet":{"tf":1.0},"miri.html#miri":{"tf":1.0},"mir/regionck.html#subtyping-and-skolemization":{"tf":1.0},"incremental-compilation.html#the-query-dag":{"tf":1.4142135623730952},"incremental-compilation.html#the-basic-algorithm":{"tf":1.0},"traits/goals-and-clauses.html#domain-goals":{"tf":1.0},"appendix/stupid-stats.html#what-next":{"tf":1.4142135623730952},"rustdoc.html#hot-potato":{"tf":1.0},"traits/hrtb.html#basic-matching-and-skolemization-leaks":{"tf":1.0},"mir/borrowck.html#major-phases-of-the-borrow-checker":{"tf":1.0},"appendix/stupid-stats.html#overview-of-the-compilation-process":{"tf":2.0},"appendix/stupid-stats.html#compilercalls":{"tf":1.0},"query.html#queries-demand-driven-compilation":{"tf":1.0}},"df":22}},"c":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"s":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{"conventions.html#line-length":{"tf":1.0},"query.html#how-the-compiler-executes-a-query":{"tf":1.0},"traits/resolution.html#selection-during-translation":{"tf":1.0},"appendix/glossary.html#appendix-c-glossary":{"tf":1.0},"compiletest.html#adding-a-new-test-file":{"tf":1.0},"rustdoc.html#hot-potato":{"tf":1.7320508075688773}},"df":6,"l":{"docs":{},"df":0,"i":{"docs":{"name-resolution.html#scopes-and-ribs":{"tf":1.0}},"df":1}}}}}}}}},"w":{"docs":{"traits/lowering-rules.html#notation":{"tf":1.0},"traits/lowering-rules.html#function-and-constant-values":{"tf":1.4142135623730952},"compiletest.html#adding-a-new-test-file":{"tf":2.23606797749979},"traits/lowering-module.html#the-lowering-module-in-rustc":{"tf":1.0},"traits/lowering-rules.html#lowering-rules":{"tf":1.0},"query.html#adding-a-new-kind-of-query":{"tf":2.449489742783178},"traits/associated-types.html#integration-with-unification":{"tf":1.0},"compiletest.html#adding-a-new-header-command":{"tf":2.8284271247461905},"name-resolution.html#scopes-and-ribs":{"tf":2.23606797749979},"traits/lowering-to-logic.html#type-checking-generic-functions-beyond-horn-clauses":{"tf":1.0},"traits/lowering-to-logic.html#lowering-to-logic":{"tf":1.0},"traits/goals-and-clauses.html#coinductive-goals":{"tf":1.0},"traits/wf.html#well-formedness-checking":{"tf":1.0},"traits/chalk-overview.html#resources":{"tf":1.0},"miri.html#interpretation":{"tf":1.0},"appendix/stupid-stats.html#appendix-a-a-tutorial-on-creating-a-drop-in-replacement-for-rustc":{"tf":1.0},"diag.html#edition-gated-lints":{"tf":1.0},"mir/regionck.html#what-is-a-universe":{"tf":1.7320508075688773},"conventions.html#copyright-notice":{"tf":1.0},"traits/lowering-rules.html#lowering-where-clauses":{"tf":1.0},"traits/associated-types.html#equality-and-associated-types":{"tf":1.0},"traits/slg.html#the-slg-solver":{"tf":1.0},"rustdoc.html#from-soup-to-nuts":{"tf":1.0},"traits/implied-bounds.html#implied-bounds":{"tf":1.0},"tests/intro.html#the-compiler-testing-framework":{"tf":1.0},"traits/associated-types.html#associated-type-projection-and-normalization":{"tf":1.0},"traits/lowering-rules.html#associated-type-declarations":{"tf":1.0},"traits/chalk-overview.html#lowering":{"tf":1.0},"traits/chalk-overview.html#rules":{"tf":1.0},"traits/associated-types.html#projection-equality":{"tf":1.0},"traits/chalk-overview.html#an-overview-of-chalk":{"tf":1.0},"traits/associated-types.html#skolemized-associated-types":{"tf":1.0},"traits/lowering-rules.html#lowering-trait-items":{"tf":1.0},"traits/regions.html#region-constraints":{"tf":1.0},"appendix/stupid-stats.html#what-next":{"tf":1.0},"traits/lowering-rules.html#transforming-the-lowered-where-clauses":{"tf":1.0},"traits/canonical-queries.html#a-trait-query-in-rustc":{"tf":1.0},"traits/lowering-to-logic.html#source":{"tf":1.0},"traits/canonical-queries.html#the-traditional-interactive-prolog-query":{"tf":1.0},"traits/resolution.html#trait-resolution-old-style":{"tf":1.0},"conventions.html#prefer-exhaustive-matches":{"tf":1.4142135623730952},"traits/lowering-rules.html#associated-type-values":{"tf":1.0},"mir/regionck.html#final-example":{"tf":1.0},"ty.html#allocating-and-working-with-types":{"tf":1.0},"traits/chalk-overview.html#solver":{"tf":1.0},"traits/chalk-overview.html#blog-posts":{"tf":1.0},"traits/chalk-overview.html#parsing":{"tf":1.0},"traits/lowering-rules.html#trait-header":{"tf":1.0},"traits/chalk-overview.html#testing":{"tf":1.0},"traits/lowering-rules.html#lowering-impls":{"tf":1.0},"how-to-build-and-run.html#running-xpy-and-building-a-stage1-compiler":{"tf":1.7320508075688773},"traits/canonicalization.html#executing-the-query":{"tf":1.0},"hir.html#identifiers-in-the-hir":{"tf":1.0},"traits/canonicalization.html#canonicalization":{"tf":1.0},"tests/adding.html#editing-and-updating-the-reference-files":{"tf":1.0},"traits/canonicalization.html#processing-the-canonicalized-query-result":{"tf":1.0},"type-inference.html#inference-variables":{"tf":1.0},"traits/goals-and-clauses.html#domain-goals":{"tf":1.0},"traits/chalk-overview.html#intermediate-representation-ir":{"tf":1.0},"rustdoc.html#the-walking-tour-of-rustdoc":{"tf":1.0},"traits/goals-and-clauses.html#incomplete-chapter":{"tf":1.0},"traits/canonicalization.html#canonicalizing-the-query":{"tf":1.0},"about-this-guide.html#about-this-guide":{"tf":1.0},"diag.html#lint-groups":{"tf":1.0},"traits/bibliography.html#bibliography":{"tf":1.7320508075688773},"traits/goals-and-clauses.html#goals-and-clauses":{"tf":1.4142135623730952},"traits/lowering-rules.html#lowering-function-and-constant-declarations":{"tf":1.0},"traits/canonical-queries.html#canonical-queries":{"tf":1.0},"mir/borrowck.html#major-phases-of-the-borrow-checker":{"tf":1.0},"traits/canonical-queries.html#examples":{"tf":1.4142135623730952},"traits/lowering-to-logic.html#rust-traits-and-logic":{"tf":1.0},"traits/goals-and-clauses.html#goals-and-clauses-meta-structure":{"tf":1.0},"traits/canonicalization.html#canonicalizing-the-query-result":{"tf":1.7320508075688773},"query.html#queries-demand-driven-compilation":{"tf":1.0},"traits/index.html#trait-solving-new-style":{"tf":2.0},"traits/lowering-rules.html#lowering-impl-items":{"tf":1.0},"traits/lowering-module.html#the--program_clauses_for--query":{"tf":1.0},"traits/lowering-rules.html#rule-names-and-cross-references":{"tf":1.0},"compiletest.html#introduction":{"tf":1.0},"type-inference.html#subtyping-obligations":{"tf":1.0},"traits/lowering-to-logic.html#type-checking-normal-functions":{"tf":1.0},"traits/lowering-module.html#unit-tests":{"tf":1.0},"traits/chalk-overview.html#well-formedness-checks":{"tf":1.0},"traits/lowering-rules.html#lowering-traits":{"tf":1.0},"tests/adding.html#naming-your-test":{"tf":1.0},"tests/adding.html#adding-new-tests":{"tf":1.7320508075688773}},"df":86,"e":{"docs":{},"df":0,"r":{"docs":{"how-to-build-and-run.html#running-xpy-and-building-a-stage1-compiler":{"tf":1.4142135623730952}},"df":1}},"l":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{"tests/adding.html#normalization":{"tf":1.0}},"df":1}}},"t":{"docs":{},"df":0,"y":{"docs":{},"df":0,"p":{"docs":{"appendix/glossary.html#appendix-c-glossary":{"tf":1.7320508075688773}},"df":1,"e":{"docs":{},"df":0,"'":{"docs":{},"df":0,"d":{"docs":{"hir.html#identifiers-in-the-hir":{"tf":1.0},"mir/index.html#mir-data-types":{"tf":1.4142135623730952}},"df":2}}}}}}},"s":{"docs":{},"df":0,"t":{"docs":{"traits/goals-and-clauses.html#domain-goals":{"tf":1.0},"mir/index.html#key-mir-vocabulary":{"tf":1.0},"traits/resolution.html#selection":{"tf":1.0},"type-inference.html#snapshots":{"tf":1.0},"traits/resolution.html#overview":{"tf":1.7320508075688773},"traits/resolution.html#candidate-assembly":{"tf":1.4142135623730952},"mir/index.html#introduction-to-mir":{"tf":1.0},"name-resolution.html#scopes-and-ribs":{"tf":1.0},"traits/resolution.html#selection-during-translation":{"tf":2.0}},"df":9}},"a":{"docs":{},"df":0,"r":{"docs":{"compiletest.html#adding-a-new-header-command":{"tf":1.0},"compiletest.html#header-commands":{"tf":1.0}},"df":2}},"v":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"mir/visitor.html#mir-visitor":{"tf":1.0},"tests/running.html#running-tests":{"tf":1.0},"compiler-debugging.html#expensive-operations-in-logs":{"tf":1.0},"incremental-compilation.html#footnotes":{"tf":1.0},"appendix/glossary.html#appendix-c-glossary":{"tf":1.4142135623730952},"traits/associated-types.html#skolemized-associated-types":{"tf":1.0},"traits/goals-and-clauses.html#goals-and-clauses-meta-structure":{"tf":1.0},"incremental-compilation.html#the-query-dag":{"tf":1.0},"traits/canonical-queries.html#the-traditional-interactive-prolog-query":{"tf":1.0},"traits/resolution.html#selection":{"tf":1.0},"mir/passes.html#implementing-and-registering-a-pass":{"tf":1.0},"traits/resolution.html#overview":{"tf":1.0},"miri.html#interpretation":{"tf":1.0},"ty.html#allocating-and-working-with-types":{"tf":2.0}},"df":14}}}},"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"p":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"t":{"docs":{"miri.html#miri":{"tf":1.0}},"df":1}}}}}}}},"i":{"docs":{},"df":0,"c":{"docs":{"type-inference.html#extracting-region-constraints":{"tf":1.0},"compiler-debugging.html#getting-a-backtrace":{"tf":1.0},"rustc-driver.html#a-note-on-lifetimes":{"tf":1.0},"appendix/glossary.html#appendix-c-glossary":{"tf":1.0},"query.html#cycles-between-queries":{"tf":1.0},"compiler-debugging.html#debugging-llvm":{"tf":1.0},"incremental-compilation.html#the-query-dag":{"tf":1.0}},"df":7,"h":{"docs":{"appendix/glossary.html#appendix-c-glossary":{"tf":1.4142135623730952}},"df":1}},"s":{"docs":{},"df":0,"n":{"docs":{},"df":0,"'":{"docs":{},"df":0,"t":{"docs":{"rustdoc.html#from-soup-to-nuts":{"tf":1.0},"traits/lowering-rules.html#transforming-the-lowered-where-clauses":{"tf":1.0},"name-resolution.html#scopes-and-ribs":{"tf":1.0}},"df":3}}},"s":{"docs":{},"df":0,"u":{"docs":{"appendix/glossary.html#appendix-c-glossary":{"tf":1.0},"mir/regionck.html#another-example":{"tf":1.4142135623730952},"rustdoc.html#hot-potato":{"tf":1.0},"traits/chalk-overview.html#an-overview-of-chalk":{"tf":1.4142135623730952},"compiler-debugging.html#debugging-the-compiler":{"tf":1.0},"tests/adding.html#naming-your-test":{"tf":1.4142135623730952},"rustc-driver.html#a-note-on-lifetimes":{"tf":1.0},"about-this-guide.html#about-this-guide":{"tf":1.0},"appendix/stupid-stats.html#what-next":{"tf":1.0},"traits/index.html#trait-solving-new-style":{"tf":1.0},"tests/running.html#running-an-individual-test":{"tf":1.4142135623730952},"tests/adding.html#comment-explaining-what-the-test-is-about":{"tf":1.0}},"df":12}},"o":{"docs":{},"df":0,"l":{"docs":{"conventions.html#formatting-and-the-tidy-script":{"tf":1.0},"conventions.html#how-to-structure-your-pr":{"tf":2.0},"traits/canonicalization.html#canonicalization":{"tf":1.4142135623730952}},"df":3}},"i":{"docs":{},"df":0,"z":{"docs":{"traits/resolution.html#major-concepts":{"tf":1.0},"traits/hrtb.html#higher-ranked-trait-obligations":{"tf":2.23606797749979},"traits/resolution.html#selection-during-translation":{"tf":1.4142135623730952},"traits/hrtb.html#basic-matching-and-skolemization-leaks":{"tf":3.1622776601683797},"traits/caching.html#an-example":{"tf":1.4142135623730952},"traits/hrtb.html#higher-ranked-trait-bounds":{"tf":1.0},"traits/resolution.html#confirmation":{"tf":2.0},"traits/resolution.html#candidate-assembly":{"tf":2.6457513110645909}},"df":8}}},"n":{"docs":{},"df":0,"s":{"docs":{},"df":0,"p":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{"the-parser.html#the-parser":{"tf":1.0},"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.0},"conventions.html#using-crates-from-cratesio":{"tf":1.0},"tests/adding.html#what-kind-of-test-should-i-add":{"tf":1.4142135623730952},"ty.html#allocating-and-working-with-types":{"tf":1.0},"incremental-compilation.html#the-try-mark-green-algorithm":{"tf":1.0},"rustc-driver.html#the-rustc-driver":{"tf":1.4142135623730952}},"df":7}}}},"t":{"docs":{},"df":0,"r":{"docs":{},"df":0,"u":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{"traits/index.html#trait-solving-new-style":{"tf":1.0},"compiletest.html#header-commands":{"tf":1.0},"compiletest.html#adding-a-new-header-command":{"tf":1.0}},"df":3}},"m":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{"incremental-compilation.html#the-query-dag":{"tf":1.0}},"df":1}}}}}},"e":{"docs":{},"df":0,"a":{"docs":{},"df":0,"d":{"docs":{"diag.html#error-messages":{"tf":1.7320508075688773},"traits/canonical-queries.html#examples":{"tf":1.0},"diag.html#suggestions":{"tf":1.0},"traits/canonical-queries.html#the-traditional-interactive-prolog-query":{"tf":1.0},"mir/index.html#mir-data-types":{"tf":1.0},"query.html#cycles-between-queries":{"tf":1.0},"tests/adding.html#normalization":{"tf":1.0},"high-level-overview.html#crate-structure":{"tf":1.0},"type-inference.html#extracting-region-constraints":{"tf":1.0},"traits/canonicalization.html#processing-the-canonicalized-query-result":{"tf":1.0},"diag.html#declaring-a-lint":{"tf":1.4142135623730952},"how-to-build-and-run.html#create-a-configtoml":{"tf":1.0},"conventions.html#how-to-structure-your-pr":{"tf":1.0},"rustc-driver.html#a-note-on-lifetimes":{"tf":1.0},"traits/canonical-queries.html#a-trait-query-in-rustc":{"tf":1.0},"hir.html#out-of-band-storage-and-the--crate--type":{"tf":1.0},"const-eval.html#constant-evaluation":{"tf":1.0},"mir/regionck.html#what-is-a-universe":{"tf":1.4142135623730952},"rustdoc.html#other-tricks-up-its-sleeve":{"tf":1.0},"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.0}},"df":20}}},"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"c":{"docs":{"miri.html#miri":{"tf":1.0},"mir/index.html#mir-data-types":{"tf":1.0},"const-eval.html#constant-evaluation":{"tf":1.4142135623730952},"miri.html#allocations":{"tf":1.0},"ty.html#allocating-and-working-with-types":{"tf":1.0}},"df":5,"e":{"docs":{},"df":0,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"m":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"o":{"docs":{},"df":0,"(":{"docs":{},"df":0,"l":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"g":{"docs":{},"df":0,"t":{"docs":{},"df":0,"h":{"docs":{},"df":0,"_":{"docs":{},"df":0,"d":{"docs":{},"df":0,"e":{"docs":{},"df":0,"f":{"docs":{},"df":0,"_":{"docs":{},"df":0,"i":{"docs":{},"df":0,"d":{"docs":{"miri.html#miri":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"df":0,"i":{"docs":{"type-inference.html#inference-variables":{"tf":1.0},"traits/hrtb.html#basic-matching-and-skolemization-leaks":{"tf":1.0},"traits/canonical-queries.html#a-trait-query-in-rustc":{"tf":1.0},"traits/canonicalization.html#canonicalizing-the-query-result":{"tf":1.0},"traits/canonicalization.html#processing-the-canonicalized-query-result":{"tf":1.4142135623730952},"mir/regionck.html#another-example":{"tf":1.0},"traits/lowering-rules.html#associated-type-declarations":{"tf":1.0},"variance.html#variance-of-type-and-lifetime-parameters":{"tf":1.0},"traits/canonicalization.html#executing-the-query":{"tf":1.7320508075688773},"mir/regionck.html#final-example":{"tf":1.0},"traits/canonical-queries.html#the-traditional-interactive-prolog-query":{"tf":1.4142135623730952}},"df":11}}},"l":{"docs":{"compiler-debugging.html#formatting-graphviz-output-dot-files":{"tf":1.4142135623730952},"how-to-build-and-run.html#how-to-build-the-compiler-and-run-what-you-built":{"tf":1.0}},"df":2}}},"i":{"docs":{},"df":0,"d":{"docs":{"macro-expansion.html#the-macro-parser":{"tf":1.0},"miri.html#allocations":{"tf":1.0},"compiler-debugging.html#expensive-operations-in-logs":{"tf":1.0},"traits/lowering-rules.html#lowering-traits":{"tf":1.0},"rustdoc.html#from-soup-to-nuts":{"tf":1.0},"traits/goals-and-clauses.html#domain-goals":{"tf":1.4142135623730952},"rustc-driver.html#a-note-on-lifetimes":{"tf":1.0}},"df":7},"g":{"docs":{},"df":0,"h":{"docs":{},"df":0,"t":{"docs":{"incremental-compilation.html#the-basic-algorithm":{"tf":1.0}},"df":1}}}},"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"t":{"docs":{"mir/passes.html#implementing-and-registering-a-pass":{"tf":1.0},"rustdoc.html#other-tricks-up-its-sleeve":{"tf":1.0},"conventions.html#use-todo-comments-for-things-you-dont-want-to-forget":{"tf":1.0},"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.0},"query.html#how-the-compiler-executes-a-query":{"tf":1.0},"traits/lowering-rules.html#notation":{"tf":1.0},"traits/specialization.html#specialization":{"tf":1.0}},"df":7}}}},"l":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{"how-to-build-and-run.html#create-a-configtoml":{"tf":1.0},"rustdoc.html#from-crate-to-clean":{"tf":1.0},"rustdoc.html#hot-potato":{"tf":1.0},"compiletest.html#header-commands":{"tf":1.0}},"df":4}}},"a":{"docs":{},"df":0,"c":{"docs":{},"df":0,"c":{"docs":{},"df":0,"u":{"docs":{},"df":0,"r":{"docs":{"name-resolution.html#todo":{"tf":1.0}},"df":1}}}}},"i":{"docs":{},"df":0,"t":{"docs":{},"df":0,"i":{"docs":{"miri.html#interpretation":{"tf":1.0},"rustc-driver.html#the-rustc-driver":{"tf":1.0},"compiletest.html#adding-a-new-header-command":{"tf":1.0},"mir/passes.html#mir-passes":{"tf":1.0},"mir/borrowck.html#mir-borrow-check":{"tf":1.0},"const-eval.html#constant-evaluation":{"tf":1.0},"miri.html#miri":{"tf":1.0},"type-inference.html#lexical-region-resolution":{"tf":1.0},"mir/regionck.html#final-example":{"tf":1.0},"traits/resolution.html#candidate-assembly":{"tf":1.0},"mir/regionck.html#back-to-our-example":{"tf":1.0}},"df":11}}},"c":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"d":{"docs":{"appendix/background.html#what-is-a-dataflow-analysis":{"tf":1.0}},"df":1},"m":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{"query.html#queries-demand-driven-compilation":{"tf":1.0},"incremental-compilation.html#incremental-compilation":{"tf":1.7320508075688773},"tests/intro.html#compiletest-test-suites":{"tf":1.4142135623730952},"query.html#adding-a-new-kind-of-query":{"tf":1.0},"high-level-overview.html#the-main-stages-of-compilation":{"tf":1.0},"incremental-compilation.html#improvements-to-the-basic-algorithm":{"tf":1.0},"appendix/glossary.html#appendix-c-glossary":{"tf":1.7320508075688773},"hir.html#out-of-band-storage-and-the--crate--type":{"tf":1.0},"high-level-overview.html#crate-structure":{"tf":1.0},"name-resolution.html#todo":{"tf":1.0},"hir.html#identifiers-in-the-hir":{"tf":1.0},"incremental-compilation.html#the-try-mark-green-algorithm":{"tf":1.0},"tests/adding.html#revisions":{"tf":1.4142135623730952},"how-to-build-and-run.html#running-xpy-and-building-a-stage1-compiler":{"tf":1.4142135623730952},"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.0}},"df":15,"_":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"g":{"docs":{"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.0}},"df":1}}}}}}}}}},"o":{"docs":{},"df":0,"m":{"docs":{},"df":0,"p":{"docs":{},"df":0,"l":{"docs":{},"df":0,"e":{"docs":{},"df":0,"t":{"docs":{"name-resolution.html#todo":{"tf":1.0},"traits/goals-and-clauses.html#incomplete-chapter":{"tf":1.4142135623730952}},"df":2}}},"a":{"docs":{},"df":0,"t":{"docs":{"diag.html#edition-gated-lints":{"tf":1.0}},"df":1}}}},"r":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{"incrcomp-debugging.html#tracking-down-incorrect-edges":{"tf":1.4142135623730952}},"df":1}}}},"p":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{"traits/chalk-overview.html#parsing":{"tf":1.0}},"df":1}}}},"n":{"docs":{},"df":0,"s":{"docs":{},"df":0,"i":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{"traits/chalk-overview.html#an-overview-of-chalk":{"tf":1.0}},"df":1}}}}}},"l":{"docs":{},"df":0,"u":{"docs":{},"df":0,"d":{"docs":{"mir/borrowck.html#major-phases-of-the-borrow-checker":{"tf":1.0},"ty.html#beyond-types-other-kinds-of-arena-allocated-data-structures":{"tf":1.0},"method-lookup.html#method-lookup":{"tf":1.0},"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.0},"tests/intro.html#other-tests":{"tf":2.0},"high-level-overview.html#crate-structure":{"tf":1.0},"rustdoc.html#cheat-sheet":{"tf":1.0},"hir.html#identifiers-in-the-hir":{"tf":1.0},"compiler-debugging.html#getting-logging-output":{"tf":1.4142135623730952},"tests/intro.html#testing-on-emulators":{"tf":1.4142135623730952},"macro-expansion.html#example":{"tf":1.0},"mir/regionck.html#final-example":{"tf":1.4142135623730952},"high-level-overview.html#the-main-stages-of-compilation":{"tf":1.4142135623730952},"appendix/glossary.html#appendix-c-glossary":{"tf":1.4142135623730952},"tests/adding.html#revisions":{"tf":1.0},"traits/hrtb.html#basic-matching-and-skolemization-leaks":{"tf":1.0},"appendix/stupid-stats.html#overview-of-the-compilation-process":{"tf":1.7320508075688773},"tests/adding.html#naming-your-test":{"tf":1.0},"tests/intro.html#testing-with-docker-images":{"tf":1.0},"mir/regionck.html#mir-based-region-checking-nll":{"tf":1.0},"tests/adding.html#comment-explaining-what-the-test-is-about":{"tf":1.0},"compiler-debugging.html#debugging-llvm":{"tf":1.0},"tests/running.html#running-an-individual-test":{"tf":1.4142135623730952},"traits/canonicalization.html#canonicalizing-the-query-result":{"tf":1.0},"name-resolution.html#scopes-and-ribs":{"tf":1.0},"rustdoc.html#other-tricks-up-its-sleeve":{"tf":1.0},"mir/regionck.html#back-to-our-example":{"tf":1.0},"traits/chalk-overview.html#parsing":{"tf":1.0}},"df":28}}},"u":{"docs":{},"df":0,"r":{"docs":{"traits/resolution.html#candidate-assembly":{"tf":1.4142135623730952}},"df":1}}},"v":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{"variance.html#variance-of-type-and-lifetime-parameters":{"tf":1.0},"variance.html#variance-and-associated-types":{"tf":1.7320508075688773},"variance.html#addendum-variance-on-traits":{"tf":1.0},"variance.html#constraints":{"tf":1.0},"variance.html#the-algorithm":{"tf":1.7320508075688773}},"df":5}}},"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"s":{"docs":{"traits/hrtb.html#higher-ranked-trait-obligations":{"tf":1.0}},"df":1}}},"o":{"docs":{},"df":0,"c":{"docs":{"macro-expansion.html#the-macro-parser":{"tf":2.8284271247461905},"macro-expansion.html#example":{"tf":1.4142135623730952},"query.html#adding-a-new-kind-of-query":{"tf":1.4142135623730952},"macro-expansion.html#macro-expansion":{"tf":1.4142135623730952},"diag.html#edition-gated-lints":{"tf":1.0}},"df":5},"k":{"docs":{"mir/visitor.html#mir-visitor":{"tf":1.0},"high-level-overview.html#crate-structure":{"tf":1.0},"tests/running.html#running-an-individual-test":{"tf":1.4142135623730952},"high-level-overview.html#the-main-stages-of-compilation":{"tf":1.0},"miri.html#interpretation":{"tf":1.0},"mir/regionck.html#mir-based-region-checking-nll":{"tf":1.4142135623730952},"traits/lowering-module.html#unit-tests":{"tf":1.0},"query.html#queries-demand-driven-compilation":{"tf":1.7320508075688773},"type-inference.html#extracting-region-constraints":{"tf":2.0},"query.html#how-the-compiler-executes-a-query":{"tf":2.0},"mir/borrowck.html#major-phases-of-the-borrow-checker":{"tf":1.0},"query.html#cycles-between-queries":{"tf":2.0},"query.html#adding-a-new-kind-of-query":{"tf":1.0},"compiletest.html#implementing-the-behavior-change":{"tf":1.7320508075688773},"miri.html#miri":{"tf":2.23606797749979},"hir.html#out-of-band-storage-and-the--crate--type":{"tf":1.0},"method-lookup.html#candidate-assembly":{"tf":1.0},"type-inference.html#snapshots":{"tf":1.0},"traits/resolution.html#candidate-assembly":{"tf":1.0},"traits/canonical-queries.html#examples":{"tf":1.0},"traits/lowering-module.html#the--program_clauses_for--query":{"tf":1.0},"query.html#invoking-queries":{"tf":2.0}},"df":22},"l":{"docs":{},"df":0,"v":{"docs":{"about-this-guide.html#about-this-guide":{"tf":1.0},"traits/lowering-rules.html#function-and-constant-values":{"tf":1.0},"variance.html#constraints":{"tf":1.0},"ty.html#allocating-and-working-with-types":{"tf":1.0},"type-inference.html#subtyping-obligations":{"tf":1.0},"traits/index.html#trait-solving-new-style":{"tf":1.4142135623730952},"incremental-compilation.html#the-try-mark-green-algorithm":{"tf":1.0}},"df":7}}}},"n":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"param_env.html#parameter-environment":{"tf":1.0},"traits/goals-and-clauses.html#domain-goals":{"tf":1.0},"name-resolution.html#scopes-and-ribs":{"tf":1.4142135623730952},"ty.html#the-tcx-and-how-it-uses-lifetimes":{"tf":1.0}},"df":4,"m":{"docs":{},"df":0,"o":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{"ty.html#the-tcx-and-how-it-uses-lifetimes":{"tf":1.7320508075688773},"ty.html#allocating-and-working-with-types":{"tf":1.0},"name-resolution.html#scopes-and-ribs":{"tf":1.0}},"df":3}}}}}}},"f":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{"traits/resolution.html#selection":{"tf":1.0}},"df":1}},"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"r":{"docs":{},"df":0,"u":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{},"df":0,"u":{"docs":{},"df":0,"r":{"docs":{"diag.html#lints":{"tf":1.0},"tests/intro.html#testing-infrastructure":{"tf":1.4142135623730952}},"df":2}}}}}}}}}},"c":{"docs":{},"df":0,"x":{"docs":{"appendix/glossary.html#appendix-c-glossary":{"tf":1.4142135623730952},"type-inference.html#creating-an-inference-context":{"tf":1.7320508075688773}},"df":2,".":{"docs":{},"df":0,"c":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"_":{"docs":{},"df":0,"s":{"docs":{},"df":0,"u":{"docs":{},"df":0,"b":{"docs":{"type-inference.html#trying-equality":{"tf":1.0}},"df":1}}},"e":{"docs":{},"df":0,"q":{"docs":{"type-inference.html#trying-equality":{"tf":1.0}},"df":1}}}}}},"a":{"docs":{},"df":0,"t":{"docs":{},"df":0,"(":{"docs":{},"df":0,".":{"docs":{},"df":0,".":{"docs":{},"df":0,")":{"docs":{},"df":0,".":{"docs":{},"df":0,"s":{"docs":{},"df":0,"u":{"docs":{},"df":0,"b":{"docs":{"type-inference.html#enforcing-equality--subtyping":{"tf":1.0}},"df":1}}}}},".":{"docs":{},"df":0,")":{"docs":{},"df":0,".":{"docs":{},"df":0,"e":{"docs":{},"df":0,"q":{"docs":{},"df":0,"(":{"docs":{},"df":0,"t":{"docs":{"type-inference.html#enforcing-equality--subtyping":{"tf":1.0}},"df":1}}}}}}}}}}}}}}},"e":{"docs":{},"df":0,"r":{"docs":{"mir/regionck.html#back-to-our-example":{"tf":1.0},"method-lookup.html#method-lookup":{"tf":1.0},"ty.html#allocating-and-working-with-types":{"tf":2.23606797749979},"mir/regionck.html#universes-and-skolemized-region-elements":{"tf":1.7320508075688773},"type-inference.html#inference-variables":{"tf":2.6457513110645909},"traits/resolution.html#selection-during-translation":{"tf":1.0},"type-inference.html#type-inference":{"tf":2.449489742783178},"traits/canonicalization.html#executing-the-query":{"tf":2.8284271247461905},"traits/specialization.html#specialization":{"tf":1.0},"type-inference.html#extracting-region-constraints":{"tf":1.0},"traits/resolution.html#candidate-assembly":{"tf":2.23606797749979},"traits/lowering-to-logic.html#rust-traits-and-logic":{"tf":1.0},"type-checking.html#type-checking":{"tf":1.0},"traits/canonicalization.html#canonicalization":{"tf":2.0},"traits/index.html#trait-solving-new-style":{"tf":1.0},"traits/canonicalization.html#processing-the-canonicalized-query-result":{"tf":1.7320508075688773},"mir/regionck.html#what-is-a-universe":{"tf":1.7320508075688773},"mir/regionck.html#skolemization-and-outlives-constraints":{"tf":1.0},"ty.html#the-tcx-and-how-it-uses-lifetimes":{"tf":2.449489742783178},"type-inference.html#creating-an-inference-context":{"tf":2.23606797749979},"traits/canonical-queries.html#the-traditional-interactive-prolog-query":{"tf":1.0},"traits/canonical-queries.html#examples":{"tf":1.4142135623730952},"appendix/glossary.html#appendix-c-glossary":{"tf":2.8284271247461905},"traits/canonical-queries.html#a-trait-query-in-rustc":{"tf":1.4142135623730952},"type-inference.html#snapshots":{"tf":1.0},"mir/borrowck.html#major-phases-of-the-borrow-checker":{"tf":1.4142135623730952},"variance.html#variance-of-type-and-lifetime-parameters":{"tf":2.0},"query.html#how-the-compiler-executes-a-query":{"tf":1.0},"type-inference.html#a-note-on-terminology":{"tf":1.0},"traits/lowering-to-logic.html#lowering-to-logic":{"tf":1.4142135623730952},"mir/regionck.html#mir-based-region-checking-nll":{"tf":2.0},"mir/regionck.html#extending-the-universal-regions-check":{"tf":1.0},"traits/caching.html#an-example":{"tf":1.4142135623730952},"traits/resolution.html#selection":{"tf":1.0},"traits/hrtb.html#basic-matching-and-skolemization-leaks":{"tf":1.0},"traits/associated-types.html#associated-type-projection-and-normalization":{"tf":1.0},"variance.html#dependency-graph-management":{"tf":1.7320508075688773},"appendix/stupid-stats.html#overview-of-the-compilation-process":{"tf":1.0},"traits/associated-types.html#integration-with-unification":{"tf":1.0}},"df":39,"c":{"docs":{},"df":0,"t":{"docs":{},"df":0,"x":{"docs":{},"df":0,"t":{"docs":{"mir/regionck.html#universes-and-skolemized-region-elements":{"tf":1.4142135623730952},"type-inference.html#creating-an-inference-context":{"tf":1.0}},"df":2,"b":{"docs":{},"df":0,"u":{"docs":{},"df":0,"i":{"docs":{},"df":0,"l":{"docs":{},"df":0,"d":{"docs":{"type-inference.html#creating-an-inference-context":{"tf":1.0}},"df":1}}}}},"<":{"docs":{},"df":0,"'":{"docs":{},"df":0,"c":{"docs":{},"df":0,"x":{"docs":{"type-inference.html#creating-an-inference-context":{"tf":1.0}},"df":1}}}}}}}},"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"u":{"docs":{},"df":0,"l":{"docs":{},"df":0,"t":{"docs":{"type-inference.html#enforcing-equality--subtyping":{"tf":1.0}},"df":1}}}}}},"o":{"docs":{},"df":0,"k":{"docs":{"type-inference.html#enforcing-equality--subtyping":{"tf":1.4142135623730952},"type-inference.html#subtyping-obligations":{"tf":1.0}},"df":2}},"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"c":{"docs":{"type-inference.html#inference-variables":{"tf":1.0},"type-inference.html#type-inference":{"tf":1.0},"type-inference.html#enforcing-equality--subtyping":{"tf":1.0},"type-inference.html#region-constraints":{"tf":1.0}},"df":4}}}}},"l":{"docs":{},"df":0,"u":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"c":{"docs":{"traits/caching.html#caching-and-subtle-considerations-therewith":{"tf":1.0}},"df":1}}}}},"o":{"docs":{"appendix/background.html#what-is-co--and-contra-variance":{"tf":1.0},"diag.html#suggestions":{"tf":1.0},"compiler-debugging.html#getting-logging-output":{"tf":2.23606797749979},"appendix/stupid-stats.html#compilercalls":{"tf":1.0},"compiletest.html#header-commands":{"tf":1.0},"appendix/stupid-stats.html#compilercontroller":{"tf":1.4142135623730952},"traits/canonicalization.html#canonicalizing-the-query-result":{"tf":1.0},"tests/intro.html#compiletest-test-suites":{"tf":1.0},"diag.html#error-messages":{"tf":1.0}},"df":9,"r":{"docs":{},"df":0,"m":{"docs":{"diag.html#suggestions":{"tf":2.0},"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.0},"hir.html#identifiers-in-the-hir":{"tf":1.0},"macro-expansion.html#example":{"tf":1.0},"mir/regionck.html#mir-based-region-checking-nll":{"tf":1.0},"rustdoc.html#from-soup-to-nuts":{"tf":1.4142135623730952},"traits/chalk-overview.html#an-overview-of-chalk":{"tf":1.0},"mir/passes.html#implementing-and-registering-a-pass":{"tf":1.0},"compiler-debugging.html#getting-logging-output":{"tf":1.0},"query.html#how-the-compiler-executes-a-query":{"tf":1.4142135623730952},"traits/canonical-queries.html#a-trait-query-in-rustc":{"tf":1.4142135623730952},"traits/chalk-overview.html#lowering":{"tf":1.0},"traits/resolution.html#selection-during-translation":{"tf":1.0},"appendix/glossary.html#appendix-c-glossary":{"tf":1.4142135623730952},"traits/canonicalization.html#canonicalizing-the-query":{"tf":1.0},"tests/intro.html#other-tests":{"tf":1.0},"appendix/stupid-stats.html#overview-of-the-compilation-process":{"tf":1.0},"appendix/code-index.html#appendix-d-code-index":{"tf":1.4142135623730952},"macro-expansion.html#the-macro-parser":{"tf":1.0},"method-lookup.html#method-lookup":{"tf":1.0},"tests/adding.html#normalization":{"tf":1.0},"appendix/stupid-stats.html#compilercontroller":{"tf":1.7320508075688773},"the-parser.html#the-parser":{"tf":1.0},"param_env.html#parameter-environment":{"tf":1.7320508075688773},"query.html#queries-demand-driven-compilation":{"tf":1.0},"rustc-driver.html#the-rustc-driver":{"tf":1.0},"type-inference.html#creating-an-inference-context":{"tf":1.0},"type-checking.html#type-collection":{"tf":1.0}},"df":28}}},"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{"traits/canonical-queries.html#the-traditional-interactive-prolog-query":{"tf":1.0},"diag.html#declaring-a-lint":{"tf":1.0}},"df":2,"u":{"docs":{},"df":0,"m":{"docs":{"traits/goals-and-clauses.html#coinductive-goals":{"tf":1.0}},"df":1}}}}}}},"h":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"method-lookup.html#method-lookup":{"tf":1.0},"ty.html#allocating-and-working-with-types":{"tf":1.0},"method-lookup.html#candidate-assembly":{"tf":3.0}},"df":3,"i":{"docs":{},"df":0,"t":{"docs":{"traits/goals-and-clauses.html#domain-goals":{"tf":1.0}},"df":1}}}}},"p":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{"query.html#queries-demand-driven-compilation":{"tf":1.0},"traits/specialization.html#specialization":{"tf":1.0},"traits/lowering-to-logic.html#rust-traits-and-logic":{"tf":1.0},"incremental-compilation.html#the-query-dag":{"tf":1.0},"variance.html#variance-and-associated-types":{"tf":1.0},"traits/canonical-queries.html#a-trait-query-in-rustc":{"tf":1.0},"appendix/stupid-stats.html#compilercalls":{"tf":1.7320508075688773},"traits/goals-and-clauses.html#domain-goals":{"tf":1.7320508075688773},"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":2.6457513110645909},"name-resolution.html#name-resolution":{"tf":1.4142135623730952},"high-level-overview.html#the-main-stages-of-compilation":{"tf":1.4142135623730952},"rustc-driver.html#the-rustc-driver":{"tf":1.0},"incremental-compilation.html#the-basic-algorithm":{"tf":1.7320508075688773},"appendix/glossary.html#appendix-c-glossary":{"tf":1.0},"incremental-compilation.html#the-try-mark-green-algorithm":{"tf":1.4142135623730952},"variance.html#addendum-variance-on-traits":{"tf":1.0},"macro-expansion.html#the-macro-parser":{"tf":1.0},"traits/canonicalization.html#canonicalizing-the-query-result":{"tf":1.0},"mir/borrowck.html#major-phases-of-the-borrow-checker":{"tf":1.0}},"df":19,"_":{"docs":{},"df":0,"p":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{},"df":0,"h":{"docs":{"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.4142135623730952}},"df":1}}}}}}}},"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"g":{"docs":{"type-inference.html#inference-variables":{"tf":1.0},"compiler-debugging.html#getting-a-backtrace-for-errors":{"tf":2.449489742783178},"const-eval.html#constant-evaluation":{"tf":1.0}},"df":3,"r":{"docs":{"tests/intro.html#testing-infrastructure":{"tf":1.0},"hir.html#out-of-band-storage-and-the--crate--type":{"tf":1.0},"traits/associated-types.html#integration-with-unification":{"tf":1.7320508075688773},"traits/associated-types.html#equality-and-associated-types":{"tf":1.0},"type-inference.html#inference-variables":{"tf":1.4142135623730952}},"df":5}},"n":{"docs":{},"df":0,"t":{"docs":{"query.html#adding-a-new-kind-of-query":{"tf":1.0},"mir/regionck.html#mir-based-region-checking-nll":{"tf":1.0}},"df":2,"i":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{"tests/adding.html#editing-and-updating-the-reference-files":{"tf":1.0},"traits/lowering-module.html#unit-tests":{"tf":1.0}},"df":2}}}},"d":{"docs":{"tests/adding.html#revisions":{"tf":1.0},"traits/resolution.html#overview":{"tf":1.0},"high-level-overview.html#crate-structure":{"tf":1.0},"high-level-overview.html#the-main-stages-of-compilation":{"tf":1.0},"tests/adding.html#guide-to-the-ui-tests":{"tf":1.0},"variance.html#trait-variance-and-vtable-resolution":{"tf":1.0},"traits/chalk-overview.html#parsing":{"tf":1.0},"mir/index.html#key-mir-vocabulary":{"tf":1.0}},"df":8}},"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{"mir/passes.html#seeing-how-the-mir-changes-as-the-compiler-executes":{"tf":1.0},"mir/regionck.html#mir-based-region-checking-nll":{"tf":1.0},"traits/resolution.html#selection-during-translation":{"tf":1.0},"traits/canonical-queries.html#the-traditional-interactive-prolog-query":{"tf":1.4142135623730952},"ty.html#the-tcx-and-how-it-uses-lifetimes":{"tf":1.0},"tests/intro.html#further-reading":{"tf":1.0},"type-inference.html#enforcing-equality--subtyping":{"tf":1.4142135623730952},"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.4142135623730952},"type-inference.html#subtyping-obligations":{"tf":1.0},"tests/intro.html#testing-on-emulators":{"tf":1.0},"traits/lowering-to-logic.html#type-checking-normal-functions":{"tf":1.4142135623730952},"traits/hrtb.html#higher-ranked-trait-obligations":{"tf":1.0}},"df":12,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"g":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{"macro-expansion.html#the-macro-parser":{"tf":1.0}},"df":1}}}}}}}},"c":{"docs":{},"df":0,"h":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"g":{"docs":{"type-inference.html#a-note-on-terminology":{"tf":1.0}},"df":1}}}}},"n":{"docs":{"appendix/stupid-stats.html#appendix-a-a-tutorial-on-creating-a-drop-in-replacement-for-rustc":{"tf":1.0},"type-checking.html#type-collection":{"tf":1.4142135623730952},"query.html#how-the-compiler-executes-a-query":{"tf":1.0},"query.html#adding-a-new-kind-of-query":{"tf":1.0},"traits/associated-types.html#skolemized-associated-types":{"tf":1.0},"traits/canonical-queries.html#a-trait-query-in-rustc":{"tf":1.0},"mir/regionck.html#universes-and-skolemized-region-elements":{"tf":1.0},"appendix/glossary.html#appendix-c-glossary":{"tf":1.4142135623730952},"ty.html#the--ty--module-representing-types":{"tf":1.0},"traits/chalk-overview.html#well-formedness-checks":{"tf":1.0},"appendix/stupid-stats.html#what-next":{"tf":1.0},"miri.html#miri":{"tf":1.4142135623730952},"rustc-driver.html#a-note-on-lifetimes":{"tf":1.4142135623730952},"high-level-overview.html#crate-structure":{"tf":1.0},"ty.html#beyond-types-other-kinds-of-arena-allocated-data-structures":{"tf":1.0},"rustdoc.html#the-walking-tour-of-rustdoc":{"tf":1.4142135623730952},"compiler-debugging.html#getting-a-backtrace-for-errors":{"tf":1.0},"appendix/code-index.html#appendix-d-code-index":{"tf":1.0},"how-to-build-and-run.html#create-a-configtoml":{"tf":1.0},"rustc-driver.html#the-rustc-driver":{"tf":1.4142135623730952},"ty.html#allocating-and-working-with-types":{"tf":1.4142135623730952},"how-to-build-and-run.html#running-xpy-and-building-a-stage1-compiler":{"tf":1.0}},"df":22,"e":{"docs":{},"df":0,"t":{"docs":{"how-to-build-and-run.html#running-xpy-and-building-a-stage1-compiler":{"tf":1.0},"tests/adding.html#naming-your-test":{"tf":1.0}},"df":2}}},"m":{"docs":{},"df":0,"e":{"docs":{},"df":0,"d":{"docs":{},"df":0,"i":{"docs":{"appendix/glossary.html#appendix-c-glossary":{"tf":1.0},"traits/chalk-overview.html#intermediate-representation-ir":{"tf":1.7320508075688773},"mir/index.html#the-mir-mid-level-ir":{"tf":1.0},"rustdoc.html#from-crate-to-clean":{"tf":1.4142135623730952},"mir/passes.html#seeing-how-the-mir-changes-as-the-compiler-executes":{"tf":1.0},"conventions.html#how-to-structure-your-pr":{"tf":1.0},"traits/hrtb.html#higher-ranked-trait-obligations":{"tf":1.0},"mir/passes.html#stealing":{"tf":1.4142135623730952},"mir/passes.html#mir-passes":{"tf":1.0},"appendix/stupid-stats.html#overview-of-the-compilation-process":{"tf":1.0},"high-level-overview.html#the-main-stages-of-compilation":{"tf":1.0},"hir.html#the-hir":{"tf":1.0}},"df":12}}},"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"g":{"docs":{},"df":0,"l":{"docs":{"mir/index.html#key-mir-vocabulary":{"tf":1.0}},"df":1}}}}},"a":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{"appendix/glossary.html#appendix-c-glossary":{"tf":1.0},"method-lookup.html#method-lookup":{"tf":1.0},"mir/regionck.html#what-is-a-universe":{"tf":1.0},"appendix/stupid-stats.html#appendix-a-a-tutorial-on-creating-a-drop-in-replacement-for-rustc":{"tf":1.0},"traits/canonical-queries.html#the-traditional-interactive-prolog-query":{"tf":1.4142135623730952},"tests/intro.html#testing-on-emulators":{"tf":1.0},"traits/caching.html#where-clauses-and-the-local-vs-global-cache":{"tf":1.0}},"df":7}}},"p":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"t":{"docs":{"tests/adding.html#header-commands-configuring-rustc":{"tf":1.0},"miri.html#interpretation":{"tf":1.4142135623730952},"appendix/glossary.html#appendix-c-glossary":{"tf":1.0},"variance.html#addendum-variance-on-traits":{"tf":1.0},"tests/adding.html#adding-new-tests":{"tf":1.4142135623730952}},"df":5}},"o":{"docs":{},"df":0,"c":{"docs":{},"df":0,"e":{"docs":{},"df":0,"d":{"docs":{},"df":0,"u":{"docs":{},"df":0,"r":{"docs":{"type-checking.html#type-collection":{"tf":1.0}},"df":1}}}}}}}},"f":{"docs":{},"df":0,"a":{"docs":{},"df":0,"c":{"docs":{"traits/canonical-queries.html#the-traditional-interactive-prolog-query":{"tf":1.0},"appendix/stupid-stats.html#appendix-a-a-tutorial-on-creating-a-drop-in-replacement-for-rustc":{"tf":1.0},"name-resolution.html#name-resolution":{"tf":1.0},"rustdoc.html#from-clean-to-crate":{"tf":1.0},"traits/resolution.html#selection":{"tf":1.0},"macro-expansion.html#the-macro-parser":{"tf":1.7320508075688773},"appendix/stupid-stats.html#overview-of-the-compilation-process":{"tf":1.4142135623730952}},"df":7}}},"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{"mir/regionck.html#another-example":{"tf":1.4142135623730952}},"df":1}}}},"i":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{"query.html#adding-a-new-kind-of-query":{"tf":1.0}},"df":1}}}}},"a":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{"traits/lowering-rules.html#transforming-the-lowered-where-clauses":{"tf":1.0},"type-inference.html#extracting-region-constraints":{"tf":1.0}},"df":2}}},"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"d":{"docs":{},"df":0,"u":{"docs":{},"df":0,"c":{"docs":{"conventions.html#how-to-structure-your-pr":{"tf":1.4142135623730952},"mir/index.html#the-mir-mid-level-ir":{"tf":1.4142135623730952},"traits/associated-types.html#projection-equality":{"tf":1.0},"traits/goals-and-clauses.html#incomplete-chapter":{"tf":1.0},"name-resolution.html#overall-strategy":{"tf":1.0},"traits/goals-and-clauses.html#domain-goals":{"tf":1.0},"traits/associated-types.html#skolemized-associated-types":{"tf":1.0},"mir/regionck.html#mir-based-region-checking-nll":{"tf":1.0},"appendix/background.html#what-is-a-free-region-or-a-free-variable-what-about-bound-region":{"tf":1.0},"mir/regionck.html#what-is-a-universe":{"tf":1.0},"mir/index.html#key-mir-vocabulary":{"tf":1.4142135623730952},"name-resolution.html#name-resolution":{"tf":1.0},"traits/associated-types.html#equality-and-associated-types":{"tf":1.0},"name-resolution.html#scopes-and-ribs":{"tf":1.4142135623730952}},"df":14,"t":{"docs":{"compiletest.html#introduction":{"tf":1.7320508075688773},"mir/index.html#introduction-to-mir":{"tf":1.4142135623730952},"mir/index.html#the-mir-mid-level-ir":{"tf":1.0}},"df":3}}}}},"a":{"docs":{"appendix/glossary.html#appendix-c-glossary":{"tf":1.0}},"df":1}},"o":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"traits/goals-and-clauses.html#domain-goals":{"tf":1.0},"traits/associated-types.html#skolemized-associated-types":{"tf":1.0},"traits/associated-types.html#associated-type-projection-and-normalization":{"tf":2.23606797749979}},"df":3,"a":{"docs":{},"df":0,"t":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"m":{"docs":{"traits/associated-types.html#skolemized-associated-types":{"tf":1.4142135623730952}},"df":1,")":{"docs":{},"df":0,"<":{"docs":{},"df":0,"t":{"docs":{"traits/associated-types.html#projection-equality":{"tf":1.0},"traits/associated-types.html#skolemized-associated-types":{"tf":1.0}},"df":2}}}}}}}}},"<":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"m":{"docs":{"traits/goals-and-clauses.html#domain-goals":{"tf":1.0}},"df":1}}}}},">":{"docs":{},"df":0,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"m":{"docs":{"traits/associated-types.html#associated-type-projection-and-normalization":{"tf":2.0},"traits/associated-types.html#projection-equality":{"tf":2.0}},"df":2}}}}}}}}}}}}}}}},"u":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{"variance.html#trait-variance-and-vtable-resolution":{"tf":1.0},"mir/regionck.html#representing-the-values-of-a-region-variable":{"tf":1.0},"macro-expansion.html#the-macro-parser":{"tf":1.0},"variance.html#variance-and-object-types":{"tf":1.0},"mir/regionck.html#another-example":{"tf":1.0}},"df":5}}}},"d":{"docs":{},"df":0,"u":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{"traits/goals-and-clauses.html#coinductive-goals":{"tf":2.8284271247461905}},"df":1}}},"i":{"docs":{},"df":0,"v":{"docs":{},"df":0,"i":{"docs":{},"df":0,"d":{"docs":{},"df":0,"u":{"docs":{"variance.html#dependency-graph-management":{"tf":1.0},"conventions.html#how-to-structure-your-pr":{"tf":1.4142135623730952},"compiletest.html#adding-a-new-header-command":{"tf":1.0},"hir.html#out-of-band-storage-and-the--crate--type":{"tf":1.0},"appendix/stupid-stats.html#overview-of-the-compilation-process":{"tf":1.0},"compiletest.html#introduction":{"tf":1.0},"tests/running.html#running-an-individual-test":{"tf":1.7320508075688773}},"df":7}}}},"x":{"docs":{"hir.html#identifiers-in-the-hir":{"tf":1.0}},"df":1},"c":{"docs":{"tests/adding.html#other-header-commands":{"tf":1.7320508075688773},"traits/lowering-rules.html#lowering-where-clauses":{"tf":1.4142135623730952},"mir/index.html#mir-data-types":{"tf":1.0},"traits/chalk-overview.html#intermediate-representation-ir":{"tf":1.0},"traits/canonicalization.html#canonicalizing-the-query":{"tf":1.4142135623730952},"variance.html#the-algorithm":{"tf":1.7320508075688773},"traits/canonical-queries.html#a-trait-query-in-rustc":{"tf":1.0},"appendix/glossary.html#appendix-c-glossary":{"tf":1.0},"traits/resolution.html#selection":{"tf":1.4142135623730952},"query.html#adding-a-new-kind-of-query":{"tf":1.0},"mir/index.html#key-mir-vocabulary":{"tf":2.0},"tests/adding.html#adding-new-tests":{"tf":1.0},"variance.html#addendum-variance-on-traits":{"tf":1.0},"macro-expansion.html#the-macro-parser":{"tf":1.4142135623730952},"macro-expansion.html#example":{"tf":1.0},"incrcomp-debugging.html#testing-the-dependency-graph":{"tf":1.0},"mir/regionck.html#skolemization-and-outlives-constraints":{"tf":1.0},"traits/lowering-rules.html#transforming-the-lowered-where-clauses":{"tf":1.4142135623730952},"traits/goals-and-clauses.html#coinductive-goals":{"tf":1.0},"how-to-build-and-run.html#creating-a-rustup-toolchain":{"tf":1.0},"mir/passes.html#stealing":{"tf":1.0},"appendix/stupid-stats.html#compilercontroller":{"tf":1.4142135623730952},"traits/canonical-queries.html#examples":{"tf":1.0},"tests/intro.html#compiletest-test-suites":{"tf":1.0}},"df":24}},"e":{"docs":{"traits/canonical-queries.html#examples":{"tf":1.0},"mir/index.html#key-mir-vocabulary":{"tf":1.0},"variance.html#variance-of-type-and-lifetime-parameters":{"tf":1.0},"appendix/stupid-stats.html#overview-of-the-compilation-process":{"tf":1.0},"traits/lowering-rules.html#trait-header":{"tf":1.0},"variance.html#addendum-variance-on-traits":{"tf":1.0},"mir/regionck.html#final-example":{"tf":1.0}},"df":7,"n":{"docs":{},"df":0,"t":{"docs":{"rustdoc.html#hot-potato":{"tf":1.0},"conventions.html#tabs-vs-spaces":{"tf":1.0}},"df":2}},"p":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{"conventions.html#how-to-structure-your-pr":{"tf":1.0},"traits/index.html#trait-solving-new-style":{"tf":1.0},"miri.html#interpretation":{"tf":1.0},"appendix/glossary.html#appendix-c-glossary":{"tf":1.0},"name-resolution.html#scopes-and-ribs":{"tf":1.0}},"df":5}}}},"x":{"docs":{"incremental-compilation.html#the-basic-algorithm":{"tf":1.0},"traits/chalk-overview.html#intermediate-representation-ir":{"tf":1.0},"mir/index.html#mir-data-types":{"tf":1.0},"rustdoc.html#cheat-sheet":{"tf":1.4142135623730952},"appendix/glossary.html#appendix-c-glossary":{"tf":2.0},"name-resolution.html#name-resolution":{"tf":1.0},"mir/index.html#key-mir-vocabulary":{"tf":1.0},"mir/passes.html#seeing-how-the-mir-changes-as-the-compiler-executes":{"tf":1.4142135623730952},"rustdoc.html#dotting-is-and-crossing-ts":{"tf":1.0},"mir/regionck.html#representing-the-values-of-a-region-variable":{"tf":2.0},"rustdoc.html#from-clean-to-crate":{"tf":1.0},"const-eval.html#constant-evaluation":{"tf":1.0},"mir/regionck.html#what-is-a-universe":{"tf":1.4142135623730952},"appendix/code-index.html#appendix-d-code-index":{"tf":1.4142135623730952},"hir.html#identifiers-in-the-hir":{"tf":1.0}},"df":15}}}},"g":{"docs":{},"df":0,"n":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{"traits/canonical-queries.html#a-trait-query-in-rustc":{"tf":1.0},"traits/resolution.html#candidate-assembly":{"tf":1.0},"tests/running.html#running-tests":{"tf":1.0},"tests/adding.html#ignoring-tests":{"tf":3.4641016151377546},"traits/index.html#trait-solving-new-style":{"tf":1.4142135623730952},"ty.html#allocating-and-working-with-types":{"tf":1.0},"traits/canonicalization.html#canonicalizing-the-query":{"tf":1.0},"compiletest.html#header-commands":{"tf":1.0},"mir/index.html#key-mir-vocabulary":{"tf":1.0},"appendix/stupid-stats.html#compilercalls":{"tf":1.0},"tests/adding.html#revisions":{"tf":1.4142135623730952},"traits/canonical-queries.html#examples":{"tf":1.0},"variance.html#variance-and-object-types":{"tf":1.4142135623730952},"tests/adding.html#other-header-commands":{"tf":1.0},"tests/adding.html#normalization":{"tf":1.0},"conventions.html#line-length":{"tf":1.4142135623730952}},"df":16}}}},"'":{"docs":{"rustdoc.html#dotting-is-and-crossing-ts":{"tf":1.4142135623730952}},"df":1,"v":{"docs":{"appendix/stupid-stats.html#what-next":{"tf":1.0},"traits/lowering-to-logic.html#type-checking-generic-functions-beyond-horn-clauses":{"tf":1.0},"traits/canonical-queries.html#examples":{"tf":1.0}},"df":3},"d":{"docs":{"appendix/stupid-stats.html#what-next":{"tf":1.0}},"df":1},"l":{"docs":{},"df":0,"l":{"docs":{"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.0},"traits/hrtb.html#higher-ranked-trait-obligations":{"tf":1.0},"appendix/stupid-stats.html#appendix-a-a-tutorial-on-creating-a-drop-in-replacement-for-rustc":{"tf":1.7320508075688773},"appendix/stupid-stats.html#compilercalls":{"tf":1.0}},"df":4}},"m":{"docs":{"traits/lowering-to-logic.html#type-checking-generic-functions-beyond-horn-clauses":{"tf":1.4142135623730952},"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.0},"traits/canonical-queries.html#examples":{"tf":1.0}},"df":3}},"r":{"docs":{"mir/regionck.html#universes-and-skolemized-region-elements":{"tf":1.0},"mir/regionck.html#extending-the-universal-regions-check":{"tf":1.0},"compiler-debugging.html#debugging-llvm":{"tf":2.6457513110645909},"tests/adding.html#what-kind-of-test-should-i-add":{"tf":1.4142135623730952},"mir/regionck.html#the-mir-type-check":{"tf":1.0},"mir/regionck.html#mir-based-region-checking-nll":{"tf":1.0},"mir/passes.html#implementing-and-registering-a-pass":{"tf":1.0},"mir/visitor.html#traversal":{"tf":1.0},"traits/chalk-overview.html#well-formedness-checks":{"tf":1.0},"mir/regionck.html#closures":{"tf":1.0},"mir/regionck.html#representing-the-values-of-a-region-variable":{"tf":1.0},"mir/construction.html#mir-construction":{"tf":1.0},"mir/regionck.html#skolemization-and-universes":{"tf":1.0},"mir/borrowck.html#mir-borrow-check":{"tf":1.0},"mir/passes.html#mir-passes":{"tf":1.0},"appendix/glossary.html#appendix-c-glossary":{"tf":3.3166247903554},"high-level-overview.html#the-main-stages-of-compilation":{"tf":1.4142135623730952},"traits/chalk-overview.html#intermediate-representation-ir":{"tf":2.0},"mir/regionck.html#what-is-a-universe":{"tf":1.0},"mir/borrowck.html#major-phases-of-the-borrow-checker":{"tf":1.0},"mir/regionck.html#causal-tracking":{"tf":1.0},"rustc-driver.html#the-rustc-driver":{"tf":1.0},"mir/visitor.html#mir-visitor":{"tf":1.0},"mir/regionck.html#back-to-our-example":{"tf":1.0},"appendix/stupid-stats.html#overview-of-the-compilation-process":{"tf":1.7320508075688773},"mir/regionck.html#final-example":{"tf":1.0},"mir/regionck.html#universal-regions":{"tf":1.0},"hir.html#the-hir":{"tf":1.0},"mir/optimizations.html#mir-optimizations":{"tf":1.0},"mir/regionck.html#another-example":{"tf":1.0},"mir/regionck.html#subtyping-and-skolemization":{"tf":1.0},"mir/index.html#the-mir-mid-level-ir":{"tf":1.4142135623730952},"mir/passes.html#seeing-how-the-mir-changes-as-the-compiler-executes":{"tf":1.0},"trans.html#generating-llvm-ir":{"tf":1.4142135623730952},"mir/regionck.html#region-variables-and-constraints":{"tf":1.0},"mir/passes.html#stealing":{"tf":1.0},"mir/regionck.html#skolemization-and-outlives-constraints":{"tf":1.0}},"df":37,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"p":{"docs":{},"df":0,"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"g":{"docs":{},"df":0,"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"m":{"docs":{"traits/chalk-overview.html#intermediate-representation-ir":{"tf":1.7320508075688773}},"df":1,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"v":{"docs":{},"df":0,"i":{"docs":{},"df":0,"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{"traits/chalk-overview.html#rules":{"tf":1.0},"traits/chalk-overview.html#intermediate-representation-ir":{"tf":1.0}},"df":2}}}}}}}}}}}}}}}},"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"l":{"docs":{},"df":0,"e":{"docs":{},"df":0,"v":{"docs":{"compiler-debugging.html#getting-a-backtrace-for-errors":{"tf":1.4142135623730952}},"df":1}}}}}},"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"m":{"docs":{"rustdoc.html#from-crate-to-clean":{"tf":2.23606797749979},"traits/associated-types.html#projection-equality":{"tf":1.0},"miri.html#miri":{"tf":1.0},"name-resolution.html#overall-strategy":{"tf":1.4142135623730952},"traits/lowering-module.html#unit-tests":{"tf":1.0},"param_env.html#parameter-environment":{"tf":1.4142135623730952},"rustdoc.html#the-walking-tour-of-rustdoc":{"tf":1.0},"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.4142135623730952},"rustdoc.html#hot-potato":{"tf":2.449489742783178},"traits/lowering-rules.html#lowering-traits":{"tf":1.4142135623730952},"type-checking.html#type-collection":{"tf":1.0},"name-resolution.html#name-resolution":{"tf":1.0},"hir.html#out-of-band-storage-and-the--crate--type":{"tf":2.449489742783178},"query.html#adding-a-new-kind-of-query":{"tf":1.0},"traits/goals-and-clauses.html#domain-goals":{"tf":1.7320508075688773},"traits/lowering-rules.html#lowering-where-clauses":{"tf":1.0},"rustdoc.html#from-soup-to-nuts":{"tf":1.7320508075688773},"traits/lowering-rules.html#lowering-impls":{"tf":1.4142135623730952},"traits/lowering-module.html#the--program_clauses_for--query":{"tf":1.0},"rustdoc.html#dotting-is-and-crossing-ts":{"tf":1.4142135623730952},"hir.html#hir-bodies":{"tf":1.0},"const-eval.html#constant-evaluation":{"tf":1.7320508075688773},"mir/regionck.html#what-is-a-universe":{"tf":1.0},"hir.html#identifiers-in-the-hir":{"tf":2.23606797749979},"method-lookup.html#candidate-assembly":{"tf":1.0},"appendix/glossary.html#appendix-c-glossary":{"tf":1.4142135623730952},"traits/lowering-rules.html#lowering-impl-items":{"tf":1.4142135623730952},"query.html#queries-demand-driven-compilation":{"tf":1.4142135623730952},"traits/associated-types.html#associated-type-projection-and-normalization":{"tf":1.7320508075688773},"appendix/code-index.html#appendix-d-code-index":{"tf":1.0},"rustdoc.html#from-clean-to-crate":{"tf":2.6457513110645909},"variance.html#dependency-graph-management":{"tf":1.4142135623730952},"high-level-overview.html#the-main-stages-of-compilation":{"tf":1.0},"traits/lowering-rules.html#lowering-trait-items":{"tf":1.4142135623730952},"traits/lowering-rules.html#trait-header":{"tf":1.0}},"df":35,"<":{"docs":{},"df":0,"'":{"docs":{},"df":0,"a":{"docs":{"rustdoc.html#from-clean-to-crate":{"tf":1.0}},"df":1}}},"i":{"docs":{},"df":0,"d":{"docs":{"traits/chalk-overview.html#intermediate-representation-ir":{"tf":1.0},"hir.html#out-of-band-storage-and-the--crate--type":{"tf":1.0}},"df":2}},"_":{"docs":{"rustdoc.html#from-clean-to-crate":{"tf":1.0}},"df":1},"'":{"docs":{"rustdoc.html#hot-potato":{"tf":1.0},"rustdoc.html#from-soup-to-nuts":{"tf":1.0}},"df":2}},"r":{"docs":{"rustc-driver.html#a-note-on-lifetimes":{"tf":1.0},"mir/passes.html#mir-passes":{"tf":1.0},"traits/resolution.html#candidate-assembly":{"tf":1.0},"hir.html#out-of-band-storage-and-the--crate--type":{"tf":1.4142135623730952},"variance.html#the-algorithm":{"tf":1.7320508075688773},"mir/regionck.html#skolemization-and-outlives-constraints":{"tf":1.0},"traits/chalk-overview.html#rules":{"tf":1.0}},"df":7,"a":{"docs":{},"df":0,"t":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"<":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"m":{"docs":{"traits/lowering-module.html#unit-tests":{"tf":1.0},"traits/goals-and-clauses.html#domain-goals":{"tf":1.0}},"df":2}}}}},">":{"docs":{},"df":0,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"m":{"docs":{"traits/goals-and-clauses.html#domain-goals":{"tf":1.4142135623730952}},"df":1}}}}}}}}}}}}},"'":{"docs":{"compiler-debugging.html#expensive-operations-in-logs":{"tf":1.0},"variance.html#addendum-variance-on-traits":{"tf":1.0},"traits/hrtb.html#basic-matching-and-skolemization-leaks":{"tf":1.0},"mir/regionck.html#another-example":{"tf":1.0},"conventions.html#line-length":{"tf":1.0},"name-resolution.html#namespaces":{"tf":1.0},"traits/specialization.html#specialization":{"tf":1.0},"compiler-debugging.html#getting-logging-output":{"tf":1.0},"rustdoc.html#from-soup-to-nuts":{"tf":1.0},"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.0},"tests/intro.html#testing-on-emulators":{"tf":1.0},"rustdoc.html#cheat-sheet":{"tf":1.0},"variance.html#trait-variance-and-vtable-resolution":{"tf":1.0},"traits/lowering-rules.html#trait-header":{"tf":1.0},"traits/lowering-to-logic.html#type-checking-generic-functions-beyond-horn-clauses":{"tf":1.4142135623730952},"how-to-build-and-run.html#create-a-configtoml":{"tf":1.0},"macro-expansion.html#example":{"tf":1.0},"tests/adding.html#comment-explaining-what-the-test-is-about":{"tf":1.0},"appendix/stupid-stats.html#overview-of-the-compilation-process":{"tf":1.0},"conventions.html#how-to-structure-your-pr":{"tf":2.0},"appendix/background.html#what-is-a-control-flow-graph":{"tf":1.0},"traits/bibliography.html#bibliography":{"tf":1.4142135623730952},"traits/goals-and-clauses.html#goals-and-clauses-meta-structure":{"tf":1.0},"traits/canonical-queries.html#a-trait-query-in-rustc":{"tf":1.0},"appendix/stupid-stats.html#what-next":{"tf":1.0},"traits/resolution.html#candidate-assembly":{"tf":1.0},"tests/running.html#running-an-individual-test":{"tf":1.0},"type-inference.html#region-constraints":{"tf":1.0},"mir/regionck.html#skolemization-and-outlives-constraints":{"tf":1.0},"appendix/glossary.html#appendix-c-glossary":{"tf":1.0},"mir/regionck.html#subtyping-and-skolemization":{"tf":1.0}},"df":31,"l":{"docs":{},"df":0,"l":{"docs":{"appendix/stupid-stats.html#appendix-a-a-tutorial-on-creating-a-drop-in-replacement-for-rustc":{"tf":1.0}},"df":1}},"d":{"docs":{"appendix/stupid-stats.html#what-next":{"tf":1.0}},"df":1}},"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"l":{"docs":{},"df":0,"f":{"docs":{"traits/canonicalization.html#executing-the-query":{"tf":1.0},"traits/goals-and-clauses.html#coinductive-goals":{"tf":1.0},"mir/regionck.html#another-example":{"tf":1.0},"tests/intro.html#other-tests":{"tf":1.0},"method-lookup.html#candidate-assembly":{"tf":1.7320508075688773},"mir/borrowck.html#major-phases-of-the-borrow-checker":{"tf":1.0},"rustc-driver.html#a-note-on-lifetimes":{"tf":1.0},"tests/intro.html#the-compiler-testing-framework":{"tf":1.0},"traits/resolution.html#overview":{"tf":1.0},"method-lookup.html#method-lookup":{"tf":1.0},"mir/passes.html#implementing-and-registering-a-pass":{"tf":1.0},"about-this-guide.html#about-this-guide":{"tf":1.0},"type-inference.html#creating-an-inference-context":{"tf":1.0},"traits/hrtb.html#basic-matching-and-skolemization-leaks":{"tf":1.0},"tests/adding.html#other-header-commands":{"tf":1.0},"traits/hrtb.html#higher-ranked-trait-obligations":{"tf":1.0},"macro-expansion.html#the-macro-parser":{"tf":1.0},"ty.html#allocating-and-working-with-types":{"tf":1.0},"variance.html#constraints":{"tf":1.0},"traits/lowering-rules.html#trait-header":{"tf":1.0},"method-lookup.html#candidate-search":{"tf":1.0},"the-parser.html#the-parser":{"tf":1.0},"traits/canonical-queries.html#a-trait-query-in-rustc":{"tf":1.0},"hir.html#the-hir-map":{"tf":1.0},"high-level-overview.html#crate-structure":{"tf":1.4142135623730952},"how-to-build-and-run.html#running-xpy-and-building-a-stage1-compiler":{"tf":1.7320508075688773},"variance.html#the-algorithm":{"tf":1.0}},"df":27}}}}},"3":{"docs":{},"df":0,"2":{"docs":{"compiletest.html#implementing-the-behavior-change":{"tf":1.0},"appendix/glossary.html#appendix-c-glossary":{"tf":1.0},"compiletest.html#adding-a-new-header-command":{"tf":1.0},"variance.html#trait-variance-and-vtable-resolution":{"tf":1.7320508075688773},"traits/canonical-queries.html#the-traditional-interactive-prolog-query":{"tf":1.0},"mir/regionck.html#what-is-a-universe":{"tf":1.4142135623730952},"traits/associated-types.html#integration-with-unification":{"tf":1.0},"traits/lowering-module.html#unit-tests":{"tf":1.4142135623730952},"ty.html#beyond-types-other-kinds-of-arena-allocated-data-structures":{"tf":1.4142135623730952},"type-inference.html#subtyping-obligations":{"tf":3.0}},"df":10}},"m":{"docs":{},"df":0,"m":{"docs":{},"df":0,"e":{"docs":{},"df":0,"d":{"docs":{},"df":0,"i":{"docs":{"traits/resolution.html#selection":{"tf":1.0},"traits/canonical-queries.html#examples":{"tf":1.0},"appendix/stupid-stats.html#compilercontroller":{"tf":1.0},"tests/intro.html#compiletest-test-suites":{"tf":1.0},"compiletest.html#adding-a-new-header-command":{"tf":1.4142135623730952},"hir.html#out-of-band-storage-and-the--crate--type":{"tf":1.4142135623730952},"tests/adding.html#comment-explaining-what-the-test-is-about":{"tf":1.0},"traits/caching.html#an-example":{"tf":1.0},"tests/adding.html#error-annotations":{"tf":1.0},"rustdoc.html#from-soup-to-nuts":{"tf":1.0}},"df":10}}},"u":{"docs":{},"df":0,"t":{"docs":{"appendix/glossary.html#appendix-c-glossary":{"tf":1.0},"appendix/stupid-stats.html#compilercontroller":{"tf":1.0}},"df":2}}},"p":{"docs":{},"df":0,"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"v":{"docs":{"traits/canonicalization.html#canonicalization":{"tf":1.0},"incremental-compilation.html#improvements-to-the-basic-algorithm":{"tf":1.4142135623730952},"appendix/stupid-stats.html#what-next":{"tf":1.0},"high-level-overview.html#crate-structure":{"tf":1.0},"appendix/stupid-stats.html#compilercalls":{"tf":1.0},"incremental-compilation.html#incremental-compilation":{"tf":1.0},"appendix/stupid-stats.html#appendix-a-a-tutorial-on-creating-a-drop-in-replacement-for-rustc":{"tf":1.4142135623730952}},"df":7}}},"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"t":{"docs":{"how-to-build-and-run.html#create-a-configtoml":{"tf":1.0},"traits/canonicalization.html#canonicalization":{"tf":1.0},"incremental-compilation.html#the-try-mark-green-algorithm":{"tf":1.0},"method-lookup.html#candidate-assembly":{"tf":2.0},"appendix/glossary.html#appendix-c-glossary":{"tf":1.0},"mir/regionck.html#skolemization-and-outlives-constraints":{"tf":1.0},"incremental-compilation.html#the-query-dag":{"tf":1.0},"name-resolution.html#name-resolution":{"tf":1.0},"rustdoc.html#hot-potato":{"tf":2.6457513110645909},"rustdoc.html#from-soup-to-nuts":{"tf":1.0},"name-resolution.html#overall-strategy":{"tf":1.0},"compiler-debugging.html#debugging-llvm":{"tf":1.0},"high-level-overview.html#the-main-stages-of-compilation":{"tf":1.0},"ty.html#import-conventions":{"tf":2.0},"traits/goals-and-clauses.html#domain-goals":{"tf":1.0},"tests/adding.html#comment-explaining-what-the-test-is-about":{"tf":1.4142135623730952},"mir/passes.html#stealing":{"tf":1.0},"appendix/stupid-stats.html#compilercontroller":{"tf":1.0},"appendix/code-index.html#appendix-d-code-index":{"tf":1.0}},"df":19,"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{"how-to-build-and-run.html#create-a-configtoml":{"tf":1.0},"mir/borrowck.html#mir-borrow-check":{"tf":1.0}},"df":2}}}}}}}},"l":{"docs":{"mir/visitor.html#mir-visitor":{"tf":1.0},"traits/wf.html#well-formedness-checking":{"tf":1.0},"traits/lowering-rules.html#lowering-impl-items":{"tf":1.4142135623730952},"rustdoc.html#from-crate-to-clean":{"tf":1.4142135623730952},"traits/lowering-to-logic.html#type-checking-normal-functions":{"tf":1.4142135623730952},"traits/canonical-queries.html#the-traditional-interactive-prolog-query":{"tf":1.0},"query.html#adding-a-new-kind-of-query":{"tf":1.0},"variance.html#variance-of-type-and-lifetime-parameters":{"tf":1.0},"traits/chalk-overview.html#rules":{"tf":1.0},"compiletest.html#adding-a-new-header-command":{"tf":3.0},"hir.html#out-of-band-storage-and-the--crate--type":{"tf":1.4142135623730952},"traits/hrtb.html#basic-matching-and-skolemization-leaks":{"tf":2.449489742783178},"traits/goals-and-clauses.html#domain-goals":{"tf":1.4142135623730952},"traits/resolution.html#overview":{"tf":2.23606797749979},"traits/lowering-rules.html#lowering-impls":{"tf":2.449489742783178},"method-lookup.html#candidate-search":{"tf":1.0},"traits/canonical-queries.html#examples":{"tf":1.7320508075688773},"variance.html#trait-variance-and-vtable-resolution":{"tf":3.0},"method-lookup.html#candidate-assembly":{"tf":2.8284271247461905},"traits/chalk-overview.html#well-formedness-checks":{"tf":1.0},"traits/lowering-rules.html#associated-type-declarations":{"tf":1.0},"traits/canonical-queries.html#a-trait-query-in-rustc":{"tf":1.0},"traits/resolution.html#selection-during-translation":{"tf":2.449489742783178},"traits/hrtb.html#higher-ranked-trait-obligations":{"tf":2.0},"traits/canonicalization.html#executing-the-query":{"tf":1.4142135623730952},"traits/chalk-overview.html#parsing":{"tf":1.0},"compiler-debugging.html#expensive-operations-in-logs":{"tf":1.0},"traits/lowering-rules.html#trait-header":{"tf":1.4142135623730952},"traits/resolution.html#candidate-assembly":{"tf":3.7416573867739415},"traits/lowering-module.html#the--program_clauses_for--query":{"tf":1.0},"traits/associated-types.html#associated-type-projection-and-normalization":{"tf":2.0},"traits/lowering-rules.html#associated-type-values":{"tf":1.7320508075688773},"traits/lowering-to-logic.html#rust-traits-and-logic":{"tf":2.23606797749979},"traits/caching.html#an-example":{"tf":2.0},"hir.html#identifiers-in-the-hir":{"tf":1.0},"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.4142135623730952},"traits/specialization.html#specialization":{"tf":3.1622776601683797},"traits/resolution.html#confirmation":{"tf":2.0},"traits/resolution.html#major-concepts":{"tf":2.8284271247461905},"diag.html#declaring-a-lint":{"tf":1.4142135623730952},"traits/associated-types.html#projection-equality":{"tf":1.0},"rustdoc.html#cheat-sheet":{"tf":1.0},"rustdoc.html#from-soup-to-nuts":{"tf":1.0},"traits/resolution.html#selection":{"tf":2.23606797749979},"traits/canonicalization.html#canonicalizing-the-query-result":{"tf":1.0}},"df":45,"i":{"docs":{"traits/lowering-to-logic.html#rust-traits-and-logic":{"tf":1.0},"traits/goals-and-clauses.html#coinductive-goals":{"tf":1.4142135623730952},"traits/resolution.html#candidate-assembly":{"tf":1.0},"traits/implied-bounds.html#implied-bounds":{"tf":1.4142135623730952},"mir/regionck.html#what-is-a-universe":{"tf":1.0},"rustdoc.html#hot-potato":{"tf":1.0},"traits/wf.html#well-formedness-checking":{"tf":1.0},"traits/goals-and-clauses.html#domain-goals":{"tf":2.449489742783178},"traits/lowering-rules.html#associated-type-declarations":{"tf":2.0},"traits/lowering-rules.html#associated-type-values":{"tf":1.0},"traits/canonical-queries.html#examples":{"tf":1.0},"traits/lowering-rules.html#trait-header":{"tf":2.23606797749979}},"df":12,"c":{"docs":{"traits/lowering-rules.html#trait-header":{"tf":1.0},"traits/lowering-rules.html#associated-type-declarations":{"tf":1.0},"traits/lowering-to-logic.html#type-checking-generic-functions-beyond-horn-clauses":{"tf":1.0},"traits/goals-and-clauses.html#goals-and-clauses-meta-structure":{"tf":1.0}},"df":4,"i":{"docs":{},"df":0,"t":{"docs":{"traits/resolution.html#candidate-assembly":{"tf":1.0},"variance.html#trait-variance-and-vtable-resolution":{"tf":1.0},"variance.html#variance-and-object-types":{"tf":1.0}},"df":3}}}},"s":{"docs":{},"df":0,"/":{"docs":{},"df":0,"w":{"docs":{},"df":0,"h":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"traits/resolution.html#candidate-assembly":{"tf":1.0}},"df":1}}}}}},"/":{"docs":{},"df":0,"w":{"docs":{},"df":0,"h":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"traits/resolution.html#candidate-assembly":{"tf":1.4142135623730952}},"df":1}}}}},"c":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{},"df":0,"i":{"docs":{},"df":0,"d":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"(":{"docs":{},"df":0,"2":{"docs":{},"df":0,"2":{"docs":{"traits/caching.html#an-example":{"tf":2.0}},"df":1}}}}}}}}}}}},"<":{"docs":{},"df":0,"x":{"docs":{},"df":0,",":{"docs":{},"df":0,"f":{"docs":{"traits/hrtb.html#higher-ranked-trait-obligations":{"tf":1.0}},"df":1}}},"u":{"docs":{"traits/resolution.html#selection-during-translation":{"tf":1.0}},"df":1},"'":{"docs":{},"df":0,"a":{"docs":{"rustdoc.html#from-clean-to-crate":{"tf":1.0},"compiler-debugging.html#expensive-operations-in-logs":{"tf":1.0},"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.0},"traits/hrtb.html#basic-matching-and-skolemization-leaks":{"tf":1.0},"traits/canonicalization.html#executing-the-query":{"tf":1.0},"diag.html#declaring-a-lint":{"tf":1.0}},"df":6},"t":{"docs":{},"df":0,"c":{"docs":{},"df":0,"x":{"docs":{"mir/visitor.html#mir-visitor":{"tf":1.0},"query.html#adding-a-new-kind-of-query":{"tf":1.4142135623730952}},"df":2}},"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{"compiletest.html#implementing-the-behavior-change":{"tf":1.7320508075688773}},"df":1}}}},"v":{"docs":{"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.0}},"df":1}},"t":{"docs":{"traits/canonical-queries.html#the-traditional-interactive-prolog-query":{"tf":1.0},"traits/associated-types.html#associated-type-projection-and-normalization":{"tf":1.0},"traits/lowering-module.html#unit-tests":{"tf":1.0},"variance.html#variance-and-associated-types":{"tf":1.0},"traits/chalk-overview.html#lowering":{"tf":1.0},"traits/canonical-queries.html#examples":{"tf":1.7320508075688773},"traits/lowering-to-logic.html#rust-traits-and-logic":{"tf":1.4142135623730952}},"df":7,":":{"docs":{},"df":0,"g":{"docs":{},"df":0,"e":{"docs":{},"df":0,"t":{"docs":{"traits/resolution.html#candidate-assembly":{"tf":1.0}},"df":1}}},"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"p":{"docs":{},"df":0,"i":{"docs":{"traits/resolution.html#candidate-assembly":{"tf":1.0}},"df":1}}}}}},"p":{"docs":{},"df":0,"0":{"docs":{},"df":0,".":{"docs":{},"df":0,".":{"docs":{},"df":0,"p":{"docs":{},"df":0,"n":{"docs":{"traits/lowering-rules.html#lowering-impls":{"tf":1.0},"traits/lowering-rules.html#associated-type-values":{"tf":1.0}},"df":2}}}}}}},"e":{"docs":{},"df":0,"m":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{"compiler-debugging.html#getting-a-backtrace-for-errors":{"tf":2.0},"rustdoc.html#cheat-sheet":{"tf":1.0},"rustdoc.html#from-clean-to-crate":{"tf":2.0},"diag.html#declaring-a-lint":{"tf":1.4142135623730952},"traits/index.html#trait-solving-new-style":{"tf":1.4142135623730952},"traits/goals-and-clauses.html#domain-goals":{"tf":1.4142135623730952},"traits/associated-types.html#associated-type-projection-and-normalization":{"tf":1.0},"compiletest.html#implementing-the-behavior-change":{"tf":2.449489742783178},"traits/resolution.html#major-concepts":{"tf":1.4142135623730952},"compiletest.html#adding-a-new-header-command":{"tf":1.7320508075688773},"traits/lowering-rules.html#lowering-impls":{"tf":1.0},"rustc-driver.html#the-rustc-driver":{"tf":1.0},"traits/chalk-overview.html#an-overview-of-chalk":{"tf":1.0},"traits/canonical-queries.html#canonical-queries":{"tf":1.4142135623730952},"query.html#adding-a-new-kind-of-query":{"tf":2.23606797749979},"param_env.html#parameter-environment":{"tf":1.0},"traits/hrtb.html#basic-matching-and-skolemization-leaks":{"tf":1.4142135623730952},"traits/lowering-to-logic.html#rust-traits-and-logic":{"tf":2.0},"traits/lowering-to-logic.html#type-checking-generic-functions-beyond-horn-clauses":{"tf":1.0},"traits/resolution.html#candidate-assembly":{"tf":1.0},"traits/lowering-to-logic.html#type-checking-normal-functions":{"tf":1.0},"macro-expansion.html#the-macro-parser":{"tf":1.0},"rustdoc.html#from-soup-to-nuts":{"tf":1.4142135623730952},"rustdoc.html#hot-potato":{"tf":1.0},"traits/chalk-overview.html#lowering":{"tf":1.4142135623730952},"rustdoc.html#from-crate-to-clean":{"tf":1.7320508075688773},"traits/lowering-rules.html#trait-header":{"tf":2.0},"appendix/glossary.html#appendix-c-glossary":{"tf":1.4142135623730952},"rustdoc.html#the-walking-tour-of-rustdoc":{"tf":1.4142135623730952},"traits/lowering-module.html#unit-tests":{"tf":1.0},"traits/canonicalization.html#canonicalization":{"tf":1.0},"appendix/stupid-stats.html#compilercalls":{"tf":1.4142135623730952},"traits/lowering-rules.html#rule-names-and-cross-references":{"tf":1.0},"tests/adding.html#naming-your-test":{"tf":1.0},"traits/specialization.html#specialization":{"tf":1.0},"mir/passes.html#implementing-and-registering-a-pass":{"tf":1.7320508075688773},"mir/visitor.html#mir-visitor":{"tf":1.4142135623730952},"variance.html#trait-variance-and-vtable-resolution":{"tf":1.4142135623730952},"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.7320508075688773}},"df":39,"e":{"docs":{},"df":0,"d":{"docs":{},"df":0,"(":{"docs":{},"df":0,"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"l":{"docs":{},"df":0,"f":{"docs":{"traits/lowering-rules.html#associated-type-declarations":{"tf":1.0},"traits/lowering-rules.html#trait-header":{"tf":1.4142135623730952}},"df":2}}}},"t":{"docs":{"traits/lowering-rules.html#trait-header":{"tf":2.0},"traits/lowering-module.html#unit-tests":{"tf":2.23606797749979},"traits/goals-and-clauses.html#domain-goals":{"tf":1.0}},"df":3,"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"f":{"docs":{"traits/goals-and-clauses.html#domain-goals":{"tf":1.4142135623730952},"traits/lowering-rules.html#lowering-impls":{"tf":1.0},"traits/lowering-rules.html#transforming-the-lowered-where-clauses":{"tf":1.4142135623730952}},"df":3}}}}}}}},"o":{"docs":{},"df":0,"p":{"docs":{},"df":0,"t":{"docs":{},"df":0,"i":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"<":{"docs":{},"df":0,"b":{"docs":{},"df":0,"o":{"docs":{},"df":0,"x":{"docs":{},"df":0,"<":{"docs":{},"df":0,"f":{"docs":{},"df":0,"o":{"docs":{},"df":0,"o":{"docs":{"traits/goals-and-clauses.html#coinductive-goals":{"tf":1.0}},"df":1}}}}}}},"t":{"docs":{"traits/associated-types.html#associated-type-projection-and-normalization":{"tf":1.0}},"df":1}}}}}}}},"p":{"docs":{},"df":0,"0":{"docs":{"traits/lowering-rules.html#associated-type-values":{"tf":1.4142135623730952}},"df":1}},"a":{"docs":{},"df":0,"0":{"docs":{"traits/lowering-rules.html#lowering-where-clauses":{"tf":1.0}},"df":1}},"f":{"docs":{},"df":0,"o":{"docs":{},"df":0,"o":{"docs":{"traits/goals-and-clauses.html#coinductive-goals":{"tf":2.6457513110645909}},"df":1}}},"x":{"docs":{"traits/goals-and-clauses.html#domain-goals":{"tf":1.0}},"df":1},"i":{"docs":{},"df":0,"3":{"docs":{},"df":0,"2":{"docs":{"traits/goals-and-clauses.html#domain-goals":{"tf":1.0}},"df":1}}}}}}}}}}}},"'":{"docs":{},"df":0,"t":{"docs":{"mir/regionck.html#back-to-our-example":{"tf":1.0}},"df":1}}},"a":{"docs":{},"df":0,"g":{"docs":{"tests/intro.html#testing-on-emulators":{"tf":1.4142135623730952},"tests/intro.html#testing-with-docker-images":{"tf":2.449489742783178}},"df":2,"i":{"docs":{},"df":0,"n":{"docs":{"traits/resolution.html#candidate-assembly":{"tf":1.0},"method-lookup.html#candidate-assembly":{"tf":1.0},"traits/canonical-queries.html#examples":{"tf":1.0},"traits/hrtb.html#higher-ranked-trait-obligations":{"tf":1.0},"traits/hrtb.html#basic-matching-and-skolemization-leaks":{"tf":1.0},"traits/lowering-to-logic.html#rust-traits-and-logic":{"tf":1.4142135623730952},"variance.html#trait-variance-and-vtable-resolution":{"tf":1.4142135623730952},"traits/canonicalization.html#canonicalizing-the-query":{"tf":1.0},"incremental-compilation.html#the-query-dag":{"tf":1.7320508075688773},"traits/goals-and-clauses.html#coinductive-goals":{"tf":1.4142135623730952},"hir.html#identifiers-in-the-hir":{"tf":1.0},"traits/canonical-queries.html#the-traditional-interactive-prolog-query":{"tf":1.0}},"df":12}}}}},"f":{"docs":{},"df":0,"f":{"docs":{"variance.html#trait-variance-and-vtable-resolution":{"tf":1.0}},"df":1}},"d":{"docs":{"traits/caching.html#an-example":{"tf":1.0},"hir.html#hir-bodies":{"tf":1.0},"appendix/stupid-stats.html#overview-of-the-compilation-process":{"tf":1.0},"hir.html#out-of-band-storage-and-the--crate--type":{"tf":1.4142135623730952},"appendix/glossary.html#appendix-c-glossary":{"tf":1.7320508075688773},"query.html#queries-demand-driven-compilation":{"tf":1.0},"hir.html#identifiers-in-the-hir":{"tf":1.4142135623730952},"query.html#adding-a-new-kind-of-query":{"tf":1.0},"traits/lowering-module.html#unit-tests":{"tf":1.0},"mir/passes.html#mir-passes":{"tf":1.7320508075688773},"ty.html#beyond-types-other-kinds-of-arena-allocated-data-structures":{"tf":1.0},"traits/lowering-module.html#the--program_clauses_for--query":{"tf":1.0},"hir.html#the-hir-map":{"tf":2.0}},"df":13,"e":{"docs":{},"df":0,"a":{"docs":{"traits/index.html#trait-solving-new-style":{"tf":1.0},"incrcomp-debugging.html#testing-the-dependency-graph":{"tf":1.0},"incremental-compilation.html#the-basic-algorithm":{"tf":1.0},"variance.html#the-algorithm":{"tf":1.0},"query.html#queries-demand-driven-compilation":{"tf":1.4142135623730952},"traits/canonicalization.html#canonicalization":{"tf":1.0},"rustdoc.html#dotting-is-and-crossing-ts":{"tf":1.0},"type-inference.html#region-constraints":{"tf":1.0},"traits/canonical-queries.html#canonical-queries":{"tf":1.4142135623730952},"appendix/background.html#what-is-a-control-flow-graph":{"tf":1.0},"compiler-debugging.html#getting-logging-output":{"tf":1.0},"traits/canonicalization.html#executing-the-query":{"tf":1.0},"type-inference.html#inference-variables":{"tf":1.0},"mir/regionck.html#what-is-a-universe":{"tf":2.0},"ty.html#the-tcx-and-how-it-uses-lifetimes":{"tf":1.0},"traits/canonical-queries.html#the-traditional-interactive-prolog-query":{"tf":1.0},"mir/regionck.html#subtyping-and-skolemization":{"tf":1.0},"traits/lowering-to-logic.html#rust-traits-and-logic":{"tf":1.0},"traits/caching.html#an-example":{"tf":1.0},"traits/resolution.html#candidate-assembly":{"tf":1.0},"compiler-debugging.html#debugging-llvm":{"tf":1.0}},"df":21,"l":{"docs":{"tests/adding.html#naming-your-test":{"tf":1.0},"about-this-guide.html#about-this-guide":{"tf":1.0}},"df":2}},"n":{"docs":{},"df":0,"t":{"docs":{"macro-expansion.html#the-macro-parser":{"tf":1.4142135623730952},"how-to-build-and-run.html#running-xpy-and-building-a-stage1-compiler":{"tf":1.0},"traits/canonicalization.html#canonicalization":{"tf":1.0},"variance.html#variance-and-associated-types":{"tf":2.23606797749979}},"df":4,"i":{"docs":{},"df":0,"f":{"docs":{},"df":0,"i":{"docs":{"macro-expansion.html#example":{"tf":1.0},"mir/index.html#key-mir-vocabulary":{"tf":1.4142135623730952},"mir/index.html#mir-data-types":{"tf":1.4142135623730952},"hir.html#identifiers-in-the-hir":{"tf":2.6457513110645909},"traits/resolution.html#candidate-assembly":{"tf":1.0},"appendix/glossary.html#appendix-c-glossary":{"tf":2.23606797749979},"tests/adding.html#naming-your-test":{"tf":1.0},"mir/regionck.html#what-is-a-universe":{"tf":1.0},"traits/lowering-module.html#the--program_clauses_for--query":{"tf":1.0},"traits/resolution.html#selection-during-translation":{"tf":1.0},"mir/regionck.html#representing-the-values-of-a-region-variable":{"tf":1.0}},"df":11}},"t":{"docs":{},"df":0,"y":{"docs":{},"df":0,">":{"docs":{},"df":0,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"o":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{"variance.html#variance-and-associated-types":{"tf":1.4142135623730952}},"df":1}}}}}}}}}}}}},".":{"docs":{"traits/lowering-to-logic.html#rust-traits-and-logic":{"tf":1.0},"traits/specialization.html#specialization":{"tf":1.0},"traits/chalk-overview.html#lowering":{"tf":1.0},"appendix/glossary.html#appendix-c-glossary":{"tf":1.0},"traits/goals-and-clauses.html#coinductive-goals":{"tf":1.0},"compiler-debugging.html#debugging-llvm":{"tf":1.0},"traits/lowering-rules.html#lowering-traits":{"tf":1.0},"appendix/background.html#what-is-a-free-region-or-a-free-variable-what-about-bound-region":{"tf":1.0},"mir/regionck.html#skolemization-and-outlives-constraints":{"tf":1.0},"appendix/stupid-stats.html#compilercalls":{"tf":1.0},"mir/regionck.html#mir-based-region-checking-nll":{"tf":1.0},"diag.html#edition-gated-lints":{"tf":1.0},"query.html#queries-demand-driven-compilation":{"tf":1.0},"query.html#how-the-compiler-executes-a-query":{"tf":1.0},"type-inference.html#enforcing-equality--subtyping":{"tf":1.0},"how-to-build-and-run.html#running-xpy-and-building-a-stage1-compiler":{"tf":1.0}},"df":16,"n":{"docs":{},"df":0,"o":{"docs":{},"df":0,"d":{"docs":{"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.0}},"df":1}}}},"l":{"docs":{},"df":0,"l":{"docs":{},"df":0,"e":{"docs":{},"df":0,"g":{"docs":{"variance.html#constraints":{"tf":1.0},"mir/regionck.html#what-is-a-universe":{"tf":1.0},"query.html#cycles-between-queries":{"tf":1.4142135623730952}},"df":3}}}},"o":{"docs":{"tests/intro.html#testing-on-emulators":{"tf":1.0},"tests/adding.html#ignoring-tests":{"tf":1.0}},"df":2},"i":{"docs":{},"df":0,"r":{"docs":{},"df":0,"c":{"docs":{"compiler-debugging.html#getting-a-backtrace":{"tf":1.0}},"df":1}}}},"y":{"docs":{"variance.html#constraints":{"tf":1.4142135623730952},"mir/regionck.html#what-is-a-universe":{"tf":2.0},"traits/canonicalization.html#canonicalization":{"tf":1.0},"traits/resolution.html#confirmation":{"tf":1.4142135623730952},"name-resolution.html#namespaces":{"tf":1.0},"traits/canonical-queries.html#the-traditional-interactive-prolog-query":{"tf":1.7320508075688773},"type-checking.html#type-collection":{"tf":1.4142135623730952},"traits/resolution.html#candidate-assembly":{"tf":2.23606797749979},"hir.html#hir-bodies":{"tf":1.4142135623730952}},"df":9,"i":{"docs":{},"df":0,"e":{"docs":{},"df":0,"l":{"docs":{},"df":0,"d":{"docs":{"const-eval.html#constant-evaluation":{"tf":1.0},"compiler-debugging.html#formatting-graphviz-output-dot-files":{"tf":1.0},"traits/resolution.html#confirmation":{"tf":1.0},"miri.html#datastructures":{"tf":1.0},"traits/resolution.html#selection":{"tf":1.0},"traits/resolution.html#candidate-assembly":{"tf":1.0},"type-inference.html#extracting-region-constraints":{"tf":1.0},"mir/passes.html#stealing":{"tf":1.0},"traits/canonicalization.html#executing-the-query":{"tf":1.0},"mir/regionck.html#subtyping-and-skolemization":{"tf":1.0},"method-lookup.html#steps":{"tf":1.0},"traits/caching.html#an-example":{"tf":1.4142135623730952},"traits/hrtb.html#basic-matching-and-skolemization-leaks":{"tf":1.4142135623730952},"traits/canonicalization.html#processing-the-canonicalized-query-result":{"tf":1.0},"mir/regionck.html#another-example":{"tf":1.7320508075688773}},"df":15}}}},"e":{"docs":{"variance.html#trait-variance-and-vtable-resolution":{"tf":1.0},"mir/regionck.html#what-is-a-universe":{"tf":1.0},"incremental-compilation.html#the-try-mark-green-algorithm":{"tf":1.0},"traits/hrtb.html#basic-matching-and-skolemization-leaks":{"tf":1.0},"traits/resolution.html#selection":{"tf":1.0}},"df":5,"a":{"docs":{},"df":0,"r":{"docs":{"conventions.html#copyright-notice":{"tf":1.7320508075688773}},"df":1}}},"/":{"docs":{},"df":0,"n":{"docs":{"traits/canonical-queries.html#the-traditional-interactive-prolog-query":{"tf":2.6457513110645909}},"df":1}},"o":{"docs":{},"df":0,"u":{"docs":{},"df":0,"'":{"docs":{},"df":0,"r":{"docs":{"mir/borrowck.html#mir-borrow-check":{"tf":1.0},"rustdoc.html#from-clean-to-crate":{"tf":1.0},"type-inference.html#inference-variables":{"tf":1.4142135623730952},"how-to-build-and-run.html#running-xpy-and-building-a-stage1-compiler":{"tf":1.0},"mir/index.html#key-mir-vocabulary":{"tf":1.0},"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.0},"how-to-build-and-run.html#how-to-build-the-compiler-and-run-what-you-built":{"tf":1.0}},"df":7},"d":{"docs":{"traits/bibliography.html#bibliography":{"tf":1.0},"mir/index.html#the-mir-mid-level-ir":{"tf":1.0},"traits/resolution.html#trait-resolution-old-style":{"tf":1.0},"appendix/stupid-stats.html#what-next":{"tf":1.4142135623730952}},"df":4},"v":{"docs":{"how-to-build-and-run.html#running-xpy-and-building-a-stage1-compiler":{"tf":1.0},"appendix/background.html#what-is-a-control-flow-graph":{"tf":1.0},"rustdoc.html#cheat-sheet":{"tf":1.0}},"df":3},"l":{"docs":{},"df":0,"l":{"docs":{"variance.html#variance-and-object-types":{"tf":1.0},"rustdoc.html#from-clean-to-crate":{"tf":1.0},"how-to-build-and-run.html#how-to-build-the-compiler-and-run-what-you-built":{"tf":1.0},"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.4142135623730952},"compiler-debugging.html#debugging-llvm":{"tf":1.0},"type-inference.html#subtyping-obligations":{"tf":1.0}},"df":6}}},"r":{"docs":{},"df":0,"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"l":{"docs":{},"df":0,"f":{"docs":{"compiler-debugging.html#debugging-llvm":{"tf":1.0},"traits/chalk-overview.html#an-overview-of-chalk":{"tf":1.0},"mir/index.html#key-mir-vocabulary":{"tf":1.0},"conventions.html#use-todo-comments-for-things-you-dont-want-to-forget":{"tf":1.0},"compiler-debugging.html#getting-logging-output":{"tf":1.0},"conventions.html#prefer-exhaustive-matches":{"tf":1.0},"conventions.html#line-length":{"tf":1.0},"variance.html#dependency-graph-management":{"tf":1.0}},"df":8}}}},"_":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"_":{"docs":{},"df":0,"n":{"docs":{},"df":0,"a":{"docs":{},"df":0,"m":{"docs":{"tests/adding.html#editing-and-updating-the-reference-files":{"tf":1.0}},"df":1}}}}}}}}}}}}},"d":{"docs":{"traits/canonicalization.html#executing-the-query":{"tf":1.7320508075688773},"appendix/background.html#what-is-a-control-flow-graph":{"tf":1.4142135623730952},"mir/passes.html#mir-passes":{"tf":1.0},"mir/passes.html#seeing-how-the-mir-changes-as-the-compiler-executes":{"tf":1.0},"traits/canonicalization.html#canonicalizing-the-query-result":{"tf":2.0},"appendix/code-index.html#appendix-d-code-index":{"tf":1.4142135623730952},"traits/canonicalization.html#processing-the-canonicalized-query-result":{"tf":2.0}},"df":7,"i":{"docs":{},"df":0,"r":{"docs":{"tests/adding.html#normalization":{"tf":1.0}},"df":1,"t":{"docs":{},"df":0,"i":{"docs":{"incremental-compilation.html#the-try-mark-green-algorithm":{"tf":1.0}},"df":1}},"/":{"docs":{},"df":0,"l":{"docs":{},"df":0,"o":{"docs":{},"df":0,"w":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"_":{"docs":{},"df":0,"i":{"docs":{},"df":0,"m":{"docs":{},"df":0,"p":{"docs":{},"df":0,"l":{"docs":{},"df":0,".":{"docs":{},"df":0,"r":{"docs":{},"df":0,"s":{"docs":{},"df":0,":":{"docs":{},"df":0,"1":{"docs":{},"df":0,"5":{"docs":{},"df":0,":":{"docs":{},"df":0,"1":{"docs":{"traits/lowering-module.html#unit-tests":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{"tests/running.html#running-an-individual-test":{"tf":1.0},"traits/lowering-rules.html#trait-header":{"tf":1.0},"compiletest.html#introduction":{"tf":1.0},"appendix/glossary.html#appendix-c-glossary":{"tf":1.0}},"df":4,"l":{"docs":{},"df":0,"i":{"docs":{"traits/hrtb.html#higher-ranked-trait-obligations":{"tf":1.0},"rustdoc.html#from-soup-to-nuts":{"tf":1.4142135623730952},"type-inference.html#snapshots":{"tf":1.0},"miri.html#interpretation":{"tf":1.0},"ty.html#import-conventions":{"tf":1.0},"rustdoc.html#from-clean-to-crate":{"tf":1.0},"traits/lowering-rules.html#lowering-where-clauses":{"tf":1.0},"compiler-debugging.html#debugging-llvm":{"tf":1.0},"appendix/stupid-stats.html#overview-of-the-compilation-process":{"tf":1.0},"miri.html#miri":{"tf":1.0},"traits/specialization.html#specialization":{"tf":1.0},"mir/index.html#mir-data-types":{"tf":1.0},"rustdoc.html#the-walking-tour-of-rustdoc":{"tf":1.0},"traits/canonical-queries.html#the-traditional-interactive-prolog-query":{"tf":1.0},"const-eval.html#constant-evaluation":{"tf":1.4142135623730952},"diag.html#error-messages":{"tf":1.0},"traits/associated-types.html#skolemized-associated-types":{"tf":1.0},"mir/passes.html#stealing":{"tf":1.4142135623730952}},"df":18}},"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{"high-level-overview.html#crate-structure":{"tf":1.4142135623730952},"rustdoc.html#hot-potato":{"tf":1.0},"conventions.html#copyright-notice":{"tf":1.0},"how-to-build-and-run.html#creating-a-rustup-toolchain":{"tf":1.0},"tests/adding.html#normalization":{"tf":1.0},"tests/adding.html#naming-your-test":{"tf":2.0},"how-to-build-and-run.html#running-xpy-and-building-a-stage1-compiler":{"tf":1.0},"incrcomp-debugging.html#dumping-the-graph":{"tf":1.0},"how-to-build-and-run.html#other-xpy-commands":{"tf":1.0},"tests/intro.html#other-tests":{"tf":1.0},"mir/passes.html#seeing-how-the-mir-changes-as-the-compiler-executes":{"tf":1.0},"tests/intro.html#compiletest-test-suites":{"tf":1.4142135623730952},"compiletest.html#adding-a-new-header-command":{"tf":1.0}},"df":13}}}}}}},"f":{"docs":{},"df":0,"f":{"docs":{"tests/adding.html#guide-to-the-ui-tests":{"tf":1.0}},"df":1,"e":{"docs":{},"df":0,"r":{"docs":{"ty.html#the-tcx-and-how-it-uses-lifetimes":{"tf":1.0},"compiler-debugging.html#debugging-llvm":{"tf":1.0},"name-resolution.html#scopes-and-ribs":{"tf":1.4142135623730952},"traits/chalk-overview.html#intermediate-representation-ir":{"tf":1.0},"tests/adding.html#revisions":{"tf":1.0},"diag.html#error-messages":{"tf":1.0},"appendix/stupid-stats.html#appendix-a-a-tutorial-on-creating-a-drop-in-replacement-for-rustc":{"tf":1.0},"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.4142135623730952},"ty.html#allocating-and-working-with-types":{"tf":1.0},"conventions.html#how-to-structure-your-pr":{"tf":1.0},"traits/canonical-queries.html#a-trait-query-in-rustc":{"tf":1.0},"tests/adding.html#normalization":{"tf":1.0},"compiletest.html#introduction":{"tf":1.0},"compiler-debugging.html#logging-etiquette":{"tf":1.0},"traits/index.html#trait-solving-new-style":{"tf":1.0},"type-checking.html#type-collection":{"tf":1.7320508075688773},"traits/goals-and-clauses.html#domain-goals":{"tf":1.0},"macro-expansion.html#the-macro-parser":{"tf":1.0},"name-resolution.html#namespaces":{"tf":1.7320508075688773},"miri.html#interpretation":{"tf":1.0},"tests/intro.html#the-compiler-testing-framework":{"tf":1.0},"mir/index.html#key-mir-vocabulary":{"tf":2.0},"traits/canonicalization.html#canonicalizing-the-query":{"tf":1.0},"type-inference.html#inference-variables":{"tf":1.0},"type-inference.html#region-constraints":{"tf":1.0},"mir/visitor.html#traversal":{"tf":1.0},"compiletest.html#implementing-the-behavior-change":{"tf":1.0},"appendix/stupid-stats.html#compilercalls":{"tf":1.0},"rustdoc.html#dotting-is-and-crossing-ts":{"tf":1.0},"traits/lowering-rules.html#trait-header":{"tf":1.0},"variance.html#variance-and-object-types":{"tf":1.0},"tests/intro.html#testing-infrastructure":{"tf":1.0}},"df":32}},"i":{"docs":{},"df":0,"c":{"docs":{},"df":0,"u":{"docs":{},"df":0,"l":{"docs":{},"df":0,"t":{"docs":{"tests/adding.html#what-kind-of-test-should-i-add":{"tf":1.0}},"df":1}}}}}}},"v":{"docs":{},"df":0,"i":{"docs":{},"df":0,"d":{"docs":{"method-lookup.html#method-lookup":{"tf":1.0}},"df":1},"s":{"docs":{"method-lookup.html#method-lookup":{"tf":1.0},"high-level-overview.html#crate-structure":{"tf":1.4142135623730952}},"df":2}}},"c":{"docs":{},"df":0,"t":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{"traits/chalk-overview.html#lowering":{"tf":1.0}},"df":1}},"i":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{"variance.html#addendum-variance-on-traits":{"tf":1.0},"variance.html#variance-and-associated-types":{"tf":1.7320508075688773},"variance.html#trait-variance-and-vtable-resolution":{"tf":1.0}},"df":3}}}}}}}},"d":{"docs":{},"df":0,"n":{"docs":{},"df":0,"'":{"docs":{},"df":0,"t":{"docs":{"traits/lowering-rules.html#lowering-function-and-constant-declarations":{"tf":1.0},"variance.html#variance-and-associated-types":{"tf":1.0},"traits/lowering-to-logic.html#rust-traits-and-logic":{"tf":1.0},"traits/lowering-rules.html#function-and-constant-values":{"tf":1.0}},"df":4}}}},"s":{"docs":{},"df":0,"c":{"docs":{},"df":0,"i":{"docs":{},"df":0,"p":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{"type-inference.html#snapshots":{"tf":1.0}},"df":1}}}}},"r":{"docs":{},"df":0,"i":{"docs":{},"df":0,"m":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{"const-eval.html#constant-evaluation":{"tf":1.4142135623730952}},"df":1}}}}},"u":{"docs":{},"df":0,"s":{"docs":{},"df":0,"s":{"docs":{"traits/canonicalization.html#canonicalizing-the-query-result":{"tf":1.0},"traits/lowering-rules.html#associated-type-declarations":{"tf":1.0},"query.html#queries-demand-driven-compilation":{"tf":1.0},"traits/associated-types.html#integration-with-unification":{"tf":1.0},"traits/goals-and-clauses.html#domain-goals":{"tf":1.0},"type-inference.html#subtyping-obligations":{"tf":1.0},"rustdoc.html#the-walking-tour-of-rustdoc":{"tf":1.0},"mir/passes.html#stealing":{"tf":1.0}},"df":8}}}},"k":{"docs":{"incremental-compilation.html#the-try-mark-green-algorithm":{"tf":1.0},"query.html#queries-demand-driven-compilation":{"tf":1.0}},"df":2},"a":{"docs":{},"df":0,"p":{"docs":{},"df":0,"p":{"docs":{},"df":0,"e":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{"compiler-debugging.html#debugging-llvm":{"tf":1.0},"appendix/stupid-stats.html#overview-of-the-compilation-process":{"tf":1.0}},"df":2}}}}},"b":{"docs":{},"df":0,"l":{"docs":{"tests/adding.html#header-commands-configuring-rustc":{"tf":1.0},"compiler-debugging.html#debugging-llvm":{"tf":1.0}},"df":2}},"l":{"docs":{},"df":0,"l":{"docs":{},"df":0,"o":{"docs":{},"df":0,"w":{"docs":{"traits/goals-and-clauses.html#coinductive-goals":{"tf":1.0}},"df":1}}}}},"p":{"docs":{},"df":0,"l":{"docs":{},"df":0,"a":{"docs":{},"df":0,"y":{"docs":{"traits/goals-and-clauses.html#domain-goals":{"tf":1.0},"diag.html#span":{"tf":1.0},"diag.html#suggestions":{"tf":1.0},"rustdoc.html#cheat-sheet":{"tf":1.0},"ty.html#beyond-types-other-kinds-of-arena-allocated-data-structures":{"tf":1.4142135623730952}},"df":5,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"f":{"docs":{},"df":0,"m":{"docs":{},"df":0,"t":{"docs":{"macro-expansion.html#example":{"tf":1.0}},"df":1}}}}}}}},"a":{"docs":{},"df":0,"t":{"docs":{},"df":0,"c":{"docs":{},"df":0,"h":{"docs":{"variance.html#variance-and-object-types":{"tf":1.4142135623730952},"method-lookup.html#candidate-assembly":{"tf":1.0}},"df":2}}}},"o":{"docs":{},"df":0,"s":{"docs":{"type-inference.html#creating-an-inference-context":{"tf":1.0}},"df":1}}},"t":{"docs":{},"df":0,"c":{"docs":{},"df":0,"h":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"k":{"docs":{"tests/intro.html#other-tests":{"tf":1.4142135623730952}},"df":1}}}}},"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{"ty.html#the-tcx-and-how-it-uses-lifetimes":{"tf":1.7320508075688773},"traits/canonicalization.html#canonicalization":{"tf":1.0},"tests/intro.html#compiletest-test-suites":{"tf":1.0},"type-checking.html#type-collection":{"tf":1.0},"mir/regionck.html#another-example":{"tf":1.4142135623730952},"traits/caching.html#where-clauses-and-the-local-vs-global-cache":{"tf":1.0},"high-level-overview.html#the-main-stages-of-compilation":{"tf":1.0},"traits/goals-and-clauses.html#domain-goals":{"tf":1.0}},"df":8}}}},"r":{"docs":{},"df":0,"i":{"docs":{},"df":0,"b":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{"conventions.html#copyright-notice":{"tf":1.4142135623730952},"query.html#how-the-compiler-executes-a-query":{"tf":1.0},"compiletest.html#adding-a-new-header-command":{"tf":1.4142135623730952},"tests/intro.html#other-tests":{"tf":1.0}},"df":4}}}}}}},"a":{"docs":{},"df":0,"g":{"docs":{},"df":0,"n":{"docs":{},"df":0,"o":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{"diag.html#emitting-diagnostics":{"tf":1.4142135623730952},"appendix/code-index.html#appendix-d-code-index":{"tf":1.7320508075688773}},"df":2,"i":{"docs":{},"df":0,"c":{"docs":{},"df":0,"b":{"docs":{},"df":0,"u":{"docs":{},"df":0,"i":{"docs":{},"df":0,"l":{"docs":{},"df":0,"d":{"docs":{"appendix/code-index.html#appendix-d-code-index":{"tf":1.0},"query.html#cycles-between-queries":{"tf":1.0},"diag.html#error-messages":{"tf":1.7320508075688773},"diag.html#suggestions":{"tf":1.0}},"df":4}}}}},"s":{"docs":{},"df":0,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"g":{"docs":{},"df":0,"i":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"r":{"docs":{},"df":0,"y":{"docs":{},"df":0,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"g":{"docs":{},"df":0,"i":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.4142135623730952}},"df":1}}}}}}}}}}}}}}}}}}}}}}}}}}}},"m":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{"high-level-overview.html#crate-structure":{"tf":1.0}},"df":1}}}}}},"y":{"docs":{},"df":0,"n":{"docs":{},"df":0,"a":{"docs":{},"df":0,"m":{"docs":{"variance.html#variance-and-object-types":{"tf":1.4142135623730952}},"df":1}}}},"o":{"docs":{"appendix/glossary.html#appendix-c-glossary":{"tf":1.0},"tests/running.html#running-a-subset-of-the-test-suites":{"tf":1.0},"type-inference.html#creating-an-inference-context":{"tf":1.0},"query.html#queries-demand-driven-compilation":{"tf":1.0},"traits/canonical-queries.html#canonical-queries":{"tf":1.0},"tests/intro.html#compiletest-test-suites":{"tf":1.0},"appendix/stupid-stats.html#what-next":{"tf":1.0},"how-to-build-and-run.html#running-xpy-and-building-a-stage1-compiler":{"tf":1.0},"ty.html#allocating-and-working-with-types":{"tf":1.0},"traits/canonicalization.html#processing-the-canonicalized-query-result":{"tf":1.0},"mir/borrowck.html#mir-borrow-check":{"tf":1.0},"compiler-debugging.html#getting-logging-output":{"tf":1.0},"type-inference.html#enforcing-equality--subtyping":{"tf":1.0},"mir/regionck.html#mir-based-region-checking-nll":{"tf":1.0},"conventions.html#how-to-structure-your-pr":{"tf":1.0},"mir/regionck.html#skolemization-and-outlives-constraints":{"tf":1.0},"method-lookup.html#method-lookup":{"tf":1.0}},"df":17,"z":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{"compiletest.html#adding-a-new-header-command":{"tf":1.0}},"df":1}}},"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"n":{"docs":{},"df":0,"'":{"docs":{},"df":0,"t":{"docs":{"tests/intro.html#testing-on-emulators":{"tf":1.0},"high-level-overview.html#crate-structure":{"tf":1.0},"ty.html#the-tcx-and-how-it-uses-lifetimes":{"tf":1.0},"variance.html#variance-of-type-and-lifetime-parameters":{"tf":1.0},"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.0},"incrcomp-debugging.html#tracking-down-incorrect-edges":{"tf":1.0},"mir/visitor.html#mir-visitor":{"tf":1.0},"macro-expansion.html#example":{"tf":1.0},"appendix/stupid-stats.html#compilercalls":{"tf":1.0},"name-resolution.html#namespaces":{"tf":1.4142135623730952},"name-resolution.html#scopes-and-ribs":{"tf":1.0},"tests/running.html#running-a-subset-of-the-test-suites":{"tf":1.0},"tests/adding.html#comment-explaining-what-the-test-is-about":{"tf":1.0},"compiler-debugging.html#debugging-llvm":{"tf":1.4142135623730952},"type-inference.html#enforcing-equality--subtyping":{"tf":1.0},"tests/running.html#running-an-individual-test":{"tf":1.0},"tests/adding.html#guide-to-the-ui-tests":{"tf":1.0},"traits/canonicalization.html#canonicalization":{"tf":1.0},"miri.html#miri":{"tf":1.0},"traits/resolution.html#candidate-assembly":{"tf":1.0},"mir/regionck.html#what-is-a-universe":{"tf":1.4142135623730952}},"df":21}}}}},"u":{"docs":{},"df":0,"b":{"docs":{},"df":0,"t":{"docs":{"traits/associated-types.html#integration-with-unification":{"tf":1.0}},"df":1},"l":{"docs":{"appendix/glossary.html#appendix-c-glossary":{"tf":1.4142135623730952}},"df":1}}},"n":{"docs":{},"df":0,"'":{"docs":{},"df":0,"t":{"docs":{"traits/associated-types.html#projection-equality":{"tf":1.0},"about-this-guide.html#about-this-guide":{"tf":1.0},"traits/resolution.html#major-concepts":{"tf":1.0},"variance.html#variance-and-object-types":{"tf":1.0},"mir/regionck.html#skolemization-and-outlives-constraints":{"tf":1.0},"traits/canonical-queries.html#examples":{"tf":1.0},"appendix/stupid-stats.html#compilercalls":{"tf":1.0},"query.html#adding-a-new-kind-of-query":{"tf":1.0},"compiler-debugging.html#logging-etiquette":{"tf":1.0},"incremental-compilation.html#the-try-mark-green-algorithm":{"tf":1.0},"mir/index.html#key-mir-vocabulary":{"tf":1.0},"diag.html#suggestions":{"tf":1.0},"rustdoc.html#dotting-is-and-crossing-ts":{"tf":1.0},"incrcomp-debugging.html#dumping-the-graph":{"tf":1.0},"mir/passes.html#stealing":{"tf":1.0},"traits/canonicalization.html#canonicalizing-the-query-result":{"tf":1.0},"variance.html#variance-of-type-and-lifetime-parameters":{"tf":1.0},"compiler-debugging.html#getting-a-backtrace":{"tf":1.4142135623730952},"tests/intro.html#testing-with-docker-images":{"tf":1.0},"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":2.23606797749979},"name-resolution.html#namespaces":{"tf":1.0},"rustdoc.html#from-soup-to-nuts":{"tf":1.0},"traits/chalk-overview.html#lowering":{"tf":1.0},"mir/regionck.html#subtyping-and-skolemization":{"tf":1.0},"incrcomp-debugging.html#tracking-down-incorrect-edges":{"tf":1.0},"traits/resolution.html#candidate-assembly":{"tf":1.0},"rustc-driver.html#a-note-on-lifetimes":{"tf":1.0},"conventions.html#use-todo-comments-for-things-you-dont-want-to-forget":{"tf":1.4142135623730952},"compiler-debugging.html#getting-logging-output":{"tf":1.0},"tests/running.html#running-tests":{"tf":1.0},"query.html#cycles-between-queries":{"tf":1.0},"traits/canonicalization.html#canonicalization":{"tf":1.0},"conventions.html#copyright-notice":{"tf":1.0},"traits/lowering-to-logic.html#type-checking-generic-functions-beyond-horn-clauses":{"tf":1.0}},"df":34}},"e":{"docs":{"type-inference.html#extracting-region-constraints":{"tf":1.0},"macro-expansion.html#the-macro-parser":{"tf":1.0},"mir/regionck.html#skolemization-and-outlives-constraints":{"tf":1.0},"traits/caching.html#where-clauses-and-the-local-vs-global-cache":{"tf":1.0},"rustdoc.html#from-crate-to-clean":{"tf":1.0},"the-parser.html#the-parser":{"tf":1.0},"query.html#how-the-compiler-executes-a-query":{"tf":1.0},"traits/resolution.html#candidate-assembly":{"tf":1.4142135623730952},"miri.html#interpretation":{"tf":1.0},"type-inference.html#snapshots":{"tf":1.4142135623730952},"tests/adding.html#ignoring-tests":{"tf":1.0},"traits/hrtb.html#higher-ranked-trait-obligations":{"tf":1.4142135623730952},"incremental-compilation.html#improvements-to-the-basic-algorithm":{"tf":1.0},"mir/passes.html#stealing":{"tf":1.4142135623730952},"how-to-build-and-run.html#running-xpy-and-building-a-stage1-compiler":{"tf":1.0},"traits/specialization.html#specialization":{"tf":1.0},"high-level-overview.html#the-main-stages-of-compilation":{"tf":1.0},"const-eval.html#constant-evaluation":{"tf":1.0},"traits/hrtb.html#basic-matching-and-skolemization-leaks":{"tf":1.0},"traits/chalk-overview.html#well-formedness-checks":{"tf":1.0},"appendix/stupid-stats.html#compilercalls":{"tf":1.7320508075688773},"traits/resolution.html#confirmation":{"tf":1.0},"miri.html#miri":{"tf":1.0},"ty.html#the-tcx-and-how-it-uses-lifetimes":{"tf":1.0},"incremental-compilation.html#the-query-dag":{"tf":1.0},"method-lookup.html#steps":{"tf":1.0},"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.0},"tests/running.html#running-tests":{"tf":1.0},"rustc-driver.html#the-rustc-driver":{"tf":1.0},"mir/index.html#key-mir-vocabulary":{"tf":1.0},"type-inference.html#lexical-region-resolution":{"tf":1.0},"appendix/stupid-stats.html#overview-of-the-compilation-process":{"tf":1.4142135623730952},"tests/adding.html#revisions":{"tf":1.0},"mir/regionck.html#subtyping-and-skolemization":{"tf":1.0},"mir/regionck.html#final-example":{"tf":1.0},"ty.html#allocating-and-working-with-types":{"tf":1.0}},"df":36}},"d":{"docs":{},"df":0,"g":{"docs":{},"df":0,"i":{"docs":{"mir/passes.html#stealing":{"tf":1.0}},"df":1}}},"w":{"docs":{},"df":0,"n":{"docs":{"traits/canonicalization.html#canonicalization":{"tf":1.0},"compiler-debugging.html#logging-etiquette":{"tf":1.4142135623730952},"incrcomp-debugging.html#tracking-down-incorrect-edges":{"tf":1.7320508075688773},"traits/resolution.html#candidate-assembly":{"tf":1.0},"mir/regionck.html#another-example":{"tf":1.0},"traits/specialization.html#specialization":{"tf":1.0},"name-resolution.html#overall-strategy":{"tf":1.0},"compiler-debugging.html#getting-logging-output":{"tf":1.0},"method-lookup.html#candidate-search":{"tf":1.4142135623730952},"traits/goals-and-clauses.html#domain-goals":{"tf":1.0},"appendix/background.html#what-is-a-control-flow-graph":{"tf":1.0}},"df":11,"l":{"docs":{},"df":0,"o":{"docs":{},"df":0,"a":{"docs":{},"df":0,"d":{"docs":{"how-to-build-and-run.html#running-xpy-and-building-a-stage1-compiler":{"tf":1.0}},"df":1}}}},"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"a":{"docs":{},"df":0,"m":{"docs":{"traits/resolution.html#selection":{"tf":1.0}},"df":1}}}}}}}},"_":{"docs":{},"df":0,"b":{"docs":{},"df":0,"(":{"docs":{},"df":0,"&":{"docs":{},"df":0,"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"l":{"docs":{},"df":0,"f":{"docs":{"traits/resolution.html#candidate-assembly":{"tf":1.0}},"df":1}}}}}}},"s":{"docs":{},"df":0,"o":{"docs":{},"df":0,"m":{"docs":{},"df":0,"e":{"docs":{},"df":0,"t":{"docs":{},"df":0,"h":{"docs":{"conventions.html#use-todo-comments-for-things-you-dont-want-to-forget":{"tf":1.0}},"df":1,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"g":{"docs":{},"df":0,"<":{"docs":{},"df":0,"t":{"docs":{"name-resolution.html#scopes-and-ribs":{"tf":1.0}},"df":1}}}}}}}}}}},"a":{"docs":{},"df":0,"1":{"docs":{},"df":0,"(":{"docs":{},"df":0,"&":{"docs":{},"df":0,"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"l":{"docs":{},"df":0,"f":{"docs":{"traits/resolution.html#candidate-assembly":{"tf":1.0}},"df":1}}}}}}}}},"c":{"docs":{"rustdoc.html#hot-potato":{"tf":2.0},"compiler-debugging.html#getting-logging-output":{"tf":1.0},"rustdoc.html#from-crate-to-clean":{"tf":1.4142135623730952},"rustdoc.html#cheat-sheet":{"tf":2.23606797749979},"diag.html#error-messages":{"tf":1.0},"diag.html#declaring-a-lint":{"tf":1.0},"tests/intro.html#other-tests":{"tf":1.0}},"df":7,"u":{"docs":{},"df":0,"m":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{"tests/intro.html#compiletest-test-suites":{"tf":1.0},"rustdoc.html#the-walking-tour-of-rustdoc":{"tf":1.7320508075688773},"traits/lowering-rules.html#rule-names-and-cross-references":{"tf":1.0},"appendix/code-index.html#appendix-d-code-index":{"tf":1.0},"tests/intro.html#other-tests":{"tf":1.7320508075688773},"compiler-debugging.html#debugging-llvm":{"tf":1.0},"traits/index.html#trait-solving-new-style":{"tf":1.0},"appendix/glossary.html#appendix-c-glossary":{"tf":1.0},"about-this-guide.html#about-this-guide":{"tf":1.4142135623730952},"high-level-overview.html#crate-structure":{"tf":1.0},"rustdoc.html#hot-potato":{"tf":3.0},"rustdoc.html#from-crate-to-clean":{"tf":2.23606797749979},"rustdoc.html#from-clean-to-crate":{"tf":2.0},"appendix/stupid-stats.html#appendix-a-a-tutorial-on-creating-a-drop-in-replacement-for-rustc":{"tf":1.0},"rustdoc.html#other-tricks-up-its-sleeve":{"tf":1.7320508075688773}},"df":15}}}}},"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{"rustdoc.html#cheat-sheet":{"tf":1.0},"rustdoc.html#from-clean-to-crate":{"tf":1.0},"tests/intro.html#other-tests":{"tf":1.0},"rustdoc.html#other-tricks-up-its-sleeve":{"tf":1.4142135623730952}},"df":4}}},"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"e":{"docs":{},"df":0,".":{"docs":{},"df":0,"r":{"docs":{"rustdoc.html#from-crate-to-clean":{"tf":1.0}},"df":1}}}}}},"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"x":{"docs":{},"df":0,"t":{"docs":{"rustdoc.html#from-crate-to-clean":{"tf":1.4142135623730952},"rustdoc.html#from-soup-to-nuts":{"tf":2.0},"appendix/code-index.html#appendix-d-code-index":{"tf":1.0}},"df":3}}}}}}},"(":{"docs":{},"df":0,"n":{"docs":{},"df":0,"o":{"docs":{},"df":0,"_":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{"rustdoc.html#from-crate-to-clean":{"tf":1.0}},"df":1}}}}}}}},"c":{"docs":{},"df":0,"f":{"docs":{},"df":0,"g":{"docs":{"rustdoc.html#hot-potato":{"tf":1.0}},"df":1}}},"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{"rustdoc.html#from-crate-to-clean":{"tf":1.0}},"df":1}}}}},"h":{"docs":{},"df":0,"i":{"docs":{},"df":0,"d":{"docs":{},"df":0,"d":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{"rustdoc.html#hot-potato":{"tf":1.4142135623730952},"rustdoc.html#from-crate-to-clean":{"tf":1.0}},"df":2}}}}}}},"k":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"tests/intro.html#testing-with-docker-images":{"tf":2.23606797749979},"tests/intro.html#testing-on-emulators":{"tf":1.4142135623730952}},"df":2}}}},"m":{"docs":{},"df":0,"a":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{"mir/regionck.html#back-to-our-example":{"tf":1.0},"traits/goals-and-clauses.html#domain-goals":{"tf":1.7320508075688773},"traits/lowering-rules.html#function-and-constant-values":{"tf":1.0},"mir/regionck.html#representing-the-values-of-a-region-variable":{"tf":1.0},"traits/lowering-rules.html#lowering-rules":{"tf":1.0},"traits/lowering-rules.html#trait-header":{"tf":1.0},"traits/lowering-rules.html#lowering-where-clauses":{"tf":1.0}},"df":7,"g":{"docs":{},"df":0,"o":{"docs":{"traits/goals-and-clauses.html#goals-and-clauses-meta-structure":{"tf":1.4142135623730952},"traits/goals-and-clauses.html#domain-goals":{"tf":1.4142135623730952}},"df":2}}}}}},"t":{"docs":{"compiler-debugging.html#formatting-graphviz-output-dot-files":{"tf":2.0},"rustdoc.html#dotting-is-and-crossing-ts":{"tf":1.4142135623730952}},"df":2}},"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"w":{"docs":{"traits/caching.html#where-clauses-and-the-local-vs-global-cache":{"tf":1.0},"type-checking.html#type-checking":{"tf":1.0}},"df":2},"m":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{"conventions.html#how-to-structure-your-pr":{"tf":1.0}},"df":1}}}},"i":{"docs":{},"df":0,"v":{"docs":{},"df":0,"e":{"docs":{"appendix/stupid-stats.html#appendix-a-a-tutorial-on-creating-a-drop-in-replacement-for-rustc":{"tf":1.0},"appendix/stupid-stats.html#compilercalls":{"tf":1.0}},"df":2,"n":{"docs":{"incremental-compilation.html#footnotes":{"tf":1.0},"incrcomp-debugging.html#debugging-and-testing-dependencies":{"tf":1.0},"incremental-compilation.html#the-query-dag":{"tf":1.0},"incrcomp-debugging.html#testing-the-dependency-graph":{"tf":1.0},"incrcomp-debugging.html#debugging-the-dependency-graph":{"tf":1.0},"incremental-compilation.html#the-basic-algorithm":{"tf":1.0},"incremental-compilation.html#improvements-to-the-basic-algorithm":{"tf":1.0},"query.html#queries-demand-driven-compilation":{"tf":2.23606797749979},"incrcomp-debugging.html#dumping-the-graph":{"tf":1.0},"incremental-compilation.html#the-try-mark-green-algorithm":{"tf":1.0},"incremental-compilation.html#incremental-compilation":{"tf":1.0},"incrcomp-debugging.html#tracking-down-incorrect-edges":{"tf":1.0}},"df":12},"r":{"docs":{"appendix/stupid-stats.html#the-driver-customisation-apis":{"tf":1.7320508075688773},"rustdoc.html#other-tricks-up-its-sleeve":{"tf":1.0},"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.4142135623730952},"rustdoc.html#from-soup-to-nuts":{"tf":1.0},"rustdoc.html#from-clean-to-crate":{"tf":1.0},"rustc-driver.html#the-rustc-driver":{"tf":1.4142135623730952},"rustdoc.html#the-walking-tour-of-rustdoc":{"tf":1.0},"rustdoc.html#dotting-is-and-crossing-ts":{"tf":1.0},"rustdoc.html#from-crate-to-clean":{"tf":1.0},"appendix/stupid-stats.html#overview-of-the-compilation-process":{"tf":1.7320508075688773},"appendix/stupid-stats.html#compilercalls":{"tf":1.0},"rustdoc.html#hot-potato":{"tf":1.0},"appendix/code-index.html#appendix-d-code-index":{"tf":1.4142135623730952},"rustdoc.html#cheat-sheet":{"tf":1.0}},"df":14,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"m":{"docs":{},"df":0,"p":{"docs":{},"df":0,"i":{"docs":{},"df":0,"l":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{},"df":0,"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"l":{"docs":{},"df":0,"l":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"<":{"docs":{},"df":0,"'":{"docs":{},"df":0,"a":{"docs":{"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.4142135623730952}},"df":1}}},":":{"docs":{},"df":0,":":{"docs":{},"df":0,"b":{"docs":{},"df":0,"a":{"docs":{},"df":0,"s":{"docs":{"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}}}}}}}}}},"l":{"docs":{},"df":0,"l":{"docs":{"mir/index.html#key-mir-vocabulary":{"tf":1.0}},"df":1}}},"o":{"docs":{},"df":0,"p":{"docs":{"appendix/stupid-stats.html#overview-of-the-compilation-process":{"tf":1.0},"rustdoc.html#hot-potato":{"tf":1.4142135623730952},"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.4142135623730952},"appendix/stupid-stats.html#appendix-a-a-tutorial-on-creating-a-drop-in-replacement-for-rustc":{"tf":2.23606797749979}},"df":4}}},"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{},"df":0,"v":{"docs":{"variance.html#variance-and-associated-types":{"tf":1.0},"traits/goals-and-clauses.html#domain-goals":{"tf":1.0},"traits/canonical-queries.html#the-traditional-interactive-prolog-query":{"tf":1.0},"mir/borrowck.html#mir-borrow-check":{"tf":1.0},"method-lookup.html#candidate-assembly":{"tf":2.0},"macro-expansion.html#custom-derive":{"tf":1.4142135623730952},"tests/running.html#running-a-subset-of-the-test-suites":{"tf":1.0},"traits/lowering-to-logic.html#type-checking-normal-functions":{"tf":1.4142135623730952}},"df":8,"e":{"docs":{},"df":0,"(":{"docs":{},"df":0,"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"p":{"docs":{},"df":0,"i":{"docs":{"diag.html#declaring-a-lint":{"tf":1.0}},"df":1}}}}}}}},"e":{"docs":{},"df":0,"f":{"docs":{"rustdoc.html#from-soup-to-nuts":{"tf":1.0}},"df":1,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"c":{"docs":{"method-lookup.html#steps":{"tf":1.0}},"df":1}}}}},"'":{"docs":{},"df":0,"d":{"docs":{"method-lookup.html#steps":{"tf":1.0}},"df":1}}}}},"l":{"docs":{},"df":0,"e":{"docs":{},"df":0,"g":{"docs":{"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.4142135623730952}},"df":1}},"i":{"docs":{},"df":0,"b":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"rustdoc.html#hot-potato":{"tf":1.0}},"df":1}}}},"a":{"docs":{},"df":0,"y":{"docs":{"traits/bibliography.html#bibliography":{"tf":1.0}},"df":1,"_":{"docs":{},"df":0,"s":{"docs":{},"df":0,"p":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"_":{"docs":{},"df":0,"b":{"docs":{},"df":0,"u":{"docs":{},"df":0,"g":{"docs":{"query.html#cycles-between-queries":{"tf":1.0},"compiler-debugging.html#getting-a-backtrace-for-errors":{"tf":1.4142135623730952}},"df":2}}}}}}}}}}}},"b":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{"tests/adding.html#naming-your-test":{"tf":1.0}},"df":1}},"u":{"docs":{},"df":0,"g":{"docs":{"compiler-debugging.html#getting-a-backtrace-for-errors":{"tf":1.0},"compiler-debugging.html#debugging-llvm":{"tf":2.0},"compiler-debugging.html#logging-etiquette":{"tf":1.4142135623730952},"incrcomp-debugging.html#tracking-down-incorrect-edges":{"tf":1.0},"compiler-debugging.html#debugging-the-compiler":{"tf":2.0},"incrcomp-debugging.html#dumping-the-graph":{"tf":1.0},"compiler-debugging.html#formatting-graphviz-output-dot-files":{"tf":1.0},"traits/canonical-queries.html#canonical-queries":{"tf":1.0},"incrcomp-debugging.html#debugging-the-dependency-graph":{"tf":1.4142135623730952},"compiler-debugging.html#getting-logging-output":{"tf":3.1622776601683797},"incrcomp-debugging.html#debugging-and-testing-dependencies":{"tf":1.4142135623730952},"compiler-debugging.html#expensive-operations-in-logs":{"tf":2.0},"how-to-build-and-run.html#create-a-configtoml":{"tf":1.7320508075688773},"tests/intro.html#compiletest-test-suites":{"tf":1.0}},"df":14,"g":{"docs":{"tests/adding.html#ignoring-tests":{"tf":1.0}},"df":1},"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"f":{"docs":{},"df":0,"o":{"docs":{"compiler-debugging.html#getting-a-backtrace":{"tf":1.0},"tests/intro.html#compiletest-test-suites":{"tf":1.0},"tests/running.html#running-a-subset-of-the-test-suites":{"tf":1.4142135623730952},"tests/adding.html#other-header-commands":{"tf":1.0},"tests/adding.html#what-kind-of-test-should-i-add":{"tf":1.0},"how-to-build-and-run.html#create-a-configtoml":{"tf":2.0},"tests/adding.html#ignoring-tests":{"tf":1.0}},"df":7,"=":{"docs":{},"df":0,"t":{"docs":{},"df":0,"r":{"docs":{},"df":0,"u":{"docs":{"compiler-debugging.html#getting-a-backtrace":{"tf":1.0}},"df":1}}}}}}}}}}},"c":{"docs":{},"df":0,"l":{"docs":{"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.0}},"df":1,"a":{"docs":{},"df":0,"r":{"docs":{"traits/lowering-to-logic.html#rust-traits-and-logic":{"tf":2.0},"compiletest.html#adding-a-new-header-command":{"tf":2.0},"diag.html#lint-groups":{"tf":1.4142135623730952},"compiletest.html#introduction":{"tf":1.0},"traits/lowering-rules.html#lowering-function-and-constant-declarations":{"tf":1.4142135623730952},"appendix/glossary.html#appendix-c-glossary":{"tf":1.4142135623730952},"traits/lowering-rules.html#lowering-traits":{"tf":1.0},"ty.html#the-tcx-and-how-it-uses-lifetimes":{"tf":1.0},"traits/associated-types.html#associated-type-projection-and-normalization":{"tf":1.0},"mir/index.html#key-mir-vocabulary":{"tf":1.4142135623730952},"appendix/code-index.html#appendix-d-code-index":{"tf":1.0},"diag.html#declaring-a-lint":{"tf":1.7320508075688773},"traits/wf.html#well-formedness-checking":{"tf":1.4142135623730952},"variance.html#the-algorithm":{"tf":1.4142135623730952},"traits/lowering-rules.html#associated-type-declarations":{"tf":2.0},"traits/lowering-rules.html#trait-header":{"tf":1.0},"mir/regionck.html#what-is-a-universe":{"tf":1.0},"traits/associated-types.html#projection-equality":{"tf":1.0}},"df":18,"e":{"docs":{},"df":0,"_":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{"diag.html#edition-gated-lints":{"tf":1.4142135623730952},"diag.html#declaring-a-lint":{"tf":1.4142135623730952}},"df":2}}}}}}}}},"i":{"docs":{},"df":0,"d":{"docs":{"traits/resolution.html#selection-during-translation":{"tf":1.0},"traits/canonical-queries.html#examples":{"tf":1.0},"method-lookup.html#method-lookup":{"tf":1.0},"variance.html#variance-and-object-types":{"tf":1.0},"variance.html#trait-variance-and-vtable-resolution":{"tf":1.0},"traits/resolution.html#candidate-assembly":{"tf":1.0},"traits/resolution.html#overview":{"tf":1.4142135623730952},"traits/resolution.html#selection":{"tf":1.0}},"df":8}}},"a":{"docs":{},"df":0,"l":{"docs":{"hir.html#identifiers-in-the-hir":{"tf":1.0},"traits/hrtb.html#higher-ranked-trait-obligations":{"tf":1.0},"rustdoc.html#dotting-is-and-crossing-ts":{"tf":1.0},"traits/chalk-overview.html#parsing":{"tf":1.0},"traits/specialization.html#specialization":{"tf":1.0}},"df":5}},"v":{"docs":{"compiler-debugging.html#getting-a-backtrace-for-errors":{"tf":1.0},"how-to-build-and-run.html#creating-a-rustup-toolchain":{"tf":1.7320508075688773}},"df":2,"e":{"docs":{},"df":0,"l":{"docs":{},"df":0,"o":{"docs":{},"df":0,"p":{"docs":{"how-to-build-and-run.html#how-to-build-the-compiler-and-run-what-you-built":{"tf":1.0},"about-this-guide.html#about-this-guide":{"tf":1.0},"conventions.html#copyright-notice":{"tf":1.0},"compiletest.html#adding-a-new-header-command":{"tf":1.0},"tests/adding.html#header-commands-configuring-rustc":{"tf":1.0},"traits/chalk-overview.html#an-overview-of-chalk":{"tf":1.0}},"df":6}}}}},"m":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"r":{"docs":{"incrcomp-debugging.html#testing-the-dependency-graph":{"tf":1.0}},"df":1}}}}},"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{"high-level-overview.html#the-main-stages-of-compilation":{"tf":1.7320508075688773},"traits/bibliography.html#bibliography":{"tf":1.0},"appendix/stupid-stats.html#compilercontroller":{"tf":1.0},"incremental-compilation.html#the-query-dag":{"tf":1.0},"incremental-compilation.html#the-try-mark-green-algorithm":{"tf":1.4142135623730952},"query.html#queries-demand-driven-compilation":{"tf":2.449489742783178},"incrcomp-debugging.html#debugging-the-dependency-graph":{"tf":1.0},"incrcomp-debugging.html#tracking-down-incorrect-edges":{"tf":1.0},"incremental-compilation.html#footnotes":{"tf":1.0},"incremental-compilation.html#improvements-to-the-basic-algorithm":{"tf":1.0},"incremental-compilation.html#the-basic-algorithm":{"tf":1.0},"incrcomp-debugging.html#debugging-and-testing-dependencies":{"tf":1.0},"traits/chalk-overview.html#blog-posts":{"tf":1.0},"incremental-compilation.html#incremental-compilation":{"tf":1.0},"incrcomp-debugging.html#dumping-the-graph":{"tf":1.0},"incrcomp-debugging.html#testing-the-dependency-graph":{"tf":1.0}},"df":16}}}},"p":{"docs":{"query.html#adding-a-new-kind-of-query":{"tf":2.0},"incrcomp-debugging.html#tracking-down-incorrect-edges":{"tf":1.7320508075688773},"incrcomp-debugging.html#dumping-the-graph":{"tf":1.4142135623730952}},"df":3,"t":{"docs":{},"df":0,"h":{"docs":{"traits/goals-and-clauses.html#goals-and-clauses-meta-structure":{"tf":1.0}},"df":1}},"n":{"docs":{},"df":0,"o":{"docs":{},"df":0,"d":{"docs":{"query.html#adding-a-new-kind-of-query":{"tf":1.0}},"df":1}}},"_":{"docs":{},"df":0,"g":{"docs":{},"df":0,"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"p":{"docs":{},"df":0,"h":{"docs":{},"df":0,".":{"docs":{},"df":0,"{":{"docs":{},"df":0,"t":{"docs":{},"df":0,"x":{"docs":{},"df":0,"t":{"docs":{},"df":0,",":{"docs":{},"df":0,"d":{"docs":{},"df":0,"o":{"docs":{},"df":0,"t":{"docs":{"incrcomp-debugging.html#dumping-the-graph":{"tf":1.0}},"df":1}}}}}}}}}}}}}}},"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{"incrcomp-debugging.html#dumping-the-graph":{"tf":1.0},"incremental-compilation.html#the-try-mark-green-algorithm":{"tf":1.0},"traits/canonical-queries.html#a-trait-query-in-rustc":{"tf":1.0},"appendix/glossary.html#appendix-c-glossary":{"tf":1.0},"appendix/stupid-stats.html#compilercontroller":{"tf":1.0},"incrcomp-debugging.html#tracking-down-incorrect-edges":{"tf":1.0},"param_env.html#parameter-environment":{"tf":1.4142135623730952},"appendix/stupid-stats.html#overview-of-the-compilation-process":{"tf":1.0},"incrcomp-debugging.html#testing-the-dependency-graph":{"tf":2.23606797749979},"compiletest.html#implementing-the-behavior-change":{"tf":1.0},"incrcomp-debugging.html#debugging-the-dependency-graph":{"tf":1.4142135623730952},"rustdoc.html#from-clean-to-crate":{"tf":1.0},"incrcomp-debugging.html#debugging-and-testing-dependencies":{"tf":1.4142135623730952},"variance.html#dependency-graph-management":{"tf":2.23606797749979},"hir.html#out-of-band-storage-and-the--crate--type":{"tf":1.0},"high-level-overview.html#the-main-stages-of-compilation":{"tf":1.0},"variance.html#trait-variance-and-vtable-resolution":{"tf":1.0},"compiletest.html#adding-a-new-header-command":{"tf":1.0},"high-level-overview.html#crate-structure":{"tf":1.4142135623730952},"tests/adding.html#adding-new-tests":{"tf":1.0},"query.html#how-the-compiler-executes-a-query":{"tf":1.4142135623730952},"incremental-compilation.html#the-basic-algorithm":{"tf":1.4142135623730952},"compiler-debugging.html#debugging-llvm":{"tf":1.0},"tests/intro.html#compiletest-test-suites":{"tf":1.0},"traits/caching.html#where-clauses-and-the-local-vs-global-cache":{"tf":1.4142135623730952},"conventions.html#using-crates-from-cratesio":{"tf":1.0}},"df":26}}},"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{"mir/regionck.html#mir-based-region-checking-nll":{"tf":1.0},"rustdoc.html#hot-potato":{"tf":1.0}},"df":2}}}},"d":{"docs":{},"df":0,"u":{"docs":{},"df":0,"c":{"docs":{"traits/canonicalization.html#processing-the-canonicalized-query-result":{"tf":1.0}},"df":1}},"i":{"docs":{},"df":0,"c":{"docs":{"traits/lowering-module.html#the--program_clauses_for--query":{"tf":1.0}},"df":1}}},"n":{"docs":{},"df":0,"o":{"docs":{},"df":0,"t":{"docs":{"mir/regionck.html#what-is-a-universe":{"tf":1.0},"mir/index.html#key-mir-vocabulary":{"tf":1.0},"mir/regionck.html#representing-the-values-of-a-region-variable":{"tf":1.0},"diag.html#declaring-a-lint":{"tf":1.0}},"df":4}}},"s":{"docs":{},"df":0,"p":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{"mir/regionck.html#final-example":{"tf":1.0}},"df":1}}},"i":{"docs":{},"df":0,"g":{"docs":{},"df":0,"n":{"docs":{"traits/resolution.html#trait-resolution-old-style":{"tf":1.0},"traits/chalk-overview.html#parsing":{"tf":1.0},"variance.html#variance-of-type-and-lifetime-parameters":{"tf":1.0},"method-lookup.html#method-lookup":{"tf":1.0},"traits/index.html#trait-solving-new-style":{"tf":1.0}},"df":5}},"r":{"docs":{"mir/regionck.html#subtyping-and-skolemization":{"tf":1.0}},"df":1}},"c":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{},"df":0,"p":{"docs":{},"df":0,"t":{"docs":{"traits/canonical-queries.html#a-trait-query-in-rustc":{"tf":1.0},"rustdoc.html#the-walking-tour-of-rustdoc":{"tf":1.0},"incremental-compilation.html#improvements-to-the-basic-algorithm":{"tf":1.0},"diag.html#declaring-a-lint":{"tf":1.0},"appendix/code-index.html#appendix-d-code-index":{"tf":1.0},"query.html#adding-a-new-kind-of-query":{"tf":1.0},"rustdoc.html#dotting-is-and-crossing-ts":{"tf":1.0},"name-resolution.html#todo":{"tf":1.0}},"df":8}},"b":{"docs":{"high-level-overview.html#crate-structure":{"tf":1.0},"type-inference.html#snapshots":{"tf":1.0},"incremental-compilation.html#incremental-compilation":{"tf":1.4142135623730952},"traits/goals-and-clauses.html#goals-and-clauses":{"tf":1.0},"traits/resolution.html#trait-resolution-old-style":{"tf":1.4142135623730952},"query.html#queries-demand-driven-compilation":{"tf":1.0},"type-inference.html#inference-variables":{"tf":1.0},"traits/chalk-overview.html#testing":{"tf":1.0},"traits/lowering-module.html#the-lowering-module-in-rustc":{"tf":1.0},"appendix/stupid-stats.html#compilercalls":{"tf":1.0},"mir/passes.html#mir-passes":{"tf":1.0},"traits/index.html#trait-solving-new-style":{"tf":1.4142135623730952},"traits/lowering-module.html#the--program_clauses_for--query":{"tf":1.0},"traits/hrtb.html#basic-matching-and-skolemization-leaks":{"tf":1.0},"rustdoc.html#from-crate-to-clean":{"tf":1.0},"appendix/background.html#what-is-a-free-region-or-a-free-variable-what-about-bound-region":{"tf":1.0},"query.html#adding-a-new-kind-of-query":{"tf":1.0},"incrcomp-debugging.html#tracking-down-incorrect-edges":{"tf":1.4142135623730952},"traits/associated-types.html#integration-with-unification":{"tf":1.0},"rustdoc.html#other-tricks-up-its-sleeve":{"tf":1.0},"mir/index.html#key-mir-vocabulary":{"tf":1.0},"mir/regionck.html#causal-tracking":{"tf":1.0},"mir/regionck.html#skolemization-and-universes":{"tf":1.0},"type-inference.html#creating-an-inference-context":{"tf":1.0},"compiletest.html#header-commands":{"tf":1.0},"mir/regionck.html#region-variables-and-constraints":{"tf":1.0},"macro-expansion.html#the-macro-parser":{"tf":1.0},"mir/borrowck.html#major-phases-of-the-borrow-checker":{"tf":1.0},"appendix/stupid-stats.html#compilercontroller":{"tf":1.0},"traits/lowering-to-logic.html#type-checking-generic-functions-beyond-horn-clauses":{"tf":1.4142135623730952},"appendix/stupid-stats.html#appendix-a-a-tutorial-on-creating-a-drop-in-replacement-for-rustc":{"tf":1.0},"traits/goals-and-clauses.html#coinductive-goals":{"tf":1.0}},"df":32,"e":{"docs":{},"df":0,"(":{"docs":{},"df":0,"t":{"docs":{},"df":0,"c":{"docs":{},"df":0,"x":{"docs":{"query.html#adding-a-new-kind-of-query":{"tf":1.0}},"df":1}}}}}}}}},"u":{"docs":{},"df":0,"g":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{"hir.html#the-hir":{"tf":1.0},"mir/borrowck.html#mir-borrow-check":{"tf":1.0},"appendix/glossary.html#appendix-c-glossary":{"tf":1.4142135623730952},"mir/index.html#the-mir-mid-level-ir":{"tf":1.0},"high-level-overview.html#the-main-stages-of-compilation":{"tf":1.4142135623730952}},"df":5}}}},"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{"incremental-compilation.html#improvements-to-the-basic-algorithm":{"tf":1.4142135623730952},"incremental-compilation.html#the-try-mark-green-algorithm":{"tf":1.0}},"df":2}}}},"f":{"docs":{"traits/lowering-module.html#the--program_clauses_for--query":{"tf":1.0},"appendix/glossary.html#appendix-c-glossary":{"tf":1.0},"hir.html#the-hir-map":{"tf":1.0},"hir.html#hir-bodies":{"tf":1.0},"mir/passes.html#mir-passes":{"tf":1.7320508075688773},"mir/passes.html#seeing-how-the-mir-changes-as-the-compiler-executes":{"tf":1.0},"query.html#adding-a-new-kind-of-query":{"tf":1.0},"ty.html#beyond-types-other-kinds-of-arena-allocated-data-structures":{"tf":1.0},"query.html#queries-demand-driven-compilation":{"tf":1.0},"traits/caching.html#an-example":{"tf":1.0},"traits/lowering-module.html#unit-tests":{"tf":1.0}},"df":11,"p":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{},"df":0,"h":{"docs":{"appendix/glossary.html#appendix-c-glossary":{"tf":1.0}},"df":1}}}},"_":{"docs":{},"df":0,"i":{"docs":{},"df":0,"d":{"docs":{"query.html#how-the-compiler-executes-a-query":{"tf":1.0},"ty.html#the-tcx-and-how-it-uses-lifetimes":{"tf":1.4142135623730952}},"df":2}}},"a":{"docs":{},"df":0,"u":{"docs":{},"df":0,"l":{"docs":{},"df":0,"t":{"docs":{"compiler-debugging.html#debugging-llvm":{"tf":1.0},"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.4142135623730952},"tests/adding.html#normalization":{"tf":1.0},"compiler-debugging.html#getting-logging-output":{"tf":1.0},"traits/goals-and-clauses.html#coinductive-goals":{"tf":1.0},"how-to-build-and-run.html#how-to-build-the-compiler-and-run-what-you-built":{"tf":1.0},"tests/adding.html#other-header-commands":{"tf":1.0},"tests/adding.html#tests-that-do-not-result-in-compile-errors":{"tf":1.0},"compiletest.html#implementing-the-behavior-change":{"tf":1.7320508075688773},"compiler-debugging.html#debugging-the-compiler":{"tf":1.0},"compiler-debugging.html#logging-etiquette":{"tf":1.0},"compiler-debugging.html#expensive-operations-in-logs":{"tf":1.0},"appendix/stupid-stats.html#compilercalls":{"tf":1.0},"compiletest.html#adding-a-new-header-command":{"tf":2.23606797749979},"diag.html#declaring-a-lint":{"tf":1.0},"compiler-debugging.html#getting-a-backtrace":{"tf":1.0},"rustdoc.html#hot-potato":{"tf":1.0},"diag.html#edition-gated-lints":{"tf":1.4142135623730952},"traits/specialization.html#specialization":{"tf":1.7320508075688773}},"df":19,">":{"docs":{},"df":0,"(":{"docs":{},"df":0,"v":{"docs":{"name-resolution.html#scopes-and-ribs":{"tf":1.0}},"df":1}}},"_":{"docs":{},"df":0,"c":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.0}},"df":1}}}}}}}},"i":{"docs":{},"df":0,"n":{"docs":{"query.html#invoking-queries":{"tf":1.0},"compiletest.html#introduction":{"tf":1.0},"miri.html#interpretation":{"tf":1.0},"ty.html#allocating-and-working-with-types":{"tf":2.0},"traits/goals-and-clauses.html#goals-and-clauses-meta-structure":{"tf":1.0},"ty.html#beyond-types-other-kinds-of-arena-allocated-data-structures":{"tf":1.0},"query.html#adding-a-new-kind-of-query":{"tf":2.0},"query.html#queries-demand-driven-compilation":{"tf":1.0},"high-level-overview.html#crate-structure":{"tf":2.449489742783178},"appendix/glossary.html#appendix-c-glossary":{"tf":1.4142135623730952},"macro-expansion.html#the-macro-parser":{"tf":1.7320508075688773},"traits/lowering-rules.html#transforming-the-lowered-where-clauses":{"tf":1.0},"traits/hrtb.html#basic-matching-and-skolemization-leaks":{"tf":1.0},"diag.html#lints":{"tf":1.0},"diag.html#error-messages":{"tf":1.0},"traits/lowering-rules.html#lowering-rules":{"tf":1.0},"mir/index.html#mir-data-types":{"tf":1.0},"traits/lowering-rules.html#notation":{"tf":1.0},"mir/visitor.html#mir-visitor":{"tf":1.0},"rustdoc.html#from-crate-to-clean":{"tf":2.0},"traits/lowering-to-logic.html#type-checking-normal-functions":{"tf":1.4142135623730952},"mir/passes.html#implementing-and-registering-a-pass":{"tf":1.4142135623730952},"traits/lowering-rules.html#associated-type-declarations":{"tf":1.4142135623730952},"diag.html#declaring-a-lint":{"tf":1.7320508075688773},"traits/associated-types.html#associated-type-projection-and-normalization":{"tf":1.4142135623730952},"variance.html#variance-of-type-and-lifetime-parameters":{"tf":1.4142135623730952},"diag.html#lint-groups":{"tf":1.0},"traits/lowering-rules.html#trait-header":{"tf":1.0},"compiletest.html#adding-a-new-header-command":{"tf":2.6457513110645909},"traits/specialization.html#specialization":{"tf":1.0},"mir/index.html#introduction-to-mir":{"tf":1.0},"high-level-overview.html#the-main-stages-of-compilation":{"tf":1.7320508075688773},"macro-expansion.html#example":{"tf":1.0},"traits/goals-and-clauses.html#domain-goals":{"tf":1.4142135623730952},"rustdoc.html#cheat-sheet":{"tf":1.0},"type-checking.html#type-collection":{"tf":1.0},"mir/index.html#key-mir-vocabulary":{"tf":1.7320508075688773},"appendix/background.html#what-is-a-free-region-or-a-free-variable-what-about-bound-region":{"tf":1.4142135623730952},"ty.html#the--ty--module-representing-types":{"tf":1.4142135623730952},"variance.html#the-algorithm":{"tf":2.0},"compiletest.html#implementing-the-behavior-change":{"tf":1.0},"method-lookup.html#candidate-assembly":{"tf":2.449489742783178},"ty.html#the-tcx-and-how-it-uses-lifetimes":{"tf":1.0},"query.html#how-the-compiler-executes-a-query":{"tf":2.0},"hir.html#the-hir-map":{"tf":1.4142135623730952}},"df":45,"i":{"docs":{},"df":0,"t":{"docs":{"hir.html#the-hir-map":{"tf":1.0},"rustdoc.html#from-soup-to-nuts":{"tf":1.0},"appendix/code-index.html#appendix-d-code-index":{"tf":1.0},"macro-expansion.html#the-macro-parser":{"tf":3.0},"name-resolution.html#todo":{"tf":1.0},"appendix/glossary.html#appendix-c-glossary":{"tf":1.4142135623730952},"traits/lowering-to-logic.html#type-checking-normal-functions":{"tf":1.0},"traits/resolution.html#selection":{"tf":1.0},"traits/resolution.html#candidate-assembly":{"tf":1.0},"traits/lowering-rules.html#notation":{"tf":1.0},"traits/chalk-overview.html#parsing":{"tf":1.4142135623730952},"variance.html#variance-of-type-and-lifetime-parameters":{"tf":1.7320508075688773},"traits/lowering-module.html#the--program_clauses_for--query":{"tf":1.0},"diag.html#declaring-a-lint":{"tf":1.0},"query.html#adding-a-new-kind-of-query":{"tf":1.0},"traits/chalk-overview.html#intermediate-representation-ir":{"tf":1.0},"variance.html#dependency-graph-management":{"tf":1.0},"macro-expansion.html#example":{"tf":1.0},"tests/intro.html#testing-with-docker-images":{"tf":1.0},"high-level-overview.html#crate-structure":{"tf":1.0},"traits/goals-and-clauses.html#goals-and-clauses-meta-structure":{"tf":1.0},"appendix/background.html#appendix-b-background-topics":{"tf":1.0},"variance.html#the-algorithm":{"tf":1.0},"traits/lowering-rules.html#lowering-traits":{"tf":1.0},"type-checking.html#type-collection":{"tf":1.0},"hir.html#hir-bodies":{"tf":1.0},"hir.html#identifiers-in-the-hir":{"tf":1.4142135623730952}},"df":27}},"t":{"docs":{"macro-expansion.html#the-macro-parser":{"tf":1.0}},"df":1},"e":{"docs":{},"df":0,"_":{"docs":{},"df":0,"d":{"docs":{},"df":0,"e":{"docs":{},"df":0,"p":{"docs":{},"df":0,"_":{"docs":{},"df":0,"n":{"docs":{},"df":0,"o":{"docs":{},"df":0,"d":{"docs":{"query.html#adding-a-new-kind-of-query":{"tf":1.0}},"df":1}}}}}}},"m":{"docs":{},"df":0,"a":{"docs":{},"df":0,"p":{"docs":{"query.html#adding-a-new-kind-of-query":{"tf":1.7320508075688773}},"df":1}}}}},"d":{"docs":{},"df":0,"e":{"docs":{},"df":0,"x":{"docs":{"hir.html#identifiers-in-the-hir":{"tf":1.0}},"df":1}}}},"d":{"docs":{"query.html#adding-a-new-kind-of-query":{"tf":1.7320508075688773},"query.html#how-the-compiler-executes-a-query":{"tf":1.4142135623730952},"ty.html#the-tcx-and-how-it-uses-lifetimes":{"tf":1.4142135623730952},"traits/lowering-module.html#the--program_clauses_for--query":{"tf":1.0},"hir.html#the-hir-map":{"tf":1.0},"appendix/glossary.html#appendix-c-glossary":{"tf":1.0},"hir.html#identifiers-in-the-hir":{"tf":2.0}},"df":7}}},"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"m":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{"mir/regionck.html#what-is-a-universe":{"tf":1.0},"appendix/glossary.html#appendix-c-glossary":{"tf":1.0},"variance.html#variance-of-type-and-lifetime-parameters":{"tf":1.0},"traits/caching.html#where-clauses-and-the-local-vs-global-cache":{"tf":1.0},"query.html#how-the-compiler-executes-a-query":{"tf":1.0},"rustc-driver.html#the-rustc-driver":{"tf":1.0},"mir/regionck.html#universes-and-skolemized-region-elements":{"tf":1.0},"incremental-compilation.html#the-try-mark-green-algorithm":{"tf":1.4142135623730952},"traits/specialization.html#specialization":{"tf":1.4142135623730952}},"df":9,"i":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{"incremental-compilation.html#the-basic-algorithm":{"tf":1.0}},"df":1}}}}}}},"c":{"docs":{},"df":0,"t":{"docs":{"type-inference.html#type-inference":{"tf":1.0},"diag.html#edition-gated-lints":{"tf":1.0},"traits/canonicalization.html#canonicalization":{"tf":1.0},"appendix/stupid-stats.html#overview-of-the-compilation-process":{"tf":1.0}},"df":4}}},"a":{"docs":{},"df":0,"i":{"docs":{},"df":0,"l":{"docs":{"appendix/stupid-stats.html#overview-of-the-compilation-process":{"tf":1.0},"appendix/stupid-stats.html#compilercalls":{"tf":1.0},"appendix/glossary.html#appendix-c-glossary":{"tf":1.4142135623730952},"traits/canonicalization.html#executing-the-query":{"tf":1.0},"type-checking.html#type-collection":{"tf":1.0},"high-level-overview.html#the-main-stages-of-compilation":{"tf":1.0},"mir/regionck.html#mir-based-region-checking-nll":{"tf":1.0},"rustdoc.html#the-walking-tour-of-rustdoc":{"tf":1.0},"tests/adding.html#adding-new-tests":{"tf":1.0},"about-this-guide.html#about-this-guide":{"tf":1.0},"tests/intro.html#compiletest-test-suites":{"tf":1.0},"mir/borrowck.html#major-phases-of-the-borrow-checker":{"tf":1.4142135623730952},"mir/regionck.html#representing-the-values-of-a-region-variable":{"tf":1.0},"variance.html#variance-of-type-and-lifetime-parameters":{"tf":1.0},"traits/lowering-rules.html#associated-type-declarations":{"tf":1.0},"tests/adding.html#ignoring-tests":{"tf":1.0},"traits/lowering-module.html#unit-tests":{"tf":1.0},"traits/canonical-queries.html#a-trait-query-in-rustc":{"tf":1.4142135623730952},"how-to-build-and-run.html#other-xpy-commands":{"tf":1.4142135623730952},"rustc-driver.html#the-rustc-driver":{"tf":1.0},"type-inference.html#region-constraints":{"tf":1.0},"traits/lowering-rules.html#lowering-function-and-constant-declarations":{"tf":1.0},"hir.html#out-of-band-storage-and-the--crate--type":{"tf":1.0},"tests/intro.html#the-compiler-testing-framework":{"tf":1.0},"type-inference.html#subtyping-obligations":{"tf":1.0},"name-resolution.html#todo":{"tf":1.0},"query.html#adding-a-new-kind-of-query":{"tf":1.0},"type-inference.html#creating-an-inference-context":{"tf":1.0},"traits/goals-and-clauses.html#goals-and-clauses-meta-structure":{"tf":1.0},"compiler-debugging.html#getting-a-backtrace-for-errors":{"tf":1.0},"method-lookup.html#method-lookup":{"tf":1.0},"query.html#cycles-between-queries":{"tf":1.0},"variance.html#variance-and-associated-types":{"tf":1.0},"traits/lowering-rules.html#function-and-constant-values":{"tf":1.0},"compiletest.html#introduction":{"tf":1.0}},"df":35}}}}},"a":{"docs":{},"df":0,"l":{"docs":{},"df":0,"e":{"docs":{"traits/bibliography.html#bibliography":{"tf":1.0}},"df":1}},"t":{"docs":{},"df":0,"a":{"docs":{"appendix/code-index.html#appendix-d-code-index":{"tf":2.0},"ty.html#the-tcx-and-how-it-uses-lifetimes":{"tf":1.7320508075688773},"mir/borrowck.html#major-phases-of-the-borrow-checker":{"tf":1.4142135623730952},"rustdoc.html#from-soup-to-nuts":{"tf":1.0},"query.html#adding-a-new-kind-of-query":{"tf":1.0},"hir.html#the-hir-map":{"tf":1.4142135623730952},"variance.html#variance-of-type-and-lifetime-parameters":{"tf":1.0},"hir.html#out-of-band-storage-and-the--crate--type":{"tf":1.7320508075688773},"mir/index.html#mir-data-types":{"tf":2.449489742783178},"query.html#queries-demand-driven-compilation":{"tf":1.0},"appendix/glossary.html#appendix-c-glossary":{"tf":1.7320508075688773},"high-level-overview.html#crate-structure":{"tf":1.0},"diag.html#span":{"tf":1.0},"traits/canonicalization.html#canonicalization":{"tf":1.0},"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.0},"variance.html#dependency-graph-management":{"tf":1.0},"ty.html#the--ty--module-representing-types":{"tf":1.0},"rustc-driver.html#a-note-on-lifetimes":{"tf":1.0},"ty.html#beyond-types-other-kinds-of-arena-allocated-data-structures":{"tf":1.7320508075688773}},"df":19,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"r":{"docs":{},"df":0,"u":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{},"df":0,"u":{"docs":{},"df":0,"r":{"docs":{"miri.html#datastructures":{"tf":1.7320508075688773}},"df":1}}}}}}}},"f":{"docs":{},"df":0,"l":{"docs":{},"df":0,"o":{"docs":{},"df":0,"w":{"docs":{"compiler-debugging.html#formatting-graphviz-output-dot-files":{"tf":1.0},"appendix/background.html#what-is-a-dataflow-analysis":{"tf":1.4142135623730952},"mir/borrowck.html#major-phases-of-the-borrow-checker":{"tf":1.0}},"df":3}}}},"t":{"docs":{},"df":0,"y":{"docs":{},"df":0,"p":{"docs":{"appendix/glossary.html#appendix-c-glossary":{"tf":1.0}},"df":1}}}},"e":{"docs":{"appendix/stupid-stats.html#appendix-a-a-tutorial-on-creating-a-drop-in-replacement-for-rustc":{"tf":1.0},"traits/chalk-overview.html#rules":{"tf":1.0},"how-to-build-and-run.html#creating-a-rustup-toolchain":{"tf":1.0}},"df":3}},"g":{"docs":{"incremental-compilation.html#the-try-mark-green-algorithm":{"tf":1.4142135623730952},"appendix/glossary.html#appendix-c-glossary":{"tf":1.0},"incremental-compilation.html#the-query-dag":{"tf":2.23606797749979},"incremental-compilation.html#the-basic-algorithm":{"tf":2.0}},"df":4}},"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"'":{"docs":{"method-lookup.html#candidate-assembly":{"tf":1.0}},"df":1}}},"u":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{"traits/associated-types.html#associated-type-projection-and-normalization":{"tf":1.0},"ty.html#allocating-and-working-with-types":{"tf":1.0},"query.html#adding-a-new-kind-of-query":{"tf":1.0},"rustc-driver.html#the-rustc-driver":{"tf":1.0},"incremental-compilation.html#the-try-mark-green-algorithm":{"tf":1.4142135623730952},"traits/canonicalization.html#canonicalization":{"tf":1.0},"traits/specialization.html#specialization":{"tf":1.4142135623730952},"rustdoc.html#from-clean-to-crate":{"tf":1.0},"rustdoc.html#from-soup-to-nuts":{"tf":1.4142135623730952},"appendix/glossary.html#appendix-c-glossary":{"tf":1.7320508075688773},"traits/canonical-queries.html#examples":{"tf":1.0},"appendix/stupid-stats.html#overview-of-the-compilation-process":{"tf":1.4142135623730952},"macro-expansion.html#macro-expansion":{"tf":1.4142135623730952},"traits/resolution.html#selection":{"tf":1.4142135623730952},"tests/intro.html#compiletest-test-suites":{"tf":1.0},"traits/resolution.html#selection-during-translation":{"tf":1.7320508075688773},"appendix/code-index.html#appendix-d-code-index":{"tf":1.0},"traits/index.html#trait-solving-new-style":{"tf":1.0},"ty.html#the-tcx-and-how-it-uses-lifetimes":{"tf":1.7320508075688773},"tests/running.html#running-tests":{"tf":1.0},"variance.html#variance-of-type-and-lifetime-parameters":{"tf":1.0},"appendix/stupid-stats.html#compilercontroller":{"tf":1.0},"how-to-build-and-run.html#running-xpy-and-building-a-stage1-compiler":{"tf":1.0},"query.html#cycles-between-queries":{"tf":1.0},"traits/resolution.html#candidate-assembly":{"tf":1.0},"traits/resolution.html#major-concepts":{"tf":1.0},"incremental-compilation.html#the-basic-algorithm":{"tf":1.0},"compiler-debugging.html#debugging-llvm":{"tf":1.0}},"df":28}},"m":{"docs":{},"df":0,"m":{"docs":{},"df":0,"y":{"docs":{},"df":0,"_":{"docs":{},"df":0,"s":{"docs":{},"df":0,"p":{"docs":{"query.html#cycles-between-queries":{"tf":1.0}},"df":1}}}},"i":{"docs":{"query.html#adding-a-new-kind-of-query":{"tf":1.0},"mir/passes.html#implementing-and-registering-a-pass":{"tf":1.0}},"df":2}},"p":{"docs":{"incrcomp-debugging.html#dumping-the-graph":{"tf":2.449489742783178},"traits/lowering-module.html#unit-tests":{"tf":1.0},"incrcomp-debugging.html#tracking-down-incorrect-edges":{"tf":1.4142135623730952},"compiler-debugging.html#formatting-graphviz-output-dot-files":{"tf":1.0},"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.0},"mir/passes.html#seeing-how-the-mir-changes-as-the-compiler-executes":{"tf":2.23606797749979}},"df":6}},"e":{"docs":{"rustc-driver.html#a-note-on-lifetimes":{"tf":1.0},"appendix/stupid-stats.html#appendix-a-a-tutorial-on-creating-a-drop-in-replacement-for-rustc":{"tf":1.0},"compiler-debugging.html#getting-a-backtrace-for-errors":{"tf":1.0},"traits/resolution.html#selection":{"tf":1.0},"mir/passes.html#implementing-and-registering-a-pass":{"tf":1.0},"method-lookup.html#method-lookup":{"tf":1.0},"traits/specialization.html#specialization":{"tf":1.0},"appendix/stupid-stats.html#overview-of-the-compilation-process":{"tf":1.0},"query.html#cycles-between-queries":{"tf":1.0},"traits/canonicalization.html#executing-the-query":{"tf":1.0},"diag.html#suggestions":{"tf":1.4142135623730952},"traits/lowering-module.html#unit-tests":{"tf":1.0}},"df":12},"p":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{},"df":0,"c":{"docs":{"ty.html#allocating-and-working-with-types":{"tf":1.0},"rustc-driver.html#a-note-on-lifetimes":{"tf":1.0}},"df":2}}}}},"f":{"docs":{"mir/regionck.html#skolemization-and-outlives-constraints":{"tf":1.0}},"df":1}},"a":{"docs":{},"df":0,"f":{"docs":{},"df":0,"f":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{"appendix/stupid-stats.html#appendix-a-a-tutorial-on-creating-a-drop-in-replacement-for-rustc":{"tf":1.0},"appendix/glossary.html#appendix-c-glossary":{"tf":1.0},"variance.html#constraints":{"tf":1.0},"traits/resolution.html#candidate-assembly":{"tf":1.0}},"df":4,"i":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{"conventions.html#formatting-and-the-tidy-script":{"tf":1.0}},"df":1}}}}}}},"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"_":{"docs":{"appendix/stupid-stats.html#compilercontroller":{"tf":1.0}},"df":1}}}},"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"m":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{"rustdoc.html#other-tricks-up-its-sleeve":{"tf":1.0}},"df":1}}}}}}}},"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"c":{"docs":{},"df":0,"h":{"docs":{},"df":0,"6":{"docs":{},"df":0,"4":{"docs":{"tests/adding.html#ignoring-tests":{"tf":1.0}},"df":1}}}}}},"p":{"docs":{},"df":0,"t":{"docs":{"compiler-debugging.html#formatting-graphviz-output-dot-files":{"tf":1.0}},"df":1},"i":{"docs":{"appendix/stupid-stats.html#what-next":{"tf":2.0},"rustc-driver.html#a-note-on-lifetimes":{"tf":1.0},"rustc-driver.html#the-rustc-driver":{"tf":1.0},"appendix/stupid-stats.html#the-driver-customisation-apis":{"tf":1.4142135623730952},"appendix/stupid-stats.html#appendix-a-a-tutorial-on-creating-a-drop-in-replacement-for-rustc":{"tf":1.7320508075688773},"appendix/stupid-stats.html#overview-of-the-compilation-process":{"tf":1.0}},"df":6},"a":{"docs":{},"df":0,"c":{"docs":{},"df":0,"h":{"docs":{"compiletest.html#adding-a-new-header-command":{"tf":1.4142135623730952},"conventions.html#copyright-notice":{"tf":1.4142135623730952}},"df":2}}},"p":{"docs":{},"df":0,"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"a":{"docs":{},"df":0,"c":{"docs":{},"df":0,"h":{"docs":{"traits/specialization.html#specialization":{"tf":1.0}},"df":1}}},"p":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{"appendix/glossary.html#appendix-c-glossary":{"tf":1.0},"variance.html#variance-and-object-types":{"tf":1.0},"query.html#adding-a-new-kind-of-query":{"tf":1.0},"tests/adding.html#other-header-commands":{"tf":1.0},"compiletest.html#adding-a-new-test-file":{"tf":1.0},"traits/resolution.html#major-concepts":{"tf":1.0},"appendix/stupid-stats.html#overview-of-the-compilation-process":{"tf":1.0},"mir/passes.html#implementing-and-registering-a-pass":{"tf":1.0},"rustdoc.html#from-crate-to-clean":{"tf":1.0}},"df":9}}},"v":{"docs":{"tests/intro.html#testing-infrastructure":{"tf":1.0}},"df":1},"x":{"docs":{},"df":0,"i":{"docs":{},"df":0,"m":{"docs":{"mir/regionck.html#skolemization-and-outlives-constraints":{"tf":1.0},"ty.html#allocating-and-working-with-types":{"tf":1.0}},"df":2}}}},"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"i":{"docs":{"compiler-debugging.html#getting-a-backtrace-for-errors":{"tf":1.0}},"df":1}}}},"l":{"docs":{},"df":0,"i":{"docs":{"tests/adding.html#revisions":{"tf":1.0},"traits/resolution.html#selection":{"tf":1.0},"traits/hrtb.html#higher-ranked-trait-obligations":{"tf":1.0},"traits/resolution.html#selection-during-translation":{"tf":1.0},"tests/adding.html#other-header-commands":{"tf":1.0},"variance.html#trait-variance-and-vtable-resolution":{"tf":1.0},"traits/specialization.html#specialization":{"tf":1.7320508075688773},"traits/associated-types.html#associated-type-projection-and-normalization":{"tf":1.0},"traits/lowering-to-logic.html#type-checking-normal-functions":{"tf":1.0},"appendix/background.html#what-is-a-free-region-or-a-free-variable-what-about-bound-region":{"tf":1.0},"conventions.html#prefer-exhaustive-matches":{"tf":1.0},"type-inference.html#enforcing-equality--subtyping":{"tf":1.0},"traits/canonicalization.html#processing-the-canonicalized-query-result":{"tf":1.4142135623730952},"traits/canonicalization.html#executing-the-query":{"tf":1.0},"tests/adding.html#normalization":{"tf":1.0},"mir/passes.html#mir-passes":{"tf":1.7320508075688773},"traits/index.html#trait-solving-new-style":{"tf":1.0},"mir/regionck.html#what-is-a-universe":{"tf":1.0},"traits/canonical-queries.html#examples":{"tf":1.0},"traits/lowering-to-logic.html#rust-traits-and-logic":{"tf":1.0},"traits/caching.html#an-example":{"tf":1.4142135623730952},"incrcomp-debugging.html#tracking-down-incorrect-edges":{"tf":1.0},"type-inference.html#inference-variables":{"tf":1.0},"diag.html#suggestions":{"tf":2.23606797749979},"method-lookup.html#method-lookup":{"tf":1.0},"traits/resolution.html#candidate-assembly":{"tf":2.23606797749979},"tests/adding.html#guide-to-the-ui-tests":{"tf":1.0},"method-lookup.html#steps":{"tf":1.0}},"df":28,"c":{"docs":{"traits/lowering-to-logic.html#rust-traits-and-logic":{"tf":1.0},"variance.html#addendum-variance-on-traits":{"tf":1.0},"diag.html#suggestions":{"tf":2.23606797749979},"traits/associated-types.html#projection-equality":{"tf":1.0},"traits/resolution.html#candidate-assembly":{"tf":1.0}},"df":5,"a":{"docs":{},"df":0,"b":{"docs":{},"df":0,"i":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{},"df":0,"y":{"docs":{},"df":0,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"m":{"docs":{},"df":0,"a":{"docs":{},"df":0,"c":{"docs":{},"df":0,"h":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"e":{"docs":{},"df":0,"a":{"docs":{},"df":0,"p":{"docs":{},"df":0,"p":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{},"df":0,"c":{"docs":{"diag.html#suggestions":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{"variance.html#variance-and-object-types":{"tf":1.4142135623730952},"compiler-debugging.html#getting-logging-output":{"tf":1.0},"mir/passes.html#seeing-how-the-mir-changes-as-the-compiler-executes":{"tf":1.0},"mir/regionck.html#universes-and-skolemized-region-elements":{"tf":1.7320508075688773},"mir/regionck.html#mir-based-region-checking-nll":{"tf":1.4142135623730952},"traits/canonicalization.html#canonicalization":{"tf":1.0},"appendix/background.html#what-is-a-control-flow-graph":{"tf":1.0},"method-lookup.html#candidate-search":{"tf":1.0},"appendix/background.html#what-is-a-free-region-or-a-free-variable-what-about-bound-region":{"tf":2.0},"mir/regionck.html#what-is-a-universe":{"tf":1.0},"hir.html#the-hir":{"tf":1.0},"tests/adding.html#header-commands-configuring-rustc":{"tf":1.0},"compiletest.html#header-commands":{"tf":1.0},"incrcomp-debugging.html#dumping-the-graph":{"tf":1.0},"variance.html#addendum-variance-on-traits":{"tf":1.0},"traits/lowering-rules.html#lowering-where-clauses":{"tf":1.4142135623730952},"traits/canonical-queries.html#a-trait-query-in-rustc":{"tf":1.0}},"df":17}},"n":{"docs":{},"df":0,"d":{"docs":{},"df":0,"i":{"docs":{},"df":0,"x":{"docs":{"appendix/glossary.html#appendix-c-glossary":{"tf":1.4142135623730952},"variance.html#variance-of-type-and-lifetime-parameters":{"tf":1.0},"appendix/stupid-stats.html#appendix-a-a-tutorial-on-creating-a-drop-in-replacement-for-rustc":{"tf":1.4142135623730952},"appendix/background.html#appendix-b-background-topics":{"tf":1.4142135623730952},"appendix/code-index.html#appendix-d-code-index":{"tf":1.4142135623730952},"rustc-driver.html#the-rustc-driver":{"tf":1.0}},"df":6}}}}},"v":{"docs":{},"df":0,"e":{"docs":{},"df":0,"y":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{"tests/intro.html#testing-infrastructure":{"tf":1.0}},"df":1}}}}}}},"t":{"docs":{},"df":0,"o":{"docs":{},"df":0,"m":{"docs":{"type-inference.html#snapshots":{"tf":1.0}},"df":1}},"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"m":{"docs":{},"df":0,"p":{"docs":{},"df":0,"t":{"docs":{"traits/resolution.html#candidate-assembly":{"tf":1.0},"type-inference.html#region-constraints":{"tf":1.0},"appendix/glossary.html#appendix-c-glossary":{"tf":1.0},"miri.html#miri":{"tf":1.0},"mir/passes.html#stealing":{"tf":1.0},"tests/adding.html#other-header-commands":{"tf":1.0},"type-inference.html#extracting-region-constraints":{"tf":1.0},"appendix/code-index.html#appendix-d-code-index":{"tf":1.0},"traits/hrtb.html#basic-matching-and-skolemization-leaks":{"tf":1.0},"traits/caching.html#caching-and-subtle-considerations-therewith":{"tf":1.0}},"df":10}}}},"r":{"docs":{},"df":0,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"f":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{},"df":0,"_":{"docs":{},"df":0,"c":{"docs":{},"df":0,"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"_":{"docs":{},"df":0,"n":{"docs":{},"df":0,"a":{"docs":{},"df":0,"m":{"docs":{},"df":0,"e":{"docs":{},"df":0,"(":{"docs":{},"df":0,"&":{"docs":{},"df":0,"k":{"docs":{},"df":0,"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,".":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{},"df":0,"t":{"docs":{},"df":0,"r":{"docs":{"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"df":0,"b":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{"rustdoc.html#from-crate-to-clean":{"tf":1.4142135623730952},"compiletest.html#adding-a-new-header-command":{"tf":1.0},"rustc-driver.html#the-rustc-driver":{"tf":1.0},"appendix/stupid-stats.html#overview-of-the-compilation-process":{"tf":1.4142135623730952},"compiler-debugging.html#formatting-graphviz-output-dot-files":{"tf":1.0},"rustdoc.html#hot-potato":{"tf":2.23606797749979}},"df":6}}}}},"a":{"docs":{},"df":0,"c":{"docs":{},"df":0,"h":{"docs":{"traits/caching.html#where-clauses-and-the-local-vs-global-cache":{"tf":1.4142135623730952},"diag.html#span":{"tf":1.0},"tests/adding.html#error-annotations":{"tf":1.0},"rustc-driver.html#the-rustc-driver":{"tf":1.4142135623730952},"traits/lowering-module.html#unit-tests":{"tf":1.0}},"df":5}}}}},"v":{"docs":{},"df":0,"o":{"docs":{},"df":0,"i":{"docs":{},"df":0,"d":{"docs":{"traits/resolution.html#candidate-assembly":{"tf":1.0},"mir/passes.html#stealing":{"tf":1.0},"diag.html#error-messages":{"tf":1.0},"compiletest.html#adding-a-new-header-command":{"tf":1.0},"incremental-compilation.html#the-try-mark-green-algorithm":{"tf":1.0},"traits/specialization.html#specialization":{"tf":1.0},"incremental-compilation.html#the-basic-algorithm":{"tf":1.4142135623730952},"query.html#cycles-between-queries":{"tf":1.0}},"df":8}}},"a":{"docs":{},"df":0,"i":{"docs":{},"df":0,"l":{"docs":{"rustdoc.html#dotting-is-and-crossing-ts":{"tf":1.0},"traits/resolution.html#selection-during-translation":{"tf":1.0},"rustc-driver.html#the-rustc-driver":{"tf":1.0},"rustdoc.html#cheat-sheet":{"tf":1.0},"appendix/stupid-stats.html#compilercontroller":{"tf":1.0},"incremental-compilation.html#improvements-to-the-basic-algorithm":{"tf":1.0},"tests/intro.html#testing-on-emulators":{"tf":1.0},"rustdoc.html#from-soup-to-nuts":{"tf":1.0},"traits/resolution.html#major-concepts":{"tf":1.0}},"df":9}}}},"0":{"docs":{"traits/lowering-rules.html#lowering-where-clauses":{"tf":1.4142135623730952},"traits/lowering-rules.html#lowering-impls":{"tf":1.4142135623730952}},"df":2},"i":{"docs":{"traits/lowering-rules.html#notation":{"tf":1.0}},"df":1,"m":{"docs":{"tests/adding.html#normalization":{"tf":1.0},"traits/chalk-overview.html#lowering":{"tf":1.0},"macro-expansion.html#macro-expansion":{"tf":1.0},"appendix/glossary.html#appendix-c-glossary":{"tf":1.0}},"df":4},"r":{"docs":{"traits/lowering-rules.html#function-and-constant-values":{"tf":1.0}},"df":1}},"1":{"docs":{"traits/resolution.html#candidate-assembly":{"tf":2.0}},"df":1},"m":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{"hir.html#the-hir":{"tf":1.0},"method-lookup.html#method-lookup":{"tf":1.0}},"df":2}},"a":{"docs":{},"df":0,"z":{"docs":{"appendix/stupid-stats.html#appendix-a-a-tutorial-on-creating-a-drop-in-replacement-for-rustc":{"tf":1.0}},"df":1}},"o":{"docs":{},"df":0,"u":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{"traits/resolution.html#candidate-assembly":{"tf":1.0},"type-inference.html#region-constraints":{"tf":1.0},"the-parser.html#the-parser":{"tf":1.0},"high-level-overview.html#the-main-stages-of-compilation":{"tf":1.0},"high-level-overview.html#crate-structure":{"tf":1.0}},"df":5}}}},"b":{"docs":{},"df":0,"i":{"docs":{},"df":0,"g":{"docs":{},"df":0,"u":{"docs":{"traits/canonical-queries.html#a-trait-query-in-rustc":{"tf":1.4142135623730952},"traits/canonicalization.html#executing-the-query":{"tf":1.0},"traits/goals-and-clauses.html#goals-and-clauses-meta-structure":{"tf":1.0},"traits/resolution.html#overview":{"tf":1.0},"traits/canonical-queries.html#examples":{"tf":1.4142135623730952},"traits/resolution.html#candidate-assembly":{"tf":1.7320508075688773},"macro-expansion.html#the-macro-parser":{"tf":1.4142135623730952}},"df":7}}}}},"r":{"docs":{},"df":0,"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"y":{"docs":{"const-eval.html#constant-evaluation":{"tf":1.0},"traits/canonicalization.html#canonicalizing-the-query":{"tf":1.0},"miri.html#miri":{"tf":1.4142135623730952},"variance.html#trait-variance-and-vtable-resolution":{"tf":1.0}},"df":4,"_":{"docs":{},"df":0,"t":{"docs":{},"df":0,"i":{"docs":{"ty.html#allocating-and-working-with-types":{"tf":1.0}},"df":1}}}}}},"c":{"docs":{"query.html#adding-a-new-kind-of-query":{"tf":1.0}},"df":1,"h":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{},"df":0,"u":{"docs":{},"df":0,"r":{"docs":{"tests/intro.html#testing-on-emulators":{"tf":1.4142135623730952},"tests/adding.html#ignoring-tests":{"tf":1.0}},"df":2}}}}}}}}},"i":{"docs":{},"df":0,"s":{"docs":{"query.html#cycles-between-queries":{"tf":1.4142135623730952},"type-inference.html#inference-variables":{"tf":1.7320508075688773},"appendix/background.html#appendix-b-background-topics":{"tf":1.0},"traits/associated-types.html#associated-type-projection-and-normalization":{"tf":1.0},"mir/regionck.html#mir-based-region-checking-nll":{"tf":1.4142135623730952}},"df":5}},"b":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{},"df":0,"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{"appendix/stupid-stats.html#compilercalls":{"tf":1.0},"tests/running.html#running-a-subset-of-the-test-suites":{"tf":1.0}},"df":2}}}}}}},"t":{"docs":{},"df":0,"i":{"docs":{},"df":0,"f":{"docs":{},"df":0,"i":{"docs":{},"df":0,"c":{"docs":{},"df":0,"i":{"docs":{"traits/canonical-queries.html#examples":{"tf":1.0}},"df":1}}}}}},"e":{"docs":{},"df":0,"a":{"docs":{"tests/adding.html#naming-your-test":{"tf":1.0},"name-resolution.html#scopes-and-ribs":{"tf":1.0}},"df":2},"n":{"docs":{},"df":0,"a":{"docs":{"type-inference.html#creating-an-inference-context":{"tf":1.7320508075688773},"rustc-driver.html#a-note-on-lifetimes":{"tf":1.0},"ty.html#beyond-types-other-kinds-of-arena-allocated-data-structures":{"tf":1.7320508075688773},"ty.html#the-tcx-and-how-it-uses-lifetimes":{"tf":4.0},"ty.html#allocating-and-working-with-types":{"tf":2.0},"appendix/glossary.html#appendix-c-glossary":{"tf":1.0}},"df":6},"'":{"docs":{},"df":0,"t":{"docs":{"variance.html#trait-variance-and-vtable-resolution":{"tf":1.0},"tests/intro.html#testing-on-emulators":{"tf":1.0},"tests/intro.html#other-tests":{"tf":1.0}},"df":3}}}},"m":{"docs":{"tests/adding.html#ignoring-tests":{"tf":1.0},"tests/intro.html#testing-on-emulators":{"tf":1.7320508075688773},"macro-expansion.html#the-macro-parser":{"tf":2.0},"tests/adding.html#comment-explaining-what-the-test-is-about":{"tf":1.0}},"df":4,"h":{"docs":{},"df":0,"f":{"docs":{"tests/intro.html#testing-on-emulators":{"tf":1.4142135623730952}},"df":1}}},"o":{"docs":{},"df":0,"u":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{"macro-expansion.html#the-macro-parser":{"tf":1.0},"hir.html#identifiers-in-the-hir":{"tf":1.4142135623730952},"rustdoc.html#from-clean-to-crate":{"tf":1.0},"appendix/glossary.html#appendix-c-glossary":{"tf":1.4142135623730952},"mir/index.html#mir-data-types":{"tf":1.0},"ty.html#the-tcx-and-how-it-uses-lifetimes":{"tf":1.0},"rustdoc.html#from-crate-to-clean":{"tf":1.0},"traits/index.html#trait-solving-new-style":{"tf":1.0},"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.0}},"df":9}}},"s":{"docs":{"mir/regionck.html#what-is-a-universe":{"tf":1.0}},"df":1}},"g":{"docs":{"tests/adding.html#editing-and-updating-the-reference-files":{"tf":1.0},"tests/running.html#running-an-individual-test":{"tf":1.4142135623730952},"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.4142135623730952},"mir/regionck.html#final-example":{"tf":1.4142135623730952},"tests/adding.html#other-header-commands":{"tf":1.0},"compiler-debugging.html#debugging-llvm":{"tf":1.7320508075688773}},"df":6,"u":{"docs":{},"df":0,"m":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{"traits/lowering-rules.html#notation":{"tf":1.0},"mir/regionck.html#final-example":{"tf":1.0},"miri.html#interpretation":{"tf":1.0},"mir/regionck.html#mir-based-region-checking-nll":{"tf":1.0},"mir/index.html#key-mir-vocabulary":{"tf":1.4142135623730952},"mir/regionck.html#another-example":{"tf":2.0},"traits/associated-types.html#skolemized-associated-types":{"tf":1.0},"compiletest.html#adding-a-new-header-command":{"tf":1.7320508075688773},"variance.html#trait-variance-and-vtable-resolution":{"tf":1.0},"rustc-driver.html#the-rustc-driver":{"tf":1.0},"appendix/stupid-stats.html#appendix-a-a-tutorial-on-creating-a-drop-in-replacement-for-rustc":{"tf":1.0},"traits/lowering-to-logic.html#type-checking-normal-functions":{"tf":1.0},"query.html#how-the-compiler-executes-a-query":{"tf":1.0},"mir/regionck.html#skolemization-and-universes":{"tf":1.0},"mir/regionck.html#subtyping-and-skolemization":{"tf":1.4142135623730952},"appendix/stupid-stats.html#overview-of-the-compilation-process":{"tf":1.0},"appendix/background.html#what-is-a-free-region-or-a-free-variable-what-about-bound-region":{"tf":1.0},"query.html#adding-a-new-kind-of-query":{"tf":1.7320508075688773},"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":3.0},"traits/canonical-queries.html#examples":{"tf":1.0},"appendix/stupid-stats.html#compilercalls":{"tf":1.7320508075688773},"appendix/stupid-stats.html#the-driver-customisation-apis":{"tf":1.0},"miri.html#miri":{"tf":1.0}},"df":23}}}}},"_":{"docs":{},"df":0,"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"u":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.0}},"df":1}}}}}}}},"l":{"docs":{"variance.html#variance-of-type-and-lifetime-parameters":{"tf":1.0}},"df":1,"g":{"docs":{},"df":0,"e":{"docs":{},"df":0,"b":{"docs":{},"df":0,"r":{"docs":{},"df":0,"a":{"docs":{"appendix/glossary.html#appendix-c-glossary":{"tf":1.0}},"df":1}}}},"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{},"df":0,"h":{"docs":{},"df":0,"m":{"docs":{"incremental-compilation.html#incremental-compilation":{"tf":1.0},"type-inference.html#type-inference":{"tf":1.0},"type-inference.html#region-constraints":{"tf":1.0},"incremental-compilation.html#the-try-mark-green-algorithm":{"tf":1.7320508075688773},"incremental-compilation.html#improvements-to-the-basic-algorithm":{"tf":2.23606797749979},"macro-expansion.html#the-macro-parser":{"tf":1.7320508075688773},"traits/hrtb.html#basic-matching-and-skolemization-leaks":{"tf":1.0},"variance.html#variance-and-object-types":{"tf":1.0},"variance.html#the-algorithm":{"tf":1.4142135623730952},"variance.html#variance-of-type-and-lifetime-parameters":{"tf":1.0},"variance.html#dependency-graph-management":{"tf":1.0},"incremental-compilation.html#footnotes":{"tf":1.0},"traits/resolution.html#selection":{"tf":1.0},"incremental-compilation.html#the-basic-algorithm":{"tf":2.0}},"df":14}}}}}}},"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"t":{"docs":{"query.html#adding-a-new-kind-of-query":{"tf":1.0}},"df":1}}},"l":{"docs":{},"df":0,"o":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{"mir/index.html#key-mir-vocabulary":{"tf":1.0}},"df":1}},"w":{"docs":{"diag.html#declaring-a-lint":{"tf":1.0},"incremental-compilation.html#the-query-dag":{"tf":1.0},"mir/borrowck.html#major-phases-of-the-borrow-checker":{"tf":1.0},"conventions.html#using-crates-from-cratesio":{"tf":1.0},"rustc-driver.html#the-rustc-driver":{"tf":1.4142135623730952},"incremental-compilation.html#the-try-mark-green-algorithm":{"tf":1.0},"macro-expansion.html#example":{"tf":1.0},"miri.html#interpretation":{"tf":1.4142135623730952},"mir/regionck.html#what-is-a-universe":{"tf":1.0},"rustdoc.html#dotting-is-and-crossing-ts":{"tf":1.0},"compiletest.html#introduction":{"tf":1.4142135623730952},"diag.html#span":{"tf":1.0},"type-inference.html#snapshots":{"tf":1.0},"type-inference.html#type-inference":{"tf":1.0},"traits/lowering-to-logic.html#type-checking-generic-functions-beyond-horn-clauses":{"tf":1.0},"incrcomp-debugging.html#dumping-the-graph":{"tf":1.0},"diag.html#edition-gated-lints":{"tf":1.4142135623730952},"variance.html#addendum-variance-on-traits":{"tf":1.0},"traits/chalk-overview.html#lowering":{"tf":1.0},"appendix/glossary.html#appendix-c-glossary":{"tf":1.0},"param_env.html#parameter-environment":{"tf":1.0},"tests/adding.html#revisions":{"tf":1.0},"mir/passes.html#seeing-how-the-mir-changes-as-the-compiler-executes":{"tf":1.0},"traits/lowering-rules.html#trait-header":{"tf":1.4142135623730952},"diag.html#error-messages":{"tf":1.7320508075688773},"conventions.html#how-to-structure-your-pr":{"tf":1.0},"traits/index.html#trait-solving-new-style":{"tf":1.0}},"df":27},"c":{"docs":{"mir/passes.html#stealing":{"tf":1.0},"miri.html#interpretation":{"tf":1.4142135623730952},"miri.html#allocations":{"tf":3.1622776601683797},"miri.html#datastructures":{"tf":1.4142135623730952},"how-to-build-and-run.html#create-a-configtoml":{"tf":1.0},"ty.html#beyond-types-other-kinds-of-arena-allocated-data-structures":{"tf":2.23606797749979},"ty.html#the-tcx-and-how-it-uses-lifetimes":{"tf":2.23606797749979},"ty.html#allocating-and-working-with-types":{"tf":2.6457513110645909},"mir/index.html#key-mir-vocabulary":{"tf":1.4142135623730952},"appendix/stupid-stats.html#overview-of-the-compilation-process":{"tf":1.0},"miri.html#miri":{"tf":1.7320508075688773},"const-eval.html#constant-evaluation":{"tf":1.0}},"df":12}}},"w":{"docs":{},"df":0,"a":{"docs":{},"df":0,"y":{"docs":{"traits/associated-types.html#associated-type-projection-and-normalization":{"tf":1.4142135623730952},"miri.html#miri":{"tf":1.0},"rustc-driver.html#the-rustc-driver":{"tf":1.0},"type-inference.html#trying-equality":{"tf":1.0},"variance.html#variance-and-object-types":{"tf":1.0},"tests/adding.html#ignoring-tests":{"tf":1.4142135623730952},"mir/index.html#key-mir-vocabulary":{"tf":1.4142135623730952},"tests/running.html#running-an-individual-test":{"tf":1.0},"ty.html#allocating-and-working-with-types":{"tf":2.0},"compiletest.html#introduction":{"tf":1.0},"traits/resolution.html#candidate-assembly":{"tf":1.0},"tests/adding.html#adding-new-tests":{"tf":1.0},"query.html#cycles-between-queries":{"tf":1.0},"how-to-build-and-run.html#create-a-configtoml":{"tf":1.0},"traits/index.html#trait-solving-new-style":{"tf":1.0},"variance.html#variance-and-associated-types":{"tf":1.0},"mir/passes.html#implementing-and-registering-a-pass":{"tf":1.0},"traits/canonicalization.html#canonicalization":{"tf":1.0},"mir/regionck.html#back-to-our-example":{"tf":1.4142135623730952},"query.html#how-the-compiler-executes-a-query":{"tf":1.0},"conventions.html#how-to-structure-your-pr":{"tf":1.4142135623730952},"method-lookup.html#candidate-assembly":{"tf":1.0},"traits/associated-types.html#integration-with-unification":{"tf":1.0},"incremental-compilation.html#the-basic-algorithm":{"tf":1.0},"variance.html#the-algorithm":{"tf":1.4142135623730952}},"df":25}}},"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"a":{"docs":{},"df":0,"d":{"docs":{},"df":0,"i":{"docs":{"query.html#cycles-between-queries":{"tf":1.0},"mir/passes.html#stealing":{"tf":1.4142135623730952},"mir/regionck.html#skolemization-and-outlives-constraints":{"tf":1.0},"appendix/stupid-stats.html#what-next":{"tf":1.0},"tests/adding.html#comment-explaining-what-the-test-is-about":{"tf":1.0},"conventions.html#how-to-structure-your-pr":{"tf":1.0},"tests/adding.html#naming-your-test":{"tf":1.0},"compiler-debugging.html#getting-logging-output":{"tf":1.0},"query.html#how-the-compiler-executes-a-query":{"tf":1.0},"traits/resolution.html#selection":{"tf":1.0},"name-resolution.html#overall-strategy":{"tf":1.0}},"df":11}}}}},"o":{"docs":{},"df":0,"n":{"docs":{"appendix/stupid-stats.html#overview-of-the-compilation-process":{"tf":1.0}},"df":1,"g":{"docs":{"method-lookup.html#candidate-assembly":{"tf":1.0},"conventions.html#how-to-structure-your-pr":{"tf":1.0},"traits/goals-and-clauses.html#domain-goals":{"tf":1.4142135623730952},"appendix/glossary.html#appendix-c-glossary":{"tf":1.4142135623730952},"compiletest.html#introduction":{"tf":1.0},"mir/passes.html#implementing-and-registering-a-pass":{"tf":1.4142135623730952},"mir/index.html#mir-data-types":{"tf":1.0},"rustdoc.html#from-soup-to-nuts":{"tf":1.0},"ty.html#beyond-types-other-kinds-of-arena-allocated-data-structures":{"tf":1.0},"mir/regionck.html#what-is-a-universe":{"tf":1.0},"traits/lowering-rules.html#associated-type-declarations":{"tf":1.0},"traits/caching.html#an-example":{"tf":1.0},"incremental-compilation.html#the-query-dag":{"tf":1.0},"method-lookup.html#method-lookup":{"tf":1.0}},"df":14,"s":{"docs":{},"df":0,"i":{"docs":{},"df":0,"d":{"docs":{"rustdoc.html#from-clean-to-crate":{"tf":1.0},"rustdoc.html#from-soup-to-nuts":{"tf":1.0}},"df":2}}}}}},"t":{"docs":{"compiler-debugging.html#debugging-llvm":{"tf":1.0}},"df":1,"i":{"docs":{},"df":0,"d":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{"variance.html#variance-of-type-and-lifetime-parameters":{"tf":1.0}},"df":1}}}},"h":{"docs":{},"df":0,"o":{"docs":{},"df":0,"u":{"docs":{},"df":0,"g":{"docs":{},"df":0,"h":{"docs":{"miri.html#interpretation":{"tf":1.0},"param_env.html#parameter-environment":{"tf":1.0},"high-level-overview.html#crate-structure":{"tf":1.0},"mir/index.html#key-mir-vocabulary":{"tf":1.0},"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.0},"mir/regionck.html#what-is-a-universe":{"tf":1.0},"rustc-driver.html#a-note-on-lifetimes":{"tf":1.0},"appendix/stupid-stats.html#appendix-a-a-tutorial-on-creating-a-drop-in-replacement-for-rustc":{"tf":1.4142135623730952},"appendix/stupid-stats.html#overview-of-the-compilation-process":{"tf":1.0},"appendix/stupid-stats.html#what-next":{"tf":1.0},"traits/bibliography.html#bibliography":{"tf":1.0},"compiletest.html#implementing-the-behavior-change":{"tf":1.0},"ty.html#import-conventions":{"tf":1.0}},"df":13}}}}},"e":{"docs":{},"df":0,"r":{"docs":{"traits/lowering-rules.html#transforming-the-lowered-where-clauses":{"tf":1.0}},"df":1,"n":{"docs":{"rustdoc.html#from-soup-to-nuts":{"tf":1.0},"high-level-overview.html#the-main-stages-of-compilation":{"tf":1.0},"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.0},"mir/passes.html#stealing":{"tf":1.0}},"df":4}}}},"i":{"docs":{},"df":0,"a":{"docs":{"ty.html#allocating-and-working-with-types":{"tf":1.4142135623730952}},"df":1}},"p":{"docs":{},"df":0,"h":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"u":{"docs":{},"df":0,"m":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"appendix/glossary.html#appendix-c-glossary":{"tf":1.0}},"df":1}}}}}}}}},"2":{"docs":{"traits/resolution.html#candidate-assembly":{"tf":1.7320508075688773}},"df":1},"c":{"docs":{},"df":0,"t":{"docs":{"rustc-driver.html#the-rustc-driver":{"tf":1.0}},"df":1,"i":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{"appendix/stupid-stats.html#compilercalls":{"tf":1.4142135623730952},"mir/index.html#key-mir-vocabulary":{"tf":1.4142135623730952},"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.4142135623730952}},"df":3}},"v":{"docs":{"tests/adding.html#naming-your-test":{"tf":1.0},"appendix/glossary.html#appendix-c-glossary":{"tf":1.0},"hir.html#identifiers-in-the-hir":{"tf":1.0},"query.html#how-the-compiler-executes-a-query":{"tf":1.0}},"df":4}},"u":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{"type-inference.html#region-constraints":{"tf":1.0},"how-to-build-and-run.html#creating-a-rustup-toolchain":{"tf":1.0},"miri.html#interpretation":{"tf":1.0},"traits/canonicalization.html#processing-the-canonicalized-query-result":{"tf":1.0},"type-checking.html#type-collection":{"tf":1.0},"miri.html#miri":{"tf":1.4142135623730952},"type-inference.html#creating-an-inference-context":{"tf":1.0},"compiletest.html#implementing-the-behavior-change":{"tf":1.0},"appendix/stupid-stats.html#overview-of-the-compilation-process":{"tf":1.0},"rustdoc.html#from-crate-to-clean":{"tf":1.4142135623730952},"appendix/glossary.html#appendix-c-glossary":{"tf":1.0},"traits/specialization.html#specialization":{"tf":1.4142135623730952},"variance.html#variance-of-type-and-lifetime-parameters":{"tf":1.0},"variance.html#variance-and-object-types":{"tf":1.0},"rustdoc.html#the-walking-tour-of-rustdoc":{"tf":1.0},"traits/lowering-module.html#the-lowering-module-in-rustc":{"tf":1.0},"variance.html#dependency-graph-management":{"tf":1.0},"ty.html#the-tcx-and-how-it-uses-lifetimes":{"tf":1.0},"traits/resolution.html#major-concepts":{"tf":1.0},"type-inference.html#enforcing-equality--subtyping":{"tf":1.4142135623730952},"mir/passes.html#stealing":{"tf":1.0},"miri.html#allocations":{"tf":1.0},"tests/adding.html#naming-your-test":{"tf":1.0},"rustdoc.html#from-clean-to-crate":{"tf":1.0},"mir/regionck.html#skolemization-and-outlives-constraints":{"tf":1.0},"tests/adding.html#guide-to-the-ui-tests":{"tf":1.0},"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.4142135623730952},"query.html#queries-demand-driven-compilation":{"tf":1.0},"method-lookup.html#candidate-search":{"tf":1.0},"traits/goals-and-clauses.html#goals-and-clauses-meta-structure":{"tf":1.0},"rustdoc.html#hot-potato":{"tf":1.0},"name-resolution.html#todo":{"tf":1.0},"the-parser.html#the-parser":{"tf":1.0},"traits/caching.html#where-clauses-and-the-local-vs-global-cache":{"tf":1.0},"type-inference.html#extracting-region-constraints":{"tf":1.0},"diag.html#declaring-a-lint":{"tf":1.0}},"df":36}}}},"c":{"docs":{},"df":0,"u":{"docs":{},"df":0,"r":{"docs":{"traits/caching.html#where-clauses-and-the-local-vs-global-cache":{"tf":1.0},"method-lookup.html#candidate-assembly":{"tf":1.0}},"df":2},"m":{"docs":{},"df":0,"u":{"docs":{},"df":0,"l":{"docs":{"variance.html#the-algorithm":{"tf":1.0},"traits/index.html#trait-solving-new-style":{"tf":1.0},"traits/canonicalization.html#executing-the-query":{"tf":1.0}},"df":3}}}},"i":{"docs":{},"df":0,"d":{"docs":{"traits/associated-types.html#skolemized-associated-types":{"tf":1.0}},"df":1}},"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"s":{"docs":{"variance.html#dependency-graph-management":{"tf":1.0},"hir.html#out-of-band-storage-and-the--crate--type":{"tf":2.449489742783178},"traits/chalk-overview.html#intermediate-representation-ir":{"tf":1.0},"param_env.html#parameter-environment":{"tf":1.0},"appendix/glossary.html#appendix-c-glossary":{"tf":1.0},"compiletest.html#implementing-the-behavior-change":{"tf":1.0},"ty.html#allocating-and-working-with-types":{"tf":1.7320508075688773},"mir/passes.html#mir-passes":{"tf":1.0},"miri.html#interpretation":{"tf":1.4142135623730952},"high-level-overview.html#the-main-stages-of-compilation":{"tf":1.4142135623730952},"rustc-driver.html#a-note-on-lifetimes":{"tf":1.0},"mir/passes.html#stealing":{"tf":1.0},"mir/borrowck.html#mir-borrow-check":{"tf":1.0},"tests/intro.html#testing-with-docker-images":{"tf":1.0},"miri.html#datastructures":{"tf":1.0},"name-resolution.html#scopes-and-ribs":{"tf":2.6457513110645909},"hir.html#the-hir-map":{"tf":1.0},"ty.html#the-tcx-and-how-it-uses-lifetimes":{"tf":1.4142135623730952}},"df":18}},"p":{"docs":{},"df":0,"t":{"docs":{"appendix/glossary.html#appendix-c-glossary":{"tf":1.4142135623730952},"mir/regionck.html#skolemization-and-universes":{"tf":1.4142135623730952},"mir/regionck.html#another-example":{"tf":1.0},"traits/lowering-to-logic.html#type-checking-generic-functions-beyond-horn-clauses":{"tf":1.0}},"df":4}}},"o":{"docs":{},"df":0,"u":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{"mir/regionck.html#extending-the-universal-regions-check":{"tf":1.0},"method-lookup.html#candidate-assembly":{"tf":1.0}},"df":2}}},"m":{"docs":{},"df":0,"p":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"i":{"docs":{"tests/adding.html#adding-new-tests":{"tf":1.0},"rustdoc.html#from-crate-to-clean":{"tf":1.0}},"df":2}}}},"m":{"docs":{},"df":0,"o":{"docs":{},"df":0,"d":{"docs":{"type-inference.html#type-inference":{"tf":1.0},"traits/index.html#trait-solving-new-style":{"tf":1.0}},"df":2}}}},"r":{"docs":{},"df":0,"d":{"docs":{"conventions.html#copyright-notice":{"tf":1.0},"mir/regionck.html#subtyping-and-skolemization":{"tf":1.0},"compiletest.html#adding-a-new-header-command":{"tf":1.0},"tests/adding.html#header-commands-configuring-rustc":{"tf":1.0}},"df":4,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"g":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{"tests/adding.html#ignoring-tests":{"tf":1.0}},"df":1}}}}}}}}},"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"y":{"docs":{},"df":0,"m":{"docs":{"appendix/glossary.html#appendix-c-glossary":{"tf":1.0}},"df":1}}}}},"y":{"docs":{},"df":0,"c":{"docs":{},"df":0,"l":{"docs":{"appendix/glossary.html#appendix-c-glossary":{"tf":1.0}},"df":1}}},"h":{"docs":{},"df":0,"i":{"docs":{},"df":0,"e":{"docs":{},"df":0,"v":{"docs":{"traits/goals-and-clauses.html#coinductive-goals":{"tf":1.0}},"df":1}}}}},"w":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{"conventions.html#how-to-structure-your-pr":{"tf":1.0},"compiler-debugging.html#expensive-operations-in-logs":{"tf":1.0},"tests/adding.html#adding-new-tests":{"tf":1.0},"type-inference.html#trying-equality":{"tf":1.0}},"df":4},"y":{"docs":{"ty.html#the-tcx-and-how-it-uses-lifetimes":{"tf":1.4142135623730952},"compiler-debugging.html#debugging-llvm":{"tf":1.0},"hir.html#the-hir":{"tf":1.0},"traits/canonical-queries.html#the-traditional-interactive-prolog-query":{"tf":1.0},"traits/canonicalization.html#canonicalizing-the-query-result":{"tf":1.0},"appendix/stupid-stats.html#overview-of-the-compilation-process":{"tf":1.0},"macro-expansion.html#example":{"tf":1.0},"mir/regionck.html#what-is-a-universe":{"tf":1.0}},"df":8}}},"d":{"docs":{"compiler-debugging.html#logging-etiquette":{"tf":1.0},"conventions.html#how-to-structure-your-pr":{"tf":1.0},"conventions.html#using-crates-from-cratesio":{"tf":1.0},"hir.html#identifiers-in-the-hir":{"tf":1.0},"traits/canonical-queries.html#the-traditional-interactive-prolog-query":{"tf":1.0},"traits/goals-and-clauses.html#coinductive-goals":{"tf":1.0},"compiletest.html#adding-a-new-test-file":{"tf":2.0},"traits/lowering-rules.html#function-and-constant-values":{"tf":1.0},"tests/adding.html#revisions":{"tf":1.0},"conventions.html#prefer-exhaustive-matches":{"tf":1.4142135623730952},"compiletest.html#adding-a-new-header-command":{"tf":2.0},"mir/regionck.html#what-is-a-universe":{"tf":1.4142135623730952},"appendix/stupid-stats.html#compilercalls":{"tf":1.0},"compiletest.html#introduction":{"tf":1.0},"tests/adding.html#adding-new-tests":{"tf":1.4142135623730952},"traits/resolution.html#candidate-assembly":{"tf":1.0},"traits/chalk-overview.html#an-overview-of-chalk":{"tf":1.0},"query.html#adding-a-new-kind-of-query":{"tf":2.0},"diag.html#suggestions":{"tf":1.0}},"df":19,"d":{"docs":{"conventions.html#line-length":{"tf":1.0},"tests/adding.html#revisions":{"tf":1.0},"mir/regionck.html#mir-based-region-checking-nll":{"tf":1.0},"query.html#adding-a-new-kind-of-query":{"tf":2.449489742783178},"mir/regionck.html#skolemization-and-outlives-constraints":{"tf":1.7320508075688773},"appendix/stupid-stats.html#compilercalls":{"tf":1.0},"tests/adding.html#what-kind-of-test-should-i-add":{"tf":1.4142135623730952},"appendix/stupid-stats.html#compilercontroller":{"tf":1.0},"tests/intro.html#the-compiler-testing-framework":{"tf":1.0},"query.html#how-the-compiler-executes-a-query":{"tf":1.0},"tests/adding.html#adding-new-tests":{"tf":1.0},"rustdoc.html#hot-potato":{"tf":1.0},"rustdoc.html#from-clean-to-crate":{"tf":1.0},"mir/regionck.html#final-example":{"tf":1.0},"compiletest.html#adding-a-new-header-command":{"tf":1.7320508075688773},"rustdoc.html#cheat-sheet":{"tf":1.0},"diag.html#error-messages":{"tf":1.0},"tests/adding.html#tests-that-do-not-result-in-compile-errors":{"tf":1.0},"diag.html#suggestions":{"tf":1.0},"diag.html#edition-gated-lints":{"tf":1.0},"tests/adding.html#error-annotations":{"tf":1.4142135623730952},"type-inference.html#enforcing-equality--subtyping":{"tf":1.0},"appendix/stupid-stats.html#appendix-a-a-tutorial-on-creating-a-drop-in-replacement-for-rustc":{"tf":1.0},"compiler-debugging.html#debugging-llvm":{"tf":1.0}},"df":24,"_":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{},"df":0,"_":{"docs":{},"df":0,"g":{"docs":{},"df":0,"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"u":{"docs":{},"df":0,"p":{"docs":{"diag.html#lint-groups":{"tf":1.0}},"df":1,"!":{"docs":{},"df":0,"(":{"docs":{},"df":0,"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"s":{"docs":{"diag.html#lint-groups":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}},"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"s":{"docs":{"appendix/glossary.html#appendix-c-glossary":{"tf":1.7320508075688773}},"df":1}}}},"i":{"docs":{},"df":0,"t":{"docs":{"miri.html#miri":{"tf":1.0},"traits/lowering-rules.html#lowering-impls":{"tf":1.0},"miri.html#interpretation":{"tf":1.0},"traits/specialization.html#specialization":{"tf":1.0},"ty.html#beyond-types-other-kinds-of-arena-allocated-data-structures":{"tf":1.0},"traits/goals-and-clauses.html#coinductive-goals":{"tf":1.0},"mir/visitor.html#traversal":{"tf":1.0},"appendix/glossary.html#appendix-c-glossary":{"tf":1.4142135623730952},"query.html#adding-a-new-kind-of-query":{"tf":1.0},"traits/lowering-rules.html#transforming-the-lowered-where-clauses":{"tf":1.0},"traits/chalk-overview.html#intermediate-representation-ir":{"tf":1.0},"name-resolution.html#scopes-and-ribs":{"tf":1.0},"rustdoc.html#dotting-is-and-crossing-ts":{"tf":1.0},"compiletest.html#introduction":{"tf":1.0},"compiletest.html#adding-a-new-header-command":{"tf":1.0}},"df":15,"i":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{"const-eval.html#constant-evaluation":{"tf":1.0},"miri.html#allocations":{"tf":1.0}},"df":2}}}}},"<":{"docs":{},"df":0,"i":{"docs":{},"df":0,"3":{"docs":{},"df":0,"2":{"docs":{"traits/goals-and-clauses.html#domain-goals":{"tf":1.0}},"df":1}}}},"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{},"df":0,"u":{"docs":{},"df":0,"m":{"docs":{"variance.html#variance-of-type-and-lifetime-parameters":{"tf":1.0},"variance.html#addendum-variance-on-traits":{"tf":1.4142135623730952}},"df":2}}}}}},"j":{"docs":{"method-lookup.html#method-lookup":{"tf":1.0}},"df":1,"u":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{"tests/adding.html#editing-and-updating-the-reference-files":{"tf":1.0},"method-lookup.html#method-lookup":{"tf":1.7320508075688773}},"df":2}}}},"v":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{},"df":0,"a":{"docs":{},"df":0,"g":{"docs":{"mir/borrowck.html#mir-borrow-check":{"tf":1.0}},"df":1}}}}},"i":{"docs":{},"df":0,"c":{"docs":{"conventions.html#prefer-exhaustive-matches":{"tf":1.0}},"df":1}}},"a":{"docs":{},"df":0,"p":{"docs":{},"df":0,"t":{"docs":{"traits/lowering-to-logic.html#source":{"tf":1.0}},"df":1}}}},"s":{"docs":{},"df":0,"p":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{"tests/adding.html#guide-to-the-ui-tests":{"tf":1.0},"query.html#adding-a-new-kind-of-query":{"tf":1.0}},"df":2}}}},"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"f":{"docs":{"traits/canonical-queries.html#the-traditional-interactive-prolog-query":{"tf":1.0}},"df":1,"<":{"docs":{},"df":0,"t":{"docs":{"traits/canonical-queries.html#the-traditional-interactive-prolog-query":{"tf":1.0}},"df":1},"[":{"docs":{},"df":0,"i":{"docs":{},"df":0,"3":{"docs":{},"df":0,"2":{"docs":{"traits/canonical-queries.html#the-traditional-interactive-prolog-query":{"tf":1.0}},"df":1}}}},"v":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"<":{"docs":{},"df":0,"i":{"docs":{},"df":0,"3":{"docs":{},"df":0,"2":{"docs":{"traits/canonical-queries.html#the-traditional-interactive-prolog-query":{"tf":1.0}},"df":1}}}}}}},"?":{"docs":{},"df":0,"u":{"docs":{"traits/canonical-queries.html#the-traditional-interactive-prolog-query":{"tf":1.0}},"df":1}}}}}},"t":{"docs":{"the-parser.html#the-parser":{"tf":3.1622776601683797},"traits/chalk-overview.html#intermediate-representation-ir":{"tf":1.0},"rustdoc.html#from-soup-to-nuts":{"tf":1.0},"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":2.8284271247461905},"hir.html#out-of-band-storage-and-the--crate--type":{"tf":1.0},"tests/intro.html#compiletest-test-suites":{"tf":1.0},"rustc-driver.html#a-note-on-lifetimes":{"tf":1.4142135623730952},"rustdoc.html#from-crate-to-clean":{"tf":1.7320508075688773},"appendix/stupid-stats.html#overview-of-the-compilation-process":{"tf":3.1622776601683797},"appendix/code-index.html#appendix-d-code-index":{"tf":1.4142135623730952},"high-level-overview.html#the-main-stages-of-compilation":{"tf":2.8284271247461905},"appendix/stupid-stats.html#compilercontroller":{"tf":1.7320508075688773},"rustdoc.html#hot-potato":{"tf":1.0},"rustc-driver.html#the-rustc-driver":{"tf":1.4142135623730952},"hir.html#the-hir":{"tf":1.4142135623730952},"appendix/glossary.html#appendix-c-glossary":{"tf":2.0},"rustdoc.html#the-walking-tour-of-rustdoc":{"tf":1.4142135623730952},"traits/chalk-overview.html#parsing":{"tf":1.7320508075688773},"traits/chalk-overview.html#well-formedness-checks":{"tf":1.0}},"df":19,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"m":{"docs":{},"df":0,"a":{"docs":{},"df":0,"c":{"docs":{"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.0}},"df":1,"_":{"docs":{},"df":0,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"m":{"docs":{},"df":0,"a":{"docs":{},"df":0,"c":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"v":{"docs":{},"df":0,"o":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{},"df":0,"t":{"docs":{},"df":0,"(":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"f":{"docs":{"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}}},"c":{"docs":{},"df":0,"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{"appendix/code-index.html#appendix-d-code-index":{"tf":1.0}},"df":1}}}},"l":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{},"df":0,"k":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{},"df":0,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"b":{"docs":{},"df":0,"o":{"docs":{},"df":0,"o":{"docs":{},"df":0,"l":{"docs":{},"df":0,"(":{"docs":{},"df":0,"t":{"docs":{},"df":0,"r":{"docs":{},"df":0,"u":{"docs":{"diag.html#declaring-a-lint":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}},"i":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"m":{"docs":{"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.0}},"df":1,"_":{"docs":{},"df":0,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"m":{"docs":{},"df":0,"f":{"docs":{},"df":0,"n":{"docs":{},"df":0,"(":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"f":{"docs":{"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}}},"c":{"docs":{},"df":0,"i":{"docs":{},"df":0,"i":{"docs":{"appendix/glossary.html#appendix-c-glossary":{"tf":1.0}},"df":1}}},"m":{"docs":{},"df":0,".":{"docs":{},"df":0,"j":{"docs":{"tests/intro.html#testing-on-emulators":{"tf":1.0}},"df":1}},"j":{"docs":{"tests/adding.html#ignoring-tests":{"tf":1.0}},"df":1}},"i":{"docs":{},"df":0,"d":{"docs":{"traits/associated-types.html#associated-type-projection-and-normalization":{"tf":1.0},"variance.html#variance-and-object-types":{"tf":1.0},"macro-expansion.html#macro-expansion":{"tf":1.0}},"df":3}},"k":{"docs":{"query.html#queries-demand-driven-compilation":{"tf":1.0},"conventions.html#prefer-exhaustive-matches":{"tf":1.0},"appendix/glossary.html#appendix-c-glossary":{"tf":1.0},"traits/associated-types.html#integration-with-unification":{"tf":1.0},"traits/canonicalization.html#canonicalizing-the-query":{"tf":1.0},"name-resolution.html#name-resolution":{"tf":1.0},"rustdoc.html#from-soup-to-nuts":{"tf":1.7320508075688773},"traits/canonical-queries.html#the-traditional-interactive-prolog-query":{"tf":1.0}},"df":8},"s":{"docs":{},"df":0,"o":{"docs":{},"df":0,"c":{"docs":{},"df":0,"i":{"docs":{"rustdoc.html#from-crate-to-clean":{"tf":1.0},"traits/lowering-to-logic.html#type-checking-normal-functions":{"tf":1.0},"traits/index.html#trait-solving-new-style":{"tf":1.0},"method-lookup.html#candidate-assembly":{"tf":1.4142135623730952},"hir.html#the-hir-map":{"tf":1.0},"appendix/glossary.html#appendix-c-glossary":{"tf":1.4142135623730952},"traits/canonical-queries.html#a-trait-query-in-rustc":{"tf":1.0},"traits/specialization.html#specialization":{"tf":1.4142135623730952},"tests/adding.html#error-annotations":{"tf":1.7320508075688773},"traits/lowering-module.html#the--program_clauses_for--query":{"tf":1.0},"traits/goals-and-clauses.html#domain-goals":{"tf":2.449489742783178},"compiletest.html#adding-a-new-header-command":{"tf":1.0},"traits/associated-types.html#equality-and-associated-types":{"tf":1.7320508075688773},"traits/lowering-rules.html#associated-type-values":{"tf":1.7320508075688773},"traits/associated-types.html#associated-type-projection-and-normalization":{"tf":2.6457513110645909},"traits/associated-types.html#skolemized-associated-types":{"tf":2.6457513110645909},"traits/associated-types.html#projection-equality":{"tf":2.23606797749979},"traits/lowering-rules.html#associated-type-declarations":{"tf":2.6457513110645909},"traits/hrtb.html#higher-ranked-trait-obligations":{"tf":1.0},"appendix/code-index.html#appendix-d-code-index":{"tf":1.0},"variance.html#addendum-variance-on-traits":{"tf":1.4142135623730952},"high-level-overview.html#the-main-stages-of-compilation":{"tf":1.0},"query.html#adding-a-new-kind-of-query":{"tf":1.0},"traits/associated-types.html#integration-with-unification":{"tf":1.4142135623730952},"variance.html#variance-and-associated-types":{"tf":2.0},"hir.html#hir-bodies":{"tf":1.4142135623730952},"param_env.html#parameter-environment":{"tf":1.4142135623730952},"traits/canonical-queries.html#canonical-queries":{"tf":1.0}},"df":28},"t":{"docs":{},"df":0,"y":{"docs":{},"df":0,"p":{"docs":{},"df":0,"e":{"docs":{},"df":0,"<":{"docs":{},"df":0,"p":{"docs":{},"df":0,"n":{"docs":{},"df":0,"+":{"docs":{},"df":0,"1":{"docs":{},"df":0,".":{"docs":{},"df":0,".":{"docs":{},"df":0,"p":{"docs":{},"df":0,"m":{"docs":{"traits/lowering-rules.html#associated-type-values":{"tf":1.0},"traits/lowering-rules.html#associated-type-declarations":{"tf":1.0}},"df":2}}}}}}}}}}}},"i":{"docs":{"traits/lowering-rules.html#associated-type-declarations":{"tf":2.0}},"df":1}}}},"i":{"docs":{},"df":0,"g":{"docs":{},"df":0,"n":{"docs":{"mir/regionck.html#final-example":{"tf":1.0},"incremental-compilation.html#the-basic-algorithm":{"tf":1.0},"mir/regionck.html#what-is-a-universe":{"tf":1.0},"type-inference.html#lexical-region-resolution":{"tf":1.0},"mir/index.html#key-mir-vocabulary":{"tf":1.7320508075688773},"high-level-overview.html#the-main-stages-of-compilation":{"tf":1.0},"traits/canonical-queries.html#examples":{"tf":1.4142135623730952},"incremental-compilation.html#the-try-mark-green-algorithm":{"tf":1.0},"traits/resolution.html#selection":{"tf":1.0}},"df":9}}},"u":{"docs":{},"df":0,"m":{"docs":{"traits/lowering-rules.html#associated-type-declarations":{"tf":1.0},"variance.html#constraints":{"tf":1.4142135623730952},"traits/lowering-rules.html#trait-header":{"tf":1.4142135623730952},"traits/resolution.html#candidate-assembly":{"tf":1.0},"traits/lowering-to-logic.html#type-checking-generic-functions-beyond-horn-clauses":{"tf":1.0},"traits/goals-and-clauses.html#domain-goals":{"tf":1.4142135623730952},"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.0},"macro-expansion.html#example":{"tf":1.0},"mir/regionck.html#skolemization-and-outlives-constraints":{"tf":1.0}},"df":9}},"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"t":{"docs":{"compiler-debugging.html#getting-logging-output":{"tf":1.0},"ty.html#the-tcx-and-how-it-uses-lifetimes":{"tf":1.4142135623730952},"incrcomp-debugging.html#tracking-down-incorrect-edges":{"tf":1.0},"compiler-debugging.html#debugging-llvm":{"tf":2.23606797749979},"miri.html#miri":{"tf":1.4142135623730952},"how-to-build-and-run.html#create-a-configtoml":{"tf":2.0}},"df":6,"i":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"s":{"docs":{},"df":0,"=":{"docs":{},"df":0,"t":{"docs":{},"df":0,"r":{"docs":{},"df":0,"u":{"docs":{"compiler-debugging.html#debugging-llvm":{"tf":1.0}},"df":1}}},"y":{"docs":{"compiler-debugging.html#getting-logging-output":{"tf":1.4142135623730952}},"df":1}}}}}},"(":{"docs":{},"df":0,"!":{"docs":{},"df":0,"(":{"docs":{},"df":0,"_":{"docs":{},"df":0,"1":{"docs":{},"df":0,".":{"docs":{},"df":0,"1":{"docs":{"miri.html#miri":{"tf":1.0}},"df":1}}}}}}}}},"m":{"docs":{},"df":0,"b":{"docs":{},"df":0,"l":{"docs":{"traits/resolution.html#candidate-assembly":{"tf":2.23606797749979},"method-lookup.html#candidate-assembly":{"tf":1.4142135623730952},"traits/resolution.html#selection":{"tf":1.0}},"df":3}}}}}},"h":{"docs":{},"df":0,"e":{"docs":{},"df":0,"a":{"docs":{},"df":0,"d":{"docs":{"mir/index.html#key-mir-vocabulary":{"tf":1.0},"traits/canonicalization.html#executing-the-query":{"tf":1.0}},"df":2}}}},"b":{"docs":{},"df":0,"s":{"docs":{},"df":0,"o":{"docs":{},"df":0,"l":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{"hir.html#identifiers-in-the-hir":{"tf":1.7320508075688773}},"df":1}}}},"t":{"docs":{},"df":0,"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{"the-parser.html#the-parser":{"tf":1.0},"appendix/stupid-stats.html#overview-of-the-compilation-process":{"tf":1.4142135623730952},"traits/bibliography.html#bibliography":{"tf":1.0},"traits/canonical-queries.html#canonical-queries":{"tf":1.0},"appendix/code-index.html#appendix-d-code-index":{"tf":1.0},"high-level-overview.html#the-main-stages-of-compilation":{"tf":1.0},"hir.html#the-hir":{"tf":1.0},"appendix/glossary.html#appendix-c-glossary":{"tf":1.0},"name-resolution.html#scopes-and-ribs":{"tf":1.0},"macro-expansion.html#example":{"tf":1.0},"traits/lowering-to-logic.html#type-checking-generic-functions-beyond-horn-clauses":{"tf":1.0},"traits/chalk-overview.html#parsing":{"tf":1.0}},"df":12}}}}}},"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"t":{"docs":{"compiler-debugging.html#getting-a-backtrace-for-errors":{"tf":1.0},"traits/lowering-module.html#unit-tests":{"tf":1.0},"diag.html#suggestions":{"tf":1.4142135623730952}},"df":3}},"v":{"docs":{"variance.html#addendum-variance-on-traits":{"tf":1.0},"compiletest.html#adding-a-new-header-command":{"tf":1.0},"type-inference.html#subtyping-obligations":{"tf":1.0},"rustdoc.html#from-crate-to-clean":{"tf":1.0},"query.html#adding-a-new-kind-of-query":{"tf":1.0},"compiler-debugging.html#getting-a-backtrace-for-errors":{"tf":1.0},"tests/intro.html#compiletest-test-suites":{"tf":1.0},"incrcomp-debugging.html#testing-the-dependency-graph":{"tf":1.0},"traits/lowering-rules.html#associated-type-values":{"tf":1.0},"traits/chalk-overview.html#testing":{"tf":1.0},"query.html#how-the-compiler-executes-a-query":{"tf":1.4142135623730952},"mir/visitor.html#mir-visitor":{"tf":1.0},"traits/associated-types.html#associated-type-projection-and-normalization":{"tf":1.0},"how-to-build-and-run.html#creating-a-rustup-toolchain":{"tf":1.0},"traits/resolution.html#selection-during-translation":{"tf":1.0},"mir/regionck.html#back-to-our-example":{"tf":1.0},"traits/goals-and-clauses.html#coinductive-goals":{"tf":1.0},"traits/lowering-rules.html#trait-header":{"tf":1.0},"traits/goals-and-clauses.html#domain-goals":{"tf":1.0},"type-inference.html#enforcing-equality--subtyping":{"tf":1.0},"traits/lowering-to-logic.html#rust-traits-and-logic":{"tf":1.0},"appendix/stupid-stats.html#compilercontroller":{"tf":1.0},"diag.html#suggestions":{"tf":1.0},"traits/lowering-rules.html#lowering-where-clauses":{"tf":1.0},"rustdoc.html#cheat-sheet":{"tf":1.0},"macro-expansion.html#the-macro-parser":{"tf":1.4142135623730952}},"df":26}},"i":{"docs":{},"df":0,"l":{"docs":{"rustdoc.html#dotting-is-and-crossing-ts":{"tf":1.0},"rustdoc.html#the-walking-tour-of-rustdoc":{"tf":1.0},"rustc-driver.html#the-rustc-driver":{"tf":1.0}},"df":3}},"b":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"v":{"docs":{"appendix/glossary.html#appendix-c-glossary":{"tf":1.0}},"df":1,"i":{"docs":{"appendix/glossary.html#appendix-c-glossary":{"tf":1.0}},"df":1}}}}}},"u":{"docs":{},"df":0,"t":{"docs":{},"df":0,"o":{"docs":{"traits/goals-and-clauses.html#coinductive-goals":{"tf":2.0},"method-lookup.html#candidate-search":{"tf":1.4142135623730952}},"df":2,"m":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{"tests/intro.html#testing-on-emulators":{"tf":1.0},"type-inference.html#type-inference":{"tf":1.0},"tests/intro.html#testing-infrastructure":{"tf":1.0},"conventions.html#using-crates-from-cratesio":{"tf":1.0},"conventions.html#formatting-and-the-tidy-script":{"tf":1.4142135623730952},"tests/adding.html#editing-and-updating-the-reference-files":{"tf":1.0},"conventions.html#copyright-notice":{"tf":1.0},"diag.html#suggestions":{"tf":1.0}},"df":8}}},"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"f":{"docs":{"method-lookup.html#method-lookup":{"tf":1.0},"method-lookup.html#candidate-search":{"tf":1.0}},"df":2}}},"d":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"f":{"docs":{"method-lookup.html#method-lookup":{"tf":1.4142135623730952}},"df":1}}}}}},"h":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{"compiletest.html#introduction":{"tf":1.4142135623730952}},"df":1,"s":{"docs":{},"df":0,"h":{"docs":{},"df":0,"i":{"docs":{},"df":0,"p":{"docs":{"conventions.html#copyright-notice":{"tf":1.0}},"df":1}}}}}}}},"g":{"docs":{},"df":0,"m":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{"traits/lowering-to-logic.html#type-checking-generic-functions-beyond-horn-clauses":{"tf":1.0}},"df":1}}}}}},"n":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{},"df":0,"o":{"docs":{},"df":0,"g":{"docs":{"traits/chalk-overview.html#intermediate-representation-ir":{"tf":1.0},"appendix/background.html#what-is-a-free-region-or-a-free-variable-what-about-bound-region":{"tf":1.0},"macro-expansion.html#the-macro-parser":{"tf":1.0}},"df":3}},"y":{"docs":{},"df":0,"s":{"docs":{"mir/borrowck.html#major-phases-of-the-borrow-checker":{"tf":1.4142135623730952},"appendix/stupid-stats.html#compilercontroller":{"tf":1.0},"high-level-overview.html#the-main-stages-of-compilation":{"tf":1.7320508075688773},"rustc-driver.html#the-rustc-driver":{"tf":1.0}},"df":4,"i":{"docs":{"appendix/background.html#what-is-a-dataflow-analysis":{"tf":1.7320508075688773},"appendix/stupid-stats.html#what-next":{"tf":1.7320508075688773},"hir.html#the-hir":{"tf":1.0},"the-parser.html#the-parser":{"tf":1.0},"appendix/glossary.html#appendix-c-glossary":{"tf":1.4142135623730952},"appendix/stupid-stats.html#overview-of-the-compilation-process":{"tf":1.4142135623730952},"mir/borrowck.html#major-phases-of-the-borrow-checker":{"tf":1.0},"mir/regionck.html#mir-based-region-checking-nll":{"tf":1.4142135623730952},"rustc-driver.html#the-rustc-driver":{"tf":1.7320508075688773},"appendix/stupid-stats.html#compilercontroller":{"tf":1.7320508075688773}},"df":10}}}}},"s":{"docs":{},"df":0,"w":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"variance.html#trait-variance-and-vtable-resolution":{"tf":1.4142135623730952},"traits/canonical-queries.html#canonical-queries":{"tf":1.0},"traits/canonical-queries.html#the-traditional-interactive-prolog-query":{"tf":2.6457513110645909},"traits/canonicalization.html#canonicalization":{"tf":1.4142135623730952},"traits/hrtb.html#basic-matching-and-skolemization-leaks":{"tf":1.0},"traits/canonical-queries.html#examples":{"tf":1.0},"conventions.html#prefer-exhaustive-matches":{"tf":1.0},"traits/associated-types.html#projection-equality":{"tf":1.0},"traits/canonical-queries.html#a-trait-query-in-rustc":{"tf":2.23606797749979},"mir/regionck.html#what-is-a-universe":{"tf":1.0},"query.html#how-the-compiler-executes-a-query":{"tf":1.4142135623730952}},"df":11,"(":{"docs":{"traits/canonical-queries.html#a-trait-query-in-rustc":{"tf":1.0}},"df":1}}}}},"n":{"docs":{},"df":0,"o":{"docs":{},"df":0,"t":{"docs":{"type-checking.html#type-collection":{"tf":1.0},"tests/adding.html#error-annotations":{"tf":1.7320508075688773},"tests/adding.html#adding-new-tests":{"tf":1.0},"incrcomp-debugging.html#testing-the-dependency-graph":{"tf":2.0},"compiletest.html#header-commands":{"tf":1.0},"compiletest.html#introduction":{"tf":1.0},"variance.html#addendum-variance-on-traits":{"tf":1.0},"traits/lowering-module.html#unit-tests":{"tf":1.4142135623730952},"tests/adding.html#tests-that-do-not-result-in-compile-errors":{"tf":1.0},"type-inference.html#type-inference":{"tf":1.0}},"df":10},"y":{"docs":{"traits/caching.html#where-clauses-and-the-local-vs-global-cache":{"tf":1.0},"tests/intro.html#compiletest-test-suites":{"tf":1.0},"compiler-debugging.html#expensive-operations-in-logs":{"tf":1.0},"appendix/stupid-stats.html#appendix-a-a-tutorial-on-creating-a-drop-in-replacement-for-rustc":{"tf":1.0},"rustdoc.html#hot-potato":{"tf":1.0},"variance.html#addendum-variance-on-traits":{"tf":1.0}},"df":6}}},"y":{"docs":{},"df":0,"m":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{"method-lookup.html#steps":{"tf":1.0}},"df":1}}},"t":{"docs":{},"df":0,"h":{"docs":{"param_env.html#parameter-environment":{"tf":1.0},"traits/canonicalization.html#processing-the-canonicalized-query-result":{"tf":1.0},"appendix/stupid-stats.html#compilercalls":{"tf":1.4142135623730952},"miri.html#datastructures":{"tf":1.4142135623730952},"compiler-debugging.html#debugging-the-compiler":{"tf":1.0},"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.0},"mir/regionck.html#what-is-a-universe":{"tf":1.0},"compiler-debugging.html#getting-logging-output":{"tf":1.0},"miri.html#miri":{"tf":1.0},"mir/regionck.html#another-example":{"tf":1.0},"compiler-debugging.html#debugging-llvm":{"tf":1.4142135623730952},"name-resolution.html#scopes-and-ribs":{"tf":1.0},"ty.html#the-tcx-and-how-it-uses-lifetimes":{"tf":1.0},"compiler-debugging.html#expensive-operations-in-logs":{"tf":1.0},"rustdoc.html#from-crate-to-clean":{"tf":1.0},"mir/regionck.html#back-to-our-example":{"tf":1.0},"tests/intro.html#testing-on-emulators":{"tf":1.0},"traits/lowering-module.html#unit-tests":{"tf":1.0}},"df":18}},"w":{"docs":{},"df":0,"h":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"hir.html#identifiers-in-the-hir":{"tf":1.0}},"df":1}}},"a":{"docs":{},"df":0,"y":{"docs":{"traits/specialization.html#specialization":{"tf":1.0},"tests/running.html#running-tests":{"tf":1.0},"traits/lowering-to-logic.html#type-checking-generic-functions-beyond-horn-clauses":{"tf":1.0}},"df":3}}},"o":{"docs":{},"df":0,"n":{"docs":{"mir/passes.html#stealing":{"tf":1.0},"compiler-debugging.html#expensive-operations-in-logs":{"tf":1.0}},"df":2}},"h":{"docs":{},"df":0,"o":{"docs":{},"df":0,"w":{"docs":{"ty.html#the-tcx-and-how-it-uses-lifetimes":{"tf":1.0}},"df":1}}},"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{"traits/hrtb.html#basic-matching-and-skolemization-leaks":{"tf":2.23606797749979}},"df":1}}}},"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"y":{"docs":{},"df":0,"m":{"docs":{"diag.html#edition-gated-lints":{"tf":1.0}},"df":1,"o":{"docs":{},"df":0,"u":{"docs":{},"df":0,"s":{"docs":{},"df":0,"_":{"docs":{},"df":0,"p":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"m":{"docs":{},"df":0,"e":{"docs":{},"df":0,"t":{"docs":{"diag.html#edition-gated-lints":{"tf":1.4142135623730952}},"df":1}}}}}}}}}}}}}},"t":{"docs":{},"df":0,"h":{"docs":{"traits/canonical-queries.html#the-traditional-interactive-prolog-query":{"tf":1.7320508075688773},"traits/canonicalization.html#executing-the-query":{"tf":1.0},"name-resolution.html#scopes-and-ribs":{"tf":1.7320508075688773},"incremental-compilation.html#the-basic-algorithm":{"tf":1.0},"traits/associated-types.html#projection-equality":{"tf":1.0},"mir/regionck.html#extending-the-universal-regions-check":{"tf":1.0},"type-inference.html#snapshots":{"tf":1.0},"appendix/stupid-stats.html#appendix-a-a-tutorial-on-creating-a-drop-in-replacement-for-rustc":{"tf":1.0},"appendix/glossary.html#appendix-c-glossary":{"tf":1.4142135623730952},"mir/regionck.html#mir-based-region-checking-nll":{"tf":1.0},"tests/running.html#running-an-individual-test":{"tf":1.0},"variance.html#variance-and-object-types":{"tf":1.4142135623730952},"traits/lowering-to-logic.html#rust-traits-and-logic":{"tf":1.0},"mir/index.html#key-mir-vocabulary":{"tf":1.0},"compiler-debugging.html#expensive-operations-in-logs":{"tf":1.0},"macro-expansion.html#the-macro-parser":{"tf":1.0},"mir/regionck.html#another-example":{"tf":1.4142135623730952},"method-lookup.html#candidate-assembly":{"tf":1.0},"miri.html#allocations":{"tf":1.0},"variance.html#variance-and-associated-types":{"tf":1.0},"rustdoc.html#from-crate-to-clean":{"tf":1.0},"traits/hrtb.html#higher-ranked-trait-obligations":{"tf":1.0},"mir/regionck.html#what-is-a-universe":{"tf":1.0},"traits/hrtb.html#basic-matching-and-skolemization-leaks":{"tf":1.0},"traits/resolution.html#candidate-assembly":{"tf":1.0},"variance.html#trait-variance-and-vtable-resolution":{"tf":1.0},"param_env.html#parameter-environment":{"tf":1.0},"miri.html#interpretation":{"tf":1.0},"miri.html#miri":{"tf":1.0},"traits/specialization.html#specialization":{"tf":1.0},"traits/goals-and-clauses.html#goals-and-clauses-meta-structure":{"tf":1.0}},"df":31}}},"d":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"appendix/background.html#what-is-a-dataflow-analysis":{"tf":1.0}},"df":1}},"/":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{"param_env.html#parameter-environment":{"tf":1.0},"tests/intro.html#compiletest-test-suites":{"tf":1.0},"compiletest.html#introduction":{"tf":1.0}},"df":3}}},"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"i":{"docs":{},"df":0,"d":{"docs":{"tests/intro.html#testing-on-emulators":{"tf":1.4142135623730952},"tests/adding.html#ignoring-tests":{"tf":1.0}},"df":2}}}}}},"g":{"docs":{},"df":0,"a":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{"appendix/stupid-stats.html#overview-of-the-compilation-process":{"tf":1.0},"tests/adding.html#other-header-commands":{"tf":1.0},"traits/canonicalization.html#canonicalizing-the-query-result":{"tf":1.0},"query.html#cycles-between-queries":{"tf":1.0},"mir/regionck.html#what-is-a-universe":{"tf":1.0},"appendix/stupid-stats.html#compilercontroller":{"tf":1.0},"traits/canonical-queries.html#examples":{"tf":1.0},"type-inference.html#creating-an-inference-context":{"tf":1.0},"traits/goals-and-clauses.html#coinductive-goals":{"tf":1.0},"type-inference.html#subtyping-obligations":{"tf":1.0},"how-to-build-and-run.html#running-xpy-and-building-a-stage1-compiler":{"tf":1.4142135623730952},"traits/canonical-queries.html#the-traditional-interactive-prolog-query":{"tf":1.0}},"df":12,"s":{"docs":{},"df":0,"t":{"docs":{"incrcomp-debugging.html#testing-the-dependency-graph":{"tf":1.0},"traits/chalk-overview.html#an-overview-of-chalk":{"tf":1.0},"tests/adding.html#guide-to-the-ui-tests":{"tf":1.0},"traits/hrtb.html#basic-matching-and-skolemization-leaks":{"tf":1.0},"incrcomp-debugging.html#tracking-down-incorrect-edges":{"tf":1.0},"macro-expansion.html#the-macro-parser":{"tf":1.7320508075688773},"method-lookup.html#candidate-search":{"tf":1.0},"traits/resolution.html#candidate-assembly":{"tf":1.4142135623730952}},"df":8}}}}},"o":{"docs":{"mir/regionck.html#another-example":{"tf":1.0}},"df":1}}},"6":{"docs":{},"df":0,"7":{"docs":{"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.0}},"df":1},"4":{"docs":{"tests/intro.html#testing-infrastructure":{"tf":1.0},"tests/adding.html#normalization":{"tf":1.7320508075688773}},"df":2,"b":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{"tests/adding.html#ignoring-tests":{"tf":1.0},"tests/adding.html#normalization":{"tf":1.4142135623730952}},"df":2}}}}},"7":{"docs":{"compiler-debugging.html#getting-a-backtrace":{"tf":1.0},"compiler-debugging.html#getting-a-backtrace-for-errors":{"tf":1.0}},"df":2,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"p":{"docs":{},"df":0,"l":{"docs":{},"df":0,"a":{"docs":{},"df":0,"c":{"docs":{},"df":0,"e":{"docs":{},"df":0,"1":{"docs":{},"df":0,"7":{"docs":{},"df":0,"h":{"docs":{},"df":0,"b":{"docs":{},"df":0,"e":{"docs":{},"df":0,"1":{"docs":{},"df":0,"0":{"docs":{},"df":0,"e":{"docs":{},"df":0,"a":{"docs":{},"df":0,"2":{"docs":{},"df":0,"e":{"docs":{},"df":0,"7":{"docs":{},"df":0,"c":{"docs":{},"df":0,"8":{"docs":{},"df":0,"0":{"docs":{},"df":0,"9":{"docs":{},"df":0,"b":{"docs":{},"df":0,"0":{"docs":{},"df":0,"b":{"docs":{"compiler-debugging.html#debugging-llvm":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}}}}}}}}}},"w":{"docs":{},"df":0,"c":{"docs":{"traits/lowering-rules.html#lowering-traits":{"tf":1.0},"traits/lowering-rules.html#lowering-impls":{"tf":1.4142135623730952},"traits/lowering-rules.html#lowering-where-clauses":{"tf":1.4142135623730952},"traits/lowering-rules.html#trait-header":{"tf":1.0},"mir/passes.html#seeing-how-the-mir-changes-as-the-compiler-executes":{"tf":1.0},"traits/lowering-rules.html#associated-type-declarations":{"tf":1.4142135623730952}},"df":6,"1":{"docs":{"traits/lowering-rules.html#associated-type-values":{"tf":1.7320508075688773},"traits/lowering-rules.html#associated-type-declarations":{"tf":1.7320508075688773}},"df":2},"_":{"docs":{},"df":0,"i":{"docs":{},"df":0,"m":{"docs":{},"df":0,"p":{"docs":{},"df":0,"l":{"docs":{"traits/lowering-rules.html#associated-type-values":{"tf":1.7320508075688773}},"df":1}}}}}},"a":{"docs":{},"df":0,"l":{"docs":{},"df":0,"k":{"docs":{"traits/hrtb.html#higher-ranked-trait-obligations":{"tf":1.0},"traits/canonicalization.html#canonicalization":{"tf":1.0},"rustdoc.html#other-tricks-up-its-sleeve":{"tf":1.0},"rustdoc.html#the-walking-tour-of-rustdoc":{"tf":1.4142135623730952},"mir/regionck.html#back-to-our-example":{"tf":1.0},"mir/visitor.html#mir-visitor":{"tf":1.0},"incremental-compilation.html#the-query-dag":{"tf":1.0},"mir/regionck.html#skolemization-and-outlives-constraints":{"tf":1.4142135623730952},"mir/visitor.html#traversal":{"tf":1.0},"mir/passes.html#implementing-and-registering-a-pass":{"tf":1.4142135623730952},"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":3.1622776601683797},"the-parser.html#the-parser":{"tf":1.0},"diag.html#declaring-a-lint":{"tf":1.0},"traits/canonicalization.html#processing-the-canonicalized-query-result":{"tf":1.0},"traits/hrtb.html#higher-ranked-trait-bounds":{"tf":1.0}},"df":15,"t":{"docs":{},"df":0,"h":{"docs":{},"df":0,"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"u":{"docs":{},"df":0,"g":{"docs":{},"df":0,"h":{"docs":{"walkthrough.html#walkthrough-a-typical-contribution":{"tf":1.4142135623730952}},"df":1}}}}}}}}},"s":{"docs":{},"df":0,"t":{"docs":{"ty.html#the-tcx-and-how-it-uses-lifetimes":{"tf":1.0},"incremental-compilation.html#improvements-to-the-basic-algorithm":{"tf":1.0}},"df":2},"m":{"docs":{"tests/intro.html#testing-on-emulators":{"tf":1.0}},"df":1,"3":{"docs":{},"df":0,"2":{"docs":{"tests/adding.html#ignoring-tests":{"tf":1.0}},"df":1}}}},"y":{"docs":{"incrcomp-debugging.html#testing-the-dependency-graph":{"tf":1.0},"type-checking.html#type-collection":{"tf":1.0},"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.0},"rustdoc.html#the-walking-tour-of-rustdoc":{"tf":1.0},"mir/regionck.html#extending-the-universal-regions-check":{"tf":1.0},"diag.html#declaring-a-lint":{"tf":1.0},"type-inference.html#enforcing-equality--subtyping":{"tf":1.0},"rustdoc.html#from-soup-to-nuts":{"tf":1.0},"appendix/stupid-stats.html#what-next":{"tf":1.0},"appendix/background.html#what-is-a-control-flow-graph":{"tf":1.0},"traits/implied-bounds.html#implied-bounds":{"tf":1.0},"tests/running.html#running-an-individual-test":{"tf":1.0},"compiler-debugging.html#getting-a-backtrace":{"tf":1.0},"traits/canonicalization.html#processing-the-canonicalized-query-result":{"tf":1.0},"traits/lowering-to-logic.html#rust-traits-and-logic":{"tf":1.0},"variance.html#trait-variance-and-vtable-resolution":{"tf":1.0},"traits/chalk-overview.html#intermediate-representation-ir":{"tf":1.0},"mir/regionck.html#what-is-a-universe":{"tf":1.4142135623730952},"mir/index.html#mir-data-types":{"tf":1.0},"incrcomp-debugging.html#dumping-the-graph":{"tf":1.0},"type-inference.html#type-inference":{"tf":1.0},"tests/adding.html#what-kind-of-test-should-i-add":{"tf":1.0},"type-inference.html#extracting-region-constraints":{"tf":1.4142135623730952},"traits/hrtb.html#basic-matching-and-skolemization-leaks":{"tf":1.0},"mir/passes.html#implementing-and-registering-a-pass":{"tf":1.4142135623730952},"query.html#cycles-between-queries":{"tf":1.0},"ty.html#allocating-and-working-with-types":{"tf":1.0},"appendix/glossary.html#appendix-c-glossary":{"tf":1.0},"traits/index.html#trait-solving-new-style":{"tf":1.0},"method-lookup.html#method-lookup":{"tf":1.4142135623730952},"type-inference.html#inference-variables":{"tf":1.0},"traits/associated-types.html#projection-equality":{"tf":1.0},"appendix/stupid-stats.html#the-driver-customisation-apis":{"tf":1.0},"rustc-driver.html#a-note-on-lifetimes":{"tf":1.0},"appendix/stupid-stats.html#appendix-a-a-tutorial-on-creating-a-drop-in-replacement-for-rustc":{"tf":1.7320508075688773},"hir.html#out-of-band-storage-and-the--crate--type":{"tf":1.4142135623730952},"mir/regionck.html#universes-and-skolemized-region-elements":{"tf":1.0},"miri.html#interpretation":{"tf":1.0},"high-level-overview.html#the-main-stages-of-compilation":{"tf":1.4142135623730952},"mir/regionck.html#skolemization-and-outlives-constraints":{"tf":1.0},"conventions.html#use-todo-comments-for-things-you-dont-want-to-forget":{"tf":1.0},"traits/resolution.html#candidate-assembly":{"tf":1.0}},"df":42},"i":{"docs":{},"df":0,"t":{"docs":{"traits/canonical-queries.html#examples":{"tf":1.0}},"df":1}},"r":{"docs":{},"df":0,"n":{"docs":{"name-resolution.html#namespaces":{"tf":1.0},"diag.html#edition-gated-lints":{"tf":1.4142135623730952},"tests/adding.html#error-annotations":{"tf":1.0},"tests/running.html#running-a-subset-of-the-test-suites":{"tf":1.0},"diag.html#error-messages":{"tf":1.0},"diag.html#declaring-a-lint":{"tf":1.4142135623730952},"tests/adding.html#what-kind-of-test-should-i-add":{"tf":1.0},"tests/adding.html#adding-new-tests":{"tf":1.0},"mir/index.html#key-mir-vocabulary":{"tf":1.0},"rustc-driver.html#the-rustc-driver":{"tf":1.0}},"df":10,"(":{"docs":{},"df":0,"n":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"d":{"docs":{},"df":0,"_":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"y":{"docs":{},"df":0,"l":{"docs":{"diag.html#lint-groups":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}},"n":{"docs":{},"df":0,"t":{"docs":{"mir/visitor.html#mir-visitor":{"tf":1.4142135623730952},"traits/associated-types.html#associated-type-projection-and-normalization":{"tf":1.0},"macro-expansion.html#the-macro-parser":{"tf":1.0},"traits/associated-types.html#skolemized-associated-types":{"tf":1.0},"compiler-debugging.html#debugging-llvm":{"tf":2.449489742783178},"traits/lowering-to-logic.html#rust-traits-and-logic":{"tf":1.0},"mir/passes.html#implementing-and-registering-a-pass":{"tf":1.0},"compiler-debugging.html#getting-a-backtrace-for-errors":{"tf":1.0},"ty.html#the-tcx-and-how-it-uses-lifetimes":{"tf":1.0},"incremental-compilation.html#footnotes":{"tf":1.0},"traits/lowering-to-logic.html#type-checking-normal-functions":{"tf":1.0},"conventions.html#prefer-exhaustive-matches":{"tf":1.0},"traits/resolution.html#selection-during-translation":{"tf":1.0},"how-to-build-and-run.html#how-to-build-the-compiler-and-run-what-you-built":{"tf":1.0},"traits/lowering-to-logic.html#type-checking-generic-functions-beyond-horn-clauses":{"tf":1.0},"mir/regionck.html#subtyping-and-skolemization":{"tf":1.0},"traits/canonicalization.html#processing-the-canonicalized-query-result":{"tf":1.0},"tests/intro.html#compiletest-test-suites":{"tf":1.0},"how-to-build-and-run.html#create-a-configtoml":{"tf":1.0},"tests/running.html#running-tests":{"tf":1.4142135623730952},"mir/index.html#key-mir-vocabulary":{"tf":1.0},"diag.html#edition-gated-lints":{"tf":1.0},"appendix/stupid-stats.html#appendix-a-a-tutorial-on-creating-a-drop-in-replacement-for-rustc":{"tf":1.7320508075688773},"traits/caching.html#caching-and-subtle-considerations-therewith":{"tf":1.0},"traits/lowering-rules.html#transforming-the-lowered-where-clauses":{"tf":1.0},"incrcomp-debugging.html#dumping-the-graph":{"tf":1.0},"compiler-debugging.html#getting-a-backtrace":{"tf":1.4142135623730952},"traits/goals-and-clauses.html#coinductive-goals":{"tf":1.0},"how-to-build-and-run.html#creating-a-rustup-toolchain":{"tf":1.0},"type-inference.html#inference-variables":{"tf":1.0},"compiler-debugging.html#getting-logging-output":{"tf":1.0},"query.html#adding-a-new-kind-of-query":{"tf":1.0},"variance.html#trait-variance-and-vtable-resolution":{"tf":1.4142135623730952},"ty.html#allocating-and-working-with-types":{"tf":1.0},"traits/resolution.html#candidate-assembly":{"tf":1.7320508075688773},"traits/canonical-queries.html#canonical-queries":{"tf":1.4142135623730952},"tests/running.html#running-a-subset-of-the-test-suites":{"tf":1.0},"tests/running.html#running-an-individual-test":{"tf":1.0},"conventions.html#use-todo-comments-for-things-you-dont-want-to-forget":{"tf":1.7320508075688773},"traits/hrtb.html#basic-matching-and-skolemization-leaks":{"tf":1.4142135623730952},"mir/passes.html#mir-passes":{"tf":1.0},"mir/passes.html#stealing":{"tf":1.0},"query.html#how-the-compiler-executes-a-query":{"tf":1.0},"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":2.6457513110645909},"mir/regionck.html#skolemization-and-outlives-constraints":{"tf":1.0},"traits/hrtb.html#higher-ranked-trait-obligations":{"tf":1.0}},"df":46,"_":{"docs":{},"df":0,"h":{"docs":{},"df":0,"r":{"docs":{},"df":0,"t":{"docs":{},"df":0,"b":{"docs":{"traits/hrtb.html#basic-matching-and-skolemization-leaks":{"tf":1.0}},"df":1,"<":{"docs":{},"df":0,"t":{"docs":{"traits/hrtb.html#basic-matching-and-skolemization-leaks":{"tf":1.0}},"df":1}}}}}}}}}},"e":{"docs":{},"df":0,"i":{"docs":{},"df":0,"r":{"docs":{},"df":0,"d":{"docs":{"compiler-debugging.html#debugging-llvm":{"tf":1.0},"diag.html#error-messages":{"tf":1.0},"traits/caching.html#where-clauses-and-the-local-vs-global-cache":{"tf":1.0}},"df":3}}},"n":{"docs":{},"df":0,"t":{"docs":{"type-inference.html#enforcing-equality--subtyping":{"tf":1.0}},"df":1}},"l":{"docs":{},"df":0,"l":{"docs":{"tests/adding.html#normalization":{"tf":1.0},"tests/intro.html#other-tests":{"tf":1.0},"traits/lowering-to-logic.html#type-checking-normal-functions":{"tf":1.4142135623730952},"about-this-guide.html#about-this-guide":{"tf":1.4142135623730952},"tests/running.html#running-tests":{"tf":1.0},"query.html#how-the-compiler-executes-a-query":{"tf":1.0},"high-level-overview.html#the-main-stages-of-compilation":{"tf":1.4142135623730952},"the-parser.html#the-parser":{"tf":1.0},"traits/lowering-rules.html#trait-header":{"tf":2.0},"method-lookup.html#candidate-assembly":{"tf":1.0},"tests/intro.html#the-compiler-testing-framework":{"tf":1.0},"traits/canonicalization.html#canonicalization":{"tf":1.0},"incremental-compilation.html#the-try-mark-green-algorithm":{"tf":1.0},"traits/associated-types.html#associated-type-projection-and-normalization":{"tf":1.0},"traits/wf.html#well-formedness-checking":{"tf":1.7320508075688773},"tests/running.html#running-a-subset-of-the-test-suites":{"tf":1.0},"mir/index.html#the-mir-mid-level-ir":{"tf":1.0},"appendix/glossary.html#appendix-c-glossary":{"tf":2.0},"variance.html#constraints":{"tf":1.4142135623730952},"query.html#adding-a-new-kind-of-query":{"tf":1.0},"type-checking.html#type-checking":{"tf":1.0},"traits/goals-and-clauses.html#domain-goals":{"tf":1.7320508075688773},"traits/lowering-rules.html#associated-type-declarations":{"tf":1.7320508075688773},"hir.html#out-of-band-storage-and-the--crate--type":{"tf":1.0},"traits/canonicalization.html#executing-the-query":{"tf":1.0},"appendix/background.html#what-is-a-free-region-or-a-free-variable-what-about-bound-region":{"tf":1.0},"traits/chalk-overview.html#well-formedness-checks":{"tf":1.7320508075688773},"traits/chalk-overview.html#intermediate-representation-ir":{"tf":1.0},"incremental-compilation.html#the-basic-algorithm":{"tf":1.0},"method-lookup.html#steps":{"tf":1.0},"rustdoc.html#from-crate-to-clean":{"tf":1.0}},"df":31,"f":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"m":{"docs":{"traits/lowering-rules.html#trait-header":{"tf":2.0},"traits/lowering-rules.html#associated-type-declarations":{"tf":1.0},"traits/goals-and-clauses.html#coinductive-goals":{"tf":1.0}},"df":3,"e":{"docs":{},"df":0,"d":{"docs":{},"df":0,"(":{"docs":{},"df":0,"p":{"docs":{},"df":0,"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"j":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{"traits/goals-and-clauses.html#domain-goals":{"tf":1.0},"traits/lowering-rules.html#transforming-the-lowered-where-clauses":{"tf":1.0}},"df":2}}}}}}},"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"l":{"docs":{},"df":0,"f":{"docs":{"traits/lowering-rules.html#trait-header":{"tf":1.0}},"df":1}}}},"v":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"<":{"docs":{},"df":0,"i":{"docs":{},"df":0,"3":{"docs":{},"df":0,"2":{"docs":{"traits/goals-and-clauses.html#domain-goals":{"tf":1.4142135623730952}},"df":1}}},"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"r":{"docs":{"traits/goals-and-clauses.html#domain-goals":{"tf":1.0}},"df":1}}}}}}},"w":{"docs":{},"df":0,"c":{"docs":{"traits/lowering-rules.html#trait-header":{"tf":1.0},"traits/lowering-rules.html#transforming-the-lowered-where-clauses":{"tf":1.0}},"df":2}},"i":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"m":{"docs":{"traits/goals-and-clauses.html#domain-goals":{"tf":1.0}},"df":1}}}},"(":{"docs":{},"df":0,"t":{"docs":{},"df":0,"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{},"df":0,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"a":{"docs":{},"df":0,"s":{"docs":{},"df":0,"s":{"docs":{},"df":0,"o":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{},"df":0,"y":{"docs":{},"df":0,"p":{"docs":{},"df":0,"e":{"docs":{},"df":0,")":{"docs":{},"df":0,"<":{"docs":{},"df":0,"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"l":{"docs":{},"df":0,"f":{"docs":{"traits/lowering-rules.html#associated-type-declarations":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{"traits/goals-and-clauses.html#domain-goals":{"tf":1.4142135623730952},"traits/lowering-rules.html#trait-header":{"tf":2.449489742783178}},"df":2,"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"f":{"docs":{"traits/goals-and-clauses.html#domain-goals":{"tf":1.0},"traits/lowering-rules.html#transforming-the-lowered-where-clauses":{"tf":1.0},"traits/lowering-rules.html#trait-header":{"tf":1.0}},"df":3}}}}}}},"y":{"docs":{},"df":0,"p":{"docs":{"traits/goals-and-clauses.html#domain-goals":{"tf":1.0}},"df":1}}}}}}}}}}}},"b":{"docs":{"rustdoc.html#cheat-sheet":{"tf":1.0}},"df":1},"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"'":{"docs":{},"df":0,"t":{"docs":{"diag.html#error-messages":{"tf":1.0}},"df":1}}}}},"'":{"docs":{},"df":0,"r":{"docs":{"mir/regionck.html#what-is-a-universe":{"tf":1.0},"traits/canonical-queries.html#examples":{"tf":1.0},"traits/lowering-to-logic.html#rust-traits-and-logic":{"tf":1.0},"rustdoc.html#hot-potato":{"tf":1.0},"traits/canonicalization.html#executing-the-query":{"tf":1.0},"appendix/background.html#what-is-a-free-region-or-a-free-variable-what-about-bound-region":{"tf":1.0},"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.7320508075688773},"traits/resolution.html#candidate-assembly":{"tf":1.0}},"df":8},"v":{"docs":{"traits/associated-types.html#associated-type-projection-and-normalization":{"tf":1.0},"traits/canonicalization.html#executing-the-query":{"tf":1.4142135623730952},"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.4142135623730952},"traits/lowering-to-logic.html#type-checking-normal-functions":{"tf":1.0},"mir/regionck.html#final-example":{"tf":1.0},"mir/regionck.html#subtyping-and-skolemization":{"tf":1.0}},"df":6},"l":{"docs":{},"df":0,"l":{"docs":{"mir/index.html#key-mir-vocabulary":{"tf":1.0},"traits/lowering-to-logic.html#type-checking-normal-functions":{"tf":1.0},"mir/regionck.html#what-is-a-universe":{"tf":1.0},"mir/regionck.html#skolemization-and-outlives-constraints":{"tf":1.0},"incremental-compilation.html#incremental-compilation":{"tf":1.0},"how-to-build-and-run.html#other-xpy-commands":{"tf":1.0},"traits/canonical-queries.html#examples":{"tf":1.0},"traits/canonical-queries.html#a-trait-query-in-rustc":{"tf":1.7320508075688773},"query.html#adding-a-new-kind-of-query":{"tf":1.0},"traits/lowering-to-logic.html#rust-traits-and-logic":{"tf":1.0},"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.0},"mir/regionck.html#final-example":{"tf":1.0},"method-lookup.html#candidate-assembly":{"tf":1.0},"traits/canonicalization.html#canonicalizing-the-query":{"tf":1.0},"traits/goals-and-clauses.html#domain-goals":{"tf":1.0}},"df":15}},"d":{"docs":{"traits/hrtb.html#higher-ranked-trait-obligations":{"tf":1.0}},"df":1}}},"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"'":{"docs":{},"df":0,"t":{"docs":{"appendix/stupid-stats.html#overview-of-the-compilation-process":{"tf":1.0},"tests/adding.html#ignoring-tests":{"tf":1.0},"compiler-debugging.html#logging-etiquette":{"tf":1.0},"query.html#queries-demand-driven-compilation":{"tf":1.0},"compiler-debugging.html#debugging-llvm":{"tf":1.0},"mir/regionck.html#mir-based-region-checking-nll":{"tf":1.0}},"df":6}},"d":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"variance.html#the-algorithm":{"tf":1.0},"variance.html#constraints":{"tf":1.0},"query.html#how-the-compiler-executes-a-query":{"tf":1.0}},"df":3}}}},"u":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{"mir/regionck.html#extending-the-universal-regions-check":{"tf":1.0}},"df":1}}},"r":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{"macro-expansion.html#example":{"tf":1.0},"compiler-debugging.html#logging-etiquette":{"tf":1.0}},"df":2}},"l":{"docs":{},"df":0,"d":{"docs":{"mir/passes.html#seeing-how-the-mir-changes-as-the-compiler-executes":{"tf":1.0}},"df":1}},"d":{"docs":{"traits/resolution.html#candidate-assembly":{"tf":1.0},"tests/adding.html#ignoring-tests":{"tf":1.0},"macro-expansion.html#the-macro-parser":{"tf":1.0},"appendix/glossary.html#appendix-c-glossary":{"tf":1.0},"traits/canonicalization.html#canonicalization":{"tf":1.0},"name-resolution.html#namespaces":{"tf":1.0},"traits/canonical-queries.html#canonical-queries":{"tf":1.0},"traits/associated-types.html#integration-with-unification":{"tf":1.0}},"df":8},"t":{"docs":{},"df":0,"h":{"docs":{"how-to-build-and-run.html#create-a-configtoml":{"tf":1.0},"conventions.html#how-to-structure-your-pr":{"tf":1.0},"conventions.html#coding-for-correctness":{"tf":1.0},"type-inference.html#subtyping-obligations":{"tf":1.0}},"df":4}},"k":{"docs":{"type-inference.html#type-inference":{"tf":1.0},"mir/index.html#key-mir-vocabulary":{"tf":1.0},"traits/lowering-to-logic.html#lowering-to-logic":{"tf":1.0},"query.html#queries-demand-driven-compilation":{"tf":1.0},"tests/adding.html#ignoring-tests":{"tf":1.0},"ty.html#allocating-and-working-with-types":{"tf":1.4142135623730952},"traits/lowering-to-logic.html#type-checking-generic-functions-beyond-horn-clauses":{"tf":1.4142135623730952},"mir/passes.html#mir-passes":{"tf":1.0},"mir/borrowck.html#mir-borrow-check":{"tf":1.0},"traits/hrtb.html#basic-matching-and-skolemization-leaks":{"tf":1.0},"const-eval.html#constant-evaluation":{"tf":1.0},"incremental-compilation.html#the-try-mark-green-algorithm":{"tf":1.0},"mir/regionck.html#skolemization-and-universes":{"tf":1.0},"traits/canonical-queries.html#examples":{"tf":1.0},"rustdoc.html#cheat-sheet":{"tf":1.0},"tests/running.html#running-a-subset-of-the-test-suites":{"tf":2.0},"how-to-build-and-run.html#create-a-configtoml":{"tf":1.0},"about-this-guide.html#about-this-guide":{"tf":1.0},"appendix/stupid-stats.html#appendix-a-a-tutorial-on-creating-a-drop-in-replacement-for-rustc":{"tf":1.0},"compiler-debugging.html#getting-logging-output":{"tf":1.0},"variance.html#dependency-graph-management":{"tf":1.0},"hir.html#the-hir-map":{"tf":1.0},"traits/resolution.html#trait-resolution-old-style":{"tf":1.0},"tests/adding.html#revisions":{"tf":1.0},"macro-expansion.html#macro-expansion":{"tf":1.0},"traits/index.html#trait-solving-new-style":{"tf":1.4142135623730952},"tests/running.html#running-an-individual-test":{"tf":1.0},"traits/associated-types.html#skolemized-associated-types":{"tf":1.4142135623730952},"traits/canonicalization.html#canonicalizing-the-query":{"tf":1.0},"traits/associated-types.html#integration-with-unification":{"tf":1.0},"traits/resolution.html#candidate-assembly":{"tf":1.0},"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.0},"how-to-build-and-run.html#other-xpy-commands":{"tf":1.0},"traits/chalk-overview.html#an-overview-of-chalk":{"tf":1.0},"param_env.html#parameter-environment":{"tf":1.0},"traits/chalk-overview.html#rules":{"tf":1.0},"traits/hrtb.html#higher-ranked-trait-obligations":{"tf":1.0},"high-level-overview.html#the-main-stages-of-compilation":{"tf":1.4142135623730952},"query.html#how-the-compiler-executes-a-query":{"tf":1.4142135623730952},"tests/adding.html#guide-to-the-ui-tests":{"tf":1.0},"type-inference.html#inference-variables":{"tf":1.7320508075688773},"rustdoc.html#the-walking-tour-of-rustdoc":{"tf":1.0},"the-parser.html#the-parser":{"tf":1.0},"traits/resolution.html#selection":{"tf":1.0},"traits/lowering-to-logic.html#rust-traits-and-logic":{"tf":1.0},"traits/canonicalization.html#canonicalizing-the-query-result":{"tf":1.0},"traits/hrtb.html#higher-ranked-trait-bounds":{"tf":1.0},"mir/regionck.html#subtyping-and-skolemization":{"tf":1.0},"name-resolution.html#overall-strategy":{"tf":1.0},"compiler-debugging.html#getting-a-backtrace":{"tf":1.0},"traits/canonical-queries.html#a-trait-query-in-rustc":{"tf":1.0},"traits/caching.html#an-example":{"tf":1.0}},"df":52,"l":{"docs":{},"df":0,"o":{"docs":{},"df":0,"a":{"docs":{},"df":0,"d":{"docs":{"const-eval.html#constant-evaluation":{"tf":1.0}},"df":1}}},"i":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{"traits/resolution.html#overview":{"tf":1.4142135623730952}},"df":1}}}},"f":{"docs":{},"df":0,"l":{"docs":{},"df":0,"o":{"docs":{},"df":0,"w":{"docs":{"tests/intro.html#testing-with-docker-images":{"tf":1.0}},"df":1}}}}}}},"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"p":{"docs":{"rustdoc.html#from-clean-to-crate":{"tf":1.0}},"df":1,"p":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"rustdoc.html#from-crate-to-clean":{"tf":1.0},"appendix/glossary.html#appendix-c-glossary":{"tf":1.0}},"df":2}}}}},"i":{"docs":{},"df":0,"t":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{"variance.html#variance-of-type-and-lifetime-parameters":{"tf":1.0},"traits/lowering-rules.html#function-and-constant-values":{"tf":1.0},"traits/lowering-to-logic.html#rust-traits-and-logic":{"tf":1.0},"mir/index.html#key-mir-vocabulary":{"tf":1.0},"rustdoc.html#from-clean-to-crate":{"tf":1.0},"traits/regions.html#region-constraints":{"tf":1.0},"traits/wf.html#well-formedness-checking":{"tf":1.0},"mir/regionck.html#universal-regions":{"tf":1.0},"mir/regionck.html#causal-tracking":{"tf":1.0},"mir/regionck.html#region-variables-and-constraints":{"tf":1.0},"how-to-build-and-run.html#running-xpy-and-building-a-stage1-compiler":{"tf":1.0},"mir/regionck.html#subtyping-and-skolemization":{"tf":1.0},"rustdoc.html#other-tricks-up-its-sleeve":{"tf":1.4142135623730952},"mir/index.html#promoted-constants":{"tf":1.0},"appendix/background.html#what-is-universally-quantified-what-about-existentially-quantified":{"tf":1.0},"traits/canonical-queries.html#examples":{"tf":1.0},"rustdoc.html#from-crate-to-clean":{"tf":1.0},"mir/regionck.html#closures":{"tf":1.0},"mir/index.html#representing-constants":{"tf":1.0},"traits/implied-bounds.html#implied-bounds":{"tf":1.0},"traits/associated-types.html#skolemized-associated-types":{"tf":1.4142135623730952},"traits/goals-and-clauses.html#incomplete-chapter":{"tf":1.0},"appendix/background.html#what-is-a-dataflow-analysis":{"tf":1.0}},"df":23}}},"e":{"docs":{"incrcomp-debugging.html#testing-the-dependency-graph":{"tf":1.0},"compiletest.html#implementing-the-behavior-change":{"tf":1.0},"traits/lowering-to-logic.html#type-checking-normal-functions":{"tf":1.0},"miri.html#interpretation":{"tf":1.0},"rustdoc.html#hot-potato":{"tf":1.4142135623730952},"mir/passes.html#implementing-and-registering-a-pass":{"tf":1.0},"tests/intro.html#compiletest-test-suites":{"tf":1.4142135623730952},"conventions.html#use-todo-comments-for-things-you-dont-want-to-forget":{"tf":1.0},"appendix/stupid-stats.html#overview-of-the-compilation-process":{"tf":1.4142135623730952},"mir/borrowck.html#mir-borrow-check":{"tf":1.0},"tests/adding.html#naming-your-test":{"tf":1.0},"tests/adding.html#revisions":{"tf":1.0},"compiletest.html#adding-a-new-header-command":{"tf":1.4142135623730952},"mir/borrowck.html#major-phases-of-the-borrow-checker":{"tf":1.0},"mir/visitor.html#mir-visitor":{"tf":1.0},"tests/adding.html#normalization":{"tf":1.0},"traits/canonicalization.html#canonicalizing-the-query":{"tf":1.0},"ty.html#the-tcx-and-how-it-uses-lifetimes":{"tf":1.0},"traits/lowering-module.html#unit-tests":{"tf":1.0},"incrcomp-debugging.html#dumping-the-graph":{"tf":1.0},"type-inference.html#inference-variables":{"tf":1.0},"rustdoc.html#from-clean-to-crate":{"tf":1.4142135623730952}},"df":22,"u":{"docs":{},"df":0,"p":{"docs":{"rustdoc.html#dotting-is-and-crossing-ts":{"tf":1.0}},"df":1}}}}},"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"g":{"docs":{"conventions.html#use-todo-comments-for-things-you-dont-want-to-forget":{"tf":1.0},"query.html#cycles-between-queries":{"tf":1.0},"traits/implied-bounds.html#implied-bounds":{"tf":1.0},"compiletest.html#implementing-the-behavior-change":{"tf":1.0},"type-inference.html#enforcing-equality--subtyping":{"tf":1.0},"appendix/glossary.html#appendix-c-glossary":{"tf":1.0},"tests/adding.html#comment-explaining-what-the-test-is-about":{"tf":1.0}},"df":7}},"t":{"docs":{},"df":0,"e":{"docs":{"high-level-overview.html#the-main-stages-of-compilation":{"tf":1.0},"type-checking.html#type-collection":{"tf":1.0}},"df":2}}}},"h":{"docs":{},"df":0,"o":{"docs":{},"df":0,"s":{"docs":{},"df":0,"e":{"docs":{"variance.html#variance-and-object-types":{"tf":1.0},"mir/passes.html#seeing-how-the-mir-changes-as-the-compiler-executes":{"tf":1.0},"type-inference.html#inference-variables":{"tf":1.0},"param_env.html#parameter-environment":{"tf":1.0}},"df":4}},"l":{"docs":{},"df":0,"e":{"docs":{"variance.html#dependency-graph-management":{"tf":1.0},"tests/running.html#running-tests":{"tf":1.0},"hir.html#out-of-band-storage-and-the--crate--type":{"tf":1.0},"tests/adding.html#revisions":{"tf":1.0},"traits/canonicalization.html#canonicalizing-the-query-result":{"tf":1.0},"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.0},"name-resolution.html#overall-strategy":{"tf":1.0}},"df":7}}},"a":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"v":{"docs":{"mir/visitor.html#mir-visitor":{"tf":1.0},"variance.html#variance-and-object-types":{"tf":1.0},"traits/canonicalization.html#canonicalizing-the-query-result":{"tf":1.0},"variance.html#trait-variance-and-vtable-resolution":{"tf":1.0},"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.0}},"df":5}},"'":{"docs":{"conventions.html#prefer-exhaustive-matches":{"tf":1.0}},"df":1}}},"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"a":{"docs":{"hir.html#out-of-band-storage-and-the--crate--type":{"tf":1.0}},"df":1}}},"n":{"docs":{},"df":0,"e":{"docs":{},"df":0,"v":{"docs":{"mir/visitor.html#mir-visitor":{"tf":1.0},"traits/associated-types.html#integration-with-unification":{"tf":1.0},"rustdoc.html#from-clean-to-crate":{"tf":1.0},"diag.html#span":{"tf":1.0},"tests/adding.html#normalization":{"tf":1.0},"compiler-debugging.html#expensive-operations-in-logs":{"tf":1.0},"appendix/background.html#what-is-a-control-flow-graph":{"tf":1.0},"traits/caching.html#where-clauses-and-the-local-vs-global-cache":{"tf":1.0},"macro-expansion.html#example":{"tf":1.4142135623730952}},"df":9}}},"t":{"docs":{},"df":0,"h":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"traits/index.html#trait-solving-new-style":{"tf":1.0},"diag.html#suggestions":{"tf":1.0},"traits/specialization.html#specialization":{"tf":1.0},"variance.html#variance-of-type-and-lifetime-parameters":{"tf":1.0},"mir/index.html#key-mir-vocabulary":{"tf":1.0},"traits/resolution.html#candidate-assembly":{"tf":2.0},"incremental-compilation.html#the-basic-algorithm":{"tf":1.0},"param_env.html#parameter-environment":{"tf":1.0},"method-lookup.html#candidate-assembly":{"tf":1.0},"method-lookup.html#candidate-search":{"tf":1.0},"appendix/stupid-stats.html#appendix-a-a-tutorial-on-creating-a-drop-in-replacement-for-rustc":{"tf":1.0},"mir/regionck.html#what-is-a-universe":{"tf":1.0},"traits/resolution.html#selection":{"tf":1.7320508075688773},"traits/canonical-queries.html#examples":{"tf":1.0},"appendix/stupid-stats.html#compilercalls":{"tf":1.0},"high-level-overview.html#the-main-stages-of-compilation":{"tf":1.0},"appendix/stupid-stats.html#compilercontroller":{"tf":1.7320508075688773},"rustdoc.html#from-crate-to-clean":{"tf":1.0},"compiler-debugging.html#debugging-llvm":{"tf":1.4142135623730952},"incrcomp-debugging.html#testing-the-dependency-graph":{"tf":1.7320508075688773},"variance.html#constraints":{"tf":1.0},"traits/canonical-queries.html#canonical-queries":{"tf":1.0},"variance.html#trait-variance-and-vtable-resolution":{"tf":1.4142135623730952},"traits/resolution.html#major-concepts":{"tf":1.0},"compiletest.html#header-commands":{"tf":1.0}},"df":25}}}}},"i":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"p":{"docs":{},"df":0,"a":{"docs":{},"df":0,"c":{"docs":{"rustdoc.html#hot-potato":{"tf":1.4142135623730952},"compiletest.html#adding-a-new-header-command":{"tf":1.0}},"df":2}}}}}},"l":{"docs":{},"df":0,"e":{"docs":{},"df":0,"t":{"docs":{},"df":0,"r":{"docs":{},"df":0,"u":{"docs":{"diag.html#declaring-a-lint":{"tf":1.7320508075688773}},"df":1}}},"_":{"docs":{},"df":0,"t":{"docs":{},"df":0,"r":{"docs":{},"df":0,"u":{"docs":{"diag.html#declaring-a-lint":{"tf":1.4142135623730952}},"df":1}}}}}}}},"f":{"docs":{"traits/wf.html#well-formedness-checking":{"tf":1.4142135623730952}},"df":1},"i":{"docs":{},"df":0,"n":{"docs":{"incremental-compilation.html#improvements-to-the-basic-algorithm":{"tf":1.0}},"df":1,"d":{"docs":{"traits/goals-and-clauses.html#coinductive-goals":{"tf":1.4142135623730952},"variance.html#dependency-graph-management":{"tf":1.0},"query.html#how-the-compiler-executes-a-query":{"tf":1.0},"traits/hrtb.html#higher-ranked-trait-obligations":{"tf":1.0},"incremental-compilation.html#the-try-mark-green-algorithm":{"tf":1.0},"traits/canonical-queries.html#examples":{"tf":1.4142135623730952},"high-level-overview.html#crate-structure":{"tf":1.0},"mir/regionck.html#final-example":{"tf":1.0},"mir/regionck.html#subtyping-and-skolemization":{"tf":1.0},"traits/canonicalization.html#executing-the-query":{"tf":1.4142135623730952},"traits/canonicalization.html#canonicalizing-the-query-result":{"tf":1.4142135623730952},"tests/running.html#running-an-individual-test":{"tf":1.0},"query.html#queries-demand-driven-compilation":{"tf":1.0}},"df":13,"o":{"docs":{},"df":0,"w":{"docs":{"tests/adding.html#normalization":{"tf":1.4142135623730952},"compiler-debugging.html#getting-a-backtrace":{"tf":1.0},"tests/adding.html#ignoring-tests":{"tf":1.0}},"df":3}}},"n":{"docs":{},"df":0,"o":{"docs":{},"df":0,"w":{"docs":{"traits/resolution.html#candidate-assembly":{"tf":2.0}},"df":1}}}},"d":{"docs":{},"df":0,"g":{"docs":{},"df":0,"e":{"docs":{},"df":0,"t":{"docs":{"tests/adding.html#naming-your-test":{"tf":1.7320508075688773}},"df":1}}},"t":{"docs":{},"df":0,"h":{"docs":{"tests/adding.html#ignoring-tests":{"tf":1.0}},"df":1}},"e":{"docs":{"tests/intro.html#the-compiler-testing-framework":{"tf":1.0},"tests/intro.html#testing-infrastructure":{"tf":1.0},"appendix/glossary.html#appendix-c-glossary":{"tf":1.4142135623730952}},"df":3}},"s":{"docs":{},"df":0,"h":{"docs":{"traits/resolution.html#major-concepts":{"tf":1.0},"ty.html#the-tcx-and-how-it-uses-lifetimes":{"tf":1.0},"traits/canonicalization.html#canonicalization":{"tf":1.0},"query.html#adding-a-new-kind-of-query":{"tf":1.0},"traits/hrtb.html#basic-matching-and-skolemization-leaks":{"tf":1.0},"traits/resolution.html#selection-during-translation":{"tf":1.0}},"df":6}},"t":{"docs":{},"df":0,"h":{"docs":{},"df":0,"o":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{"appendix/stupid-stats.html#appendix-a-a-tutorial-on-creating-a-drop-in-replacement-for-rustc":{"tf":1.0},"mir/index.html#key-mir-vocabulary":{"tf":1.0},"query.html#adding-a-new-kind-of-query":{"tf":1.0},"miri.html#miri":{"tf":1.0},"macro-expansion.html#example":{"tf":1.0},"tests/adding.html#other-header-commands":{"tf":1.0},"hir.html#out-of-band-storage-and-the--crate--type":{"tf":1.0},"compiler-debugging.html#debugging-llvm":{"tf":1.0},"param_env.html#parameter-environment":{"tf":1.0},"type-inference.html#trying-equality":{"tf":1.0},"incremental-compilation.html#the-try-mark-green-algorithm":{"tf":1.0},"tests/running.html#running-an-individual-test":{"tf":1.0},"traits/associated-types.html#skolemized-associated-types":{"tf":1.0}},"df":13}}},"i":{"docs":{},"df":0,"n":{"docs":{"rustdoc.html#from-soup-to-nuts":{"tf":1.0},"rustdoc.html#the-walking-tour-of-rustdoc":{"tf":1.0},"compiletest.html#introduction":{"tf":1.0},"variance.html#variance-of-type-and-lifetime-parameters":{"tf":1.0},"tests/intro.html#other-tests":{"tf":1.7320508075688773},"tests/adding.html#revisions":{"tf":1.0},"traits/canonical-queries.html#a-trait-query-in-rustc":{"tf":1.0},"rustdoc.html#from-crate-to-clean":{"tf":1.0},"appendix/glossary.html#appendix-c-glossary":{"tf":1.7320508075688773},"tests/intro.html#testing-on-emulators":{"tf":2.0},"param_env.html#parameter-environment":{"tf":1.0},"tests/intro.html#testing-with-docker-images":{"tf":1.0},"tests/intro.html#compiletest-test-suites":{"tf":1.0},"type-inference.html#creating-an-inference-context":{"tf":1.0},"mir/regionck.html#what-is-a-universe":{"tf":1.0},"mir/visitor.html#mir-visitor":{"tf":1.0},"traits/lowering-rules.html#notation":{"tf":1.0},"appendix/background.html#what-is-a-free-region-or-a-free-variable-what-about-bound-region":{"tf":1.0},"mir/regionck.html#mir-based-region-checking-nll":{"tf":1.0},"type-inference.html#extracting-region-constraints":{"tf":1.0},"mir/passes.html#seeing-how-the-mir-changes-as-the-compiler-executes":{"tf":1.4142135623730952},"hir.html#identifiers-in-the-hir":{"tf":1.4142135623730952},"compiler-debugging.html#expensive-operations-in-logs":{"tf":1.0},"traits/canonicalization.html#canonicalizing-the-query":{"tf":1.0},"const-eval.html#constant-evaluation":{"tf":1.0},"method-lookup.html#candidate-assembly":{"tf":1.0},"rustdoc.html#from-clean-to-crate":{"tf":1.0}},"df":27}}}},"l":{"docs":{},"df":0,"d":{"docs":{"high-level-overview.html#crate-structure":{"tf":1.0}},"df":1,"c":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"d":{"docs":{"variance.html#variance-of-type-and-lifetime-parameters":{"tf":1.0}},"df":1}}}}}}}},"t":{"docs":{"mir/index.html#key-mir-vocabulary":{"tf":1.4142135623730952},"type-inference.html#inference-variables":{"tf":1.4142135623730952},"variance.html#variance-and-associated-types":{"tf":2.449489742783178},"type-inference.html#subtyping-obligations":{"tf":2.8284271247461905},"mir/regionck.html#what-is-a-universe":{"tf":2.0},"traits/lowering-to-logic.html#rust-traits-and-logic":{"tf":2.0},"traits/associated-types.html#integration-with-unification":{"tf":1.4142135623730952},"rustdoc.html#from-crate-to-clean":{"tf":1.0},"traits/canonicalization.html#canonicalizing-the-query":{"tf":1.0},"traits/associated-types.html#skolemized-associated-types":{"tf":1.0},"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.0},"traits/hrtb.html#basic-matching-and-skolemization-leaks":{"tf":1.0},"traits/canonical-queries.html#the-traditional-interactive-prolog-query":{"tf":1.4142135623730952},"traits/lowering-to-logic.html#type-checking-generic-functions-beyond-horn-clauses":{"tf":2.23606797749979},"traits/lowering-rules.html#lowering-where-clauses":{"tf":1.7320508075688773},"high-level-overview.html#the-main-stages-of-compilation":{"tf":1.0},"traits/canonical-queries.html#examples":{"tf":4.58257569495584},"traits/goals-and-clauses.html#domain-goals":{"tf":1.7320508075688773},"traits/lowering-module.html#unit-tests":{"tf":1.4142135623730952},"appendix/glossary.html#appendix-c-glossary":{"tf":2.6457513110645909},"method-lookup.html#candidate-assembly":{"tf":1.7320508075688773},"param_env.html#parameter-environment":{"tf":1.7320508075688773},"name-resolution.html#scopes-and-ribs":{"tf":1.7320508075688773},"traits/lowering-rules.html#associated-type-values":{"tf":1.4142135623730952},"traits/canonical-queries.html#a-trait-query-in-rustc":{"tf":1.7320508075688773},"traits/chalk-overview.html#lowering":{"tf":1.7320508075688773},"traits/caching.html#an-example":{"tf":1.4142135623730952},"variance.html#constraints":{"tf":1.7320508075688773},"type-inference.html#a-note-on-terminology":{"tf":1.4142135623730952},"variance.html#trait-variance-and-vtable-resolution":{"tf":1.4142135623730952},"traits/resolution.html#major-concepts":{"tf":2.0},"traits/resolution.html#candidate-assembly":{"tf":1.7320508075688773},"method-lookup.html#steps":{"tf":1.4142135623730952},"type-inference.html#enforcing-equality--subtyping":{"tf":1.0},"method-lookup.html#method-lookup":{"tf":1.4142135623730952},"traits/resolution.html#overview":{"tf":1.0},"compiler-debugging.html#formatting-graphviz-output-dot-files":{"tf":1.0},"traits/associated-types.html#associated-type-projection-and-normalization":{"tf":2.23606797749979},"traits/lowering-rules.html#trait-header":{"tf":2.8284271247461905},"traits/canonicalization.html#canonicalization":{"tf":2.8284271247461905}},"df":40,":":{"docs":{},"df":0,"c":{"docs":{},"df":0,"l":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"e":{"docs":{"traits/resolution.html#major-concepts":{"tf":1.0}},"df":1}}}}},":":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"m":{"docs":{"appendix/glossary.html#appendix-c-glossary":{"tf":1.0},"high-level-overview.html#the-main-stages-of-compilation":{"tf":1.0},"traits/associated-types.html#skolemized-associated-types":{"tf":1.0},"traits/associated-types.html#associated-type-projection-and-normalization":{"tf":1.0}},"df":4}}}},"d":{"docs":{},"df":0,"e":{"docs":{},"df":0,"f":{"docs":{},"df":0,"a":{"docs":{},"df":0,"u":{"docs":{},"df":0,"l":{"docs":{},"df":0,"t":{"docs":{"name-resolution.html#scopes-and-ribs":{"tf":1.0}},"df":1}}}}}}}},"b":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"<":{"docs":{},"df":0,"u":{"docs":{"traits/resolution.html#selection-during-translation":{"tf":1.0}},"df":1}}}}}},"l":{"docs":{"appendix/glossary.html#appendix-c-glossary":{"tf":1.4142135623730952}},"df":1},"r":{"docs":{},"df":0,"y":{"docs":{},"df":0,"_":{"docs":{},"df":0,"g":{"docs":{},"df":0,"e":{"docs":{},"df":0,"t":{"docs":{"query.html#cycles-between-queries":{"tf":1.4142135623730952}},"df":1}}}}},"e":{"docs":{},"df":0,"e":{"docs":{"hir.html#identifiers-in-the-hir":{"tf":1.4142135623730952},"tests/intro.html#compiletest-test-suites":{"tf":1.0},"tests/intro.html#testing-on-emulators":{"tf":1.0},"the-parser.html#the-parser":{"tf":1.7320508075688773},"name-resolution.html#overall-strategy":{"tf":1.0},"appendix/glossary.html#appendix-c-glossary":{"tf":1.0},"macro-expansion.html#the-macro-parser":{"tf":2.8284271247461905},"high-level-overview.html#the-main-stages-of-compilation":{"tf":1.4142135623730952},"appendix/stupid-stats.html#overview-of-the-compilation-process":{"tf":1.0},"tests/intro.html#testing-with-docker-images":{"tf":1.0},"rustdoc.html#the-walking-tour-of-rustdoc":{"tf":1.0},"macro-expansion.html#example":{"tf":1.7320508075688773},"name-resolution.html#name-resolution":{"tf":1.0},"hir.html#the-hir":{"tf":1.7320508075688773},"rustdoc.html#from-crate-to-clean":{"tf":1.0},"traits/chalk-overview.html#parsing":{"tf":1.0},"mir/regionck.html#what-is-a-universe":{"tf":1.4142135623730952}},"df":17},"a":{"docs":{},"df":0,"t":{"docs":{"traits/lowering-rules.html#function-and-constant-values":{"tf":1.0},"traits/canonicalization.html#canonicalizing-the-query":{"tf":1.0},"traits/lowering-rules.html#lowering-function-and-constant-declarations":{"tf":1.0},"compiler-debugging.html#getting-a-backtrace-for-errors":{"tf":1.4142135623730952}},"df":4,"m":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{"conventions.html#prefer-exhaustive-matches":{"tf":1.0},"traits/canonicalization.html#canonicalizing-the-query-result":{"tf":1.0},"traits/bibliography.html#bibliography":{"tf":1.0}},"df":3}}}},"_":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"r":{"docs":{},"df":0,"_":{"docs":{},"df":0,"a":{"docs":{},"df":0,"s":{"docs":{},"df":0,"_":{"docs":{},"df":0,"b":{"docs":{},"df":0,"u":{"docs":{},"df":0,"g":{"docs":{"compiler-debugging.html#getting-a-backtrace-for-errors":{"tf":1.0}},"df":1}}}}}}}}}}}}}},"o":{"docs":{},"df":0,"u":{"docs":{},"df":0,"b":{"docs":{},"df":0,"l":{"docs":{"compiler-debugging.html#getting-a-backtrace":{"tf":1.0}},"df":1}}}},"i":{"docs":{"query.html#cycles-between-queries":{"tf":1.0},"diag.html#error-messages":{"tf":1.0},"rustc-driver.html#a-note-on-lifetimes":{"tf":1.0},"traits/associated-types.html#integration-with-unification":{"tf":1.4142135623730952},"compiler-debugging.html#expensive-operations-in-logs":{"tf":1.0},"query.html#how-the-compiler-executes-a-query":{"tf":1.4142135623730952},"rustc-driver.html#the-rustc-driver":{"tf":1.0},"traits/lowering-rules.html#trait-header":{"tf":1.0},"rustdoc.html#hot-potato":{"tf":1.0},"type-inference.html#snapshots":{"tf":1.0},"appendix/stupid-stats.html#what-next":{"tf":1.0},"traits/caching.html#where-clauses-and-the-local-vs-global-cache":{"tf":1.0},"traits/lowering-to-logic.html#rust-traits-and-logic":{"tf":1.0},"traits/canonical-queries.html#a-trait-query-in-rustc":{"tf":1.7320508075688773},"traits/canonicalization.html#processing-the-canonicalized-query-result":{"tf":1.0},"type-checking.html#type-collection":{"tf":1.0},"traits/lowering-to-logic.html#type-checking-normal-functions":{"tf":1.0},"macro-expansion.html#the-macro-parser":{"tf":1.0},"const-eval.html#constant-evaluation":{"tf":1.0},"diag.html#suggestions":{"tf":2.449489742783178},"high-level-overview.html#crate-structure":{"tf":1.0},"traits/canonical-queries.html#examples":{"tf":1.0},"compiler-debugging.html#debugging-llvm":{"tf":1.0},"incremental-compilation.html#the-query-dag":{"tf":1.4142135623730952},"mir/regionck.html#another-example":{"tf":1.0},"appendix/stupid-stats.html#appendix-a-a-tutorial-on-creating-a-drop-in-replacement-for-rustc":{"tf":1.0},"appendix/background.html#appendix-b-background-topics":{"tf":1.0},"traits/resolution.html#candidate-assembly":{"tf":1.0},"appendix/glossary.html#appendix-c-glossary":{"tf":1.4142135623730952},"type-inference.html#trying-equality":{"tf":1.4142135623730952},"mir/index.html#key-mir-vocabulary":{"tf":1.4142135623730952},"traits/goals-and-clauses.html#coinductive-goals":{"tf":1.0},"type-inference.html#subtyping-obligations":{"tf":1.0},"tests/running.html#running-an-individual-test":{"tf":1.0},"method-lookup.html#candidate-search":{"tf":1.0},"traits/canonicalization.html#executing-the-query":{"tf":1.4142135623730952},"compiletest.html#adding-a-new-header-command":{"tf":1.0},"incremental-compilation.html#the-try-mark-green-algorithm":{"tf":2.23606797749979},"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.4142135623730952}},"df":39,"c":{"docs":{},"df":0,"k":{"docs":{"rustdoc.html#other-tricks-up-its-sleeve":{"tf":1.4142135623730952}},"df":1,"i":{"docs":{"name-resolution.html#overall-strategy":{"tf":1.0}},"df":1}}},"p":{"docs":{},"df":0,"l":{"docs":{"tests/adding.html#ignoring-tests":{"tf":1.0}},"df":1,"e":{"docs":{},"df":0,">":{"docs":{},"df":0,"/":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"a":{"docs":{},"df":0,"g":{"docs":{},"df":0,"e":{"docs":{},"df":0,"2":{"docs":{"how-to-build-and-run.html#creating-a-rustup-toolchain":{"tf":1.0}},"df":1},"1":{"docs":{"how-to-build-and-run.html#creating-a-rustup-toolchain":{"tf":1.0}},"df":1}}}}}},"l":{"docs":{},"df":0,"l":{"docs":{},"df":0,"v":{"docs":{},"df":0,"m":{"docs":{},"df":0,"/":{"docs":{},"df":0,"b":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{"compiler-debugging.html#debugging-llvm":{"tf":1.4142135623730952}},"df":1}}}}}}}},"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"/":{"docs":{},"df":0,"u":{"docs":{},"df":0,"i":{"docs":{},"df":0,"/":{"docs":{},"df":0,"h":{"docs":{},"df":0,"e":{"docs":{},"df":0,"l":{"docs":{},"df":0,"l":{"docs":{},"df":0,"o":{"docs":{},"df":0,"_":{"docs":{},"df":0,"w":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"l":{"docs":{},"df":0,"d":{"docs":{},"df":0,"/":{"docs":{},"df":0,"m":{"docs":{},"df":0,"a":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,".":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"d":{"docs":{},"df":0,"o":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{"tests/adding.html#guide-to-the-ui-tests":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"g":{"docs":{},"df":0,"g":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"const-eval.html#constant-evaluation":{"tf":1.0},"miri.html#miri":{"tf":1.4142135623730952},"compiler-debugging.html#getting-logging-output":{"tf":1.4142135623730952}},"df":3}}}},"v":{"docs":{},"df":0,"i":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{"query.html#adding-a-new-kind-of-query":{"tf":1.0},"traits/goals-and-clauses.html#goals-and-clauses-meta-structure":{"tf":1.0},"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.0},"appendix/stupid-stats.html#appendix-a-a-tutorial-on-creating-a-drop-in-replacement-for-rustc":{"tf":1.0},"traits/resolution.html#candidate-assembly":{"tf":1.0}},"df":5}}}}},"u":{"docs":{},"df":0,"e":{"docs":{"traits/canonical-queries.html#the-traditional-interactive-prolog-query":{"tf":1.7320508075688773},"appendix/glossary.html#appendix-c-glossary":{"tf":1.7320508075688773},"traits/goals-and-clauses.html#domain-goals":{"tf":2.23606797749979},"how-to-build-and-run.html#create-a-configtoml":{"tf":2.0},"traits/goals-and-clauses.html#goals-and-clauses-meta-structure":{"tf":1.7320508075688773},"incremental-compilation.html#the-query-dag":{"tf":1.0},"traits/goals-and-clauses.html#goals-and-clauses":{"tf":1.0},"diag.html#declaring-a-lint":{"tf":1.4142135623730952},"mir/regionck.html#subtyping-and-skolemization":{"tf":2.23606797749979},"conventions.html#use-todo-comments-for-things-you-dont-want-to-forget":{"tf":1.0},"traits/canonical-queries.html#a-trait-query-in-rustc":{"tf":1.4142135623730952},"miri.html#miri":{"tf":1.0},"traits/lowering-rules.html#trait-header":{"tf":1.0},"variance.html#variance-and-associated-types":{"tf":1.0},"traits/associated-types.html#associated-type-projection-and-normalization":{"tf":1.0},"traits/lowering-to-logic.html#rust-traits-and-logic":{"tf":1.7320508075688773},"mir/regionck.html#skolemization-and-outlives-constraints":{"tf":1.0},"traits/goals-and-clauses.html#coinductive-goals":{"tf":1.4142135623730952},"traits/canonical-queries.html#canonical-queries":{"tf":1.0}},"df":19}},"a":{"docs":{},"df":0,"n":{"docs":{"traits/resolution.html#selection-during-translation":{"tf":1.7320508075688773},"traits/specialization.html#specialization":{"tf":1.0},"traits/resolution.html#major-concepts":{"tf":1.0},"how-to-build-and-run.html#create-a-configtoml":{"tf":1.0},"appendix/glossary.html#appendix-c-glossary":{"tf":1.4142135623730952}},"df":5,"s":{"docs":{},"df":0,"f":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"m":{"docs":{"compiletest.html#adding-a-new-header-command":{"tf":1.0},"rustdoc.html#from-crate-to-clean":{"tf":1.0},"traits/associated-types.html#projection-equality":{"tf":1.0},"traits/chalk-overview.html#parsing":{"tf":1.0},"rustdoc.html#hot-potato":{"tf":1.0},"variance.html#the-algorithm":{"tf":1.0},"mir/passes.html#implementing-and-registering-a-pass":{"tf":1.0},"mir/passes.html#mir-passes":{"tf":1.7320508075688773},"rustdoc.html#other-tricks-up-its-sleeve":{"tf":1.0},"high-level-overview.html#the-main-stages-of-compilation":{"tf":1.0},"method-lookup.html#candidate-assembly":{"tf":1.0},"traits/lowering-rules.html#transforming-the-lowered-where-clauses":{"tf":1.7320508075688773},"appendix/glossary.html#appendix-c-glossary":{"tf":1.0}},"df":13}}}},"p":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{"name-resolution.html#scopes-and-ribs":{"tf":1.0}},"df":1}}},"l":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{"mir/index.html#key-mir-vocabulary":{"tf":1.0},"high-level-overview.html#the-main-stages-of-compilation":{"tf":1.0},"compiler-debugging.html#getting-logging-output":{"tf":1.0},"traits/resolution.html#selection-during-translation":{"tf":1.4142135623730952},"miri.html#interpretation":{"tf":1.0},"appendix/glossary.html#appendix-c-glossary":{"tf":1.0},"appendix/background.html#what-is-a-control-flow-graph":{"tf":1.0},"appendix/stupid-stats.html#compilercontroller":{"tf":1.4142135623730952},"appendix/stupid-stats.html#overview-of-the-compilation-process":{"tf":1.7320508075688773},"rustc-driver.html#the-rustc-driver":{"tf":1.4142135623730952}},"df":10}}},"a":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{"traits/resolution.html#candidate-assembly":{"tf":1.0}},"df":1}}},"c":{"docs":{},"df":0,"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.0}},"df":1}}}},"_":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{"compiler-debugging.html#getting-logging-output":{"tf":1.0}},"df":1}}}}},"i":{"docs":{},"df":0,"t":{"docs":{"diag.html#edition-gated-lints":{"tf":1.0},"query.html#queries-demand-driven-compilation":{"tf":1.0},"traits/lowering-rules.html#trait-header":{"tf":1.4142135623730952},"high-level-overview.html#the-main-stages-of-compilation":{"tf":1.0},"high-level-overview.html#crate-structure":{"tf":1.0},"diag.html#suggestions":{"tf":1.0},"name-resolution.html#scopes-and-ribs":{"tf":1.0},"mir/borrowck.html#mir-borrow-check":{"tf":1.0}},"df":8}}}},"d":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{"query.html#cycles-between-queries":{"tf":1.0},"traits/goals-and-clauses.html#goals-and-clauses":{"tf":1.0},"traits/canonical-queries.html#the-traditional-interactive-prolog-query":{"tf":2.0},"query.html#queries-demand-driven-compilation":{"tf":1.0}},"df":4,"i":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{"tests/adding.html#naming-your-test":{"tf":1.0}},"df":1}}}}}},"w":{"docs":{},"df":0,"l":{"docs":{"hir.html#out-of-band-storage-and-the--crate--type":{"tf":1.0}},"df":1}},"i":{"docs":{},"df":0,"t":{"docs":{"traits/chalk-overview.html#well-formedness-checks":{"tf":1.4142135623730952},"query.html#how-the-compiler-executes-a-query":{"tf":1.0},"traits/hrtb.html#basic-matching-and-skolemization-leaks":{"tf":2.23606797749979},"appendix/stupid-stats.html#overview-of-the-compilation-process":{"tf":1.0},"traits/slg.html#the-slg-solver":{"tf":1.0},"traits/lowering-rules.html#lowering-impls":{"tf":1.7320508075688773},"traits/regions.html#region-constraints":{"tf":1.0},"traits/caching.html#caching-and-subtle-considerations-therewith":{"tf":2.0},"traits/canonicalization.html#canonicalizing-the-query":{"tf":1.7320508075688773},"traits/canonical-queries.html#examples":{"tf":2.8284271247461905},"traits/associated-types.html#equality-and-associated-types":{"tf":1.4142135623730952},"traits/resolution.html#overview":{"tf":1.4142135623730952},"traits/caching.html#an-example":{"tf":1.4142135623730952},"variance.html#addendum-variance-on-traits":{"tf":3.0},"rustc-driver.html#the-rustc-driver":{"tf":1.4142135623730952},"mir/visitor.html#mir-visitor":{"tf":1.4142135623730952},"high-level-overview.html#crate-structure":{"tf":1.0},"mir/passes.html#implementing-and-registering-a-pass":{"tf":1.4142135623730952},"name-resolution.html#name-resolution":{"tf":1.0},"appendix/glossary.html#appendix-c-glossary":{"tf":2.8284271247461905},"traits/resolution.html#confirmation":{"tf":1.4142135623730952},"hir.html#out-of-band-storage-and-the--crate--type":{"tf":1.4142135623730952},"traits/lowering-rules.html#associated-type-values":{"tf":2.0},"traits/canonical-queries.html#the-traditional-interactive-prolog-query":{"tf":1.0},"traits/goals-and-clauses.html#domain-goals":{"tf":2.6457513110645909},"traits/goals-and-clauses.html#incomplete-chapter":{"tf":1.0},"traits/lowering-rules.html#lowering-traits":{"tf":2.8284271247461905},"traits/lowering-to-logic.html#source":{"tf":1.0},"traits/chalk-overview.html#solver":{"tf":1.0},"traits/chalk-overview.html#testing":{"tf":1.0},"traits/lowering-to-logic.html#rust-traits-and-logic":{"tf":3.1622776601683797},"variance.html#variance-of-type-and-lifetime-parameters":{"tf":1.4142135623730952},"traits/chalk-overview.html#parsing":{"tf":1.4142135623730952},"variance.html#variance-and-associated-types":{"tf":3.605551275463989},"traits/lowering-to-logic.html#lowering-to-logic":{"tf":1.4142135623730952},"diag.html#declaring-a-lint":{"tf":1.4142135623730952},"traits/canonicalization.html#canonicalization":{"tf":1.7320508075688773},"traits/caching.html#where-clauses-and-the-local-vs-global-cache":{"tf":1.4142135623730952},"rustdoc.html#from-crate-to-clean":{"tf":1.7320508075688773},"traits/index.html#trait-solving-new-style":{"tf":3.1622776601683797},"traits/canonicalization.html#processing-the-canonicalized-query-result":{"tf":1.0},"traits/lowering-rules.html#lowering-function-and-constant-declarations":{"tf":1.0},"traits/hrtb.html#higher-ranked-trait-obligations":{"tf":2.6457513110645909},"traits/goals-and-clauses.html#goals-and-clauses":{"tf":1.4142135623730952},"traits/lowering-rules.html#associated-type-declarations":{"tf":2.0},"traits/chalk-overview.html#rules":{"tf":1.4142135623730952},"traits/lowering-rules.html#lowering-where-clauses":{"tf":1.0},"traits/canonicalization.html#canonicalizing-the-query-result":{"tf":1.4142135623730952},"method-lookup.html#method-lookup":{"tf":1.4142135623730952},"traits/resolution.html#selection-during-translation":{"tf":2.0},"traits/lowering-rules.html#trait-header":{"tf":4.358898943540674},"traits/resolution.html#trait-resolution-old-style":{"tf":2.449489742783178},"traits/lowering-rules.html#function-and-constant-values":{"tf":1.0},"traits/resolution.html#candidate-assembly":{"tf":3.1622776601683797},"type-checking.html#type-collection":{"tf":1.0},"traits/associated-types.html#projection-equality":{"tf":1.4142135623730952},"traits/lowering-rules.html#rule-names-and-cross-references":{"tf":1.0},"traits/goals-and-clauses.html#coinductive-goals":{"tf":3.1622776601683797},"traits/implied-bounds.html#implied-bounds":{"tf":1.0},"type-checking.html#type-checking":{"tf":1.0},"compiler-debugging.html#getting-a-backtrace-for-errors":{"tf":2.0},"traits/lowering-module.html#the--program_clauses_for--query":{"tf":1.4142135623730952},"traits/chalk-overview.html#lowering":{"tf":2.6457513110645909},"traits/canonical-queries.html#canonical-queries":{"tf":1.7320508075688773},"method-lookup.html#candidate-assembly":{"tf":3.1622776601683797},"traits/bibliography.html#bibliography":{"tf":1.0},"rustdoc.html#cheat-sheet":{"tf":1.0},"rustc-driver.html#a-note-on-lifetimes":{"tf":1.4142135623730952},"traits/wf.html#well-formedness-checking":{"tf":1.4142135623730952},"query.html#adding-a-new-kind-of-query":{"tf":2.23606797749979},"traits/chalk-overview.html#blog-posts":{"tf":1.4142135623730952},"type-inference.html#enforcing-equality--subtyping":{"tf":1.4142135623730952},"traits/lowering-to-logic.html#type-checking-normal-functions":{"tf":1.7320508075688773},"traits/lowering-module.html#the-lowering-module-in-rustc":{"tf":1.0},"traits/chalk-overview.html#intermediate-representation-ir":{"tf":1.0},"variance.html#variance-and-object-types":{"tf":1.4142135623730952},"traits/chalk-overview.html#an-overview-of-chalk":{"tf":1.7320508075688773},"traits/lowering-rules.html#lowering-rules":{"tf":1.4142135623730952},"compiler-debugging.html#getting-logging-output":{"tf":1.0},"traits/hrtb.html#higher-ranked-trait-bounds":{"tf":2.449489742783178},"traits/goals-and-clauses.html#goals-and-clauses-meta-structure":{"tf":1.0},"rustdoc.html#from-soup-to-nuts":{"tf":1.7320508075688773},"traits/lowering-rules.html#notation":{"tf":1.0},"traits/lowering-to-logic.html#type-checking-generic-functions-beyond-horn-clauses":{"tf":1.0},"appendix/stupid-stats.html#compilercalls":{"tf":1.0},"ty.html#beyond-types-other-kinds-of-arena-allocated-data-structures":{"tf":2.23606797749979},"traits/associated-types.html#skolemized-associated-types":{"tf":1.4142135623730952},"variance.html#trait-variance-and-vtable-resolution":{"tf":2.0},"traits/lowering-rules.html#lowering-impl-items":{"tf":1.0},"traits/associated-types.html#associated-type-projection-and-normalization":{"tf":2.0},"traits/associated-types.html#integration-with-unification":{"tf":1.4142135623730952},"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.4142135623730952},"traits/specialization.html#specialization":{"tf":1.4142135623730952},"traits/canonicalization.html#executing-the-query":{"tf":1.4142135623730952},"traits/lowering-module.html#unit-tests":{"tf":1.4142135623730952},"traits/chalk-overview.html#resources":{"tf":1.4142135623730952},"traits/lowering-rules.html#lowering-trait-items":{"tf":1.7320508075688773},"traits/lowering-rules.html#transforming-the-lowered-where-clauses":{"tf":1.0},"param_env.html#parameter-environment":{"tf":1.0},"traits/resolution.html#major-concepts":{"tf":3.0},"traits/canonical-queries.html#a-trait-query-in-rustc":{"tf":2.449489742783178}},"df":101,"<":{"docs":{},"df":0,"a":{"docs":{"variance.html#variance-and-object-types":{"tf":1.0}},"df":1,"1":{"docs":{},"df":0,".":{"docs":{},"df":0,".":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{"traits/lowering-rules.html#lowering-impls":{"tf":1.4142135623730952}},"df":1}}}}}},"b":{"docs":{"variance.html#variance-and-object-types":{"tf":1.0}},"df":1},"p":{"docs":{},"df":0,"1":{"docs":{},"df":0,".":{"docs":{},"df":0,".":{"docs":{},"df":0,"p":{"docs":{},"df":0,"n":{"docs":{"traits/lowering-rules.html#associated-type-declarations":{"tf":2.0},"traits/lowering-rules.html#trait-header":{"tf":2.23606797749979},"traits/lowering-rules.html#associated-type-values":{"tf":1.0},"traits/lowering-rules.html#lowering-traits":{"tf":1.0}},"df":4,">":{"docs":{},"df":0,">":{"docs":{},"df":0,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"a":{"docs":{},"df":0,"s":{"docs":{},"df":0,"s":{"docs":{},"df":0,"o":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{},"df":0,"y":{"docs":{},"df":0,"p":{"docs":{},"df":0,"e":{"docs":{},"df":0,"<":{"docs":{},"df":0,"p":{"docs":{},"df":0,"n":{"docs":{},"df":0,"+":{"docs":{},"df":0,"1":{"docs":{},"df":0,".":{"docs":{},"df":0,".":{"docs":{},"df":0,"p":{"docs":{},"df":0,"m":{"docs":{"traits/lowering-rules.html#associated-type-declarations":{"tf":2.0},"traits/lowering-rules.html#associated-type-values":{"tf":1.0}},"df":2}}}}}}}}}}}}}}}}}}}}}}}}}}}},"'":{"docs":{},"df":0,"a":{"docs":{"appendix/glossary.html#appendix-c-glossary":{"tf":1.0}},"df":1}}},"d":{"docs":{},"df":0,"e":{"docs":{},"df":0,"f":{"docs":{"appendix/code-index.html#appendix-d-code-index":{"tf":1.0}},"df":1}}},"n":{"docs":{},"df":0,"a":{"docs":{},"df":0,"m":{"docs":{},"df":0,"e":{"docs":{},"df":0,"<":{"docs":{},"df":0,"p":{"docs":{},"df":0,"1":{"docs":{},"df":0,".":{"docs":{},"df":0,".":{"docs":{},"df":0,"p":{"docs":{},"df":0,"n":{"docs":{"traits/goals-and-clauses.html#domain-goals":{"tf":1.0}},"df":1,">":{"docs":{},"df":0,">":{"docs":{},"df":0,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"a":{"docs":{},"df":0,"s":{"docs":{},"df":0,"s":{"docs":{},"df":0,"o":{"docs":{},"df":0,"c":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"m":{"docs":{},"df":0,"<":{"docs":{},"df":0,"p":{"docs":{},"df":0,"n":{"docs":{},"df":0,"+":{"docs":{},"df":0,"1":{"docs":{},"df":0,".":{"docs":{},"df":0,".":{"docs":{},"df":0,"p":{"docs":{},"df":0,"m":{"docs":{"traits/goals-and-clauses.html#domain-goals":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"df":0,"/":{"docs":{},"df":0,"i":{"docs":{},"df":0,"m":{"docs":{},"df":0,"p":{"docs":{},"df":0,"l":{"docs":{"traits/chalk-overview.html#lowering":{"tf":1.0}},"df":1}}}}}},"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"f":{"docs":{"traits/lowering-rules.html#trait-header":{"tf":1.4142135623730952},"traits/lowering-rules.html#lowering-impls":{"tf":1.0},"traits/goals-and-clauses.html#domain-goals":{"tf":1.7320508075688773},"ty.html#beyond-types-other-kinds-of-arena-allocated-data-structures":{"tf":1.0},"traits/hrtb.html#basic-matching-and-skolemization-leaks":{"tf":1.4142135623730952}},"df":5}}},"'":{"docs":{"appendix/code-index.html#appendix-d-code-index":{"tf":1.0},"appendix/glossary.html#appendix-c-glossary":{"tf":1.0}},"df":2},":":{"docs":{},"df":0,":":{"docs":{},"df":0,"a":{"docs":{},"df":0,"s":{"docs":{},"df":0,"s":{"docs":{},"df":0,"o":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{},"df":0,"y":{"docs":{},"df":0,"p":{"docs":{},"df":0,"e":{"docs":{},"df":0,")":{"docs":{},"df":0,"<":{"docs":{},"df":0,"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"l":{"docs":{},"df":0,"f":{"docs":{"traits/lowering-rules.html#associated-type-declarations":{"tf":1.0}},"df":1}}}}}}}}}}}}}}},"m":{"docs":{},"df":0,"e":{"docs":{},"df":0,"t":{"docs":{},"df":0,"h":{"docs":{},"df":0,"o":{"docs":{},"df":0,"d":{"docs":{},"df":0,"(":{"docs":{},"df":0,"a":{"docs":{},"df":0,"d":{"docs":{},"df":0,"j":{"docs":{},"df":0,"(":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"e":{"docs":{},"df":0,"i":{"docs":{},"df":0,"v":{"docs":{"method-lookup.html#method-lookup":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}},">":{"docs":{},"df":0,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"m":{"docs":{"traits/goals-and-clauses.html#domain-goals":{"tf":1.0}},"df":1}}}}}}}}},"c":{"docs":{},"df":0,"e":{"docs":{"compiler-debugging.html#getting-a-backtrace":{"tf":1.4142135623730952}},"df":1},"k":{"docs":{"appendix/glossary.html#appendix-c-glossary":{"tf":1.4142135623730952},"incrcomp-debugging.html#tracking-down-incorrect-edges":{"tf":1.7320508075688773},"traits/index.html#trait-solving-new-style":{"tf":1.0},"mir/regionck.html#causal-tracking":{"tf":1.7320508075688773},"macro-expansion.html#the-macro-parser":{"tf":1.4142135623730952},"incremental-compilation.html#the-query-dag":{"tf":1.7320508075688773},"mir/regionck.html#what-is-a-universe":{"tf":1.0},"traits/resolution.html#overview":{"tf":1.0},"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.0}},"df":9,"e":{"docs":{},"df":0,"r":{"docs":{"mir/regionck.html#another-example":{"tf":1.0}},"df":1}}}},"v":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"s":{"docs":{"mir/visitor.html#mir-visitor":{"tf":1.0},"name-resolution.html#scopes-and-ribs":{"tf":1.0},"name-resolution.html#overall-strategy":{"tf":1.0},"mir/visitor.html#traversal":{"tf":1.4142135623730952}},"df":4}}},"i":{"docs":{"tests/intro.html#testing-with-docker-images":{"tf":1.0},"tests/intro.html#testing-infrastructure":{"tf":1.4142135623730952},"tests/intro.html#testing-on-emulators":{"tf":1.0},"tests/running.html#running-tests":{"tf":1.0}},"df":4}}}},"'":{"docs":{"rustdoc.html#dotting-is-and-crossing-ts":{"tf":1.4142135623730952}},"df":1},"o":{"docs":{},"df":0,"k":{"docs":{},"df":0,"e":{"docs":{},"df":0,"i":{"docs":{"tests/intro.html#other-tests":{"tf":1.0}},"df":1},"n":{"docs":{"macro-expansion.html#example":{"tf":3.0},"macro-expansion.html#the-macro-parser":{"tf":3.7416573867739415},"the-parser.html#the-parser":{"tf":2.449489742783178},"appendix/code-index.html#appendix-d-code-index":{"tf":1.0},"appendix/glossary.html#appendix-c-glossary":{"tf":1.7320508075688773}},"df":5,"t":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{"macro-expansion.html#the-macro-parser":{"tf":1.0}},"df":1}}},"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"a":{"docs":{},"df":0,"m":{"docs":{"macro-expansion.html#the-macro-parser":{"tf":1.0}},"df":1}}}}}}}}},"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"r":{"docs":{"method-lookup.html#candidate-assembly":{"tf":1.4142135623730952}},"df":1}}},"d":{"docs":{},"df":0,"o":{"docs":{"traits/caching.html#where-clauses-and-the-local-vs-global-cache":{"tf":1.0},"traits/slg.html#the-slg-solver":{"tf":1.0},"conventions.html#use-todo-comments-for-things-you-dont-want-to-forget":{"tf":2.6457513110645909},"traits/resolution.html#candidate-assembly":{"tf":1.7320508075688773},"traits/resolution.html#selection-during-translation":{"tf":1.0},"macro-expansion.html#procedural-macros":{"tf":1.0},"traits/specialization.html#specialization":{"tf":1.0},"traits/chalk-overview.html#testing":{"tf":1.0},"macro-expansion.html#hygiene":{"tf":1.0},"name-resolution.html#todo":{"tf":1.4142135623730952},"traits/lowering-rules.html#transforming-the-lowered-where-clauses":{"tf":1.0},"tests/intro.html#testing-with-docker-images":{"tf":1.0},"type-checking.html#type-collection":{"tf":1.0},"tests/intro.html#testing-on-emulators":{"tf":1.0},"tests/intro.html#crater":{"tf":1.0},"method-lookup.html#candidate-assembly":{"tf":1.0},"macro-expansion.html#custom-derive":{"tf":1.0},"traits/hrtb.html#basic-matching-and-skolemization-leaks":{"tf":1.4142135623730952}},"df":18},"a":{"docs":{},"df":0,"y":{"docs":{"rustdoc.html#hot-potato":{"tf":1.0}},"df":1}}},"_":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"r":{"docs":{"method-lookup.html#candidate-assembly":{"tf":1.4142135623730952}},"df":1}}},"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"w":{"docs":{},"df":0,"_":{"docs":{},"df":0,"b":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{"miri.html#datastructures":{"tf":1.0}},"df":1}}}}}}}},"l":{"docs":{},"df":0,"d":{"docs":{"type-inference.html#inference-variables":{"tf":1.0}},"df":1}},"o":{"docs":{},"df":0,"l":{"docs":{"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":2.8284271247461905},"tests/intro.html#the-compiler-testing-framework":{"tf":1.0},"mir/visitor.html#mir-visitor":{"tf":1.0},"appendix/stupid-stats.html#appendix-a-a-tutorial-on-creating-a-drop-in-replacement-for-rustc":{"tf":3.0},"appendix/stupid-stats.html#what-next":{"tf":1.0},"compiler-debugging.html#debugging-llvm":{"tf":1.4142135623730952},"appendix/stupid-stats.html#compilercalls":{"tf":1.0},"how-to-build-and-run.html#how-to-build-the-compiler-and-run-what-you-built":{"tf":1.0},"how-to-build-and-run.html#create-a-configtoml":{"tf":1.0},"tests/intro.html#other-tests":{"tf":2.0},"tests/intro.html#testing-on-emulators":{"tf":1.7320508075688773},"how-to-build-and-run.html#running-xpy-and-building-a-stage1-compiler":{"tf":1.0},"conventions.html#use-todo-comments-for-things-you-dont-want-to-forget":{"tf":1.0},"appendix/stupid-stats.html#compilercontroller":{"tf":1.0}},"df":14,"c":{"docs":{},"df":0,"h":{"docs":{},"df":0,"a":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{"rustdoc.html#cheat-sheet":{"tf":1.0},"how-to-build-and-run.html#creating-a-rustup-toolchain":{"tf":2.23606797749979}},"df":2}}}}}}},"t":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{"appendix/stupid-stats.html#appendix-a-a-tutorial-on-creating-a-drop-in-replacement-for-rustc":{"tf":1.0}},"df":1}}},"p":{"docs":{"hir.html#out-of-band-storage-and-the--crate--type":{"tf":1.0},"tests/adding.html#revisions":{"tf":1.0},"query.html#how-the-compiler-executes-a-query":{"tf":1.0},"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.0},"compiletest.html#header-commands":{"tf":1.0},"name-resolution.html#overall-strategy":{"tf":1.0},"compiletest.html#adding-a-new-header-command":{"tf":1.0},"variance.html#the-algorithm":{"tf":1.0},"query.html#queries-demand-driven-compilation":{"tf":1.0},"hir.html#identifiers-in-the-hir":{"tf":1.0},"appendix/stupid-stats.html#compilercalls":{"tf":1.0},"high-level-overview.html#crate-structure":{"tf":1.0},"rustdoc.html#from-clean-to-crate":{"tf":1.0},"conventions.html#copyright-notice":{"tf":1.4142135623730952},"conventions.html#line-length":{"tf":1.0},"mir/index.html#key-mir-vocabulary":{"tf":1.0}},"df":16,"i":{"docs":{},"df":0,"c":{"docs":{"traits/hrtb.html#higher-ranked-trait-obligations":{"tf":1.0},"query.html#queries-demand-driven-compilation":{"tf":1.0},"traits/index.html#trait-solving-new-style":{"tf":1.0},"traits/goals-and-clauses.html#incomplete-chapter":{"tf":1.0},"macro-expansion.html#example":{"tf":1.0},"appendix/background.html#appendix-b-background-topics":{"tf":1.4142135623730952}},"df":6}}},"u":{"docs":{},"df":0,"r":{"docs":{"rustdoc.html#the-walking-tour-of-rustdoc":{"tf":1.4142135623730952}},"df":1},"c":{"docs":{},"df":0,"h":{"docs":{"ty.html#the-tcx-and-how-it-uses-lifetimes":{"tf":1.0},"rustc-driver.html#a-note-on-lifetimes":{"tf":1.0}},"df":2}}},"w":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"d":{"docs":{"traits/lowering-to-logic.html#type-checking-normal-functions":{"tf":1.0},"high-level-overview.html#crate-structure":{"tf":1.0},"how-to-build-and-run.html#how-to-build-the-compiler-and-run-what-you-built":{"tf":1.0},"conventions.html#formatting-and-the-tidy-script":{"tf":1.0},"conventions.html#line-length":{"tf":1.0}},"df":5}}}},"g":{"docs":{},"df":0,"e":{"docs":{},"df":0,"t":{"docs":{},"df":0,"h":{"docs":{"traits/canonicalization.html#canonicalizing-the-query-result":{"tf":1.0},"high-level-overview.html#the-main-stages-of-compilation":{"tf":1.0},"traits/associated-types.html#projection-equality":{"tf":1.0},"appendix/background.html#what-is-a-control-flow-graph":{"tf":1.0},"compiler-debugging.html#debugging-llvm":{"tf":1.0},"compiler-debugging.html#getting-logging-output":{"tf":1.0},"high-level-overview.html#crate-structure":{"tf":1.0}},"df":7}}}}},"c":{"docs":{},"df":0,"x":{"docs":{"ty.html#beyond-types-other-kinds-of-arena-allocated-data-structures":{"tf":1.0},"query.html#how-the-compiler-executes-a-query":{"tf":3.3166247903554},"query.html#adding-a-new-kind-of-query":{"tf":1.0},"appendix/glossary.html#appendix-c-glossary":{"tf":1.7320508075688773},"appendix/code-index.html#appendix-d-code-index":{"tf":1.4142135623730952},"compiler-debugging.html#expensive-operations-in-logs":{"tf":2.8284271247461905},"ty.html#the--ty--module-representing-types":{"tf":1.0},"mir/passes.html#implementing-and-registering-a-pass":{"tf":1.0},"ty.html#the-tcx-and-how-it-uses-lifetimes":{"tf":3.605551275463989},"ty.html#allocating-and-working-with-types":{"tf":2.449489742783178},"diag.html#declaring-a-lint":{"tf":1.4142135623730952},"query.html#invoking-queries":{"tf":1.0},"mir/visitor.html#mir-visitor":{"tf":1.7320508075688773},"traits/caching.html#where-clauses-and-the-local-vs-global-cache":{"tf":1.0},"type-inference.html#creating-an-inference-context":{"tf":1.4142135623730952},"hir.html#the-hir-map":{"tf":1.0},"mir/passes.html#stealing":{"tf":1.0}},"df":17,">":{"docs":{},"df":0,">":{"docs":{},"df":0,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"p":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"t":{"docs":{},"df":0,"_":{"docs":{},"df":0,"f":{"docs":{},"df":0,"u":{"docs":{},"df":0,"l":{"docs":{},"df":0,"f":{"docs":{},"df":0,"i":{"docs":{},"df":0,"l":{"docs":{},"df":0,"l":{"docs":{},"df":0,"m":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{},"df":0,"_":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{"compiler-debugging.html#getting-a-backtrace-for-errors":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}},"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"l":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{},"df":0,"i":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"_":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{"compiler-debugging.html#getting-a-backtrace-for-errors":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}}}}}}}},"(":{"docs":{},"df":0,"t":{"docs":{},"df":0,"c":{"docs":{},"df":0,"x":{"docs":{"query.html#how-the-compiler-executes-a-query":{"tf":1.4142135623730952},"ty.html#the-tcx-and-how-it-uses-lifetimes":{"tf":1.4142135623730952}},"df":2}}}}},".":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{},"df":0,"l":{"docs":{},"df":0,"o":{"docs":{},"df":0,"c":{"docs":{},"df":0,"_":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{},"df":0,"_":{"docs":{},"df":0,"m":{"docs":{},"df":0,"i":{"docs":{},"df":0,"r":{"docs":{"mir/passes.html#stealing":{"tf":1.0}},"df":1}}}}}}}}}}}}}}},"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"_":{"docs":{},"df":0,"e":{"docs":{},"df":0,"v":{"docs":{"miri.html#miri":{"tf":1.7320508075688773},"miri.html#interpretation":{"tf":1.7320508075688773}},"df":2,"a":{"docs":{},"df":0,"l":{"docs":{},"df":0,"(":{"docs":{},"df":0,"p":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"m":{"docs":{},"df":0,"_":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"v":{"docs":{},"df":0,".":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{},"df":0,"(":{"docs":{},"df":0,"g":{"docs":{},"df":0,"i":{"docs":{},"df":0,"d":{"docs":{"miri.html#miri":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"s":{"docs":{},"df":0,".":{"docs":{},"df":0,"d":{"docs":{},"df":0,"e":{"docs":{},"df":0,"l":{"docs":{},"df":0,"a":{"docs":{},"df":0,"y":{"docs":{},"df":0,"_":{"docs":{},"df":0,"s":{"docs":{},"df":0,"p":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"_":{"docs":{},"df":0,"b":{"docs":{},"df":0,"u":{"docs":{},"df":0,"g":{"docs":{},"df":0,"(":{"docs":{},"df":0,"s":{"docs":{},"df":0,"o":{"docs":{},"df":0,"m":{"docs":{},"df":0,"e":{"docs":{},"df":0,"_":{"docs":{},"df":0,"s":{"docs":{},"df":0,"p":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{"query.html#cycles-between-queries":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}}}}}}}}}}},"u":{"docs":{},"df":0,"b":{"docs":{},"df":0,"q":{"docs":{},"df":0,"u":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"y":{"docs":{},"df":0,"2":{"docs":{"incremental-compilation.html#the-query-dag":{"tf":1.0}},"df":1},"1":{"docs":{"incremental-compilation.html#the-query-dag":{"tf":1.0}},"df":1},"3":{"docs":{"incremental-compilation.html#the-query-dag":{"tf":1.0}},"df":1}}}}}}}}},"m":{"docs":{},"df":0,"k":{"docs":{},"df":0,"_":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"y":{"docs":{},"df":0,"(":{"docs":{},"df":0,"e":{"docs":{},"df":0,"l":{"docs":{},"df":0,"e":{"docs":{},"df":0,"m":{"docs":{},"df":0,"_":{"docs":{},"df":0,"t":{"docs":{},"df":0,"i":{"docs":{"ty.html#allocating-and-working-with-types":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}},"h":{"docs":{},"df":0,"i":{"docs":{},"df":0,"r":{"docs":{"appendix/glossary.html#appendix-c-glossary":{"tf":1.0},"hir.html#the-hir-map":{"tf":1.0}},"df":2,".":{"docs":{},"df":0,"e":{"docs":{},"df":0,"x":{"docs":{},"df":0,"p":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{},"df":0,"_":{"docs":{},"df":0,"e":{"docs":{},"df":0,"x":{"docs":{},"df":0,"p":{"docs":{},"df":0,"r":{"docs":{},"df":0,"(":{"docs":{},"df":0,"n":{"docs":{"hir.html#the-hir-map":{"tf":1.0}},"df":1}}}}}}}}}}}}},"a":{"docs":{},"df":0,"s":{"docs":{},"df":0,"_":{"docs":{},"df":0,"l":{"docs":{},"df":0,"o":{"docs":{},"df":0,"c":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{},"df":0,"_":{"docs":{},"df":0,"n":{"docs":{},"df":0,"o":{"docs":{},"df":0,"d":{"docs":{},"df":0,"e":{"docs":{},"df":0,"_":{"docs":{},"df":0,"i":{"docs":{},"df":0,"d":{"docs":{},"df":0,"(":{"docs":{},"df":0,"d":{"docs":{},"df":0,"e":{"docs":{},"df":0,"f":{"docs":{},"df":0,"_":{"docs":{},"df":0,"i":{"docs":{},"df":0,"d":{"docs":{"hir.html#the-hir-map":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}}}}}},"g":{"docs":{},"df":0,"e":{"docs":{},"df":0,"t":{"docs":{},"df":0,"_":{"docs":{},"df":0,"p":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{},"df":0,"_":{"docs":{},"df":0,"n":{"docs":{},"df":0,"o":{"docs":{},"df":0,"d":{"docs":{},"df":0,"e":{"docs":{},"df":0,"(":{"docs":{},"df":0,"n":{"docs":{"hir.html#the-hir-map":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}},"f":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{},"df":0,"(":{"docs":{},"df":0,"n":{"docs":{"hir.html#the-hir-map":{"tf":1.0}},"df":1}}}}}}}}}},"p":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"m":{"docs":{},"df":0,"_":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"v":{"docs":{},"df":0,"(":{"docs":{},"df":0,"d":{"docs":{},"df":0,"e":{"docs":{},"df":0,"f":{"docs":{},"df":0,"_":{"docs":{},"df":0,"i":{"docs":{},"df":0,"d":{"docs":{"param_env.html#parameter-environment":{"tf":1.0}},"df":1}}}}}},"l":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"g":{"docs":{},"df":0,"t":{"docs":{},"df":0,"h":{"docs":{},"df":0,"_":{"docs":{},"df":0,"d":{"docs":{},"df":0,"e":{"docs":{},"df":0,"f":{"docs":{},"df":0,"_":{"docs":{},"df":0,"i":{"docs":{},"df":0,"d":{"docs":{"miri.html#miri":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"m":{"docs":{},"df":0,"_":{"docs":{},"df":0,"p":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{},"df":0,"h":{"docs":{},"df":0,"_":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"r":{"docs":{},"df":0,"(":{"docs":{},"df":0,"k":{"docs":{},"df":0,"e":{"docs":{},"df":0,"y":{"docs":{"query.html#adding-a-new-kind-of-query":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}},"n":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"p":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"t":{"docs":{},"df":0,"_":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"n":{"docs":{"miri.html#datastructures":{"tf":1.0}},"df":1}}}}}}}}}}}}}},"f":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"_":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{},"df":0,"x":{"docs":{},"df":0,"t":{"docs":{"type-inference.html#creating-an-inference-context":{"tf":1.0}},"df":1,"(":{"docs":{},"df":0,")":{"docs":{},"df":0,".":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"(":{"docs":{},"df":0,"|":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"f":{"docs":{},"df":0,"c":{"docs":{},"df":0,"x":{"docs":{"type-inference.html#creating-an-inference-context":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"df":0,"y":{"docs":{},"df":0,"p":{"docs":{},"df":0,"e":{"docs":{},"df":0,"_":{"docs":{},"df":0,"o":{"docs":{},"df":0,"f":{"docs":{"query.html#adding-a-new-kind-of-query":{"tf":1.0}},"df":1,"(":{"docs":{},"df":0,"d":{"docs":{},"df":0,"e":{"docs":{},"df":0,"f":{"docs":{},"df":0,"_":{"docs":{},"df":0,"i":{"docs":{},"df":0,"d":{"docs":{"query.html#how-the-compiler-executes-a-query":{"tf":1.0}},"df":1}}}}}},"s":{"docs":{},"df":0,"o":{"docs":{},"df":0,"m":{"docs":{},"df":0,"e":{"docs":{},"df":0,"_":{"docs":{},"df":0,"d":{"docs":{},"df":0,"e":{"docs":{},"df":0,"f":{"docs":{},"df":0,"_":{"docs":{},"df":0,"i":{"docs":{},"df":0,"d":{"docs":{"query.html#invoking-queries":{"tf":1.0}},"df":1}}}}}}}}}}}}}}},"s":{"docs":{},"df":0,".":{"docs":{},"df":0,"b":{"docs":{},"df":0,"o":{"docs":{},"df":0,"o":{"docs":{},"df":0,"l":{"docs":{"ty.html#allocating-and-working-with-types":{"tf":1.0}},"df":1}}}},"i":{"docs":{},"df":0,"3":{"docs":{},"df":0,"2":{"docs":{"ty.html#beyond-types-other-kinds-of-arena-allocated-data-structures":{"tf":1.0}},"df":1}}},"c":{"docs":{},"df":0,"h":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{"ty.html#allocating-and-working-with-types":{"tf":1.0}},"df":1}}}},"u":{"docs":{},"df":0,"3":{"docs":{},"df":0,"2":{"docs":{"ty.html#beyond-types-other-kinds-of-arena-allocated-data-structures":{"tf":1.0}},"df":1}}}}}}}}}}}},"u":{"docs":{},"df":0,"t":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{"appendix/stupid-stats.html#appendix-a-a-tutorial-on-creating-a-drop-in-replacement-for-rustc":{"tf":2.449489742783178},"type-inference.html#inference-variables":{"tf":1.0}},"df":2}}}},"n":{"docs":{},"df":0,"e":{"docs":{"rustdoc.html#hot-potato":{"tf":1.0}},"df":1}},"p":{"docs":{},"df":0,"l":{"docs":{"appendix/glossary.html#appendix-c-glossary":{"tf":1.0},"miri.html#datastructures":{"tf":1.0}},"df":2}},"r":{"docs":{},"df":0,"n":{"docs":{"traits/lowering-to-logic.html#lowering-to-logic":{"tf":1.0},"compiletest.html#adding-a-new-header-command":{"tf":1.0},"diag.html#suggestions":{"tf":1.0},"macro-expansion.html#macro-expansion":{"tf":1.0},"traits/lowering-rules.html#trait-header":{"tf":1.0},"compiler-debugging.html#debugging-llvm":{"tf":1.0},"query.html#queries-demand-driven-compilation":{"tf":1.4142135623730952},"traits/canonical-queries.html#examples":{"tf":1.0},"the-parser.html#the-parser":{"tf":1.7320508075688773},"high-level-overview.html#the-main-stages-of-compilation":{"tf":1.0},"rustc-driver.html#the-rustc-driver":{"tf":1.0},"diag.html#lint-groups":{"tf":1.7320508075688773},"traits/lowering-to-logic.html#type-checking-normal-functions":{"tf":1.0},"compiler-debugging.html#getting-logging-output":{"tf":1.7320508075688773},"traits/lowering-to-logic.html#type-checking-generic-functions-beyond-horn-clauses":{"tf":1.4142135623730952}},"df":15}}},"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{"tests/running.html#running-an-individual-test":{"tf":3.872983346207417},"compiletest.html#adding-a-new-test-file":{"tf":2.8284271247461905},"tests/intro.html#further-reading":{"tf":1.0},"compiletest.html#introduction":{"tf":4.47213595499958},"compiletest.html#implementing-the-behavior-change":{"tf":2.449489742783178},"incrcomp-debugging.html#debugging-and-testing-dependencies":{"tf":1.4142135623730952},"traits/chalk-overview.html#testing":{"tf":1.4142135623730952},"tests/adding.html#normalization":{"tf":2.449489742783178},"tests/adding.html#comment-explaining-what-the-test-is-about":{"tf":3.872983346207417},"type-inference.html#trying-equality":{"tf":1.0},"tests/adding.html#guide-to-the-ui-tests":{"tf":2.8284271247461905},"tests/adding.html#other-header-commands":{"tf":3.872983346207417},"tests/intro.html#the-compiler-testing-framework":{"tf":3.0},"compiletest.html#header-commands":{"tf":1.7320508075688773},"tests/adding.html#adding-new-tests":{"tf":3.4641016151377546},"rustdoc.html#cheat-sheet":{"tf":2.23606797749979},"tests/intro.html#testing-infrastructure":{"tf":2.6457513110645909},"ty.html#allocating-and-working-with-types":{"tf":1.0},"tests/adding.html#naming-your-test":{"tf":3.4641016151377546},"rustdoc.html#other-tricks-up-its-sleeve":{"tf":1.4142135623730952},"conventions.html#line-length":{"tf":1.0},"tests/intro.html#testing-on-emulators":{"tf":4.0},"tests/adding.html#revisions":{"tf":3.1622776601683797},"rustdoc.html#dotting-is-and-crossing-ts":{"tf":2.23606797749979},"tests/adding.html#ignoring-tests":{"tf":3.4641016151377546},"mir/regionck.html#back-to-our-example":{"tf":1.0},"traits/chalk-overview.html#parsing":{"tf":1.0},"tests/intro.html#other-tests":{"tf":4.69041575982343},"tests/intro.html#compiletest-test-suites":{"tf":4.795831523312719},"compiletest.html#compiletest":{"tf":1.0},"tests/running.html#running-tests":{"tf":3.4641016151377546},"tests/intro.html#testing-with-docker-images":{"tf":2.0},"traits/lowering-module.html#the--program_clauses_for--query":{"tf":1.4142135623730952},"how-to-build-and-run.html#creating-a-rustup-toolchain":{"tf":1.0},"tests/running.html#running-a-subset-of-the-test-suites":{"tf":3.605551275463989},"incrcomp-debugging.html#testing-the-dependency-graph":{"tf":2.6457513110645909},"rustdoc.html#from-clean-to-crate":{"tf":1.0},"compiletest.html#adding-a-new-header-command":{"tf":3.1622776601683797},"tests/adding.html#tests-that-do-not-result-in-compile-errors":{"tf":2.23606797749979},"conventions.html#formatting-and-the-tidy-script":{"tf":1.4142135623730952},"appendix/stupid-stats.html#overview-of-the-compilation-process":{"tf":1.0},"traits/lowering-module.html#unit-tests":{"tf":2.6457513110645909},"tests/adding.html#what-kind-of-test-should-i-add":{"tf":3.4641016151377546},"incrcomp-debugging.html#tracking-down-incorrect-edges":{"tf":1.0},"name-resolution.html#todo":{"tf":1.7320508075688773},"conventions.html#prefer-exhaustive-matches":{"tf":1.0},"tests/adding.html#editing-and-updating-the-reference-files":{"tf":3.0},"how-to-build-and-run.html#other-xpy-commands":{"tf":2.6457513110645909},"tests/adding.html#error-annotations":{"tf":1.0},"tests/adding.html#header-commands-configuring-rustc":{"tf":2.6457513110645909},"appendix/stupid-stats.html#what-next":{"tf":1.0},"how-to-build-and-run.html#running-xpy-and-building-a-stage1-compiler":{"tf":1.0}},"df":52,"'":{"docs":{"compiletest.html#header-commands":{"tf":1.0}},"df":1},".":{"docs":{},"df":0,"r":{"docs":{"rustdoc.html#cheat-sheet":{"tf":1.0},"rustdoc.html#other-tricks-up-its-sleeve":{"tf":1.4142135623730952}},"df":2}},"_":{"docs":{},"df":0,"t":{"docs":{},"df":0,"y":{"docs":{},"df":0,"p":{"docs":{},"df":0,"e":{"docs":{},"df":0,"<":{"docs":{},"df":0,"'":{"docs":{},"df":0,"t":{"docs":{},"df":0,"c":{"docs":{},"df":0,"x":{"docs":{},"df":0,">":{"docs":{},"df":0,"(":{"docs":{},"df":0,"t":{"docs":{},"df":0,"i":{"docs":{"ty.html#allocating-and-working-with-types":{"tf":1.0}},"df":1}}}}}}}}}}}}},"f":{"docs":{},"df":0,"o":{"docs":{},"df":0,"o":{"docs":{"tests/adding.html#revisions":{"tf":1.0}},"df":1}}}},"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"g":{"docs":{},"df":0,"/":{"docs":{},"df":0,"d":{"docs":{},"df":0,"e":{"docs":{},"df":0,"b":{"docs":{},"df":0,"u":{"docs":{},"df":0,"g":{"docs":{"tests/intro.html#testing-with-docker-images":{"tf":1.0}},"df":1}}}}}}}}},"c":{"docs":{},"df":0,"x":{"docs":{"compiletest.html#implementing-the-behavior-change":{"tf":1.0}},"df":1,"<":{"docs":{},"df":0,"'":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{"compiletest.html#implementing-the-behavior-change":{"tf":1.7320508075688773}},"df":1}}}}}}}},"p":{"docs":{},"df":0,"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"p":{"docs":{"compiletest.html#implementing-the-behavior-change":{"tf":1.0},"tests/adding.html#other-header-commands":{"tf":1.0},"compiletest.html#adding-a-new-header-command":{"tf":3.0}},"df":3}}}}}},"r":{"docs":{},"df":0,"m":{"docs":{"traits/canonicalization.html#canonicalization":{"tf":1.0},"appendix/background.html#appendix-b-background-topics":{"tf":1.0},"traits/lowering-to-logic.html#rust-traits-and-logic":{"tf":1.0},"traits/chalk-overview.html#an-overview-of-chalk":{"tf":1.0},"mir/regionck.html#mir-based-region-checking-nll":{"tf":1.0},"conventions.html#copyright-notice":{"tf":1.0},"type-inference.html#a-note-on-terminology":{"tf":1.4142135623730952},"appendix/background.html#what-is-a-control-flow-graph":{"tf":1.0},"traits/resolution.html#selection-during-translation":{"tf":1.0},"appendix/glossary.html#appendix-c-glossary":{"tf":2.8284271247461905},"appendix/background.html#what-is-a-free-region-or-a-free-variable-what-about-bound-region":{"tf":1.0},"compiletest.html#adding-a-new-header-command":{"tf":1.0},"traits/resolution.html#major-concepts":{"tf":1.0},"traits/hrtb.html#basic-matching-and-skolemization-leaks":{"tf":1.0},"traits/goals-and-clauses.html#goals-and-clauses":{"tf":1.0},"appendix/stupid-stats.html#what-next":{"tf":1.0},"tests/adding.html#header-commands-configuring-rustc":{"tf":1.0},"variance.html#the-algorithm":{"tf":2.449489742783178},"mir/index.html#key-mir-vocabulary":{"tf":1.0},"traits/index.html#trait-solving-new-style":{"tf":1.4142135623730952}},"df":20,"i":{"docs":{},"df":0,"n":{"docs":{"mir/visitor.html#mir-visitor":{"tf":1.0},"mir/index.html#key-mir-vocabulary":{"tf":2.23606797749979},"mir/index.html#mir-data-types":{"tf":1.4142135623730952},"appendix/background.html#what-is-a-control-flow-graph":{"tf":1.4142135623730952},"traits/goals-and-clauses.html#coinductive-goals":{"tf":1.0},"mir/regionck.html#representing-the-values-of-a-region-variable":{"tf":1.0},"macro-expansion.html#the-macro-parser":{"tf":1.4142135623730952},"type-inference.html#region-constraints":{"tf":1.0}},"df":8,"o":{"docs":{},"df":0,"l":{"docs":{},"df":0,"o":{"docs":{},"df":0,"g":{"docs":{"type-inference.html#a-note-on-terminology":{"tf":1.4142135623730952}},"df":1}}}}}}},"r":{"docs":{},"df":0,"i":{"docs":{},"df":0,"b":{"docs":{},"df":0,"l":{"docs":{"hir.html#identifiers-in-the-hir":{"tf":1.0}},"df":1}}}}},"n":{"docs":{},"df":0,"d":{"docs":{"conventions.html#how-to-structure-your-pr":{"tf":1.0},"hir.html#identifiers-in-the-hir":{"tf":1.0},"ty.html#import-conventions":{"tf":1.0},"appendix/glossary.html#appendix-c-glossary":{"tf":1.0},"high-level-overview.html#crate-structure":{"tf":1.0},"ty.html#the-tcx-and-how-it-uses-lifetimes":{"tf":1.0},"query.html#how-the-compiler-executes-a-query":{"tf":1.0},"type-inference.html#region-constraints":{"tf":1.0}},"df":8}},"x":{"docs":{},"df":0,"t":{"docs":{"variance.html#addendum-variance-on-traits":{"tf":1.0},"the-parser.html#the-parser":{"tf":1.0},"rustdoc.html#from-clean-to-crate":{"tf":1.0},"appendix/glossary.html#appendix-c-glossary":{"tf":1.0},"diag.html#suggestions":{"tf":1.0},"rustdoc.html#hot-potato":{"tf":1.4142135623730952},"compiler-debugging.html#getting-logging-output":{"tf":1.4142135623730952},"traits/bibliography.html#bibliography":{"tf":1.0},"mir/borrowck.html#major-phases-of-the-borrow-checker":{"tf":1.0},"compiletest.html#adding-a-new-header-command":{"tf":1.0}},"df":10}},"c":{"docs":{},"df":0,"h":{"docs":{},"df":0,"n":{"docs":{},"df":0,"i":{"docs":{},"df":0,"c":{"docs":{"appendix/glossary.html#appendix-c-glossary":{"tf":1.4142135623730952},"appendix/stupid-stats.html#overview-of-the-compilation-process":{"tf":1.0}},"df":2},"q":{"docs":{},"df":0,"u":{"docs":{"traits/index.html#trait-solving-new-style":{"tf":1.0}},"df":1}}}}}},"l":{"docs":{},"df":0,"l":{"docs":{"mir/index.html#key-mir-vocabulary":{"tf":1.0},"type-inference.html#enforcing-equality--subtyping":{"tf":1.0},"traits/caching.html#an-example":{"tf":1.0},"traits/canonical-queries.html#a-trait-query-in-rustc":{"tf":1.4142135623730952},"tests/adding.html#normalization":{"tf":1.0},"mir/regionck.html#universes-and-skolemized-region-elements":{"tf":1.0},"traits/canonical-queries.html#the-traditional-interactive-prolog-query":{"tf":1.0}},"df":7}},"m":{"docs":{},"df":0,"p":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{"type-inference.html#creating-an-inference-context":{"tf":1.0},"mir/index.html#key-mir-vocabulary":{"tf":2.0},"ty.html#allocating-and-working-with-types":{"tf":1.0}},"df":3}}}}}}}},"w":{"docs":{},"df":0,"i":{"docs":{},"df":0,"c":{"docs":{},"df":0,"e":{"docs":{"mir/passes.html#stealing":{"tf":1.0},"query.html#how-the-compiler-executes-a-query":{"tf":1.0},"macro-expansion.html#example":{"tf":1.0},"mir/borrowck.html#mir-borrow-check":{"tf":1.0},"macro-expansion.html#the-macro-parser":{"tf":1.4142135623730952},"ty.html#allocating-and-working-with-types":{"tf":1.0}},"df":6}},"s":{"docs":{},"df":0,"t":{"docs":{"traits/resolution.html#selection-during-translation":{"tf":1.0}},"df":1}}},"e":{"docs":{},"df":0,"a":{"docs":{},"df":0,"k":{"docs":{"how-to-build-and-run.html#how-to-build-the-compiler-and-run-what-you-built":{"tf":1.0},"tests/adding.html#revisions":{"tf":1.0}},"df":2}}},"o":{"docs":{"appendix/stupid-stats.html#the-driver-customisation-apis":{"tf":1.0},"miri.html#datastructures":{"tf":1.4142135623730952},"appendix/glossary.html#appendix-c-glossary":{"tf":1.4142135623730952},"traits/specialization.html#specialization":{"tf":1.0},"mir/visitor.html#mir-visitor":{"tf":1.0},"mir/regionck.html#subtyping-and-skolemization":{"tf":1.0},"traits/caching.html#where-clauses-and-the-local-vs-global-cache":{"tf":1.0},"traits/hrtb.html#basic-matching-and-skolemization-leaks":{"tf":1.4142135623730952},"traits/canonicalization.html#canonicalization":{"tf":1.4142135623730952},"mir/regionck.html#mir-based-region-checking-nll":{"tf":1.4142135623730952},"traits/resolution.html#overview":{"tf":1.0},"type-checking.html#type-collection":{"tf":1.0},"traits/associated-types.html#projection-equality":{"tf":2.0},"traits/canonical-queries.html#a-trait-query-in-rustc":{"tf":1.0},"the-parser.html#the-parser":{"tf":1.0},"type-inference.html#enforcing-equality--subtyping":{"tf":1.0},"high-level-overview.html#the-main-stages-of-compilation":{"tf":1.0},"mir/index.html#key-mir-vocabulary":{"tf":1.4142135623730952},"type-inference.html#region-constraints":{"tf":1.0},"type-inference.html#trying-equality":{"tf":1.7320508075688773},"mir/regionck.html#another-example":{"tf":1.7320508075688773},"macro-expansion.html#the-macro-parser":{"tf":1.4142135623730952},"mir/regionck.html#final-example":{"tf":1.0},"rustdoc.html#from-crate-to-clean":{"tf":1.0},"query.html#adding-a-new-kind-of-query":{"tf":1.0},"variance.html#dependency-graph-management":{"tf":1.0},"traits/chalk-overview.html#well-formedness-checks":{"tf":1.0},"incremental-compilation.html#the-basic-algorithm":{"tf":1.0},"const-eval.html#constant-evaluation":{"tf":1.0},"variance.html#variance-and-object-types":{"tf":1.0},"traits/lowering-rules.html#trait-header":{"tf":1.0},"mir/borrowck.html#mir-borrow-check":{"tf":1.0},"diag.html#error-messages":{"tf":1.0},"traits/associated-types.html#integration-with-unification":{"tf":1.4142135623730952},"traits/canonical-queries.html#examples":{"tf":1.4142135623730952},"rustdoc.html#the-walking-tour-of-rustdoc":{"tf":1.0},"macro-expansion.html#macro-expansion":{"tf":1.0},"mir/regionck.html#skolemization-and-outlives-constraints":{"tf":1.0},"traits/resolution.html#candidate-assembly":{"tf":1.4142135623730952},"query.html#cycles-between-queries":{"tf":1.0},"mir/regionck.html#extending-the-universal-regions-check":{"tf":1.0},"ty.html#the-tcx-and-how-it-uses-lifetimes":{"tf":1.0},"type-inference.html#extracting-region-constraints":{"tf":1.0},"traits/lowering-rules.html#associated-type-declarations":{"tf":1.4142135623730952},"method-lookup.html#candidate-assembly":{"tf":1.4142135623730952},"type-inference.html#subtyping-obligations":{"tf":1.4142135623730952},"traits/goals-and-clauses.html#goals-and-clauses-meta-structure":{"tf":1.0},"appendix/stupid-stats.html#overview-of-the-compilation-process":{"tf":1.0},"mir/regionck.html#back-to-our-example":{"tf":1.0},"method-lookup.html#method-lookup":{"tf":1.0},"mir/regionck.html#what-is-a-universe":{"tf":1.0},"traits/resolution.html#selection":{"tf":1.0},"traits/canonicalization.html#canonicalizing-the-query":{"tf":1.0},"hir.html#identifiers-in-the-hir":{"tf":1.4142135623730952},"query.html#how-the-compiler-executes-a-query":{"tf":1.4142135623730952}},"df":55}},">":{"docs":{},"df":0,"(":{"docs":{},"df":0,"t":{"docs":{"mir/regionck.html#what-is-a-universe":{"tf":1.7320508075688773}},"df":1}}},"m":{"docs":{},"df":0,"p":{"docs":{},"df":0,"1":{"docs":{"mir/index.html#key-mir-vocabulary":{"tf":1.4142135623730952}},"df":1}}},"y":{"docs":{"ty.html#the--ty--module-representing-types":{"tf":1.7320508075688773},"appendix/glossary.html#appendix-c-glossary":{"tf":1.0},"appendix/code-index.html#appendix-d-code-index":{"tf":1.4142135623730952},"ty.html#allocating-and-working-with-types":{"tf":2.0},"query.html#invoking-queries":{"tf":1.0},"traits/lowering-rules.html#transforming-the-lowered-where-clauses":{"tf":2.0},"type-inference.html#creating-an-inference-context":{"tf":1.4142135623730952},"param_env.html#parameter-environment":{"tf":1.0},"ty.html#import-conventions":{"tf":2.0}},"df":9,"c":{"docs":{},"df":0,"t":{"docs":{},"df":0,"x":{"docs":{},"df":0,"t":{"docs":{"rustc-driver.html#the-rustc-driver":{"tf":1.0},"query.html#adding-a-new-kind-of-query":{"tf":1.0},"ty.html#the--ty--module-representing-types":{"tf":1.0},"const-eval.html#constant-evaluation":{"tf":1.0},"rustdoc.html#from-soup-to-nuts":{"tf":1.0},"ty.html#the-tcx-and-how-it-uses-lifetimes":{"tf":1.7320508075688773},"ty.html#import-conventions":{"tf":1.4142135623730952},"miri.html#miri":{"tf":1.0}},"df":8,"<":{"docs":{},"df":0,"'":{"docs":{},"df":0,"c":{"docs":{},"df":0,"x":{"docs":{"mir/visitor.html#mir-visitor":{"tf":1.0},"appendix/code-index.html#appendix-d-code-index":{"tf":1.0},"query.html#how-the-compiler-executes-a-query":{"tf":1.4142135623730952}},"df":3}},"a":{"docs":{"compiler-debugging.html#expensive-operations-in-logs":{"tf":1.0},"ty.html#the-tcx-and-how-it-uses-lifetimes":{"tf":1.7320508075688773}},"df":2}}}}}}},".":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"i":{"docs":{"ty.html#allocating-and-working-with-types":{"tf":1.4142135623730952}},"df":1}}}},"p":{"docs":{},"df":0,"e":{"docs":{"how-to-build-and-run.html#running-xpy-and-building-a-stage1-compiler":{"tf":1.0},"variance.html#addendum-variance-on-traits":{"tf":2.23606797749979},"mir/regionck.html#universal-regions":{"tf":1.0},"rustc-driver.html#a-note-on-lifetimes":{"tf":1.0},"mir/visitor.html#mir-visitor":{"tf":1.7320508075688773},"traits/lowering-rules.html#associated-type-values":{"tf":2.0},"traits/resolution.html#major-concepts":{"tf":1.7320508075688773},"method-lookup.html#method-lookup":{"tf":1.7320508075688773},"traits/canonicalization.html#canonicalization":{"tf":2.0},"traits/caching.html#caching-and-subtle-considerations-therewith":{"tf":1.7320508075688773},"ty.html#allocating-and-working-with-types":{"tf":4.795831523312719},"appendix/glossary.html#appendix-c-glossary":{"tf":5.291502622129181},"traits/resolution.html#selection":{"tf":1.4142135623730952},"traits/canonical-queries.html#the-traditional-interactive-prolog-query":{"tf":1.0},"variance.html#constraints":{"tf":1.7320508075688773},"variance.html#dependency-graph-management":{"tf":1.4142135623730952},"tests/adding.html#normalization":{"tf":1.4142135623730952},"appendix/background.html#what-is-a-free-region-or-a-free-variable-what-about-bound-region":{"tf":1.7320508075688773},"hir.html#out-of-band-storage-and-the--crate--type":{"tf":1.4142135623730952},"traits/resolution.html#overview":{"tf":1.0},"traits/associated-types.html#skolemized-associated-types":{"tf":3.605551275463989},"traits/chalk-overview.html#intermediate-representation-ir":{"tf":1.0},"high-level-overview.html#the-main-stages-of-compilation":{"tf":3.605551275463989},"name-resolution.html#namespaces":{"tf":2.23606797749979},"query.html#adding-a-new-kind-of-query":{"tf":4.0},"rustdoc.html#the-walking-tour-of-rustdoc":{"tf":1.0},"query.html#how-the-compiler-executes-a-query":{"tf":1.0},"the-parser.html#the-parser":{"tf":1.0},"traits/resolution.html#candidate-assembly":{"tf":3.7416573867739415},"traits/canonical-queries.html#examples":{"tf":3.872983346207417},"incrcomp-debugging.html#dumping-the-graph":{"tf":1.0},"traits/associated-types.html#associated-type-projection-and-normalization":{"tf":3.605551275463989},"traits/goals-and-clauses.html#goals-and-clauses-meta-structure":{"tf":1.0},"traits/caching.html#an-example":{"tf":1.0},"traits/chalk-overview.html#well-formedness-checks":{"tf":1.0},"mir/regionck.html#what-is-a-universe":{"tf":3.1622776601683797},"variance.html#the-algorithm":{"tf":3.0},"traits/lowering-to-logic.html#type-checking-generic-functions-beyond-horn-clauses":{"tf":3.605551275463989},"rustdoc.html#from-clean-to-crate":{"tf":1.0},"type-inference.html#inference-variables":{"tf":3.7416573867739415},"query.html#invoking-queries":{"tf":1.0},"diag.html#suggestions":{"tf":1.4142135623730952},"appendix/code-index.html#appendix-d-code-index":{"tf":2.449489742783178},"type-inference.html#subtyping-obligations":{"tf":1.7320508075688773},"traits/canonical-queries.html#a-trait-query-in-rustc":{"tf":2.0},"type-checking.html#type-checking":{"tf":2.23606797749979},"traits/associated-types.html#equality-and-associated-types":{"tf":1.7320508075688773},"rustc-driver.html#the-rustc-driver":{"tf":1.4142135623730952},"method-lookup.html#the-probe-phase":{"tf":1.0},"traits/specialization.html#specialization":{"tf":1.7320508075688773},"miri.html#miri":{"tf":1.4142135623730952},"macro-expansion.html#the-macro-parser":{"tf":1.0},"mir/regionck.html#mir-based-region-checking-nll":{"tf":1.7320508075688773},"appendix/background.html#what-is-co--and-contra-variance":{"tf":1.0},"traits/canonicalization.html#canonicalizing-the-query-result":{"tf":1.0},"tests/adding.html#revisions":{"tf":1.0},"traits/lowering-rules.html#notation":{"tf":1.4142135623730952},"variance.html#variance-and-associated-types":{"tf":3.0},"mir/borrowck.html#major-phases-of-the-borrow-checker":{"tf":1.0},"traits/index.html#trait-solving-new-style":{"tf":2.0},"ty.html#the--ty--module-representing-types":{"tf":2.0},"rustdoc.html#from-crate-to-clean":{"tf":2.23606797749979},"traits/goals-and-clauses.html#coinductive-goals":{"tf":2.23606797749979},"traits/canonicalization.html#canonicalizing-the-query":{"tf":1.4142135623730952},"name-resolution.html#name-resolution":{"tf":1.0},"mir/regionck.html#universes-and-skolemized-region-elements":{"tf":1.0},"miri.html#interpretation":{"tf":1.0},"type-inference.html#creating-an-inference-context":{"tf":1.7320508075688773},"traits/lowering-rules.html#associated-type-declarations":{"tf":2.8284271247461905},"type-checking.html#type-collection":{"tf":3.1622776601683797},"param_env.html#parameter-environment":{"tf":1.7320508075688773},"mir/index.html#key-mir-vocabulary":{"tf":1.4142135623730952},"mir/index.html#introduction-to-mir":{"tf":1.0},"type-inference.html#enforcing-equality--subtyping":{"tf":2.449489742783178},"diag.html#error-messages":{"tf":1.0},"mir/regionck.html#skolemization-and-universes":{"tf":1.0},"miri.html#datastructures":{"tf":1.0},"traits/lowering-to-logic.html#type-checking-normal-functions":{"tf":3.3166247903554},"traits/goals-and-clauses.html#domain-goals":{"tf":4.358898943540674},"method-lookup.html#candidate-assembly":{"tf":3.4641016151377546},"mir/regionck.html#subtyping-and-skolemization":{"tf":1.7320508075688773},"type-inference.html#region-constraints":{"tf":1.0},"rustdoc.html#cheat-sheet":{"tf":1.0},"type-inference.html#type-inference":{"tf":3.0},"mir/regionck.html#final-example":{"tf":1.4142135623730952},"variance.html#variance-and-object-types":{"tf":3.7416573867739415},"ty.html#beyond-types-other-kinds-of-arena-allocated-data-structures":{"tf":2.23606797749979},"high-level-overview.html#crate-structure":{"tf":1.4142135623730952},"query.html#queries-demand-driven-compilation":{"tf":1.0},"traits/canonical-queries.html#canonical-queries":{"tf":1.7320508075688773},"variance.html#trait-variance-and-vtable-resolution":{"tf":3.3166247903554},"incrcomp-debugging.html#tracking-down-incorrect-edges":{"tf":1.0},"ty.html#the-tcx-and-how-it-uses-lifetimes":{"tf":3.0},"traits/hrtb.html#basic-matching-and-skolemization-leaks":{"tf":1.7320508075688773},"mir/passes.html#mir-passes":{"tf":1.0},"variance.html#variance-of-type-and-lifetime-parameters":{"tf":3.872983346207417},"traits/associated-types.html#projection-equality":{"tf":2.23606797749979},"type-inference.html#trying-equality":{"tf":1.4142135623730952},"method-lookup.html#steps":{"tf":1.7320508075688773},"appendix/stupid-stats.html#overview-of-the-compilation-process":{"tf":1.4142135623730952},"traits/lowering-to-logic.html#rust-traits-and-logic":{"tf":2.23606797749979},"mir/regionck.html#the-mir-type-check":{"tf":1.4142135623730952},"mir/regionck.html#another-example":{"tf":1.0},"method-lookup.html#candidate-search":{"tf":2.0},"name-resolution.html#scopes-and-ribs":{"tf":1.4142135623730952},"mir/index.html#mir-data-types":{"tf":2.6457513110645909},"type-inference.html#extracting-region-constraints":{"tf":1.4142135623730952},"traits/resolution.html#confirmation":{"tf":2.0},"mir/passes.html#implementing-and-registering-a-pass":{"tf":1.0},"ty.html#import-conventions":{"tf":1.4142135623730952},"traits/resolution.html#selection-during-translation":{"tf":2.0},"traits/associated-types.html#integration-with-unification":{"tf":2.0},"traits/chalk-overview.html#lowering":{"tf":1.4142135623730952}},"df":113,"_":{"docs":{},"df":0,"o":{"docs":{},"df":0,"f":{"docs":{"query.html#invoking-queries":{"tf":1.0},"query.html#adding-a-new-kind-of-query":{"tf":1.4142135623730952},"query.html#how-the-compiler-executes-a-query":{"tf":2.23606797749979}},"df":3,"<":{"docs":{},"df":0,"'":{"docs":{},"df":0,"t":{"docs":{},"df":0,"c":{"docs":{},"df":0,"x":{"docs":{"query.html#adding-a-new-kind-of-query":{"tf":1.4142135623730952}},"df":1}}}}},"(":{"docs":{},"df":0,"d":{"docs":{},"df":0,"e":{"docs":{},"df":0,"f":{"docs":{},"df":0,"_":{"docs":{},"df":0,"i":{"docs":{},"df":0,"d":{"docs":{"query.html#queries-demand-driven-compilation":{"tf":1.0}},"df":1}}}}}}}}}},"v":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{},"df":0,"s":{"docs":{},"df":0,"<":{"docs":{},"df":0,"'":{"docs":{},"df":0,"t":{"docs":{},"df":0,"c":{"docs":{},"df":0,"x":{"docs":{"ty.html#allocating-and-working-with-types":{"tf":1.0}},"df":1}}}}}}}}}}}}},"o":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{},"df":0,"v":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"(":{"docs":{},"df":0,"t":{"docs":{"traits/lowering-module.html#unit-tests":{"tf":1.0}},"df":1}}}}}}}}},"f":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"m":{"docs":{},"df":0,"(":{"docs":{},"df":0,"d":{"docs":{},"df":0,"e":{"docs":{},"df":0,"f":{"docs":{},"df":0,"i":{"docs":{},"df":0,"d":{"docs":{"query.html#adding-a-new-kind-of-query":{"tf":1.4142135623730952}},"df":1}}}}}}}}}}}},"/":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"g":{"docs":{},"df":0,"i":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{"appendix/glossary.html#appendix-c-glossary":{"tf":1.0},"variance.html#the-algorithm":{"tf":1.0}},"df":2}}}}}},"l":{"docs":{},"df":0,"i":{"docs":{},"df":0,"f":{"docs":{},"df":0,"e":{"docs":{},"df":0,"t":{"docs":{},"df":0,"i":{"docs":{},"df":0,"m":{"docs":{"appendix/glossary.html#appendix-c-glossary":{"tf":1.4142135623730952}},"df":1}}}}}}}},"'":{"docs":{"param_env.html#parameter-environment":{"tf":1.0}},"df":1},"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{"type-inference.html#enforcing-equality--subtyping":{"tf":1.0}},"df":1}}}}},"c":{"docs":{},"df":0,"k":{"docs":{},"df":0,"t":{"docs":{"high-level-overview.html#the-main-stages-of-compilation":{"tf":1.0},"incrcomp-debugging.html#dumping-the-graph":{"tf":2.449489742783178}},"df":2,"a":{"docs":{},"df":0,"b":{"docs":{},"df":0,"l":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"(":{"docs":{},"df":0,"b":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{"incrcomp-debugging.html#testing-the-dependency-graph":{"tf":1.0},"incrcomp-debugging.html#dumping-the-graph":{"tf":1.0},"incrcomp-debugging.html#tracking-down-incorrect-edges":{"tf":1.0}},"df":3}}}}}}}}}}},"h":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"k":{"docs":{"rustc-driver.html#the-rustc-driver":{"tf":1.0}},"df":1}}}}},"s":{"docs":{},"df":0,"/":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"g":{"docs":{},"df":0,"i":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{"traits/canonicalization.html#canonicalization":{"tf":1.0}},"df":1}}}}}}}}},"i":{"docs":{},"df":0,"c":{"docs":{"ty.html#beyond-types-other-kinds-of-arena-allocated-data-structures":{"tf":1.0},"mir/visitor.html#mir-visitor":{"tf":1.0},"hir.html#hir-bodies":{"tf":1.0},"compiler-debugging.html#getting-logging-output":{"tf":1.0},"compiletest.html#adding-a-new-header-command":{"tf":1.7320508075688773},"query.html#adding-a-new-kind-of-query":{"tf":1.4142135623730952},"tests/adding.html#adding-new-tests":{"tf":1.0},"type-inference.html#enforcing-equality--subtyping":{"tf":1.0},"traits/canonical-queries.html#a-trait-query-in-rustc":{"tf":1.4142135623730952},"query.html#cycles-between-queries":{"tf":1.0},"conventions.html#copyright-notice":{"tf":1.0},"tests/intro.html#other-tests":{"tf":1.4142135623730952},"mir/passes.html#implementing-and-registering-a-pass":{"tf":1.0},"tests/intro.html#testing-with-docker-images":{"tf":1.0},"walkthrough.html#walkthrough-a-typical-contribution":{"tf":1.4142135623730952},"appendix/glossary.html#appendix-c-glossary":{"tf":1.0},"method-lookup.html#method-lookup":{"tf":1.0},"compiletest.html#introduction":{"tf":1.4142135623730952}},"df":18}},"o":{"docs":{"name-resolution.html#name-resolution":{"tf":1.0}},"df":1}},":":{"docs":{},"df":0,":":{"docs":{},"df":0,"p":{"docs":{},"df":0,"o":{"docs":{},"df":0,"l":{"docs":{},"df":0,"y":{"docs":{},"df":0,"t":{"docs":{},"df":0,"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"f":{"docs":{"traits/hrtb.html#basic-matching-and-skolemization-leaks":{"tf":1.0}},"df":1}}}}}}}}}}}},"m":{"docs":{},"df":0,"a":{"docs":{},"df":0,"p":{"docs":{},"df":0,"s":{"docs":{},"df":0,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"q":{"docs":{},"df":0,"u":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{"query.html#cycles-between-queries":{"tf":1.0}},"df":1,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"t":{"docs":{},"df":0,"y":{"docs":{},"df":0,"p":{"docs":{},"df":0,"e":{"docs":{},"df":0,"_":{"docs":{},"df":0,"o":{"docs":{},"df":0,"f":{"docs":{"query.html#adding-a-new-kind-of-query":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}},"k":{"docs":{},"df":0,"e":{"docs":{},"df":0,"y":{"docs":{},"df":0,"s":{"docs":{},"df":0,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"k":{"docs":{},"df":0,"e":{"docs":{},"df":0,"y":{"docs":{"query.html#adding-a-new-kind-of-query":{"tf":1.0}},"df":1}}}}}}}}}}}}}}},"{":{"docs":{},"df":0,"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"l":{"docs":{},"df":0,"f":{"docs":{"ty.html#import-conventions":{"tf":1.0}},"df":1}}}}},"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{},"df":0,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{"query.html#adding-a-new-kind-of-query":{"tf":1.0}},"df":1}}}}}}}}},"t":{"docs":{},"df":0,"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"f":{"docs":{},"df":0,"<":{"docs":{},"df":0,"'":{"docs":{},"df":0,"t":{"docs":{},"df":0,"c":{"docs":{},"df":0,"x":{"docs":{"ty.html#import-conventions":{"tf":1.0}},"df":1}}}}}}}}}}}},"y":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"y":{"docs":{},"df":0,"(":{"docs":{},"df":0,"e":{"docs":{},"df":0,"l":{"docs":{},"df":0,"e":{"docs":{},"df":0,"m":{"docs":{},"df":0,"_":{"docs":{},"df":0,"t":{"docs":{},"df":0,"i":{"docs":{"ty.html#allocating-and-working-with-types":{"tf":1.0}},"df":1}}}}}}}}}}}}}}},"q":{"docs":{},"df":0,"u":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"f":{"docs":{},"df":0,"o":{"docs":{},"df":0,"o":{"docs":{},"df":0,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"f":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"c":{"docs":{"mir/passes.html#stealing":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"df":0,"<":{"docs":{},"df":0,"'":{"docs":{},"df":0,"t":{"docs":{},"df":0,"c":{"docs":{},"df":0,"x":{"docs":{"ty.html#allocating-and-working-with-types":{"tf":1.0}},"df":1}}}}}},"<":{"docs":{},"df":0,"'":{"docs":{},"df":0,"t":{"docs":{},"df":0,"c":{"docs":{},"df":0,"x":{"docs":{"appendix/code-index.html#appendix-d-code-index":{"tf":1.0},"type-checking.html#type-collection":{"tf":1.4142135623730952},"query.html#adding-a-new-kind-of-query":{"tf":1.7320508075688773},"query.html#how-the-compiler-executes-a-query":{"tf":1.0},"ty.html#allocating-and-working-with-types":{"tf":2.23606797749979},"type-inference.html#inference-variables":{"tf":1.0}},"df":6}}}}}},"=":{"docs":{},"df":0,"i":{"docs":{},"df":0,"s":{"docs":{},"df":0,"i":{"docs":{},"df":0,"z":{"docs":{"traits/resolution.html#selection-during-translation":{"tf":1.0}},"df":1}}}},"=":{"docs":{},"df":0,"u":{"docs":{"variance.html#variance-and-associated-types":{"tf":1.0}},"df":1}}},"h":{"docs":{},"df":0,"e":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{"appendix/glossary.html#appendix-c-glossary":{"tf":1.4142135623730952}},"df":1}}},"m":{"docs":{},"df":0,"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"l":{"docs":{},"df":0,"v":{"docs":{"compiletest.html#introduction":{"tf":1.0},"incremental-compilation.html#the-basic-algorithm":{"tf":1.0}},"df":2}}}}},"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"w":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{},"df":0,"h":{"docs":{"traits/caching.html#caching-and-subtle-considerations-therewith":{"tf":1.4142135623730952}},"df":1}}}},"'":{"docs":{"rustdoc.html#the-walking-tour-of-rustdoc":{"tf":1.0},"rustdoc.html#from-crate-to-clean":{"tf":1.0},"name-resolution.html#scopes-and-ribs":{"tf":1.0},"compiler-debugging.html#getting-logging-output":{"tf":1.0},"rustdoc.html#from-clean-to-crate":{"tf":1.0},"miri.html#interpretation":{"tf":1.4142135623730952},"rustdoc.html#dotting-is-and-crossing-ts":{"tf":1.4142135623730952},"mir/passes.html#implementing-and-registering-a-pass":{"tf":1.0}},"df":8},"s":{"docs":{},"df":0,"a":{"docs":{"traits/bibliography.html#bibliography":{"tf":1.0}},"df":1}},"f":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{"mir/passes.html#implementing-and-registering-a-pass":{"tf":1.0},"traits/canonicalization.html#canonicalizing-the-query":{"tf":1.0},"query.html#how-the-compiler-executes-a-query":{"tf":1.0},"mir/regionck.html#another-example":{"tf":1.0},"tests/running.html#running-a-subset-of-the-test-suites":{"tf":1.0},"incremental-compilation.html#the-basic-algorithm":{"tf":1.0},"traits/resolution.html#candidate-assembly":{"tf":1.0},"tests/adding.html#revisions":{"tf":1.0},"traits/resolution.html#selection":{"tf":1.0},"traits/caching.html#an-example":{"tf":1.0},"incrcomp-debugging.html#dumping-the-graph":{"tf":1.0},"traits/canonical-queries.html#examples":{"tf":1.7320508075688773},"name-resolution.html#overall-strategy":{"tf":1.4142135623730952},"traits/caching.html#where-clauses-and-the-local-vs-global-cache":{"tf":1.0},"mir/passes.html#stealing":{"tf":1.4142135623730952},"traits/goals-and-clauses.html#coinductive-goals":{"tf":1.0},"traits/lowering-rules.html#trait-header":{"tf":1.0},"method-lookup.html#method-lookup":{"tf":1.0}},"df":18}}}}},"y":{"docs":{},"df":0,"'":{"docs":{},"df":0,"r":{"docs":{"appendix/stupid-stats.html#what-next":{"tf":1.0},"rustdoc.html#cheat-sheet":{"tf":1.0},"variance.html#trait-variance-and-vtable-resolution":{"tf":1.0}},"df":3}}},"t":{"docs":{"traits/index.html#trait-solving-new-style":{"tf":1.0}},"df":1}},"i":{"docs":{},"df":0,"r":{"docs":{},"df":0,"d":{"docs":{"rustc-driver.html#the-rustc-driver":{"tf":1.0}},"df":1}},"n":{"docs":{"appendix/glossary.html#appendix-c-glossary":{"tf":1.0}},"df":1,"l":{"docs":{},"df":0,"t":{"docs":{},"df":0,"o":{"docs":{"appendix/glossary.html#appendix-c-glossary":{"tf":1.0}},"df":1}}},"g":{"docs":{"traits/goals-and-clauses.html#domain-goals":{"tf":1.0},"appendix/stupid-stats.html#compilercalls":{"tf":1.0},"mir/passes.html#implementing-and-registering-a-pass":{"tf":1.0},"tests/adding.html#what-kind-of-test-should-i-add":{"tf":1.0},"appendix/stupid-stats.html#appendix-a-a-tutorial-on-creating-a-drop-in-replacement-for-rustc":{"tf":1.4142135623730952},"type-inference.html#enforcing-equality--subtyping":{"tf":1.0},"traits/canonical-queries.html#canonical-queries":{"tf":1.0},"how-to-build-and-run.html#running-xpy-and-building-a-stage1-compiler":{"tf":1.7320508075688773},"how-to-build-and-run.html#other-xpy-commands":{"tf":1.0},"the-parser.html#the-parser":{"tf":1.0},"traits/canonicalization.html#canonicalization":{"tf":1.0},"appendix/background.html#what-is-a-free-region-or-a-free-variable-what-about-bound-region":{"tf":1.0},"traits/hrtb.html#basic-matching-and-skolemization-leaks":{"tf":1.0},"tests/running.html#running-an-individual-test":{"tf":1.0},"name-resolution.html#todo":{"tf":1.0},"conventions.html#line-length":{"tf":1.0},"traits/lowering-rules.html#trait-header":{"tf":1.4142135623730952},"rustdoc.html#from-clean-to-crate":{"tf":1.0},"type-inference.html#type-inference":{"tf":2.0},"traits/chalk-overview.html#lowering":{"tf":1.0},"appendix/glossary.html#appendix-c-glossary":{"tf":1.4142135623730952},"name-resolution.html#scopes-and-ribs":{"tf":1.0},"method-lookup.html#steps":{"tf":1.0},"about-this-guide.html#about-this-guide":{"tf":1.0},"method-lookup.html#method-lookup":{"tf":1.0},"traits/associated-types.html#associated-type-projection-and-normalization":{"tf":1.0},"compiler-debugging.html#getting-logging-output":{"tf":1.0},"mir/regionck.html#what-is-a-universe":{"tf":1.4142135623730952},"traits/chalk-overview.html#parsing":{"tf":1.0},"mir/index.html#mir-data-types":{"tf":1.0},"tests/adding.html#adding-new-tests":{"tf":1.0},"type-inference.html#region-constraints":{"tf":1.0},"mir/visitor.html#mir-visitor":{"tf":1.0},"conventions.html#how-to-structure-your-pr":{"tf":1.0},"traits/canonical-queries.html#a-trait-query-in-rustc":{"tf":1.0},"incremental-compilation.html#incremental-compilation":{"tf":1.0},"type-checking.html#type-collection":{"tf":1.4142135623730952},"high-level-overview.html#the-main-stages-of-compilation":{"tf":1.7320508075688773},"traits/chalk-overview.html#intermediate-representation-ir":{"tf":1.4142135623730952},"rustc-driver.html#the-rustc-driver":{"tf":1.0},"rustdoc.html#hot-potato":{"tf":1.0},"hir.html#out-of-band-storage-and-the--crate--type":{"tf":1.4142135623730952},"param_env.html#parameter-environment":{"tf":2.0},"appendix/stupid-stats.html#overview-of-the-compilation-process":{"tf":1.0},"traits/associated-types.html#integration-with-unification":{"tf":1.0},"tests/intro.html#compiletest-test-suites":{"tf":1.7320508075688773},"tests/intro.html#other-tests":{"tf":1.4142135623730952},"appendix/stupid-stats.html#what-next":{"tf":1.0},"traits/resolution.html#trait-resolution-old-style":{"tf":1.0},"traits/canonical-queries.html#the-traditional-interactive-prolog-query":{"tf":1.0},"tests/intro.html#testing-with-docker-images":{"tf":1.0},"type-inference.html#creating-an-inference-context":{"tf":1.0},"rustdoc.html#dotting-is-and-crossing-ts":{"tf":1.0},"conventions.html#use-todo-comments-for-things-you-dont-want-to-forget":{"tf":1.4142135623730952},"ty.html#allocating-and-working-with-types":{"tf":1.0},"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.4142135623730952},"miri.html#allocations":{"tf":1.0},"mir/borrowck.html#major-phases-of-the-borrow-checker":{"tf":1.4142135623730952},"ty.html#the-tcx-and-how-it-uses-lifetimes":{"tf":1.0},"tests/running.html#running-a-subset-of-the-test-suites":{"tf":1.0},"mir/passes.html#seeing-how-the-mir-changes-as-the-compiler-executes":{"tf":1.0},"hir.html#identifiers-in-the-hir":{"tf":1.4142135623730952},"type-inference.html#subtyping-obligations":{"tf":1.0},"rustdoc.html#from-crate-to-clean":{"tf":1.0},"query.html#queries-demand-driven-compilation":{"tf":1.0},"traits/canonicalization.html#canonicalizing-the-query-result":{"tf":1.0}},"df":66,"s":{"docs":{},"df":0,".":{"docs":{},"df":0,"p":{"docs":{},"df":0,"u":{"docs":{},"df":0,"s":{"docs":{},"df":0,"h":{"docs":{},"df":0,"(":{"docs":{},"df":0,"\"":{"docs":{},"df":0,"t":{"docs":{},"df":0,"h":{"docs":{"type-inference.html#type-inference":{"tf":1.0}},"df":1}}}}}}}}}}},"k":{"docs":{"incrcomp-debugging.html#tracking-down-incorrect-edges":{"tf":1.0},"incrcomp-debugging.html#dumping-the-graph":{"tf":1.0},"compiler-debugging.html#getting-logging-output":{"tf":1.0},"appendix/glossary.html#appendix-c-glossary":{"tf":1.0},"variance.html#trait-variance-and-vtable-resolution":{"tf":1.0},"hir.html#identifiers-in-the-hir":{"tf":1.0},"ty.html#allocating-and-working-with-types":{"tf":1.0},"variance.html#variance-and-associated-types":{"tf":1.0},"tests/running.html#running-tests":{"tf":1.0},"rustc-driver.html#a-note-on-lifetimes":{"tf":1.0},"method-lookup.html#method-lookup":{"tf":1.0}},"df":11}}},"a":{"docs":{},"df":0,"t":{"docs":{},"df":0,"'":{"docs":{"traits/goals-and-clauses.html#coinductive-goals":{"tf":1.0},"rustdoc.html#the-walking-tour-of-rustdoc":{"tf":1.7320508075688773},"diag.html#declaring-a-lint":{"tf":1.0},"appendix/background.html#what-is-a-free-region-or-a-free-variable-what-about-bound-region":{"tf":1.0},"type-checking.html#type-collection":{"tf":1.0},"type-inference.html#type-inference":{"tf":1.0},"rustdoc.html#cheat-sheet":{"tf":1.0},"rustdoc.html#dotting-is-and-crossing-ts":{"tf":1.0},"query.html#queries-demand-driven-compilation":{"tf":1.0},"miri.html#miri":{"tf":1.0},"mir/regionck.html#final-example":{"tf":1.0},"variance.html#variance-and-object-types":{"tf":1.0},"traits/goals-and-clauses.html#goals-and-clauses-meta-structure":{"tf":1.4142135623730952}},"df":13,"l":{"docs":{},"df":0,"l":{"docs":{"name-resolution.html#namespaces":{"tf":1.0}},"df":1}}}}},"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"w":{"docs":{"ty.html#the-tcx-and-how-it-uses-lifetimes":{"tf":1.0}},"df":1,"n":{"docs":{"ty.html#the-tcx-and-how-it-uses-lifetimes":{"tf":1.0}},"df":1}},"u":{"docs":{},"df":0,"g":{"docs":{},"df":0,"h":{"docs":{"traits/chalk-overview.html#parsing":{"tf":1.0},"appendix/code-index.html#appendix-d-code-index":{"tf":1.0},"query.html#how-the-compiler-executes-a-query":{"tf":1.0},"mir/regionck.html#back-to-our-example":{"tf":1.0},"mir/regionck.html#subtyping-and-skolemization":{"tf":1.0},"compiletest.html#adding-a-new-header-command":{"tf":1.0},"rustdoc.html#from-soup-to-nuts":{"tf":1.0},"mir/passes.html#mir-passes":{"tf":1.0},"name-resolution.html#name-resolution":{"tf":1.0},"rustc-driver.html#a-note-on-lifetimes":{"tf":1.0},"traits/hrtb.html#higher-ranked-trait-bounds":{"tf":1.0},"traits/hrtb.html#basic-matching-and-skolemization-leaks":{"tf":1.0},"traits/resolution.html#candidate-assembly":{"tf":1.0},"traits/chalk-overview.html#testing":{"tf":1.0},"mir/borrowck.html#mir-borrow-check":{"tf":1.0},"mir/regionck.html#extending-the-universal-regions-check":{"tf":1.0},"traits/hrtb.html#higher-ranked-trait-obligations":{"tf":1.0},"rustdoc.html#other-tricks-up-its-sleeve":{"tf":1.0},"ty.html#the-tcx-and-how-it-uses-lifetimes":{"tf":1.0},"traits/caching.html#an-example":{"tf":1.0},"type-inference.html#enforcing-equality--subtyping":{"tf":1.0},"appendix/stupid-stats.html#appendix-a-a-tutorial-on-creating-a-drop-in-replacement-for-rustc":{"tf":1.0},"rustdoc.html#dotting-is-and-crossing-ts":{"tf":1.0},"traits/lowering-rules.html#rule-names-and-cross-references":{"tf":1.0},"hir.html#out-of-band-storage-and-the--crate--type":{"tf":1.0},"traits/canonical-queries.html#examples":{"tf":1.0},"variance.html#dependency-graph-management":{"tf":1.0},"mir/regionck.html#what-is-a-universe":{"tf":1.0},"rustdoc.html#from-crate-to-clean":{"tf":1.4142135623730952}},"df":29,"o":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{"variance.html#variance-of-type-and-lifetime-parameters":{"tf":1.0},"query.html#how-the-compiler-executes-a-query":{"tf":1.0},"appendix/glossary.html#appendix-c-glossary":{"tf":1.0}},"df":3}}}}}}},"e":{"docs":{},"df":0,"a":{"docs":{},"df":0,"d":{"docs":{"rustc-driver.html#a-note-on-lifetimes":{"tf":1.4142135623730952},"appendix/glossary.html#appendix-c-glossary":{"tf":1.7320508075688773},"compiler-debugging.html#getting-a-backtrace-for-errors":{"tf":1.0},"rustdoc.html#from-soup-to-nuts":{"tf":1.0}},"df":4}},"e":{"docs":{"tests/adding.html#revisions":{"tf":1.0},"type-inference.html#inference-variables":{"tf":1.0},"traits/canonicalization.html#canonicalizing-the-query-result":{"tf":1.0},"ty.html#the-tcx-and-how-it-uses-lifetimes":{"tf":1.0},"traits/resolution.html#selection":{"tf":1.0},"incrcomp-debugging.html#dumping-the-graph":{"tf":1.0},"traits/resolution.html#overview":{"tf":1.0},"macro-expansion.html#the-macro-parser":{"tf":1.0}},"df":8}}},"u":{"docs":{"variance.html#variance-and-object-types":{"tf":1.0},"mir/passes.html#stealing":{"tf":1.0},"traits/lowering-rules.html#trait-header":{"tf":1.0},"traits/canonical-queries.html#examples":{"tf":1.0},"traits/hrtb.html#basic-matching-and-skolemization-leaks":{"tf":1.0},"traits/specialization.html#specialization":{"tf":1.4142135623730952},"traits/associated-types.html#integration-with-unification":{"tf":1.0}},"df":7},"o":{"docs":{},"df":0,"u":{"docs":{},"df":0,"g":{"docs":{},"df":0,"h":{"docs":{"traits/canonicalization.html#executing-the-query":{"tf":1.0},"traits/canonical-queries.html#a-trait-query-in-rustc":{"tf":1.0},"traits/lowering-to-logic.html#rust-traits-and-logic":{"tf":1.0},"how-to-build-and-run.html#create-a-configtoml":{"tf":1.0},"mir/index.html#key-mir-vocabulary":{"tf":1.0},"mir/regionck.html#mir-based-region-checking-nll":{"tf":1.0},"traits/canonical-queries.html#examples":{"tf":1.0},"rustdoc.html#the-walking-tour-of-rustdoc":{"tf":1.4142135623730952},"traits/lowering-to-logic.html#type-checking-generic-functions-beyond-horn-clauses":{"tf":1.0},"name-resolution.html#scopes-and-ribs":{"tf":1.0},"traits/resolution.html#selection":{"tf":1.0},"mir/passes.html#stealing":{"tf":1.0},"tests/adding.html#naming-your-test":{"tf":1.0},"rustdoc.html#cheat-sheet":{"tf":1.4142135623730952},"tests/running.html#running-an-individual-test":{"tf":1.0},"query.html#cycles-between-queries":{"tf":1.0},"type-inference.html#trying-equality":{"tf":1.0},"traits/associated-types.html#associated-type-projection-and-normalization":{"tf":1.4142135623730952},"traits/canonicalization.html#canonicalizing-the-query-result":{"tf":1.4142135623730952},"high-level-overview.html#the-main-stages-of-compilation":{"tf":1.0},"conventions.html#using-crates-from-cratesio":{"tf":1.0},"incrcomp-debugging.html#dumping-the-graph":{"tf":1.4142135623730952},"traits/resolution.html#selection-during-translation":{"tf":1.0},"traits/goals-and-clauses.html#coinductive-goals":{"tf":1.0},"variance.html#variance-and-object-types":{"tf":1.0},"high-level-overview.html#crate-structure":{"tf":1.4142135623730952},"tests/adding.html#revisions":{"tf":1.0},"query.html#how-the-compiler-executes-a-query":{"tf":1.0}},"df":28,"t":{"docs":{"mir/regionck.html#representing-the-values-of-a-region-variable":{"tf":1.0},"appendix/stupid-stats.html#overview-of-the-compilation-process":{"tf":1.0}},"df":2}}},"s":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{"compiletest.html#introduction":{"tf":1.0}},"df":1}}}}},"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"u":{"docs":{},"df":0,"g":{"docs":{},"df":0,"h":{"docs":{"mir/regionck.html#mir-based-region-checking-nll":{"tf":1.0},"rustdoc.html#dotting-is-and-crossing-ts":{"tf":1.0}},"df":2}}}}},"s":{"docs":{},"df":0,"e":{"docs":{"mir/regionck.html#what-is-a-universe":{"tf":1.0},"tests/intro.html#compiletest-test-suites":{"tf":1.4142135623730952},"traits/lowering-rules.html#transforming-the-lowered-where-clauses":{"tf":1.0},"mir/regionck.html#another-example":{"tf":1.0},"mir/regionck.html#universes-and-skolemized-region-elements":{"tf":1.0},"rustdoc.html#the-walking-tour-of-rustdoc":{"tf":1.0},"type-inference.html#subtyping-obligations":{"tf":1.0},"compiletest.html#adding-a-new-header-command":{"tf":1.0},"traits/lowering-rules.html#lowering-where-clauses":{"tf":1.0},"ty.html#the-tcx-and-how-it-uses-lifetimes":{"tf":1.0},"type-checking.html#type-collection":{"tf":1.4142135623730952},"traits/hrtb.html#basic-matching-and-skolemization-leaks":{"tf":1.0},"traits/lowering-rules.html#trait-header":{"tf":1.0},"traits/lowering-to-logic.html#type-checking-normal-functions":{"tf":1.4142135623730952},"rustc-driver.html#the-rustc-driver":{"tf":1.0},"tests/adding.html#guide-to-the-ui-tests":{"tf":1.0},"high-level-overview.html#the-main-stages-of-compilation":{"tf":1.7320508075688773},"mir/passes.html#seeing-how-the-mir-changes-as-the-compiler-executes":{"tf":1.0},"appendix/background.html#what-is-a-free-region-or-a-free-variable-what-about-bound-region":{"tf":1.0},"traits/resolution.html#candidate-assembly":{"tf":1.0},"mir/regionck.html#mir-based-region-checking-nll":{"tf":1.0},"appendix/stupid-stats.html#overview-of-the-compilation-process":{"tf":1.0},"traits/resolution.html#overview":{"tf":1.0},"traits/associated-types.html#integration-with-unification":{"tf":1.0},"traits/associated-types.html#projection-equality":{"tf":1.0},"traits/lowering-to-logic.html#lowering-to-logic":{"tf":1.0},"query.html#adding-a-new-kind-of-query":{"tf":1.0},"mir/regionck.html#final-example":{"tf":1.0},"conventions.html#how-to-structure-your-pr":{"tf":1.4142135623730952},"type-inference.html#snapshots":{"tf":1.0},"tests/running.html#running-an-individual-test":{"tf":1.0},"traits/index.html#trait-solving-new-style":{"tf":1.0},"mir/passes.html#mir-passes":{"tf":1.0},"high-level-overview.html#crate-structure":{"tf":1.0},"incremental-compilation.html#improvements-to-the-basic-algorithm":{"tf":1.0},"mir/index.html#mir-data-types":{"tf":1.0},"method-lookup.html#candidate-search":{"tf":1.0},"mir/regionck.html#skolemization-and-outlives-constraints":{"tf":2.0},"rustdoc.html#from-soup-to-nuts":{"tf":1.0},"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.0},"conventions.html#copyright-notice":{"tf":1.0},"incrcomp-debugging.html#dumping-the-graph":{"tf":1.0},"tests/adding.html#header-commands-configuring-rustc":{"tf":1.0},"incremental-compilation.html#the-query-dag":{"tf":1.0},"method-lookup.html#candidate-assembly":{"tf":1.4142135623730952},"mir/regionck.html#extending-the-universal-regions-check":{"tf":1.0},"traits/canonicalization.html#canonicalizing-the-query-result":{"tf":1.4142135623730952},"traits/chalk-overview.html#well-formedness-checks":{"tf":1.0},"traits/canonicalization.html#canonicalization":{"tf":1.0}},"df":49}}}},"<":{"docs":{},"df":0,"a":{"docs":{"variance.html#variance-of-type-and-lifetime-parameters":{"tf":1.0}},"df":1},"b":{"docs":{"variance.html#variance-of-type-and-lifetime-parameters":{"tf":1.0}},"df":1},"'":{"docs":{},"df":0,"a":{"docs":{"variance.html#variance-of-type-and-lifetime-parameters":{"tf":1.0}},"df":1},"b":{"docs":{"variance.html#variance-of-type-and-lifetime-parameters":{"tf":1.0}},"df":1}}},"t":{"docs":{"macro-expansion.html#the-macro-parser":{"tf":2.6457513110645909}},"df":1},"a":{"docs":{},"df":0,"m":{"docs":{},"df":0,"e":{"docs":{"variance.html#variance-of-type-and-lifetime-parameters":{"tf":1.0}},"df":1}},"b":{"docs":{"conventions.html#tabs-vs-spaces":{"tf":1.4142135623730952},"rustdoc.html#dotting-is-and-crossing-ts":{"tf":1.4142135623730952}},"df":2,"l":{"docs":{"rustdoc.html#other-tricks-up-its-sleeve":{"tf":1.0},"rustdoc.html#from-clean-to-crate":{"tf":1.0},"type-inference.html#region-constraints":{"tf":1.0},"query.html#how-the-compiler-executes-a-query":{"tf":1.0},"appendix/glossary.html#appendix-c-glossary":{"tf":1.4142135623730952},"high-level-overview.html#the-main-stages-of-compilation":{"tf":1.0},"appendix/stupid-stats.html#overview-of-the-compilation-process":{"tf":1.4142135623730952},"traits/bibliography.html#bibliography":{"tf":1.0},"method-lookup.html#method-lookup":{"tf":1.0},"const-eval.html#constant-evaluation":{"tf":1.0}},"df":10}},"g":{"docs":{"tests/adding.html#other-header-commands":{"tf":1.0}},"df":1},"k":{"docs":{},"df":0,"e":{"docs":{"mir/regionck.html#subtyping-and-skolemization":{"tf":1.0},"query.html#adding-a-new-kind-of-query":{"tf":1.0},"param_env.html#parameter-environment":{"tf":1.0},"rustdoc.html#from-crate-to-clean":{"tf":1.4142135623730952},"traits/chalk-overview.html#testing":{"tf":1.0},"compiletest.html#adding-a-new-header-command":{"tf":1.4142135623730952},"mir/borrowck.html#major-phases-of-the-borrow-checker":{"tf":1.0},"traits/specialization.html#specialization":{"tf":1.0},"traits/chalk-overview.html#parsing":{"tf":1.0},"tests/intro.html#compiletest-test-suites":{"tf":1.0},"mir/passes.html#seeing-how-the-mir-changes-as-the-compiler-executes":{"tf":1.0},"variance.html#the-algorithm":{"tf":1.0},"traits/resolution.html#selection":{"tf":1.0},"ty.html#the-tcx-and-how-it-uses-lifetimes":{"tf":1.4142135623730952},"mir/regionck.html#extending-the-universal-regions-check":{"tf":1.0},"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.4142135623730952},"const-eval.html#constant-evaluation":{"tf":1.0},"variance.html#trait-variance-and-vtable-resolution":{"tf":1.0},"tests/intro.html#testing-on-emulators":{"tf":1.4142135623730952},"tests/running.html#running-tests":{"tf":1.0},"appendix/stupid-stats.html#appendix-a-a-tutorial-on-creating-a-drop-in-replacement-for-rustc":{"tf":1.0},"rustdoc.html#from-clean-to-crate":{"tf":1.4142135623730952},"method-lookup.html#candidate-assembly":{"tf":1.0},"high-level-overview.html#the-main-stages-of-compilation":{"tf":1.0},"query.html#how-the-compiler-executes-a-query":{"tf":2.0},"traits/caching.html#an-example":{"tf":1.0},"type-inference.html#snapshots":{"tf":1.4142135623730952}},"df":27,"_":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"g":{"docs":{},"df":0,"i":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"_":{"docs":{},"df":0,"v":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"_":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{},"df":0,"g":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{"type-inference.html#extracting-region-constraints":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}},"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{},"df":0,"_":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"t":{"docs":{},"df":0,"_":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"g":{"docs":{},"df":0,"i":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"_":{"docs":{},"df":0,"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{"type-inference.html#extracting-region-constraints":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}}}}}}}}}}},"n":{"docs":{"variance.html#variance-of-type-and-lifetime-parameters":{"tf":1.0},"mir/passes.html#stealing":{"tf":1.0},"mir/regionck.html#universes-and-skolemized-region-elements":{"tf":1.0}},"df":3}}},"l":{"docs":{},"df":0,"k":{"docs":{"appendix/stupid-stats.html#appendix-a-a-tutorial-on-creating-a-drop-in-replacement-for-rustc":{"tf":1.0},"type-checking.html#type-collection":{"tf":1.0},"traits/goals-and-clauses.html#domain-goals":{"tf":1.0},"name-resolution.html#namespaces":{"tf":1.0},"traits/resolution.html#selection-during-translation":{"tf":1.0},"traits/resolution.html#candidate-assembly":{"tf":1.0},"traits/lowering-to-logic.html#type-checking-generic-functions-beyond-horn-clauses":{"tf":1.0},"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.0}},"df":8}},"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{"traits/hrtb.html#basic-matching-and-skolemization-leaks":{"tf":2.23606797749979},"traits/hrtb.html#higher-ranked-trait-obligations":{"tf":1.7320508075688773}},"df":2}}},"r":{"docs":{},"df":0,"g":{"docs":{},"df":0,"e":{"docs":{},"df":0,"t":{"docs":{"tests/adding.html#editing-and-updating-the-reference-files":{"tf":1.0},"rustdoc.html#from-crate-to-clean":{"tf":1.0},"variance.html#constraints":{"tf":1.0},"tests/adding.html#ignoring-tests":{"tf":1.7320508075688773},"tests/adding.html#normalization":{"tf":1.4142135623730952},"query.html#how-the-compiler-executes-a-query":{"tf":1.0},"traits/resolution.html#candidate-assembly":{"tf":1.4142135623730952},"tests/intro.html#compiletest-test-suites":{"tf":1.0},"miri.html#interpretation":{"tf":1.0},"traits/resolution.html#confirmation":{"tf":1.7320508075688773}},"df":10,"'":{"docs":{"tests/intro.html#testing-on-emulators":{"tf":1.0}},"df":1},"/":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"u":{"docs":{},"df":0,"p":{"docs":{},"df":0,"i":{"docs":{},"df":0,"d":{"docs":{"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.0}},"df":1}}}}}}},"_":{"docs":{},"df":0,"f":{"docs":{},"df":0,"i":{"docs":{},"df":0,"l":{"docs":{},"df":0,"t":{"docs":{"incrcomp-debugging.html#dumping-the-graph":{"tf":2.23606797749979}},"df":1}}}}}}}},"b":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{"tests/intro.html#other-tests":{"tf":1.0}},"df":1}}}},"s":{"docs":{},"df":0,"k":{"docs":{"mir/borrowck.html#mir-borrow-check":{"tf":1.0},"tests/running.html#running-a-subset-of-the-test-suites":{"tf":1.0}},"df":2}}},"i":{"docs":{"appendix/background.html#what-is-a-free-region-or-a-free-variable-what-about-bound-region":{"tf":1.0},"high-level-overview.html#crate-structure":{"tf":1.0}},"df":2,"d":{"docs":{},"df":0,"i":{"docs":{"tests/intro.html#other-tests":{"tf":1.0},"conventions.html#line-length":{"tf":1.0},"conventions.html#use-todo-comments-for-things-you-dont-want-to-forget":{"tf":1.0},"conventions.html#formatting-and-the-tidy-script":{"tf":2.0}},"df":4}},"e":{"docs":{},"df":0,"r":{"docs":{"tests/intro.html#testing-infrastructure":{"tf":1.0}},"df":1}},"t":{"docs":{},"df":0,"l":{"docs":{"compiler-debugging.html#debugging-the-compiler":{"tf":1.0},"rustdoc.html#from-soup-to-nuts":{"tf":1.0}},"df":2}},"p":{"docs":{"compiler-debugging.html#debugging-the-compiler":{"tf":1.0},"conventions.html#coding-for-correctness":{"tf":1.0},"conventions.html#how-to-structure-your-pr":{"tf":1.0},"conventions.html#formatting-and-the-tidy-script":{"tf":1.4142135623730952},"compiler-debugging.html#debugging-llvm":{"tf":1.0}},"df":5},"m":{"docs":{},"df":0,"e":{"docs":{"compiletest.html#implementing-the-behavior-change":{"tf":1.0},"compiler-debugging.html#debugging-llvm":{"tf":1.4142135623730952},"variance.html#variance-and-object-types":{"tf":1.0},"traits/bibliography.html#bibliography":{"tf":1.0},"tests/intro.html#testing-infrastructure":{"tf":1.0},"conventions.html#how-to-structure-your-pr":{"tf":1.0},"traits/lowering-module.html#unit-tests":{"tf":1.0},"mir/passes.html#stealing":{"tf":1.0},"mir/borrowck.html#major-phases-of-the-borrow-checker":{"tf":1.0},"hir.html#the-hir-map":{"tf":1.0},"traits/caching.html#an-example":{"tf":1.0},"high-level-overview.html#crate-structure":{"tf":1.7320508075688773},"appendix/stupid-stats.html#appendix-a-a-tutorial-on-creating-a-drop-in-replacement-for-rustc":{"tf":1.0},"mir/regionck.html#skolemization-and-universes":{"tf":1.4142135623730952},"traits/resolution.html#selection-during-translation":{"tf":1.0},"traits/canonical-queries.html#examples":{"tf":1.0},"how-to-build-and-run.html#running-xpy-and-building-a-stage1-compiler":{"tf":1.4142135623730952},"tests/adding.html#revisions":{"tf":1.4142135623730952},"miri.html#miri":{"tf":1.0},"rustc-driver.html#the-rustc-driver":{"tf":1.0},"traits/specialization.html#specialization":{"tf":1.0},"query.html#adding-a-new-kind-of-query":{"tf":1.0},"macro-expansion.html#example":{"tf":1.0},"traits/resolution.html#major-concepts":{"tf":1.0},"compiletest.html#adding-a-new-header-command":{"tf":1.4142135623730952},"query.html#queries-demand-driven-compilation":{"tf":1.4142135623730952},"mir/regionck.html#universes-and-skolemized-region-elements":{"tf":1.0},"incremental-compilation.html#the-basic-algorithm":{"tf":1.4142135623730952},"const-eval.html#constant-evaluation":{"tf":1.4142135623730952},"mir/borrowck.html#mir-borrow-check":{"tf":1.0},"tests/running.html#running-tests":{"tf":1.0},"rustdoc.html#the-walking-tour-of-rustdoc":{"tf":1.0},"miri.html#interpretation":{"tf":1.0},"appendix/glossary.html#appendix-c-glossary":{"tf":1.0},"tests/adding.html#naming-your-test":{"tf":1.0},"name-resolution.html#scopes-and-ribs":{"tf":1.0}},"df":36,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"a":{"docs":{},"df":0,"m":{"docs":{},"df":0,"p":{"docs":{"tests/running.html#running-tests":{"tf":1.4142135623730952}},"df":1}}}}}}}}},"8":{"docs":{"compiler-debugging.html#getting-a-backtrace-for-errors":{"tf":1.0},"miri.html#miri":{"tf":1.0}},"df":2,"0":{"docs":{"conventions.html#line-length":{"tf":1.0}},"df":1}},"s":{"docs":{"rustc-driver.html#the-rustc-driver":{"tf":2.0},"variance.html#variance-and-object-types":{"tf":1.0},"traits/canonicalization.html#executing-the-query":{"tf":2.0},"compiler-debugging.html#debugging-llvm":{"tf":1.4142135623730952},"diag.html#edition-gated-lints":{"tf":1.0},"miri.html#datastructures":{"tf":1.0},"appendix/stupid-stats.html#overview-of-the-compilation-process":{"tf":1.0},"diag.html#span":{"tf":1.0},"appendix/stupid-stats.html#compilercontroller":{"tf":1.0},"appendix/stupid-stats.html#appendix-a-a-tutorial-on-creating-a-drop-in-replacement-for-rustc":{"tf":1.0},"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":2.0},"rustdoc.html#from-soup-to-nuts":{"tf":1.7320508075688773},"traits/canonicalization.html#canonicalizing-the-query-result":{"tf":2.6457513110645909},"compiletest.html#adding-a-new-header-command":{"tf":1.0},"miri.html#interpretation":{"tf":1.4142135623730952},"traits/chalk-overview.html#intermediate-representation-ir":{"tf":1.0},"hir.html#identifiers-in-the-hir":{"tf":1.0}},"df":17,"=":{"docs":{},"df":0,"&":{"docs":{},"df":0,"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"v":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"t":{"docs":{},"df":0,"t":{"docs":{},"df":0,"o":{"docs":{},"df":0,"<":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"r":{"docs":{"variance.html#variance-and-object-types":{"tf":1.0}},"df":1}}}}}}}}}}}}}}},"r":{"docs":{},"df":0,"c":{"docs":{"high-level-overview.html#crate-structure":{"tf":1.0},"how-to-build-and-run.html#running-xpy-and-building-a-stage1-compiler":{"tf":1.7320508075688773}},"df":2,"/":{"docs":{},"df":0,"b":{"docs":{},"df":0,"o":{"docs":{},"df":0,"o":{"docs":{},"df":0,"t":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"p":{"docs":{},"df":0,"/":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,".":{"docs":{},"df":0,"r":{"docs":{"tests/intro.html#testing-on-emulators":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}},"d":{"docs":{},"df":0,"o":{"docs":{},"df":0,"c":{"docs":{"tests/intro.html#other-tests":{"tf":1.4142135623730952}},"df":1}}},"l":{"docs":{},"df":0,"i":{"docs":{},"df":0,"b":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"d":{"docs":{"how-to-build-and-run.html#other-xpy-commands":{"tf":1.0},"how-to-build-and-run.html#running-xpy-and-building-a-stage1-compiler":{"tf":1.4142135623730952},"tests/intro.html#other-tests":{"tf":1.4142135623730952},"rustdoc.html#cheat-sheet":{"tf":1.4142135623730952}},"df":4}},"y":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{},"df":0,"a":{"docs":{},"df":0,"x":{"docs":{},"df":0,"_":{"docs":{},"df":0,"p":{"docs":{},"df":0,"o":{"docs":{},"df":0,"s":{"docs":{},"df":0,"/":{"docs":{},"df":0,"s":{"docs":{},"df":0,"p":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"_":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"d":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"g":{"docs":{},"df":0,".":{"docs":{},"df":0,"r":{"docs":{"appendix/code-index.html#appendix-d-code-index":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}}},"/":{"docs":{},"df":0,"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"d":{"docs":{},"df":0,"e":{"docs":{},"df":0,"m":{"docs":{},"df":0,"a":{"docs":{},"df":0,"p":{"docs":{},"df":0,".":{"docs":{},"df":0,"r":{"docs":{"appendix/code-index.html#appendix-d-code-index":{"tf":1.0}},"df":1}}}}}}}}},"e":{"docs":{},"df":0,"x":{"docs":{},"df":0,"t":{"docs":{},"df":0,"/":{"docs":{},"df":0,"t":{"docs":{},"df":0,"t":{"docs":{"macro-expansion.html#macro-expansion":{"tf":1.0}},"df":1,"/":{"docs":{},"df":0,"m":{"docs":{},"df":0,"a":{"docs":{},"df":0,"c":{"docs":{},"df":0,"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"_":{"docs":{},"df":0,"r":{"docs":{},"df":0,"u":{"docs":{},"df":0,"l":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,".":{"docs":{},"df":0,"r":{"docs":{"macro-expansion.html#the-macro-parser":{"tf":1.0}},"df":1}}}}}}},"p":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,".":{"docs":{},"df":0,"r":{"docs":{"macro-expansion.html#the-macro-parser":{"tf":1.4142135623730952}},"df":1}}}}}}}}}}}}}}}}}}}}},"p":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"/":{"docs":{},"df":0,"l":{"docs":{},"df":0,"e":{"docs":{},"df":0,"x":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"/":{"docs":{},"df":0,"m":{"docs":{},"df":0,"o":{"docs":{},"df":0,"d":{"docs":{},"df":0,".":{"docs":{},"df":0,"r":{"docs":{"appendix/code-index.html#appendix-d-code-index":{"tf":1.0}},"df":1}}}}}}}}}}},"m":{"docs":{},"df":0,"o":{"docs":{},"df":0,"d":{"docs":{},"df":0,".":{"docs":{},"df":0,"r":{"docs":{"appendix/code-index.html#appendix-d-code-index":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}},"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{"rustdoc.html#cheat-sheet":{"tf":1.0}},"df":1}}}},"x":{"docs":{},"df":0,"x":{"docs":{},"df":0,"x":{"docs":{"high-level-overview.html#crate-structure":{"tf":1.0}},"df":1}}},"r":{"docs":{},"df":0,"u":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"c":{"docs":{},"df":0,"/":{"docs":{},"df":0,"d":{"docs":{},"df":0,"e":{"docs":{},"df":0,"p":{"docs":{},"df":0,"_":{"docs":{},"df":0,"g":{"docs":{},"df":0,"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"p":{"docs":{},"df":0,"h":{"docs":{"incremental-compilation.html#the-query-dag":{"tf":1.0}},"df":1}}}}}}}}},"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"s":{"docs":{},"df":0,"i":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"/":{"docs":{},"df":0,"m":{"docs":{},"df":0,"o":{"docs":{},"df":0,"d":{"docs":{},"df":0,".":{"docs":{},"df":0,"h":{"docs":{},"df":0,"t":{"docs":{},"df":0,"m":{"docs":{},"df":0,"l":{"docs":{"appendix/code-index.html#appendix-d-code-index":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}},"t":{"docs":{},"df":0,"y":{"docs":{},"df":0,"/":{"docs":{},"df":0,"t":{"docs":{},"df":0,"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{},"df":0,"_":{"docs":{},"df":0,"d":{"docs":{},"df":0,"e":{"docs":{},"df":0,"f":{"docs":{},"df":0,".":{"docs":{},"df":0,"r":{"docs":{"appendix/code-index.html#appendix-d-code-index":{"tf":1.0}},"df":1}}}}}}}}}}},"m":{"docs":{},"df":0,"o":{"docs":{},"df":0,"d":{"docs":{},"df":0,".":{"docs":{},"df":0,"r":{"docs":{"appendix/code-index.html#appendix-d-code-index":{"tf":1.0}},"df":1}}}},"a":{"docs":{},"df":0,"p":{"docs":{},"df":0,"s":{"docs":{},"df":0,"/":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"a":{"docs":{},"df":0,"d":{"docs":{},"df":0,"m":{"docs":{},"df":0,"e":{"docs":{},"df":0,".":{"docs":{},"df":0,"m":{"docs":{},"df":0,"d":{"docs":{"high-level-overview.html#the-main-stages-of-compilation":{"tf":1.0}},"df":1}}}}}}}}},"m":{"docs":{},"df":0,"o":{"docs":{},"df":0,"d":{"docs":{},"df":0,".":{"docs":{},"df":0,"r":{"docs":{"query.html#adding-a-new-kind-of-query":{"tf":1.0}},"df":1}}}}}}}}}},"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"x":{"docs":{},"df":0,"t":{"docs":{},"df":0,".":{"docs":{},"df":0,"r":{"docs":{"appendix/code-index.html#appendix-d-code-index":{"tf":1.0}},"df":1}}}}}}}}}}}},"h":{"docs":{},"df":0,"i":{"docs":{},"df":0,"r":{"docs":{"high-level-overview.html#the-main-stages-of-compilation":{"tf":1.0}},"df":1,"/":{"docs":{},"df":0,"m":{"docs":{},"df":0,"o":{"docs":{},"df":0,"d":{"docs":{},"df":0,".":{"docs":{},"df":0,"r":{"docs":{"appendix/code-index.html#appendix-d-code-index":{"tf":1.4142135623730952}},"df":1}}}}}}}}},"m":{"docs":{},"df":0,"i":{"docs":{},"df":0,"r":{"docs":{"mir/index.html#introduction-to-mir":{"tf":1.0},"mir/index.html#mir-data-types":{"tf":1.0}},"df":2}}}},"_":{"docs":{},"df":0,"d":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{},"df":0,"v":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"/":{"docs":{},"df":0,"d":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{},"df":0,"v":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,".":{"docs":{},"df":0,"r":{"docs":{"appendix/code-index.html#appendix-d-code-index":{"tf":1.0}},"df":1}}}}}}}}}}}}}}},"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"s":{"docs":{},"df":0,"/":{"docs":{},"df":0,"d":{"docs":{},"df":0,"i":{"docs":{},"df":0,"a":{"docs":{},"df":0,"g":{"docs":{},"df":0,"n":{"docs":{},"df":0,"o":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"i":{"docs":{},"df":0,"c":{"docs":{},"df":0,"_":{"docs":{},"df":0,"b":{"docs":{},"df":0,"u":{"docs":{},"df":0,"i":{"docs":{},"df":0,"l":{"docs":{},"df":0,"d":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,".":{"docs":{},"df":0,"r":{"docs":{"appendix/code-index.html#appendix-d-code-index":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}}}}}}}}}},"m":{"docs":{},"df":0,"i":{"docs":{},"df":0,"r":{"docs":{"mir/index.html#introduction-to-mir":{"tf":1.0}},"df":1,"/":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"p":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"t":{"docs":{},"df":0,"/":{"docs":{},"df":0,"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"_":{"docs":{},"df":0,"e":{"docs":{},"df":0,"v":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{},"df":0,".":{"docs":{},"df":0,"r":{"docs":{"const-eval.html#constant-evaluation":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}}}}}}}}}}},"d":{"docs":{},"df":0,"o":{"docs":{},"df":0,"c":{"docs":{},"df":0,"/":{"docs":{},"df":0,"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,".":{"docs":{},"df":0,"r":{"docs":{"appendix/code-index.html#appendix-d-code-index":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}},"c":{"docs":{},"df":0,"i":{"docs":{},"df":0,"/":{"docs":{},"df":0,"d":{"docs":{},"df":0,"o":{"docs":{},"df":0,"c":{"docs":{},"df":0,"k":{"docs":{"tests/intro.html#testing-with-docker-images":{"tf":1.0}},"df":1,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"/":{"docs":{},"df":0,"r":{"docs":{},"df":0,"u":{"docs":{},"df":0,"n":{"docs":{},"df":0,".":{"docs":{},"df":0,"s":{"docs":{},"df":0,"h":{"docs":{"tests/intro.html#testing-with-docker-images":{"tf":1.0},"tests/intro.html#testing-on-emulators":{"tf":1.0}},"df":2}}}}}}}}}}}}}}}},"e":{"docs":{},"df":0,"t":{"docs":{},"df":0,"c":{"docs":{},"df":0,"/":{"docs":{},"df":0,"h":{"docs":{},"df":0,"t":{"docs":{},"df":0,"m":{"docs":{},"df":0,"l":{"docs":{},"df":0,"d":{"docs":{},"df":0,"o":{"docs":{},"df":0,"c":{"docs":{},"df":0,"c":{"docs":{},"df":0,"k":{"docs":{},"df":0,".":{"docs":{},"df":0,"p":{"docs":{},"df":0,"i":{"docs":{"rustdoc.html#dotting-is-and-crossing-ts":{"tf":1.0},"rustdoc.html#cheat-sheet":{"tf":1.0}},"df":2}}}}}}}}}}}}}}}},"t":{"docs":{},"df":0,"o":{"docs":{},"df":0,"o":{"docs":{},"df":0,"l":{"docs":{},"df":0,"s":{"docs":{},"df":0,"/":{"docs":{},"df":0,"r":{"docs":{},"df":0,"u":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"d":{"docs":{},"df":0,"o":{"docs":{},"df":0,"c":{"docs":{"rustdoc.html#cheat-sheet":{"tf":1.0},"rustdoc.html#dotting-is-and-crossing-ts":{"tf":1.0},"rustdoc.html#the-walking-tour-of-rustdoc":{"tf":1.0}},"df":3}}}}}}},"l":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"k":{"docs":{},"df":0,"c":{"docs":{},"df":0,"h":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"k":{"docs":{"tests/intro.html#other-tests":{"tf":1.0}},"df":1}}}}}}}}},"t":{"docs":{},"df":0,"i":{"docs":{},"df":0,"d":{"docs":{},"df":0,"i":{"docs":{"tests/intro.html#other-tests":{"tf":1.0},"conventions.html#formatting-and-the-tidy-script":{"tf":1.0}},"df":2}}}},"c":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"g":{"docs":{},"df":0,"o":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{"tests/intro.html#other-tests":{"tf":1.0}},"df":1}}}}}}}},"o":{"docs":{},"df":0,"m":{"docs":{},"df":0,"p":{"docs":{},"df":0,"i":{"docs":{},"df":0,"l":{"docs":{},"df":0,"e":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{"tests/intro.html#the-compiler-testing-framework":{"tf":1.0}},"df":1,"/":{"docs":{},"df":0,"s":{"docs":{},"df":0,"r":{"docs":{},"df":0,"c":{"docs":{},"df":0,"/":{"docs":{},"df":0,"r":{"docs":{},"df":0,"u":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,".":{"docs":{},"df":0,"r":{"docs":{"compiletest.html#implementing-the-behavior-change":{"tf":1.0}},"df":1}}}}}}}}},"h":{"docs":{},"df":0,"e":{"docs":{},"df":0,"a":{"docs":{},"df":0,"d":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,".":{"docs":{},"df":0,"r":{"docs":{"compiletest.html#adding-a-new-header-command":{"tf":2.0}},"df":1}}}}}}}},"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"m":{"docs":{},"df":0,"m":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,".":{"docs":{},"df":0,"r":{"docs":{"compiletest.html#introduction":{"tf":1.0},"compiletest.html#adding-a-new-header-command":{"tf":1.0}},"df":2}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{"compiletest.html#adding-a-new-test-file":{"tf":1.4142135623730952},"tests/intro.html#compiletest-test-suites":{"tf":1.0}},"df":2,"/":{"docs":{},"df":0,"r":{"docs":{},"df":0,"u":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"d":{"docs":{},"df":0,"o":{"docs":{},"df":0,"c":{"docs":{"rustdoc.html#cheat-sheet":{"tf":1.4142135623730952},"rustdoc.html#dotting-is-and-crossing-ts":{"tf":1.4142135623730952}},"df":2}}}}},"n":{"docs":{"how-to-build-and-run.html#other-xpy-commands":{"tf":1.0},"tests/adding.html#naming-your-test":{"tf":1.7320508075688773}},"df":2}}},"{":{"docs":{},"df":0,"u":{"docs":{},"df":0,"i":{"docs":{},"df":0,",":{"docs":{},"df":0,"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"m":{"docs":{},"df":0,"p":{"docs":{},"df":0,"i":{"docs":{},"df":0,"l":{"docs":{"tests/running.html#running-a-subset-of-the-test-suites":{"tf":1.0}},"df":1}}}}}}}}}},"u":{"docs":{},"df":0,"i":{"docs":{"tests/running.html#running-an-individual-test":{"tf":1.0},"tests/adding.html#editing-and-updating-the-reference-files":{"tf":1.4142135623730952}},"df":2,"/":{"docs":{},"df":0,"r":{"docs":{},"df":0,"f":{"docs":{},"df":0,"c":{"docs":{},"df":0,"1":{"docs":{},"df":0,"2":{"docs":{},"df":0,"3":{"docs":{},"df":0,"4":{"docs":{"tests/adding.html#naming-your-test":{"tf":1.0}},"df":1}}}}}}},"c":{"docs":{},"df":0,"h":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{},"df":0,"k":{"docs":{},"df":0,"i":{"docs":{},"df":0,"f":{"docs":{},"df":0,"i":{"docs":{"traits/lowering-module.html#unit-tests":{"tf":1.0}},"df":1}}}}}}}},"i":{"docs":{},"df":0,"s":{"docs":{},"df":0,"s":{"docs":{},"df":0,"u":{"docs":{"tests/running.html#running-an-individual-test":{"tf":1.0}},"df":1}}}}}}},"d":{"docs":{},"df":0,"e":{"docs":{},"df":0,"b":{"docs":{},"df":0,"u":{"docs":{},"df":0,"g":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"f":{"docs":{},"df":0,"o":{"docs":{"tests/running.html#running-a-subset-of-the-test-suites":{"tf":1.0}},"df":1}}}}}}}}},"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"m":{"docs":{},"df":0,"p":{"docs":{},"df":0,"i":{"docs":{},"df":0,"l":{"docs":{"incrcomp-debugging.html#testing-the-dependency-graph":{"tf":1.0}},"df":1}}}}}}}}}}},"m":{"docs":{},"df":0,"a":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,".":{"docs":{},"df":0,"r":{"docs":{},"df":0,"s":{"docs":{},"df":0,":":{"docs":{},"df":0,"2":{"docs":{},"df":0,":":{"docs":{},"df":0,"9":{"docs":{"mir/index.html#key-mir-vocabulary":{"tf":1.0}},"df":1}}}}}}}}}}}}}},"c":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{},"df":0,"o":{"docs":{"tests/adding.html#other-header-commands":{"tf":1.0}},"df":1}}}},"e":{"docs":{"variance.html#trait-variance-and-vtable-resolution":{"tf":1.0}},"df":1}}},"r":{"docs":{},"df":0,"i":{"docs":{},"df":0,"p":{"docs":{},"df":0,"t":{"docs":{"conventions.html#formatting-and-the-tidy-script":{"tf":2.23606797749979},"conventions.html#use-todo-comments-for-things-you-dont-want-to-forget":{"tf":1.0},"rustdoc.html#cheat-sheet":{"tf":1.0},"rustdoc.html#dotting-is-and-crossing-ts":{"tf":1.4142135623730952},"tests/intro.html#testing-with-docker-images":{"tf":1.0}},"df":5}}},"a":{"docs":{},"df":0,"t":{"docs":{},"df":0,"c":{"docs":{},"df":0,"h":{"docs":{"traits/caching.html#an-example":{"tf":1.0}},"df":1}}}}},"h":{"docs":{},"df":0,"e":{"docs":{},"df":0,"m":{"docs":{},"df":0,"e":{"docs":{"incremental-compilation.html#incremental-compilation":{"tf":1.0}},"df":1}}},"w":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"t":{"docs":{},"df":0,"z":{"docs":{},"df":0,"b":{"docs":{},"df":0,"a":{"docs":{},"df":0,"c":{"docs":{},"df":0,"h":{"docs":{"appendix/background.html#what-is-a-dataflow-analysis":{"tf":1.0}},"df":1}}}}}}}}}},"a":{"docs":{},"df":0,"n":{"docs":{"name-resolution.html#overall-strategy":{"tf":1.0},"compiletest.html#adding-a-new-test-file":{"tf":1.0},"rustdoc.html#from-clean-to-crate":{"tf":1.0}},"df":3},"l":{"docs":{},"df":0,"a":{"docs":{},"df":0,"b":{"docs":{},"df":0,"l":{"docs":{"appendix/glossary.html#appendix-c-glossary":{"tf":1.0}},"df":1}}}}},"o":{"docs":{},"df":0,"p":{"docs":{},"df":0,"e":{"docs":{"mir/index.html#key-mir-vocabulary":{"tf":2.6457513110645909},"mir/borrowck.html#major-phases-of-the-borrow-checker":{"tf":1.0},"name-resolution.html#scopes-and-ribs":{"tf":2.23606797749979},"traits/resolution.html#candidate-assembly":{"tf":1.0},"traits/goals-and-clauses.html#domain-goals":{"tf":1.4142135623730952},"mir/regionck.html#what-is-a-universe":{"tf":1.7320508075688773},"appendix/glossary.html#appendix-c-glossary":{"tf":1.0},"name-resolution.html#namespaces":{"tf":1.0},"traits/caching.html#where-clauses-and-the-local-vs-global-cache":{"tf":1.7320508075688773},"mir/regionck.html#back-to-our-example":{"tf":1.0},"traits/resolution.html#selection-during-translation":{"tf":1.0}},"df":11}}}},"n":{"docs":{},"df":0,"a":{"docs":{},"df":0,"p":{"docs":{},"df":0,"s":{"docs":{},"df":0,"h":{"docs":{},"df":0,"o":{"docs":{},"df":0,"t":{"docs":{"type-inference.html#snapshots":{"tf":2.23606797749979}},"df":1}}}}},"k":{"docs":{},"df":0,"e":{"docs":{"compiletest.html#adding-a-new-header-command":{"tf":1.0},"query.html#adding-a-new-kind-of-query":{"tf":1.0}},"df":2}}},"i":{"docs":{},"df":0,"p":{"docs":{"diag.html#error-messages":{"tf":1.0},"diag.html#suggestions":{"tf":1.0}},"df":2,"p":{"docs":{},"df":0,"e":{"docs":{},"df":0,"t":{"docs":{"diag.html#error-messages":{"tf":1.4142135623730952},"tests/adding.html#naming-your-test":{"tf":1.0},"macro-expansion.html#example":{"tf":1.0},"diag.html#span":{"tf":1.0}},"df":4}}}}}},"t":{"docs":{},"df":0,"r":{"docs":{"traits/goals-and-clauses.html#domain-goals":{"tf":1.4142135623730952},"type-inference.html#type-inference":{"tf":1.0},"compiletest.html#adding-a-new-header-command":{"tf":1.0}},"df":3,"i":{"docs":{},"df":0,"p":{"docs":{"rustdoc.html#hot-potato":{"tf":3.0},"high-level-overview.html#the-main-stages-of-compilation":{"tf":1.0}},"df":2},"c":{"docs":{},"df":0,"t":{"docs":{"compiler-debugging.html#getting-logging-output":{"tf":1.0}},"df":1,"l":{"docs":{},"df":0,"i":{"docs":{"rustdoc.html#hot-potato":{"tf":1.0}},"df":1}}}},"n":{"docs":{},"df":0,"g":{"docs":{"compiletest.html#adding-a-new-header-command":{"tf":1.4142135623730952},"incrcomp-debugging.html#dumping-the-graph":{"tf":1.4142135623730952},"appendix/stupid-stats.html#compilercalls":{"tf":1.0},"variance.html#variance-and-object-types":{"tf":1.7320508075688773},"rustdoc.html#hot-potato":{"tf":1.4142135623730952},"variance.html#trait-variance-and-vtable-resolution":{"tf":2.8284271247461905},"diag.html#declaring-a-lint":{"tf":1.0},"traits/chalk-overview.html#intermediate-representation-ir":{"tf":1.0},"rustdoc.html#from-clean-to-crate":{"tf":1.0},"query.html#adding-a-new-kind-of-query":{"tf":1.0}},"df":10,">":{"docs":{},"df":0,"(":{"docs":{},"df":0,"v":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{"variance.html#trait-variance-and-vtable-resolution":{"tf":1.0}},"df":1}}}}}}}},",":{"docs":{},"df":0,"i":{"docs":{},"df":0,"3":{"docs":{},"df":0,"2":{"docs":{"variance.html#trait-variance-and-vtable-resolution":{"tf":1.0}},"df":1}}}},":":{"docs":{},"df":0,":":{"docs":{},"df":0,"f":{"docs":{},"df":0,"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"m":{"docs":{},"df":0,"_":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"r":{"docs":{},"df":0,"(":{"docs":{},"df":0,"\"":{"docs":{},"df":0,"u":{"docs":{},"df":0,"n":{"docs":{},"df":0,"k":{"docs":{},"df":0,"n":{"docs":{},"df":0,"o":{"docs":{},"df":0,"w":{"docs":{},"df":0,"n":{"docs":{},"df":0,"_":{"docs":{},"df":0,"c":{"docs":{},"df":0,"r":{"docs":{"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"a":{"docs":{},"df":0,"d":{"docs":{"appendix/code-index.html#appendix-d-code-index":{"tf":1.0},"the-parser.html#the-parser":{"tf":1.4142135623730952}},"df":2}}}}}}},"u":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{"variance.html#variance-of-type-and-lifetime-parameters":{"tf":1.0},"traits/hrtb.html#basic-matching-and-skolemization-leaks":{"tf":2.0},"ty.html#allocating-and-working-with-types":{"tf":1.4142135623730952},"query.html#adding-a-new-kind-of-query":{"tf":2.6457513110645909},"appendix/stupid-stats.html#compilercontroller":{"tf":1.0},"traits/goals-and-clauses.html#coinductive-goals":{"tf":1.4142135623730952},"mir/index.html#key-mir-vocabulary":{"tf":1.0},"compiler-debugging.html#expensive-operations-in-logs":{"tf":1.0},"diag.html#declaring-a-lint":{"tf":1.7320508075688773},"mir/regionck.html#what-is-a-universe":{"tf":1.0},"traits/chalk-overview.html#intermediate-representation-ir":{"tf":1.4142135623730952},"method-lookup.html#candidate-assembly":{"tf":1.0},"mir/visitor.html#mir-visitor":{"tf":1.0},"traits/lowering-to-logic.html#rust-traits-and-logic":{"tf":1.0},"traits/chalk-overview.html#parsing":{"tf":1.0},"query.html#how-the-compiler-executes-a-query":{"tf":2.23606797749979},"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":2.23606797749979},"compiletest.html#introduction":{"tf":1.0},"variance.html#constraints":{"tf":1.4142135623730952},"compiletest.html#adding-a-new-header-command":{"tf":2.0},"the-parser.html#the-parser":{"tf":1.0},"traits/chalk-overview.html#lowering":{"tf":1.0},"appendix/code-index.html#appendix-d-code-index":{"tf":3.872983346207417},"rustdoc.html#from-clean-to-crate":{"tf":1.0},"ty.html#the-tcx-and-how-it-uses-lifetimes":{"tf":1.0},"appendix/glossary.html#appendix-c-glossary":{"tf":1.0},"variance.html#variance-and-object-types":{"tf":1.0},"mir/passes.html#implementing-and-registering-a-pass":{"tf":1.4142135623730952},"type-checking.html#type-collection":{"tf":1.0},"rustdoc.html#from-crate-to-clean":{"tf":1.4142135623730952}},"df":30,"u":{"docs":{},"df":0,"r":{"docs":{"conventions.html#how-to-structure-your-pr":{"tf":1.4142135623730952},"the-parser.html#the-parser":{"tf":1.4142135623730952},"mir/index.html#key-mir-vocabulary":{"tf":1.0},"high-level-overview.html#crate-structure":{"tf":2.0},"ty.html#the-tcx-and-how-it-uses-lifetimes":{"tf":1.0},"rustc-driver.html#a-note-on-lifetimes":{"tf":1.0},"tests/adding.html#adding-new-tests":{"tf":1.0},"tests/adding.html#other-header-commands":{"tf":1.4142135623730952},"traits/chalk-overview.html#blog-posts":{"tf":1.0},"appendix/glossary.html#appendix-c-glossary":{"tf":1.0},"diag.html#span":{"tf":1.0},"appendix/background.html#what-is-a-control-flow-graph":{"tf":1.0},"name-resolution.html#namespaces":{"tf":1.0},"traits/goals-and-clauses.html#goals-and-clauses-meta-structure":{"tf":1.4142135623730952},"ty.html#beyond-types-other-kinds-of-arena-allocated-data-structures":{"tf":1.7320508075688773},"hir.html#out-of-band-storage-and-the--crate--type":{"tf":1.7320508075688773},"traits/canonicalization.html#canonicalization":{"tf":1.0},"mir/regionck.html#what-is-a-universe":{"tf":1.0},"ty.html#the--ty--module-representing-types":{"tf":1.0},"ty.html#allocating-and-working-with-types":{"tf":1.0},"tests/adding.html#naming-your-test":{"tf":1.4142135623730952},"appendix/code-index.html#appendix-d-code-index":{"tf":1.7320508075688773},"name-resolution.html#scopes-and-ribs":{"tf":1.0},"conventions.html#formatting-and-the-tidy-script":{"tf":1.0},"mir/index.html#mir-data-types":{"tf":1.0}},"df":25}},"'":{"docs":{"compiletest.html#adding-a-new-header-command":{"tf":1.7320508075688773}},"df":1},"_":{"docs":{},"df":0,"s":{"docs":{},"df":0,"p":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"_":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"r":{"docs":{"diag.html#error-messages":{"tf":1.4142135623730952}},"df":1}}}}}}}}}}}},"a":{"docs":{},"df":0,"i":{"docs":{},"df":0,"g":{"docs":{},"df":0,"h":{"docs":{},"df":0,"t":{"docs":{"rustdoc.html#other-tricks-up-its-sleeve":{"tf":1.0}},"df":1,"f":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"w":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"d":{"docs":{"variance.html#the-algorithm":{"tf":1.0},"type-inference.html#lexical-region-resolution":{"tf":1.0},"traits/goals-and-clauses.html#goals-and-clauses-meta-structure":{"tf":1.0},"rustdoc.html#from-crate-to-clean":{"tf":1.0},"variance.html#variance-of-type-and-lifetime-parameters":{"tf":1.0},"mir/index.html#mir-data-types":{"tf":1.0}},"df":6}}}}}}}}}}},"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"g":{"docs":{},"df":0,"i":{"docs":{"conventions.html#how-to-structure-your-pr":{"tf":1.0},"name-resolution.html#todo":{"tf":1.0},"traits/specialization.html#specialization":{"tf":1.0},"name-resolution.html#overall-strategy":{"tf":1.4142135623730952}},"df":4}}}}},"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"g":{"docs":{"traits/specialization.html#specialization":{"tf":1.0}},"df":1,"e":{"docs":{},"df":0,"r":{"docs":{"appendix/glossary.html#appendix-c-glossary":{"tf":1.0},"traits/lowering-to-logic.html#type-checking-generic-functions-beyond-horn-clauses":{"tf":1.0}},"df":2}}}}},"e":{"docs":{},"df":0,"t":{"docs":{},"df":0,"c":{"docs":{},"df":0,"h":{"docs":{"rustdoc.html#from-soup-to-nuts":{"tf":1.0}},"df":1}}},"a":{"docs":{},"df":0,"m":{"docs":{"the-parser.html#the-parser":{"tf":2.0},"macro-expansion.html#the-macro-parser":{"tf":2.0},"macro-expansion.html#example":{"tf":1.0}},"df":3,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"g":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,">":{"docs":{},"df":0,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"m":{"docs":{},"df":0,"<":{"docs":{},"df":0,"'":{"docs":{},"df":0,"a":{"docs":{"traits/goals-and-clauses.html#domain-goals":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}}}}}}}},"i":{"docs":{"ty.html#allocating-and-working-with-types":{"tf":1.4142135623730952}},"df":1,"l":{"docs":{},"df":0,"l":{"docs":{"traits/associated-types.html#integration-with-unification":{"tf":1.4142135623730952},"name-resolution.html#todo":{"tf":1.0},"rustc-driver.html#a-note-on-lifetimes":{"tf":1.0},"tests/adding.html#naming-your-test":{"tf":1.0},"appendix/stupid-stats.html#overview-of-the-compilation-process":{"tf":1.0},"traits/canonical-queries.html#the-traditional-interactive-prolog-query":{"tf":1.0},"hir.html#identifiers-in-the-hir":{"tf":1.0},"traits/index.html#trait-solving-new-style":{"tf":1.4142135623730952},"query.html#queries-demand-driven-compilation":{"tf":1.0},"incremental-compilation.html#the-basic-algorithm":{"tf":1.4142135623730952},"traits/caching.html#where-clauses-and-the-local-vs-global-cache":{"tf":1.4142135623730952},"compiler-debugging.html#logging-etiquette":{"tf":1.0},"traits/resolution.html#selection-during-translation":{"tf":1.0},"name-resolution.html#namespaces":{"tf":1.0},"mir/borrowck.html#major-phases-of-the-borrow-checker":{"tf":1.0},"compiler-debugging.html#expensive-operations-in-logs":{"tf":1.0},"method-lookup.html#candidate-assembly":{"tf":1.0},"traits/canonical-queries.html#examples":{"tf":1.0},"mir/borrowck.html#mir-borrow-check":{"tf":1.0}},"df":19}},"c":{"docs":{},"df":0,"k":{"docs":{"traits/specialization.html#specialization":{"tf":1.0}},"df":1}}},"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{"mir/index.html#key-mir-vocabulary":{"tf":1.0},"mir/regionck.html#mir-based-region-checking-nll":{"tf":1.0}},"df":2,"a":{"docs":{},"df":0,"l":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{"rustdoc.html#other-tricks-up-its-sleeve":{"tf":1.4142135623730952}},"df":1}}},"r":{"docs":{},"df":0,"d":{"docs":{"rustdoc.html#cheat-sheet":{"tf":1.4142135623730952},"mir/visitor.html#traversal":{"tf":1.0},"high-level-overview.html#crate-structure":{"tf":1.0},"mir/regionck.html#mir-based-region-checking-nll":{"tf":1.0},"type-inference.html#type-inference":{"tf":1.0},"traits/index.html#trait-solving-new-style":{"tf":1.0},"traits/lowering-to-logic.html#rust-traits-and-logic":{"tf":1.0},"compiler-debugging.html#debugging-llvm":{"tf":1.0},"compiler-debugging.html#getting-logging-output":{"tf":1.7320508075688773},"rustdoc.html#the-walking-tour-of-rustdoc":{"tf":1.0},"tests/running.html#running-an-individual-test":{"tf":1.0},"traits/lowering-module.html#unit-tests":{"tf":1.0},"traits/lowering-to-logic.html#lowering-to-logic":{"tf":1.0},"conventions.html#formatting-and-the-tidy-script":{"tf":1.0},"how-to-build-and-run.html#running-xpy-and-building-a-stage1-compiler":{"tf":1.4142135623730952},"tests/intro.html#other-tests":{"tf":1.4142135623730952},"traits/lowering-to-logic.html#type-checking-generic-functions-beyond-horn-clauses":{"tf":2.0}},"df":17}}}}},"r":{"docs":{},"df":0,"t":{"docs":{"appendix/glossary.html#appendix-c-glossary":{"tf":1.0},"mir/regionck.html#skolemization-and-outlives-constraints":{"tf":1.0},"mir/regionck.html#another-example":{"tf":1.0},"incremental-compilation.html#incremental-compilation":{"tf":1.0},"appendix/background.html#what-is-a-control-flow-graph":{"tf":1.0},"type-inference.html#snapshots":{"tf":1.0},"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.0},"miri.html#interpretation":{"tf":1.4142135623730952},"traits/lowering-to-logic.html#rust-traits-and-logic":{"tf":1.0},"name-resolution.html#namespaces":{"tf":1.0},"traits/canonicalization.html#canonicalization":{"tf":1.0},"miri.html#miri":{"tf":1.4142135623730952},"appendix/stupid-stats.html#compilercalls":{"tf":1.0},"ty.html#allocating-and-working-with-types":{"tf":1.0},"incrcomp-debugging.html#dumping-the-graph":{"tf":1.0},"appendix/stupid-stats.html#appendix-a-a-tutorial-on-creating-a-drop-in-replacement-for-rustc":{"tf":1.0},"how-to-build-and-run.html#create-a-configtoml":{"tf":1.0},"incremental-compilation.html#the-query-dag":{"tf":1.0},"traits/goals-and-clauses.html#coinductive-goals":{"tf":1.0},"appendix/stupid-stats.html#overview-of-the-compilation-process":{"tf":1.0},"traits/canonical-queries.html#canonical-queries":{"tf":1.0},"traits/canonical-queries.html#the-traditional-interactive-prolog-query":{"tf":1.4142135623730952},"query.html#queries-demand-driven-compilation":{"tf":1.0},"rustdoc.html#from-clean-to-crate":{"tf":1.0},"how-to-build-and-run.html#running-xpy-and-building-a-stage1-compiler":{"tf":1.0}},"df":25,"/":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{"appendix/glossary.html#appendix-c-glossary":{"tf":1.0}},"df":1}}}}}},"b":{"docs":{},"df":0,"l":{"docs":{"high-level-overview.html#crate-structure":{"tf":1.0}},"df":1}},"c":{"docs":{},"df":0,"k":{"docs":{"mir/regionck.html#skolemization-and-universes":{"tf":1.0},"compiler-debugging.html#getting-a-backtrace-for-errors":{"tf":1.0},"miri.html#interpretation":{"tf":1.7320508075688773},"name-resolution.html#scopes-and-ribs":{"tf":2.0},"compiler-debugging.html#getting-a-backtrace":{"tf":2.0},"ty.html#allocating-and-working-with-types":{"tf":1.0},"mir/index.html#key-mir-vocabulary":{"tf":1.4142135623730952},"const-eval.html#constant-evaluation":{"tf":1.0},"type-inference.html#snapshots":{"tf":1.0}},"df":9}},"g":{"docs":{},"df":0,"e":{"docs":{"mir/passes.html#seeing-how-the-mir-changes-as-the-compiler-executes":{"tf":1.0},"tests/running.html#running-an-individual-test":{"tf":1.0},"tests/adding.html#editing-and-updating-the-reference-files":{"tf":1.0},"name-resolution.html#overall-strategy":{"tf":1.0},"high-level-overview.html#the-main-stages-of-compilation":{"tf":1.4142135623730952},"tests/adding.html#ignoring-tests":{"tf":1.7320508075688773},"tests/adding.html#normalization":{"tf":1.0},"how-to-build-and-run.html#other-xpy-commands":{"tf":2.0},"name-resolution.html#todo":{"tf":1.0},"appendix/stupid-stats.html#overview-of-the-compilation-process":{"tf":1.0},"tests/running.html#running-a-subset-of-the-test-suites":{"tf":2.449489742783178},"rustdoc.html#cheat-sheet":{"tf":1.4142135623730952},"tests/running.html#running-tests":{"tf":1.0},"how-to-build-and-run.html#running-xpy-and-building-a-stage1-compiler":{"tf":3.4641016151377546}},"df":14,"1":{"docs":{"tests/adding.html#ignoring-tests":{"tf":1.0},"how-to-build-and-run.html#running-xpy-and-building-a-stage1-compiler":{"tf":2.8284271247461905},"tests/running.html#running-a-subset-of-the-test-suites":{"tf":1.0},"tests/running.html#running-an-individual-test":{"tf":1.0},"how-to-build-and-run.html#creating-a-rustup-toolchain":{"tf":1.7320508075688773}},"df":5},"2":{"docs":{"how-to-build-and-run.html#other-xpy-commands":{"tf":1.0},"how-to-build-and-run.html#running-xpy-and-building-a-stage1-compiler":{"tf":2.0},"how-to-build-and-run.html#creating-a-rustup-toolchain":{"tf":1.4142135623730952},"tests/adding.html#ignoring-tests":{"tf":1.0}},"df":4},"0":{"docs":{"tests/adding.html#ignoring-tests":{"tf":1.0},"how-to-build-and-run.html#running-xpy-and-building-a-stage1-compiler":{"tf":2.0}},"df":2}}},"t":{"docs":{"rustc-driver.html#the-rustc-driver":{"tf":1.0},"appendix/stupid-stats.html#appendix-a-a-tutorial-on-creating-a-drop-in-replacement-for-rustc":{"tf":1.4142135623730952},"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":3.1622776601683797}},"df":3,"i":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.0}},"df":1}},"c":{"docs":{"traits/canonicalization.html#canonicalizing-the-query":{"tf":1.4142135623730952},"appendix/glossary.html#appendix-c-glossary":{"tf":1.4142135623730952},"mir/regionck.html#back-to-our-example":{"tf":1.7320508075688773},"miri.html#interpretation":{"tf":1.0},"mir/regionck.html#what-is-a-universe":{"tf":1.4142135623730952},"traits/lowering-module.html#unit-tests":{"tf":1.4142135623730952},"mir/regionck.html#skolemization-and-outlives-constraints":{"tf":1.7320508075688773},"const-eval.html#constant-evaluation":{"tf":1.7320508075688773},"appendix/background.html#what-is-a-dataflow-analysis":{"tf":1.0},"miri.html#allocations":{"tf":1.0},"rustdoc.html#from-clean-to-crate":{"tf":1.0},"variance.html#variance-and-associated-types":{"tf":2.449489742783178},"mir/regionck.html#skolemization-and-universes":{"tf":1.7320508075688773},"traits/hrtb.html#basic-matching-and-skolemization-leaks":{"tf":1.7320508075688773},"traits/goals-and-clauses.html#domain-goals":{"tf":1.0},"mir/index.html#mir-data-types":{"tf":1.0},"mir/regionck.html#subtyping-and-skolemization":{"tf":2.0},"traits/canonicalization.html#processing-the-canonicalized-query-result":{"tf":1.7320508075688773}},"df":18,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{"traits/hrtb.html#basic-matching-and-skolemization-leaks":{"tf":1.7320508075688773}},"df":1}}}}},"u":{"docs":{"compiletest.html#implementing-the-behavior-change":{"tf":2.6457513110645909},"compiletest.html#adding-a-new-header-command":{"tf":2.449489742783178},"compiletest.html#introduction":{"tf":1.0}},"df":3},"e":{"docs":{"mir/passes.html#mir-passes":{"tf":1.0},"rustc-driver.html#a-note-on-lifetimes":{"tf":1.4142135623730952},"mir/borrowck.html#mir-borrow-check":{"tf":1.0},"traits/lowering-to-logic.html#rust-traits-and-logic":{"tf":1.0},"appendix/code-index.html#appendix-d-code-index":{"tf":1.4142135623730952},"traits/canonicalization.html#canonicalization":{"tf":1.0},"appendix/stupid-stats.html#overview-of-the-compilation-process":{"tf":1.0},"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.0},"rustdoc.html#from-clean-to-crate":{"tf":1.0},"traits/lowering-rules.html#trait-header":{"tf":1.4142135623730952},"mir/passes.html#seeing-how-the-mir-changes-as-the-compiler-executes":{"tf":1.0},"rustdoc.html#from-crate-to-clean":{"tf":1.0},"rustc-driver.html#the-rustc-driver":{"tf":1.0},"rustdoc.html#from-soup-to-nuts":{"tf":1.0},"appendix/stupid-stats.html#compilercontroller":{"tf":2.23606797749979},"mir/visitor.html#mir-visitor":{"tf":1.4142135623730952}},"df":16,"_":{"docs":{},"df":0,"a":{"docs":{},"df":0,"f":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"_":{"docs":{"rustc-driver.html#the-rustc-driver":{"tf":1.0}},"df":1}}}}}}},".":{"docs":{},"df":0,"k":{"docs":{},"df":0,"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,".":{"docs":{},"df":0,"u":{"docs":{},"df":0,"n":{"docs":{},"df":0,"w":{"docs":{},"df":0,"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"p":{"docs":{"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.0}},"df":1}}}}}}}}}}}}},"m":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{"compiler-debugging.html#expensive-operations-in-logs":{"tf":1.0},"miri.html#interpretation":{"tf":1.4142135623730952},"rustdoc.html#hot-potato":{"tf":1.0},"mir/index.html#key-mir-vocabulary":{"tf":3.0},"appendix/background.html#what-is-a-control-flow-graph":{"tf":2.0},"mir/index.html#mir-data-types":{"tf":1.4142135623730952},"compiler-debugging.html#getting-logging-output":{"tf":1.0},"miri.html#miri":{"tf":1.0},"mir/regionck.html#representing-the-values-of-a-region-variable":{"tf":1.0}},"df":9,"1":{"docs":{"appendix/background.html#what-is-a-control-flow-graph":{"tf":1.0}},"df":1},"s":{"docs":{},"df":0,".":{"docs":{},"df":0,"l":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{"mir/regionck.html#representing-the-values-of-a-region-variable":{"tf":1.0}},"df":1}}}}},"0":{"docs":{"appendix/background.html#what-is-a-control-flow-graph":{"tf":1.0}},"df":1},"2":{"docs":{"appendix/background.html#what-is-a-control-flow-graph":{"tf":1.0}},"df":1}}}}}}}},"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"e":{"docs":{"high-level-overview.html#crate-structure":{"tf":1.0}},"df":1}},"p":{"docs":{"appendix/stupid-stats.html#compilercalls":{"tf":1.0},"appendix/stupid-stats.html#the-driver-customisation-apis":{"tf":1.0},"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.7320508075688773},"appendix/stupid-stats.html#compilercontroller":{"tf":1.4142135623730952},"traits/canonical-queries.html#the-traditional-interactive-prolog-query":{"tf":1.4142135623730952}},"df":5},"l":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{"mir/passes.html#stealing":{"tf":2.23606797749979}},"df":1}}},"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"g":{"docs":{"rustc-driver.html#a-note-on-lifetimes":{"tf":1.0},"hir.html#out-of-band-storage-and-the--crate--type":{"tf":1.4142135623730952},"mir/index.html#key-mir-vocabulary":{"tf":1.0},"appendix/glossary.html#appendix-c-glossary":{"tf":1.0}},"df":4,"e":{"docs":{},"df":0,"d":{"docs":{},"df":0,"e":{"docs":{},"df":0,"a":{"docs":{},"df":0,"d":{"docs":{},"df":0,"(":{"docs":{},"df":0,"_":{"docs":{},"df":0,"1":{"docs":{"mir/index.html#key-mir-vocabulary":{"tf":1.0}},"df":1}}}}}}},"l":{"docs":{"mir/index.html#key-mir-vocabulary":{"tf":1.0}},"df":1,"i":{"docs":{},"df":0,"v":{"docs":{},"df":0,"e":{"docs":{},"df":0,"(":{"docs":{},"df":0,"_":{"docs":{},"df":0,"3":{"docs":{"mir/index.html#key-mir-vocabulary":{"tf":1.0}},"df":1},"1":{"docs":{"mir/index.html#key-mir-vocabulary":{"tf":1.4142135623730952}},"df":1}}}}}}}}}},"e":{"docs":{"tests/adding.html#other-header-commands":{"tf":1.0},"rustdoc.html#from-soup-to-nuts":{"tf":1.0},"mir/index.html#key-mir-vocabulary":{"tf":1.0},"traits/resolution.html#major-concepts":{"tf":1.0},"traits/resolution.html#selection-during-translation":{"tf":1.0},"hir.html#out-of-band-storage-and-the--crate--type":{"tf":1.0},"mir/regionck.html#representing-the-values-of-a-region-variable":{"tf":1.0},"mir/index.html#mir-data-types":{"tf":1.0},"query.html#queries-demand-driven-compilation":{"tf":1.0},"type-inference.html#inference-variables":{"tf":1.0},"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.0},"incremental-compilation.html#the-query-dag":{"tf":1.0},"miri.html#miri":{"tf":1.7320508075688773},"tests/adding.html#naming-your-test":{"tf":1.0},"traits/canonical-queries.html#examples":{"tf":1.0},"type-inference.html#creating-an-inference-context":{"tf":1.0},"compiletest.html#adding-a-new-header-command":{"tf":1.0},"const-eval.html#constant-evaluation":{"tf":1.0},"appendix/glossary.html#appendix-c-glossary":{"tf":1.0}},"df":19}}},"u":{"docs":{},"df":0,"p":{"docs":{},"df":0,"i":{"docs":{},"df":0,"d":{"docs":{"appendix/stupid-stats.html#appendix-a-a-tutorial-on-creating-a-drop-in-replacement-for-rustc":{"tf":1.4142135623730952},"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":2.6457513110645909},"rustc-driver.html#the-rustc-driver":{"tf":1.0}},"df":3,"c":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":2.0}},"df":1,"l":{"docs":{},"df":0,"s":{"docs":{},"df":0,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"n":{"docs":{},"df":0,"e":{"docs":{},"df":0,"w":{"docs":{"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.0}},"df":1}}}}}}}}}},"v":{"docs":{},"df":0,"i":{"docs":{},"df":0,"s":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.7320508075688773}},"df":1,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"n":{"docs":{},"df":0,"e":{"docs":{},"df":0,"w":{"docs":{"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.0}},"df":1}}},"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"g":{"docs":{},"df":0,"_":{"docs":{},"df":0,"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"u":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}}}},"c":{"docs":{},"df":0,"t":{"docs":{"hir.html#out-of-band-storage-and-the--crate--type":{"tf":1.0}},"df":1},"k":{"docs":{"query.html#cycles-between-queries":{"tf":1.0}},"df":1}},"f":{"docs":{},"df":0,"f":{"docs":{"traits/canonical-queries.html#examples":{"tf":1.0},"traits/lowering-rules.html#lowering-traits":{"tf":1.4142135623730952},"rustc-driver.html#the-rustc-driver":{"tf":1.0},"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.0}},"df":4,".":{"docs":{},"df":0,"c":{"docs":{},"df":0,"l":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{"traits/goals-and-clauses.html#domain-goals":{"tf":1.0}},"df":1}}}}}}}},"d":{"docs":{},"df":0,"o":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{"tests/adding.html#normalization":{"tf":1.0},"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":2.0},"tests/adding.html#editing-and-updating-the-reference-files":{"tf":1.0}},"df":3,"/":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"d":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"r":{"docs":{"tests/intro.html#compiletest-test-suites":{"tf":1.0},"tests/running.html#running-tests":{"tf":1.0}},"df":2}}}}}}}}}},":":{"docs":{},"df":0,":":{"docs":{},"df":0,"m":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"k":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"s":{"docs":{"traits/lowering-module.html#unit-tests":{"tf":1.0}},"df":1}}}}}}}}},"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"v":{"docs":{},"df":0,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"t":{"docs":{},"df":0,"_":{"docs":{},"df":0,"e":{"docs":{},"df":0,"x":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{},"df":0,"_":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{},"df":0,"u":{"docs":{},"df":0,"s":{"docs":{},"df":0,"(":{"docs":{},"df":0,"0":{"docs":{"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}},"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"g":{"docs":{},"df":0,"s":{"docs":{},"df":0,"(":{"docs":{},"df":0,")":{"docs":{},"df":0,".":{"docs":{},"df":0,"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"l":{"docs":{},"df":0,"l":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"df":0,"y":{"docs":{},"df":0,"s":{"docs":{},"df":0,"_":{"docs":{},"df":0,"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"m":{"docs":{},"df":0,"m":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"b":{"docs":{},"df":0,"a":{"docs":{},"df":0,"c":{"docs":{},"df":0,"k":{"docs":{},"df":0,"t":{"docs":{},"df":0,"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"c":{"docs":{},"df":0,"e":{"docs":{},"df":0,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"_":{"docs":{},"df":0,"p":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{"compiler-debugging.html#getting-a-backtrace":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}}}}}}}}},":":{"docs":{},"df":0,":":{"docs":{},"df":0,"i":{"docs":{},"df":0,"m":{"docs":{},"df":0,"p":{"docs":{},"df":0,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"b":{"docs":{},"df":0,"a":{"docs":{},"df":0,"c":{"docs":{},"df":0,"k":{"docs":{},"df":0,"t":{"docs":{},"df":0,"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"c":{"docs":{},"df":0,"e":{"docs":{},"df":0,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"t":{"docs":{},"df":0,"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"c":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"g":{"docs":{},"df":0,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"i":{"docs":{},"df":0,"m":{"docs":{},"df":0,"p":{"docs":{},"df":0,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"u":{"docs":{},"df":0,"n":{"docs":{},"df":0,"w":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{},"df":0,"_":{"docs":{},"df":0,"b":{"docs":{},"df":0,"a":{"docs":{},"df":0,"c":{"docs":{},"df":0,"k":{"docs":{},"df":0,"t":{"docs":{},"df":0,"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"c":{"docs":{"compiler-debugging.html#getting-a-backtrace":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"v":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"v":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"<":{"docs":{},"df":0,"i":{"docs":{},"df":0,"3":{"docs":{},"df":0,"2":{"docs":{"mir/index.html#key-mir-vocabulary":{"tf":1.7320508075688773}},"df":1}}},"t":{"docs":{},"df":0,">":{"docs":{},"df":0,">":{"docs":{},"df":0,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"p":{"docs":{},"df":0,"u":{"docs":{},"df":0,"s":{"docs":{},"df":0,"h":{"docs":{},"df":0,"(":{"docs":{},"df":0,"m":{"docs":{},"df":0,"o":{"docs":{},"df":0,"v":{"docs":{"mir/index.html#key-mir-vocabulary":{"tf":1.0}},"df":1}}}}}}}},"n":{"docs":{},"df":0,"e":{"docs":{},"df":0,"w":{"docs":{"mir/index.html#key-mir-vocabulary":{"tf":1.4142135623730952}},"df":1}}}}}}}}}}}}}}}}},"f":{"docs":{},"df":0,"m":{"docs":{},"df":0,"t":{"docs":{"compiler-debugging.html#expensive-operations-in-logs":{"tf":1.0}},"df":1,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"d":{"docs":{},"df":0,"i":{"docs":{},"df":0,"s":{"docs":{},"df":0,"p":{"docs":{},"df":0,"l":{"docs":{},"df":0,"a":{"docs":{},"df":0,"y":{"docs":{"rustdoc.html#from-clean-to-crate":{"tf":1.0}},"df":1}}}}}}},"f":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"m":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{},"df":0,"t":{"docs":{"rustdoc.html#from-clean-to-crate":{"tf":1.0}},"df":1}}}}}}}}}}}},"t":{"docs":{},"df":0,"h":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"a":{"docs":{},"df":0,"d":{"docs":{},"df":0,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"l":{"docs":{},"df":0,"o":{"docs":{},"df":0,"c":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{},"df":0,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"l":{"docs":{},"df":0,"o":{"docs":{},"df":0,"c":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{},"df":0,"k":{"docs":{},"df":0,"e":{"docs":{},"df":0,"y":{"docs":{},"df":0,"<":{"docs":{},"df":0,"t":{"docs":{},"df":0,">":{"docs":{},"df":0,">":{"docs":{},"df":0,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"w":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{},"df":0,"h":{"docs":{"compiler-debugging.html#getting-a-backtrace":{"tf":1.4142135623730952}},"df":1}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"l":{"docs":{},"df":0,"l":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{},"df":0,"i":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"s":{"docs":{},"df":0,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"h":{"docs":{},"df":0,"a":{"docs":{},"df":0,"s":{"docs":{},"df":0,"h":{"docs":{},"df":0,"m":{"docs":{},"df":0,"a":{"docs":{},"df":0,"p":{"docs":{"hir.html#identifiers-in-the-hir":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"traits/lowering-module.html#unit-tests":{"tf":1.0}},"df":1,"a":{"docs":{},"df":0,"t":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,">":{"docs":{},"df":0,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"m":{"docs":{"traits/lowering-module.html#unit-tests":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}}},"o":{"docs":{},"df":0,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"{":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{"compiletest.html#adding-a-new-header-command":{"tf":1.0}},"df":1}}}}}}}}}},"o":{"docs":{},"df":0,"p":{"docs":{},"df":0,"s":{"docs":{},"df":0,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"a":{"docs":{},"df":0,"d":{"docs":{},"df":0,"d":{"docs":{"compiler-debugging.html#getting-a-backtrace-for-errors":{"tf":2.0}},"df":1}}}}}}}},"p":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"i":{"docs":{},"df":0,"c":{"docs":{},"df":0,"k":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"g":{"docs":{},"df":0,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"r":{"docs":{},"df":0,"u":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"_":{"docs":{},"df":0,"p":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"i":{"docs":{},"df":0,"c":{"docs":{},"df":0,"_":{"docs":{},"df":0,"w":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{},"df":0,"h":{"docs":{},"df":0,"_":{"docs":{},"df":0,"h":{"docs":{},"df":0,"o":{"docs":{},"df":0,"o":{"docs":{},"df":0,"k":{"docs":{"compiler-debugging.html#getting-a-backtrace":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}}},"d":{"docs":{},"df":0,"e":{"docs":{},"df":0,"f":{"docs":{},"df":0,"a":{"docs":{},"df":0,"u":{"docs":{},"df":0,"l":{"docs":{},"df":0,"t":{"docs":{},"df":0,"_":{"docs":{},"df":0,"h":{"docs":{},"df":0,"o":{"docs":{},"df":0,"o":{"docs":{},"df":0,"k":{"docs":{"compiler-debugging.html#getting-a-backtrace":{"tf":1.0}},"df":1,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"{":{"docs":{},"df":0,"{":{"docs":{},"df":0,"c":{"docs":{},"df":0,"l":{"docs":{},"df":0,"o":{"docs":{},"df":0,"s":{"docs":{},"df":0,"u":{"docs":{},"df":0,"r":{"docs":{"compiler-debugging.html#getting-a-backtrace":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}}}}},"b":{"docs":{},"df":0,"e":{"docs":{},"df":0,"g":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"_":{"docs":{},"df":0,"p":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{"compiler-debugging.html#getting-a-backtrace":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"r":{"docs":{"tests/adding.html#editing-and-updating-the-reference-files":{"tf":1.0},"tests/adding.html#normalization":{"tf":2.449489742783178},"traits/lowering-module.html#unit-tests":{"tf":1.0},"compiletest.html#adding-a-new-header-command":{"tf":1.0}},"df":4}}}},"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"i":{"docs":{},"df":0,"d":{"docs":{"appendix/glossary.html#appendix-c-glossary":{"tf":1.0}},"df":1}}}},"p":{"docs":{"traits/caching.html#an-example":{"tf":1.0},"how-to-build-and-run.html#running-xpy-and-building-a-stage1-compiler":{"tf":1.0},"mir/borrowck.html#major-phases-of-the-borrow-checker":{"tf":1.0},"query.html#adding-a-new-kind-of-query":{"tf":1.0},"the-parser.html#the-parser":{"tf":1.0},"method-lookup.html#candidate-search":{"tf":2.23606797749979},"miri.html#interpretation":{"tf":1.0},"rustdoc.html#hot-potato":{"tf":1.0},"tests/intro.html#testing-infrastructure":{"tf":1.0},"method-lookup.html#candidate-assembly":{"tf":1.0},"tests/intro.html#testing-on-emulators":{"tf":1.0},"method-lookup.html#steps":{"tf":2.0},"high-level-overview.html#the-main-stages-of-compilation":{"tf":1.4142135623730952},"conventions.html#how-to-structure-your-pr":{"tf":1.0},"rustdoc.html#the-walking-tour-of-rustdoc":{"tf":1.0},"traits/canonicalization.html#processing-the-canonicalized-query-result":{"tf":1.4142135623730952}},"df":16},"a":{"docs":{},"df":0,"l":{"docs":{"mir/passes.html#stealing":{"tf":2.0},"query.html#adding-a-new-kind-of-query":{"tf":1.4142135623730952}},"df":2,"<":{"docs":{},"df":0,"m":{"docs":{},"df":0,"i":{"docs":{},"df":0,"r":{"docs":{},"df":0,"<":{"docs":{},"df":0,"'":{"docs":{},"df":0,"t":{"docs":{},"df":0,"c":{"docs":{},"df":0,"x":{"docs":{"mir/passes.html#stealing":{"tf":1.0}},"df":1}}}}}}}}}}}},"y":{"docs":{},"df":0,"l":{"docs":{},"df":0,"e":{"docs":{"traits/canonical-queries.html#the-traditional-interactive-prolog-query":{"tf":1.0},"traits/chalk-overview.html#lowering":{"tf":1.0},"traits/chalk-overview.html#intermediate-representation-ir":{"tf":1.0},"rustc-driver.html#a-note-on-lifetimes":{"tf":1.4142135623730952},"traits/goals-and-clauses.html#goals-and-clauses":{"tf":1.0},"traits/chalk-overview.html#blog-posts":{"tf":1.0},"traits/lowering-module.html#the--program_clauses_for--query":{"tf":1.0},"traits/lowering-rules.html#lowering-traits":{"tf":1.0},"traits/lowering-rules.html#associated-type-declarations":{"tf":1.0},"traits/lowering-to-logic.html#rust-traits-and-logic":{"tf":1.0},"traits/lowering-rules.html#rule-names-and-cross-references":{"tf":1.0},"conventions.html#formatting-and-the-tidy-script":{"tf":1.4142135623730952},"traits/lowering-rules.html#function-and-constant-values":{"tf":1.0},"query.html#cycles-between-queries":{"tf":1.0},"traits/lowering-module.html#the-lowering-module-in-rustc":{"tf":1.0},"traits/lowering-rules.html#lowering-impls":{"tf":1.0},"traits/lowering-rules.html#lowering-impl-items":{"tf":1.0},"traits/lowering-to-logic.html#source":{"tf":1.0},"traits/lowering-to-logic.html#type-checking-normal-functions":{"tf":1.0},"traits/hrtb.html#basic-matching-and-skolemization-leaks":{"tf":1.0},"traits/caching.html#where-clauses-and-the-local-vs-global-cache":{"tf":1.0},"traits/associated-types.html#associated-type-projection-and-normalization":{"tf":1.0},"traits/canonical-queries.html#canonical-queries":{"tf":1.0},"traits/canonical-queries.html#a-trait-query-in-rustc":{"tf":1.0},"traits/specialization.html#specialization":{"tf":1.0},"traits/hrtb.html#higher-ranked-trait-obligations":{"tf":1.0},"variance.html#variance-and-associated-types":{"tf":1.0},"traits/canonicalization.html#canonicalizing-the-query-result":{"tf":1.0},"traits/lowering-rules.html#notation":{"tf":1.0},"traits/associated-types.html#integration-with-unification":{"tf":1.0},"traits/canonicalization.html#canonicalization":{"tf":1.0},"traits/canonicalization.html#executing-the-query":{"tf":1.0},"tests/intro.html#other-tests":{"tf":1.0},"traits/caching.html#an-example":{"tf":1.0},"traits/lowering-to-logic.html#type-checking-generic-functions-beyond-horn-clauses":{"tf":1.0},"traits/hrtb.html#higher-ranked-trait-bounds":{"tf":1.0},"traits/canonical-queries.html#examples":{"tf":1.0},"traits/chalk-overview.html#well-formedness-checks":{"tf":1.0},"traits/chalk-overview.html#solver":{"tf":1.0},"traits/associated-types.html#projection-equality":{"tf":1.0},"traits/index.html#trait-solving-new-style":{"tf":1.7320508075688773},"traits/goals-and-clauses.html#incomplete-chapter":{"tf":1.0},"traits/chalk-overview.html#resources":{"tf":1.0},"traits/canonicalization.html#canonicalizing-the-query":{"tf":1.0},"traits/goals-and-clauses.html#coinductive-goals":{"tf":1.0},"traits/bibliography.html#bibliography":{"tf":1.4142135623730952},"traits/chalk-overview.html#rules":{"tf":1.0},"traits/chalk-overview.html#parsing":{"tf":1.0},"traits/associated-types.html#equality-and-associated-types":{"tf":1.0},"traits/wf.html#well-formedness-checking":{"tf":1.0},"traits/lowering-module.html#unit-tests":{"tf":1.0},"traits/chalk-overview.html#an-overview-of-chalk":{"tf":1.0},"traits/goals-and-clauses.html#domain-goals":{"tf":1.0},"traits/canonicalization.html#processing-the-canonicalized-query-result":{"tf":1.0},"traits/implied-bounds.html#implied-bounds":{"tf":1.0},"traits/regions.html#region-constraints":{"tf":1.0},"traits/associated-types.html#skolemized-associated-types":{"tf":1.0},"traits/caching.html#caching-and-subtle-considerations-therewith":{"tf":1.0},"traits/lowering-rules.html#trait-header":{"tf":1.0},"traits/lowering-to-logic.html#lowering-to-logic":{"tf":1.0},"traits/slg.html#the-slg-solver":{"tf":1.0},"traits/chalk-overview.html#testing":{"tf":1.0},"traits/lowering-rules.html#lowering-rules":{"tf":1.0},"traits/lowering-rules.html#lowering-where-clauses":{"tf":1.0},"traits/goals-and-clauses.html#goals-and-clauses-meta-structure":{"tf":1.0},"traits/lowering-rules.html#transforming-the-lowered-where-clauses":{"tf":1.0},"traits/lowering-rules.html#associated-type-values":{"tf":1.0},"traits/resolution.html#trait-resolution-old-style":{"tf":1.4142135623730952},"traits/lowering-rules.html#lowering-trait-items":{"tf":1.0},"traits/lowering-rules.html#lowering-function-and-constant-declarations":{"tf":1.0}},"df":70}}}},"a":{"docs":{},"df":0,"t":{"docs":{},"df":0,"i":{"docs":{},"df":0,"s":{"docs":{},"df":0,"f":{"docs":{},"df":0,"i":{"docs":{"traits/resolution.html#candidate-assembly":{"tf":1.7320508075688773},"mir/regionck.html#back-to-our-example":{"tf":1.0},"traits/chalk-overview.html#lowering":{"tf":1.4142135623730952},"variance.html#trait-variance-and-vtable-resolution":{"tf":1.4142135623730952},"compiler-debugging.html#getting-a-backtrace-for-errors":{"tf":1.4142135623730952},"variance.html#the-algorithm":{"tf":1.0}},"df":6}}}}},"n":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{},"df":0,"i":{"docs":{"how-to-build-and-run.html#running-xpy-and-building-a-stage1-compiler":{"tf":1.0}},"df":1}}}},"w":{"docs":{"traits/associated-types.html#associated-type-projection-and-normalization":{"tf":1.0},"traits/canonical-queries.html#examples":{"tf":1.4142135623730952},"query.html#how-the-compiler-executes-a-query":{"tf":1.0}},"df":3},"u":{"docs":{},"df":0,"c":{"docs":{"mir/borrowck.html#mir-borrow-check":{"tf":1.0}},"df":1}},"y":{"docs":{"mir/regionck.html#another-example":{"tf":1.0},"traits/canonical-queries.html#examples":{"tf":1.0}},"df":2},"c":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{},"df":0,"f":{"docs":{},"df":0,"i":{"docs":{},"df":0,"c":{"docs":{"appendix/glossary.html#appendix-c-glossary":{"tf":1.0}},"df":1}}}}}},"k":{"docs":{},"df":0,"e":{"docs":{"traits/chalk-overview.html#parsing":{"tf":1.0},"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.0}},"df":2}},"l":{"docs":{},"df":0,"s":{"docs":{},"df":0,"a":{"docs":{"incremental-compilation.html#footnotes":{"tf":1.0}},"df":1}}},"v":{"docs":{},"df":0,"e":{"docs":{"how-to-build-and-run.html#running-xpy-and-building-a-stage1-compiler":{"tf":1.0},"appendix/stupid-stats.html#compilercontroller":{"tf":1.0},"incremental-compilation.html#the-basic-algorithm":{"tf":1.0},"incremental-compilation.html#improvements-to-the-basic-algorithm":{"tf":2.23606797749979},"appendix/stupid-stats.html#what-next":{"tf":1.4142135623730952},"incremental-compilation.html#the-try-mark-green-algorithm":{"tf":1.0},"tests/adding.html#guide-to-the-ui-tests":{"tf":1.0}},"df":7}},"d":{"docs":{"diag.html#suggestions":{"tf":2.0}},"df":1},"m":{"docs":{},"df":0,"e":{"docs":{"tests/intro.html#compiletest-test-suites":{"tf":1.0},"tests/adding.html#error-annotations":{"tf":1.0},"type-inference.html#extracting-region-constraints":{"tf":1.0},"type-checking.html#type-collection":{"tf":1.4142135623730952},"type-inference.html#enforcing-equality--subtyping":{"tf":1.4142135623730952},"incremental-compilation.html#the-basic-algorithm":{"tf":2.0},"macro-expansion.html#the-macro-parser":{"tf":1.7320508075688773},"traits/lowering-rules.html#lowering-where-clauses":{"tf":1.0},"mir/borrowck.html#mir-borrow-check":{"tf":1.0},"miri.html#miri":{"tf":1.0},"high-level-overview.html#the-main-stages-of-compilation":{"tf":1.7320508075688773},"traits/canonicalization.html#canonicalizing-the-query-result":{"tf":1.0},"mir/regionck.html#what-is-a-universe":{"tf":1.0},"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.0},"tests/running.html#running-an-individual-test":{"tf":1.4142135623730952},"type-inference.html#region-constraints":{"tf":1.0},"incremental-compilation.html#the-try-mark-green-algorithm":{"tf":1.0},"traits/chalk-overview.html#well-formedness-checks":{"tf":1.4142135623730952},"name-resolution.html#scopes-and-ribs":{"tf":1.4142135623730952},"mir/regionck.html#another-example":{"tf":1.0},"traits/index.html#trait-solving-new-style":{"tf":1.0},"incrcomp-debugging.html#tracking-down-incorrect-edges":{"tf":1.0},"incremental-compilation.html#the-query-dag":{"tf":1.4142135623730952},"hir.html#identifiers-in-the-hir":{"tf":1.0},"traits/associated-types.html#skolemized-associated-types":{"tf":1.0},"appendix/stupid-stats.html#appendix-a-a-tutorial-on-creating-a-drop-in-replacement-for-rustc":{"tf":1.4142135623730952},"conventions.html#how-to-structure-your-pr":{"tf":1.0},"traits/specialization.html#specialization":{"tf":1.0},"const-eval.html#constant-evaluation":{"tf":1.0},"traits/chalk-overview.html#parsing":{"tf":1.0},"how-to-build-and-run.html#running-xpy-and-building-a-stage1-compiler":{"tf":1.0},"traits/canonicalization.html#canonicalization":{"tf":1.4142135623730952},"traits/resolution.html#candidate-assembly":{"tf":1.4142135623730952},"conventions.html#prefer-exhaustive-matches":{"tf":1.0},"query.html#how-the-compiler-executes-a-query":{"tf":1.0},"traits/canonical-queries.html#examples":{"tf":1.4142135623730952},"method-lookup.html#candidate-assembly":{"tf":1.0},"type-inference.html#inference-variables":{"tf":1.4142135623730952},"ty.html#the-tcx-and-how-it-uses-lifetimes":{"tf":1.4142135623730952},"ty.html#allocating-and-working-with-types":{"tf":1.4142135623730952},"mir/regionck.html#universes-and-skolemized-region-elements":{"tf":1.0}},"df":41}},"f":{"docs":{},"df":0,"e":{"docs":{"ty.html#allocating-and-working-with-types":{"tf":1.0},"appendix/glossary.html#appendix-c-glossary":{"tf":1.7320508075688773},"traits/caching.html#where-clauses-and-the-local-vs-global-cache":{"tf":1.0},"variance.html#addendum-variance-on-traits":{"tf":1.0},"traits/lowering-to-logic.html#type-checking-generic-functions-beyond-horn-clauses":{"tf":1.0},"variance.html#variance-and-associated-types":{"tf":1.0}},"df":6,"t":{"docs":{},"df":0,"i":{"docs":{"mir/index.html#the-mir-mid-level-ir":{"tf":1.0}},"df":1}}}}},"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"g":{"docs":{},"df":0,"l":{"docs":{"hir.html#identifiers-in-the-hir":{"tf":1.0},"mir/index.html#mir-data-types":{"tf":1.0},"conventions.html#prefer-exhaustive-matches":{"tf":1.0},"compiletest.html#adding-a-new-header-command":{"tf":1.0},"appendix/stupid-stats.html#appendix-a-a-tutorial-on-creating-a-drop-in-replacement-for-rustc":{"tf":1.0},"high-level-overview.html#the-main-stages-of-compilation":{"tf":1.0},"macro-expansion.html#example":{"tf":1.0},"traits/resolution.html#candidate-assembly":{"tf":1.0},"appendix/stupid-stats.html#overview-of-the-compilation-process":{"tf":1.4142135623730952},"tests/adding.html#revisions":{"tf":1.0},"mir/visitor.html#mir-visitor":{"tf":1.0},"tests/intro.html#testing-infrastructure":{"tf":1.0},"traits/specialization.html#specialization":{"tf":1.0},"incrcomp-debugging.html#dumping-the-graph":{"tf":1.0},"rustdoc.html#hot-potato":{"tf":1.4142135623730952},"variance.html#variance-and-associated-types":{"tf":1.0},"miri.html#datastructures":{"tf":1.0}},"df":17,"e":{"docs":{},"df":0,"t":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{"traits/resolution.html#candidate-assembly":{"tf":1.0}},"df":1}}}}}}},"m":{"docs":{},"df":0,"p":{"docs":{},"df":0,"l":{"docs":{"traits/goals-and-clauses.html#domain-goals":{"tf":1.0},"mir/index.html#key-mir-vocabulary":{"tf":1.0},"miri.html#miri":{"tf":1.0},"incremental-compilation.html#improvements-to-the-basic-algorithm":{"tf":1.0},"ty.html#allocating-and-working-with-types":{"tf":1.0},"traits/lowering-to-logic.html#type-checking-generic-functions-beyond-horn-clauses":{"tf":1.0},"appendix/stupid-stats.html#appendix-a-a-tutorial-on-creating-a-drop-in-replacement-for-rustc":{"tf":1.0},"compiletest.html#adding-a-new-header-command":{"tf":1.4142135623730952},"traits/hrtb.html#higher-ranked-trait-obligations":{"tf":1.0},"query.html#invoking-queries":{"tf":1.0},"incremental-compilation.html#incremental-compilation":{"tf":1.0},"traits/caching.html#where-clauses-and-the-local-vs-global-cache":{"tf":1.4142135623730952},"high-level-overview.html#the-main-stages-of-compilation":{"tf":1.0},"traits/canonicalization.html#canonicalization":{"tf":1.0},"variance.html#the-algorithm":{"tf":1.0},"query.html#queries-demand-driven-compilation":{"tf":1.0},"mir/visitor.html#mir-visitor":{"tf":1.0},"query.html#how-the-compiler-executes-a-query":{"tf":1.0},"traits/resolution.html#candidate-assembly":{"tf":1.4142135623730952},"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":2.0},"name-resolution.html#scopes-and-ribs":{"tf":1.0},"traits/lowering-to-logic.html#type-checking-normal-functions":{"tf":1.0},"mir/passes.html#mir-passes":{"tf":1.0}},"df":23,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.0},"query.html#cycles-between-queries":{"tf":1.0},"incrcomp-debugging.html#testing-the-dependency-graph":{"tf":1.0},"const-eval.html#constant-evaluation":{"tf":1.4142135623730952}},"df":4}},"r":{"docs":{"rustdoc.html#other-tricks-up-its-sleeve":{"tf":1.0},"mir/regionck.html#mir-based-region-checking-nll":{"tf":1.0},"traits/specialization.html#specialization":{"tf":1.0}},"df":3}},"i":{"docs":{"compiletest.html#implementing-the-behavior-change":{"tf":1.0},"type-inference.html#region-constraints":{"tf":1.0},"traits/resolution.html#major-concepts":{"tf":1.0},"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.0},"compiletest.html#adding-a-new-test-file":{"tf":1.0},"tests/adding.html#normalization":{"tf":1.0},"mir/passes.html#mir-passes":{"tf":1.0},"mir/passes.html#stealing":{"tf":1.0},"incrcomp-debugging.html#tracking-down-incorrect-edges":{"tf":1.0},"mir/regionck.html#another-example":{"tf":1.0},"miri.html#interpretation":{"tf":1.0},"query.html#adding-a-new-kind-of-query":{"tf":1.0},"mir/passes.html#implementing-and-registering-a-pass":{"tf":1.0},"traits/goals-and-clauses.html#coinductive-goals":{"tf":1.0},"tests/running.html#running-tests":{"tf":1.0},"appendix/background.html#what-is-a-control-flow-graph":{"tf":1.0}},"df":16,"f":{"docs":{},"df":0,"i":{"docs":{"macro-expansion.html#the-macro-parser":{"tf":1.0},"traits/lowering-rules.html#trait-header":{"tf":1.0},"traits/associated-types.html#associated-type-projection-and-normalization":{"tf":1.0},"mir/index.html#the-mir-mid-level-ir":{"tf":1.0},"rustdoc.html#the-walking-tour-of-rustdoc":{"tf":1.0},"incremental-compilation.html#incremental-compilation":{"tf":1.0}},"df":6}}}}},"i":{"docs":{},"df":0,"l":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{"traits/lowering-to-logic.html#type-checking-generic-functions-beyond-horn-clauses":{"tf":1.0},"hir.html#out-of-band-storage-and-the--crate--type":{"tf":1.0},"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.0},"tests/adding.html#normalization":{"tf":1.0},"mir/regionck.html#final-example":{"tf":1.0},"diag.html#span":{"tf":1.0},"traits/goals-and-clauses.html#coinductive-goals":{"tf":1.0},"rustdoc.html#other-tricks-up-its-sleeve":{"tf":1.0},"type-checking.html#type-collection":{"tf":1.0},"appendix/stupid-stats.html#appendix-a-a-tutorial-on-creating-a-drop-in-replacement-for-rustc":{"tf":1.0},"param_env.html#parameter-environment":{"tf":1.0},"macro-expansion.html#the-macro-parser":{"tf":1.0},"traits/lowering-to-logic.html#lowering-to-logic":{"tf":1.0},"diag.html#declaring-a-lint":{"tf":1.0}},"df":14,"l":{"docs":{},"df":0,"i":{"docs":{"type-inference.html#enforcing-equality--subtyping":{"tf":1.0},"mir/regionck.html#representing-the-values-of-a-region-variable":{"tf":1.0},"hir.html#the-hir-map":{"tf":1.0},"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.0}},"df":4}}}}}}},"g":{"docs":{},"df":0,"n":{"docs":{},"df":0,"i":{"docs":{},"df":0,"f":{"docs":{},"df":0,"i":{"docs":{},"df":0,"c":{"docs":{"tests/intro.html#other-tests":{"tf":1.4142135623730952}},"df":1}}}},"a":{"docs":{},"df":0,"t":{"docs":{},"df":0,"u":{"docs":{},"df":0,"r":{"docs":{"traits/canonical-queries.html#examples":{"tf":1.0},"appendix/background.html#what-is-a-free-region-or-a-free-variable-what-about-bound-region":{"tf":1.0},"query.html#how-the-compiler-executes-a-query":{"tf":1.0},"mir/regionck.html#mir-based-region-checking-nll":{"tf":1.0},"mir/regionck.html#extending-the-universal-regions-check":{"tf":1.0},"how-to-build-and-run.html#running-xpy-and-building-a-stage1-compiler":{"tf":1.0},"type-inference.html#a-note-on-terminology":{"tf":1.0},"type-checking.html#type-collection":{"tf":1.4142135623730952},"traits/associated-types.html#integration-with-unification":{"tf":1.0},"variance.html#addendum-variance-on-traits":{"tf":1.0}},"df":10}}},"l":{"docs":{"conventions.html#use-todo-comments-for-things-you-dont-want-to-forget":{"tf":1.0},"appendix/stupid-stats.html#compilercontroller":{"tf":1.0}},"df":2}}},"i":{"docs":{},"df":0,"l":{"docs":{"appendix/glossary.html#appendix-c-glossary":{"tf":1.4142135623730952}},"df":1}}},"b":{"docs":{},"df":0,"l":{"docs":{"mir/regionck.html#what-is-a-universe":{"tf":1.0}},"df":1}},"d":{"docs":{},"df":0,"e":{"docs":{"appendix/stupid-stats.html#overview-of-the-compilation-process":{"tf":1.4142135623730952},"appendix/glossary.html#appendix-c-glossary":{"tf":1.0},"mir/regionck.html#another-example":{"tf":1.0},"traits/caching.html#an-example":{"tf":1.4142135623730952},"mir/index.html#key-mir-vocabulary":{"tf":1.0},"high-level-overview.html#the-main-stages-of-compilation":{"tf":1.0},"type-inference.html#snapshots":{"tf":1.0},"rustdoc.html#the-walking-tour-of-rustdoc":{"tf":1.0},"type-inference.html#trying-equality":{"tf":1.0},"method-lookup.html#method-lookup":{"tf":1.4142135623730952},"type-inference.html#enforcing-equality--subtyping":{"tf":1.0},"traits/canonicalization.html#executing-the-query":{"tf":1.0}},"df":12,"b":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{"traits/index.html#trait-solving-new-style":{"tf":1.0}},"df":1}}}}},"t":{"docs":{},"df":0,"u":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{"rustdoc.html#dotting-is-and-crossing-ts":{"tf":1.0},"tests/adding.html#ignoring-tests":{"tf":1.0}},"df":2}}},"e":{"docs":{"traits/goals-and-clauses.html#domain-goals":{"tf":1.0},"miri.html#miri":{"tf":1.0},"method-lookup.html#method-lookup":{"tf":1.0},"variance.html#variance-of-type-and-lifetime-parameters":{"tf":1.0},"variance.html#the-algorithm":{"tf":1.7320508075688773}},"df":5}},"z":{"docs":{},"df":0,"e":{"docs":{"const-eval.html#constant-evaluation":{"tf":1.0},"miri.html#allocations":{"tf":1.0},"traits/canonical-queries.html#examples":{"tf":2.0},"traits/goals-and-clauses.html#domain-goals":{"tf":1.0}},"df":4}}},"l":{"docs":{},"df":0,"a":{"docs":{},"df":0,"s":{"docs":{},"df":0,"h":{"docs":{"tests/adding.html#normalization":{"tf":1.0}},"df":1}}},"g":{"docs":{"traits/goals-and-clauses.html#incomplete-chapter":{"tf":1.0},"traits/canonical-queries.html#a-trait-query-in-rustc":{"tf":1.0},"traits/chalk-overview.html#blog-posts":{"tf":1.0},"traits/chalk-overview.html#solver":{"tf":1.0},"traits/bibliography.html#bibliography":{"tf":1.0},"traits/slg.html#the-slg-solver":{"tf":1.4142135623730952}},"df":6},"i":{"docs":{},"df":0,"c":{"docs":{},"df":0,"e":{"docs":{"miri.html#miri":{"tf":1.0},"ty.html#beyond-types-other-kinds-of-arena-allocated-data-structures":{"tf":1.4142135623730952},"appendix/glossary.html#appendix-c-glossary":{"tf":1.7320508075688773}},"df":3}},"m":{"docs":{"traits/bibliography.html#bibliography":{"tf":1.0}},"df":1},"g":{"docs":{},"df":0,"h":{"docs":{},"df":0,"t":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{"incremental-compilation.html#incremental-compilation":{"tf":1.0},"macro-expansion.html#the-macro-parser":{"tf":1.0},"mir/index.html#key-mir-vocabulary":{"tf":1.0},"rustdoc.html#the-walking-tour-of-rustdoc":{"tf":1.0},"name-resolution.html#namespaces":{"tf":1.0}},"df":5}}}}}},"o":{"docs":{},"df":0,"w":{"docs":{"compiler-debugging.html#logging-etiquette":{"tf":1.0}},"df":1,"l":{"docs":{},"df":0,"i":{"docs":{"conventions.html#formatting-and-the-tidy-script":{"tf":1.0},"hir.html#identifiers-in-the-hir":{"tf":1.0}},"df":2}}}},"e":{"docs":{},"df":0,"e":{"docs":{},"df":0,"v":{"docs":{"rustdoc.html#other-tricks-up-its-sleeve":{"tf":1.4142135623730952}},"df":1}}}},"y":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"m":{"docs":{"ty.html#beyond-types-other-kinds-of-arena-allocated-data-structures":{"tf":1.0},"traits/chalk-overview.html#an-overview-of-chalk":{"tf":1.4142135623730952},"traits/goals-and-clauses.html#coinductive-goals":{"tf":1.0},"traits/associated-types.html#integration-with-unification":{"tf":1.4142135623730952},"traits/resolution.html#major-concepts":{"tf":1.0},"appendix/glossary.html#appendix-c-glossary":{"tf":1.7320508075688773},"rustc-driver.html#a-note-on-lifetimes":{"tf":1.0},"traits/chalk-overview.html#lowering":{"tf":1.0},"rustc-driver.html#the-rustc-driver":{"tf":1.0},"how-to-build-and-run.html#create-a-configtoml":{"tf":1.0},"traits/lowering-to-logic.html#rust-traits-and-logic":{"tf":1.0},"traits/canonicalization.html#canonicalizing-the-query":{"tf":1.0},"traits/associated-types.html#equality-and-associated-types":{"tf":1.4142135623730952},"tests/intro.html#other-tests":{"tf":1.7320508075688773},"tests/intro.html#the-compiler-testing-framework":{"tf":1.0},"query.html#queries-demand-driven-compilation":{"tf":1.4142135623730952},"type-inference.html#inference-variables":{"tf":1.0},"traits/goals-and-clauses.html#domain-goals":{"tf":1.0},"traits/canonical-queries.html#the-traditional-interactive-prolog-query":{"tf":1.0},"traits/associated-types.html#skolemized-associated-types":{"tf":1.0},"traits/lowering-to-logic.html#lowering-to-logic":{"tf":1.0},"traits/canonical-queries.html#canonical-queries":{"tf":1.4142135623730952},"incremental-compilation.html#incremental-compilation":{"tf":1.0}},"df":23}}}},"m":{"docs":{},"df":0,"b":{"docs":{},"df":0,"o":{"docs":{},"df":0,"l":{"docs":{"name-resolution.html#namespaces":{"tf":1.0},"name-resolution.html#name-resolution":{"tf":1.0}},"df":2}}}},"n":{"docs":{},"df":0,"t":{"docs":{},"df":0,"a":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{"type-checking.html#type-collection":{"tf":1.0},"macro-expansion.html#example":{"tf":1.0},"diag.html#declaring-a-lint":{"tf":1.0}},"df":3}},"x":{"docs":{"name-resolution.html#name-resolution":{"tf":1.0},"name-resolution.html#overall-strategy":{"tf":1.0},"query.html#cycles-between-queries":{"tf":1.0},"appendix/stupid-stats.html#overview-of-the-compilation-process":{"tf":1.4142135623730952},"rustdoc.html#from-clean-to-crate":{"tf":1.0},"traits/lowering-rules.html#lowering-where-clauses":{"tf":1.4142135623730952},"traits/goals-and-clauses.html#domain-goals":{"tf":1.0},"macro-expansion.html#example":{"tf":1.0},"high-level-overview.html#the-main-stages-of-compilation":{"tf":1.7320508075688773},"hir.html#the-hir":{"tf":1.4142135623730952},"traits/associated-types.html#associated-type-projection-and-normalization":{"tf":1.4142135623730952},"high-level-overview.html#crate-structure":{"tf":1.4142135623730952},"appendix/glossary.html#appendix-c-glossary":{"tf":2.23606797749979},"appendix/code-index.html#appendix-d-code-index":{"tf":1.0},"compiler-debugging.html#getting-logging-output":{"tf":1.0},"traits/chalk-overview.html#parsing":{"tf":2.6457513110645909},"macro-expansion.html#the-macro-parser":{"tf":1.0},"the-parser.html#the-parser":{"tf":1.4142135623730952},"traits/chalk-overview.html#testing":{"tf":1.0},"incrcomp-debugging.html#tracking-down-incorrect-edges":{"tf":1.0}},"df":20,"_":{"docs":{},"df":0,"e":{"docs":{},"df":0,"x":{"docs":{},"df":0,"t":{"docs":{"high-level-overview.html#crate-structure":{"tf":1.0}},"df":1}}},"p":{"docs":{},"df":0,"o":{"docs":{"high-level-overview.html#crate-structure":{"tf":1.0}},"df":1}}},":":{"docs":{},"df":0,":":{"docs":{},"df":0,"v":{"docs":{},"df":0,"i":{"docs":{},"df":0,"s":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{},"df":0,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"v":{"docs":{},"df":0,"i":{"docs":{},"df":0,"s":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}},"/":{"docs":{},"df":0,"a":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,".":{"docs":{},"df":0,"r":{"docs":{"high-level-overview.html#the-main-stages-of-compilation":{"tf":1.0}},"df":1}}}}}},"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"x":{"docs":{},"df":0,"t":{"docs":{},"df":0,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"e":{"docs":{},"df":0,"m":{"docs":{},"df":0,"p":{"docs":{},"df":0,"t":{"docs":{},"df":0,"i":{"docs":{"diag.html#declaring-a-lint":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}},"m":{"docs":{},"df":0,"o":{"docs":{},"df":0,"o":{"docs":{},"df":0,"t":{"docs":{},"df":0,"h":{"docs":{"diag.html#suggestions":{"tf":1.0}},"df":1}}},"k":{"docs":{},"df":0,"e":{"docs":{"tests/running.html#running-a-subset-of-the-test-suites":{"tf":1.0}},"df":1}}},"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"mir/regionck.html#skolemization-and-outlives-constraints":{"tf":1.0}},"df":1}}}},"l":{"docs":{},"df":0,"l":{"docs":{"tests/intro.html#other-tests":{"tf":1.4142135623730952},"mir/passes.html#implementing-and-registering-a-pass":{"tf":1.0}},"df":2,"e":{"docs":{},"df":0,"r":{"docs":{"rustdoc.html#from-clean-to-crate":{"tf":1.0},"ty.html#import-conventions":{"tf":1.0},"tests/running.html#running-a-subset-of-the-test-suites":{"tf":1.0},"type-inference.html#snapshots":{"tf":1.0},"conventions.html#how-to-structure-your-pr":{"tf":1.0}},"df":5},"s":{"docs":{},"df":0,"t":{"docs":{"appendix/glossary.html#appendix-c-glossary":{"tf":1.0}},"df":1}}}}}}},"u":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{"tests/running.html#running-a-subset-of-the-test-suites":{"tf":2.449489742783178},"appendix/glossary.html#appendix-c-glossary":{"tf":1.7320508075688773},"tests/intro.html#compiletest-test-suites":{"tf":2.23606797749979},"tests/adding.html#adding-new-tests":{"tf":1.4142135623730952},"high-level-overview.html#the-main-stages-of-compilation":{"tf":1.0},"tests/adding.html#what-kind-of-test-should-i-add":{"tf":1.4142135623730952},"mir/passes.html#stealing":{"tf":1.7320508075688773},"mir/passes.html#mir-passes":{"tf":1.7320508075688773},"compiletest.html#introduction":{"tf":2.0},"tests/adding.html#naming-your-test":{"tf":1.0},"tests/running.html#running-tests":{"tf":1.0},"rustdoc.html#the-walking-tour-of-rustdoc":{"tf":1.0},"rustdoc.html#dotting-is-and-crossing-ts":{"tf":1.0},"how-to-build-and-run.html#creating-a-rustup-toolchain":{"tf":1.0},"how-to-build-and-run.html#other-xpy-commands":{"tf":1.0},"appendix/stupid-stats.html#what-next":{"tf":1.0},"tests/intro.html#testing-infrastructure":{"tf":1.0}},"df":17,"a":{"docs":{},"df":0,"b":{"docs":{},"df":0,"l":{"docs":{"high-level-overview.html#the-main-stages-of-compilation":{"tf":1.0},"conventions.html#using-crates-from-cratesio":{"tf":1.0},"tests/adding.html#naming-your-test":{"tf":1.0},"traits/goals-and-clauses.html#domain-goals":{"tf":1.0},"traits/canonicalization.html#executing-the-query":{"tf":1.0},"appendix/glossary.html#appendix-c-glossary":{"tf":1.0},"query.html#how-the-compiler-executes-a-query":{"tf":1.0}},"df":7}}}}},"m":{"docs":{},"df":0,"m":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{"tests/adding.html#comment-explaining-what-the-test-is-about":{"tf":1.0},"mir/index.html#key-mir-vocabulary":{"tf":1.0},"query.html#adding-a-new-kind-of-query":{"tf":1.0}},"df":3,"i":{"docs":{"appendix/stupid-stats.html#compilercontroller":{"tf":1.0},"tests/intro.html#compiletest-test-suites":{"tf":1.0}},"df":2,"s":{"docs":{"appendix/stupid-stats.html#compilercalls":{"tf":1.0}},"df":1}}}}}},"c":{"docs":{},"df":0,"h":{"docs":{"type-inference.html#region-constraints":{"tf":1.0},"tests/intro.html#testing-on-emulators":{"tf":1.4142135623730952},"hir.html#identifiers-in-the-hir":{"tf":1.0},"method-lookup.html#method-lookup":{"tf":1.0},"tests/adding.html#other-header-commands":{"tf":1.0},"hir.html#hir-bodies":{"tf":1.0},"mir/index.html#key-mir-vocabulary":{"tf":1.0},"mir/regionck.html#what-is-a-universe":{"tf":1.0},"rustc-driver.html#the-rustc-driver":{"tf":1.0},"diag.html#error-messages":{"tf":1.4142135623730952},"macro-expansion.html#the-macro-parser":{"tf":1.4142135623730952},"rustc-driver.html#a-note-on-lifetimes":{"tf":1.0},"traits/lowering-rules.html#trait-header":{"tf":1.0},"traits/lowering-to-logic.html#rust-traits-and-logic":{"tf":1.0},"how-to-build-and-run.html#create-a-configtoml":{"tf":1.0},"compiletest.html#adding-a-new-header-command":{"tf":1.0},"method-lookup.html#candidate-assembly":{"tf":1.4142135623730952},"tests/intro.html#other-tests":{"tf":1.7320508075688773},"query.html#adding-a-new-kind-of-query":{"tf":1.0},"appendix/glossary.html#appendix-c-glossary":{"tf":1.0},"high-level-overview.html#the-main-stages-of-compilation":{"tf":1.4142135623730952},"appendix/code-index.html#appendix-d-code-index":{"tf":1.0},"macro-expansion.html#example":{"tf":1.4142135623730952},"ty.html#the-tcx-and-how-it-uses-lifetimes":{"tf":1.0},"traits/hrtb.html#higher-ranked-trait-bounds":{"tf":1.0},"mir/index.html#the-mir-mid-level-ir":{"tf":1.0},"type-inference.html#a-note-on-terminology":{"tf":1.0},"type-inference.html#inference-variables":{"tf":1.0},"incremental-compilation.html#the-query-dag":{"tf":1.0},"conventions.html#using-crates-from-cratesio":{"tf":1.0},"tests/adding.html#normalization":{"tf":1.0}},"df":31},"c":{"docs":{},"df":0,"s":{"docs":{},"df":0,"s":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{"mir/index.html#key-mir-vocabulary":{"tf":1.0}},"df":1}}}},"e":{"docs":{"traits/specialization.html#specialization":{"tf":1.0},"tests/adding.html#tests-that-do-not-result-in-compile-errors":{"tf":1.7320508075688773},"tests/adding.html#other-header-commands":{"tf":1.0},"type-inference.html#enforcing-equality--subtyping":{"tf":1.0},"mir/passes.html#stealing":{"tf":1.0},"mir/regionck.html#another-example":{"tf":1.0},"traits/resolution.html#major-concepts":{"tf":1.0},"traits/hrtb.html#basic-matching-and-skolemization-leaks":{"tf":1.0},"traits/caching.html#an-example":{"tf":1.0},"traits/lowering-to-logic.html#type-checking-normal-functions":{"tf":1.0},"compiletest.html#introduction":{"tf":1.0},"traits/lowering-rules.html#associated-type-declarations":{"tf":1.7320508075688773},"traits/resolution.html#candidate-assembly":{"tf":1.0},"query.html#cycles-between-queries":{"tf":1.0},"traits/associated-types.html#integration-with-unification":{"tf":1.0},"compiletest.html#header-commands":{"tf":1.0}},"df":16,"s":{"docs":{},"df":0,"s":{"docs":{"miri.html#miri":{"tf":1.0},"traits/resolution.html#overview":{"tf":1.0},"traits/associated-types.html#integration-with-unification":{"tf":1.0},"name-resolution.html#name-resolution":{"tf":1.0},"tests/running.html#running-tests":{"tf":1.0},"type-inference.html#enforcing-equality--subtyping":{"tf":1.0},"type-inference.html#trying-equality":{"tf":1.0},"traits/specialization.html#specialization":{"tf":1.0},"macro-expansion.html#the-macro-parser":{"tf":1.0},"compiletest.html#introduction":{"tf":1.0}},"df":10,"o":{"docs":{},"df":0,"r":{"docs":{"mir/visitor.html#mir-visitor":{"tf":1.0},"mir/index.html#key-mir-vocabulary":{"tf":1.7320508075688773},"mir/passes.html#stealing":{"tf":1.0}},"df":3}},"f":{"docs":{},"df":0,"u":{"docs":{},"df":0,"l":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{"compiletest.html#adding-a-new-header-command":{"tf":1.7320508075688773},"tests/intro.html#compiletest-test-suites":{"tf":1.0},"conventions.html#how-to-structure-your-pr":{"tf":1.0},"compiletest.html#introduction":{"tf":1.0},"how-to-build-and-run.html#creating-a-rustup-toolchain":{"tf":1.0}},"df":5}}}}}}}}}},"r":{"docs":{},"df":0,"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"u":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{"param_env.html#parameter-environment":{"tf":1.0}},"df":1}}}}},"p":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{},"df":0,"s":{"docs":{"mir/regionck.html#what-is-a-universe":{"tf":1.0},"mir/regionck.html#another-example":{"tf":1.4142135623730952}},"df":2,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"g":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{"incremental-compilation.html#incremental-compilation":{"tf":1.0},"traits/wf.html#well-formedness-checking":{"tf":1.0}},"df":2}}}}}}}}},"e":{"docs":{"tests/intro.html#compiletest-test-suites":{"tf":1.7320508075688773},"compiler-debugging.html#getting-logging-output":{"tf":1.0},"incremental-compilation.html#the-query-dag":{"tf":1.0},"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.0},"traits/canonical-queries.html#a-trait-query-in-rustc":{"tf":1.0},"rustdoc.html#dotting-is-and-crossing-ts":{"tf":1.0},"compiletest.html#adding-a-new-header-command":{"tf":1.0},"incrcomp-debugging.html#tracking-down-incorrect-edges":{"tf":1.0},"traits/wf.html#well-formedness-checking":{"tf":1.0},"traits/resolution.html#selection":{"tf":1.0},"traits/canonical-queries.html#examples":{"tf":1.0}},"df":11},"f":{"docs":{},"df":0,"a":{"docs":{},"df":0,"c":{"docs":{"hir.html#the-hir":{"tf":1.0},"traits/goals-and-clauses.html#domain-goals":{"tf":1.0}},"df":2}}}},"f":{"docs":{},"df":0,"f":{"docs":{},"df":0,"i":{"docs":{},"df":0,"c":{"docs":{"traits/canonicalization.html#executing-the-query":{"tf":1.0}},"df":1}}}},"g":{"docs":{},"df":0,"g":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{"name-resolution.html#name-resolution":{"tf":1.0},"tests/adding.html#other-header-commands":{"tf":1.0},"tests/adding.html#error-annotations":{"tf":1.4142135623730952},"diag.html#suggestions":{"tf":3.4641016151377546},"diag.html#declaring-a-lint":{"tf":1.4142135623730952},"diag.html#error-messages":{"tf":2.0}},"df":6,"i":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"_":{"docs":{},"df":0,"s":{"docs":{},"df":0,"p":{"docs":{"diag.html#suggestions":{"tf":1.0}},"df":1}}}}}}}}}}},"b":{"docs":{"appendix/glossary.html#appendix-c-glossary":{"tf":1.0},"mir/index.html#mir-data-types":{"tf":1.0}},"df":2,"j":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{"method-lookup.html#candidate-assembly":{"tf":1.0},"mir/index.html#key-mir-vocabulary":{"tf":1.0}},"df":2}}}},"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{"traits/resolution.html#candidate-assembly":{"tf":1.0}},"df":1}}}}},"e":{"docs":{},"df":0,"g":{"docs":{},"df":0,"i":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{"traits/resolution.html#selection":{"tf":1.0},"type-inference.html#region-constraints":{"tf":1.0},"type-inference.html#extracting-region-constraints":{"tf":1.0}},"df":3}}}}}},"q":{"docs":{},"df":0,"u":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"y":{"docs":{},"df":0,"3":{"docs":{"incremental-compilation.html#the-query-dag":{"tf":1.0}},"df":1},"1":{"docs":{"incremental-compilation.html#the-query-dag":{"tf":1.7320508075688773}},"df":1},"2":{"docs":{"incremental-compilation.html#the-query-dag":{"tf":1.7320508075688773}},"df":1}},"i":{"docs":{"query.html#queries-demand-driven-compilation":{"tf":1.0},"incremental-compilation.html#the-query-dag":{"tf":1.0},"incremental-compilation.html#improvements-to-the-basic-algorithm":{"tf":1.0}},"df":3}}}}},"f":{"docs":{},"df":0,"o":{"docs":{},"df":0,"l":{"docs":{},"df":0,"d":{"docs":{"compiletest.html#adding-a-new-test-file":{"tf":1.0}},"df":1}}}},"t":{"docs":{},"df":0,"l":{"docs":{"traits/hrtb.html#higher-ranked-trait-bounds":{"tf":1.0},"traits/wf.html#well-formedness-checking":{"tf":1.0},"traits/caching.html#where-clauses-and-the-local-vs-global-cache":{"tf":1.0},"variance.html#variance-of-type-and-lifetime-parameters":{"tf":1.0},"traits/caching.html#caching-and-subtle-considerations-therewith":{"tf":1.4142135623730952},"traits/canonicalization.html#canonicalizing-the-query-result":{"tf":1.0}},"df":6},"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{"miri.html#miri":{"tf":1.4142135623730952}},"df":1}},"i":{"docs":{},"df":0,"t":{"docs":{"traits/resolution.html#candidate-assembly":{"tf":1.0}},"df":1}}}},"y":{"docs":{},"df":0,"p":{"docs":{"mir/regionck.html#mir-based-region-checking-nll":{"tf":1.0},"variance.html#variance-and-object-types":{"tf":1.4142135623730952},"type-inference.html#extracting-region-constraints":{"tf":1.0},"mir/regionck.html#subtyping-and-skolemization":{"tf":2.6457513110645909},"mir/regionck.html#final-example":{"tf":1.4142135623730952},"appendix/background.html#what-is-co--and-contra-variance":{"tf":1.0},"type-inference.html#enforcing-equality--subtyping":{"tf":1.7320508075688773},"traits/hrtb.html#basic-matching-and-skolemization-leaks":{"tf":1.4142135623730952},"traits/resolution.html#selection":{"tf":1.0},"type-inference.html#type-inference":{"tf":1.0},"type-inference.html#subtyping-obligations":{"tf":2.23606797749979},"type-inference.html#trying-equality":{"tf":1.0},"variance.html#variance-of-type-and-lifetime-parameters":{"tf":1.0},"mir/regionck.html#back-to-our-example":{"tf":1.0},"mir/regionck.html#another-example":{"tf":1.0},"variance.html#variance-and-associated-types":{"tf":1.4142135623730952},"appendix/glossary.html#appendix-c-glossary":{"tf":2.0},"type-inference.html#inference-variables":{"tf":1.0},"variance.html#trait-variance-and-vtable-resolution":{"tf":1.0}},"df":19,"e":{"docs":{},"df":0,"(":{"docs":{},"df":0,"?":{"docs":{},"df":0,"t":{"docs":{"type-inference.html#subtyping-obligations":{"tf":1.0}},"df":1}}}}}}},"g":{"docs":{},"df":0,"o":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{"traits/associated-types.html#integration-with-unification":{"tf":1.4142135623730952}},"df":1}}}},"d":{"docs":{},"df":0,"i":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{"tests/adding.html#naming-your-test":{"tf":1.4142135623730952},"tests/intro.html#compiletest-test-suites":{"tf":1.0}},"df":2}}}}}}}}},"c":{"docs":{},"df":0,"h":{"docs":{},"df":0,"a":{"docs":{},"df":0,"p":{"docs":{},"df":0,"t":{"docs":{"traits/resolution.html#trait-resolution-old-style":{"tf":1.0}},"df":1}}}},"o":{"docs":{},"df":0,"m":{"docs":{},"df":0,"m":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{"tests/adding.html#editing-and-updating-the-reference-files":{"tf":1.0}},"df":1}}}}}}},"s":{"docs":{},"df":0,"t":{"docs":{"ty.html#beyond-types-other-kinds-of-arena-allocated-data-structures":{"tf":1.4142135623730952},"appendix/glossary.html#appendix-c-glossary":{"tf":1.0}},"df":2,"u":{"docs":{},"df":0,"t":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{"traits/canonicalization.html#canonicalizing-the-query-result":{"tf":1.0}},"df":1}}}},"i":{"docs":{},"df":0,"t":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{"traits/hrtb.html#higher-ranked-trait-obligations":{"tf":1.4142135623730952},"ty.html#beyond-types-other-kinds-of-arena-allocated-data-structures":{"tf":1.0},"traits/resolution.html#selection-during-translation":{"tf":1.0},"traits/canonical-queries.html#the-traditional-interactive-prolog-query":{"tf":1.0},"appendix/glossary.html#appendix-c-glossary":{"tf":1.0},"traits/canonicalization.html#executing-the-query":{"tf":1.7320508075688773},"traits/canonicalization.html#canonicalizing-the-query-result":{"tf":1.4142135623730952}},"df":7}}}}},"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{"traits/canonical-queries.html#canonical-queries":{"tf":1.0}},"df":1}},"t":{"docs":{"how-to-build-and-run.html#running-xpy-and-building-a-stage1-compiler":{"tf":1.0},"tests/intro.html#testing-infrastructure":{"tf":1.0},"tests/running.html#running-a-subset-of-the-test-suites":{"tf":1.4142135623730952}},"df":3},"q":{"docs":{},"df":0,"u":{"docs":{"hir.html#identifiers-in-the-hir":{"tf":1.0},"high-level-overview.html#the-main-stages-of-compilation":{"tf":1.0},"miri.html#interpretation":{"tf":1.0}},"df":3}}},"u":{"docs":{},"df":0,"m":{"docs":{"tests/adding.html#what-kind-of-test-should-i-add":{"tf":1.0},"method-lookup.html#candidate-assembly":{"tf":1.0}},"df":2}}}},"p":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"tests/adding.html#comment-explaining-what-the-test-is-about":{"tf":1.0}},"df":1,"t":{"docs":{},"df":0,"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{"traits/lowering-rules.html#trait-header":{"tf":1.0}},"df":1}}}},"y":{"docs":{},"df":0,"p":{"docs":{"mir/regionck.html#another-example":{"tf":1.0},"mir/regionck.html#final-example":{"tf":1.0},"mir/regionck.html#subtyping-and-skolemization":{"tf":1.0}},"df":3}}},"p":{"docs":{},"df":0,"o":{"docs":{},"df":0,"w":{"docs":{"traits/goals-and-clauses.html#goals-and-clauses":{"tf":1.0}},"df":1}}},"_":{"docs":{},"df":0,"f":{"docs":{},"df":0,"o":{"docs":{},"df":0,"o":{"docs":{"mir/visitor.html#mir-visitor":{"tf":1.4142135623730952}},"df":1}}}}}},"p":{"docs":{},"df":0,"l":{"docs":{},"df":0,"e":{"docs":{},"df":0,"m":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{"rustdoc.html#cheat-sheet":{"tf":1.4142135623730952},"rustdoc.html#dotting-is-and-crossing-ts":{"tf":1.0},"rustdoc.html#from-soup-to-nuts":{"tf":1.0}},"df":3}}}}}}}},"i":{"docs":{"traits/canonical-queries.html#a-trait-query-in-rustc":{"tf":1.0},"mir/index.html#key-mir-vocabulary":{"tf":1.0},"query.html#adding-a-new-kind-of-query":{"tf":1.0},"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.4142135623730952},"traits/canonical-queries.html#the-traditional-interactive-prolog-query":{"tf":1.0},"variance.html#trait-variance-and-vtable-resolution":{"tf":1.0}},"df":6}},"o":{"docs":{},"df":0,"s":{"docs":{"traits/resolution.html#confirmation":{"tf":1.0},"query.html#adding-a-new-kind-of-query":{"tf":1.0},"traits/hrtb.html#basic-matching-and-skolemization-leaks":{"tf":1.0},"traits/lowering-to-logic.html#rust-traits-and-logic":{"tf":1.0},"traits/caching.html#an-example":{"tf":1.0},"tests/adding.html#other-header-commands":{"tf":1.7320508075688773},"variance.html#trait-variance-and-vtable-resolution":{"tf":1.0},"traits/canonical-queries.html#examples":{"tf":1.0}},"df":8},"r":{"docs":{},"df":0,"t":{"docs":{"tests/intro.html#testing-on-emulators":{"tf":1.0},"tests/adding.html#revisions":{"tf":1.0},"appendix/glossary.html#appendix-c-glossary":{"tf":1.4142135623730952},"type-inference.html#inference-variables":{"tf":1.0},"traits/chalk-overview.html#parsing":{"tf":1.0},"compiletest.html#introduction":{"tf":1.0},"tests/adding.html#naming-your-test":{"tf":1.0},"traits/lowering-to-logic.html#rust-traits-and-logic":{"tf":1.0},"type-inference.html#snapshots":{"tf":1.0},"tests/adding.html#normalization":{"tf":1.0},"traits/lowering-to-logic.html#type-checking-generic-functions-beyond-horn-clauses":{"tf":1.4142135623730952}},"df":11}}}}},"s":{"docs":{},"df":0,"p":{"docs":{},"df":0,"i":{"docs":{},"df":0,"c":{"docs":{},"df":0,"i":{"docs":{"incrcomp-debugging.html#tracking-down-incorrect-edges":{"tf":1.0}},"df":1}}},"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{"traits/lowering-rules.html#transforming-the-lowered-where-clauses":{"tf":1.0}},"df":1}}}}}},"p":{"docs":{"diag.html#error-messages":{"tf":1.0}},"df":1,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"s":{"docs":{"mir/regionck.html#representing-the-values-of-a-region-variable":{"tf":1.0}},"df":1}},"c":{"docs":{},"df":0,"e":{"docs":{"mir/index.html#key-mir-vocabulary":{"tf":1.0},"conventions.html#tabs-vs-spaces":{"tf":1.7320508075688773},"const-eval.html#constant-evaluation":{"tf":1.0},"rustdoc.html#hot-potato":{"tf":1.4142135623730952}},"df":4}},"n":{"docs":{"the-parser.html#the-parser":{"tf":1.0},"type-checking.html#type-collection":{"tf":1.0},"appendix/glossary.html#appendix-c-glossary":{"tf":1.4142135623730952},"diag.html#error-messages":{"tf":1.0},"diag.html#span":{"tf":2.23606797749979},"diag.html#suggestions":{"tf":1.0},"appendix/code-index.html#appendix-d-code-index":{"tf":1.0}},"df":7,"_":{"docs":{},"df":0,"w":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"n":{"docs":{"diag.html#error-messages":{"tf":1.0}},"df":1}}}},"t":{"docs":{},"df":0,"o":{"docs":{},"df":0,"_":{"docs":{},"df":0,"s":{"docs":{},"df":0,"n":{"docs":{},"df":0,"i":{"docs":{},"df":0,"p":{"docs":{},"df":0,"p":{"docs":{},"df":0,"e":{"docs":{},"df":0,"t":{"docs":{"diag.html#span":{"tf":1.0}},"df":1}}}}}}}}}},"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"r":{"docs":{"diag.html#error-messages":{"tf":1.4142135623730952}},"df":1}}},"s":{"docs":{},"df":0,"u":{"docs":{},"df":0,"g":{"docs":{},"df":0,"g":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"i":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"_":{"docs":{},"df":0,"w":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{},"df":0,"h":{"docs":{},"df":0,"_":{"docs":{},"df":0,"a":{"docs":{},"df":0,"p":{"docs":{},"df":0,"p":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{},"df":0,"c":{"docs":{"diag.html#suggestions":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"i":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{"mir/index.html#key-mir-vocabulary":{"tf":1.0},"appendix/glossary.html#appendix-c-glossary":{"tf":1.0},"mir/index.html#mir-data-types":{"tf":1.4142135623730952},"tests/adding.html#header-commands-configuring-rustc":{"tf":1.0},"traits/canonical-queries.html#a-trait-query-in-rustc":{"tf":1.0},"rustdoc.html#from-clean-to-crate":{"tf":1.0},"tests/adding.html#adding-new-tests":{"tf":1.0},"traits/specialization.html#specialization":{"tf":4.0},"traits/canonicalization.html#canonicalizing-the-query-result":{"tf":1.0},"macro-expansion.html#example":{"tf":1.0},"traits/associated-types.html#associated-type-projection-and-normalization":{"tf":1.0},"tests/adding.html#revisions":{"tf":1.0},"tests/adding.html#what-kind-of-test-should-i-add":{"tf":1.0},"mir/regionck.html#mir-based-region-checking-nll":{"tf":1.0}},"df":14}},"f":{"docs":{"compiler-debugging.html#getting-logging-output":{"tf":1.0},"rustdoc.html#cheat-sheet":{"tf":1.0},"tests/running.html#running-an-individual-test":{"tf":1.0},"traits/canonical-queries.html#canonical-queries":{"tf":1.0},"hir.html#identifiers-in-the-hir":{"tf":1.0},"traits/resolution.html#overview":{"tf":1.4142135623730952},"type-inference.html#inference-variables":{"tf":1.0},"traits/lowering-to-logic.html#type-checking-generic-functions-beyond-horn-clauses":{"tf":1.0},"name-resolution.html#name-resolution":{"tf":1.0},"tests/running.html#running-a-subset-of-the-test-suites":{"tf":1.0},"traits/resolution.html#major-concepts":{"tf":1.4142135623730952},"compiler-debugging.html#formatting-graphviz-output-dot-files":{"tf":1.0},"const-eval.html#constant-evaluation":{"tf":1.0},"appendix/background.html#appendix-b-background-topics":{"tf":1.0},"compiletest.html#implementing-the-behavior-change":{"tf":1.4142135623730952},"traits/chalk-overview.html#an-overview-of-chalk":{"tf":1.0},"tests/adding.html#editing-and-updating-the-reference-files":{"tf":1.0},"traits/resolution.html#candidate-assembly":{"tf":1.0},"variance.html#trait-variance-and-vtable-resolution":{"tf":1.0},"rustdoc.html#from-clean-to-crate":{"tf":1.0},"compiler-debugging.html#debugging-llvm":{"tf":1.0}},"df":21,"i":{"docs":{"ty.html#beyond-types-other-kinds-of-arena-allocated-data-structures":{"tf":1.0},"query.html#adding-a-new-kind-of-query":{"tf":1.4142135623730952},"compiletest.html#implementing-the-behavior-change":{"tf":1.4142135623730952},"tests/adding.html#error-annotations":{"tf":1.0},"tests/adding.html#header-commands-configuring-rustc":{"tf":1.0},"traits/resolution.html#confirmation":{"tf":1.0},"compiletest.html#adding-a-new-header-command":{"tf":2.0},"tests/running.html#running-an-individual-test":{"tf":1.0}},"df":8}}}},"a":{"docs":{},"df":0,"k":{"docs":{"rustdoc.html#hot-potato":{"tf":1.0},"traits/canonicalization.html#canonicalization":{"tf":1.0}},"df":2}}},"j":{"docs":{"traits/hrtb.html#basic-matching-and-skolemization-leaks":{"tf":1.0}},"df":1},"i":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{"macro-expansion.html#the-macro-parser":{"tf":1.0}},"df":1}}}}},"e":{"docs":{},"df":0,"e":{"docs":{"diag.html#declaring-a-lint":{"tf":1.0},"traits/chalk-overview.html#lowering":{"tf":1.4142135623730952},"traits/chalk-overview.html#well-formedness-checks":{"tf":1.0},"mir/regionck.html#final-example":{"tf":1.4142135623730952},"traits/canonical-queries.html#examples":{"tf":1.4142135623730952},"traits/resolution.html#candidate-assembly":{"tf":1.4142135623730952},"traits/lowering-to-logic.html#type-checking-generic-functions-beyond-horn-clauses":{"tf":1.4142135623730952},"traits/chalk-overview.html#rules":{"tf":1.0},"type-inference.html#enforcing-equality--subtyping":{"tf":1.0},"how-to-build-and-run.html#other-xpy-commands":{"tf":1.0},"query.html#cycles-between-queries":{"tf":1.0},"mir/regionck.html#skolemization-and-outlives-constraints":{"tf":1.7320508075688773},"appendix/glossary.html#appendix-c-glossary":{"tf":5.830951894845301},"compiletest.html#adding-a-new-test-file":{"tf":1.0},"variance.html#variance-of-type-and-lifetime-parameters":{"tf":1.4142135623730952},"traits/caching.html#an-example":{"tf":1.0},"tests/adding.html#ignoring-tests":{"tf":1.0},"macro-expansion.html#the-macro-parser":{"tf":1.0},"tests/intro.html#testing-on-emulators":{"tf":1.0},"type-checking.html#type-collection":{"tf":1.0},"compiletest.html#adding-a-new-header-command":{"tf":1.7320508075688773},"rustdoc.html#from-crate-to-clean":{"tf":1.0},"variance.html#trait-variance-and-vtable-resolution":{"tf":1.4142135623730952},"appendix/stupid-stats.html#overview-of-the-compilation-process":{"tf":1.0},"type-inference.html#creating-an-inference-context":{"tf":1.4142135623730952},"traits/associated-types.html#projection-equality":{"tf":1.0},"ty.html#beyond-types-other-kinds-of-arena-allocated-data-structures":{"tf":1.0},"traits/goals-and-clauses.html#domain-goals":{"tf":1.4142135623730952},"diag.html#error-messages":{"tf":1.0},"appendix/stupid-stats.html#compilercalls":{"tf":1.0},"traits/canonicalization.html#canonicalizing-the-query":{"tf":1.0},"traits/lowering-to-logic.html#rust-traits-and-logic":{"tf":1.4142135623730952},"mir/passes.html#implementing-and-registering-a-pass":{"tf":1.0},"traits/associated-types.html#skolemized-associated-types":{"tf":1.0},"mir/regionck.html#representing-the-values-of-a-region-variable":{"tf":1.0},"tests/adding.html#guide-to-the-ui-tests":{"tf":1.0},"tests/running.html#running-a-subset-of-the-test-suites":{"tf":1.0},"compiler-debugging.html#debugging-llvm":{"tf":2.0},"ty.html#allocating-and-working-with-types":{"tf":1.4142135623730952},"traits/index.html#trait-solving-new-style":{"tf":1.0},"name-resolution.html#namespaces":{"tf":1.0},"how-to-build-and-run.html#creating-a-rustup-toolchain":{"tf":1.0},"traits/lowering-rules.html#lowering-function-and-constant-declarations":{"tf":1.0},"traits/chalk-overview.html#an-overview-of-chalk":{"tf":1.0},"mir/borrowck.html#mir-borrow-check":{"tf":1.0},"mir/regionck.html#what-is-a-universe":{"tf":2.449489742783178},"traits/resolution.html#trait-resolution-old-style":{"tf":1.0},"query.html#adding-a-new-kind-of-query":{"tf":1.0},"compiler-debugging.html#getting-a-backtrace-for-errors":{"tf":1.0},"tests/intro.html#testing-infrastructure":{"tf":1.0},"compiletest.html#implementing-the-behavior-change":{"tf":1.0},"incrcomp-debugging.html#testing-the-dependency-graph":{"tf":1.0},"tests/adding.html#normalization":{"tf":1.0},"macro-expansion.html#example":{"tf":1.0},"variance.html#variance-and-object-types":{"tf":1.0},"variance.html#variance-and-associated-types":{"tf":1.4142135623730952},"type-inference.html#region-constraints":{"tf":1.0},"mir/passes.html#seeing-how-the-mir-changes-as-the-compiler-executes":{"tf":1.4142135623730952},"appendix/background.html#what-is-co--and-contra-variance":{"tf":1.0},"traits/lowering-rules.html#associated-type-declarations":{"tf":1.0},"traits/canonical-queries.html#a-trait-query-in-rustc":{"tf":2.0},"compiler-debugging.html#getting-logging-output":{"tf":2.23606797749979},"ty.html#the-tcx-and-how-it-uses-lifetimes":{"tf":1.4142135623730952},"traits/lowering-to-logic.html#type-checking-normal-functions":{"tf":1.0},"traits/lowering-rules.html#trait-header":{"tf":1.4142135623730952},"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.4142135623730952},"method-lookup.html#candidate-search":{"tf":1.0},"mir/index.html#key-mir-vocabulary":{"tf":3.0},"incrcomp-debugging.html#dumping-the-graph":{"tf":1.0},"type-inference.html#subtyping-obligations":{"tf":1.0},"traits/chalk-overview.html#solver":{"tf":1.0},"conventions.html#copyright-notice":{"tf":1.0},"incrcomp-debugging.html#tracking-down-incorrect-edges":{"tf":1.4142135623730952},"query.html#how-the-compiler-executes-a-query":{"tf":1.0},"tests/intro.html#compiletest-test-suites":{"tf":1.0},"appendix/stupid-stats.html#what-next":{"tf":1.7320508075688773},"incremental-compilation.html#the-try-mark-green-algorithm":{"tf":1.4142135623730952},"compiletest.html#introduction":{"tf":1.0}},"df":78,"n":{"docs":{"traits/lowering-to-logic.html#type-checking-normal-functions":{"tf":1.0},"traits/associated-types.html#associated-type-projection-and-normalization":{"tf":1.0},"traits/associated-types.html#projection-equality":{"tf":1.0},"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.0}},"df":4},"m":{"docs":{"traits/caching.html#where-clauses-and-the-local-vs-global-cache":{"tf":1.0},"mir/regionck.html#final-example":{"tf":1.0},"rustdoc.html#hot-potato":{"tf":1.0},"traits/specialization.html#specialization":{"tf":1.0},"mir/regionck.html#another-example":{"tf":1.0}},"df":5}},"m":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{"appendix/stupid-stats.html#overview-of-the-compilation-process":{"tf":1.0},"appendix/stupid-stats.html#compilercontroller":{"tf":1.0}},"df":2}}}},"r":{"docs":{},"df":0,"v":{"docs":{"traits/lowering-rules.html#trait-header":{"tf":1.0},"traits/index.html#trait-solving-new-style":{"tf":1.0},"hir.html#out-of-band-storage-and-the--crate--type":{"tf":1.0},"compiletest.html#introduction":{"tf":1.0},"compiletest.html#adding-a-new-header-command":{"tf":1.0}},"df":5,"e":{"docs":{},"df":0,"r":{"docs":{"rustdoc.html#cheat-sheet":{"tf":1.0},"tests/intro.html#testing-on-emulators":{"tf":1.7320508075688773}},"df":2}},"o":{"docs":{"tests/intro.html#other-tests":{"tf":1.0}},"df":1}},"i":{"docs":{"method-lookup.html#steps":{"tf":1.0},"mir/index.html#key-mir-vocabulary":{"tf":1.0},"mir/passes.html#mir-passes":{"tf":1.0},"rustdoc.html#cheat-sheet":{"tf":1.0},"appendix/code-index.html#appendix-d-code-index":{"tf":1.0},"rustdoc.html#from-clean-to-crate":{"tf":1.4142135623730952},"method-lookup.html#method-lookup":{"tf":1.0},"type-inference.html#snapshots":{"tf":1.4142135623730952},"tests/intro.html#compiletest-test-suites":{"tf":1.0},"method-lookup.html#candidate-search":{"tf":1.0}},"df":10,"a":{"docs":{},"df":0,"l":{"docs":{"incremental-compilation.html#the-try-mark-green-algorithm":{"tf":1.0},"incremental-compilation.html#improvements-to-the-basic-algorithm":{"tf":1.0}},"df":2}},"o":{"docs":{},"df":0,"u":{"docs":{"traits/caching.html#where-clauses-and-the-local-vs-global-cache":{"tf":1.0}},"df":1}}}},"q":{"docs":{},"df":0,"u":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"c":{"docs":{"macro-expansion.html#the-macro-parser":{"tf":1.4142135623730952},"appendix/stupid-stats.html#overview-of-the-compilation-process":{"tf":1.0},"miri.html#allocations":{"tf":1.4142135623730952}},"df":3}}}}},"v":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"the-parser.html#the-parser":{"tf":1.0},"mir/passes.html#mir-passes":{"tf":1.0},"traits/associated-types.html#equality-and-associated-types":{"tf":1.0},"rustdoc.html#from-crate-to-clean":{"tf":1.0},"appendix/stupid-stats.html#overview-of-the-compilation-process":{"tf":1.0},"mir/borrowck.html#major-phases-of-the-borrow-checker":{"tf":1.0},"rustdoc.html#from-clean-to-crate":{"tf":1.4142135623730952},"compiletest.html#adding-a-new-header-command":{"tf":1.0}},"df":8},"n":{"docs":{"tests/adding.html#error-annotations":{"tf":1.0}},"df":1}}},"s":{"docs":{},"df":0,"s":{"docs":{"appendix/glossary.html#appendix-c-glossary":{"tf":1.0},"macro-expansion.html#the-macro-parser":{"tf":1.4142135623730952}},"df":2,"i":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{"appendix/stupid-stats.html#overview-of-the-compilation-process":{"tf":1.0},"rustc-driver.html#the-rustc-driver":{"tf":1.0},"diag.html#error-messages":{"tf":1.0},"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.7320508075688773},"macro-expansion.html#the-macro-parser":{"tf":1.0},"appendix/stupid-stats.html#compilercontroller":{"tf":1.0},"appendix/code-index.html#appendix-d-code-index":{"tf":1.7320508075688773},"appendix/glossary.html#appendix-c-glossary":{"tf":1.0}},"df":8}}},".":{"docs":{},"df":0,"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"d":{"docs":{},"df":0,"e":{"docs":{},"df":0,"m":{"docs":{},"df":0,"a":{"docs":{},"df":0,"p":{"docs":{},"df":0,"(":{"docs":{},"df":0,")":{"docs":{},"df":0,".":{"docs":{},"df":0,"s":{"docs":{},"df":0,"p":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"_":{"docs":{},"df":0,"t":{"docs":{},"df":0,"o":{"docs":{},"df":0,"_":{"docs":{},"df":0,"s":{"docs":{},"df":0,"n":{"docs":{},"df":0,"i":{"docs":{},"df":0,"p":{"docs":{},"df":0,"p":{"docs":{},"df":0,"e":{"docs":{},"df":0,"t":{"docs":{},"df":0,"(":{"docs":{},"df":0,"s":{"docs":{},"df":0,"p":{"docs":{"diag.html#error-messages":{"tf":1.0},"diag.html#suggestions":{"tf":1.0}},"df":2}}}}}}}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"r":{"docs":{},"df":0,"u":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{},"df":0,"_":{"docs":{},"df":0,"s":{"docs":{},"df":0,"p":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"_":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"r":{"docs":{},"df":0,"(":{"docs":{},"df":0,"s":{"docs":{},"df":0,"p":{"docs":{"diag.html#suggestions":{"tf":1.0},"diag.html#error-messages":{"tf":1.0}},"df":2}}}}}}}}}}}}}}}}}}}}},"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"c":{"docs":{},"df":0,"h":{"docs":{"method-lookup.html#candidate-assembly":{"tf":1.0},"rustdoc.html#from-clean-to-crate":{"tf":1.0},"traits/lowering-rules.html#rule-names-and-cross-references":{"tf":1.0},"rustdoc.html#cheat-sheet":{"tf":1.4142135623730952},"traits/hrtb.html#basic-matching-and-skolemization-leaks":{"tf":1.0},"traits/goals-and-clauses.html#goals-and-clauses-meta-structure":{"tf":1.0},"name-resolution.html#scopes-and-ribs":{"tf":1.0},"mir/passes.html#implementing-and-registering-a-pass":{"tf":1.0},"rustdoc.html#dotting-is-and-crossing-ts":{"tf":1.7320508075688773},"method-lookup.html#candidate-search":{"tf":1.7320508075688773},"traits/bibliography.html#bibliography":{"tf":1.0},"traits/resolution.html#candidate-assembly":{"tf":1.4142135623730952}},"df":12}}}},"c":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"t":{"docs":{"mir/borrowck.html#mir-borrow-check":{"tf":1.0}},"df":1}}},"t":{"docs":{},"df":0,"i":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{"traits/lowering-rules.html#associated-type-declarations":{"tf":1.0},"tests/intro.html#the-compiler-testing-framework":{"tf":1.0},"traits/lowering-rules.html#lowering-function-and-constant-declarations":{"tf":1.0},"rustdoc.html#from-clean-to-crate":{"tf":1.0},"traits/goals-and-clauses.html#goals-and-clauses-meta-structure":{"tf":1.0},"traits/canonicalization.html#canonicalizing-the-query-result":{"tf":1.0},"incrcomp-debugging.html#tracking-down-incorrect-edges":{"tf":1.7320508075688773},"traits/associated-types.html#equality-and-associated-types":{"tf":1.0},"traits/resolution.html#confirmation":{"tf":1.0},"type-inference.html#inference-variables":{"tf":1.0},"traits/canonical-queries.html#a-trait-query-in-rustc":{"tf":1.0},"traits/canonicalization.html#executing-the-query":{"tf":1.0},"mir/index.html#key-mir-vocabulary":{"tf":1.0},"mir/regionck.html#what-is-a-universe":{"tf":1.0},"traits/lowering-rules.html#lowering-traits":{"tf":1.4142135623730952},"mir/passes.html#mir-passes":{"tf":1.0},"appendix/background.html#appendix-b-background-topics":{"tf":1.0},"traits/resolution.html#candidate-assembly":{"tf":1.0},"traits/lowering-module.html#the-lowering-module-in-rustc":{"tf":1.0},"traits/canonicalization.html#processing-the-canonicalized-query-result":{"tf":1.0},"traits/lowering-to-logic.html#type-checking-generic-functions-beyond-horn-clauses":{"tf":1.0},"mir/regionck.html#skolemization-and-outlives-constraints":{"tf":1.0},"appendix/stupid-stats.html#appendix-a-a-tutorial-on-creating-a-drop-in-replacement-for-rustc":{"tf":1.0},"traits/lowering-rules.html#notation":{"tf":1.4142135623730952},"mir/regionck.html#skolemization-and-universes":{"tf":1.0},"traits/goals-and-clauses.html#domain-goals":{"tf":1.7320508075688773},"traits/chalk-overview.html#lowering":{"tf":1.0},"how-to-build-and-run.html#other-xpy-commands":{"tf":1.4142135623730952},"traits/associated-types.html#integration-with-unification":{"tf":1.0},"traits/chalk-overview.html#resources":{"tf":1.0},"traits/caching.html#where-clauses-and-the-local-vs-global-cache":{"tf":1.0},"traits/canonical-queries.html#canonical-queries":{"tf":1.0},"appendix/glossary.html#appendix-c-glossary":{"tf":1.0},"type-inference.html#snapshots":{"tf":1.0},"mir/regionck.html#representing-the-values-of-a-region-variable":{"tf":1.0},"traits/lowering-rules.html#lowering-rules":{"tf":1.4142135623730952},"variance.html#variance-of-type-and-lifetime-parameters":{"tf":1.0},"rustdoc.html#hot-potato":{"tf":1.0},"incremental-compilation.html#the-try-mark-green-algorithm":{"tf":1.4142135623730952},"mir/index.html#mir-data-types":{"tf":1.0},"mir/borrowck.html#major-phases-of-the-borrow-checker":{"tf":1.4142135623730952},"traits/goals-and-clauses.html#coinductive-goals":{"tf":1.0},"tests/intro.html#other-tests":{"tf":1.0}},"df":43}}}},"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{"rustdoc.html#from-clean-to-crate":{"tf":1.0},"how-to-build-and-run.html#creating-a-rustup-toolchain":{"tf":1.0},"traits/resolution.html#candidate-assembly":{"tf":1.0},"miri.html#miri":{"tf":1.0},"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.0},"mir/passes.html#stealing":{"tf":1.0},"mir/regionck.html#mir-based-region-checking-nll":{"tf":1.4142135623730952},"incremental-compilation.html#the-basic-algorithm":{"tf":1.0},"traits/resolution.html#selection-during-translation":{"tf":1.0},"traits/chalk-overview.html#intermediate-representation-ir":{"tf":1.0}},"df":10}}}},"n":{"docs":{},"df":0,"d":{"docs":{"tests/intro.html#testing-on-emulators":{"tf":1.0},"traits/goals-and-clauses.html#coinductive-goals":{"tf":2.8284271247461905}},"df":2},"s":{"docs":{"type-checking.html#type-collection":{"tf":1.0},"traits/canonical-queries.html#canonical-queries":{"tf":1.4142135623730952},"tests/adding.html#naming-your-test":{"tf":1.0},"variance.html#variance-and-associated-types":{"tf":1.0},"mir/regionck.html#what-is-a-universe":{"tf":1.0},"variance.html#variance-of-type-and-lifetime-parameters":{"tf":1.4142135623730952}},"df":6,"i":{"docs":{},"df":0,"t":{"docs":{"mir/index.html#the-mir-mid-level-ir":{"tf":1.0}},"df":1}}}},"p":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{"name-resolution.html#namespaces":{"tf":1.4142135623730952},"type-inference.html#inference-variables":{"tf":1.0},"compiletest.html#adding-a-new-header-command":{"tf":1.0},"query.html#queries-demand-driven-compilation":{"tf":1.0},"name-resolution.html#name-resolution":{"tf":1.0},"variance.html#variance-and-associated-types":{"tf":1.0},"incrcomp-debugging.html#dumping-the-graph":{"tf":1.0},"rustdoc.html#dotting-is-and-crossing-ts":{"tf":1.0},"incremental-compilation.html#improvements-to-the-basic-algorithm":{"tf":1.0},"rustdoc.html#from-crate-to-clean":{"tf":1.0},"rustdoc.html#hot-potato":{"tf":1.4142135623730952}},"df":11}}},"l":{"docs":{},"df":0,"f":{"docs":{"traits/resolution.html#overview":{"tf":1.0},"traits/lowering-rules.html#associated-type-declarations":{"tf":1.4142135623730952},"mir/visitor.html#mir-visitor":{"tf":1.0},"traits/lowering-rules.html#trait-header":{"tf":1.0},"ty.html#beyond-types-other-kinds-of-arena-allocated-data-structures":{"tf":1.0},"variance.html#variance-and-object-types":{"tf":2.449489742783178},"traits/resolution.html#candidate-assembly":{"tf":2.6457513110645909},"traits/lowering-to-logic.html#rust-traits-and-logic":{"tf":1.0},"traits/lowering-rules.html#lowering-traits":{"tf":1.0},"variance.html#trait-variance-and-vtable-resolution":{"tf":1.4142135623730952},"param_env.html#parameter-environment":{"tf":1.0},"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":2.8284271247461905},"method-lookup.html#candidate-assembly":{"tf":2.0},"macro-expansion.html#the-macro-parser":{"tf":1.0},"traits/resolution.html#confirmation":{"tf":1.0},"diag.html#declaring-a-lint":{"tf":1.0},"variance.html#variance-and-associated-types":{"tf":1.0},"method-lookup.html#method-lookup":{"tf":1.0}},"df":18,".":{"docs":{},"df":0,"e":{"docs":{},"df":0,"x":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"_":{"docs":{},"df":0,"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"m":{"docs":{},"df":0,"p":{"docs":{},"df":0,"i":{"docs":{},"df":0,"l":{"docs":{},"df":0,"e":{"docs":{},"df":0,"d":{"docs":{},"df":0,"_":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{"compiletest.html#implementing-the-behavior-change":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}},"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"c":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"m":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{},"df":0,"_":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"g":{"docs":{},"df":0,"s":{"docs":{},"df":0,"(":{"docs":{},"df":0,"d":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"l":{"docs":{},"df":0,".":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"p":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{},"df":0,"s":{"docs":{},"df":0,".":{"docs":{},"df":0,"l":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"d":{"docs":{},"df":0,"i":{"docs":{},"df":0,"d":{"docs":{"query.html#cycles-between-queries":{"tf":1.0}},"df":1}},"e":{"docs":{},"df":0,"f":{"docs":{},"df":0,"a":{"docs":{},"df":0,"u":{"docs":{},"df":0,"l":{"docs":{},"df":0,"t":{"docs":{},"df":0,"_":{"docs":{},"df":0,"c":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{},"df":0,"l":{"docs":{},"df":0,"s":{"docs":{},"df":0,".":{"docs":{},"df":0,"n":{"docs":{},"df":0,"o":{"docs":{},"df":0,"_":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"p":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{},"df":0,"(":{"docs":{},"df":0,"m":{"docs":{"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.0}},"df":1}}}}}}}}}},"l":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"_":{"docs":{},"df":0,"c":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{},"df":0,"l":{"docs":{},"df":0,"b":{"docs":{},"df":0,"a":{"docs":{},"df":0,"c":{"docs":{},"df":0,"k":{"docs":{},"df":0,"(":{"docs":{},"df":0,"t":{"docs":{"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"p":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{},"df":0,"l":{"docs":{},"df":0,"n":{"docs":{},"df":0,"_":{"docs":{},"df":0,"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"u":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.0}},"df":1}}}}}}}}}}},"o":{"docs":{},"df":0,"p":{"docs":{},"df":0,"s":{"docs":{},"df":0,".":{"docs":{},"df":0,"f":{"docs":{},"df":0,"a":{"docs":{},"df":0,"i":{"docs":{},"df":0,"l":{"docs":{},"df":0,"u":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"_":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{},"df":0,"u":{"docs":{"compiletest.html#implementing-the-behavior-change":{"tf":1.7320508075688773}},"df":1}}}}}}}}}}}}}}}}}},"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"_":{"docs":{},"df":0,"n":{"docs":{},"df":0,"a":{"docs":{},"df":0,"m":{"docs":{},"df":0,"e":{"docs":{},"df":0,"_":{"docs":{},"df":0,"v":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{},"df":0,"u":{"docs":{},"df":0,"e":{"docs":{},"df":0,"_":{"docs":{},"df":0,"d":{"docs":{},"df":0,"i":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{},"df":0,"i":{"docs":{},"df":0,"v":{"docs":{},"df":0,"e":{"docs":{},"df":0,"(":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{"compiletest.html#adding-a-new-header-command":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}},"d":{"docs":{},"df":0,"i":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{},"df":0,"i":{"docs":{},"df":0,"v":{"docs":{},"df":0,"e":{"docs":{},"df":0,"(":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{"compiletest.html#adding-a-new-header-command":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"df":0,"u":{"docs":{},"df":0,"p":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"_":{"docs":{},"df":0,"f":{"docs":{},"df":0,"o":{"docs":{},"df":0,"o":{"docs":{"mir/visitor.html#mir-visitor":{"tf":1.0}},"df":1}}}}}}}}},"f":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{},"df":0,"_":{"docs":{},"df":0,"p":{"docs":{},"df":0,"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"c":{"docs":{},"df":0,"_":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{"compiletest.html#implementing-the-behavior-change":{"tf":1.0}},"df":1,"(":{"docs":{},"df":0,"\"":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{"compiletest.html#implementing-the-behavior-change":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}},"i":{"docs":{},"df":0,"l":{"docs":{},"df":0,"u":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"_":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{},"df":0,"u":{"docs":{"compiletest.html#adding-a-new-header-command":{"tf":1.0}},"df":1}}}}}}}}}}}}},"n":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"m":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{},"df":0,"z":{"docs":{},"df":0,"e":{"docs":{},"df":0,"_":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"d":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"r":{"docs":{},"df":0,".":{"docs":{},"df":0,"p":{"docs":{},"df":0,"u":{"docs":{},"df":0,"s":{"docs":{},"df":0,"h":{"docs":{},"df":0,"(":{"docs":{},"df":0,"r":{"docs":{},"df":0,"u":{"docs":{},"df":0,"l":{"docs":{"compiletest.html#adding-a-new-header-command":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}}}}}}}}},":":{"docs":{},"df":0,":":{"docs":{},"df":0,"f":{"docs":{},"df":0,"o":{"docs":{},"df":0,"o":{"docs":{"type-checking.html#type-collection":{"tf":1.0}},"df":1}}},"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"f":{"docs":{},"df":0,"i":{"docs":{},"df":0,"g":{"docs":{},"df":0,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"q":{"docs":{},"df":0,"u":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"y":{"docs":{},"df":0,"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"f":{"docs":{},"df":0,"i":{"docs":{},"df":0,"g":{"docs":{"query.html#adding-a-new-kind-of-query":{"tf":1.0}},"df":1}}}}}},"d":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"c":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{},"df":0,"p":{"docs":{},"df":0,"t":{"docs":{"query.html#adding-a-new-kind-of-query":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}}}},"k":{"docs":{},"df":0,"e":{"docs":{},"df":0,"y":{"docs":{},"df":0,"s":{"docs":{},"df":0,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"k":{"docs":{},"df":0,"e":{"docs":{},"df":0,"y":{"docs":{"query.html#how-the-compiler-executes-a-query":{"tf":1.0}},"df":1}}}}}}}}}}}},"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{"traits/resolution.html#candidate-assembly":{"tf":1.7320508075688773},"traits/resolution.html#confirmation":{"tf":1.0},"incrcomp-debugging.html#dumping-the-graph":{"tf":1.4142135623730952},"incremental-compilation.html#improvements-to-the-basic-algorithm":{"tf":1.0},"traits/resolution.html#selection-during-translation":{"tf":3.1622776601683797},"appendix/stupid-stats.html#overview-of-the-compilation-process":{"tf":1.4142135623730952},"traits/caching.html#an-example":{"tf":1.4142135623730952},"traits/caching.html#caching-and-subtle-considerations-therewith":{"tf":1.7320508075688773},"traits/resolution.html#major-concepts":{"tf":1.7320508075688773},"traits/resolution.html#overview":{"tf":2.23606797749979},"traits/hrtb.html#higher-ranked-trait-bounds":{"tf":1.0},"traits/resolution.html#selection":{"tf":3.0},"traits/specialization.html#specialization":{"tf":2.6457513110645909},"method-lookup.html#method-lookup":{"tf":1.0},"mir/passes.html#seeing-how-the-mir-changes-as-the-compiler-executes":{"tf":1.7320508075688773}},"df":15,"i":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"u":{"docs":{},"df":0,"l":{"docs":{},"df":0,"t":{"docs":{"traits/resolution.html#selection":{"tf":1.0}},"df":1}}}}}}}}},".":{"docs":{},"df":0,"r":{"docs":{"traits/caching.html#where-clauses-and-the-local-vs-global-cache":{"tf":1.0}},"df":1}}}}}},"t":{"docs":{"appendix/glossary.html#appendix-c-glossary":{"tf":2.0},"query.html#how-the-compiler-executes-a-query":{"tf":1.0},"compiler-debugging.html#expensive-operations-in-logs":{"tf":1.0},"incrcomp-debugging.html#dumping-the-graph":{"tf":1.4142135623730952},"rustdoc.html#hot-potato":{"tf":1.0},"macro-expansion.html#macro-expansion":{"tf":1.0},"traits/canonical-queries.html#a-trait-query-in-rustc":{"tf":1.0},"traits/hrtb.html#basic-matching-and-skolemization-leaks":{"tf":2.6457513110645909},"compiler-debugging.html#getting-logging-output":{"tf":1.4142135623730952},"traits/lowering-module.html#the--program_clauses_for--query":{"tf":1.0},"rustdoc.html#the-walking-tour-of-rustdoc":{"tf":1.0},"traits/goals-and-clauses.html#domain-goals":{"tf":1.4142135623730952},"mir/regionck.html#what-is-a-universe":{"tf":1.0},"traits/specialization.html#specialization":{"tf":1.0},"incrcomp-debugging.html#testing-the-dependency-graph":{"tf":1.0},"appendix/background.html#what-is-a-free-region-or-a-free-variable-what-about-bound-region":{"tf":1.0},"compiler-debugging.html#debugging-llvm":{"tf":1.0},"rustdoc.html#dotting-is-and-crossing-ts":{"tf":1.4142135623730952},"mir/passes.html#seeing-how-the-mir-changes-as-the-compiler-executes":{"tf":1.0},"incremental-compilation.html#the-try-mark-green-algorithm":{"tf":1.0},"mir/regionck.html#universes-and-skolemized-region-elements":{"tf":1.0},"mir/regionck.html#representing-the-values-of-a-region-variable":{"tf":2.0},"rustdoc.html#from-clean-to-crate":{"tf":1.7320508075688773},"compiletest.html#header-commands":{"tf":1.0},"mir/regionck.html#skolemization-and-outlives-constraints":{"tf":1.0},"traits/index.html#trait-solving-new-style":{"tf":1.0},"variance.html#trait-variance-and-vtable-resolution":{"tf":1.0},"traits/lowering-rules.html#trait-header":{"tf":1.7320508075688773},"compiletest.html#adding-a-new-header-command":{"tf":1.0},"mir/regionck.html#mir-based-region-checking-nll":{"tf":1.0},"high-level-overview.html#crate-structure":{"tf":1.0},"traits/goals-and-clauses.html#coinductive-goals":{"tf":1.4142135623730952},"tests/running.html#running-a-subset-of-the-test-suites":{"tf":1.0},"how-to-build-and-run.html#create-a-configtoml":{"tf":1.0},"name-resolution.html#scopes-and-ribs":{"tf":1.0},"type-inference.html#extracting-region-constraints":{"tf":1.0},"tests/intro.html#testing-on-emulators":{"tf":1.7320508075688773},"traits/canonicalization.html#processing-the-canonicalized-query-result":{"tf":1.0},"incrcomp-debugging.html#tracking-down-incorrect-edges":{"tf":1.4142135623730952},"mir/regionck.html#extending-the-universal-regions-check":{"tf":1.0},"mir/regionck.html#another-example":{"tf":1.0},"compiler-debugging.html#getting-a-backtrace":{"tf":1.0},"hir.html#out-of-band-storage-and-the--crate--type":{"tf":1.0},"traits/resolution.html#candidate-assembly":{"tf":2.0},"traits/hrtb.html#higher-ranked-trait-obligations":{"tf":1.7320508075688773},"traits/associated-types.html#integration-with-unification":{"tf":1.0},"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":2.0},"tests/intro.html#testing-infrastructure":{"tf":1.4142135623730952},"ty.html#import-conventions":{"tf":1.0},"appendix/stupid-stats.html#compilercalls":{"tf":1.0},"appendix/background.html#what-is-a-control-flow-graph":{"tf":1.4142135623730952}},"df":51,"t":{"docs":{},"df":0,"l":{"docs":{"type-inference.html#snapshots":{"tf":1.0}},"df":1}},"u":{"docs":{},"df":0,"p":{"docs":{"query.html#queries-demand-driven-compilation":{"tf":1.0},"traits/lowering-rules.html#trait-header":{"tf":1.0},"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.0},"appendix/stupid-stats.html#what-next":{"tf":1.0},"query.html#how-the-compiler-executes-a-query":{"tf":1.0},"tests/intro.html#the-compiler-testing-framework":{"tf":1.0},"tests/adding.html#naming-your-test":{"tf":1.0},"high-level-overview.html#the-main-stages-of-compilation":{"tf":1.4142135623730952},"type-inference.html#creating-an-inference-context":{"tf":1.0},"variance.html#dependency-graph-management":{"tf":1.0},"traits/implied-bounds.html#implied-bounds":{"tf":1.0}},"df":11}}}},"k":{"docs":{},"df":0,"o":{"docs":{},"df":0,"l":{"docs":{},"df":0,"e":{"docs":{},"df":0,"m":{"docs":{"mir/regionck.html#representing-the-values-of-a-region-variable":{"tf":1.7320508075688773},"mir/regionck.html#skolemization-and-universes":{"tf":1.4142135623730952},"mir/regionck.html#what-is-a-universe":{"tf":1.4142135623730952},"mir/regionck.html#skolemization-and-outlives-constraints":{"tf":2.0},"traits/lowering-rules.html#associated-type-declarations":{"tf":1.4142135623730952},"mir/regionck.html#extending-the-universal-regions-check":{"tf":1.4142135623730952},"appendix/glossary.html#appendix-c-glossary":{"tf":1.4142135623730952},"traits/associated-types.html#projection-equality":{"tf":1.4142135623730952},"traits/caching.html#an-example":{"tf":1.7320508075688773},"traits/goals-and-clauses.html#domain-goals":{"tf":1.0},"mir/regionck.html#another-example":{"tf":1.0},"traits/associated-types.html#skolemized-associated-types":{"tf":2.23606797749979},"mir/regionck.html#subtyping-and-skolemization":{"tf":2.0},"mir/regionck.html#universes-and-skolemized-region-elements":{"tf":2.0},"traits/hrtb.html#basic-matching-and-skolemization-leaks":{"tf":3.605551275463989},"traits/associated-types.html#equality-and-associated-types":{"tf":1.0},"traits/hrtb.html#higher-ranked-trait-obligations":{"tf":1.7320508075688773},"mir/regionck.html#final-example":{"tf":1.0}},"df":18}},"(":{"docs":{},"df":0,"2":{"docs":{"mir/regionck.html#universes-and-skolemized-region-elements":{"tf":1.0},"mir/regionck.html#final-example":{"tf":1.4142135623730952}},"df":2},"x":{"docs":{"mir/regionck.html#skolemization-and-outlives-constraints":{"tf":2.23606797749979}},"df":1},"4":{"docs":{"mir/regionck.html#universes-and-skolemized-region-elements":{"tf":1.0}},"df":1},"n":{"docs":{"mir/regionck.html#universes-and-skolemized-region-elements":{"tf":1.4142135623730952}},"df":1},"1":{"docs":{"mir/regionck.html#back-to-our-example":{"tf":1.7320508075688773},"mir/regionck.html#universes-and-skolemized-region-elements":{"tf":1.0},"mir/regionck.html#extending-the-universal-regions-check":{"tf":1.4142135623730952},"mir/regionck.html#final-example":{"tf":2.449489742783178}},"df":4},"3":{"docs":{"mir/regionck.html#universes-and-skolemized-region-elements":{"tf":1.0}},"df":1},"u":{"docs":{"mir/regionck.html#extending-the-universal-regions-check":{"tf":1.0}},"df":1}}}},"i":{"docs":{},"df":0,"p":{"docs":{"traits/resolution.html#candidate-assembly":{"tf":1.0},"tests/adding.html#ignoring-tests":{"tf":1.0},"mir/index.html#key-mir-vocabulary":{"tf":1.0},"incremental-compilation.html#the-try-mark-green-algorithm":{"tf":1.0}},"df":4}}},"o":{"docs":{},"df":0,"m":{"docs":{},"df":0,"e":{"docs":{},"df":0,"(":{"docs":{},"df":0,"|":{"docs":{},"df":0,"b":{"docs":{"variance.html#the-algorithm":{"tf":1.0}},"df":1},"c":{"docs":{"variance.html#the-algorithm":{"tf":1.0}},"df":1}},"n":{"docs":{"hir.html#the-hir-map":{"tf":1.0}},"df":1,"a":{"docs":{},"df":0,"m":{"docs":{"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.0}},"df":1}}},"a":{"docs":{"variance.html#the-algorithm":{"tf":1.0}},"df":1},"v":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{"traits/canonical-queries.html#examples":{"tf":1.0}},"df":1}}},"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"d":{"docs":{"compiletest.html#adding-a-new-header-command":{"tf":1.4142135623730952}},"df":1}}},"r":{"docs":{},"df":0,"u":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"_":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"r":{"docs":{"compiletest.html#implementing-the-behavior-change":{"tf":1.0}},"df":1}}}}}},"l":{"docs":{"compiletest.html#adding-a-new-header-command":{"tf":1.0}},"df":1}}},"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"l":{"docs":{},"df":0,"f":{"docs":{},"df":0,".":{"docs":{},"df":0,"p":{"docs":{},"df":0,"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"p":{"docs":{},"df":0,"s":{"docs":{},"df":0,".":{"docs":{},"df":0,"f":{"docs":{},"df":0,"a":{"docs":{},"df":0,"i":{"docs":{},"df":0,"l":{"docs":{},"df":0,"u":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"_":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{},"df":0,"u":{"docs":{"compiletest.html#implementing-the-behavior-change":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}}}}}},"n":{"docs":{},"df":0,"i":{"docs":{},"df":0,"p":{"docs":{},"df":0,"p":{"docs":{},"df":0,"e":{"docs":{},"df":0,"t":{"docs":{"diag.html#suggestions":{"tf":1.0},"diag.html#error-messages":{"tf":1.0}},"df":2}}}}}}}},"h":{"docs":{},"df":0,"o":{"docs":{},"df":0,"w":{"docs":{"mir/passes.html#implementing-and-registering-a-pass":{"tf":1.0}},"df":1}}},"w":{"docs":{},"df":0,"h":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{"traits/caching.html#caching-and-subtle-considerations-therewith":{"tf":1.0},"traits/lowering-to-logic.html#lowering-to-logic":{"tf":1.0},"tests/adding.html#revisions":{"tf":1.0},"type-inference.html#region-constraints":{"tf":1.0},"tests/running.html#running-a-subset-of-the-test-suites":{"tf":1.0},"type-checking.html#type-collection":{"tf":1.0},"type-inference.html#inference-variables":{"tf":1.0},"traits/canonical-queries.html#a-trait-query-in-rustc":{"tf":1.0},"traits/chalk-overview.html#an-overview-of-chalk":{"tf":1.0}},"df":9}},"e":{"docs":{},"df":0,"r":{"docs":{"query.html#how-the-compiler-executes-a-query":{"tf":1.0},"tests/adding.html#naming-your-test":{"tf":1.0},"macro-expansion.html#example":{"tf":1.0}},"df":3}}}},"o":{"docs":{},"df":0,"n":{"docs":{"compiler-debugging.html#logging-etiquette":{"tf":1.0},"compiler-debugging.html#expensive-operations-in-logs":{"tf":1.4142135623730952}},"df":2}},"t":{"docs":{},"df":0,"h":{"docs":{"incrcomp-debugging.html#tracking-down-incorrect-edges":{"tf":1.0},"tests/running.html#running-an-individual-test":{"tf":1.0},"hir.html#the-hir-map":{"tf":1.0},"traits/goals-and-clauses.html#goals-and-clauses-meta-structure":{"tf":1.4142135623730952},"traits/canonical-queries.html#canonical-queries":{"tf":1.0},"appendix/background.html#what-is-a-free-region-or-a-free-variable-what-about-bound-region":{"tf":1.0},"miri.html#allocations":{"tf":1.0},"traits/lowering-to-logic.html#type-checking-generic-functions-beyond-horn-clauses":{"tf":1.0},"traits/goals-and-clauses.html#goals-and-clauses":{"tf":1.4142135623730952},"miri.html#miri":{"tf":1.4142135623730952},"query.html#adding-a-new-kind-of-query":{"tf":1.7320508075688773},"traits/bibliography.html#bibliography":{"tf":1.0},"query.html#queries-demand-driven-compilation":{"tf":1.0},"traits/associated-types.html#associated-type-projection-and-normalization":{"tf":1.0},"rustdoc.html#other-tricks-up-its-sleeve":{"tf":1.0},"mir/index.html#key-mir-vocabulary":{"tf":1.0},"conventions.html#use-todo-comments-for-things-you-dont-want-to-forget":{"tf":1.0},"traits/canonical-queries.html#the-traditional-interactive-prolog-query":{"tf":1.0},"tests/adding.html#comment-explaining-what-the-test-is-about":{"tf":1.0},"rustc-driver.html#the-rustc-driver":{"tf":1.0},"mir/regionck.html#skolemization-and-universes":{"tf":1.0},"mir/passes.html#implementing-and-registering-a-pass":{"tf":1.4142135623730952},"query.html#how-the-compiler-executes-a-query":{"tf":1.0},"type-inference.html#creating-an-inference-context":{"tf":1.0},"traits/canonicalization.html#executing-the-query":{"tf":1.0},"ty.html#beyond-types-other-kinds-of-arena-allocated-data-structures":{"tf":1.0},"traits/chalk-overview.html#an-overview-of-chalk":{"tf":1.0},"traits/lowering-module.html#the--program_clauses_for--query":{"tf":1.0},"mir/regionck.html#what-is-a-universe":{"tf":1.4142135623730952},"appendix/glossary.html#appendix-c-glossary":{"tf":1.0},"how-to-build-and-run.html#running-xpy-and-building-a-stage1-compiler":{"tf":1.0}},"df":31,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"g":{"docs":{},"df":0,"_":{"docs":{},"df":0,"e":{"docs":{},"df":0,"l":{"docs":{},"df":0,"s":{"docs":{"conventions.html#use-todo-comments-for-things-you-dont-want-to-forget":{"tf":1.0}},"df":1}}}}}}}},"i":{"docs":{},"df":0,"m":{"docs":{"conventions.html#line-length":{"tf":1.0},"incrcomp-debugging.html#tracking-down-incorrect-edges":{"tf":1.0},"traits/lowering-rules.html#transforming-the-lowered-where-clauses":{"tf":1.0},"method-lookup.html#method-lookup":{"tf":1.0},"traits/resolution.html#selection-during-translation":{"tf":1.0},"diag.html#edition-gated-lints":{"tf":1.0},"traits/associated-types.html#skolemized-associated-types":{"tf":1.0},"macro-expansion.html#the-macro-parser":{"tf":1.0},"traits/lowering-rules.html#notation":{"tf":1.0},"ty.html#allocating-and-working-with-types":{"tf":1.0},"traits/resolution.html#candidate-assembly":{"tf":1.0},"type-inference.html#region-constraints":{"tf":1.0},"traits/canonicalization.html#canonicalizing-the-query":{"tf":1.0},"query.html#cycles-between-queries":{"tf":1.0},"incremental-compilation.html#the-try-mark-green-algorithm":{"tf":1.0},"query.html#adding-a-new-kind-of-query":{"tf":1.0},"incremental-compilation.html#the-basic-algorithm":{"tf":1.0},"tests/adding.html#normalization":{"tf":1.0},"mir/regionck.html#skolemization-and-outlives-constraints":{"tf":1.0},"type-inference.html#trying-equality":{"tf":1.0}},"df":20}}},"_":{"docs":{},"df":0,"v":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{"appendix/background.html#what-is-a-control-flow-graph":{"tf":1.4142135623730952}},"df":1}}}},"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"p":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{"appendix/stupid-stats.html#compilercalls":{"tf":1.0}},"df":1,"(":{"docs":{},"df":0,"&":{"docs":{},"df":0,"m":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.0}},"df":1}}}}}}}}}}},".":{"docs":{},"df":0,"r":{"docs":{"compiler-debugging.html#getting-logging-output":{"tf":1.0}},"df":1}}}},"l":{"docs":{},"df":0,"d":{"docs":{},"df":0,"i":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"query.html#cycles-between-queries":{"tf":1.0}},"df":1}}}},"e":{"docs":{"traits/hrtb.html#basic-matching-and-skolemization-leaks":{"tf":1.0},"traits/hrtb.html#higher-ranked-trait-obligations":{"tf":1.0}},"df":2},"v":{"docs":{"traits/hrtb.html#higher-ranked-trait-obligations":{"tf":1.0},"traits/goals-and-clauses.html#goals-and-clauses":{"tf":1.0},"traits/chalk-overview.html#an-overview-of-chalk":{"tf":1.0},"traits/canonicalization.html#canonicalizing-the-query-result":{"tf":1.0},"traits/chalk-overview.html#lowering":{"tf":1.0},"traits/lowering-rules.html#lowering-where-clauses":{"tf":1.0},"traits/chalk-overview.html#parsing":{"tf":1.0},"traits/lowering-rules.html#notation":{"tf":1.0},"traits/chalk-overview.html#intermediate-representation-ir":{"tf":1.0},"traits/canonical-queries.html#the-traditional-interactive-prolog-query":{"tf":1.0},"traits/hrtb.html#higher-ranked-trait-bounds":{"tf":1.0},"traits/index.html#trait-solving-new-style":{"tf":2.6457513110645909},"traits/chalk-overview.html#blog-posts":{"tf":1.0},"traits/lowering-rules.html#lowering-function-and-constant-declarations":{"tf":1.0},"traits/canonicalization.html#executing-the-query":{"tf":1.7320508075688773},"traits/lowering-rules.html#associated-type-values":{"tf":1.0},"traits/regions.html#region-constraints":{"tf":1.0},"traits/chalk-overview.html#solver":{"tf":1.0},"variance.html#variance-and-associated-types":{"tf":1.0},"traits/lowering-rules.html#transforming-the-lowered-where-clauses":{"tf":1.0},"traits/specialization.html#specialization":{"tf":1.0},"traits/goals-and-clauses.html#goals-and-clauses-meta-structure":{"tf":1.0},"traits/lowering-module.html#unit-tests":{"tf":1.0},"traits/lowering-to-logic.html#type-checking-normal-functions":{"tf":1.0},"traits/lowering-rules.html#lowering-impl-items":{"tf":1.0},"traits/goals-and-clauses.html#coinductive-goals":{"tf":1.4142135623730952},"traits/caching.html#caching-and-subtle-considerations-therewith":{"tf":1.0},"traits/lowering-to-logic.html#type-checking-generic-functions-beyond-horn-clauses":{"tf":1.0},"traits/lowering-rules.html#lowering-traits":{"tf":1.0},"traits/bibliography.html#bibliography":{"tf":1.0},"traits/associated-types.html#integration-with-unification":{"tf":1.0},"traits/lowering-module.html#the--program_clauses_for--query":{"tf":1.0},"traits/associated-types.html#projection-equality":{"tf":1.0},"type-inference.html#trying-equality":{"tf":1.0},"traits/lowering-to-logic.html#rust-traits-and-logic":{"tf":1.0},"traits/canonicalization.html#canonicalization":{"tf":1.0},"type-inference.html#extracting-region-constraints":{"tf":2.0},"traits/lowering-to-logic.html#source":{"tf":1.0},"type-inference.html#region-constraints":{"tf":1.0},"traits/lowering-rules.html#associated-type-declarations":{"tf":1.0},"traits/associated-types.html#equality-and-associated-types":{"tf":1.0},"traits/chalk-overview.html#rules":{"tf":1.0},"traits/caching.html#an-example":{"tf":1.0},"traits/canonical-queries.html#canonical-queries":{"tf":1.0},"traits/associated-types.html#associated-type-projection-and-normalization":{"tf":1.0},"appendix/glossary.html#appendix-c-glossary":{"tf":1.0},"traits/wf.html#well-formedness-checking":{"tf":1.0},"traits/slg.html#the-slg-solver":{"tf":1.0},"type-checking.html#type-checking":{"tf":1.0},"traits/canonicalization.html#processing-the-canonicalized-query-result":{"tf":1.0},"traits/canonicalization.html#canonicalizing-the-query":{"tf":1.4142135623730952},"traits/lowering-rules.html#lowering-rules":{"tf":1.0},"traits/lowering-module.html#the-lowering-module-in-rustc":{"tf":1.0},"traits/hrtb.html#basic-matching-and-skolemization-leaks":{"tf":1.0},"traits/chalk-overview.html#well-formedness-checks":{"tf":1.0},"traits/lowering-to-logic.html#lowering-to-logic":{"tf":1.0},"traits/chalk-overview.html#resources":{"tf":1.0},"traits/implied-bounds.html#implied-bounds":{"tf":1.0},"traits/canonical-queries.html#examples":{"tf":1.0},"traits/lowering-rules.html#lowering-trait-items":{"tf":1.0},"traits/lowering-rules.html#rule-names-and-cross-references":{"tf":1.0},"traits/lowering-rules.html#trait-header":{"tf":1.0},"traits/lowering-rules.html#lowering-impls":{"tf":1.0},"traits/canonical-queries.html#a-trait-query-in-rustc":{"tf":1.0},"traits/chalk-overview.html#testing":{"tf":1.0},"traits/goals-and-clauses.html#incomplete-chapter":{"tf":1.4142135623730952},"traits/goals-and-clauses.html#domain-goals":{"tf":1.0},"traits/lowering-rules.html#function-and-constant-values":{"tf":1.0},"traits/caching.html#where-clauses-and-the-local-vs-global-cache":{"tf":1.0},"traits/associated-types.html#skolemized-associated-types":{"tf":1.0}},"df":70,"e":{"docs":{},"df":0,"r":{"docs":{"traits/canonical-queries.html#the-traditional-interactive-prolog-query":{"tf":2.8284271247461905},"traits/bibliography.html#bibliography":{"tf":1.0},"traits/resolution.html#trait-resolution-old-style":{"tf":1.4142135623730952},"traits/goals-and-clauses.html#goals-and-clauses":{"tf":1.0},"traits/goals-and-clauses.html#goals-and-clauses-meta-structure":{"tf":1.0},"traits/goals-and-clauses.html#coinductive-goals":{"tf":1.0},"traits/canonical-queries.html#a-trait-query-in-rustc":{"tf":1.4142135623730952},"traits/slg.html#the-slg-solver":{"tf":1.4142135623730952},"traits/index.html#trait-solving-new-style":{"tf":1.4142135623730952},"traits/lowering-to-logic.html#lowering-to-logic":{"tf":1.0},"traits/canonicalization.html#executing-the-query":{"tf":1.0},"type-inference.html#extracting-region-constraints":{"tf":2.0},"traits/chalk-overview.html#blog-posts":{"tf":1.0},"traits/chalk-overview.html#solver":{"tf":1.7320508075688773}},"df":14}}},"u":{"docs":{},"df":0,"t":{"docs":{"traits/canonical-queries.html#examples":{"tf":1.0},"traits/lowering-to-logic.html#lowering-to-logic":{"tf":1.0},"variance.html#the-algorithm":{"tf":2.0}},"df":3}}},"o":{"docs":{},"df":0,"n":{"docs":{"traits/canonical-queries.html#examples":{"tf":1.0}},"df":1}},"r":{"docs":{},"df":0,"t":{"docs":{"traits/chalk-overview.html#intermediate-representation-ir":{"tf":1.0},"hir.html#identifiers-in-the-hir":{"tf":1.0},"traits/goals-and-clauses.html#goals-and-clauses-meta-structure":{"tf":1.0},"mir/regionck.html#skolemization-and-outlives-constraints":{"tf":1.0},"ty.html#allocating-and-working-with-types":{"tf":1.0},"hir.html#the-hir-map":{"tf":1.4142135623730952},"mir/regionck.html#subtyping-and-skolemization":{"tf":1.0},"compiler-debugging.html#debugging-llvm":{"tf":1.0}},"df":8},"r":{"docs":{},"df":0,"i":{"docs":{"compiler-debugging.html#getting-a-backtrace":{"tf":1.0}},"df":1}}},"u":{"docs":{},"df":0,"r":{"docs":{},"df":0,"c":{"docs":{"rustdoc.html#from-clean-to-crate":{"tf":1.0},"traits/canonical-queries.html#examples":{"tf":1.0},"mir/index.html#key-mir-vocabulary":{"tf":1.0},"appendix/stupid-stats.html#overview-of-the-compilation-process":{"tf":1.0},"tests/adding.html#header-commands-configuring-rustc":{"tf":1.0},"traits/chalk-overview.html#intermediate-representation-ir":{"tf":1.0},"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.0},"the-parser.html#the-parser":{"tf":2.0},"traits/chalk-overview.html#resources":{"tf":1.0},"type-checking.html#type-checking":{"tf":1.0},"traits/chalk-overview.html#lowering":{"tf":1.0},"traits/chalk-overview.html#well-formedness-checks":{"tf":1.0},"tests/adding.html#normalization":{"tf":1.0},"traits/lowering-to-logic.html#source":{"tf":1.4142135623730952},"appendix/code-index.html#appendix-d-code-index":{"tf":1.7320508075688773},"tests/intro.html#other-tests":{"tf":1.4142135623730952},"incrcomp-debugging.html#dumping-the-graph":{"tf":1.0},"mir/passes.html#implementing-and-registering-a-pass":{"tf":1.0},"appendix/glossary.html#appendix-c-glossary":{"tf":1.7320508075688773},"rustc-driver.html#the-rustc-driver":{"tf":1.0},"compiletest.html#adding-a-new-test-file":{"tf":1.0},"name-resolution.html#name-resolution":{"tf":1.0},"high-level-overview.html#crate-structure":{"tf":1.4142135623730952},"query.html#queries-demand-driven-compilation":{"tf":1.0},"about-this-guide.html#about-this-guide":{"tf":1.4142135623730952},"traits/chalk-overview.html#parsing":{"tf":1.0},"tests/adding.html#adding-new-tests":{"tf":1.4142135623730952},"tests/intro.html#the-compiler-testing-framework":{"tf":1.0},"appendix/stupid-stats.html#appendix-a-a-tutorial-on-creating-a-drop-in-replacement-for-rustc":{"tf":1.0},"macro-expansion.html#example":{"tf":1.0},"high-level-overview.html#high-level-overview-of-the-compiler-source":{"tf":1.4142135623730952},"mir/borrowck.html#major-phases-of-the-borrow-checker":{"tf":1.0},"name-resolution.html#scopes-and-ribs":{"tf":1.0},"compiletest.html#header-commands":{"tf":1.4142135623730952},"compiletest.html#adding-a-new-header-command":{"tf":1.4142135623730952},"compiletest.html#introduction":{"tf":1.0},"diag.html#declaring-a-lint":{"tf":1.0},"tests/adding.html#error-annotations":{"tf":1.0},"tests/adding.html#other-header-commands":{"tf":1.4142135623730952}},"df":39,"e":{"docs":{},"df":0,"_":{"docs":{},"df":0,"f":{"docs":{},"df":0,"i":{"docs":{},"df":0,"l":{"docs":{},"df":0,"t":{"docs":{"incrcomp-debugging.html#dumping-the-graph":{"tf":2.23606797749979}},"df":1}}}}}}}},"p":{"docs":{"rustdoc.html#from-soup-to-nuts":{"tf":1.4142135623730952}},"df":1},"n":{"docs":{},"df":0,"d":{"docs":{"appendix/glossary.html#appendix-c-glossary":{"tf":2.449489742783178}},"df":1}}}},"h":{"docs":{},"df":0,"i":{"docs":{},"df":0,"f":{"docs":{},"df":0,"t":{"docs":{"ty.html#the-tcx-and-how-it-uses-lifetimes":{"tf":1.0}},"df":1}},"p":{"docs":{"compiler-debugging.html#logging-etiquette":{"tf":1.0}},"df":1}},"o":{"docs":{},"df":0,"u":{"docs":{},"df":0,"l":{"docs":{},"df":0,"d":{"docs":{},"df":0,"n":{"docs":{},"df":0,"'":{"docs":{},"df":0,"t":{"docs":{"query.html#cycles-between-queries":{"tf":1.0}},"df":1}}}}}},"w":{"docs":{"traits/implied-bounds.html#implied-bounds":{"tf":1.0},"traits/lowering-rules.html#trait-header":{"tf":1.0},"compiler-debugging.html#debugging-llvm":{"tf":1.0},"mir/index.html#key-mir-vocabulary":{"tf":1.0},"compiler-debugging.html#getting-logging-output":{"tf":1.4142135623730952},"appendix/stupid-stats.html#appendix-a-a-tutorial-on-creating-a-drop-in-replacement-for-rustc":{"tf":1.4142135623730952},"traits/lowering-to-logic.html#type-checking-normal-functions":{"tf":1.0},"traits/lowering-rules.html#associated-type-declarations":{"tf":1.0}},"df":8,"n":{"docs":{"mir/visitor.html#mir-visitor":{"tf":1.0},"miri.html#miri":{"tf":1.0}},"df":2}},"r":{"docs":{},"df":0,"t":{"docs":{"type-inference.html#creating-an-inference-context":{"tf":1.0},"variance.html#trait-variance-and-vtable-resolution":{"tf":1.0},"traits/wf.html#well-formedness-checking":{"tf":1.0},"tests/adding.html#header-commands-configuring-rustc":{"tf":1.0},"traits/canonical-queries.html#examples":{"tf":1.0},"appendix/code-index.html#appendix-d-code-index":{"tf":1.0}},"df":6,"c":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{"rustdoc.html#other-tricks-up-its-sleeve":{"tf":1.0}},"df":1}}},"l":{"docs":{},"df":0,"i":{"docs":{"traits/canonical-queries.html#a-trait-query-in-rustc":{"tf":1.0},"traits/associated-types.html#skolemized-associated-types":{"tf":1.0}},"df":2}},"h":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{"hir.html#identifiers-in-the-hir":{"tf":1.0},"traits/associated-types.html#associated-type-projection-and-normalization":{"tf":1.0}},"df":2}}}}}}},"e":{"docs":{},"df":0,"e":{"docs":{},"df":0,"t":{"docs":{"rustdoc.html#cheat-sheet":{"tf":1.4142135623730952}},"df":1}},"n":{"docs":{},"df":0,"i":{"docs":{},"df":0,"g":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{"miri.html#interpretation":{"tf":1.0}},"df":1}}}}}},"a":{"docs":{},"df":0,"l":{"docs":{},"df":0,"l":{"docs":{},"df":0,"o":{"docs":{},"df":0,"w":{"docs":{"traits/resolution.html#selection-during-translation":{"tf":1.4142135623730952}},"df":1}}}},"r":{"docs":{},"df":0,"e":{"docs":{"rustdoc.html#from-soup-to-nuts":{"tf":1.0},"appendix/glossary.html#appendix-c-glossary":{"tf":1.0},"mir/regionck.html#what-is-a-universe":{"tf":1.0},"mir/visitor.html#mir-visitor":{"tf":1.0},"ty.html#the-tcx-and-how-it-uses-lifetimes":{"tf":1.0},"mir/borrowck.html#mir-borrow-check":{"tf":1.0}},"df":6,"d":{"docs":{},"df":0,"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"x":{"docs":{},"df":0,"t":{"docs":{"rustdoc.html#from-clean-to-crate":{"tf":1.0},"rustdoc.html#from-soup-to-nuts":{"tf":1.0}},"df":2}}}}}}}}}},"d":{"docs":{},"df":0,"o":{"docs":{},"df":0,"w":{"docs":{"name-resolution.html#scopes-and-ribs":{"tf":1.7320508075688773}},"df":1}}}}},"w":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{},"df":0,"c":{"docs":{},"df":0,"h":{"docs":{"rustdoc.html#from-clean-to-crate":{"tf":1.0},"how-to-build-and-run.html#running-xpy-and-building-a-stage1-compiler":{"tf":1.0},"traits/specialization.html#specialization":{"tf":1.0}},"df":3}}},"f":{"docs":{},"df":0,"t":{"docs":{"traits/bibliography.html#bibliography":{"tf":1.0}},"df":1}}},"a":{"docs":{},"df":0,"p":{"docs":{"mir/regionck.html#subtyping-and-skolemization":{"tf":1.0}},"df":1}}}},"z":{"docs":{"compiler-debugging.html#getting-a-backtrace-for-errors":{"tf":1.7320508075688773},"traits/canonicalization.html#canonicalization":{"tf":1.0},"incrcomp-debugging.html#dumping-the-graph":{"tf":1.0},"mir/regionck.html#what-is-a-universe":{"tf":1.4142135623730952},"tests/adding.html#revisions":{"tf":1.0}},"df":5,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"o":{"docs":{"compiletest.html#introduction":{"tf":1.0},"traits/canonicalization.html#canonicalization":{"tf":1.0},"traits/lowering-rules.html#lowering-impls":{"tf":1.0}},"df":3}}},"u":{"docs":{},"df":0,"n":{"docs":{},"df":0,"p":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"t":{"docs":{},"df":0,"t":{"docs":{},"df":0,"y":{"docs":{},"df":0,"=":{"docs":{},"df":0,"h":{"docs":{},"df":0,"i":{"docs":{},"df":0,"r":{"docs":{"hir.html#the-hir":{"tf":1.4142135623730952}},"df":1}}}}}}}}}}}},"d":{"docs":{},"df":0,"u":{"docs":{},"df":0,"m":{"docs":{},"df":0,"p":{"docs":{"mir/passes.html#seeing-how-the-mir-changes-as-the-compiler-executes":{"tf":2.449489742783178}},"df":1}}}}},"c":{"docs":{"variance.html#the-algorithm":{"tf":1.7320508075688773},"traits/canonicalization.html#processing-the-canonicalized-query-result":{"tf":2.6457513110645909},"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.4142135623730952},"compiler-debugging.html#debugging-llvm":{"tf":2.6457513110645909},"mir/borrowck.html#major-phases-of-the-borrow-checker":{"tf":1.4142135623730952},"appendix/background.html#what-is-a-control-flow-graph":{"tf":1.4142135623730952},"mir/regionck.html#another-example":{"tf":1.4142135623730952},"traits/canonicalization.html#canonicalizing-the-query-result":{"tf":1.0},"mir/regionck.html#final-example":{"tf":1.4142135623730952},"appendix/glossary.html#appendix-c-glossary":{"tf":1.4142135623730952},"mir/index.html#key-mir-vocabulary":{"tf":1.4142135623730952},"traits/canonicalization.html#executing-the-query":{"tf":1.7320508075688773}},"df":12,"l":{"docs":{},"df":0,"e":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{"rustdoc.html#hot-potato":{"tf":1.0},"rustdoc.html#the-walking-tour-of-rustdoc":{"tf":1.4142135623730952},"rustdoc.html#cheat-sheet":{"tf":1.0},"rustdoc.html#from-clean-to-crate":{"tf":1.4142135623730952},"rustdoc.html#from-soup-to-nuts":{"tf":1.4142135623730952},"how-to-build-and-run.html#other-xpy-commands":{"tf":1.4142135623730952},"rustdoc.html#other-tricks-up-its-sleeve":{"tf":1.0},"compiler-debugging.html#getting-logging-output":{"tf":1.0},"rustdoc.html#from-crate-to-clean":{"tf":2.6457513110645909}},"df":9,"(":{"docs":{},"df":0,"&":{"docs":{},"df":0,"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"l":{"docs":{},"df":0,"f":{"docs":{"rustdoc.html#from-crate-to-clean":{"tf":1.0}},"df":1}}}}}},"<":{"docs":{},"df":0,"c":{"docs":{},"df":0,"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{"rustdoc.html#from-crate-to-clean":{"tf":1.0}},"df":1}}}},"t":{"docs":{"rustdoc.html#from-crate-to-clean":{"tf":1.0}},"df":1}},":":{"docs":{},"df":0,":":{"docs":{},"df":0,"c":{"docs":{},"df":0,"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{"rustdoc.html#from-crate-to-clean":{"tf":1.0},"rustdoc.html#from-clean-to-crate":{"tf":1.0},"rustdoc.html#from-soup-to-nuts":{"tf":1.0}},"df":3}}}}}},"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"g":{"docs":{},"df":0,"i":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{"mir/passes.html#seeing-how-the-mir-changes-as-the-compiler-executes":{"tf":2.449489742783178}},"df":1}}}}}}}}},"/":{"docs":{},"df":0,"m":{"docs":{},"df":0,"o":{"docs":{},"df":0,"d":{"docs":{},"df":0,".":{"docs":{},"df":0,"r":{"docs":{"rustdoc.html#cheat-sheet":{"tf":1.0},"rustdoc.html#from-crate-to-clean":{"tf":2.0}},"df":2}}}}}}},"r":{"docs":{"variance.html#addendum-variance-on-traits":{"tf":1.0},"appendix/stupid-stats.html#what-next":{"tf":1.0},"appendix/background.html#what-is-a-control-flow-graph":{"tf":1.0},"param_env.html#parameter-environment":{"tf":1.0}},"df":4,"l":{"docs":{},"df":0,"i":{"docs":{"traits/caching.html#where-clauses-and-the-local-vs-global-cache":{"tf":1.0},"traits/resolution.html#candidate-assembly":{"tf":1.0}},"df":2}}}}},"a":{"docs":{},"df":0,"i":{"docs":{},"df":0,"m":{"docs":{"variance.html#constraints":{"tf":1.0}},"df":1}},"s":{"docs":{},"df":0,"s":{"docs":{"diag.html#error-messages":{"tf":1.0},"tests/adding.html#revisions":{"tf":1.0},"variance.html#the-algorithm":{"tf":1.4142135623730952},"variance.html#trait-variance-and-vtable-resolution":{"tf":1.0}},"df":4,"i":{"docs":{},"df":0,"c":{"docs":{"tests/intro.html#further-reading":{"tf":1.0}},"df":1}}},"h":{"docs":{"name-resolution.html#namespaces":{"tf":1.0}},"df":1}},"u":{"docs":{},"df":0,"s":{"docs":{"traits/lowering-rules.html#transforming-the-lowered-where-clauses":{"tf":2.0},"traits/associated-types.html#associated-type-projection-and-normalization":{"tf":1.7320508075688773},"traits/caching.html#an-example":{"tf":1.0},"traits/lowering-module.html#unit-tests":{"tf":1.0},"traits/lowering-rules.html#notation":{"tf":1.0},"traits/associated-types.html#projection-equality":{"tf":1.4142135623730952},"method-lookup.html#candidate-search":{"tf":1.0},"traits/lowering-to-logic.html#type-checking-normal-functions":{"tf":1.0},"traits/index.html#trait-solving-new-style":{"tf":1.0},"traits/resolution.html#candidate-assembly":{"tf":3.3166247903554},"traits/lowering-to-logic.html#lowering-to-logic":{"tf":1.0},"rustdoc.html#from-clean-to-crate":{"tf":1.0},"variance.html#constraints":{"tf":1.0},"traits/canonicalization.html#executing-the-query":{"tf":1.0},"traits/goals-and-clauses.html#domain-goals":{"tf":1.7320508075688773},"traits/lowering-to-logic.html#rust-traits-and-logic":{"tf":2.0},"traits/goals-and-clauses.html#goals-and-clauses":{"tf":2.23606797749979},"traits/canonical-queries.html#examples":{"tf":1.0},"traits/caching.html#where-clauses-and-the-local-vs-global-cache":{"tf":2.23606797749979},"method-lookup.html#candidate-assembly":{"tf":1.0},"traits/resolution.html#selection-during-translation":{"tf":1.0},"traits/resolution.html#selection":{"tf":1.0},"traits/chalk-overview.html#lowering":{"tf":2.23606797749979},"traits/goals-and-clauses.html#coinductive-goals":{"tf":1.4142135623730952},"traits/lowering-rules.html#associated-type-declarations":{"tf":1.7320508075688773},"traits/lowering-rules.html#lowering-where-clauses":{"tf":2.449489742783178},"traits/canonical-queries.html#a-trait-query-in-rustc":{"tf":1.0},"traits/lowering-rules.html#lowering-rules":{"tf":1.0},"traits/resolution.html#overview":{"tf":1.0},"traits/lowering-rules.html#lowering-traits":{"tf":1.0},"traits/lowering-to-logic.html#type-checking-generic-functions-beyond-horn-clauses":{"tf":2.6457513110645909},"traits/lowering-rules.html#associated-type-values":{"tf":1.4142135623730952},"traits/lowering-rules.html#trait-header":{"tf":3.3166247903554},"traits/lowering-module.html#the-lowering-module-in-rustc":{"tf":1.0},"traits/goals-and-clauses.html#goals-and-clauses-meta-structure":{"tf":3.1622776601683797},"type-checking.html#type-collection":{"tf":1.0},"traits/lowering-module.html#the--program_clauses_for--query":{"tf":1.4142135623730952}},"df":37,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"/":{"docs":{},"df":0,"e":{"docs":{},"df":0,"t":{"docs":{},"df":0,"c":{"docs":{"traits/resolution.html#candidate-assembly":{"tf":1.0}},"df":1}}}}},"/":{"docs":{},"df":0,"e":{"docs":{},"df":0,"t":{"docs":{},"df":0,"c":{"docs":{"traits/resolution.html#candidate-assembly":{"tf":1.0}},"df":1}}}}}}},"r":{"docs":{},"df":0,"i":{"docs":{},"df":0,"f":{"docs":{},"df":0,"i":{"docs":{"traits/canonical-queries.html#examples":{"tf":1.0}},"df":1}}}}},"i":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{"tests/intro.html#testing-on-emulators":{"tf":1.4142135623730952}},"df":1}}},"c":{"docs":{},"df":0,"k":{"docs":{"mir/index.html#key-mir-vocabulary":{"tf":1.4142135623730952}},"df":1}},"p":{"docs":{},"df":0,"p":{"docs":{},"df":0,"i":{"docs":{"tests/intro.html#other-tests":{"tf":1.0}},"df":1}}}},"o":{"docs":{},"df":0,"s":{"docs":{},"df":0,"e":{"docs":{"appendix/glossary.html#appendix-c-glossary":{"tf":1.0},"hir.html#the-hir":{"tf":1.0},"macro-expansion.html#example":{"tf":1.0},"traits/hrtb.html#basic-matching-and-skolemization-leaks":{"tf":1.0},"traits/canonical-queries.html#canonical-queries":{"tf":1.0},"type-inference.html#extracting-region-constraints":{"tf":1.4142135623730952},"appendix/stupid-stats.html#appendix-a-a-tutorial-on-creating-a-drop-in-replacement-for-rustc":{"tf":1.4142135623730952},"high-level-overview.html#the-main-stages-of-compilation":{"tf":1.0}},"df":8,"s":{"docs":{},"df":0,"t":{"docs":{"name-resolution.html#scopes-and-ribs":{"tf":1.0}},"df":1}}},"u":{"docs":{},"df":0,"r":{"docs":{"appendix/glossary.html#appendix-c-glossary":{"tf":1.0},"appendix/background.html#what-is-a-free-region-or-a-free-variable-what-about-bound-region":{"tf":2.0},"mir/regionck.html#closures":{"tf":1.4142135623730952},"name-resolution.html#scopes-and-ribs":{"tf":1.0},"hir.html#hir-bodies":{"tf":1.0},"type-inference.html#creating-an-inference-context":{"tf":1.0},"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.4142135623730952}},"df":7}}},"n":{"docs":{},"df":0,"e":{"docs":{"traits/resolution.html#major-concepts":{"tf":1.4142135623730952},"diag.html#declaring-a-lint":{"tf":1.0},"traits/goals-and-clauses.html#domain-goals":{"tf":2.0},"traits/chalk-overview.html#lowering":{"tf":2.449489742783178},"traits/lowering-to-logic.html#rust-traits-and-logic":{"tf":3.0},"mir/passes.html#stealing":{"tf":1.0},"how-to-build-and-run.html#running-xpy-and-building-a-stage1-compiler":{"tf":1.0},"traits/canonical-queries.html#the-traditional-interactive-prolog-query":{"tf":2.6457513110645909},"query.html#how-the-compiler-executes-a-query":{"tf":1.0},"traits/canonical-queries.html#a-trait-query-in-rustc":{"tf":1.7320508075688773}},"df":10,"a":{"docs":{},"df":0,"b":{"docs":{},"df":0,"l":{"docs":{"query.html#adding-a-new-kind-of-query":{"tf":1.0},"query.html#how-the-compiler-executes-a-query":{"tf":1.0}},"df":2}}},">":{"docs":{},"df":0,"(":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"u":{"docs":{},"df":0,"f":{"docs":{},"df":0,"f":{"docs":{"traits/goals-and-clauses.html#domain-goals":{"tf":1.0}},"df":1}}}}}}},"_":{"docs":{},"df":0,"s":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{},"df":0,"c":{"docs":{"traits/resolution.html#major-concepts":{"tf":1.0}},"df":1,"e":{"docs":{},"df":0,"(":{"docs":{},"df":0,"&":{"docs":{},"df":0,"[":{"docs":{},"df":0,"1":{"docs":{"traits/resolution.html#major-concepts":{"tf":1.0}},"df":1}}}},"<":{"docs":{},"df":0,"t":{"docs":{},"df":0,":":{"docs":{},"df":0,"c":{"docs":{},"df":0,"l":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"e":{"docs":{},"df":0,">":{"docs":{},"df":0,"(":{"docs":{},"df":0,"x":{"docs":{"traits/resolution.html#major-concepts":{"tf":1.4142135623730952}},"df":1}}}}}}}}}}}}}}}}},"(":{"docs":{},"df":0,"f":{"docs":{},"df":0,"o":{"docs":{},"df":0,"o":{"docs":{"traits/lowering-to-logic.html#rust-traits-and-logic":{"tf":1.0}},"df":1}}},"b":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{"traits/lowering-to-logic.html#rust-traits-and-logic":{"tf":1.0}},"df":1}}},"?":{"docs":{},"df":0,"t":{"docs":{"traits/lowering-to-logic.html#rust-traits-and-logic":{"tf":1.0}},"df":1}},"u":{"docs":{},"df":0,"s":{"docs":{"traits/lowering-to-logic.html#rust-traits-and-logic":{"tf":1.4142135623730952}},"df":1}},"v":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"<":{"docs":{},"df":0,"?":{"docs":{},"df":0,"t":{"docs":{"traits/lowering-to-logic.html#rust-traits-and-logic":{"tf":1.0}},"df":1}},"b":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{"traits/lowering-to-logic.html#rust-traits-and-logic":{"tf":1.4142135623730952}},"df":1}}},"v":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"<":{"docs":{},"df":0,"u":{"docs":{},"df":0,"s":{"docs":{"traits/lowering-to-logic.html#rust-traits-and-logic":{"tf":1.4142135623730952}},"df":1}}}}}},"u":{"docs":{},"df":0,"s":{"docs":{"traits/lowering-to-logic.html#rust-traits-and-logic":{"tf":1.0}},"df":1}}}}}}}}}}},"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{},"df":0,"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{"rustdoc.html#from-crate-to-clean":{"tf":1.0},"ty.html#the--ty--module-representing-types":{"tf":1.0},"high-level-overview.html#crate-structure":{"tf":1.0},"ty.html#the-tcx-and-how-it-uses-lifetimes":{"tf":1.0},"appendix/code-index.html#appendix-d-code-index":{"tf":1.0}},"df":5}}}}},"r":{"docs":{},"df":0,"t":{"docs":{},"df":0,"a":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{"name-resolution.html#scopes-and-ribs":{"tf":1.0},"mir/index.html#the-mir-mid-level-ir":{"tf":1.0},"tests/intro.html#compiletest-test-suites":{"tf":1.0},"tests/adding.html#revisions":{"tf":1.0},"diag.html#declaring-a-lint":{"tf":1.0},"high-level-overview.html#the-main-stages-of-compilation":{"tf":1.0},"rustdoc.html#from-clean-to-crate":{"tf":1.0}},"df":7,"t":{"docs":{},"df":0,"i":{"docs":{"traits/canonicalization.html#processing-the-canonicalized-query-result":{"tf":1.4142135623730952},"traits/canonical-queries.html#examples":{"tf":1.4142135623730952},"traits/canonicalization.html#executing-the-query":{"tf":1.4142135623730952},"traits/canonical-queries.html#a-trait-query-in-rustc":{"tf":1.0},"traits/canonicalization.html#canonicalizing-the-query-result":{"tf":2.0}},"df":5}}}}}}},"l":{"docs":{},"df":0,"l":{"docs":{"rustdoc.html#from-soup-to-nuts":{"tf":1.0}},"df":1}}},"x":{"docs":{"type-inference.html#creating-an-inference-context":{"tf":1.4142135623730952},"diag.html#declaring-a-lint":{"tf":1.0},"appendix/glossary.html#appendix-c-glossary":{"tf":1.4142135623730952},"rustdoc.html#from-crate-to-clean":{"tf":1.0}},"df":4,".":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"r":{"docs":{},"df":0,"u":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{},"df":0,"_":{"docs":{},"df":0,"s":{"docs":{},"df":0,"p":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"_":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{},"df":0,"(":{"docs":{},"df":0,"w":{"docs":{},"df":0,"h":{"docs":{},"df":0,"i":{"docs":{},"df":0,"l":{"docs":{},"df":0,"e":{"docs":{},"df":0,"_":{"docs":{},"df":0,"t":{"docs":{},"df":0,"r":{"docs":{},"df":0,"u":{"docs":{"diag.html#declaring-a-lint":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"df":0,"c":{"docs":{},"df":0,"x":{"docs":{},"df":0,".":{"docs":{},"df":0,"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"s":{"docs":{},"df":0,".":{"docs":{},"df":0,"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"d":{"docs":{},"df":0,"e":{"docs":{},"df":0,"m":{"docs":{},"df":0,"a":{"docs":{},"df":0,"p":{"docs":{},"df":0,"(":{"docs":{},"df":0,")":{"docs":{},"df":0,".":{"docs":{},"df":0,"d":{"docs":{},"df":0,"e":{"docs":{},"df":0,"f":{"docs":{},"df":0,"_":{"docs":{},"df":0,"s":{"docs":{},"df":0,"p":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"(":{"docs":{},"df":0,"e":{"docs":{},"df":0,".":{"docs":{},"df":0,"s":{"docs":{},"df":0,"p":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{"diag.html#declaring-a-lint":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{"tests/adding.html#comment-explaining-what-the-test-is-about":{"tf":1.0}},"df":1}},"r":{"docs":{},"df":0,"c":{"docs":{},"df":0,"u":{"docs":{},"df":0,"l":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{"traits/goals-and-clauses.html#coinductive-goals":{"tf":1.0}},"df":1,"l":{"docs":{},"df":0,"i":{"docs":{"traits/goals-and-clauses.html#coinductive-goals":{"tf":1.0}},"df":1}}}}},"m":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.0}},"df":1}}}}}}},"f":{"docs":{},"df":0,"g":{"docs":{"high-level-overview.html#the-main-stages-of-compilation":{"tf":1.0},"tests/adding.html#revisions":{"tf":2.0},"compiletest.html#adding-a-new-header-command":{"tf":1.0},"appendix/stupid-stats.html#overview-of-the-compilation-process":{"tf":1.4142135623730952},"rustc-driver.html#the-rustc-driver":{"tf":1.0},"mir/visitor.html#traversal":{"tf":1.0},"rustdoc.html#hot-potato":{"tf":1.0},"mir/regionck.html#back-to-our-example":{"tf":2.449489742783178}},"df":8,"(":{"docs":{},"df":0,"f":{"docs":{},"df":0,"o":{"docs":{},"df":0,"o":{"docs":{"tests/adding.html#revisions":{"tf":1.4142135623730952}},"df":1}}}}}},"<":{"docs":{},"df":0,"e":{"docs":{"variance.html#the-algorithm":{"tf":1.0}},"df":1}},"d":{"docs":{"how-to-build-and-run.html#create-a-configtoml":{"tf":1.0}},"df":1},"u":{"docs":{},"df":0,"r":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{"traits/resolution.html#trait-resolution-old-style":{"tf":1.0},"query.html#queries-demand-driven-compilation":{"tf":1.0},"hir.html#out-of-band-storage-and-the--crate--type":{"tf":1.4142135623730952},"appendix/glossary.html#appendix-c-glossary":{"tf":1.4142135623730952},"traits/canonical-queries.html#a-trait-query-in-rustc":{"tf":1.0},"conventions.html#how-to-structure-your-pr":{"tf":1.0},"macro-expansion.html#the-macro-parser":{"tf":1.0},"tests/adding.html#revisions":{"tf":1.0},"hir.html#identifiers-in-the-hir":{"tf":1.0},"appendix/stupid-stats.html#compilercalls":{"tf":1.0},"incrcomp-debugging.html#dumping-the-graph":{"tf":1.0},"rustdoc.html#hot-potato":{"tf":1.0},"traits/index.html#trait-solving-new-style":{"tf":1.0},"tests/adding.html#guide-to-the-ui-tests":{"tf":1.0},"appendix/stupid-stats.html#compilercontroller":{"tf":1.0},"tests/adding.html#error-annotations":{"tf":1.0},"conventions.html#copyright-notice":{"tf":1.0},"traits/resolution.html#selection-during-translation":{"tf":1.4142135623730952},"variance.html#dependency-graph-management":{"tf":1.0},"compiletest.html#adding-a-new-header-command":{"tf":1.7320508075688773},"miri.html#interpretation":{"tf":1.0},"tests/intro.html#testing-infrastructure":{"tf":1.0},"hir.html#the-hir-map":{"tf":1.0},"traits/resolution.html#candidate-assembly":{"tf":1.0},"how-to-build-and-run.html#running-xpy-and-building-a-stage1-compiler":{"tf":1.0},"query.html#cycles-between-queries":{"tf":1.0}},"df":26}}}},"i":{"docs":{},"df":0,"o":{"docs":{},"df":0,"u":{"docs":{"mir/borrowck.html#mir-borrow-check":{"tf":1.0}},"df":1}}},"l":{"docs":{},"df":0,"i":{"docs":{"name-resolution.html#scopes-and-ribs":{"tf":1.0}},"df":1}}},"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"o":{"docs":{},"df":0,"m":{"docs":{"tests/adding.html#normalization":{"tf":1.0},"tests/intro.html#other-tests":{"tf":1.0},"query.html#adding-a-new-kind-of-query":{"tf":1.4142135623730952},"tests/adding.html#revisions":{"tf":1.7320508075688773},"appendix/stupid-stats.html#appendix-a-a-tutorial-on-creating-a-drop-in-replacement-for-rustc":{"tf":1.0},"tests/running.html#running-a-subset-of-the-test-suites":{"tf":1.0},"tests/adding.html#header-commands-configuring-rustc":{"tf":1.0},"rustdoc.html#cheat-sheet":{"tf":1.0},"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.4142135623730952},"macro-expansion.html#custom-derive":{"tf":1.4142135623730952},"compiletest.html#adding-a-new-header-command":{"tf":1.0}},"df":11,"i":{"docs":{},"df":0,"s":{"docs":{"appendix/stupid-stats.html#the-driver-customisation-apis":{"tf":2.0},"appendix/stupid-stats.html#appendix-a-a-tutorial-on-creating-a-drop-in-replacement-for-rustc":{"tf":1.4142135623730952},"appendix/stupid-stats.html#overview-of-the-compilation-process":{"tf":1.0}},"df":3}}}}}}},"y":{"docs":{},"df":0,"c":{"docs":{},"df":0,"l":{"docs":{"query.html#adding-a-new-kind-of-query":{"tf":1.4142135623730952},"query.html#cycles-between-queries":{"tf":3.4641016151377546},"traits/goals-and-clauses.html#coinductive-goals":{"tf":2.0},"traits/lowering-rules.html#trait-header":{"tf":1.0},"appendix/background.html#what-is-a-control-flow-graph":{"tf":1.4142135623730952},"traits/associated-types.html#integration-with-unification":{"tf":1.0},"traits/canonicalization.html#canonicalization":{"tf":1.0}},"df":7,"i":{"docs":{},"df":0,"c":{"docs":{"traits/chalk-overview.html#blog-posts":{"tf":1.0},"query.html#cycles-between-queries":{"tf":1.0}},"df":2}}}}},"s":{"docs":{},"df":0,"s":{"docs":{"rustdoc.html#from-clean-to-crate":{"tf":1.0}},"df":1,"/":{"docs":{},"df":0,"j":{"docs":{"rustdoc.html#cheat-sheet":{"tf":1.0}},"df":1}}}},"h":{"docs":{},"df":0,"e":{"docs":{},"df":0,"a":{"docs":{},"df":0,"p":{"docs":{"incremental-compilation.html#improvements-to-the-basic-algorithm":{"tf":1.0}},"df":1,"l":{"docs":{},"df":0,"i":{"docs":{"query.html#how-the-compiler-executes-a-query":{"tf":1.0},"query.html#adding-a-new-kind-of-query":{"tf":1.4142135623730952}},"df":2}}},"t":{"docs":{"rustdoc.html#cheat-sheet":{"tf":1.4142135623730952}},"df":1}},"c":{"docs":{},"df":0,"k":{"docs":{"type-checking.html#type-checking":{"tf":1.7320508075688773},"traits/hrtb.html#higher-ranked-trait-obligations":{"tf":1.0},"traits/resolution.html#major-concepts":{"tf":1.0},"appendix/code-index.html#appendix-d-code-index":{"tf":1.4142135623730952},"method-lookup.html#steps":{"tf":1.0},"mir/regionck.html#skolemization-and-universes":{"tf":1.0},"type-checking.html#type-collection":{"tf":1.4142135623730952},"method-lookup.html#candidate-search":{"tf":1.0},"rustc-driver.html#the-rustc-driver":{"tf":1.4142135623730952},"incrcomp-debugging.html#tracking-down-incorrect-edges":{"tf":1.0},"conventions.html#using-crates-from-cratesio":{"tf":1.0},"mir/regionck.html#final-example":{"tf":1.0},"incremental-compilation.html#the-try-mark-green-algorithm":{"tf":1.0},"mir/regionck.html#what-is-a-universe":{"tf":1.0},"incrcomp-debugging.html#dumping-the-graph":{"tf":1.0},"method-lookup.html#the-probe-phase":{"tf":1.0},"method-lookup.html#candidate-assembly":{"tf":1.0},"appendix/glossary.html#appendix-c-glossary":{"tf":2.23606797749979},"mir/index.html#the-mir-mid-level-ir":{"tf":1.0},"param_env.html#parameter-environment":{"tf":1.0},"mir/passes.html#mir-passes":{"tf":1.4142135623730952},"incrcomp-debugging.html#testing-the-dependency-graph":{"tf":1.0},"method-lookup.html#method-lookup":{"tf":1.0},"mir/regionck.html#mir-based-region-checking-nll":{"tf":1.7320508075688773},"appendix/background.html#what-is-co--and-contra-variance":{"tf":1.0},"tests/adding.html#header-commands-configuring-rustc":{"tf":1.0},"traits/index.html#trait-solving-new-style":{"tf":1.4142135623730952},"mir/regionck.html#the-mir-type-check":{"tf":1.4142135623730952},"tests/intro.html#compiletest-test-suites":{"tf":1.7320508075688773},"mir/regionck.html#extending-the-universal-regions-check":{"tf":2.6457513110645909},"mir/regionck.html#skolemization-and-outlives-constraints":{"tf":1.0},"mir/regionck.html#back-to-our-example":{"tf":1.0},"traits/canonical-queries.html#examples":{"tf":1.4142135623730952},"diag.html#error-messages":{"tf":1.0},"tests/adding.html#other-header-commands":{"tf":1.0},"variance.html#addendum-variance-on-traits":{"tf":1.0},"mir/borrowck.html#mir-borrow-check":{"tf":2.0},"mir/regionck.html#subtyping-and-skolemization":{"tf":1.7320508075688773},"mir/index.html#key-mir-vocabulary":{"tf":1.0},"how-to-build-and-run.html#running-xpy-and-building-a-stage1-compiler":{"tf":1.4142135623730952},"diag.html#declaring-a-lint":{"tf":1.4142135623730952},"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.0},"traits/wf.html#well-formedness-checking":{"tf":2.23606797749979},"const-eval.html#constant-evaluation":{"tf":1.4142135623730952},"incremental-compilation.html#the-basic-algorithm":{"tf":1.0},"traits/specialization.html#specialization":{"tf":1.4142135623730952},"variance.html#variance-and-object-types":{"tf":1.0},"incremental-compilation.html#improvements-to-the-basic-algorithm":{"tf":1.0},"mir/regionck.html#another-example":{"tf":1.0},"appendix/stupid-stats.html#overview-of-the-compilation-process":{"tf":1.4142135623730952},"appendix/stupid-stats.html#compilercontroller":{"tf":1.0},"compiletest.html#adding-a-new-header-command":{"tf":1.0},"traits/resolution.html#candidate-assembly":{"tf":1.4142135623730952},"traits/lowering-to-logic.html#type-checking-generic-functions-beyond-horn-clauses":{"tf":2.8284271247461905},"variance.html#variance-of-type-and-lifetime-parameters":{"tf":1.4142135623730952},"variance.html#dependency-graph-management":{"tf":1.0},"variance.html#trait-variance-and-vtable-resolution":{"tf":1.0},"high-level-overview.html#the-main-stages-of-compilation":{"tf":3.0},"type-inference.html#extracting-region-constraints":{"tf":1.0},"traits/resolution.html#overview":{"tf":1.0},"traits/resolution.html#selection":{"tf":1.0},"type-inference.html#inference-variables":{"tf":1.0},"mir/borrowck.html#major-phases-of-the-borrow-checker":{"tf":1.0},"traits/lowering-to-logic.html#type-checking-normal-functions":{"tf":2.8284271247461905},"how-to-build-and-run.html#create-a-configtoml":{"tf":1.0},"variance.html#the-algorithm":{"tf":1.0},"traits/hrtb.html#basic-matching-and-skolemization-leaks":{"tf":2.6457513110645909},"traits/resolution.html#selection-during-translation":{"tf":1.0},"traits/chalk-overview.html#well-formedness-checks":{"tf":2.0},"compiletest.html#introduction":{"tf":1.0},"traits/lowering-module.html#unit-tests":{"tf":1.0},"variance.html#constraints":{"tf":1.0},"variance.html#variance-and-associated-types":{"tf":1.0}},"df":73,"_":{"docs":{},"df":0,"e":{"docs":{},"df":0,"x":{"docs":{},"df":0,"p":{"docs":{},"df":0,"r":{"docs":{"diag.html#declaring-a-lint":{"tf":1.0}},"df":1,"(":{"docs":{},"df":0,"&":{"docs":{},"df":0,"m":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{"diag.html#declaring-a-lint":{"tf":1.0}},"df":1}}}}}}}}},"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{},"df":0,"_":{"docs":{},"df":0,"f":{"docs":{},"df":0,"a":{"docs":{},"df":0,"i":{"docs":{},"df":0,"l":{"docs":{},"df":0,"u":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"_":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{},"df":0,"u":{"docs":{"compiletest.html#implementing-the-behavior-change":{"tf":1.0}},"df":1,"s":{"docs":{},"df":0,"(":{"docs":{},"df":0,"&":{"docs":{},"df":0,"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"l":{"docs":{},"df":0,"f":{"docs":{"compiletest.html#implementing-the-behavior-change":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"df":0,"=":{"docs":{},"df":0,"o":{"docs":{},"df":0,"f":{"docs":{},"df":0,"f":{"docs":{"tests/adding.html#header-commands-configuring-rustc":{"tf":1.0}},"df":1}}}}},"e":{"docs":{},"df":0,"d":{"docs":{},"df":0,"s":{"docs":{},"df":0,"u":{"docs":{},"df":0,"b":{"docs":{},"df":0,"(":{"docs":{},"df":0,"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{"miri.html#miri":{"tf":1.0}},"df":1}}}}}}}}}},"r":{"docs":{"mir/borrowck.html#mir-borrow-check":{"tf":2.0},"type-inference.html#extracting-region-constraints":{"tf":1.0},"compiler-debugging.html#formatting-graphviz-output-dot-files":{"tf":1.0},"high-level-overview.html#the-main-stages-of-compilation":{"tf":1.0},"appendix/glossary.html#appendix-c-glossary":{"tf":1.4142135623730952},"appendix/background.html#what-is-co--and-contra-variance":{"tf":1.0},"traits/canonical-queries.html#canonical-queries":{"tf":1.0},"mir/index.html#the-mir-mid-level-ir":{"tf":1.0},"traits/index.html#trait-solving-new-style":{"tf":1.0},"traits/canonical-queries.html#examples":{"tf":2.0},"mir/regionck.html#mir-based-region-checking-nll":{"tf":1.7320508075688773},"mir/regionck.html#what-is-a-universe":{"tf":1.4142135623730952},"mir/borrowck.html#major-phases-of-the-borrow-checker":{"tf":2.449489742783178}},"df":13}}}}},"a":{"docs":{},"df":0,"r":{"docs":{"traits/resolution.html#confirmation":{"tf":1.7320508075688773}},"df":1,"t":{"docs":{"appendix/background.html#what-is-a-control-flow-graph":{"tf":1.0}},"df":1},"g":{"docs":{"the-parser.html#the-parser":{"tf":1.0}},"df":1},"a":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{"appendix/code-index.html#appendix-d-code-index":{"tf":1.0},"macro-expansion.html#example":{"tf":1.4142135623730952},"the-parser.html#the-parser":{"tf":1.0},"conventions.html#line-length":{"tf":1.0}},"df":4,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{"mir/index.html#introduction-to-mir":{"tf":1.0}},"df":1}}}}}}}}},"p":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"appendix/background.html#what-is-co--and-contra-variance":{"tf":1.4142135623730952},"traits/index.html#trait-solving-new-style":{"tf":2.0},"about-this-guide.html#about-this-guide":{"tf":1.0},"traits/lowering-rules.html#associated-type-declarations":{"tf":1.0},"traits/lowering-rules.html#notation":{"tf":1.0},"mir/index.html#key-mir-vocabulary":{"tf":1.0},"appendix/glossary.html#appendix-c-glossary":{"tf":3.0},"traits/wf.html#well-formedness-checking":{"tf":1.0},"variance.html#variance-of-type-and-lifetime-parameters":{"tf":1.0},"hir.html#the-hir":{"tf":1.0},"macro-expansion.html#macro-expansion":{"tf":1.0},"diag.html#emitting-diagnostics":{"tf":1.0},"rustdoc.html#the-walking-tour-of-rustdoc":{"tf":1.4142135623730952},"appendix/code-index.html#appendix-d-code-index":{"tf":1.0},"type-inference.html#creating-an-inference-context":{"tf":1.4142135623730952},"macro-expansion.html#example":{"tf":1.7320508075688773},"type-inference.html#enforcing-equality--subtyping":{"tf":1.0},"traits/goals-and-clauses.html#goals-and-clauses":{"tf":1.0},"conventions.html#formatting-and-the-tidy-script":{"tf":1.0},"traits/resolution.html#trait-resolution-old-style":{"tf":1.7320508075688773},"compiletest.html#introduction":{"tf":1.0},"traits/canonicalization.html#canonicalization":{"tf":1.0},"traits/goals-and-clauses.html#incomplete-chapter":{"tf":1.4142135623730952}},"df":23}}}},"n":{"docs":{},"df":0,"c":{"docs":{"conventions.html#prefer-exhaustive-matches":{"tf":1.0},"hir.html#out-of-band-storage-and-the--crate--type":{"tf":1.0},"mir/passes.html#implementing-and-registering-a-pass":{"tf":1.0}},"df":3},"g":{"docs":{"compiletest.html#implementing-the-behavior-change":{"tf":2.449489742783178},"diag.html#edition-gated-lints":{"tf":1.0},"appendix/stupid-stats.html#what-next":{"tf":1.0},"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.0},"variance.html#variance-and-associated-types":{"tf":1.0},"appendix/glossary.html#appendix-c-glossary":{"tf":1.7320508075688773},"hir.html#identifiers-in-the-hir":{"tf":1.0},"high-level-overview.html#crate-structure":{"tf":1.4142135623730952},"query.html#adding-a-new-kind-of-query":{"tf":1.0},"how-to-build-and-run.html#running-xpy-and-building-a-stage1-compiler":{"tf":1.0},"appendix/stupid-stats.html#compilercalls":{"tf":1.0},"method-lookup.html#candidate-assembly":{"tf":1.0},"name-resolution.html#scopes-and-ribs":{"tf":1.4142135623730952},"high-level-overview.html#the-main-stages-of-compilation":{"tf":1.0},"traits/associated-types.html#associated-type-projection-and-normalization":{"tf":1.0},"tests/running.html#running-tests":{"tf":1.0},"variance.html#dependency-graph-management":{"tf":1.4142135623730952},"appendix/stupid-stats.html#appendix-a-a-tutorial-on-creating-a-drop-in-replacement-for-rustc":{"tf":1.0},"traits/hrtb.html#basic-matching-and-skolemization-leaks":{"tf":1.0},"incremental-compilation.html#the-query-dag":{"tf":1.0},"incrcomp-debugging.html#dumping-the-graph":{"tf":1.0},"about-this-guide.html#about-this-guide":{"tf":1.0},"tests/adding.html#editing-and-updating-the-reference-files":{"tf":1.0},"incremental-compilation.html#the-try-mark-green-algorithm":{"tf":1.0},"appendix/stupid-stats.html#compilercontroller":{"tf":1.4142135623730952},"type-inference.html#snapshots":{"tf":1.7320508075688773},"mir/visitor.html#mir-visitor":{"tf":1.0},"compiler-debugging.html#getting-logging-output":{"tf":1.0},"conventions.html#how-to-structure-your-pr":{"tf":1.4142135623730952},"mir/index.html#key-mir-vocabulary":{"tf":1.0},"how-to-build-and-run.html#create-a-configtoml":{"tf":1.0},"mir/passes.html#seeing-how-the-mir-changes-as-the-compiler-executes":{"tf":1.4142135623730952},"miri.html#allocations":{"tf":1.0},"incremental-compilation.html#improvements-to-the-basic-algorithm":{"tf":1.0},"incremental-compilation.html#the-basic-algorithm":{"tf":1.4142135623730952}},"df":35}},"o":{"docs":{},"df":0,"t":{"docs":{},"df":0,"i":{"docs":{},"df":0,"c":{"docs":{"conventions.html#formatting-and-the-tidy-script":{"tf":1.0}},"df":1}}}},"l":{"docs":{},"df":0,"k":{"docs":{"type-inference.html#inference-variables":{"tf":1.0},"traits/lowering-module.html#the--program_clauses_for--query":{"tf":1.0},"traits/specialization.html#specialization":{"tf":1.0},"traits/chalk-overview.html#resources":{"tf":1.4142135623730952},"traits/chalk-overview.html#blog-posts":{"tf":2.449489742783178},"traits/chalk-overview.html#intermediate-representation-ir":{"tf":1.0},"traits/lowering-rules.html#lowering-function-and-constant-declarations":{"tf":1.0},"traits/lowering-rules.html#transforming-the-lowered-where-clauses":{"tf":1.0},"traits/chalk-overview.html#an-overview-of-chalk":{"tf":2.0},"traits/lowering-rules.html#function-and-constant-values":{"tf":1.0},"traits/chalk-overview.html#parsing":{"tf":2.0}},"df":11,"'":{"docs":{"traits/chalk-overview.html#testing":{"tf":1.0}},"df":1}}}},"u":{"docs":{},"df":0,"n":{"docs":{},"df":0,"k":{"docs":{"query.html#queries-demand-driven-compilation":{"tf":1.0}},"df":1}},"r":{"docs":{},"df":0,"n":{"docs":{"rustdoc.html#the-walking-tour-of-rustdoc":{"tf":1.0}},"df":1}}},"o":{"docs":{},"df":0,"o":{"docs":{},"df":0,"s":{"docs":{"diag.html#declaring-a-lint":{"tf":1.0},"traits/resolution.html#major-concepts":{"tf":1.0},"appendix/stupid-stats.html#compilercalls":{"tf":1.0},"ty.html#import-conventions":{"tf":1.0},"traits/resolution.html#selection-during-translation":{"tf":1.0}},"df":5}},"i":{"docs":{},"df":0,"c":{"docs":{"tests/running.html#running-a-subset-of-the-test-suites":{"tf":1.0}},"df":1}},"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{"traits/resolution.html#confirmation":{"tf":1.0}},"df":1}}}},"i":{"docs":{},"df":0,"l":{"docs":{},"df":0,"d":{"docs":{"mir/regionck.html#what-is-a-universe":{"tf":2.449489742783178},"rustdoc.html#from-clean-to-crate":{"tf":1.0},"rustdoc.html#hot-potato":{"tf":1.0}},"df":3,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{"mir/regionck.html#what-is-a-universe":{"tf":1.0}},"df":1}}}}}}},"o":{"docs":{"hir.html#identifiers-in-the-hir":{"tf":1.0},"appendix/background.html#what-is-co--and-contra-variance":{"tf":1.4142135623730952},"traits/goals-and-clauses.html#coinductive-goals":{"tf":2.23606797749979}},"df":3,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"c":{"docs":{},"df":0,"i":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{"method-lookup.html#method-lookup":{"tf":1.0}},"df":1}}}}}},"m":{"docs":{},"df":0,"p":{"docs":{},"df":0,"i":{"docs":{},"df":0,"l":{"docs":{"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":3.0},"query.html#cycles-between-queries":{"tf":2.23606797749979},"tests/running.html#running-tests":{"tf":1.4142135623730952},"hir.html#out-of-band-storage-and-the--crate--type":{"tf":1.7320508075688773},"type-checking.html#type-collection":{"tf":1.4142135623730952},"tests/adding.html#naming-your-test":{"tf":1.0},"traits/resolution.html#candidate-assembly":{"tf":1.0},"appendix/stupid-stats.html#compilercalls":{"tf":2.23606797749979},"tests/adding.html#other-header-commands":{"tf":3.0},"mir/index.html#key-mir-vocabulary":{"tf":1.0},"tests/adding.html#error-annotations":{"tf":1.4142135623730952},"how-to-build-and-run.html#create-a-configtoml":{"tf":1.0},"query.html#how-the-compiler-executes-a-query":{"tf":2.6457513110645909},"compiletest.html#adding-a-new-test-file":{"tf":1.0},"incremental-compilation.html#improvements-to-the-basic-algorithm":{"tf":1.4142135623730952},"compiletest.html#implementing-the-behavior-change":{"tf":1.0},"rustdoc.html#from-crate-to-clean":{"tf":1.0},"appendix/stupid-stats.html#what-next":{"tf":1.0},"compiler-debugging.html#getting-a-backtrace":{"tf":1.4142135623730952},"the-parser.html#the-parser":{"tf":1.0},"diag.html#suggestions":{"tf":1.0},"hir.html#identifiers-in-the-hir":{"tf":1.0},"incrcomp-debugging.html#tracking-down-incorrect-edges":{"tf":1.4142135623730952},"appendix/stupid-stats.html#compilercontroller":{"tf":2.6457513110645909},"tests/adding.html#adding-new-tests":{"tf":1.4142135623730952},"miri.html#interpretation":{"tf":1.0},"name-resolution.html#name-resolution":{"tf":1.4142135623730952},"how-to-build-and-run.html#running-xpy-and-building-a-stage1-compiler":{"tf":5.744562646538029},"traits/chalk-overview.html#parsing":{"tf":1.0},"miri.html#miri":{"tf":1.7320508075688773},"mir/passes.html#seeing-how-the-mir-changes-as-the-compiler-executes":{"tf":2.0},"traits/caching.html#where-clauses-and-the-local-vs-global-cache":{"tf":1.0},"about-this-guide.html#about-this-guide":{"tf":1.0},"compiletest.html#header-commands":{"tf":1.4142135623730952},"tests/running.html#running-an-individual-test":{"tf":1.4142135623730952},"tests/adding.html#header-commands-configuring-rustc":{"tf":2.0},"tests/running.html#running-a-subset-of-the-test-suites":{"tf":1.7320508075688773},"incrcomp-debugging.html#testing-the-dependency-graph":{"tf":1.4142135623730952},"tests/adding.html#ignoring-tests":{"tf":1.7320508075688773},"appendix/stupid-stats.html#appendix-a-a-tutorial-on-creating-a-drop-in-replacement-for-rustc":{"tf":3.4641016151377546},"high-level-overview.html#crate-structure":{"tf":3.0},"incremental-compilation.html#the-try-mark-green-algorithm":{"tf":2.449489742783178},"incrcomp-debugging.html#dumping-the-graph":{"tf":1.7320508075688773},"rustdoc.html#from-soup-to-nuts":{"tf":1.7320508075688773},"query.html#adding-a-new-kind-of-query":{"tf":1.0},"tests/adding.html#tests-that-do-not-result-in-compile-errors":{"tf":2.8284271247461905},"macro-expansion.html#example":{"tf":1.4142135623730952},"appendix/background.html#what-is-a-control-flow-graph":{"tf":1.7320508075688773},"compiler-debugging.html#debugging-the-compiler":{"tf":2.0},"diag.html#declaring-a-lint":{"tf":1.7320508075688773},"how-to-build-and-run.html#how-to-build-the-compiler-and-run-what-you-built":{"tf":2.23606797749979},"tests/adding.html#comment-explaining-what-the-test-is-about":{"tf":1.0},"const-eval.html#constant-evaluation":{"tf":1.0},"compiler-debugging.html#formatting-graphviz-output-dot-files":{"tf":1.0},"macro-expansion.html#the-macro-parser":{"tf":1.4142135623730952},"name-resolution.html#todo":{"tf":1.0},"query.html#queries-demand-driven-compilation":{"tf":3.3166247903554},"incremental-compilation.html#incremental-compilation":{"tf":2.0},"ty.html#the--ty--module-representing-types":{"tf":1.4142135623730952},"mir/regionck.html#what-is-a-universe":{"tf":1.4142135623730952},"diag.html#span":{"tf":1.0},"compiletest.html#introduction":{"tf":2.8284271247461905},"diag.html#lints":{"tf":1.0},"rustdoc.html#the-walking-tour-of-rustdoc":{"tf":1.7320508075688773},"appendix/stupid-stats.html#the-driver-customisation-apis":{"tf":1.7320508075688773},"tests/adding.html#revisions":{"tf":2.0},"hir.html#the-hir":{"tf":1.0},"appendix/glossary.html#appendix-c-glossary":{"tf":4.123105625617661},"name-resolution.html#namespaces":{"tf":1.0},"compiler-debugging.html#getting-logging-output":{"tf":2.8284271247461905},"incremental-compilation.html#the-basic-algorithm":{"tf":2.8284271247461905},"appendix/code-index.html#appendix-d-code-index":{"tf":2.6457513110645909},"appendix/stupid-stats.html#overview-of-the-compilation-process":{"tf":3.605551275463989},"tests/adding.html#normalization":{"tf":1.4142135623730952},"how-to-build-and-run.html#creating-a-rustup-toolchain":{"tf":1.4142135623730952},"compiletest.html#adding-a-new-header-command":{"tf":2.0},"tests/adding.html#what-kind-of-test-should-i-add":{"tf":1.4142135623730952},"mir/index.html#the-mir-mid-level-ir":{"tf":1.0},"tests/intro.html#compiletest-test-suites":{"tf":2.8284271247461905},"incrcomp-debugging.html#debugging-and-testing-dependencies":{"tf":1.0},"high-level-overview.html#high-level-overview-of-the-compiler-source":{"tf":1.4142135623730952},"compiler-debugging.html#debugging-llvm":{"tf":2.23606797749979},"traits/hrtb.html#basic-matching-and-skolemization-leaks":{"tf":1.0},"traits/lowering-module.html#unit-tests":{"tf":1.4142135623730952},"appendix/background.html#appendix-b-background-topics":{"tf":1.0},"variance.html#variance-of-type-and-lifetime-parameters":{"tf":1.0},"ty.html#the-tcx-and-how-it-uses-lifetimes":{"tf":2.0},"compiler-debugging.html#getting-a-backtrace-for-errors":{"tf":2.0},"incremental-compilation.html#the-query-dag":{"tf":2.0},"rustc-driver.html#the-rustc-driver":{"tf":3.0},"mir/passes.html#stealing":{"tf":1.0},"ty.html#allocating-and-working-with-types":{"tf":1.0},"tests/adding.html#editing-and-updating-the-reference-files":{"tf":1.0},"high-level-overview.html#the-main-stages-of-compilation":{"tf":2.8284271247461905},"rustc-driver.html#a-note-on-lifetimes":{"tf":2.6457513110645909},"name-resolution.html#scopes-and-ribs":{"tf":1.0},"how-to-build-and-run.html#other-xpy-commands":{"tf":1.4142135623730952},"incrcomp-debugging.html#debugging-the-dependency-graph":{"tf":1.0},"rustdoc.html#other-tricks-up-its-sleeve":{"tf":1.0},"tests/adding.html#guide-to-the-ui-tests":{"tf":1.4142135623730952},"diag.html#emitting-diagnostics":{"tf":1.4142135623730952},"compiletest.html#compiletest":{"tf":1.0},"incremental-compilation.html#footnotes":{"tf":1.0},"tests/intro.html#the-compiler-testing-framework":{"tf":1.7320508075688773}},"df":104,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{},"df":0,"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"l":{"docs":{"rustc-driver.html#the-rustc-driver":{"tf":1.4142135623730952},"appendix/stupid-stats.html#compilercalls":{"tf":1.0},"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.0},"appendix/stupid-stats.html#the-driver-customisation-apis":{"tf":1.0}},"df":4}}}}}}},"_":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"p":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{"appendix/stupid-stats.html#overview-of-the-compilation-process":{"tf":1.0}},"df":1}}}}}},"r":{"docs":{},"df":0,"'":{"docs":{"tests/adding.html#guide-to-the-ui-tests":{"tf":1.0},"appendix/stupid-stats.html#appendix-a-a-tutorial-on-creating-a-drop-in-replacement-for-rustc":{"tf":1.0},"tests/adding.html#editing-and-updating-the-reference-files":{"tf":1.0}},"df":3},"c":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{"rustc-driver.html#the-rustc-driver":{"tf":1.4142135623730952},"appendix/stupid-stats.html#the-driver-customisation-apis":{"tf":1.0},"appendix/stupid-stats.html#compilercalls":{"tf":1.7320508075688773},"rustc-driver.html#a-note-on-lifetimes":{"tf":1.0},"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.4142135623730952}},"df":5,"l":{"docs":{},"df":0,"s":{"docs":{},"df":0,"<":{"docs":{},"df":0,"'":{"docs":{},"df":0,"a":{"docs":{"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.0}},"df":1}}}}}}},"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{},"df":0,"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"l":{"docs":{"appendix/stupid-stats.html#compilercontroller":{"tf":1.7320508075688773},"appendix/stupid-stats.html#what-next":{"tf":1.0}},"df":2,"l":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"a":{"docs":{},"df":0,"f":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"_":{"docs":{},"df":0,"p":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"s":{"docs":{"appendix/stupid-stats.html#compilercontroller":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"df":0,"t":{"docs":{"appendix/stupid-stats.html#compilercontroller":{"tf":1.0},"rustc-driver.html#the-rustc-driver":{"tf":1.0},"appendix/code-index.html#appendix-d-code-index":{"tf":1.0},"rustc-driver.html#a-note-on-lifetimes":{"tf":1.0}},"df":4}},"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{"rustdoc.html#dotting-is-and-crossing-ts":{"tf":1.0},"compiletest.html#compiletest":{"tf":1.4142135623730952},"compiletest.html#introduction":{"tf":1.7320508075688773},"compiletest.html#adding-a-new-test-file":{"tf":1.0},"compiletest.html#implementing-the-behavior-change":{"tf":1.0},"compiletest.html#adding-a-new-header-command":{"tf":1.4142135623730952},"tests/adding.html#other-header-commands":{"tf":1.4142135623730952},"compiletest.html#header-commands":{"tf":1.0},"tests/intro.html#the-compiler-testing-framework":{"tf":1.0},"tests/intro.html#compiletest-test-suites":{"tf":1.7320508075688773}},"df":10}}},"i":{"docs":{},"df":0,"m":{"docs":{"const-eval.html#constant-evaluation":{"tf":1.0}},"df":1}}}},"a":{"docs":{},"df":0,"t":{"docs":{},"df":0,"i":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"o":{"docs":{},"df":0,"p":{"docs":{"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.0}},"df":1}}}},"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"u":{"docs":{"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.4142135623730952}},"df":1}}}}}}}}}}}}}}}},"a":{"docs":{},"df":0,"r":{"docs":{"tests/adding.html#guide-to-the-ui-tests":{"tf":1.0},"ty.html#allocating-and-working-with-types":{"tf":1.0},"incremental-compilation.html#the-try-mark-green-algorithm":{"tf":1.4142135623730952},"traits/canonical-queries.html#examples":{"tf":1.0},"incremental-compilation.html#improvements-to-the-basic-algorithm":{"tf":1.0},"variance.html#variance-and-object-types":{"tf":1.0},"compiletest.html#adding-a-new-header-command":{"tf":1.0},"traits/specialization.html#specialization":{"tf":1.0}},"df":8},"t":{"docs":{"variance.html#addendum-variance-on-traits":{"tf":1.0}},"df":1}},"o":{"docs":{},"df":0,"n":{"docs":{"rustdoc.html#from-clean-to-crate":{"tf":1.0}},"df":1},"s":{"docs":{"appendix/glossary.html#appendix-c-glossary":{"tf":1.0},"the-parser.html#the-parser":{"tf":1.0}},"df":2}},"l":{"docs":{},"df":0,"e":{"docs":{},"df":0,"t":{"docs":{"traits/resolution.html#selection-during-translation":{"tf":1.0},"traits/index.html#trait-solving-new-style":{"tf":1.4142135623730952},"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.4142135623730952},"hir.html#identifiers-in-the-hir":{"tf":1.0},"ty.html#the-tcx-and-how-it-uses-lifetimes":{"tf":1.0},"mir/regionck.html#back-to-our-example":{"tf":1.0},"compiletest.html#adding-a-new-test-file":{"tf":1.0},"rustdoc.html#cheat-sheet":{"tf":1.0},"variance.html#variance-and-associated-types":{"tf":1.0},"appendix/glossary.html#appendix-c-glossary":{"tf":2.23606797749979},"traits/goals-and-clauses.html#coinductive-goals":{"tf":1.0},"traits/lowering-rules.html#lowering-rules":{"tf":1.0},"method-lookup.html#candidate-assembly":{"tf":1.0},"tests/adding.html#guide-to-the-ui-tests":{"tf":1.0},"traits/chalk-overview.html#parsing":{"tf":1.0},"traits/chalk-overview.html#intermediate-representation-ir":{"tf":1.0},"high-level-overview.html#the-main-stages-of-compilation":{"tf":1.4142135623730952},"rustdoc.html#dotting-is-and-crossing-ts":{"tf":1.0},"traits/resolution.html#overview":{"tf":1.0}},"df":19},"x":{"docs":{"method-lookup.html#method-lookup":{"tf":1.0},"const-eval.html#constant-evaluation":{"tf":1.0},"traits/lowering-to-logic.html#type-checking-normal-functions":{"tf":1.0},"appendix/stupid-stats.html#appendix-a-a-tutorial-on-creating-a-drop-in-replacement-for-rustc":{"tf":1.4142135623730952},"appendix/stupid-stats.html#overview-of-the-compilation-process":{"tf":1.0},"macro-expansion.html#example":{"tf":1.0},"ty.html#the-tcx-and-how-it-uses-lifetimes":{"tf":1.0},"mir/borrowck.html#mir-borrow-check":{"tf":1.0},"traits/caching.html#caching-and-subtle-considerations-therewith":{"tf":1.0}},"df":9}},"i":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{"rustdoc.html#hot-potato":{"tf":1.0}},"df":1}}},"c":{"docs":{"variance.html#addendum-variance-on-traits":{"tf":1.0}},"df":1}}},"u":{"docs":{},"df":0,"t":{"docs":{"traits/hrtb.html#higher-ranked-trait-obligations":{"tf":1.0},"traits/canonicalization.html#executing-the-query":{"tf":1.0},"mir/regionck.html#extending-the-universal-regions-check":{"tf":1.0},"variance.html#dependency-graph-management":{"tf":1.0},"appendix/glossary.html#appendix-c-glossary":{"tf":1.4142135623730952},"macro-expansion.html#example":{"tf":1.0},"query.html#queries-demand-driven-compilation":{"tf":2.23606797749979},"variance.html#trait-variance-and-vtable-resolution":{"tf":1.0},"mir/regionck.html#skolemization-and-outlives-constraints":{"tf":1.0},"query.html#how-the-compiler-executes-a-query":{"tf":1.0},"type-checking.html#type-collection":{"tf":1.0},"variance.html#addendum-variance-on-traits":{"tf":1.0},"mir/borrowck.html#major-phases-of-the-borrow-checker":{"tf":2.0},"mir/regionck.html#mir-based-region-checking-nll":{"tf":1.0},"name-resolution.html#todo":{"tf":1.0},"const-eval.html#constant-evaluation":{"tf":1.4142135623730952},"incremental-compilation.html#improvements-to-the-basic-algorithm":{"tf":2.0},"incremental-compilation.html#the-basic-algorithm":{"tf":1.4142135623730952},"variance.html#variance-of-type-and-lifetime-parameters":{"tf":1.0},"miri.html#miri":{"tf":1.0}},"df":20,"e":{"docs":{},"df":0,"_":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"g":{"docs":{},"df":0,"i":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{"mir/regionck.html#mir-based-region-checking-nll":{"tf":1.0}},"df":1}}}}}},"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"g":{"docs":{},"df":0,"_":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.0}},"df":1}}}}}}}}}}}}},"b":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{"rustdoc.html#hot-potato":{"tf":1.4142135623730952},"hir.html#identifiers-in-the-hir":{"tf":1.0},"appendix/glossary.html#appendix-c-glossary":{"tf":1.0},"rustdoc.html#other-tricks-up-its-sleeve":{"tf":1.0},"mir/passes.html#seeing-how-the-mir-changes-as-the-compiler-executes":{"tf":1.0},"variance.html#variance-of-type-and-lifetime-parameters":{"tf":1.0}},"df":6}}},"e":{"docs":{"traits/caching.html#an-example":{"tf":1.4142135623730952},"diag.html#span":{"tf":1.0},"incremental-compilation.html#the-query-dag":{"tf":1.0},"mir/regionck.html#universes-and-skolemized-region-elements":{"tf":1.0},"appendix/stupid-stats.html#overview-of-the-compilation-process":{"tf":1.0},"rustdoc.html#from-clean-to-crate":{"tf":1.0},"traits/associated-types.html#skolemized-associated-types":{"tf":1.0},"tests/adding.html#adding-new-tests":{"tf":1.0},"traits/canonical-queries.html#a-trait-query-in-rustc":{"tf":1.0},"mir/borrowck.html#major-phases-of-the-borrow-checker":{"tf":1.0},"compiler-debugging.html#getting-a-backtrace-for-errors":{"tf":1.0},"macro-expansion.html#the-macro-parser":{"tf":1.7320508075688773},"traits/lowering-to-logic.html#type-checking-normal-functions":{"tf":1.0},"type-inference.html#inference-variables":{"tf":1.0},"traits/chalk-overview.html#rules":{"tf":1.0},"name-resolution.html#todo":{"tf":1.0},"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.0},"rustdoc.html#from-soup-to-nuts":{"tf":1.0},"mir/regionck.html#mir-based-region-checking-nll":{"tf":1.0}},"df":19},"m":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{"compiler-debugging.html#logging-etiquette":{"tf":1.0},"conventions.html#use-todo-comments-for-things-you-dont-want-to-forget":{"tf":1.7320508075688773},"conventions.html#how-to-structure-your-pr":{"tf":3.605551275463989},"how-to-build-and-run.html#creating-a-rustup-toolchain":{"tf":1.4142135623730952}},"df":4,"_":{"docs":{},"df":0,"i":{"docs":{},"df":0,"f":{"docs":{},"df":0,"_":{"docs":{},"df":0,"o":{"docs":{},"df":0,"k":{"docs":{"type-inference.html#snapshots":{"tf":1.0}},"df":1}}}}}}}},"u":{"docs":{},"df":0,"n":{"docs":{"mir/regionck.html#what-is-a-universe":{"tf":1.0},"tests/intro.html#testing-on-emulators":{"tf":1.0}},"df":2}},"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{"rustdoc.html#dotting-is-and-crossing-ts":{"tf":1.0},"tests/running.html#running-tests":{"tf":1.4142135623730952},"appendix/stupid-stats.html#the-driver-customisation-apis":{"tf":1.0},"rustc-driver.html#the-rustc-driver":{"tf":1.0},"tests/adding.html#adding-new-tests":{"tf":1.0},"tests/adding.html#tests-that-do-not-result-in-compile-errors":{"tf":1.0},"compiletest.html#header-commands":{"tf":2.449489742783178},"tests/running.html#running-an-individual-test":{"tf":1.0},"how-to-build-and-run.html#running-xpy-and-building-a-stage1-compiler":{"tf":1.4142135623730952},"appendix/stupid-stats.html#appendix-a-a-tutorial-on-creating-a-drop-in-replacement-for-rustc":{"tf":1.0},"tests/adding.html#header-commands-configuring-rustc":{"tf":2.0},"how-to-build-and-run.html#other-xpy-commands":{"tf":1.7320508075688773},"appendix/stupid-stats.html#compilercalls":{"tf":1.7320508075688773},"tests/adding.html#normalization":{"tf":1.0},"tests/adding.html#other-header-commands":{"tf":2.23606797749979},"conventions.html#how-to-structure-your-pr":{"tf":1.0},"compiletest.html#implementing-the-behavior-change":{"tf":2.6457513110645909},"appendix/stupid-stats.html#overview-of-the-compilation-process":{"tf":1.0},"rustdoc.html#cheat-sheet":{"tf":1.0},"compiletest.html#adding-a-new-header-command":{"tf":4.242640687119285},"compiler-debugging.html#formatting-graphviz-output-dot-files":{"tf":1.0},"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.4142135623730952}},"df":22,"'":{"docs":{"compiletest.html#adding-a-new-header-command":{"tf":1.4142135623730952}},"df":1},":":{"docs":{},"df":0,"p":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"m":{"docs":{},"df":0,"e":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"(":{"docs":{"compiletest.html#adding-a-new-header-command":{"tf":1.0}},"df":1}}}}}}}}}}}}}},"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{"appendix/stupid-stats.html#compilercalls":{"tf":1.0},"traits/canonical-queries.html#examples":{"tf":1.0},"compiletest.html#adding-a-new-header-command":{"tf":1.7320508075688773},"conventions.html#line-length":{"tf":1.0},"compiletest.html#introduction":{"tf":1.0},"tests/adding.html#header-commands-configuring-rustc":{"tf":1.4142135623730952},"tests/adding.html#comment-explaining-what-the-test-is-about":{"tf":2.23606797749979},"tests/adding.html#error-annotations":{"tf":1.0},"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.0},"rustdoc.html#from-crate-to-clean":{"tf":1.0},"macro-expansion.html#the-macro-parser":{"tf":1.0},"conventions.html#use-todo-comments-for-things-you-dont-want-to-forget":{"tf":2.0},"mir/index.html#key-mir-vocabulary":{"tf":1.4142135623730952},"compiletest.html#header-commands":{"tf":1.0},"traits/lowering-rules.html#rule-names-and-cross-references":{"tf":1.0},"appendix/stupid-stats.html#what-next":{"tf":1.0},"tests/adding.html#adding-new-tests":{"tf":1.4142135623730952},"tests/adding.html#revisions":{"tf":1.0},"rustdoc.html#hot-potato":{"tf":1.7320508075688773}},"df":19}}},"o":{"docs":{},"df":0,"n":{"docs":{"tests/running.html#running-an-individual-test":{"tf":1.0},"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":2.0},"high-level-overview.html#crate-structure":{"tf":1.0},"mir/regionck.html#what-is-a-universe":{"tf":1.0},"hir.html#identifiers-in-the-hir":{"tf":1.0},"compiletest.html#adding-a-new-header-command":{"tf":1.0},"appendix/background.html#what-is-a-control-flow-graph":{"tf":1.0},"ty.html#allocating-and-working-with-types":{"tf":1.4142135623730952},"type-inference.html#inference-variables":{"tf":1.0},"appendix/background.html#appendix-b-background-topics":{"tf":1.0},"ty.html#import-conventions":{"tf":1.0},"mir/regionck.html#another-example":{"tf":1.0}},"df":12,"l":{"docs":{},"df":0,"i":{"docs":{"appendix/glossary.html#appendix-c-glossary":{"tf":1.0},"traits/resolution.html#selection":{"tf":1.0}},"df":2}},"m":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"k":{"docs":{"rustdoc.html#hot-potato":{"tf":1.0}},"df":1}}}},"t":{"docs":{},"df":0,"y":{"docs":{},"df":0,"p":{"docs":{"ty.html#allocating-and-working-with-types":{"tf":1.0}},"df":1}}},"_":{"docs":{},"df":0,"p":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"c":{"docs":{"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.4142135623730952}},"df":1}}}}}}}}},"h":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"traits/chalk-overview.html#well-formedness-checks":{"tf":1.0},"traits/resolution.html#overview":{"tf":1.4142135623730952},"traits/specialization.html#specialization":{"tf":1.4142135623730952}},"df":3}}},"u":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.4142135623730952}},"df":1,"e":{"docs":{},"df":0,"r":{"docs":{"mir/regionck.html#what-is-a-universe":{"tf":1.4142135623730952},"mir/regionck.html#universes-and-skolemized-region-elements":{"tf":1.0}},"df":2,"p":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"t":{"docs":{"compiletest.html#header-commands":{"tf":1.0}},"df":1}}}}}}}},"p":{"docs":{},"df":0,"l":{"docs":{"rustdoc.html#other-tricks-up-its-sleeve":{"tf":1.0}},"df":1}},"r":{"docs":{},"df":0,"s":{"docs":{"traits/canonical-queries.html#canonical-queries":{"tf":1.0},"traits/lowering-to-logic.html#type-checking-normal-functions":{"tf":1.0},"mir/regionck.html#mir-based-region-checking-nll":{"tf":1.4142135623730952},"tests/running.html#running-a-subset-of-the-test-suites":{"tf":1.0},"traits/specialization.html#specialization":{"tf":1.0},"type-checking.html#type-collection":{"tf":1.0},"high-level-overview.html#crate-structure":{"tf":1.0},"tests/adding.html#editing-and-updating-the-reference-files":{"tf":1.0},"about-this-guide.html#about-this-guide":{"tf":1.0}},"df":9}}},"s":{"docs":{},"df":0,"t":{"docs":{"how-to-build-and-run.html#create-a-configtoml":{"tf":1.0}},"df":1}},"d":{"docs":{},"df":0,"e":{"docs":{"mir/regionck.html#back-to-our-example":{"tf":1.0},"diag.html#error-messages":{"tf":1.0},"diag.html#declaring-a-lint":{"tf":1.0},"hir.html#hir-bodies":{"tf":1.0},"name-resolution.html#namespaces":{"tf":1.4142135623730952},"compiletest.html#header-commands":{"tf":1.4142135623730952},"name-resolution.html#overall-strategy":{"tf":1.0},"rustdoc.html#other-tricks-up-its-sleeve":{"tf":1.0},"miri.html#miri":{"tf":1.0},"the-parser.html#the-parser":{"tf":1.7320508075688773},"name-resolution.html#scopes-and-ribs":{"tf":1.0},"mir/passes.html#implementing-and-registering-a-pass":{"tf":1.0},"mir/visitor.html#mir-visitor":{"tf":1.0},"mir/regionck.html#representing-the-values-of-a-region-variable":{"tf":1.0},"macro-expansion.html#macro-expansion":{"tf":1.4142135623730952},"mir/regionck.html#skolemization-and-outlives-constraints":{"tf":1.0},"mir/regionck.html#mir-based-region-checking-nll":{"tf":1.0},"how-to-build-and-run.html#running-xpy-and-building-a-stage1-compiler":{"tf":1.0},"appendix/stupid-stats.html#compilercontroller":{"tf":1.0},"macro-expansion.html#example":{"tf":1.4142135623730952},"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.0},"variance.html#variance-and-object-types":{"tf":1.0},"macro-expansion.html#the-macro-parser":{"tf":1.0},"traits/chalk-overview.html#an-overview-of-chalk":{"tf":1.4142135623730952},"query.html#how-the-compiler-executes-a-query":{"tf":1.0},"name-resolution.html#todo":{"tf":1.0},"rustdoc.html#from-clean-to-crate":{"tf":2.449489742783178},"appendix/glossary.html#appendix-c-glossary":{"tf":2.0},"traits/chalk-overview.html#lowering":{"tf":1.4142135623730952},"conventions.html#prefer-exhaustive-matches":{"tf":1.0},"traits/chalk-overview.html#intermediate-representation-ir":{"tf":1.0},"high-level-overview.html#crate-structure":{"tf":1.4142135623730952},"rustc-driver.html#the-rustc-driver":{"tf":1.4142135623730952},"appendix/stupid-stats.html#overview-of-the-compilation-process":{"tf":2.6457513110645909},"type-inference.html#region-constraints":{"tf":1.0},"compiletest.html#introduction":{"tf":1.4142135623730952},"query.html#adding-a-new-kind-of-query":{"tf":1.0},"hir.html#identifiers-in-the-hir":{"tf":1.4142135623730952},"hir.html#the-hir":{"tf":1.0},"rustdoc.html#cheat-sheet":{"tf":1.0},"method-lookup.html#method-lookup":{"tf":1.0},"appendix/stupid-stats.html#compilercalls":{"tf":1.0},"appendix/stupid-stats.html#the-driver-customisation-apis":{"tf":1.0},"conventions.html#use-todo-comments-for-things-you-dont-want-to-forget":{"tf":1.0},"high-level-overview.html#the-main-stages-of-compilation":{"tf":1.4142135623730952},"conventions.html#formatting-and-the-tidy-script":{"tf":1.7320508075688773},"mir/borrowck.html#mir-borrow-check":{"tf":1.0},"diag.html#span":{"tf":1.0},"query.html#cycles-between-queries":{"tf":1.0},"ty.html#the-tcx-and-how-it-uses-lifetimes":{"tf":1.4142135623730952},"ty.html#allocating-and-working-with-types":{"tf":1.0},"traits/resolution.html#overview":{"tf":1.0},"compiler-debugging.html#logging-etiquette":{"tf":1.0},"traits/chalk-overview.html#resources":{"tf":1.0},"appendix/code-index.html#appendix-d-code-index":{"tf":2.23606797749979},"miri.html#interpretation":{"tf":1.0},"tests/intro.html#compiletest-test-suites":{"tf":1.4142135623730952},"traits/resolution.html#candidate-assembly":{"tf":1.0},"compiler-debugging.html#expensive-operations-in-logs":{"tf":1.4142135623730952},"conventions.html#coding-for-correctness":{"tf":1.4142135623730952},"variance.html#variance-of-type-and-lifetime-parameters":{"tf":1.0},"traits/canonical-queries.html#examples":{"tf":1.0},"mir/index.html#the-mir-mid-level-ir":{"tf":1.0},"rustdoc.html#dotting-is-and-crossing-ts":{"tf":1.0},"compiletest.html#adding-a-new-header-command":{"tf":1.7320508075688773},"traits/chalk-overview.html#well-formedness-checks":{"tf":1.0},"compiletest.html#implementing-the-behavior-change":{"tf":1.0},"conventions.html#how-to-structure-your-pr":{"tf":1.0},"type-inference.html#extracting-region-constraints":{"tf":1.0},"variance.html#dependency-graph-management":{"tf":1.0},"appendix/stupid-stats.html#appendix-a-a-tutorial-on-creating-a-drop-in-replacement-for-rustc":{"tf":2.0},"mir/index.html#introduction-to-mir":{"tf":1.0},"traits/chalk-overview.html#parsing":{"tf":1.0},"tests/intro.html#other-tests":{"tf":1.7320508075688773},"tests/adding.html#naming-your-test":{"tf":1.4142135623730952},"incremental-compilation.html#the-query-dag":{"tf":1.0},"about-this-guide.html#about-this-guide":{"tf":1.0},"diag.html#suggestions":{"tf":1.0}},"df":78,"g":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{"tests/intro.html#compiletest-test-suites":{"tf":1.0},"query.html#queries-demand-driven-compilation":{"tf":1.4142135623730952},"tests/adding.html#what-kind-of-test-should-i-add":{"tf":1.0},"compiler-debugging.html#debugging-llvm":{"tf":2.23606797749979},"high-level-overview.html#the-main-stages-of-compilation":{"tf":1.0},"how-to-build-and-run.html#create-a-configtoml":{"tf":1.0},"appendix/glossary.html#appendix-c-glossary":{"tf":1.7320508075688773}},"df":7}}},"m":{"docs":{},"df":0,"a":{"docs":{},"df":0,"p":{"docs":{"rustc-driver.html#the-rustc-driver":{"tf":1.0},"appendix/code-index.html#appendix-d-code-index":{"tf":1.4142135623730952},"diag.html#span":{"tf":1.4142135623730952},"the-parser.html#the-parser":{"tf":1.4142135623730952}},"df":4}}},".":{"docs":{},"df":0,"t":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{},"df":0,"m":{"docs":{},"df":0,"(":{"docs":{},"df":0,")":{"docs":{},"df":0,".":{"docs":{},"df":0,"p":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"<":{"docs":{},"df":0,"i":{"docs":{},"df":0,"3":{"docs":{},"df":0,"2":{"docs":{},"df":0,">":{"docs":{},"df":0,"(":{"docs":{},"df":0,")":{"docs":{},"df":0,".":{"docs":{},"df":0,"o":{"docs":{},"df":0,"k":{"docs":{"compiletest.html#adding-a-new-header-command":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{},"df":0,"u":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{"traits/lowering-rules.html#trait-header":{"tf":1.4142135623730952},"traits/goals-and-clauses.html#coinductive-goals":{"tf":1.4142135623730952}},"df":2}}}}}},"l":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{"compiletest.html#adding-a-new-header-command":{"tf":1.0}},"df":1},"r":{"docs":{"incremental-compilation.html#the-try-mark-green-algorithm":{"tf":2.449489742783178},"incremental-compilation.html#the-basic-algorithm":{"tf":2.0},"incremental-compilation.html#improvements-to-the-basic-algorithm":{"tf":1.7320508075688773}},"df":3}},"u":{"docs":{},"df":0,"m":{"docs":{},"df":0,"n":{"docs":{"macro-expansion.html#example":{"tf":1.0}},"df":1}}},"l":{"docs":{},"df":0,"a":{"docs":{},"df":0,"p":{"docs":{},"df":0,"s":{"docs":{"rustdoc.html#hot-potato":{"tf":1.0}},"df":1}}},"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{"traits/associated-types.html#associated-type-projection-and-normalization":{"tf":1.0},"rustdoc.html#from-soup-to-nuts":{"tf":1.4142135623730952},"type-checking.html#type-checking":{"tf":1.0},"rustdoc.html#from-crate-to-clean":{"tf":1.4142135623730952},"rustdoc.html#other-tricks-up-its-sleeve":{"tf":1.0},"traits/resolution.html#candidate-assembly":{"tf":1.0},"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":2.0},"type-checking.html#type-collection":{"tf":2.6457513110645909},"type-inference.html#region-constraints":{"tf":1.0}},"df":9,"&":{"docs":{},"df":0,"b":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{"incrcomp-debugging.html#tracking-down-incorrect-edges":{"tf":1.0}},"df":1}}}},"(":{"docs":{},"df":0,"b":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{"incrcomp-debugging.html#tracking-down-incorrect-edges":{"tf":1.4142135623730952}},"df":1}}}}}}}}},"v":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"hir.html#the-hir":{"tf":1.0},"variance.html#addendum-variance-on-traits":{"tf":1.0},"traits/associated-types.html#equality-and-associated-types":{"tf":1.0},"traits/lowering-rules.html#lowering-traits":{"tf":1.0},"high-level-overview.html#crate-structure":{"tf":1.0},"traits/lowering-to-logic.html#rust-traits-and-logic":{"tf":1.0},"traits/bibliography.html#bibliography":{"tf":1.4142135623730952},"traits/canonical-queries.html#canonical-queries":{"tf":1.0},"appendix/background.html#appendix-b-background-topics":{"tf":1.0},"traits/implied-bounds.html#implied-bounds":{"tf":1.0},"traits/lowering-rules.html#associated-type-declarations":{"tf":1.0},"how-to-build-and-run.html#other-xpy-commands":{"tf":1.0},"conventions.html#formatting-and-the-tidy-script":{"tf":1.0}},"df":13,"a":{"docs":{},"df":0,"g":{"docs":{"mir/regionck.html#mir-based-region-checking-nll":{"tf":1.0}},"df":1}},"f":{"docs":{},"df":0,"l":{"docs":{},"df":0,"o":{"docs":{},"df":0,"w":{"docs":{"tests/adding.html#header-commands-configuring-rustc":{"tf":1.0}},"df":1}}}}}},"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{"variance.html#variance-and-object-types":{"tf":1.0},"variance.html#variance-of-type-and-lifetime-parameters":{"tf":1.0},"variance.html#the-algorithm":{"tf":1.4142135623730952},"variance.html#constraints":{"tf":1.0},"appendix/glossary.html#appendix-c-glossary":{"tf":1.0},"variance.html#trait-variance-and-vtable-resolution":{"tf":1.0}},"df":6}}}},"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"d":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{"tests/intro.html#testing-on-emulators":{"tf":1.0},"appendix/stupid-stats.html#overview-of-the-compilation-process":{"tf":1.7320508075688773},"tests/intro.html#testing-infrastructure":{"tf":1.0}},"df":3}}}},"l":{"docs":{"rustc-driver.html#the-rustc-driver":{"tf":1.0},"compiler-debugging.html#getting-a-backtrace-for-errors":{"tf":1.0}},"df":2}},"r":{"docs":{},"df":0,"e":{"docs":{"miri.html#datastructures":{"tf":1.0},"incremental-compilation.html#the-try-mark-green-algorithm":{"tf":1.0}},"df":2,".":{"docs":{},"df":0,"r":{"docs":{"rustdoc.html#from-crate-to-clean":{"tf":1.0}},"df":1}}},"n":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"traits/chalk-overview.html#an-overview-of-chalk":{"tf":1.0}},"df":1}}},"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"p":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{"mir/regionck.html#universes-and-skolemized-region-elements":{"tf":1.4142135623730952},"macro-expansion.html#the-macro-parser":{"tf":1.4142135623730952},"query.html#adding-a-new-kind-of-query":{"tf":1.0},"traits/lowering-rules.html#rule-names-and-cross-references":{"tf":1.0},"tests/adding.html#normalization":{"tf":1.0},"mir/regionck.html#representing-the-values-of-a-region-variable":{"tf":1.7320508075688773},"type-inference.html#creating-an-inference-context":{"tf":1.0},"the-parser.html#the-parser":{"tf":1.0},"variance.html#the-algorithm":{"tf":1.0}},"df":9}}}}},"p":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{"ty.html#allocating-and-working-with-types":{"tf":1.0}},"df":1}}}},"c":{"docs":{},"df":0,"t":{"docs":{"rustc-driver.html#the-rustc-driver":{"tf":1.0},"variance.html#variance-and-object-types":{"tf":1.0},"about-this-guide.html#about-this-guide":{"tf":1.0},"variance.html#trait-variance-and-vtable-resolution":{"tf":1.0},"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.0},"conventions.html#formatting-and-the-tidy-script":{"tf":1.0},"conventions.html#coding-for-correctness":{"tf":1.4142135623730952}},"df":7,"l":{"docs":{},"df":0,"i":{"docs":{"compiler-debugging.html#debugging-llvm":{"tf":1.0},"tests/running.html#running-a-subset-of-the-test-suites":{"tf":1.0},"tests/intro.html#compiletest-test-suites":{"tf":1.0},"conventions.html#prefer-exhaustive-matches":{"tf":1.0}},"df":4}}}}}}},"n":{"docs":{},"df":0,"c":{"docs":{},"df":0,"l":{"docs":{},"df":0,"u":{"docs":{},"df":0,"s":{"docs":{"traits/caching.html#an-example":{"tf":1.0}},"df":1},"d":{"docs":{"incremental-compilation.html#the-try-mark-green-algorithm":{"tf":1.0}},"df":1}}},"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"t":{"docs":{"traits/specialization.html#specialization":{"tf":1.0},"tests/adding.html#normalization":{"tf":1.0},"traits/resolution.html#major-concepts":{"tf":1.0},"mir/passes.html#stealing":{"tf":1.0},"compiletest.html#adding-a-new-header-command":{"tf":1.0},"mir/regionck.html#skolemization-and-universes":{"tf":1.0},"diag.html#error-messages":{"tf":1.0}},"df":7}}},"e":{"docs":{},"df":0,"p":{"docs":{},"df":0,"t":{"docs":{"appendix/background.html#what-is-a-control-flow-graph":{"tf":1.0},"traits/chalk-overview.html#parsing":{"tf":1.0},"traits/resolution.html#major-concepts":{"tf":1.4142135623730952},"hir.html#the-hir":{"tf":1.0},"traits/hrtb.html#higher-ranked-trait-bounds":{"tf":1.0},"type-inference.html#inference-variables":{"tf":1.0},"traits/canonicalization.html#canonicalization":{"tf":1.0},"mir/regionck.html#what-is-a-universe":{"tf":1.0},"mir/index.html#key-mir-vocabulary":{"tf":1.0},"appendix/background.html#what-is-a-free-region-or-a-free-variable-what-about-bound-region":{"tf":1.4142135623730952},"name-resolution.html#scopes-and-ribs":{"tf":1.0},"mir/index.html#mir-data-types":{"tf":1.0},"type-inference.html#enforcing-equality--subtyping":{"tf":1.0},"mir/index.html#the-mir-mid-level-ir":{"tf":1.0},"traits/bibliography.html#bibliography":{"tf":1.0}},"df":15,"u":{"docs":{"traits/canonicalization.html#processing-the-canonicalized-query-result":{"tf":1.0},"mir/regionck.html#what-is-a-universe":{"tf":1.0},"query.html#how-the-compiler-executes-a-query":{"tf":1.0},"mir/index.html#key-mir-vocabulary":{"tf":1.0}},"df":4}}},"r":{"docs":{},"df":0,"n":{"docs":{"type-checking.html#type-collection":{"tf":1.0},"compiler-debugging.html#logging-etiquette":{"tf":1.0}},"df":2}}},"a":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{"rustdoc.html#hot-potato":{"tf":1.0}},"df":1}}}}},"s":{"docs":{},"df":0,"i":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{"mir/passes.html#mir-passes":{"tf":1.0},"traits/canonical-queries.html#a-trait-query-in-rustc":{"tf":1.0},"traits/canonicalization.html#canonicalization":{"tf":1.0},"mir/regionck.html#mir-based-region-checking-nll":{"tf":1.0},"mir/passes.html#implementing-and-registering-a-pass":{"tf":1.0},"traits/hrtb.html#basic-matching-and-skolemization-leaks":{"tf":1.0},"appendix/stupid-stats.html#compilercontroller":{"tf":1.0},"mir/index.html#key-mir-vocabulary":{"tf":1.0},"ty.html#beyond-types-other-kinds-of-arena-allocated-data-structures":{"tf":1.0},"how-to-build-and-run.html#create-a-configtoml":{"tf":1.0},"high-level-overview.html#crate-structure":{"tf":1.4142135623730952},"traits/resolution.html#overview":{"tf":1.0},"mir/regionck.html#what-is-a-universe":{"tf":1.0},"traits/associated-types.html#equality-and-associated-types":{"tf":1.0},"traits/goals-and-clauses.html#domain-goals":{"tf":1.4142135623730952},"hir.html#identifiers-in-the-hir":{"tf":1.0},"traits/hrtb.html#higher-ranked-trait-obligations":{"tf":1.0}},"df":17}},"d":{"docs":{"type-checking.html#type-collection":{"tf":1.0},"variance.html#constraints":{"tf":1.0},"traits/canonical-queries.html#examples":{"tf":1.0},"tests/adding.html#naming-your-test":{"tf":1.0},"mir/regionck.html#what-is-a-universe":{"tf":1.0},"variance.html#the-algorithm":{"tf":1.0},"appendix/background.html#what-is-a-free-region-or-a-free-variable-what-about-bound-region":{"tf":1.4142135623730952},"traits/resolution.html#candidate-assembly":{"tf":2.6457513110645909},"variance.html#variance-of-type-and-lifetime-parameters":{"tf":1.4142135623730952},"traits/goals-and-clauses.html#coinductive-goals":{"tf":2.23606797749979},"traits/associated-types.html#projection-equality":{"tf":1.0},"variance.html#dependency-graph-management":{"tf":1.0},"incrcomp-debugging.html#dumping-the-graph":{"tf":1.0},"variance.html#variance-and-associated-types":{"tf":1.4142135623730952},"traits/lowering-to-logic.html#rust-traits-and-logic":{"tf":1.0},"ty.html#allocating-and-working-with-types":{"tf":1.0},"method-lookup.html#candidate-search":{"tf":1.4142135623730952},"mir/regionck.html#extending-the-universal-regions-check":{"tf":1.0},"traits/resolution.html#major-concepts":{"tf":1.0},"traits/resolution.html#selection":{"tf":1.0},"traits/resolution.html#selection-during-translation":{"tf":1.0},"traits/associated-types.html#skolemized-associated-types":{"tf":1.4142135623730952},"mir/passes.html#stealing":{"tf":1.0},"appendix/background.html#what-is-a-control-flow-graph":{"tf":1.0},"traits/lowering-to-logic.html#type-checking-normal-functions":{"tf":1.0},"variance.html#variance-and-object-types":{"tf":1.4142135623730952},"traits/hrtb.html#basic-matching-and-skolemization-leaks":{"tf":1.4142135623730952},"mir/regionck.html#skolemization-and-universes":{"tf":1.0}},"df":28,"e":{"docs":{},"df":0,"r":{"docs":{"traits/caching.html#caching-and-subtle-considerations-therewith":{"tf":1.4142135623730952}},"df":1}}}},"o":{"docs":{},"df":0,"l":{"docs":{"compiler-debugging.html#getting-logging-output":{"tf":1.0}},"df":1,"i":{"docs":{},"df":0,"d":{"docs":{"traits/chalk-overview.html#an-overview-of-chalk":{"tf":1.0}},"df":1}}}},"t":{"docs":{"miri.html#interpretation":{"tf":1.0},"hir.html#hir-bodies":{"tf":1.0},"miri.html#miri":{"tf":1.7320508075688773},"mir/passes.html#stealing":{"tf":1.0},"const-eval.html#constant-evaluation":{"tf":1.0},"compiletest.html#implementing-the-behavior-change":{"tf":1.0},"mir/index.html#key-mir-vocabulary":{"tf":2.0}},"df":7,"_":{"docs":{},"df":0,"e":{"docs":{},"df":0,"v":{"docs":{"const-eval.html#constant-evaluation":{"tf":1.7320508075688773}},"df":1}}},"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{"traits/canonical-queries.html#examples":{"tf":1.0},"type-inference.html#enforcing-equality--subtyping":{"tf":1.0}},"df":2,"t":{"docs":{"traits/resolution.html#selection":{"tf":1.4142135623730952},"traits/canonicalization.html#executing-the-query":{"tf":1.0},"type-inference.html#enforcing-equality--subtyping":{"tf":1.4142135623730952},"mir/regionck.html#region-variables-and-constraints":{"tf":1.7320508075688773},"traits/canonical-queries.html#a-trait-query-in-rustc":{"tf":1.0},"traits/associated-types.html#integration-with-unification":{"tf":1.4142135623730952},"type-inference.html#extracting-region-constraints":{"tf":3.3166247903554},"mir/regionck.html#back-to-our-example":{"tf":1.7320508075688773},"traits/canonicalization.html#processing-the-canonicalized-query-result":{"tf":1.4142135623730952},"type-inference.html#subtyping-obligations":{"tf":1.4142135623730952},"traits/hrtb.html#basic-matching-and-skolemization-leaks":{"tf":1.4142135623730952},"traits/index.html#trait-solving-new-style":{"tf":1.7320508075688773},"mir/regionck.html#final-example":{"tf":1.4142135623730952},"mir/regionck.html#extending-the-universal-regions-check":{"tf":1.4142135623730952},"traits/canonical-queries.html#examples":{"tf":1.0},"variance.html#constraints":{"tf":1.4142135623730952},"traits/regions.html#region-constraints":{"tf":1.4142135623730952},"traits/canonicalization.html#canonicalizing-the-query-result":{"tf":1.0},"mir/regionck.html#mir-based-region-checking-nll":{"tf":1.4142135623730952},"mir/regionck.html#skolemization-and-outlives-constraints":{"tf":2.0},"mir/regionck.html#another-example":{"tf":1.0},"type-inference.html#trying-equality":{"tf":1.0},"type-inference.html#region-constraints":{"tf":2.6457513110645909},"variance.html#the-algorithm":{"tf":2.23606797749979},"type-inference.html#lexical-region-resolution":{"tf":1.0}},"df":25}}}},"u":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{"hir.html#out-of-band-storage-and-the--crate--type":{"tf":1.0},"traits/canonicalization.html#executing-the-query":{"tf":1.0},"mir/construction.html#mir-construction":{"tf":1.4142135623730952},"mir/regionck.html#universes-and-skolemized-region-elements":{"tf":1.0},"mir/passes.html#mir-passes":{"tf":1.4142135623730952},"mir/index.html#the-mir-mid-level-ir":{"tf":1.0},"diag.html#span":{"tf":1.0},"macro-expansion.html#example":{"tf":1.4142135623730952},"diag.html#declaring-a-lint":{"tf":1.0},"incremental-compilation.html#the-query-dag":{"tf":1.0},"name-resolution.html#scopes-and-ribs":{"tf":1.0},"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.4142135623730952}},"df":12,"o":{"docs":{},"df":0,"r":{"docs":{"rustc-driver.html#the-rustc-driver":{"tf":1.0},"query.html#adding-a-new-kind-of-query":{"tf":1.7320508075688773}},"df":2}}}}}},"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{"param_env.html#parameter-environment":{"tf":1.4142135623730952},"hir.html#hir-bodies":{"tf":1.0},"mir/index.html#representing-constants":{"tf":1.4142135623730952},"miri.html#interpretation":{"tf":2.8284271247461905},"traits/lowering-rules.html#lowering-function-and-constant-declarations":{"tf":1.7320508075688773},"miri.html#allocations":{"tf":1.0},"appendix/glossary.html#appendix-c-glossary":{"tf":1.7320508075688773},"mir/index.html#key-mir-vocabulary":{"tf":1.7320508075688773},"mir/passes.html#mir-passes":{"tf":1.4142135623730952},"hir.html#identifiers-in-the-hir":{"tf":1.0},"mir/index.html#mir-data-types":{"tf":1.4142135623730952},"const-eval.html#constant-evaluation":{"tf":3.3166247903554},"traits/lowering-rules.html#function-and-constant-values":{"tf":2.0},"mir/passes.html#seeing-how-the-mir-changes-as-the-compiler-executes":{"tf":1.0},"miri.html#miri":{"tf":2.449489742783178},"miri.html#datastructures":{"tf":1.0},"mir/regionck.html#extending-the-universal-regions-check":{"tf":1.0},"mir/index.html#promoted-constants":{"tf":1.4142135623730952}},"df":18,"l":{"docs":{},"df":0,"i":{"docs":{"appendix/stupid-stats.html#appendix-a-a-tutorial-on-creating-a-drop-in-replacement-for-rustc":{"tf":1.0}},"df":1}},"/":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{},"df":0,"i":{"docs":{},"df":0,"c":{"docs":{},"df":0,"/":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"y":{"docs":{"const-eval.html#constant-evaluation":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}},"u":{"docs":{},"df":0,"m":{"docs":{"mir/index.html#key-mir-vocabulary":{"tf":1.0},"appendix/code-index.html#appendix-d-code-index":{"tf":1.0},"macro-expansion.html#the-macro-parser":{"tf":1.0},"name-resolution.html#todo":{"tf":1.0}},"df":4,"e":{"docs":{},"df":0,"d":{"docs":{},"df":0,"/":{"docs":{},"df":0,"f":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"g":{"docs":{},"df":0,"o":{"docs":{},"df":0,"t":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{"appendix/stupid-stats.html#compilercontroller":{"tf":1.0}},"df":1}}}}}}}}}}}}},"l":{"docs":{},"df":0,"t":{"docs":{"traits/specialization.html#specialization":{"tf":1.7320508075688773}},"df":1}}},"e":{"docs":{},"df":0,"q":{"docs":{},"df":0,"u":{"docs":{"traits/chalk-overview.html#lowering":{"tf":1.4142135623730952}},"df":1}},"r":{"docs":{},"df":0,"v":{"docs":{"traits/caching.html#where-clauses-and-the-local-vs-global-cache":{"tf":1.0}},"df":1}}}},"v":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{"rustdoc.html#hot-potato":{"tf":1.0},"name-resolution.html#namespaces":{"tf":1.0},"conventions.html#formatting-and-the-tidy-script":{"tf":1.4142135623730952},"tests/intro.html#other-tests":{"tf":1.4142135623730952},"ty.html#import-conventions":{"tf":1.4142135623730952}},"df":5},"i":{"docs":{"miri.html#miri":{"tf":1.0},"traits/chalk-overview.html#parsing":{"tf":1.0},"mir/visitor.html#mir-visitor":{"tf":1.0},"conventions.html#prefer-exhaustive-matches":{"tf":1.0}},"df":4}},"r":{"docs":{},"df":0,"s":{"docs":{"type-checking.html#type-collection":{"tf":1.0},"traits/resolution.html#candidate-assembly":{"tf":1.0},"rustdoc.html#from-crate-to-clean":{"tf":1.4142135623730952}},"df":3},"t":{"docs":{"hir.html#the-hir":{"tf":1.0},"traits/resolution.html#candidate-assembly":{"tf":1.7320508075688773},"traits/canonicalization.html#canonicalizing-the-query-result":{"tf":1.0},"tests/adding.html#normalization":{"tf":1.4142135623730952},"type-inference.html#subtyping-obligations":{"tf":1.0},"traits/chalk-overview.html#lowering":{"tf":1.0},"appendix/stupid-stats.html#what-next":{"tf":1.0},"type-inference.html#region-constraints":{"tf":1.0},"method-lookup.html#method-lookup":{"tf":1.4142135623730952},"appendix/glossary.html#appendix-c-glossary":{"tf":1.4142135623730952},"traits/resolution.html#confirmation":{"tf":1.0},"high-level-overview.html#the-main-stages-of-compilation":{"tf":1.0},"hir.html#the-hir-map":{"tf":1.4142135623730952},"the-parser.html#the-parser":{"tf":1.0},"rustdoc.html#from-crate-to-clean":{"tf":1.0},"traits/lowering-rules.html#lowering-where-clauses":{"tf":1.0},"type-checking.html#type-collection":{"tf":1.0},"traits/hrtb.html#higher-ranked-trait-obligations":{"tf":1.0}},"df":18,"<":{"docs":{},"df":0,"i":{"docs":{},"df":0,"s":{"docs":{"traits/resolution.html#confirmation":{"tf":1.0},"traits/resolution.html#candidate-assembly":{"tf":1.0}},"df":2}},"$":{"docs":{},"df":0,"i":{"docs":{"traits/resolution.html#candidate-assembly":{"tf":1.0}},"df":1}},"u":{"docs":{},"df":0,"s":{"docs":{"traits/resolution.html#candidate-assembly":{"tf":1.4142135623730952},"traits/resolution.html#confirmation":{"tf":1.0}},"df":2}},"t":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"g":{"docs":{},"df":0,"e":{"docs":{},"df":0,"t":{"docs":{"traits/resolution.html#candidate-assembly":{"tf":1.0},"traits/resolution.html#confirmation":{"tf":1.0}},"df":2}}}}}}},"(":{"docs":{},"df":0,"&":{"docs":{},"df":0,"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"l":{"docs":{},"df":0,"f":{"docs":{"traits/resolution.html#candidate-assembly":{"tf":1.0},"traits/resolution.html#confirmation":{"tf":1.0}},"df":2}}}}}},"a":{"docs":{},"df":0,"l":{"docs":{"variance.html#trait-variance-and-vtable-resolution":{"tf":1.7320508075688773}},"df":1,"l":{"docs":{},"df":0,"<":{"docs":{},"df":0,"a":{"docs":{},"df":0,",":{"docs":{},"df":0,"t":{"docs":{},"df":0,":":{"docs":{},"df":0,"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"v":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"t":{"docs":{},"df":0,"t":{"docs":{},"df":0,"o":{"docs":{},"df":0,"<":{"docs":{},"df":0,"a":{"docs":{},"df":0,">":{"docs":{},"df":0,">":{"docs":{},"df":0,"(":{"docs":{},"df":0,"v":{"docs":{"variance.html#trait-variance-and-vtable-resolution":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}}},":":{"docs":{},"df":0,":":{"docs":{},"df":0,"<":{"docs":{},"df":0,"i":{"docs":{},"df":0,"3":{"docs":{},"df":0,"2":{"docs":{"variance.html#trait-variance-and-vtable-resolution":{"tf":1.0}},"df":1}}}}}}}}},"t":{"docs":{},"df":0,"o":{"docs":{"variance.html#variance-and-object-types":{"tf":1.0},"variance.html#trait-variance-and-vtable-resolution":{"tf":1.4142135623730952}},"df":2,"(":{"docs":{},"df":0,"&":{"docs":{},"df":0,"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"l":{"docs":{},"df":0,"f":{"docs":{"variance.html#variance-and-object-types":{"tf":1.0}},"df":1}}}}}},"<":{"docs":{},"df":0,"a":{"docs":{"variance.html#variance-and-object-types":{"tf":1.0}},"df":1},"i":{"docs":{},"df":0,"3":{"docs":{},"df":0,"2":{"docs":{"variance.html#trait-variance-and-vtable-resolution":{"tf":1.7320508075688773}},"df":1}}}}}}}}}},"n":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{"query.html#adding-a-new-kind-of-query":{"tf":1.0},"appendix/background.html#what-is-a-control-flow-graph":{"tf":1.0}},"df":2}}}},"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{"rustdoc.html#other-tricks-up-its-sleeve":{"tf":1.0},"tests/running.html#running-tests":{"tf":1.0},"mir/visitor.html#mir-visitor":{"tf":1.0},"macro-expansion.html#macro-expansion":{"tf":1.4142135623730952},"hir.html#out-of-band-storage-and-the--crate--type":{"tf":2.23606797749979},"macro-expansion.html#the-macro-parser":{"tf":1.0}},"df":6}},"x":{"docs":{},"df":0,"t":{"docs":{"type-inference.html#creating-an-inference-context":{"tf":2.23606797749979},"type-inference.html#extracting-region-constraints":{"tf":1.0},"param_env.html#parameter-environment":{"tf":1.0},"mir/regionck.html#skolemization-and-outlives-constraints":{"tf":1.0},"traits/canonicalization.html#executing-the-query":{"tf":2.23606797749979},"ty.html#the--ty--module-representing-types":{"tf":1.0},"type-inference.html#inference-variables":{"tf":1.4142135623730952},"type-inference.html#snapshots":{"tf":1.0},"query.html#how-the-compiler-executes-a-query":{"tf":1.0},"query.html#invoking-queries":{"tf":1.0},"appendix/code-index.html#appendix-d-code-index":{"tf":1.4142135623730952},"type-inference.html#enforcing-equality--subtyping":{"tf":1.4142135623730952},"traits/canonicalization.html#canonicalization":{"tf":1.4142135623730952},"traits/canonicalization.html#processing-the-canonicalized-query-result":{"tf":1.4142135623730952},"traits/index.html#trait-solving-new-style":{"tf":1.0},"appendix/background.html#appendix-b-background-topics":{"tf":1.0},"ty.html#the-tcx-and-how-it-uses-lifetimes":{"tf":2.0},"traits/canonicalization.html#canonicalizing-the-query-result":{"tf":1.0},"rustdoc.html#from-clean-to-crate":{"tf":1.4142135623730952},"rustc-driver.html#the-rustc-driver":{"tf":1.4142135623730952},"rustdoc.html#from-soup-to-nuts":{"tf":1.4142135623730952},"appendix/glossary.html#appendix-c-glossary":{"tf":2.0},"compiler-debugging.html#debugging-llvm":{"tf":1.0},"mir/regionck.html#universes-and-skolemized-region-elements":{"tf":1.4142135623730952},"traits/associated-types.html#skolemized-associated-types":{"tf":1.0}},"df":25}}},"a":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{"traits/canonicalization.html#canonicalization":{"tf":1.0},"mir/regionck.html#skolemization-and-outlives-constraints":{"tf":1.0},"rustdoc.html#from-crate-to-clean":{"tf":1.0},"query.html#how-the-compiler-executes-a-query":{"tf":1.0},"traits/lowering-module.html#unit-tests":{"tf":1.0},"macro-expansion.html#the-macro-parser":{"tf":1.0},"tests/adding.html#tests-that-do-not-result-in-compile-errors":{"tf":1.0},"traits/canonicalization.html#executing-the-query":{"tf":1.0},"mir/index.html#mir-data-types":{"tf":1.0},"query.html#cycles-between-queries":{"tf":1.0},"rustdoc.html#dotting-is-and-crossing-ts":{"tf":1.0},"mir/visitor.html#traversal":{"tf":1.0},"the-parser.html#the-parser":{"tf":1.7320508075688773},"traits/resolution.html#candidate-assembly":{"tf":1.7320508075688773},"appendix/stupid-stats.html#overview-of-the-compilation-process":{"tf":1.4142135623730952},"traits/canonicalization.html#canonicalizing-the-query":{"tf":1.4142135623730952},"hir.html#the-hir-map":{"tf":1.0},"type-checking.html#type-checking":{"tf":1.0},"rustdoc.html#from-soup-to-nuts":{"tf":1.0},"appendix/stupid-stats.html#compilercontroller":{"tf":1.4142135623730952},"mir/passes.html#seeing-how-the-mir-changes-as-the-compiler-executes":{"tf":1.0},"traits/chalk-overview.html#intermediate-representation-ir":{"tf":1.7320508075688773},"high-level-overview.html#crate-structure":{"tf":1.7320508075688773},"traits/specialization.html#specialization":{"tf":1.0},"mir/regionck.html#extending-the-universal-regions-check":{"tf":1.0},"miri.html#interpretation":{"tf":1.0},"ty.html#allocating-and-working-with-types":{"tf":1.0},"miri.html#allocations":{"tf":1.0},"traits/resolution.html#selection":{"tf":1.0},"rustc-driver.html#a-note-on-lifetimes":{"tf":1.0},"traits/lowering-rules.html#associated-type-values":{"tf":1.0},"tests/intro.html#compiletest-test-suites":{"tf":1.0},"traits/chalk-overview.html#parsing":{"tf":1.0},"appendix/stupid-stats.html#compilercalls":{"tf":1.4142135623730952},"hir.html#out-of-band-storage-and-the--crate--type":{"tf":1.7320508075688773},"appendix/code-index.html#appendix-d-code-index":{"tf":1.7320508075688773},"ty.html#beyond-types-other-kinds-of-arena-allocated-data-structures":{"tf":1.0},"mir/regionck.html#what-is-a-universe":{"tf":1.4142135623730952}},"df":38}}},"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"u":{"docs":{"traits/associated-types.html#associated-type-projection-and-normalization":{"tf":1.0},"traits/canonical-queries.html#the-traditional-interactive-prolog-query":{"tf":2.8284271247461905},"traits/goals-and-clauses.html#coinductive-goals":{"tf":1.0},"appendix/stupid-stats.html#compilercontroller":{"tf":1.4142135623730952},"method-lookup.html#candidate-search":{"tf":1.0},"incremental-compilation.html#the-query-dag":{"tf":1.0},"method-lookup.html#candidate-assembly":{"tf":1.0},"appendix/stupid-stats.html#compilercalls":{"tf":1.0}},"df":8}}},"r":{"docs":{},"df":0,"i":{"docs":{},"df":0,"b":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{"walkthrough.html#walkthrough-a-typical-contribution":{"tf":1.4142135623730952},"traits/chalk-overview.html#an-overview-of-chalk":{"tf":1.0}},"df":2,"o":{"docs":{},"df":0,"r":{"docs":{"about-this-guide.html#about-this-guide":{"tf":1.0}},"df":1}}}}}},"o":{"docs":{},"df":0,"l":{"docs":{"appendix/stupid-stats.html#compilercalls":{"tf":1.0},"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.4142135623730952},"mir/passes.html#seeing-how-the-mir-changes-as-the-compiler-executes":{"tf":1.0},"mir/regionck.html#universes-and-skolemized-region-elements":{"tf":1.0},"mir/borrowck.html#mir-borrow-check":{"tf":1.0},"appendix/stupid-stats.html#compilercontroller":{"tf":1.4142135623730952},"appendix/stupid-stats.html#the-driver-customisation-apis":{"tf":1.4142135623730952},"mir/index.html#the-mir-mid-level-ir":{"tf":1.0},"appendix/background.html#what-is-a-control-flow-graph":{"tf":2.6457513110645909},"mir/index.html#key-mir-vocabulary":{"tf":1.4142135623730952},"appendix/glossary.html#appendix-c-glossary":{"tf":2.0},"mir/regionck.html#representing-the-values-of-a-region-variable":{"tf":1.4142135623730952},"mir/regionck.html#skolemization-and-outlives-constraints":{"tf":1.0},"query.html#queries-demand-driven-compilation":{"tf":1.0},"diag.html#error-messages":{"tf":1.0},"mir/index.html#introduction-to-mir":{"tf":1.0},"rustdoc.html#hot-potato":{"tf":1.0}},"df":17,".":{"docs":{},"df":0,"a":{"docs":{},"df":0,"f":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"_":{"docs":{},"df":0,"p":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,".":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"o":{"docs":{},"df":0,"p":{"docs":{"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.0}},"df":1}}}},"c":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{},"df":0,"l":{"docs":{},"df":0,"b":{"docs":{},"df":0,"a":{"docs":{},"df":0,"c":{"docs":{},"df":0,"k":{"docs":{"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}}}}}},"a":{"docs":{"appendix/background.html#what-is-co--and-contra-variance":{"tf":1.4142135623730952}},"df":1,"v":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{"variance.html#variance-and-associated-types":{"tf":1.0},"variance.html#variance-of-type-and-lifetime-parameters":{"tf":1.0},"variance.html#the-algorithm":{"tf":1.4142135623730952},"variance.html#trait-variance-and-vtable-resolution":{"tf":1.0},"mir/regionck.html#subtyping-and-skolemization":{"tf":1.0}},"df":5}}}},"s":{"docs":{},"df":0,"t":{"docs":{"ty.html#the-tcx-and-how-it-uses-lifetimes":{"tf":1.0},"traits/canonicalization.html#canonicalizing-the-query-result":{"tf":1.0},"traits/resolution.html#selection":{"tf":1.0}},"df":3}},"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{"mir/regionck.html#final-example":{"tf":1.0}},"df":1}}}}}},"d":{"docs":{"diag.html#declaring-a-lint":{"tf":1.0}},"df":1,"i":{"docs":{},"df":0,"t":{"docs":{"traits/wf.html#well-formedness-checking":{"tf":1.0},"traits/lowering-to-logic.html#rust-traits-and-logic":{"tf":1.0},"traits/lowering-to-logic.html#type-checking-normal-functions":{"tf":1.4142135623730952},"traits/chalk-overview.html#lowering":{"tf":1.7320508075688773},"traits/associated-types.html#associated-type-projection-and-normalization":{"tf":1.0},"variance.html#trait-variance-and-vtable-resolution":{"tf":1.0},"traits/resolution.html#candidate-assembly":{"tf":1.0}},"df":7,"i":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"_":{"docs":{},"df":0,"s":{"docs":{},"df":0,"p":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{"diag.html#declaring-a-lint":{"tf":1.4142135623730952}},"df":1}}}}}}}}}},".":{"docs":{},"df":0,"n":{"docs":{},"df":0,"o":{"docs":{},"df":0,"d":{"docs":{"diag.html#declaring-a-lint":{"tf":1.0}},"df":1}}}},"2":{"docs":{"traits/chalk-overview.html#lowering":{"tf":1.0}},"df":1},"1":{"docs":{"traits/chalk-overview.html#lowering":{"tf":1.0}},"df":1}},"f":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{"conventions.html#how-to-structure-your-pr":{"tf":1.4142135623730952}},"df":1}}}},"i":{"docs":{},"df":0,"r":{"docs":{},"df":0,"m":{"docs":{"traits/resolution.html#confirmation":{"tf":2.23606797749979},"type-inference.html#snapshots":{"tf":1.0},"traits/caching.html#an-example":{"tf":1.4142135623730952},"traits/resolution.html#selection":{"tf":1.0},"traits/resolution.html#candidate-assembly":{"tf":1.0},"method-lookup.html#method-lookup":{"tf":1.4142135623730952}},"df":6,".":{"docs":{},"df":0,"r":{"docs":{"method-lookup.html#method-lookup":{"tf":1.0}},"df":1}}}},"g":{"docs":{"compiletest.html#adding-a-new-header-command":{"tf":2.449489742783178},"compiletest.html#introduction":{"tf":1.0},"query.html#adding-a-new-kind-of-query":{"tf":1.0}},"df":3,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"o":{"docs":{},"df":0,"p":{"docs":{},"df":0,"t":{"docs":{"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.4142135623730952}},"df":1}}}}},".":{"docs":{},"df":0,"p":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"_":{"docs":{},"df":0,"f":{"docs":{},"df":0,"a":{"docs":{},"df":0,"i":{"docs":{},"df":0,"l":{"docs":{},"df":0,"u":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"_":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{},"df":0,"u":{"docs":{},"df":0,"s":{"docs":{},"df":0,"(":{"docs":{},"df":0,"l":{"docs":{},"df":0,"n":{"docs":{"compiletest.html#adding-a-new-header-command":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}},"c":{"docs":{},"df":0,"u":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"o":{"docs":{},"df":0,"m":{"docs":{},"df":0,"_":{"docs":{},"df":0,"n":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"m":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{},"df":0,"z":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{},"df":0,"i":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"(":{"docs":{},"df":0,"l":{"docs":{},"df":0,"n":{"docs":{"compiletest.html#adding-a-new-header-command":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"df":0,"o":{"docs":{},"df":0,"m":{"docs":{},"df":0,"l":{"docs":{"how-to-build-and-run.html#running-xpy-and-building-a-stage1-compiler":{"tf":1.0},"compiler-debugging.html#debugging-llvm":{"tf":1.0},"how-to-build-and-run.html#create-a-configtoml":{"tf":2.0},"compiler-debugging.html#getting-a-backtrace":{"tf":1.0},"compiler-debugging.html#getting-logging-output":{"tf":1.4142135623730952}},"df":5,".":{"docs":{},"df":0,"e":{"docs":{},"df":0,"x":{"docs":{},"df":0,"a":{"docs":{},"df":0,"m":{"docs":{},"df":0,"p":{"docs":{},"df":0,"l":{"docs":{"how-to-build-and-run.html#create-a-configtoml":{"tf":1.4142135623730952}},"df":1}}}}}}}}}}}},"u":{"docs":{},"df":0,"r":{"docs":{"tests/intro.html#testing-infrastructure":{"tf":1.4142135623730952},"how-to-build-and-run.html#how-to-build-the-compiler-and-run-what-you-built":{"tf":1.4142135623730952},"compiler-debugging.html#getting-a-backtrace":{"tf":1.0},"rustc-driver.html#the-rustc-driver":{"tf":1.0},"compiletest.html#introduction":{"tf":1.0},"high-level-overview.html#the-main-stages-of-compilation":{"tf":1.0},"type-inference.html#creating-an-inference-context":{"tf":1.0},"mir/passes.html#implementing-and-registering-a-pass":{"tf":1.0},"appendix/stupid-stats.html#overview-of-the-compilation-process":{"tf":1.0},"tests/adding.html#header-commands-configuring-rustc":{"tf":1.4142135623730952}},"df":10}}}},"u":{"docs":{},"df":0,"s":{"docs":{"conventions.html#how-to-structure-your-pr":{"tf":1.0},"ty.html#allocating-and-working-with-types":{"tf":1.0},"ty.html#the-tcx-and-how-it-uses-lifetimes":{"tf":1.0},"variance.html#addendum-variance-on-traits":{"tf":1.0}},"df":4}}}},"p":{"docs":{},"df":0,"e":{"docs":{"name-resolution.html#namespaces":{"tf":1.0},"name-resolution.html#scopes-and-ribs":{"tf":1.4142135623730952}},"df":2},"i":{"docs":{"query.html#how-the-compiler-executes-a-query":{"tf":1.0},"traits/canonical-queries.html#the-traditional-interactive-prolog-query":{"tf":1.0},"rustdoc.html#cheat-sheet":{"tf":1.0},"rustdoc.html#from-clean-to-crate":{"tf":1.0},"compiletest.html#adding-a-new-header-command":{"tf":1.0},"the-parser.html#the-parser":{"tf":1.0},"mir/index.html#key-mir-vocabulary":{"tf":1.7320508075688773},"mir/borrowck.html#major-phases-of-the-borrow-checker":{"tf":1.7320508075688773},"param_env.html#parameter-environment":{"tf":1.7320508075688773},"traits/goals-and-clauses.html#domain-goals":{"tf":1.0},"traits/resolution.html#candidate-assembly":{"tf":1.0},"compiler-debugging.html#debugging-the-compiler":{"tf":1.0},"appendix/glossary.html#appendix-c-glossary":{"tf":1.0},"appendix/stupid-stats.html#appendix-a-a-tutorial-on-creating-a-drop-in-replacement-for-rustc":{"tf":1.4142135623730952},"how-to-build-and-run.html#create-a-configtoml":{"tf":1.0},"traits/canonical-queries.html#a-trait-query-in-rustc":{"tf":1.0},"conventions.html#copyright-notice":{"tf":1.0}},"df":17},"y":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{},"df":0,"g":{"docs":{},"df":0,"h":{"docs":{},"df":0,"t":{"docs":{"conventions.html#line-length":{"tf":1.0},"tests/adding.html#adding-new-tests":{"tf":1.0},"tests/adding.html#header-commands-configuring-rustc":{"tf":1.0},"tests/adding.html#comment-explaining-what-the-test-is-about":{"tf":1.0},"compiletest.html#adding-a-new-header-command":{"tf":1.4142135623730952},"conventions.html#copyright-notice":{"tf":2.449489742783178}},"df":6}}}}},">":{"docs":{},"df":0,"(":{"docs":{},"df":0,"t":{"docs":{"param_env.html#parameter-environment":{"tf":1.0}},"df":1}}}}}},"a":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{},"df":0,"i":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{"compiler-debugging.html#expensive-operations-in-logs":{"tf":1.0}},"df":1}}}},"g":{"docs":{},"df":0,"h":{"docs":{},"df":0,"t":{"docs":{"incremental-compilation.html#footnotes":{"tf":1.0}},"df":1}}},"s":{"docs":{"conventions.html#how-to-structure-your-pr":{"tf":1.0},"hir.html#identifiers-in-the-hir":{"tf":1.0},"mir/passes.html#stealing":{"tf":1.0},"appendix/stupid-stats.html#overview-of-the-compilation-process":{"tf":1.0},"traits/resolution.html#candidate-assembly":{"tf":1.0},"rustdoc.html#hot-potato":{"tf":1.0},"traits/resolution.html#selection":{"tf":1.0},"compiler-debugging.html#debugging-llvm":{"tf":1.4142135623730952}},"df":8,"a":{"docs":{},"df":0,"l":{"docs":{"mir/regionck.html#causal-tracking":{"tf":1.7320508075688773}},"df":1}}}},"p":{"docs":{},"df":0,"t":{"docs":{},"df":0,"u":{"docs":{},"df":0,"r":{"docs":{"tests/adding.html#what-kind-of-test-should-i-add":{"tf":1.0},"traits/lowering-to-logic.html#rust-traits-and-logic":{"tf":1.0},"tests/adding.html#guide-to-the-ui-tests":{"tf":1.4142135623730952}},"df":3}}},"a":{"docs":{},"df":0,"b":{"docs":{},"df":0,"l":{"docs":{"incrcomp-debugging.html#dumping-the-graph":{"tf":1.0}},"df":1}}}},"l":{"docs":{},"df":0,"l":{"docs":{"traits/lowering-to-logic.html#type-checking-generic-functions-beyond-horn-clauses":{"tf":1.0},"mir/regionck.html#back-to-our-example":{"tf":1.0},"rustdoc.html#from-clean-to-crate":{"tf":1.4142135623730952},"appendix/stupid-stats.html#compilercontroller":{"tf":1.7320508075688773},"compiletest.html#adding-a-new-header-command":{"tf":1.0},"conventions.html#formatting-and-the-tidy-script":{"tf":1.0},"mir/regionck.html#mir-based-region-checking-nll":{"tf":1.0},"traits/lowering-to-logic.html#type-checking-normal-functions":{"tf":2.0},"diag.html#declaring-a-lint":{"tf":1.0},"method-lookup.html#candidate-assembly":{"tf":2.23606797749979},"tests/intro.html#the-compiler-testing-framework":{"tf":1.0},"mir/regionck.html#what-is-a-universe":{"tf":1.7320508075688773},"mir/regionck.html#subtyping-and-skolemization":{"tf":1.4142135623730952},"traits/resolution.html#candidate-assembly":{"tf":1.4142135623730952},"traits/chalk-overview.html#intermediate-representation-ir":{"tf":1.0},"name-resolution.html#todo":{"tf":1.0},"const-eval.html#constant-evaluation":{"tf":1.0},"diag.html#error-messages":{"tf":1.0},"macro-expansion.html#macro-expansion":{"tf":1.0},"compiler-debugging.html#getting-a-backtrace-for-errors":{"tf":1.4142135623730952},"mir/regionck.html#representing-the-values-of-a-region-variable":{"tf":1.0},"traits/lowering-to-logic.html#lowering-to-logic":{"tf":1.0},"traits/resolution.html#major-concepts":{"tf":1.0},"the-parser.html#the-parser":{"tf":1.0},"mir/index.html#key-mir-vocabulary":{"tf":1.7320508075688773},"how-to-build-and-run.html#running-xpy-and-building-a-stage1-compiler":{"tf":1.7320508075688773},"mir/regionck.html#skolemization-and-universes":{"tf":1.0},"query.html#cycles-between-queries":{"tf":1.0},"incremental-compilation.html#the-try-mark-green-algorithm":{"tf":1.0},"how-to-build-and-run.html#how-to-build-the-compiler-and-run-what-you-built":{"tf":1.0},"param_env.html#parameter-environment":{"tf":1.0},"appendix/glossary.html#appendix-c-glossary":{"tf":1.4142135623730952},"miri.html#miri":{"tf":1.4142135623730952},"rustdoc.html#the-walking-tour-of-rustdoc":{"tf":1.0},"traits/chalk-overview.html#testing":{"tf":1.0},"mir/regionck.html#another-example":{"tf":1.7320508075688773},"rustdoc.html#from-crate-to-clean":{"tf":1.4142135623730952},"macro-expansion.html#the-macro-parser":{"tf":1.4142135623730952},"variance.html#trait-variance-and-vtable-resolution":{"tf":1.4142135623730952},"method-lookup.html#method-lookup":{"tf":2.0},"appendix/stupid-stats.html#appendix-a-a-tutorial-on-creating-a-drop-in-replacement-for-rustc":{"tf":1.0},"type-inference.html#snapshots":{"tf":1.0},"type-inference.html#a-note-on-terminology":{"tf":1.0},"appendix/background.html#what-is-a-free-region-or-a-free-variable-what-about-bound-region":{"tf":1.0},"tests/intro.html#compiletest-test-suites":{"tf":1.0},"traits/goals-and-clauses.html#domain-goals":{"tf":1.0},"query.html#how-the-compiler-executes-a-query":{"tf":1.0},"traits/resolution.html#selection-during-translation":{"tf":1.0},"appendix/stupid-stats.html#overview-of-the-compilation-process":{"tf":1.4142135623730952},"query.html#queries-demand-driven-compilation":{"tf":1.0},"compiler-debugging.html#getting-logging-output":{"tf":2.8284271247461905},"traits/chalk-overview.html#well-formedness-checks":{"tf":1.0},"mir/regionck.html#skolemization-and-outlives-constraints":{"tf":1.0},"query.html#adding-a-new-kind-of-query":{"tf":1.0},"compiler-debugging.html#expensive-operations-in-logs":{"tf":1.0},"compiler-debugging.html#debugging-llvm":{"tf":1.4142135623730952},"traits/associated-types.html#skolemized-associated-types":{"tf":1.0},"type-inference.html#enforcing-equality--subtyping":{"tf":1.0},"macro-expansion.html#example":{"tf":1.7320508075688773},"appendix/stupid-stats.html#compilercalls":{"tf":1.0},"hir.html#the-hir-map":{"tf":1.0},"appendix/background.html#what-is-a-control-flow-graph":{"tf":1.0},"compiler-debugging.html#logging-etiquette":{"tf":1.4142135623730952},"miri.html#interpretation":{"tf":1.7320508075688773},"traits/hrtb.html#basic-matching-and-skolemization-leaks":{"tf":1.0},"incremental-compilation.html#the-basic-algorithm":{"tf":1.0},"variance.html#variance-and-object-types":{"tf":2.23606797749979},"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":2.23606797749979}},"df":68,"b":{"docs":{},"df":0,"a":{"docs":{},"df":0,"c":{"docs":{},"df":0,"k":{"docs":{"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.4142135623730952},"appendix/stupid-stats.html#compilercontroller":{"tf":2.449489742783178},"rustc-driver.html#a-note-on-lifetimes":{"tf":1.4142135623730952},"appendix/code-index.html#appendix-d-code-index":{"tf":1.0},"rustc-driver.html#the-rustc-driver":{"tf":1.4142135623730952}},"df":5}}}},"e":{"docs":{},"df":0,"r":{"docs":{"variance.html#variance-and-object-types":{"tf":1.0},"mir/regionck.html#representing-the-values-of-a-region-variable":{"tf":1.0},"traits/resolution.html#major-concepts":{"tf":1.4142135623730952},"incrcomp-debugging.html#testing-the-dependency-graph":{"tf":1.0}},"df":4,"'":{"docs":{"mir/regionck.html#representing-the-values-of-a-region-variable":{"tf":1.4142135623730952}},"df":1}},"e":{"docs":{},"df":0,".":{"docs":{},"df":0,"r":{"docs":{"incrcomp-debugging.html#testing-the-dependency-graph":{"tf":1.0}},"df":1}}}}}},"c":{"docs":{},"df":0,"h":{"docs":{"method-lookup.html#method-lookup":{"tf":1.0},"mir/passes.html#stealing":{"tf":1.0},"traits/caching.html#caching-and-subtle-considerations-therewith":{"tf":2.23606797749979},"traits/caching.html#an-example":{"tf":2.0},"traits/specialization.html#specialization":{"tf":1.0},"rustdoc.html#from-clean-to-crate":{"tf":1.0},"traits/canonicalization.html#canonicalization":{"tf":1.0},"traits/caching.html#where-clauses-and-the-local-vs-global-cache":{"tf":3.0},"tests/running.html#running-tests":{"tf":1.0},"query.html#how-the-compiler-executes-a-query":{"tf":1.7320508075688773}},"df":10,"e":{"docs":{},"df":0,"a":{"docs":{},"df":0,"b":{"docs":{},"df":0,"l":{"docs":{"method-lookup.html#method-lookup":{"tf":1.0}},"df":1}}}}}},"m":{"docs":{},"df":0,"e":{"docs":{"mir/passes.html#stealing":{"tf":1.0},"mir/passes.html#implementing-and-registering-a-pass":{"tf":1.0},"incrcomp-debugging.html#tracking-down-incorrect-edges":{"tf":1.0},"tests/adding.html#naming-your-test":{"tf":1.0}},"df":4}},"t":{"docs":{"mir/passes.html#seeing-how-the-mir-changes-as-the-compiler-executes":{"tf":1.0},"compiler-debugging.html#getting-a-backtrace-for-errors":{"tf":1.0}},"df":2},"n":{"docs":{},"df":0,"_":{"docs":{},"df":0,"e":{"docs":{},"df":0,"q":{"docs":{"type-inference.html#snapshots":{"tf":1.0},"type-inference.html#trying-equality":{"tf":1.0}},"df":2}}},"o":{"docs":{},"df":0,"n":{"docs":{"traits/canonicalization.html#executing-the-query":{"tf":2.449489742783178},"traits/canonicalization.html#canonicalizing-the-query":{"tf":1.7320508075688773},"traits/canonicalization.html#canonicalizing-the-query-result":{"tf":1.7320508075688773},"appendix/glossary.html#appendix-c-glossary":{"tf":1.0},"traits/index.html#trait-solving-new-style":{"tf":1.0},"traits/canonicalization.html#canonicalization":{"tf":2.449489742783178},"traits/canonicalization.html#processing-the-canonicalized-query-result":{"tf":2.449489742783178},"traits/canonical-queries.html#canonical-queries":{"tf":1.7320508075688773}},"df":8,"i":{"docs":{},"df":0,"c":{"docs":{"traits/canonicalization.html#executing-the-query":{"tf":1.0},"ty.html#allocating-and-working-with-types":{"tf":1.0},"traits/canonicalization.html#processing-the-canonicalized-query-result":{"tf":1.7320508075688773},"traits/canonicalization.html#canonicalizing-the-query-result":{"tf":2.6457513110645909},"traits/canonicalization.html#canonicalization":{"tf":2.6457513110645909},"traits/canonicalization.html#canonicalizing-the-query":{"tf":2.23606797749979}},"df":6,"a":{"docs":{},"df":0,"l":{"docs":{},"df":0,"v":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"v":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{},"df":0,"u":{"docs":{"traits/canonicalization.html#canonicalizing-the-query":{"tf":1.0}},"df":1}}}}}}},"(":{"docs":{},"df":0,"q":{"docs":{},"df":0,"r":{"docs":{"traits/canonicalization.html#canonicalizing-the-query-result":{"tf":1.0}},"df":1}}}}}}}}},"'":{"docs":{},"df":0,"t":{"docs":{"type-inference.html#subtyping-obligations":{"tf":1.0},"traits/resolution.html#major-concepts":{"tf":1.0},"traits/associated-types.html#skolemized-associated-types":{"tf":1.0},"appendix/stupid-stats.html#compilercontroller":{"tf":1.0},"traits/lowering-to-logic.html#lowering-to-logic":{"tf":1.0},"mir/borrowck.html#mir-borrow-check":{"tf":2.0},"traits/chalk-overview.html#lowering":{"tf":1.0},"high-level-overview.html#the-main-stages-of-compilation":{"tf":1.4142135623730952},"mir/regionck.html#skolemization-and-outlives-constraints":{"tf":1.0},"mir/regionck.html#back-to-our-example":{"tf":1.0},"name-resolution.html#scopes-and-ribs":{"tf":1.0},"miri.html#datastructures":{"tf":1.0},"mir/regionck.html#skolemization-and-universes":{"tf":1.0}},"df":13}},"d":{"docs":{},"df":0,"i":{"docs":{},"df":0,"d":{"docs":{"method-lookup.html#candidate-assembly":{"tf":3.1622776601683797},"traits/resolution.html#selection":{"tf":1.0},"traits/specialization.html#specialization":{"tf":1.0},"method-lookup.html#candidate-search":{"tf":2.23606797749979},"traits/resolution.html#candidate-assembly":{"tf":3.605551275463989},"traits/resolution.html#confirmation":{"tf":1.0}},"df":6}}}},"s":{"docs":{},"df":0,"e":{"docs":{"traits/canonicalization.html#canonicalizing-the-query-result":{"tf":1.0},"incremental-compilation.html#the-try-mark-green-algorithm":{"tf":1.4142135623730952},"traits/specialization.html#specialization":{"tf":1.0},"method-lookup.html#candidate-assembly":{"tf":1.7320508075688773},"traits/chalk-overview.html#an-overview-of-chalk":{"tf":1.0},"compiletest.html#implementing-the-behavior-change":{"tf":1.4142135623730952},"macro-expansion.html#the-macro-parser":{"tf":1.4142135623730952},"traits/associated-types.html#projection-equality":{"tf":1.0},"type-inference.html#region-constraints":{"tf":1.0},"traits/resolution.html#major-concepts":{"tf":1.4142135623730952},"type-inference.html#subtyping-obligations":{"tf":2.0},"param_env.html#parameter-environment":{"tf":1.0},"miri.html#miri":{"tf":1.7320508075688773},"type-inference.html#enforcing-equality--subtyping":{"tf":1.0},"tests/adding.html#naming-your-test":{"tf":1.0},"tests/adding.html#guide-to-the-ui-tests":{"tf":1.0},"appendix/glossary.html#appendix-c-glossary":{"tf":1.0},"traits/hrtb.html#basic-matching-and-skolemization-leaks":{"tf":1.4142135623730952},"traits/canonicalization.html#canonicalization":{"tf":1.4142135623730952},"const-eval.html#constant-evaluation":{"tf":1.0},"traits/resolution.html#confirmation":{"tf":1.0},"traits/lowering-module.html#unit-tests":{"tf":1.0},"name-resolution.html#namespaces":{"tf":1.4142135623730952},"variance.html#trait-variance-and-vtable-resolution":{"tf":1.4142135623730952},"traits/associated-types.html#skolemized-associated-types":{"tf":1.0},"traits/resolution.html#candidate-assembly":{"tf":2.0},"miri.html#allocations":{"tf":1.0},"incremental-compilation.html#the-query-dag":{"tf":1.4142135623730952},"tests/adding.html#what-kind-of-test-should-i-add":{"tf":1.0},"type-inference.html#trying-equality":{"tf":1.0},"compiler-debugging.html#getting-logging-output":{"tf":1.0},"incremental-compilation.html#improvements-to-the-basic-algorithm":{"tf":1.0},"method-lookup.html#candidate-search":{"tf":1.0},"traits/hrtb.html#higher-ranked-trait-obligations":{"tf":1.0},"traits/associated-types.html#associated-type-projection-and-normalization":{"tf":1.7320508075688773},"traits/canonical-queries.html#a-trait-query-in-rustc":{"tf":1.4142135623730952},"traits/canonicalization.html#canonicalizing-the-query":{"tf":1.0},"query.html#adding-a-new-kind-of-query":{"tf":1.4142135623730952},"traits/canonicalization.html#processing-the-canonicalized-query-result":{"tf":1.0},"mir/regionck.html#back-to-our-example":{"tf":1.0},"traits/resolution.html#overview":{"tf":1.0},"compiletest.html#adding-a-new-header-command":{"tf":1.7320508075688773},"traits/canonical-queries.html#the-traditional-interactive-prolog-query":{"tf":1.7320508075688773},"variance.html#constraints":{"tf":1.0},"tests/adding.html#normalization":{"tf":1.0},"query.html#cycles-between-queries":{"tf":1.7320508075688773},"mir/regionck.html#another-example":{"tf":1.0},"mir/regionck.html#final-example":{"tf":1.0},"diag.html#error-messages":{"tf":1.0},"ty.html#the-tcx-and-how-it-uses-lifetimes":{"tf":1.0},"mir/index.html#key-mir-vocabulary":{"tf":1.7320508075688773},"traits/lowering-rules.html#trait-header":{"tf":1.4142135623730952},"variance.html#variance-of-type-and-lifetime-parameters":{"tf":1.0},"traits/goals-and-clauses.html#coinductive-goals":{"tf":1.4142135623730952},"mir/regionck.html#what-is-a-universe":{"tf":1.0},"traits/associated-types.html#integration-with-unification":{"tf":1.0},"traits/caching.html#caching-and-subtle-considerations-therewith":{"tf":1.0},"tests/adding.html#tests-that-do-not-result-in-compile-errors":{"tf":1.0},"mir/regionck.html#extending-the-universal-regions-check":{"tf":1.0},"traits/canonical-queries.html#examples":{"tf":1.0},"appendix/stupid-stats.html#appendix-a-a-tutorial-on-creating-a-drop-in-replacement-for-rustc":{"tf":1.0},"incrcomp-debugging.html#dumping-the-graph":{"tf":1.0},"conventions.html#line-length":{"tf":1.0},"diag.html#suggestions":{"tf":1.4142135623730952},"tests/intro.html#compiletest-test-suites":{"tf":1.0},"tests/running.html#running-tests":{"tf":1.0},"query.html#how-the-compiler-executes-a-query":{"tf":1.4142135623730952},"compiler-debugging.html#logging-etiquette":{"tf":1.0},"traits/lowering-rules.html#lowering-where-clauses":{"tf":1.0},"compiletest.html#introduction":{"tf":1.0}},"df":70}},"r":{"docs":{},"df":0,"g":{"docs":{},"df":0,"o":{"docs":{"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":2.6457513110645909},"hir.html#the-hir":{"tf":1.0},"conventions.html#using-crates-from-cratesio":{"tf":1.0},"rustdoc.html#cheat-sheet":{"tf":1.0},"appendix/stupid-stats.html#appendix-a-a-tutorial-on-creating-a-drop-in-replacement-for-rustc":{"tf":1.0},"tests/intro.html#other-tests":{"tf":2.0}},"df":6,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{"tests/intro.html#other-tests":{"tf":1.0}},"df":1}}}},"'":{"docs":{"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.0}},"df":1}}},"e":{"docs":{"type-inference.html#subtyping-obligations":{"tf":1.0},"mir/passes.html#stealing":{"tf":1.0},"traits/specialization.html#specialization":{"tf":1.0},"macro-expansion.html#example":{"tf":1.7320508075688773},"rustdoc.html#from-clean-to-crate":{"tf":1.0},"variance.html#variance-and-object-types":{"tf":1.0},"variance.html#dependency-graph-management":{"tf":1.0},"param_env.html#parameter-environment":{"tf":1.0},"mir/regionck.html#skolemization-and-outlives-constraints":{"tf":1.0},"compiler-debugging.html#logging-etiquette":{"tf":1.0}},"df":10,"t":{"docs":{"tests/adding.html#error-annotations":{"tf":1.0}},"df":1}},"r":{"docs":{},"df":0,"i":{"docs":{"type-inference.html#enforcing-equality--subtyping":{"tf":1.0},"hir.html#identifiers-in-the-hir":{"tf":1.4142135623730952},"traits/canonical-queries.html#a-trait-query-in-rustc":{"tf":1.0},"appendix/glossary.html#appendix-c-glossary":{"tf":2.23606797749979}},"df":4,"e":{"docs":{},"df":0,"r":{"docs":{"traits/lowering-rules.html#trait-header":{"tf":1.0}},"df":1}}}}}},"p":{"docs":{"how-to-build-and-run.html#create-a-configtoml":{"tf":1.0}},"df":1,"u":{"docs":{"tests/intro.html#testing-on-emulators":{"tf":1.0}},"df":1}},"r":{"docs":{"tests/adding.html#normalization":{"tf":1.0}},"df":1,"a":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{"rustdoc.html#other-tricks-up-its-sleeve":{"tf":1.4142135623730952},"appendix/stupid-stats.html#overview-of-the-compilation-process":{"tf":1.7320508075688773},"rustdoc.html#from-crate-to-clean":{"tf":2.449489742783178},"query.html#adding-a-new-kind-of-query":{"tf":1.0},"traits/lowering-rules.html#rule-names-and-cross-references":{"tf":1.0},"hir.html#identifiers-in-the-hir":{"tf":2.6457513110645909},"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":2.23606797749979},"diag.html#declaring-a-lint":{"tf":1.0},"hir.html#the-hir-map":{"tf":1.0},"variance.html#dependency-graph-management":{"tf":1.7320508075688773},"rustdoc.html#from-soup-to-nuts":{"tf":1.4142135623730952},"rustc-driver.html#the-rustc-driver":{"tf":2.0},"the-parser.html#the-parser":{"tf":1.7320508075688773},"appendix/code-index.html#appendix-d-code-index":{"tf":1.4142135623730952},"hir.html#out-of-band-storage-and-the--crate--type":{"tf":3.0},"query.html#queries-demand-driven-compilation":{"tf":1.4142135623730952},"rustdoc.html#from-clean-to-crate":{"tf":2.0},"tests/adding.html#normalization":{"tf":1.0},"type-checking.html#type-checking":{"tf":1.0},"type-checking.html#type-collection":{"tf":1.0},"rustdoc.html#hot-potato":{"tf":2.0},"high-level-overview.html#the-main-stages-of-compilation":{"tf":1.7320508075688773},"rustdoc.html#the-walking-tour-of-rustdoc":{"tf":1.7320508075688773},"appendix/stupid-stats.html#compilercalls":{"tf":1.0},"conventions.html#formatting-and-the-tidy-script":{"tf":1.0},"query.html#how-the-compiler-executes-a-query":{"tf":4.123105625617661},"name-resolution.html#overall-strategy":{"tf":1.0},"conventions.html#using-crates-from-cratesio":{"tf":2.0},"name-resolution.html#name-resolution":{"tf":1.0},"tests/running.html#running-an-individual-test":{"tf":1.0},"diag.html#error-messages":{"tf":1.0},"appendix/glossary.html#appendix-c-glossary":{"tf":2.23606797749979},"high-level-overview.html#crate-structure":{"tf":4.242640687119285}},"df":33,"'":{"docs":{"rustdoc.html#the-walking-tour-of-rustdoc":{"tf":1.4142135623730952},"mir/passes.html#mir-passes":{"tf":1.0},"appendix/code-index.html#appendix-d-code-index":{"tf":1.0}},"df":3},"r":{"docs":{"tests/intro.html#crater":{"tf":1.4142135623730952}},"df":1},"n":{"docs":{},"df":0,"a":{"docs":{},"df":0,"m":{"docs":{"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.4142135623730952}},"df":1}},"u":{"docs":{},"df":0,"m":{"docs":{"hir.html#identifiers-in-the-hir":{"tf":1.0}},"df":1}}},"_":{"docs":{},"df":0,"v":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{"variance.html#dependency-graph-management":{"tf":1.7320508075688773}},"df":1}}}}},"s":{"docs":{},"df":0,".":{"docs":{},"df":0,"i":{"docs":{},"df":0,"o":{"docs":{"conventions.html#using-crates-from-cratesio":{"tf":1.7320508075688773},"conventions.html#formatting-and-the-tidy-script":{"tf":1.0}},"df":2}}},"t":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.0}},"df":1}}}}}},"w":{"docs":{},"df":0,"l":{"docs":{"rustdoc.html#from-crate-to-clean":{"tf":1.7320508075688773},"appendix/code-index.html#appendix-d-code-index":{"tf":1.0}},"df":2}},"s":{"docs":{},"df":0,"h":{"docs":{"appendix/glossary.html#appendix-c-glossary":{"tf":1.0},"compiler-debugging.html#expensive-operations-in-logs":{"tf":1.0},"compiler-debugging.html#debugging-llvm":{"tf":1.4142135623730952}},"df":3}}},"u":{"docs":{},"df":0,"c":{"docs":{},"df":0,"i":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{"traits/goals-and-clauses.html#domain-goals":{"tf":1.0},"rustdoc.html#from-soup-to-nuts":{"tf":1.0}},"df":2}}}}},"o":{"docs":{},"df":0,"s":{"docs":{},"df":0,"s":{"docs":{"traits/lowering-rules.html#rule-names-and-cross-references":{"tf":1.4142135623730952},"rustdoc.html#dotting-is-and-crossing-ts":{"tf":1.4142135623730952}},"df":2}}},"e":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{"rustc-driver.html#the-rustc-driver":{"tf":1.0},"conventions.html#copyright-notice":{"tf":1.0},"traits/associated-types.html#projection-equality":{"tf":1.0},"traits/canonicalization.html#canonicalizing-the-query-result":{"tf":1.4142135623730952},"appendix/background.html#what-is-a-free-region-or-a-free-variable-what-about-bound-region":{"tf":1.0},"the-parser.html#the-parser":{"tf":1.0},"mir/index.html#key-mir-vocabulary":{"tf":1.0},"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.4142135623730952},"rustdoc.html#the-walking-tour-of-rustdoc":{"tf":1.4142135623730952},"mir/regionck.html#universes-and-skolemized-region-elements":{"tf":1.0},"traits/lowering-rules.html#lowering-impls":{"tf":1.0},"how-to-build-and-run.html#create-a-configtoml":{"tf":1.4142135623730952},"appendix/glossary.html#appendix-c-glossary":{"tf":2.0},"method-lookup.html#candidate-assembly":{"tf":1.0},"appendix/stupid-stats.html#appendix-a-a-tutorial-on-creating-a-drop-in-replacement-for-rustc":{"tf":2.0},"traits/lowering-rules.html#trait-header":{"tf":1.0},"traits/hrtb.html#basic-matching-and-skolemization-leaks":{"tf":1.0},"mir/regionck.html#mir-based-region-checking-nll":{"tf":1.0},"traits/canonical-queries.html#examples":{"tf":1.0},"how-to-build-and-run.html#running-xpy-and-building-a-stage1-compiler":{"tf":1.0},"appendix/stupid-stats.html#overview-of-the-compilation-process":{"tf":1.0},"variance.html#trait-variance-and-vtable-resolution":{"tf":1.0},"traits/resolution.html#overview":{"tf":1.0},"mir/regionck.html#back-to-our-example":{"tf":1.4142135623730952},"miri.html#interpretation":{"tf":1.0},"incrcomp-debugging.html#tracking-down-incorrect-edges":{"tf":1.0},"mir/regionck.html#what-is-a-universe":{"tf":1.7320508075688773},"traits/canonicalization.html#processing-the-canonicalized-query-result":{"tf":1.0},"rustdoc.html#hot-potato":{"tf":1.0},"mir/passes.html#seeing-how-the-mir-changes-as-the-compiler-executes":{"tf":1.0},"traits/chalk-overview.html#rules":{"tf":1.0},"mir/visitor.html#mir-visitor":{"tf":1.0},"tests/adding.html#adding-new-tests":{"tf":1.0},"mir/borrowck.html#major-phases-of-the-borrow-checker":{"tf":1.0},"type-inference.html#creating-an-inference-context":{"tf":2.6457513110645909},"name-resolution.html#name-resolution":{"tf":1.0},"type-inference.html#inference-variables":{"tf":1.0},"query.html#how-the-compiler-executes-a-query":{"tf":1.4142135623730952},"tests/adding.html#comment-explaining-what-the-test-is-about":{"tf":1.0},"tests/adding.html#naming-your-test":{"tf":1.0},"rustdoc.html#from-soup-to-nuts":{"tf":1.0},"miri.html#miri":{"tf":1.4142135623730952},"traits/lowering-module.html#the-lowering-module-in-rustc":{"tf":1.0},"rustdoc.html#from-clean-to-crate":{"tf":1.0},"type-inference.html#extracting-region-constraints":{"tf":1.0},"compiletest.html#adding-a-new-test-file":{"tf":1.0},"high-level-overview.html#the-main-stages-of-compilation":{"tf":1.0},"mir/regionck.html#final-example":{"tf":1.0},"tests/intro.html#other-tests":{"tf":1.0},"traits/hrtb.html#higher-ranked-trait-obligations":{"tf":1.0},"traits/canonicalization.html#executing-the-query":{"tf":2.23606797749979},"how-to-build-and-run.html#creating-a-rustup-toolchain":{"tf":2.0},"const-eval.html#constant-evaluation":{"tf":1.0},"method-lookup.html#steps":{"tf":1.0}},"df":54,"i":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{"miri.html#miri":{"tf":1.0}},"df":1}}},"o":{"docs":{},"df":0,"r":{"docs":{"query.html#how-the-compiler-executes-a-query":{"tf":1.0}},"df":1}}}}}}},"u":{"docs":{"traits/canonical-queries.html#the-traditional-interactive-prolog-query":{"tf":1.4142135623730952},"type-inference.html#subtyping-obligations":{"tf":1.7320508075688773},"traits/lowering-to-logic.html#rust-traits-and-logic":{"tf":1.0},"appendix/glossary.html#appendix-c-glossary":{"tf":1.0},"traits/canonical-queries.html#examples":{"tf":4.69041575982343},"traits/caching.html#an-example":{"tf":1.0},"traits/canonicalization.html#canonicalization":{"tf":2.449489742783178},"traits/lowering-rules.html#associated-type-declarations":{"tf":1.7320508075688773},"traits/lowering-to-logic.html#type-checking-normal-functions":{"tf":1.4142135623730952},"traits/associated-types.html#projection-equality":{"tf":2.0},"variance.html#variance-and-associated-types":{"tf":2.0},"traits/goals-and-clauses.html#domain-goals":{"tf":1.0},"traits/resolution.html#selection-during-translation":{"tf":1.0},"type-inference.html#enforcing-equality--subtyping":{"tf":1.4142135623730952}},"df":14,"(":{"docs":{},"df":0,"v":{"docs":{},"df":0,"1":{"docs":{"mir/regionck.html#skolemization-and-outlives-constraints":{"tf":2.0}},"df":1},"2":{"docs":{"mir/regionck.html#skolemization-and-outlives-constraints":{"tf":1.4142135623730952}},"df":1}}},"2":{"docs":{"mir/regionck.html#what-is-a-universe":{"tf":3.1622776601683797},"mir/regionck.html#another-example":{"tf":1.0},"mir/regionck.html#final-example":{"tf":2.23606797749979}},"df":3},"p":{"docs":{"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.4142135623730952},"compiler-debugging.html#debugging-llvm":{"tf":1.4142135623730952},"rustdoc.html#from-clean-to-crate":{"tf":1.4142135623730952},"high-level-overview.html#crate-structure":{"tf":1.4142135623730952},"query.html#adding-a-new-kind-of-query":{"tf":1.0},"traits/goals-and-clauses.html#coinductive-goals":{"tf":1.4142135623730952},"variance.html#variance-and-object-types":{"tf":1.0},"appendix/code-index.html#appendix-d-code-index":{"tf":1.0},"hir.html#out-of-band-storage-and-the--crate--type":{"tf":1.0},"const-eval.html#constant-evaluation":{"tf":1.0},"conventions.html#how-to-structure-your-pr":{"tf":1.0},"appendix/background.html#what-is-a-free-region-or-a-free-variable-what-about-bound-region":{"tf":1.0},"appendix/stupid-stats.html#appendix-a-a-tutorial-on-creating-a-drop-in-replacement-for-rustc":{"tf":1.0},"mir/passes.html#stealing":{"tf":1.0},"tests/running.html#running-an-individual-test":{"tf":1.0},"rustdoc.html#the-walking-tour-of-rustdoc":{"tf":1.0},"traits/canonicalization.html#executing-the-query":{"tf":1.4142135623730952},"diag.html#span":{"tf":1.4142135623730952},"variance.html#dependency-graph-management":{"tf":1.0},"tests/intro.html#testing-on-emulators":{"tf":1.4142135623730952},"traits/resolution.html#major-concepts":{"tf":1.0},"traits/chalk-overview.html#rules":{"tf":1.0},"mir/regionck.html#subtyping-and-skolemization":{"tf":1.4142135623730952},"mir/regionck.html#final-example":{"tf":1.0},"how-to-build-and-run.html#create-a-configtoml":{"tf":1.0},"incremental-compilation.html#the-try-mark-green-algorithm":{"tf":1.0},"traits/canonical-queries.html#examples":{"tf":1.4142135623730952},"traits/specialization.html#specialization":{"tf":1.0},"how-to-build-and-run.html#other-xpy-commands":{"tf":1.4142135623730952},"traits/lowering-rules.html#function-and-constant-values":{"tf":1.0},"traits/hrtb.html#higher-ranked-trait-obligations":{"tf":1.0},"tests/adding.html#error-annotations":{"tf":1.0},"rustdoc.html#other-tricks-up-its-sleeve":{"tf":1.7320508075688773},"traits/canonicalization.html#canonicalizing-the-query-result":{"tf":1.4142135623730952},"rustdoc.html#cheat-sheet":{"tf":1.0},"query.html#queries-demand-driven-compilation":{"tf":1.0},"mir/regionck.html#extending-the-universal-regions-check":{"tf":1.0},"traits/associated-types.html#integration-with-unification":{"tf":1.0},"how-to-build-and-run.html#running-xpy-and-building-a-stage1-compiler":{"tf":1.0},"query.html#how-the-compiler-executes-a-query":{"tf":1.0},"traits/caching.html#an-example":{"tf":1.0},"mir/regionck.html#another-example":{"tf":1.0}},"df":42,"d":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{"tests/adding.html#editing-and-updating-the-reference-files":{"tf":1.4142135623730952},"compiler-debugging.html#debugging-the-compiler":{"tf":1.0},"method-lookup.html#method-lookup":{"tf":1.0}},"df":3}}},"o":{"docs":{},"df":0,"n":{"docs":{"rustc-driver.html#a-note-on-lifetimes":{"tf":1.0}},"df":1}},"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"m":{"docs":{"diag.html#edition-gated-lints":{"tf":1.0}},"df":1}},"a":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{"variance.html#variance-and-associated-types":{"tf":1.0},"variance.html#constraints":{"tf":1.4142135623730952}},"df":2}}}},"p":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"mir/regionck.html#skolemization-and-outlives-constraints":{"tf":1.0},"name-resolution.html#namespaces":{"tf":1.0},"type-inference.html#lexical-region-resolution":{"tf":1.0}},"df":3}}}},"n":{"docs":{},"df":0,"u":{"docs":{},"df":0,"s":{"docs":{"query.html#adding-a-new-kind-of-query":{"tf":1.0},"name-resolution.html#name-resolution":{"tf":1.0}},"df":2}},"s":{"docs":{},"df":0,"p":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"i":{"docs":{},"df":0,"f":{"docs":{},"df":0,"i":{"docs":{"diag.html#suggestions":{"tf":1.0}},"df":1}}}}}},"e":{"docs":{},"df":0,"t":{"docs":{"compiler-debugging.html#expensive-operations-in-logs":{"tf":1.0}},"df":1}},"a":{"docs":{},"df":0,"t":{"docs":{},"df":0,"i":{"docs":{},"df":0,"s":{"docs":{},"df":0,"f":{"docs":{},"df":0,"i":{"docs":{"traits/hrtb.html#basic-matching-and-skolemization-leaks":{"tf":1.0}},"df":1}}}}},"f":{"docs":{"miri.html#interpretation":{"tf":1.0},"miri.html#allocations":{"tf":1.0}},"df":2}},"o":{"docs":{},"df":0,"u":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{"mir/regionck.html#another-example":{"tf":1.0},"mir/regionck.html#final-example":{"tf":1.0}},"df":2}}}},"t":{"docs":{},"df":0,"a":{"docs":{},"df":0,"b":{"docs":{},"df":0,"l":{"docs":{"appendix/stupid-stats.html#appendix-a-a-tutorial-on-creating-a-drop-in-replacement-for-rustc":{"tf":1.0},"how-to-build-and-run.html#running-xpy-and-building-a-stage1-compiler":{"tf":1.0},"tests/adding.html#other-header-commands":{"tf":1.0},"rustc-driver.html#the-rustc-driver":{"tf":1.0}},"df":4}}}},"i":{"docs":{},"df":0,"z":{"docs":{"method-lookup.html#method-lookup":{"tf":1.0},"method-lookup.html#steps":{"tf":1.0}},"df":2}},"k":{"docs":{},"df":0,"o":{"docs":{},"df":0,"l":{"docs":{},"df":0,"e":{"docs":{},"df":0,"m":{"docs":{"traits/associated-types.html#integration-with-unification":{"tf":1.0}},"df":1}}}}}},"a":{"docs":{},"df":0,"m":{"docs":{},"df":0,"b":{"docs":{},"df":0,"i":{"docs":{},"df":0,"g":{"docs":{},"df":0,"u":{"docs":{"appendix/glossary.html#appendix-c-glossary":{"tf":1.0},"traits/canonical-queries.html#a-trait-query-in-rustc":{"tf":1.0},"traits/resolution.html#candidate-assembly":{"tf":1.4142135623730952}},"df":3}}}}}},"k":{"docs":{},"df":0,"n":{"docs":{},"df":0,"o":{"docs":{},"df":0,"w":{"docs":{},"df":0,"n":{"docs":{"tests/intro.html#testing-on-emulators":{"tf":1.0},"variance.html#variance-and-associated-types":{"tf":1.0},"variance.html#variance-and-object-types":{"tf":1.4142135623730952},"mir/regionck.html#representing-the-values-of-a-region-variable":{"tf":1.0},"mir/regionck.html#subtyping-and-skolemization":{"tf":1.7320508075688773},"how-to-build-and-run.html#creating-a-rustup-toolchain":{"tf":1.7320508075688773},"mir/regionck.html#universes-and-skolemized-region-elements":{"tf":1.0},"appendix/glossary.html#appendix-c-glossary":{"tf":1.0},"compiler-debugging.html#getting-a-backtrace":{"tf":1.0},"compiler-debugging.html#getting-a-backtrace-for-errors":{"tf":1.7320508075688773}},"df":10}}}}},"e":{"docs":{},"df":0,"v":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{},"df":0,"u":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"d":{"docs":{},"df":0,"(":{"docs":{},"df":0,"f":{"docs":{},"df":0,"o":{"docs":{},"df":0,"o":{"docs":{"miri.html#miri":{"tf":1.0}},"df":1}}}}}}}}}}}},"x":{"docs":{},"df":0,"t":{"docs":{},"df":0,"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"d":{"docs":{},"df":0,".":{"docs":{},"df":0,"l":{"docs":{"compiler-debugging.html#debugging-llvm":{"tf":1.0}},"df":1}}}}}}}}},"p":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{"compiler-debugging.html#getting-a-backtrace-for-errors":{"tf":1.0}},"df":1,"e":{"docs":{},"df":0,"d":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{"compiler-debugging.html#getting-a-backtrace-for-errors":{"tf":1.0}},"df":1}}}}}}},"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{"appendix/stupid-stats.html#overview-of-the-compilation-process":{"tf":1.0}},"df":1}}}}}},"c":{"docs":{},"df":0,"h":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"g":{"docs":{"mir/regionck.html#skolemization-and-outlives-constraints":{"tf":1.0}},"df":1}}}},"o":{"docs":{},"df":0,"v":{"docs":{"type-inference.html#inference-variables":{"tf":1.0}},"df":1},"n":{"docs":{},"df":0,"d":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{"tests/adding.html#normalization":{"tf":1.0}},"df":1}}}}},"l":{"docs":{},"df":0,"e":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{"tests/intro.html#testing-on-emulators":{"tf":1.0},"ty.html#allocating-and-working-with-types":{"tf":1.0}},"df":2}}}}},"b":{"docs":{},"df":0,"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"k":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{"rustdoc.html#from-soup-to-nuts":{"tf":1.0}},"df":1}}}}},"o":{"docs":{},"df":0,"u":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{"traits/resolution.html#selection":{"tf":1.0},"traits/canonical-queries.html#examples":{"tf":1.4142135623730952},"traits/caching.html#an-example":{"tf":1.4142135623730952},"traits/canonical-queries.html#a-trait-query-in-rustc":{"tf":1.0},"traits/resolution.html#candidate-assembly":{"tf":1.0},"traits/canonicalization.html#canonicalizing-the-query":{"tf":1.4142135623730952},"traits/canonicalization.html#canonicalization":{"tf":1.7320508075688773},"type-inference.html#subtyping-obligations":{"tf":1.0}},"df":8}}}}},"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"o":{"docs":{},"df":0,"l":{"docs":{},"df":0,"v":{"docs":{"type-inference.html#inference-variables":{"tf":1.0}},"df":1}}}}}},"t":{"docs":{},"df":0,"i":{"docs":{},"df":0,"l":{"docs":{"conventions.html#use-todo-comments-for-things-you-dont-want-to-forget":{"tf":1.0},"compiler-debugging.html#expensive-operations-in-logs":{"tf":1.0},"appendix/stupid-stats.html#what-next":{"tf":1.0},"query.html#queries-demand-driven-compilation":{"tf":1.0},"mir/index.html#key-mir-vocabulary":{"tf":1.0},"high-level-overview.html#the-main-stages-of-compilation":{"tf":1.4142135623730952},"miri.html#miri":{"tf":1.0},"variance.html#variance-and-object-types":{"tf":1.0},"type-inference.html#lexical-region-resolution":{"tf":1.0},"traits/canonical-queries.html#the-traditional-interactive-prolog-query":{"tf":1.0},"variance.html#the-algorithm":{"tf":1.0},"method-lookup.html#steps":{"tf":1.0},"miri.html#interpretation":{"tf":1.0}},"df":13}}},"n":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"c":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"s":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{"compiletest.html#adding-a-new-header-command":{"tf":1.0}},"df":1}}}}}}}}},"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"s":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{"rustc-driver.html#a-note-on-lifetimes":{"tf":1.0},"compiler-debugging.html#logging-etiquette":{"tf":1.0}},"df":2,"l":{"docs":{},"df":0,"i":{"docs":{"rustc-driver.html#the-rustc-driver":{"tf":1.0}},"df":1}}}}}}}}}}},"w":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{"mir/passes.html#implementing-and-registering-a-pass":{"tf":1.4142135623730952},"mir/index.html#key-mir-vocabulary":{"tf":1.7320508075688773},"mir/visitor.html#mir-visitor":{"tf":1.0}},"df":3}}},"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"p":{"docs":{},"df":0,"_":{"docs":{},"df":0,"u":{"docs":{},"df":0,"6":{"docs":{},"df":0,"4":{"docs":{"miri.html#datastructures":{"tf":1.0}},"df":1}}}}}}}},"p":{"docs":{},"df":0,"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"v":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{"traits/canonical-queries.html#examples":{"tf":1.0}},"df":1}}}},"e":{"docs":{},"df":0,"d":{"docs":{},"df":0,"i":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{"appendix/stupid-stats.html#appendix-a-a-tutorial-on-creating-a-drop-in-replacement-for-rustc":{"tf":1.0}},"df":1}}}}}},"a":{"docs":{},"df":0,"c":{"docs":{},"df":0,"k":{"docs":{"tests/intro.html#other-tests":{"tf":1.0}},"df":1}}}},"f":{"docs":{},"df":0,"a":{"docs":{},"df":0,"m":{"docs":{},"df":0,"i":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{"compiletest.html#introduction":{"tf":1.0}},"df":1}}}}}}},"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"t":{"docs":{},"df":0,"u":{"docs":{},"df":0,"n":{"docs":{"appendix/stupid-stats.html#compilercalls":{"tf":1.0}},"df":1}}}}}},"d":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"compiletest.html#adding-a-new-header-command":{"tf":1.0},"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.0},"tests/running.html#running-tests":{"tf":1.0},"conventions.html#copyright-notice":{"tf":1.0},"tests/intro.html#other-tests":{"tf":1.0},"traits/lowering-to-logic.html#rust-traits-and-logic":{"tf":1.0},"tests/intro.html#testing-on-emulators":{"tf":1.4142135623730952},"traits/lowering-to-logic.html#type-checking-normal-functions":{"tf":1.0},"compiletest.html#adding-a-new-test-file":{"tf":1.0},"rustdoc.html#the-walking-tour-of-rustdoc":{"tf":1.0},"high-level-overview.html#crate-structure":{"tf":1.0},"traits/chalk-overview.html#an-overview-of-chalk":{"tf":1.0},"tests/running.html#running-an-individual-test":{"tf":1.0}},"df":13,"l":{"docs":{},"df":0,"i":{"docs":{"appendix/background.html#what-is-a-control-flow-graph":{"tf":1.0}},"df":1}},"s":{"docs":{},"df":0,"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{"mir/index.html#key-mir-vocabulary":{"tf":1.0}},"df":1}}},"t":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{"ty.html#the-tcx-and-how-it-uses-lifetimes":{"tf":1.0},"traits/hrtb.html#basic-matching-and-skolemization-leaks":{"tf":1.0},"traits/chalk-overview.html#parsing":{"tf":1.0},"appendix/glossary.html#appendix-c-glossary":{"tf":1.0}},"df":4}}},"o":{"docs":{},"df":0,"o":{"docs":{},"df":0,"d":{"docs":{"conventions.html#how-to-structure-your-pr":{"tf":1.0}},"df":1}}}}}}},"o":{"docs":{"type-inference.html#snapshots":{"tf":1.0}},"df":1}},"i":{"docs":{},"df":0,"q":{"docs":{},"df":0,"u":{"docs":{"appendix/glossary.html#appendix-c-glossary":{"tf":1.0}},"df":1}},"t":{"docs":{"mir/index.html#key-mir-vocabulary":{"tf":1.0},"how-to-build-and-run.html#create-a-configtoml":{"tf":1.0},"query.html#queries-demand-driven-compilation":{"tf":1.4142135623730952},"high-level-overview.html#the-main-stages-of-compilation":{"tf":1.0},"appendix/glossary.html#appendix-c-glossary":{"tf":2.23606797749979},"traits/lowering-module.html#the--program_clauses_for--query":{"tf":1.0},"traits/lowering-module.html#unit-tests":{"tf":2.0},"macro-expansion.html#example":{"tf":1.0},"compiler-debugging.html#debugging-llvm":{"tf":1.4142135623730952}},"df":9,"s":{"docs":{},"df":0,"=":{"docs":{},"df":0,"1":{"docs":{"compiler-debugging.html#debugging-llvm":{"tf":1.7320508075688773}},"df":1}}},"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{"tests/intro.html#other-tests":{"tf":1.4142135623730952}},"df":1}}}}},"v":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"s":{"docs":{"mir/regionck.html#universes-and-skolemized-region-elements":{"tf":2.6457513110645909},"appendix/background.html#what-is-universally-quantified-what-about-existentially-quantified":{"tf":1.4142135623730952},"mir/regionck.html#another-example":{"tf":1.0},"mir/regionck.html#back-to-our-example":{"tf":2.0},"mir/regionck.html#skolemization-and-universes":{"tf":1.4142135623730952},"mir/regionck.html#extending-the-universal-regions-check":{"tf":2.23606797749979},"mir/regionck.html#what-is-a-universe":{"tf":5.656854249492381},"mir/regionck.html#skolemization-and-outlives-constraints":{"tf":2.449489742783178},"mir/regionck.html#mir-based-region-checking-nll":{"tf":1.0},"traits/chalk-overview.html#lowering":{"tf":1.4142135623730952},"mir/regionck.html#universal-regions":{"tf":1.4142135623730952},"traits/goals-and-clauses.html#goals-and-clauses-meta-structure":{"tf":1.0},"traits/lowering-to-logic.html#type-checking-generic-functions-beyond-horn-clauses":{"tf":1.0},"mir/regionck.html#representing-the-values-of-a-region-variable":{"tf":1.4142135623730952},"traits/bibliography.html#bibliography":{"tf":1.0},"mir/regionck.html#subtyping-and-skolemization":{"tf":1.0},"appendix/glossary.html#appendix-c-glossary":{"tf":1.7320508075688773}},"df":17,"a":{"docs":{},"df":0,"l":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"g":{"docs":{},"df":0,"i":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{"mir/regionck.html#universal-regions":{"tf":1.0}},"df":1}}}}}}}}}}}},"f":{"docs":{"type-inference.html#inference-variables":{"tf":1.4142135623730952},"traits/associated-types.html#integration-with-unification":{"tf":2.6457513110645909},"traits/resolution.html#selection":{"tf":1.0},"traits/chalk-overview.html#blog-posts":{"tf":1.4142135623730952},"type-inference.html#enforcing-equality--subtyping":{"tf":1.0},"traits/associated-types.html#skolemized-associated-types":{"tf":1.0},"traits/associated-types.html#equality-and-associated-types":{"tf":1.0},"type-inference.html#region-constraints":{"tf":1.4142135623730952},"traits/resolution.html#candidate-assembly":{"tf":1.7320508075688773}},"df":9,"y":{"docs":{},"df":0,"(":{"docs":{},"df":0,"a":{"docs":{"traits/associated-types.html#integration-with-unification":{"tf":1.0}},"df":1}}},"i":{"docs":{"traits/canonicalization.html#executing-the-query":{"tf":1.0},"traits/canonicalization.html#processing-the-canonicalized-query-result":{"tf":1.4142135623730952},"type-inference.html#subtyping-obligations":{"tf":1.0},"traits/canonical-queries.html#examples":{"tf":1.0},"type-inference.html#region-constraints":{"tf":1.0},"method-lookup.html#method-lookup":{"tf":1.0},"type-inference.html#inference-variables":{"tf":1.7320508075688773},"traits/canonical-queries.html#the-traditional-interactive-prolog-query":{"tf":1.0},"traits/associated-types.html#integration-with-unification":{"tf":1.7320508075688773},"traits/resolution.html#confirmation":{"tf":1.0},"traits/resolution.html#candidate-assembly":{"tf":2.449489742783178},"traits/caching.html#an-example":{"tf":1.4142135623730952},"traits/canonicalization.html#canonicalizing-the-query-result":{"tf":1.0}},"df":13}},"m":{"docs":{},"df":0,"p":{"docs":{},"df":0,"l":{"docs":{"conventions.html#use-todo-comments-for-things-you-dont-want-to-forget":{"tf":1.0}},"df":1}}},"n":{"docs":{},"df":0,"d":{"docs":{"rustdoc.html#hot-potato":{"tf":1.0}},"df":1}}},"l":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"s":{"docs":{"traits/canonicalization.html#canonicalization":{"tf":1.0},"ty.html#allocating-and-working-with-types":{"tf":1.0},"compiler-debugging.html#getting-logging-output":{"tf":1.0},"how-to-build-and-run.html#running-xpy-and-building-a-stage1-compiler":{"tf":1.0},"traits/specialization.html#specialization":{"tf":1.0},"variance.html#variance-and-associated-types":{"tf":1.0},"compiler-debugging.html#expensive-operations-in-logs":{"tf":1.4142135623730952},"conventions.html#prefer-exhaustive-matches":{"tf":1.0}},"df":8}}},"i":{"docs":{},"df":0,"k":{"docs":{"macro-expansion.html#example":{"tf":1.0},"diag.html#error-messages":{"tf":1.0},"incrcomp-debugging.html#tracking-down-incorrect-edges":{"tf":1.0},"rustdoc.html#hot-potato":{"tf":1.0}},"df":4}}}},"1":{"docs":{"mir/regionck.html#final-example":{"tf":1.0},"mir/regionck.html#what-is-a-universe":{"tf":3.4641016151377546}},"df":2,"6":{"docs":{"tests/adding.html#normalization":{"tf":1.0}},"df":1}},"3":{"docs":{"mir/regionck.html#universes-and-skolemized-region-elements":{"tf":1.0}},"df":1,"2":{"docs":{"traits/canonical-queries.html#examples":{"tf":1.4142135623730952},"mir/regionck.html#final-example":{"tf":4.898979485566356},"traits/goals-and-clauses.html#domain-goals":{"tf":1.4142135623730952},"traits/chalk-overview.html#lowering":{"tf":1.4142135623730952},"ty.html#beyond-types-other-kinds-of-arena-allocated-data-structures":{"tf":1.0},"type-inference.html#a-note-on-terminology":{"tf":1.0},"traits/canonical-queries.html#canonical-queries":{"tf":1.0},"mir/regionck.html#what-is-a-universe":{"tf":1.7320508075688773},"mir/regionck.html#skolemization-and-universes":{"tf":1.4142135623730952},"mir/regionck.html#subtyping-and-skolemization":{"tf":2.449489742783178},"traits/associated-types.html#associated-type-projection-and-normalization":{"tf":1.0},"name-resolution.html#namespaces":{"tf":1.0},"mir/regionck.html#back-to-our-example":{"tf":1.4142135623730952},"mir/regionck.html#another-example":{"tf":4.0},"appendix/glossary.html#appendix-c-glossary":{"tf":1.7320508075688773},"appendix/background.html#what-is-a-free-region-or-a-free-variable-what-about-bound-region":{"tf":1.4142135623730952},"type-inference.html#trying-equality":{"tf":1.4142135623730952},"traits/associated-types.html#integration-with-unification":{"tf":1.0},"mir/regionck.html#mir-based-region-checking-nll":{"tf":1.0}},"df":19}},"0":{"docs":{"mir/regionck.html#skolemization-and-outlives-constraints":{"tf":1.0},"mir/regionck.html#what-is-a-universe":{"tf":3.1622776601683797},"mir/regionck.html#back-to-our-example":{"tf":1.0}},"df":3},"s":{"docs":{"compiler-debugging.html#getting-a-backtrace":{"tf":1.0},"tests/running.html#running-tests":{"tf":1.4142135623730952},"tests/intro.html#other-tests":{"tf":1.0},"rustdoc.html#the-walking-tour-of-rustdoc":{"tf":1.7320508075688773},"ty.html#the-tcx-and-how-it-uses-lifetimes":{"tf":3.0},"compiler-debugging.html#getting-logging-output":{"tf":1.7320508075688773},"traits/canonical-queries.html#a-trait-query-in-rustc":{"tf":1.4142135623730952},"variance.html#the-algorithm":{"tf":1.7320508075688773},"incremental-compilation.html#the-basic-algorithm":{"tf":1.0},"traits/resolution.html#overview":{"tf":1.4142135623730952},"tests/intro.html#testing-infrastructure":{"tf":1.4142135623730952},"ty.html#allocating-and-working-with-types":{"tf":2.0},"tests/intro.html#testing-with-docker-images":{"tf":1.4142135623730952},"mir/regionck.html#skolemization-and-outlives-constraints":{"tf":1.0},"ty.html#beyond-types-other-kinds-of-arena-allocated-data-structures":{"tf":1.0},"mir/regionck.html#another-example":{"tf":1.0},"rustdoc.html#from-soup-to-nuts":{"tf":1.0},"miri.html#miri":{"tf":2.23606797749979},"variance.html#variance-and-associated-types":{"tf":1.0},"traits/goals-and-clauses.html#coinductive-goals":{"tf":1.7320508075688773},"mir/passes.html#stealing":{"tf":1.7320508075688773},"tests/adding.html#header-commands-configuring-rustc":{"tf":1.0},"mir/borrowck.html#mir-borrow-check":{"tf":1.4142135623730952},"mir/index.html#key-mir-vocabulary":{"tf":2.0},"tests/adding.html#what-kind-of-test-should-i-add":{"tf":2.0},"appendix/background.html#what-is-a-control-flow-graph":{"tf":1.7320508075688773},"diag.html#suggestions":{"tf":2.8284271247461905},"hir.html#hir-bodies":{"tf":1.0},"mir/regionck.html#mir-based-region-checking-nll":{"tf":1.0},"type-inference.html#snapshots":{"tf":1.7320508075688773},"mir/regionck.html#what-is-a-universe":{"tf":1.4142135623730952},"high-level-overview.html#the-main-stages-of-compilation":{"tf":1.0},"traits/associated-types.html#associated-type-projection-and-normalization":{"tf":1.4142135623730952},"incrcomp-debugging.html#dumping-the-graph":{"tf":1.0},"type-inference.html#creating-an-inference-context":{"tf":1.0},"macro-expansion.html#example":{"tf":1.4142135623730952},"variance.html#variance-of-type-and-lifetime-parameters":{"tf":2.23606797749979},"type-inference.html#extracting-region-constraints":{"tf":1.0},"how-to-build-and-run.html#running-xpy-and-building-a-stage1-compiler":{"tf":2.449489742783178},"type-inference.html#lexical-region-resolution":{"tf":1.0},"traits/lowering-rules.html#trait-header":{"tf":1.4142135623730952},"mir/regionck.html#representing-the-values-of-a-region-variable":{"tf":1.0},"traits/index.html#trait-solving-new-style":{"tf":1.4142135623730952},"macro-expansion.html#macro-expansion":{"tf":1.0},"query.html#how-the-compiler-executes-a-query":{"tf":1.7320508075688773},"mir/borrowck.html#major-phases-of-the-borrow-checker":{"tf":1.0},"traits/canonicalization.html#canonicalization":{"tf":1.0},"rustdoc.html#from-crate-to-clean":{"tf":1.7320508075688773},"macro-expansion.html#the-macro-parser":{"tf":3.0},"name-resolution.html#name-resolution":{"tf":1.0},"tests/adding.html#comment-explaining-what-the-test-is-about":{"tf":1.7320508075688773},"compiler-debugging.html#debugging-llvm":{"tf":2.0},"traits/resolution.html#major-concepts":{"tf":1.0},"traits/specialization.html#specialization":{"tf":2.449489742783178},"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":3.0},"traits/lowering-rules.html#associated-type-values":{"tf":1.0},"traits/lowering-to-logic.html#type-checking-generic-functions-beyond-horn-clauses":{"tf":1.7320508075688773},"tests/adding.html#normalization":{"tf":2.0},"name-resolution.html#overall-strategy":{"tf":1.4142135623730952},"traits/associated-types.html#integration-with-unification":{"tf":1.0},"conventions.html#how-to-structure-your-pr":{"tf":1.4142135623730952},"tests/adding.html#adding-new-tests":{"tf":1.0},"appendix/stupid-stats.html#the-driver-customisation-apis":{"tf":1.4142135623730952},"hir.html#the-hir":{"tf":1.0},"appendix/glossary.html#appendix-c-glossary":{"tf":4.0},"rustdoc.html#dotting-is-and-crossing-ts":{"tf":1.4142135623730952},"hir.html#identifiers-in-the-hir":{"tf":1.4142135623730952},"mir/passes.html#mir-passes":{"tf":1.4142135623730952},"conventions.html#formatting-and-the-tidy-script":{"tf":1.0},"tests/adding.html#revisions":{"tf":1.4142135623730952},"rustdoc.html#cheat-sheet":{"tf":2.8284271247461905},"traits/caching.html#where-clauses-and-the-local-vs-global-cache":{"tf":2.23606797749979},"traits/associated-types.html#projection-equality":{"tf":1.4142135623730952},"the-parser.html#the-parser":{"tf":1.0},"variance.html#addendum-variance-on-traits":{"tf":1.7320508075688773},"name-resolution.html#todo":{"tf":1.7320508075688773},"mir/visitor.html#traversal":{"tf":1.0},"traits/lowering-to-logic.html#lowering-to-logic":{"tf":1.0},"traits/chalk-overview.html#intermediate-representation-ir":{"tf":1.0},"appendix/stupid-stats.html#what-next":{"tf":2.0},"conventions.html#using-crates-from-cratesio":{"tf":1.7320508075688773},"tests/intro.html#testing-on-emulators":{"tf":1.0},"compiler-debugging.html#expensive-operations-in-logs":{"tf":1.7320508075688773},"high-level-overview.html#crate-structure":{"tf":1.7320508075688773},"traits/lowering-module.html#the--program_clauses_for--query":{"tf":1.0},"tests/adding.html#ignoring-tests":{"tf":1.0},"mir/passes.html#implementing-and-registering-a-pass":{"tf":1.4142135623730952},"diag.html#span":{"tf":1.4142135623730952},"compiler-debugging.html#getting-a-backtrace-for-errors":{"tf":1.0},"traits/hrtb.html#basic-matching-and-skolemization-leaks":{"tf":1.0},"diag.html#declaring-a-lint":{"tf":2.23606797749979},"appendix/stupid-stats.html#appendix-a-a-tutorial-on-creating-a-drop-in-replacement-for-rustc":{"tf":2.23606797749979},"rustc-driver.html#the-rustc-driver":{"tf":1.7320508075688773},"miri.html#datastructures":{"tf":1.4142135623730952},"diag.html#error-messages":{"tf":2.0},"appendix/stupid-stats.html#compilercontroller":{"tf":1.4142135623730952},"traits/canonicalization.html#canonicalizing-the-query-result":{"tf":1.4142135623730952},"type-inference.html#enforcing-equality--subtyping":{"tf":1.4142135623730952},"how-to-build-and-run.html#other-xpy-commands":{"tf":1.4142135623730952},"traits/goals-and-clauses.html#domain-goals":{"tf":1.4142135623730952},"ty.html#import-conventions":{"tf":1.4142135623730952},"incrcomp-debugging.html#testing-the-dependency-graph":{"tf":1.4142135623730952},"conventions.html#copyright-notice":{"tf":1.0},"appendix/stupid-stats.html#overview-of-the-compilation-process":{"tf":2.449489742783178},"query.html#cycles-between-queries":{"tf":2.23606797749979},"conventions.html#prefer-exhaustive-matches":{"tf":1.4142135623730952},"type-inference.html#region-constraints":{"tf":1.0},"variance.html#trait-variance-and-vtable-resolution":{"tf":1.7320508075688773},"rustdoc.html#hot-potato":{"tf":1.4142135623730952},"how-to-build-and-run.html#create-a-configtoml":{"tf":1.4142135623730952},"conventions.html#use-todo-comments-for-things-you-dont-want-to-forget":{"tf":2.0},"type-inference.html#a-note-on-terminology":{"tf":1.4142135623730952},"traits/lowering-rules.html#notation":{"tf":1.4142135623730952},"traits/resolution.html#candidate-assembly":{"tf":1.7320508075688773},"rustc-driver.html#a-note-on-lifetimes":{"tf":2.0},"rustdoc.html#from-clean-to-crate":{"tf":1.0},"method-lookup.html#candidate-assembly":{"tf":1.0},"mir/index.html#the-mir-mid-level-ir":{"tf":1.0},"const-eval.html#constant-evaluation":{"tf":1.7320508075688773},"incremental-compilation.html#the-try-mark-green-algorithm":{"tf":1.0},"traits/lowering-rules.html#lowering-where-clauses":{"tf":2.0},"param_env.html#parameter-environment":{"tf":2.23606797749979},"type-checking.html#type-collection":{"tf":1.0},"tests/adding.html#naming-your-test":{"tf":1.0},"tests/adding.html#other-header-commands":{"tf":1.0},"traits/associated-types.html#skolemized-associated-types":{"tf":1.0},"how-to-build-and-run.html#how-to-build-the-compiler-and-run-what-you-built":{"tf":1.0},"diag.html#lint-groups":{"tf":1.4142135623730952},"compiletest.html#adding-a-new-header-command":{"tf":1.7320508075688773},"compiletest.html#implementing-the-behavior-change":{"tf":1.0},"traits/chalk-overview.html#lowering":{"tf":1.4142135623730952},"query.html#adding-a-new-kind-of-query":{"tf":3.0},"tests/running.html#running-a-subset-of-the-test-suites":{"tf":1.0},"hir.html#the-hir-map":{"tf":1.7320508075688773},"appendix/code-index.html#appendix-d-code-index":{"tf":2.449489742783178}},"df":135,"u":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{"mir/passes.html#seeing-how-the-mir-changes-as-the-compiler-executes":{"tf":1.0},"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.4142135623730952},"diag.html#error-messages":{"tf":1.0},"appendix/stupid-stats.html#compilercalls":{"tf":1.0},"miri.html#miri":{"tf":1.0},"the-parser.html#the-parser":{"tf":1.0},"appendix/glossary.html#appendix-c-glossary":{"tf":1.0},"name-resolution.html#namespaces":{"tf":1.0},"incrcomp-debugging.html#dumping-the-graph":{"tf":1.4142135623730952},"conventions.html#how-to-structure-your-pr":{"tf":1.0},"tests/running.html#running-a-subset-of-the-test-suites":{"tf":1.4142135623730952},"rustdoc.html#from-crate-to-clean":{"tf":1.0},"miri.html#datastructures":{"tf":1.0},"query.html#how-the-compiler-executes-a-query":{"tf":1.0}},"df":14}}},"a":{"docs":{},"df":0,"b":{"docs":{},"df":0,"l":{"docs":{"variance.html#trait-variance-and-vtable-resolution":{"tf":1.0},"name-resolution.html#scopes-and-ribs":{"tf":1.0},"ty.html#the-tcx-and-how-it-uses-lifetimes":{"tf":1.0},"traits/hrtb.html#higher-ranked-trait-obligations":{"tf":1.0}},"df":4}},"g":{"docs":{"ty.html#the-tcx-and-how-it-uses-lifetimes":{"tf":1.0},"tests/adding.html#normalization":{"tf":1.0},"tests/adding.html#other-header-commands":{"tf":1.0}},"df":3}},"i":{"docs":{},"df":0,"z":{"docs":{"traits/resolution.html#confirmation":{"tf":2.0},"tests/adding.html#revisions":{"tf":1.0},"traits/lowering-to-logic.html#type-checking-normal-functions":{"tf":2.0},"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.0},"traits/caching.html#an-example":{"tf":2.449489742783178},"traits/resolution.html#candidate-assembly":{"tf":2.23606797749979},"miri.html#miri":{"tf":2.449489742783178},"traits/lowering-to-logic.html#rust-traits-and-logic":{"tf":2.0}},"df":8}},"e":{"docs":{},"df":0,"r":{"docs":{"type-checking.html#type-collection":{"tf":1.0},"traits/associated-types.html#associated-type-projection-and-normalization":{"tf":1.0},"rustc-driver.html#the-rustc-driver":{"tf":1.4142135623730952},"high-level-overview.html#the-main-stages-of-compilation":{"tf":1.0},"type-inference.html#type-inference":{"tf":1.0},"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.4142135623730952},"traits/associated-types.html#skolemized-associated-types":{"tf":1.0},"how-to-build-and-run.html#how-to-build-the-compiler-and-run-what-you-built":{"tf":1.0},"macro-expansion.html#the-macro-parser":{"tf":1.0},"rustc-driver.html#a-note-on-lifetimes":{"tf":1.0},"query.html#cycles-between-queries":{"tf":1.4142135623730952},"diag.html#lint-groups":{"tf":1.0},"mir/index.html#key-mir-vocabulary":{"tf":1.0},"appendix/stupid-stats.html#appendix-a-a-tutorial-on-creating-a-drop-in-replacement-for-rustc":{"tf":1.0},"appendix/glossary.html#appendix-c-glossary":{"tf":1.0}},"df":15,"'":{"docs":{"mir/index.html#key-mir-vocabulary":{"tf":1.0},"appendix/glossary.html#appendix-c-glossary":{"tf":1.0},"appendix/code-index.html#appendix-d-code-index":{"tf":1.0}},"df":3}},"a":{"docs":{},"df":0,"b":{"docs":{},"df":0,"l":{"docs":{"rustdoc.html#cheat-sheet":{"tf":1.0}},"df":1}}},"l":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"s":{"docs":{"traits/goals-and-clauses.html#coinductive-goals":{"tf":1.0}},"df":1}}}}}},"i":{"docs":{"tests/intro.html#compiletest-test-suites":{"tf":1.4142135623730952},"traits/lowering-module.html#unit-tests":{"tf":1.0},"tests/adding.html#tests-that-do-not-result-in-compile-errors":{"tf":1.4142135623730952},"tests/adding.html#guide-to-the-ui-tests":{"tf":1.7320508075688773},"tests/running.html#running-a-subset-of-the-test-suites":{"tf":1.0},"tests/adding.html#other-header-commands":{"tf":1.4142135623730952},"tests/adding.html#what-kind-of-test-should-i-add":{"tf":2.0},"tests/adding.html#adding-new-tests":{"tf":1.0}},"df":8,"/":{"docs":{},"df":0,"t":{"docs":{},"df":0,"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"s":{"docs":{},"df":0,"m":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"/":{"docs":{},"df":0,"m":{"docs":{},"df":0,"a":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,".":{"docs":{},"df":0,"r":{"docs":{"tests/adding.html#normalization":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}},"h":{"docs":{},"df":0,"e":{"docs":{},"df":0,"l":{"docs":{},"df":0,"l":{"docs":{},"df":0,"o":{"docs":{},"df":0,"_":{"docs":{},"df":0,"w":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"l":{"docs":{},"df":0,"d":{"docs":{},"df":0,"/":{"docs":{},"df":0,"m":{"docs":{},"df":0,"a":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,".":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"d":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"r":{"docs":{"tests/adding.html#guide-to-the-ui-tests":{"tf":1.0}},"df":1}}},"o":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{"tests/adding.html#guide-to-the-ui-tests":{"tf":1.0}},"df":1}}}}}},"r":{"docs":{"tests/adding.html#guide-to-the-ui-tests":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}}},"6":{"docs":{},"df":0,"4":{"docs":{"miri.html#datastructures":{"tf":1.0}},"df":1}},"=":{"docs":{},"df":0,"[":{"docs":{},"df":0,"t":{"docs":{"method-lookup.html#candidate-assembly":{"tf":1.0}},"df":1}},"b":{"docs":{},"df":0,"o":{"docs":{},"df":0,"x":{"docs":{},"df":0,"<":{"docs":{},"df":0,"t":{"docs":{"method-lookup.html#candidate-assembly":{"tf":1.0}},"df":1}}}}},"u":{"docs":{},"df":0,"s":{"docs":{"traits/resolution.html#selection-during-translation":{"tf":1.0}},"df":1}}},"f":{"docs":{},"df":0,"c":{"docs":{"method-lookup.html#method-lookup":{"tf":1.0},"appendix/glossary.html#appendix-c-glossary":{"tf":1.0}},"df":2}},"l":{"docs":{},"df":0,"t":{"docs":{},"df":0,"i":{"docs":{},"df":0,"m":{"docs":{"query.html#cycles-between-queries":{"tf":1.0},"query.html#how-the-compiler-executes-a-query":{"tf":1.0},"type-inference.html#extracting-region-constraints":{"tf":1.0},"traits/chalk-overview.html#testing":{"tf":1.0},"high-level-overview.html#the-main-stages-of-compilation":{"tf":1.4142135623730952},"variance.html#dependency-graph-management":{"tf":1.0},"tests/intro.html#compiletest-test-suites":{"tf":1.0}},"df":7}}}},"t":{"docs":{},"df":0,"i":{"docs":{},"df":0,"l":{"docs":{"diag.html#error-messages":{"tf":1.0}},"df":1}}},"8":{"docs":{"miri.html#miri":{"tf":1.0},"traits/goals-and-clauses.html#domain-goals":{"tf":1.7320508075688773}},"df":2}},"e":{"docs":{"traits/canonicalization.html#executing-the-query":{"tf":1.7320508075688773},"traits/canonicalization.html#canonicalizing-the-query-result":{"tf":2.0},"diag.html#declaring-a-lint":{"tf":1.0},"traits/resolution.html#major-concepts":{"tf":1.4142135623730952},"variance.html#the-algorithm":{"tf":1.0}},"df":5,"l":{"docs":{},"df":0,"i":{"docs":{},"df":0,"m":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{"appendix/stupid-stats.html#overview-of-the-compilation-process":{"tf":1.0},"tests/adding.html#normalization":{"tf":1.0}},"df":2}}}},"e":{"docs":{},"df":0,"m":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{"mir/regionck.html#representing-the-values-of-a-region-variable":{"tf":2.6457513110645909},"traits/canonical-queries.html#examples":{"tf":1.7320508075688773},"mir/regionck.html#another-example":{"tf":1.0},"mir/index.html#mir-data-types":{"tf":1.4142135623730952},"miri.html#datastructures":{"tf":1.0},"mir/regionck.html#universes-and-skolemized-region-elements":{"tf":2.6457513110645909},"mir/regionck.html#back-to-our-example":{"tf":1.0},"mir/regionck.html#extending-the-universal-regions-check":{"tf":1.0},"mir/regionck.html#skolemization-and-outlives-constraints":{"tf":2.0},"mir/regionck.html#final-example":{"tf":1.0}},"df":10}}}},"g":{"docs":{"mir/passes.html#stealing":{"tf":1.0}},"df":1}},"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"w":{"docs":{},"df":0,"h":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"traits/lowering-rules.html#associated-type-declarations":{"tf":1.0}},"df":1}}}}}},"a":{"docs":{},"df":0,"b":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{"traits/goals-and-clauses.html#incomplete-chapter":{"tf":1.0}},"df":1}}}}},"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"s":{"docs":{"mir/regionck.html#mir-based-region-checking-nll":{"tf":1.0}},"df":1}},"g":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"o":{"docs":{},"df":0,"m":{"docs":{"rustc-driver.html#a-note-on-lifetimes":{"tf":1.0}},"df":1}}}}},"r":{"docs":{"diag.html#suggestions":{"tf":1.0},"diag.html#declaring-a-lint":{"tf":1.0},"query.html#cycles-between-queries":{"tf":1.4142135623730952},"diag.html#error-messages":{"tf":1.0},"compiler-debugging.html#getting-a-backtrace-for-errors":{"tf":1.4142135623730952}},"df":5,"o":{"docs":{},"df":0,"r":{"docs":{"tests/adding.html#error-annotations":{"tf":3.1622776601683797},"const-eval.html#constant-evaluation":{"tf":1.0},"high-level-overview.html#crate-structure":{"tf":1.0},"tests/adding.html#revisions":{"tf":1.7320508075688773},"diag.html#emitting-diagnostics":{"tf":1.4142135623730952},"compiletest.html#header-commands":{"tf":1.0},"traits/specialization.html#specialization":{"tf":1.0},"macro-expansion.html#the-macro-parser":{"tf":2.23606797749979},"mir/regionck.html#universes-and-skolemized-region-elements":{"tf":1.0},"diag.html#suggestions":{"tf":3.3166247903554},"compiler-debugging.html#getting-a-backtrace-for-errors":{"tf":3.3166247903554},"mir/regionck.html#back-to-our-example":{"tf":1.0},"compiler-debugging.html#debugging-llvm":{"tf":1.0},"traits/resolution.html#confirmation":{"tf":1.7320508075688773},"conventions.html#use-todo-comments-for-things-you-dont-want-to-forget":{"tf":1.0},"tests/adding.html#adding-new-tests":{"tf":1.4142135623730952},"mir/regionck.html#final-example":{"tf":1.4142135623730952},"diag.html#span":{"tf":1.7320508075688773},"diag.html#edition-gated-lints":{"tf":1.0},"appendix/stupid-stats.html#overview-of-the-compilation-process":{"tf":1.4142135623730952},"diag.html#declaring-a-lint":{"tf":1.0},"tests/adding.html#what-kind-of-test-should-i-add":{"tf":1.0},"miri.html#miri":{"tf":1.4142135623730952},"miri.html#datastructures":{"tf":1.0},"appendix/code-index.html#appendix-d-code-index":{"tf":1.4142135623730952},"query.html#cycles-between-queries":{"tf":3.0},"appendix/glossary.html#appendix-c-glossary":{"tf":1.4142135623730952},"compiler-debugging.html#getting-logging-output":{"tf":1.7320508075688773},"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.7320508075688773},"traits/lowering-module.html#unit-tests":{"tf":3.0},"diag.html#error-messages":{"tf":3.7416573867739415},"mir/regionck.html#subtyping-and-skolemization":{"tf":1.0},"compiletest.html#implementing-the-behavior-change":{"tf":1.0},"rustc-driver.html#the-rustc-driver":{"tf":1.0},"incrcomp-debugging.html#testing-the-dependency-graph":{"tf":2.0},"tests/adding.html#other-header-commands":{"tf":1.7320508075688773},"miri.html#interpretation":{"tf":1.0},"traits/canonical-queries.html#examples":{"tf":1.4142135623730952},"name-resolution.html#name-resolution":{"tf":1.0},"tests/adding.html#tests-that-do-not-result-in-compile-errors":{"tf":1.7320508075688773},"query.html#adding-a-new-kind-of-query":{"tf":1.4142135623730952},"type-inference.html#trying-equality":{"tf":1.0},"traits/resolution.html#selection":{"tf":2.0}},"df":43,".":{"docs":{},"df":0,"r":{"docs":{"compiler-debugging.html#getting-a-backtrace-for-errors":{"tf":1.7320508075688773}},"df":1,"s":{"docs":{},"df":0,":":{"docs":{},"df":0,"2":{"docs":{},"df":0,":":{"docs":{},"df":0,"7":{"docs":{"compiler-debugging.html#getting-a-backtrace-for-errors":{"tf":1.4142135623730952}},"df":1}}}}}}},"[":{"docs":{},"df":0,"e":{"docs":{},"df":0,"0":{"docs":{},"df":0,"9":{"docs":{},"df":0,"9":{"docs":{},"df":0,"9":{"docs":{"diag.html#suggestions":{"tf":1.4142135623730952}},"df":1}}},"2":{"docs":{},"df":0,"7":{"docs":{},"df":0,"7":{"docs":{"compiler-debugging.html#getting-a-backtrace-for-errors":{"tf":1.4142135623730952}},"df":1}}}}}},"k":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{"compiletest.html#adding-a-new-header-command":{"tf":1.0}},"df":1}}}},"o":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{},"df":0,"p":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{},"df":0,"t":{"docs":{},"df":0,"y":{"docs":{},"df":0,"p":{"docs":{"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.0}},"df":1}}}}}}}}}},"n":{"docs":{"incrcomp-debugging.html#dumping-the-graph":{"tf":1.0}},"df":1}},".":{"docs":{},"df":0,"s":{"docs":{},"df":0,"p":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"_":{"docs":{},"df":0,"h":{"docs":{},"df":0,"e":{"docs":{},"df":0,"l":{"docs":{},"df":0,"p":{"docs":{},"df":0,"(":{"docs":{},"df":0,"s":{"docs":{},"df":0,"u":{"docs":{},"df":0,"g":{"docs":{},"df":0,"g":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"i":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"_":{"docs":{},"df":0,"s":{"docs":{},"df":0,"p":{"docs":{"diag.html#suggestions":{"tf":1.0},"diag.html#error-messages":{"tf":1.0}},"df":2}}}}}}}}}}}}}}}}}},"s":{"docs":{},"df":0,"u":{"docs":{},"df":0,"g":{"docs":{},"df":0,"g":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"i":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"_":{"docs":{},"df":0,"w":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{},"df":0,"h":{"docs":{},"df":0,"_":{"docs":{},"df":0,"a":{"docs":{},"df":0,"p":{"docs":{},"df":0,"p":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{},"df":0,"c":{"docs":{"diag.html#suggestions":{"tf":1.0}},"df":1}}}}}}}}}}},"s":{"docs":{},"df":0,"h":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"t":{"docs":{},"df":0,"(":{"docs":{},"df":0,"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{},"df":0,"i":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"_":{"docs":{},"df":0,"s":{"docs":{},"df":0,"p":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{"diag.html#declaring-a-lint":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}}}},"(":{"docs":{},"df":0,"s":{"docs":{},"df":0,"u":{"docs":{},"df":0,"g":{"docs":{},"df":0,"g":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"i":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"_":{"docs":{},"df":0,"s":{"docs":{},"df":0,"p":{"docs":{"diag.html#error-messages":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"c":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"c":{"docs":{},"df":0,"e":{"docs":{},"df":0,"l":{"docs":{"query.html#cycles-between-queries":{"tf":1.0}},"df":1}}}}}},"e":{"docs":{},"df":0,"m":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{"diag.html#declaring-a-lint":{"tf":1.0},"query.html#cycles-between-queries":{"tf":1.0},"diag.html#suggestions":{"tf":1.0},"diag.html#error-messages":{"tf":1.0}},"df":4}}}}},"(":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"r":{"docs":{"query.html#cycles-between-queries":{"tf":1.0},"type-inference.html#enforcing-equality--subtyping":{"tf":1.0},"traits/resolution.html#selection":{"tf":1.0}},"df":3}}},"n":{"docs":{},"df":0,"o":{"docs":{},"df":0,"s":{"docs":{},"df":0,"o":{"docs":{},"df":0,"l":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{"traits/associated-types.html#integration-with-unification":{"tf":1.0},"traits/canonical-queries.html#a-trait-query-in-rustc":{"tf":1.0}},"df":2}}}}}}},"b":{"docs":{},"df":0,"o":{"docs":{},"df":0,"x":{"docs":{},"df":0,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"n":{"docs":{},"df":0,"e":{"docs":{},"df":0,"w":{"docs":{},"df":0,"(":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"n":{"docs":{},"df":0,"e":{"docs":{},"df":0,"w":{"docs":{},"df":0,"(":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"k":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{},"df":0,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"o":{"docs":{},"df":0,"t":{"docs":{},"df":0,"h":{"docs":{"compiletest.html#adding-a-new-header-command":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"a":{"docs":{},"df":0,"g":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"type-inference.html#region-constraints":{"tf":1.0}},"df":1,"l":{"docs":{},"df":0,"i":{"docs":{"type-inference.html#region-constraints":{"tf":1.0},"traits/canonicalization.html#processing-the-canonicalized-query-result":{"tf":1.0}},"df":2}}}}},"s":{"docs":{},"df":0,"i":{"docs":{"conventions.html#formatting-and-the-tidy-script":{"tf":1.0},"tests/intro.html#testing-with-docker-images":{"tf":1.0},"mir/index.html#key-mir-vocabulary":{"tf":1.0}},"df":3,"l":{"docs":{},"df":0,"i":{"docs":{"incrcomp-debugging.html#tracking-down-incorrect-edges":{"tf":1.0},"traits/lowering-to-logic.html#rust-traits-and-logic":{"tf":1.0},"traits/lowering-to-logic.html#type-checking-generic-functions-beyond-horn-clauses":{"tf":1.0}},"df":3}},"e":{"docs":{},"df":0,"r":{"docs":{"diag.html#span":{"tf":1.0},"tests/running.html#running-an-individual-test":{"tf":1.0},"conventions.html#how-to-structure-your-pr":{"tf":1.0},"traits/resolution.html#candidate-assembly":{"tf":1.0},"traits/chalk-overview.html#an-overview-of-chalk":{"tf":1.0},"rustdoc.html#from-crate-to-clean":{"tf":1.0},"tests/adding.html#what-kind-of-test-should-i-add":{"tf":1.0},"rustdoc.html#hot-potato":{"tf":1.4142135623730952},"appendix/stupid-stats.html#appendix-a-a-tutorial-on-creating-a-drop-in-replacement-for-rustc":{"tf":1.7320508075688773},"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.0},"compiler-debugging.html#debugging-llvm":{"tf":1.0},"hir.html#out-of-band-storage-and-the--crate--type":{"tf":1.0},"the-parser.html#the-parser":{"tf":1.0},"type-inference.html#type-inference":{"tf":1.0}},"df":14},"s":{"docs":{},"df":0,"t":{"docs":{"mir/regionck.html#what-is-a-universe":{"tf":1.0}},"df":1}}}}},"r":{"docs":{},"df":0,"l":{"docs":{},"df":0,"e":{"docs":{},"df":0,"y":{"docs":{"macro-expansion.html#the-macro-parser":{"tf":1.0}},"df":1}},"i":{"docs":{"appendix/stupid-stats.html#compilercalls":{"tf":1.0},"appendix/stupid-stats.html#the-driver-customisation-apis":{"tf":1.0}},"df":2,"e":{"docs":{},"df":0,"r":{"docs":{"traits/lowering-rules.html#lowering-rules":{"tf":1.0},"rustdoc.html#from-crate-to-clean":{"tf":1.0}},"df":2}}},"y":{"docs":{},"df":0,"_":{"docs":{},"df":0,"c":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{},"df":0,"l":{"docs":{},"df":0,"b":{"docs":{},"df":0,"a":{"docs":{},"df":0,"c":{"docs":{},"df":0,"k":{"docs":{"appendix/stupid-stats.html#compilercalls":{"tf":1.0}},"df":1,"(":{"docs":{},"df":0,"&":{"docs":{},"df":0,"m":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}},"c":{"docs":{},"df":0,"h":{"docs":{"traits/lowering-rules.html#trait-header":{"tf":2.0},"rustc-driver.html#the-rustc-driver":{"tf":1.0},"appendix/stupid-stats.html#overview-of-the-compilation-process":{"tf":1.7320508075688773},"tests/adding.html#other-header-commands":{"tf":1.0},"traits/resolution.html#candidate-assembly":{"tf":1.4142135623730952},"mir/regionck.html#what-is-a-universe":{"tf":1.4142135623730952},"appendix/stupid-stats.html#the-driver-customisation-apis":{"tf":1.0},"mir/index.html#mir-data-types":{"tf":1.0},"appendix/stupid-stats.html#compilercontroller":{"tf":1.4142135623730952},"mir/regionck.html#representing-the-values-of-a-region-variable":{"tf":2.23606797749979},"appendix/glossary.html#appendix-c-glossary":{"tf":2.0},"rustc-driver.html#a-note-on-lifetimes":{"tf":1.0},"mir/regionck.html#universes-and-skolemized-region-elements":{"tf":1.4142135623730952},"traits/canonicalization.html#processing-the-canonicalized-query-result":{"tf":1.0},"rustdoc.html#dotting-is-and-crossing-ts":{"tf":1.4142135623730952},"tests/adding.html#error-annotations":{"tf":1.0},"traits/lowering-rules.html#rule-names-and-cross-references":{"tf":1.0},"traits/chalk-overview.html#rules":{"tf":1.0},"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.0},"incrcomp-debugging.html#testing-the-dependency-graph":{"tf":1.0},"miri.html#allocations":{"tf":1.0},"type-checking.html#type-collection":{"tf":1.4142135623730952},"traits/canonical-queries.html#a-trait-query-in-rustc":{"tf":1.0},"miri.html#interpretation":{"tf":1.4142135623730952},"mir/passes.html#seeing-how-the-mir-changes-as-the-compiler-executes":{"tf":1.4142135623730952},"incremental-compilation.html#the-basic-algorithm":{"tf":1.0},"high-level-overview.html#the-main-stages-of-compilation":{"tf":1.4142135623730952},"type-inference.html#lexical-region-resolution":{"tf":1.4142135623730952},"traits/resolution.html#selection-during-translation":{"tf":1.4142135623730952},"rustdoc.html#hot-potato":{"tf":1.4142135623730952},"traits/associated-types.html#associated-type-projection-and-normalization":{"tf":1.0},"variance.html#the-algorithm":{"tf":1.0},"incremental-compilation.html#the-try-mark-green-algorithm":{"tf":1.4142135623730952},"appendix/stupid-stats.html#compilercalls":{"tf":1.0},"appendix/code-index.html#appendix-d-code-index":{"tf":1.0},"name-resolution.html#scopes-and-ribs":{"tf":1.0},"the-parser.html#the-parser":{"tf":1.0},"traits/lowering-rules.html#associated-type-declarations":{"tf":1.4142135623730952},"about-this-guide.html#about-this-guide":{"tf":1.0},"traits/wf.html#well-formedness-checking":{"tf":1.0},"rustdoc.html#from-crate-to-clean":{"tf":1.0},"method-lookup.html#candidate-search":{"tf":1.0},"compiletest.html#adding-a-new-header-command":{"tf":1.0},"tests/adding.html#revisions":{"tf":1.0},"type-inference.html#creating-an-inference-context":{"tf":1.0},"traits/canonicalization.html#executing-the-query":{"tf":1.0},"query.html#invoking-queries":{"tf":1.0},"traits/canonicalization.html#canonicalizing-the-query-result":{"tf":1.0},"query.html#how-the-compiler-executes-a-query":{"tf":1.0},"traits/goals-and-clauses.html#domain-goals":{"tf":1.4142135623730952},"query.html#adding-a-new-kind-of-query":{"tf":1.7320508075688773},"method-lookup.html#candidate-assembly":{"tf":1.0},"traits/canonicalization.html#canonicalizing-the-query":{"tf":1.7320508075688773},"diag.html#declaring-a-lint":{"tf":1.0},"incremental-compilation.html#the-query-dag":{"tf":1.0},"traits/resolution.html#major-concepts":{"tf":1.0},"tests/intro.html#compiletest-test-suites":{"tf":1.0},"mir/passes.html#mir-passes":{"tf":1.4142135623730952},"high-level-overview.html#crate-structure":{"tf":1.4142135623730952},"tests/intro.html#other-tests":{"tf":1.0},"mir/regionck.html#skolemization-and-outlives-constraints":{"tf":1.4142135623730952},"mir/regionck.html#extending-the-universal-regions-check":{"tf":1.4142135623730952}},"df":62}}},"t":{"docs":{"variance.html#variance-of-type-and-lifetime-parameters":{"tf":1.0}},"df":1,"i":{"docs":{},"df":0,"q":{"docs":{},"df":0,"u":{"docs":{},"df":0,"e":{"docs":{},"df":0,"t":{"docs":{},"df":0,"t":{"docs":{"compiler-debugging.html#logging-etiquette":{"tf":1.4142135623730952}},"df":1}}}}}},"c":{"docs":{"traits/canonicalization.html#executing-the-query":{"tf":1.0},"macro-expansion.html#the-macro-parser":{"tf":1.0},"tests/adding.html#naming-your-test":{"tf":1.0},"appendix/stupid-stats.html#the-driver-customisation-apis":{"tf":1.0},"appendix/stupid-stats.html#appendix-a-a-tutorial-on-creating-a-drop-in-replacement-for-rustc":{"tf":1.0},"traits/implied-bounds.html#implied-bounds":{"tf":1.0},"ty.html#allocating-and-working-with-types":{"tf":1.0},"mir/borrowck.html#mir-borrow-check":{"tf":1.0},"traits/chalk-overview.html#rules":{"tf":1.0},"hir.html#out-of-band-storage-and-the--crate--type":{"tf":1.0},"mir/passes.html#seeing-how-the-mir-changes-as-the-compiler-executes":{"tf":1.0},"tests/intro.html#other-tests":{"tf":1.4142135623730952},"method-lookup.html#method-lookup":{"tf":1.0},"tests/adding.html#revisions":{"tf":1.4142135623730952},"mir/regionck.html#what-is-a-universe":{"tf":1.0},"traits/resolution.html#selection":{"tf":1.0},"mir/regionck.html#representing-the-values-of-a-region-variable":{"tf":1.0},"diag.html#error-messages":{"tf":1.4142135623730952},"mir/passes.html#mir-passes":{"tf":1.0},"appendix/stupid-stats.html#compilercalls":{"tf":1.0},"mir/passes.html#implementing-and-registering-a-pass":{"tf":1.0},"mir/regionck.html#causal-tracking":{"tf":1.0},"appendix/glossary.html#appendix-c-glossary":{"tf":1.0}},"df":23}},"g":{"docs":{"name-resolution.html#todo":{"tf":1.0},"name-resolution.html#namespaces":{"tf":1.0},"name-resolution.html#scopes-and-ribs":{"tf":1.0}},"df":3},"d":{"docs":{},"df":0,"g":{"docs":{"appendix/background.html#what-is-a-control-flow-graph":{"tf":1.0},"incremental-compilation.html#the-basic-algorithm":{"tf":1.0},"incrcomp-debugging.html#dumping-the-graph":{"tf":2.0},"incrcomp-debugging.html#tracking-down-incorrect-edges":{"tf":2.23606797749979},"mir/passes.html#implementing-and-registering-a-pass":{"tf":1.0}},"df":5},"i":{"docs":{},"df":0,"t":{"docs":{"how-to-build-and-run.html#create-a-configtoml":{"tf":1.0},"diag.html#suggestions":{"tf":1.0},"how-to-build-and-run.html#running-xpy-and-building-a-stage1-compiler":{"tf":1.0},"conventions.html#copyright-notice":{"tf":1.0},"tests/adding.html#editing-and-updating-the-reference-files":{"tf":1.4142135623730952},"diag.html#edition-gated-lints":{"tf":2.449489742783178},"mir/passes.html#implementing-and-registering-a-pass":{"tf":1.0}},"df":7,"o":{"docs":{},"df":0,"r":{"docs":{"compiler-debugging.html#getting-logging-output":{"tf":1.4142135623730952}},"df":1}},"i":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"e":{"docs":{},"df":0,"d":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{},"df":0,"i":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"2":{"docs":{},"df":0,"0":{"docs":{},"df":0,"1":{"docs":{},"df":0,"8":{"docs":{"diag.html#edition-gated-lints":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"df":0,"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"c":{"docs":{"tests/intro.html#testing-infrastructure":{"tf":1.0},"incremental-compilation.html#incremental-compilation":{"tf":1.0}},"df":2},"t":{"docs":{},"df":0,"i":{"docs":{"traits/goals-and-clauses.html#goals-and-clauses-meta-structure":{"tf":1.0},"traits/chalk-overview.html#lowering":{"tf":1.0},"rustc-driver.html#a-note-on-lifetimes":{"tf":1.0},"miri.html#interpretation":{"tf":1.0},"how-to-build-and-run.html#create-a-configtoml":{"tf":1.0},"miri.html#miri":{"tf":1.0},"rustc-driver.html#the-rustc-driver":{"tf":1.0},"query.html#cycles-between-queries":{"tf":1.0}},"df":8}}}}},"p":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{"appendix/stupid-stats.html#appendix-a-a-tutorial-on-creating-a-drop-in-replacement-for-rustc":{"tf":1.0}},"df":1,"i":{"docs":{"mir/regionck.html#back-to-our-example":{"tf":1.0},"compiler-debugging.html#getting-logging-output":{"tf":1.0}},"df":2}}}},"c":{"docs":{},"df":0,"a":{"docs":{},"df":0,"p":{"docs":{"rustc-driver.html#a-note-on-lifetimes":{"tf":1.0}},"df":1}}}},"x":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"c":{"docs":{},"df":0,"i":{"docs":{},"df":0,"s":{"docs":{"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.0}},"df":1}}}},"c":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{"query.html#queries-demand-driven-compilation":{"tf":1.4142135623730952},"appendix/stupid-stats.html#the-driver-customisation-apis":{"tf":1.0},"incremental-compilation.html#the-try-mark-green-algorithm":{"tf":2.8284271247461905},"query.html#cycles-between-queries":{"tf":1.0},"hir.html#hir-bodies":{"tf":1.0},"mir/regionck.html#representing-the-values-of-a-region-variable":{"tf":1.0},"how-to-build-and-run.html#creating-a-rustup-toolchain":{"tf":1.0},"traits/canonicalization.html#executing-the-query":{"tf":1.4142135623730952},"compiletest.html#introduction":{"tf":1.4142135623730952},"incremental-compilation.html#the-basic-algorithm":{"tf":2.23606797749979},"incremental-compilation.html#the-query-dag":{"tf":2.449489742783178},"miri.html#interpretation":{"tf":1.0},"type-inference.html#enforcing-equality--subtyping":{"tf":1.0},"rustdoc.html#other-tricks-up-its-sleeve":{"tf":1.0},"incremental-compilation.html#improvements-to-the-basic-algorithm":{"tf":1.0},"high-level-overview.html#crate-structure":{"tf":1.0},"appendix/stupid-stats.html#compilercontroller":{"tf":1.4142135623730952},"miri.html#miri":{"tf":1.4142135623730952},"appendix/background.html#what-is-a-control-flow-graph":{"tf":1.4142135623730952},"high-level-overview.html#the-main-stages-of-compilation":{"tf":1.0},"query.html#how-the-compiler-executes-a-query":{"tf":1.7320508075688773},"mir/passes.html#seeing-how-the-mir-changes-as-the-compiler-executes":{"tf":1.4142135623730952},"tests/intro.html#compiletest-test-suites":{"tf":1.7320508075688773},"the-parser.html#the-parser":{"tf":1.0},"mir/visitor.html#mir-visitor":{"tf":1.0},"tests/intro.html#other-tests":{"tf":1.0},"appendix/stupid-stats.html#overview-of-the-compilation-process":{"tf":1.0},"traits/chalk-overview.html#an-overview-of-chalk":{"tf":1.4142135623730952},"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":2.0},"ty.html#the-tcx-and-how-it-uses-lifetimes":{"tf":1.0},"appendix/glossary.html#appendix-c-glossary":{"tf":1.0},"mir/passes.html#stealing":{"tf":1.4142135623730952},"compiletest.html#adding-a-new-test-file":{"tf":1.0}},"df":33,"a":{"docs":{},"df":0,"b":{"docs":{},"df":0,"l":{"docs":{},"df":0,"e":{"docs":{},"df":0,"/":{"docs":{},"df":0,"o":{"docs":{},"df":0,"b":{"docs":{},"df":0,"j":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{"rustc-driver.html#the-rustc-driver":{"tf":1.0}},"df":1}}}}}}}}}}}}}},"m":{"docs":{},"df":0,"p":{"docs":{},"df":0,"t":{"docs":{"conventions.html#line-length":{"tf":1.0}},"df":1}}}},"a":{"docs":{},"df":0,"m":{"docs":{},"df":0,"p":{"docs":{},"df":0,"l":{"docs":{"rustdoc.html#from-soup-to-nuts":{"tf":1.0},"traits/resolution.html#major-concepts":{"tf":1.4142135623730952},"conventions.html#how-to-structure-your-pr":{"tf":1.0},"traits/canonicalization.html#canonicalizing-the-query-result":{"tf":1.0},"traits/associated-types.html#integration-with-unification":{"tf":1.0},"mir/index.html#key-mir-vocabulary":{"tf":1.0},"mir/regionck.html#what-is-a-universe":{"tf":1.7320508075688773},"rustc-driver.html#a-note-on-lifetimes":{"tf":1.0},"compiler-debugging.html#getting-a-backtrace-for-errors":{"tf":1.0},"traits/wf.html#well-formedness-checking":{"tf":1.0},"method-lookup.html#candidate-search":{"tf":1.0},"rustdoc.html#dotting-is-and-crossing-ts":{"tf":1.0},"traits/resolution.html#candidate-assembly":{"tf":2.23606797749979},"variance.html#the-algorithm":{"tf":1.0},"const-eval.html#constant-evaluation":{"tf":1.0},"incremental-compilation.html#the-basic-algorithm":{"tf":1.0},"traits/associated-types.html#associated-type-projection-and-normalization":{"tf":2.0},"appendix/glossary.html#appendix-c-glossary":{"tf":2.6457513110645909},"appendix/stupid-stats.html#appendix-a-a-tutorial-on-creating-a-drop-in-replacement-for-rustc":{"tf":1.0},"ty.html#beyond-types-other-kinds-of-arena-allocated-data-structures":{"tf":1.0},"diag.html#declaring-a-lint":{"tf":1.0},"traits/lowering-module.html#unit-tests":{"tf":1.0},"type-inference.html#subtyping-obligations":{"tf":1.0},"appendix/background.html#what-is-a-control-flow-graph":{"tf":1.0},"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":2.23606797749979},"query.html#adding-a-new-kind-of-query":{"tf":1.0},"traits/lowering-rules.html#trait-header":{"tf":1.4142135623730952},"traits/chalk-overview.html#intermediate-representation-ir":{"tf":1.0},"traits/chalk-overview.html#lowering":{"tf":1.0},"tests/adding.html#ignoring-tests":{"tf":1.0},"tests/running.html#running-a-subset-of-the-test-suites":{"tf":1.4142135623730952},"ty.html#the-tcx-and-how-it-uses-lifetimes":{"tf":1.0},"traits/canonicalization.html#executing-the-query":{"tf":1.4142135623730952},"incrcomp-debugging.html#testing-the-dependency-graph":{"tf":1.0},"query.html#how-the-compiler-executes-a-query":{"tf":1.0},"traits/resolution.html#confirmation":{"tf":1.0},"ty.html#allocating-and-working-with-types":{"tf":1.0},"mir/passes.html#seeing-how-the-mir-changes-as-the-compiler-executes":{"tf":1.7320508075688773},"mir/passes.html#stealing":{"tf":1.0},"macro-expansion.html#the-macro-parser":{"tf":2.23606797749979},"traits/canonical-queries.html#examples":{"tf":3.1622776601683797},"tests/intro.html#other-tests":{"tf":2.6457513110645909},"mir/regionck.html#skolemization-and-universes":{"tf":1.4142135623730952},"name-resolution.html#scopes-and-ribs":{"tf":1.4142135623730952},"hir.html#the-hir":{"tf":1.0},"compiletest.html#adding-a-new-header-command":{"tf":1.4142135623730952},"traits/goals-and-clauses.html#coinductive-goals":{"tf":1.7320508075688773},"query.html#invoking-queries":{"tf":1.0},"traits/goals-and-clauses.html#domain-goals":{"tf":1.7320508075688773},"mir/regionck.html#final-example":{"tf":2.0},"high-level-overview.html#the-main-stages-of-compilation":{"tf":1.4142135623730952},"traits/hrtb.html#higher-ranked-trait-obligations":{"tf":1.0},"traits/resolution.html#selection-during-translation":{"tf":1.0},"type-checking.html#type-collection":{"tf":1.0},"traits/hrtb.html#higher-ranked-trait-bounds":{"tf":1.0},"traits/canonical-queries.html#the-traditional-interactive-prolog-query":{"tf":1.4142135623730952},"traits/lowering-to-logic.html#rust-traits-and-logic":{"tf":1.4142135623730952},"macro-expansion.html#example":{"tf":2.23606797749979},"traits/canonicalization.html#canonicalization":{"tf":1.0},"traits/chalk-overview.html#parsing":{"tf":1.0},"traits/lowering-to-logic.html#type-checking-generic-functions-beyond-horn-clauses":{"tf":1.4142135623730952},"mir/regionck.html#back-to-our-example":{"tf":1.7320508075688773},"appendix/background.html#what-is-a-free-region-or-a-free-variable-what-about-bound-region":{"tf":1.0},"diag.html#suggestions":{"tf":2.0},"traits/resolution.html#overview":{"tf":1.0},"mir/visitor.html#mir-visitor":{"tf":1.0},"tests/adding.html#naming-your-test":{"tf":1.4142135623730952},"hir.html#out-of-band-storage-and-the--crate--type":{"tf":1.4142135623730952},"tests/adding.html#revisions":{"tf":1.0},"mir/passes.html#implementing-and-registering-a-pass":{"tf":1.4142135623730952},"diag.html#lint-groups":{"tf":1.0},"param_env.html#parameter-environment":{"tf":1.0},"tests/adding.html#normalization":{"tf":1.0},"how-to-build-and-run.html#creating-a-rustup-toolchain":{"tf":1.0},"traits/implied-bounds.html#implied-bounds":{"tf":1.0},"hir.html#the-hir-map":{"tf":1.0},"traits/canonical-queries.html#a-trait-query-in-rustc":{"tf":1.4142135623730952},"diag.html#error-messages":{"tf":1.0},"variance.html#variance-and-object-types":{"tf":1.0},"traits/hrtb.html#basic-matching-and-skolemization-leaks":{"tf":1.0},"traits/canonicalization.html#processing-the-canonicalized-query-result":{"tf":1.0},"incrcomp-debugging.html#tracking-down-incorrect-edges":{"tf":1.0},"traits/associated-types.html#skolemized-associated-types":{"tf":1.0},"mir/regionck.html#universes-and-skolemized-region-elements":{"tf":1.0},"mir/regionck.html#another-example":{"tf":1.4142135623730952},"incrcomp-debugging.html#dumping-the-graph":{"tf":1.0},"tests/adding.html#header-commands-configuring-rustc":{"tf":1.0},"query.html#queries-demand-driven-compilation":{"tf":1.7320508075688773},"method-lookup.html#candidate-assembly":{"tf":1.0},"compiletest.html#implementing-the-behavior-change":{"tf":1.4142135623730952},"compiletest.html#introduction":{"tf":1.0},"traits/caching.html#an-example":{"tf":1.4142135623730952},"tests/running.html#running-an-individual-test":{"tf":1.0},"appendix/stupid-stats.html#compilercontroller":{"tf":1.0}},"df":94}},"i":{"docs":{},"df":0,"n":{"docs":{"type-checking.html#type-collection":{"tf":1.0},"traits/resolution.html#candidate-assembly":{"tf":1.0}},"df":2}}},"c":{"docs":{},"df":0,"t":{"docs":{"tests/intro.html#compiletest-test-suites":{"tf":1.0},"traits/chalk-overview.html#parsing":{"tf":1.0},"traits/canonicalization.html#canonicalization":{"tf":1.0},"macro-expansion.html#example":{"tf":1.0},"appendix/stupid-stats.html#overview-of-the-compilation-process":{"tf":1.0},"type-checking.html#type-collection":{"tf":1.0}},"df":6,"l":{"docs":{},"df":0,"i":{"docs":{"traits/resolution.html#candidate-assembly":{"tf":1.0},"miri.html#allocations":{"tf":1.0},"traits/lowering-rules.html#function-and-constant-values":{"tf":1.0},"macro-expansion.html#the-macro-parser":{"tf":1.7320508075688773},"name-resolution.html#todo":{"tf":1.0},"traits/chalk-overview.html#parsing":{"tf":1.0},"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.0},"tests/adding.html#comment-explaining-what-the-test-is-about":{"tf":1.0},"traits/lowering-rules.html#lowering-function-and-constant-declarations":{"tf":1.0},"appendix/stupid-stats.html#what-next":{"tf":1.0},"query.html#queries-demand-driven-compilation":{"tf":1.0},"ty.html#allocating-and-working-with-types":{"tf":1.0}},"df":12}}}}},"t":{"docs":{},"df":0,"r":{"docs":{},"df":0,"a":{"docs":{"tests/adding.html#other-header-commands":{"tf":1.0},"hir.html#identifiers-in-the-hir":{"tf":1.0},"rustdoc.html#other-tricks-up-its-sleeve":{"tf":1.0},"type-inference.html#enforcing-equality--subtyping":{"tf":1.0},"appendix/stupid-stats.html#what-next":{"tf":1.0},"traits/goals-and-clauses.html#domain-goals":{"tf":1.0},"appendix/glossary.html#appendix-c-glossary":{"tf":1.0},"rustdoc.html#from-crate-to-clean":{"tf":1.0},"rustdoc.html#hot-potato":{"tf":1.0},"traits/canonical-queries.html#a-trait-query-in-rustc":{"tf":1.0}},"df":10,"c":{"docs":{},"df":0,"t":{"docs":{"variance.html#dependency-graph-management":{"tf":1.0},"rustdoc.html#cheat-sheet":{"tf":1.0},"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.0},"appendix/glossary.html#appendix-c-glossary":{"tf":1.0},"macro-expansion.html#the-macro-parser":{"tf":1.4142135623730952},"compiler-debugging.html#debugging-llvm":{"tf":1.4142135623730952},"type-inference.html#extracting-region-constraints":{"tf":1.7320508075688773},"hir.html#the-hir-map":{"tf":1.0},"miri.html#miri":{"tf":1.0}},"df":9,"e":{"docs":{},"df":0,"d":{"docs":{},"df":0,".":{"docs":{},"df":0,"l":{"docs":{"compiler-debugging.html#debugging-llvm":{"tf":1.0}},"df":1}}}}}}},"e":{"docs":{},"df":0,"m":{"docs":{"macro-expansion.html#the-macro-parser":{"tf":1.0},"high-level-overview.html#crate-structure":{"tf":1.0},"appendix/stupid-stats.html#appendix-a-a-tutorial-on-creating-a-drop-in-replacement-for-rustc":{"tf":1.0}},"df":3}}},"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{"traits/chalk-overview.html#an-overview-of-chalk":{"tf":1.0},"mir/regionck.html#what-is-a-universe":{"tf":2.23606797749979},"traits/canonical-queries.html#examples":{"tf":1.0},"mir/regionck.html#extending-the-universal-regions-check":{"tf":1.4142135623730952},"type-inference.html#type-inference":{"tf":1.0},"mir/passes.html#mir-passes":{"tf":1.0},"traits/goals-and-clauses.html#goals-and-clauses":{"tf":1.0},"traits/lowering-rules.html#trait-header":{"tf":1.0},"traits/lowering-to-logic.html#rust-traits-and-logic":{"tf":1.0},"mir/regionck.html#causal-tracking":{"tf":1.0},"mir/regionck.html#final-example":{"tf":1.0}},"df":11},"s":{"docs":{"appendix/glossary.html#appendix-c-glossary":{"tf":1.0},"tests/adding.html#comment-explaining-what-the-test-is-about":{"tf":1.0},"traits/goals-and-clauses.html#goals-and-clauses":{"tf":1.0},"incremental-compilation.html#incremental-compilation":{"tf":1.0},"appendix/stupid-stats.html#overview-of-the-compilation-process":{"tf":1.0},"traits/lowering-to-logic.html#type-checking-generic-functions-beyond-horn-clauses":{"tf":1.0},"method-lookup.html#candidate-assembly":{"tf":1.7320508075688773}},"df":7}},"r":{"docs":{},"df":0,"n":{"docs":{"conventions.html#using-crates-from-cratesio":{"tf":1.0},"query.html#how-the-compiler-executes-a-query":{"tf":2.23606797749979},"rustdoc.html#hot-potato":{"tf":1.0},"rustc-driver.html#the-rustc-driver":{"tf":1.0}},"df":4}}}},"h":{"docs":{},"df":0,"a":{"docs":{},"df":0,"u":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{"tests/adding.html#other-header-commands":{"tf":1.0},"conventions.html#prefer-exhaustive-matches":{"tf":1.7320508075688773}},"df":2}}}}},"i":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{"traits/lowering-module.html#unit-tests":{"tf":1.0},"tests/adding.html#guide-to-the-ui-tests":{"tf":1.0},"traits/chalk-overview.html#well-formedness-checks":{"tf":1.0},"traits/chalk-overview.html#an-overview-of-chalk":{"tf":1.0},"how-to-build-and-run.html#running-xpy-and-building-a-stage1-compiler":{"tf":1.0},"conventions.html#copyright-notice":{"tf":1.0},"traits/caching.html#where-clauses-and-the-local-vs-global-cache":{"tf":1.0},"hir.html#identifiers-in-the-hir":{"tf":1.0},"incrcomp-debugging.html#testing-the-dependency-graph":{"tf":1.4142135623730952},"traits/resolution.html#major-concepts":{"tf":1.7320508075688773},"appendix/stupid-stats.html#what-next":{"tf":1.0},"appendix/stupid-stats.html#compilercalls":{"tf":1.0},"miri.html#allocations":{"tf":1.0},"mir/regionck.html#universes-and-skolemized-region-elements":{"tf":1.0},"incrcomp-debugging.html#tracking-down-incorrect-edges":{"tf":1.0},"traits/hrtb.html#basic-matching-and-skolemization-leaks":{"tf":1.0}},"df":16,"s":{"docs":{},"df":0,"<":{"docs":{},"df":0,"x":{"docs":{"mir/regionck.html#what-is-a-universe":{"tf":1.0}},"df":1},"k":{"docs":{"traits/goals-and-clauses.html#goals-and-clauses-meta-structure":{"tf":1.0}},"df":1}}},"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{},"df":0,"i":{"docs":{"traits/goals-and-clauses.html#goals-and-clauses-meta-structure":{"tf":1.0},"mir/regionck.html#final-example":{"tf":1.0},"mir/regionck.html#another-example":{"tf":1.4142135623730952},"appendix/background.html#what-is-universally-quantified-what-about-existentially-quantified":{"tf":1.4142135623730952},"mir/regionck.html#skolemization-and-outlives-constraints":{"tf":1.0},"appendix/glossary.html#appendix-c-glossary":{"tf":1.0},"mir/regionck.html#what-is-a-universe":{"tf":1.4142135623730952},"type-inference.html#a-note-on-terminology":{"tf":1.0},"mir/regionck.html#universes-and-skolemized-region-elements":{"tf":1.0}},"df":9}}}}}},"t":{"docs":{"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.0}},"df":1}},"c":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"s":{"docs":{"rustdoc.html#hot-potato":{"tf":1.0}},"df":1}},"l":{"docs":{"traits/lowering-to-logic.html#type-checking-generic-functions-beyond-horn-clauses":{"tf":1.0}},"df":1},"p":{"docs":{},"df":0,"t":{"docs":{"miri.html#interpretation":{"tf":1.4142135623730952},"tests/adding.html#header-commands-configuring-rustc":{"tf":1.0},"query.html#adding-a-new-kind-of-query":{"tf":1.0},"ty.html#allocating-and-working-with-types":{"tf":1.0},"traits/associated-types.html#skolemized-associated-types":{"tf":1.0},"macro-expansion.html#the-macro-parser":{"tf":1.0},"mir/passes.html#stealing":{"tf":1.0},"conventions.html#copyright-notice":{"tf":1.0},"hir.html#the-hir":{"tf":1.0},"compiletest.html#adding-a-new-header-command":{"tf":1.0},"name-resolution.html#overall-strategy":{"tf":1.0},"mir/borrowck.html#mir-borrow-check":{"tf":1.0}},"df":12}}},"l":{"docs":{},"df":0,"u":{"docs":{},"df":0,"d":{"docs":{"compiler-debugging.html#expensive-operations-in-logs":{"tf":1.0},"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.0}},"df":2}}},"i":{"docs":{},"df":0,"t":{"docs":{"high-level-overview.html#the-main-stages-of-compilation":{"tf":1.0}},"df":1}}},"p":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"s":{"docs":{"appendix/glossary.html#appendix-c-glossary":{"tf":1.0},"macro-expansion.html#example":{"tf":1.4142135623730952},"appendix/stupid-stats.html#appendix-a-a-tutorial-on-creating-a-drop-in-replacement-for-rustc":{"tf":1.0},"high-level-overview.html#the-main-stages-of-compilation":{"tf":1.0},"rustc-driver.html#the-rustc-driver":{"tf":1.0},"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.4142135623730952},"name-resolution.html#scopes-and-ribs":{"tf":1.0},"appendix/stupid-stats.html#overview-of-the-compilation-process":{"tf":1.0},"macro-expansion.html#the-macro-parser":{"tf":1.0},"macro-expansion.html#macro-expansion":{"tf":2.23606797749979},"hir.html#the-hir":{"tf":1.0},"appendix/stupid-stats.html#compilercontroller":{"tf":1.0}},"df":12},"d":{"docs":{"macro-expansion.html#macro-expansion":{"tf":1.0},"appendix/stupid-stats.html#overview-of-the-compilation-process":{"tf":1.4142135623730952},"name-resolution.html#overall-strategy":{"tf":1.0},"traits/associated-types.html#associated-type-projection-and-normalization":{"tf":1.0},"variance.html#trait-variance-and-vtable-resolution":{"tf":1.0},"macro-expansion.html#the-macro-parser":{"tf":1.0},"macro-expansion.html#example":{"tf":1.7320508075688773},"rustc-driver.html#the-rustc-driver":{"tf":1.4142135623730952},"high-level-overview.html#the-main-stages-of-compilation":{"tf":1.0}},"df":9}}},"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{"appendix/stupid-stats.html#what-next":{"tf":1.0},"query.html#cycles-between-queries":{"tf":1.0}},"df":2}},"s":{"docs":{},"df":0,"s":{"docs":{"appendix/glossary.html#appendix-c-glossary":{"tf":1.0}},"df":1}},"n":{"docs":{},"df":0,"s":{"docs":{"compiler-debugging.html#expensive-operations-in-logs":{"tf":2.0}},"df":1,"i":{"docs":{},"df":0,"v":{"docs":{},"df":0,"e":{"docs":{},"df":0,"o":{"docs":{},"df":0,"p":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{},"df":0,"i":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{},"df":0,"a":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{"compiler-debugging.html#expensive-operations-in-logs":{"tf":1.0}},"df":1,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"<":{"docs":{},"df":0,"'":{"docs":{},"df":0,"a":{"docs":{"compiler-debugging.html#expensive-operations-in-logs":{"tf":1.4142135623730952}},"df":1}}}}}}}}}}}}}}}}}}}}},"/":{"docs":{},"df":0,"c":{"docs":{},"df":0,"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"s":{"docs":{},"df":0,"h":{"docs":{},"df":0,"i":{"docs":{"compiler-debugging.html#expensive-operations-in-logs":{"tf":1.0}},"df":1}}}}}}}}}}}},"c":{"docs":{},"df":0,"t":{"docs":{"query.html#cycles-between-queries":{"tf":1.0},"tests/adding.html#error-annotations":{"tf":1.0},"rustdoc.html#cheat-sheet":{"tf":1.0},"tests/adding.html#tests-that-do-not-result-in-compile-errors":{"tf":1.4142135623730952},"variance.html#variance-and-object-types":{"tf":1.4142135623730952},"tests/adding.html#revisions":{"tf":1.0},"miri.html#datastructures":{"tf":1.0},"traits/specialization.html#specialization":{"tf":1.0},"query.html#adding-a-new-kind-of-query":{"tf":1.0},"compiletest.html#adding-a-new-header-command":{"tf":1.0},"variance.html#variance-and-associated-types":{"tf":1.0},"compiletest.html#header-commands":{"tf":1.7320508075688773},"incrcomp-debugging.html#testing-the-dependency-graph":{"tf":1.0},"traits/chalk-overview.html#an-overview-of-chalk":{"tf":1.0},"tests/adding.html#adding-new-tests":{"tf":1.4142135623730952},"variance.html#trait-variance-and-vtable-resolution":{"tf":1.7320508075688773},"rustdoc.html#dotting-is-and-crossing-ts":{"tf":1.7320508075688773},"mir/regionck.html#subtyping-and-skolemization":{"tf":1.0},"compiletest.html#introduction":{"tf":1.4142135623730952},"macro-expansion.html#the-macro-parser":{"tf":1.0},"conventions.html#how-to-structure-your-pr":{"tf":1.0},"tests/intro.html#compiletest-test-suites":{"tf":2.449489742783178},"compiletest.html#implementing-the-behavior-change":{"tf":2.0}},"df":23,"e":{"docs":{},"df":0,"d":{"docs":{},"df":0,"_":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{},"df":0,"u":{"docs":{"compiletest.html#implementing-the-behavior-change":{"tf":1.7320508075688773}},"df":1}}}}}}}}}}},"l":{"docs":{},"df":0,"i":{"docs":{},"df":0,"c":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{"traits/associated-types.html#associated-type-projection-and-normalization":{"tf":1.0},"hir.html#identifiers-in-the-hir":{"tf":1.0},"variance.html#variance-and-object-types":{"tf":1.0},"ty.html#import-conventions":{"tf":1.0},"method-lookup.html#candidate-assembly":{"tf":1.0},"mir/index.html#introduction-to-mir":{"tf":1.0},"method-lookup.html#method-lookup":{"tf":1.0}},"df":7,"l":{"docs":{},"df":0,"i":{"docs":{"ty.html#allocating-and-working-with-types":{"tf":1.0},"ty.html#import-conventions":{"tf":1.0},"traits/chalk-overview.html#an-overview-of-chalk":{"tf":1.0},"traits/canonical-queries.html#examples":{"tf":1.0},"ty.html#the-tcx-and-how-it-uses-lifetimes":{"tf":1.0},"variance.html#variance-of-type-and-lifetime-parameters":{"tf":1.0}},"df":6}}}}}},"a":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{"tests/adding.html#header-commands-configuring-rustc":{"tf":1.0},"tests/adding.html#adding-new-tests":{"tf":1.0},"mir/regionck.html#another-example":{"tf":1.0},"traits/canonicalization.html#executing-the-query":{"tf":1.0},"diag.html#suggestions":{"tf":1.4142135623730952},"hir.html#out-of-band-storage-and-the--crate--type":{"tf":1.0},"macro-expansion.html#macro-expansion":{"tf":1.0},"mir/regionck.html#universal-regions":{"tf":1.0},"tests/adding.html#comment-explaining-what-the-test-is-about":{"tf":1.4142135623730952}},"df":9}},"n":{"docs":{"rustc-driver.html#the-rustc-driver":{"tf":1.0},"high-level-overview.html#crate-structure":{"tf":1.0},"appendix/glossary.html#appendix-c-glossary":{"tf":1.4142135623730952},"variance.html#variance-of-type-and-lifetime-parameters":{"tf":1.0}},"df":4}}},"r":{"docs":{"macro-expansion.html#the-macro-parser":{"tf":1.0}},"df":1,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"s":{"docs":{"traits/lowering-to-logic.html#type-checking-generic-functions-beyond-horn-clauses":{"tf":1.0},"mir/index.html#key-mir-vocabulary":{"tf":2.449489742783178},"high-level-overview.html#the-main-stages-of-compilation":{"tf":2.0},"ty.html#the-tcx-and-how-it-uses-lifetimes":{"tf":1.0},"traits/chalk-overview.html#an-overview-of-chalk":{"tf":1.0},"compiler-debugging.html#expensive-operations-in-logs":{"tf":1.4142135623730952},"traits/lowering-to-logic.html#type-checking-normal-functions":{"tf":1.0},"method-lookup.html#method-lookup":{"tf":1.0},"traits/index.html#trait-solving-new-style":{"tf":1.0},"miri.html#miri":{"tf":1.0},"traits/canonicalization.html#canonicalization":{"tf":1.0},"mir/index.html#introduction-to-mir":{"tf":1.0},"appendix/glossary.html#appendix-c-glossary":{"tf":1.0},"type-inference.html#type-inference":{"tf":1.0},"traits/lowering-to-logic.html#lowering-to-logic":{"tf":1.0},"hir.html#the-hir":{"tf":1.0},"appendix/background.html#what-is-a-control-flow-graph":{"tf":1.0},"variance.html#the-algorithm":{"tf":1.4142135623730952},"variance.html#variance-and-associated-types":{"tf":1.0},"appendix/background.html#what-is-a-free-region-or-a-free-variable-what-about-bound-region":{"tf":2.449489742783178},"type-inference.html#inference-variables":{"tf":1.4142135623730952},"hir.html#the-hir-map":{"tf":1.4142135623730952},"hir.html#hir-bodies":{"tf":1.0}},"df":23,"i":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"/":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"m":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{},"df":0,"/":{"docs":{},"df":0,"w":{"docs":{},"df":0,"h":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"v":{"docs":{"appendix/background.html#what-is-a-free-region-or-a-free-variable-what-about-bound-region":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}},"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"m":{"docs":{"appendix/glossary.html#appendix-c-glossary":{"tf":1.0}},"df":1}}}}},"s":{"docs":{},"df":0,"/":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"m":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{},"df":0,"/":{"docs":{},"df":0,"w":{"docs":{},"df":0,"h":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"v":{"docs":{"appendix/background.html#what-is-a-free-region-or-a-free-variable-what-about-bound-region":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}}}}}}}},"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"t":{"docs":{"high-level-overview.html#crate-structure":{"tf":1.4142135623730952}},"df":1}},"s":{"docs":{"appendix/background.html#what-is-a-control-flow-graph":{"tf":1.0},"rustdoc.html#from-clean-to-crate":{"tf":1.0}},"df":2}}}},".":{"docs":{},"df":0,"g":{"docs":{"query.html#cycles-between-queries":{"tf":1.0},"traits/goals-and-clauses.html#domain-goals":{"tf":2.449489742783178},"mir/regionck.html#what-is-a-universe":{"tf":1.0},"const-eval.html#constant-evaluation":{"tf":1.0},"ty.html#allocating-and-working-with-types":{"tf":1.0},"method-lookup.html#candidate-assembly":{"tf":1.0},"tests/adding.html#normalization":{"tf":1.4142135623730952},"ty.html#import-conventions":{"tf":1.0},"mir/visitor.html#mir-visitor":{"tf":1.0},"tests/adding.html#guide-to-the-ui-tests":{"tf":1.0},"tests/adding.html#other-header-commands":{"tf":1.0},"tests/adding.html#naming-your-test":{"tf":1.0},"traits/associated-types.html#associated-type-projection-and-normalization":{"tf":1.0},"mir/regionck.html#mir-based-region-checking-nll":{"tf":1.4142135623730952},"hir.html#hir-bodies":{"tf":1.4142135623730952},"compiler-debugging.html#debugging-llvm":{"tf":1.7320508075688773},"traits/associated-types.html#skolemized-associated-types":{"tf":1.0},"traits/caching.html#an-example":{"tf":1.0},"rustc-driver.html#a-note-on-lifetimes":{"tf":1.4142135623730952},"traits/canonical-queries.html#canonical-queries":{"tf":1.0},"appendix/stupid-stats.html#what-next":{"tf":1.0},"traits/lowering-to-logic.html#rust-traits-and-logic":{"tf":1.0},"macro-expansion.html#example":{"tf":1.4142135623730952},"traits/resolution.html#overview":{"tf":1.0},"hir.html#the-hir-map":{"tf":1.0},"mir/index.html#key-mir-vocabulary":{"tf":1.7320508075688773},"mir/visitor.html#traversal":{"tf":1.0},"traits/canonical-queries.html#a-trait-query-in-rustc":{"tf":1.0},"appendix/glossary.html#appendix-c-glossary":{"tf":2.449489742783178},"tests/intro.html#compiletest-test-suites":{"tf":1.0},"macro-expansion.html#the-macro-parser":{"tf":1.0},"compiler-debugging.html#getting-logging-output":{"tf":1.0},"tests/running.html#running-tests":{"tf":1.0},"mir/index.html#mir-data-types":{"tf":1.0},"param_env.html#parameter-environment":{"tf":1.4142135623730952},"appendix/stupid-stats.html#compilercontroller":{"tf":1.0},"tests/adding.html#editing-and-updating-the-reference-files":{"tf":1.0},"hir.html#out-of-band-storage-and-the--crate--type":{"tf":1.4142135623730952},"method-lookup.html#method-lookup":{"tf":1.4142135623730952},"traits/lowering-to-logic.html#lowering-to-logic":{"tf":1.0},"macro-expansion.html#macro-expansion":{"tf":1.0},"rustc-driver.html#the-rustc-driver":{"tf":1.0},"ty.html#beyond-types-other-kinds-of-arena-allocated-data-structures":{"tf":1.0},"hir.html#identifiers-in-the-hir":{"tf":1.0},"traits/lowering-rules.html#trait-header":{"tf":1.0},"high-level-overview.html#the-main-stages-of-compilation":{"tf":1.4142135623730952},"compiler-debugging.html#formatting-graphviz-output-dot-files":{"tf":1.4142135623730952},"high-level-overview.html#crate-structure":{"tf":1.0}},"df":48},"n":{"docs":{},"df":0,"o":{"docs":{},"df":0,"d":{"docs":{"diag.html#declaring-a-lint":{"tf":1.0}},"df":1}}}},"m":{"docs":{},"df":0,"p":{"docs":{},"df":0,"t":{"docs":{},"df":0,"i":{"docs":{"type-inference.html#lexical-region-resolution":{"tf":1.0},"traits/canonical-queries.html#examples":{"tf":1.0},"tests/adding.html#guide-to-the-ui-tests":{"tf":1.0},"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.0},"miri.html#miri":{"tf":1.0},"mir/regionck.html#another-example":{"tf":1.0}},"df":6}},"l":{"docs":{},"df":0,"o":{"docs":{},"df":0,"y":{"docs":{"traits/resolution.html#overview":{"tf":1.0}},"df":1}}}},"i":{"docs":{},"df":0,"t":{"docs":{"rustdoc.html#from-clean-to-crate":{"tf":1.0},"diag.html#error-messages":{"tf":3.0},"appendix/code-index.html#appendix-d-code-index":{"tf":1.4142135623730952},"diag.html#emitting-diagnostics":{"tf":1.7320508075688773},"query.html#cycles-between-queries":{"tf":1.4142135623730952},"traits/chalk-overview.html#rules":{"tf":1.0},"traits/lowering-module.html#unit-tests":{"tf":1.0},"diag.html#suggestions":{"tf":1.0},"compiler-debugging.html#getting-a-backtrace-for-errors":{"tf":1.0},"compiler-debugging.html#getting-logging-output":{"tf":1.0},"compiler-debugging.html#debugging-llvm":{"tf":1.7320508075688773},"diag.html#declaring-a-lint":{"tf":1.0},"tests/adding.html#error-annotations":{"tf":1.0}},"df":13,"=":{"docs":{},"df":0,"l":{"docs":{},"df":0,"l":{"docs":{},"df":0,"v":{"docs":{},"df":0,"m":{"docs":{"compiler-debugging.html#debugging-llvm":{"tf":1.0}},"df":1}}}}},"t":{"docs":{"diag.html#suggestions":{"tf":1.0}},"df":1}}},"s":{"docs":{},"df":0,"c":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{},"df":0,"p":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{"tests/adding.html#ignoring-tests":{"tf":1.0}},"df":1}}}}}}}},"b":{"docs":{"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.0}},"df":1,"e":{"docs":{},"df":0,"d":{"docs":{"tests/intro.html#other-tests":{"tf":1.0}},"df":1}}},"u":{"docs":{},"df":0,"l":{"docs":{"tests/intro.html#testing-on-emulators":{"tf":3.605551275463989},"appendix/stupid-stats.html#appendix-a-a-tutorial-on-creating-a-drop-in-replacement-for-rustc":{"tf":1.0},"rustc-driver.html#the-rustc-driver":{"tf":1.0}},"df":3}}},"n":{"docs":{},"df":0,"v":{"docs":{"compiler-debugging.html#getting-logging-output":{"tf":1.0},"traits/lowering-rules.html#trait-header":{"tf":1.0}},"df":2,"i":{"docs":{},"df":0,"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{"param_env.html#parameter-environment":{"tf":2.23606797749979},"traits/canonicalization.html#canonicalization":{"tf":1.0},"traits/lowering-rules.html#trait-header":{"tf":1.0},"incrcomp-debugging.html#dumping-the-graph":{"tf":1.4142135623730952},"incrcomp-debugging.html#tracking-down-incorrect-edges":{"tf":1.0},"const-eval.html#constant-evaluation":{"tf":1.0},"how-to-build-and-run.html#creating-a-rustup-toolchain":{"tf":1.0},"miri.html#miri":{"tf":1.0},"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.0},"tests/adding.html#ignoring-tests":{"tf":1.0},"type-inference.html#enforcing-equality--subtyping":{"tf":1.0},"traits/bibliography.html#bibliography":{"tf":1.0},"compiler-debugging.html#getting-logging-output":{"tf":1.0},"traits/resolution.html#candidate-assembly":{"tf":1.4142135623730952}},"df":14}}}}},"s":{"docs":{},"df":0,"u":{"docs":{},"df":0,"r":{"docs":{"type-inference.html#snapshots":{"tf":1.0},"type-inference.html#region-constraints":{"tf":1.0},"traits/resolution.html#overview":{"tf":1.0},"type-inference.html#enforcing-equality--subtyping":{"tf":1.0},"tests/intro.html#other-tests":{"tf":1.0},"variance.html#variance-and-object-types":{"tf":1.0},"query.html#how-the-compiler-executes-a-query":{"tf":1.0},"rustc-driver.html#a-note-on-lifetimes":{"tf":1.0},"query.html#adding-a-new-kind-of-query":{"tf":1.0},"mir/passes.html#stealing":{"tf":1.4142135623730952},"query.html#cycles-between-queries":{"tf":1.0},"variance.html#addendum-variance-on-traits":{"tf":1.0},"mir/regionck.html#skolemization-and-outlives-constraints":{"tf":1.0},"traits/chalk-overview.html#well-formedness-checks":{"tf":1.0},"conventions.html#using-crates-from-cratesio":{"tf":1.0},"tests/adding.html#other-header-commands":{"tf":1.0},"variance.html#variance-and-associated-types":{"tf":1.0},"rustdoc.html#hot-potato":{"tf":1.0}},"df":18}}},"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"u":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{"mir/index.html#key-mir-vocabulary":{"tf":1.0},"name-resolution.html#overall-strategy":{"tf":1.4142135623730952},"traits/associated-types.html#integration-with-unification":{"tf":1.0},"compiletest.html#adding-a-new-header-command":{"tf":1.0},"compiler-debugging.html#debugging-llvm":{"tf":1.0},"compiler-debugging.html#getting-a-backtrace-for-errors":{"tf":1.0},"mir/regionck.html#skolemization-and-outlives-constraints":{"tf":1.0}},"df":7}}},"d":{"docs":{"rustdoc.html#cheat-sheet":{"tf":1.0},"type-checking.html#type-collection":{"tf":1.0},"param_env.html#parameter-environment":{"tf":1.0},"traits/lowering-rules.html#associated-type-values":{"tf":1.0},"traits/chalk-overview.html#lowering":{"tf":1.0}},"df":5}},"a":{"docs":{},"df":0,"p":{"docs":{},"df":0,"s":{"docs":{},"df":0,"u":{"docs":{},"df":0,"l":{"docs":{"type-inference.html#snapshots":{"tf":1.0}},"df":1}}}}},"l":{"docs":{},"df":0,"o":{"docs":{},"df":0,"s":{"docs":{"name-resolution.html#scopes-and-ribs":{"tf":1.0},"type-inference.html#enforcing-equality--subtyping":{"tf":1.0}},"df":2}}}},"q":{"docs":{},"df":0,"u":{"docs":{},"df":0,"e":{"docs":{},"df":0,"u":{"docs":{"traits/resolution.html#overview":{"tf":1.0},"type-inference.html#subtyping-obligations":{"tf":1.0}},"df":2}}}},"l":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"g":{"docs":{"mir/regionck.html#final-example":{"tf":1.0}},"df":1}}}},"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"l":{"docs":{"type-inference.html#enforcing-equality--subtyping":{"tf":1.0}},"df":1}}},"j":{"docs":{},"df":0,"o":{"docs":{},"df":0,"y":{"docs":{"mir/index.html#the-mir-mid-level-ir":{"tf":1.0}},"df":1}}},"g":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{"traits/lowering-to-logic.html#type-checking-generic-functions-beyond-horn-clauses":{"tf":1.0},"mir/regionck.html#skolemization-and-outlives-constraints":{"tf":1.0},"mir/regionck.html#back-to-our-example":{"tf":1.0}},"df":3,"e":{"docs":{},"df":0,"/":{"docs":{},"df":0,"s":{"docs":{},"df":0,"r":{"docs":{},"df":0,"c":{"docs":{},"df":0,"/":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"a":{"docs":{},"df":0,"d":{"docs":{},"df":0,"m":{"docs":{},"df":0,"e":{"docs":{},"df":0,".":{"docs":{},"df":0,"m":{"docs":{},"df":0,"d":{"docs":{"traits/slg.html#the-slg-solver":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}},"d":{"docs":{"incrcomp-debugging.html#dumping-the-graph":{"tf":1.0},"query.html#queries-demand-driven-compilation":{"tf":1.0},"diag.html#suggestions":{"tf":1.0},"how-to-build-and-run.html#creating-a-rustup-toolchain":{"tf":1.0},"appendix/background.html#what-is-a-control-flow-graph":{"tf":1.0},"compiletest.html#adding-a-new-header-command":{"tf":1.4142135623730952},"variance.html#variance-and-object-types":{"tf":1.0},"mir/regionck.html#another-example":{"tf":1.0},"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.0},"appendix/stupid-stats.html#compilercontroller":{"tf":1.0},"incremental-compilation.html#improvements-to-the-basic-algorithm":{"tf":1.0},"type-inference.html#extracting-region-constraints":{"tf":1.0},"appendix/glossary.html#appendix-c-glossary":{"tf":1.0},"traits/canonical-queries.html#examples":{"tf":1.0},"mir/index.html#key-mir-vocabulary":{"tf":1.0},"rustc-driver.html#the-rustc-driver":{"tf":1.0},"name-resolution.html#scopes-and-ribs":{"tf":1.7320508075688773}},"df":17,"(":{"docs":{},"df":0,"x":{"docs":{"mir/regionck.html#skolemization-and-outlives-constraints":{"tf":1.0}},"df":1},"'":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{"mir/regionck.html#back-to-our-example":{"tf":2.23606797749979},"mir/regionck.html#representing-the-values-of-a-region-variable":{"tf":1.0}},"df":2}}}},"a":{"docs":{"mir/regionck.html#representing-the-values-of-a-region-variable":{"tf":1.0}},"df":1}}}},"a":{"docs":{},"df":0,"b":{"docs":{},"df":0,"l":{"docs":{"mir/borrowck.html#mir-borrow-check":{"tf":1.0},"appendix/glossary.html#appendix-c-glossary":{"tf":1.0},"tests/adding.html#other-header-commands":{"tf":1.0},"compiler-debugging.html#getting-a-backtrace":{"tf":1.4142135623730952},"compiler-debugging.html#expensive-operations-in-logs":{"tf":1.4142135623730952},"mir/borrowck.html#major-phases-of-the-borrow-checker":{"tf":1.0},"how-to-build-and-run.html#running-xpy-and-building-a-stage1-compiler":{"tf":1.0},"how-to-build-and-run.html#create-a-configtoml":{"tf":2.0},"compiler-debugging.html#debugging-llvm":{"tf":1.4142135623730952},"incremental-compilation.html#the-try-mark-green-algorithm":{"tf":1.0},"rustdoc.html#from-clean-to-crate":{"tf":1.0}},"df":11}}},"t":{"docs":{},"df":0,"i":{"docs":{},"df":0,"r":{"docs":{"ty.html#the-tcx-and-how-it-uses-lifetimes":{"tf":1.0},"miri.html#interpretation":{"tf":1.0},"appendix/stupid-stats.html#overview-of-the-compilation-process":{"tf":1.0},"rustdoc.html#the-walking-tour-of-rustdoc":{"tf":1.0},"variance.html#dependency-graph-management":{"tf":1.0},"query.html#queries-demand-driven-compilation":{"tf":1.0},"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.0},"high-level-overview.html#the-main-stages-of-compilation":{"tf":1.0},"how-to-build-and-run.html#creating-a-rustup-toolchain":{"tf":1.0},"compiler-debugging.html#getting-logging-output":{"tf":1.0},"appendix/glossary.html#appendix-c-glossary":{"tf":1.0}},"df":11}},"r":{"docs":{},"df":0,"i":{"docs":{"traits/lowering-module.html#the--program_clauses_for--query":{"tf":1.0},"query.html#adding-a-new-kind-of-query":{"tf":1.7320508075688773},"traits/resolution.html#candidate-assembly":{"tf":1.0},"mir/regionck.html#representing-the-values-of-a-region-variable":{"tf":1.0},"mir/borrowck.html#major-phases-of-the-borrow-checker":{"tf":1.0},"miri.html#interpretation":{"tf":1.0},"rustdoc.html#from-crate-to-clean":{"tf":1.0},"variance.html#trait-variance-and-vtable-resolution":{"tf":1.0}},"df":8},"y":{"docs":{},"df":0,"p":{"docs":{},"df":0,"o":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{"rustc-driver.html#the-rustc-driver":{"tf":1.0},"the-parser.html#the-parser":{"tf":1.0}},"df":2}}}}}}},"e":{"docs":{},"df":0,"r":{"docs":{"type-inference.html#creating-an-inference-context":{"tf":1.4142135623730952},"tests/intro.html#testing-with-docker-images":{"tf":1.0},"mir/regionck.html#what-is-a-universe":{"tf":1.4142135623730952}},"df":3}}},"f":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"c":{"docs":{"type-inference.html#enforcing-equality--subtyping":{"tf":1.7320508075688773},"conventions.html#formatting-and-the-tidy-script":{"tf":1.0},"mir/borrowck.html#mir-borrow-check":{"tf":1.0}},"df":3}}}},"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"m":{"docs":{"rustdoc.html#from-clean-to-crate":{"tf":1.0}},"df":1}},"u":{"docs":{},"df":0,"g":{"docs":{},"df":0,"h":{"docs":{"name-resolution.html#todo":{"tf":1.0},"tests/adding.html#normalization":{"tf":1.0},"how-to-build-and-run.html#running-xpy-and-building-a-stage1-compiler":{"tf":1.0},"tests/adding.html#comment-explaining-what-the-test-is-about":{"tf":1.0},"param_env.html#parameter-environment":{"tf":1.0}},"df":5}}}},"u":{"docs":{},"df":0,"m":{"docs":{"variance.html#the-algorithm":{"tf":1.7320508075688773},"const-eval.html#constant-evaluation":{"tf":1.0},"variance.html#variance-of-type-and-lifetime-parameters":{"tf":1.0},"conventions.html#prefer-exhaustive-matches":{"tf":1.4142135623730952},"variance.html#constraints":{"tf":1.0},"hir.html#the-hir-map":{"tf":1.0},"miri.html#datastructures":{"tf":1.0},"ty.html#allocating-and-working-with-types":{"tf":1.0},"mir/index.html#mir-data-types":{"tf":1.7320508075688773},"variance.html#variance-and-object-types":{"tf":1.0}},"df":10,"e":{"docs":{},"df":0,"r":{"docs":{"traits/goals-and-clauses.html#coinductive-goals":{"tf":1.7320508075688773},"traits/canonical-queries.html#a-trait-query-in-rustc":{"tf":1.4142135623730952},"traits/lowering-rules.html#trait-header":{"tf":1.0}},"df":3}}}}},"o":{"docs":{},"df":0,"f":{"docs":{"macro-expansion.html#example":{"tf":1.0}},"df":1}},"q":{"docs":{"traits/lowering-rules.html#trait-header":{"tf":1.7320508075688773},"type-inference.html#enforcing-equality--subtyping":{"tf":1.4142135623730952}},"df":2,"u":{"docs":{},"df":0,"i":{"docs":{},"df":0,"v":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{"type-inference.html#subtyping-obligations":{"tf":1.0},"appendix/background.html#what-is-a-free-region-or-a-free-variable-what-about-bound-region":{"tf":1.0},"high-level-overview.html#the-main-stages-of-compilation":{"tf":1.0},"traits/lowering-rules.html#trait-header":{"tf":1.0},"query.html#how-the-compiler-executes-a-query":{"tf":1.0}},"df":5}}}},"a":{"docs":{},"df":0,"l":{"docs":{"traits/lowering-to-logic.html#type-checking-generic-functions-beyond-horn-clauses":{"tf":1.0},"traits/associated-types.html#integration-with-unification":{"tf":1.0},"traits/canonicalization.html#canonicalizing-the-query":{"tf":1.0},"type-inference.html#subtyping-obligations":{"tf":1.0},"traits/associated-types.html#skolemized-associated-types":{"tf":1.4142135623730952},"type-inference.html#inference-variables":{"tf":1.0},"traits/associated-types.html#projection-equality":{"tf":1.7320508075688773},"ty.html#allocating-and-working-with-types":{"tf":1.4142135623730952},"traits/goals-and-clauses.html#domain-goals":{"tf":1.4142135623730952},"mir/regionck.html#representing-the-values-of-a-region-variable":{"tf":1.0},"traits/resolution.html#overview":{"tf":1.0},"type-inference.html#trying-equality":{"tf":1.7320508075688773},"traits/associated-types.html#equality-and-associated-types":{"tf":1.7320508075688773},"type-inference.html#region-constraints":{"tf":1.0},"traits/index.html#trait-solving-new-style":{"tf":1.0},"type-inference.html#enforcing-equality--subtyping":{"tf":2.449489742783178}},"df":16},"t":{"docs":{"type-inference.html#extracting-region-constraints":{"tf":1.0},"traits/associated-types.html#integration-with-unification":{"tf":1.0},"type-inference.html#enforcing-equality--subtyping":{"tf":1.7320508075688773},"traits/lowering-to-logic.html#rust-traits-and-logic":{"tf":1.0},"type-inference.html#trying-equality":{"tf":1.0}},"df":5}}},"<":{"docs":{},"df":0,"u":{"docs":{"traits/lowering-to-logic.html#rust-traits-and-logic":{"tf":1.0},"traits/lowering-to-logic.html#type-checking-normal-functions":{"tf":1.4142135623730952},"traits/lowering-to-logic.html#type-checking-generic-functions-beyond-horn-clauses":{"tf":1.0}},"df":3,"s":{"docs":{"traits/lowering-to-logic.html#type-checking-normal-functions":{"tf":1.0},"traits/lowering-to-logic.html#rust-traits-and-logic":{"tf":1.0}},"df":2}},"t":{"docs":{"traits/lowering-to-logic.html#rust-traits-and-logic":{"tf":1.4142135623730952},"traits/lowering-to-logic.html#type-checking-generic-functions-beyond-horn-clauses":{"tf":1.0}},"df":2},"v":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"<":{"docs":{},"df":0,"u":{"docs":{"traits/lowering-to-logic.html#rust-traits-and-logic":{"tf":1.0}},"df":1}}}}}},"(":{"docs":{},"df":0,"u":{"docs":{},"df":0,"s":{"docs":{"traits/lowering-to-logic.html#type-checking-normal-functions":{"tf":1.0},"traits/lowering-to-logic.html#rust-traits-and-logic":{"tf":1.0}},"df":2}},"v":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"<":{"docs":{},"df":0,"?":{"docs":{},"df":0,"t":{"docs":{"traits/lowering-to-logic.html#rust-traits-and-logic":{"tf":1.0}},"df":1}}}}}},"?":{"docs":{},"df":0,"u":{"docs":{"traits/lowering-to-logic.html#type-checking-normal-functions":{"tf":1.0}},"df":1},"t":{"docs":{"traits/lowering-to-logic.html#rust-traits-and-logic":{"tf":1.0}},"df":1}},"t":{"docs":{"traits/lowering-to-logic.html#type-checking-generic-functions-beyond-horn-clauses":{"tf":1.4142135623730952}},"df":1}}},"v":{"docs":{},"df":0,"o":{"docs":{},"df":0,"l":{"docs":{},"df":0,"v":{"docs":{"appendix/stupid-stats.html#appendix-a-a-tutorial-on-creating-a-drop-in-replacement-for-rustc":{"tf":1.4142135623730952}},"df":1}}},"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"y":{"docs":{},"df":0,"t":{"docs":{},"df":0,"h":{"docs":{"traits/lowering-to-logic.html#type-checking-normal-functions":{"tf":1.0},"mir/regionck.html#skolemization-and-outlives-constraints":{"tf":1.0},"tests/intro.html#testing-on-emulators":{"tf":1.0},"mir/regionck.html#what-is-a-universe":{"tf":1.0},"traits/resolution.html#selection-during-translation":{"tf":1.0},"appendix/stupid-stats.html#appendix-a-a-tutorial-on-creating-a-drop-in-replacement-for-rustc":{"tf":1.0},"how-to-build-and-run.html#other-xpy-commands":{"tf":1.0}},"df":7}}}},"n":{"docs":{"name-resolution.html#overall-strategy":{"tf":1.4142135623730952},"type-inference.html#trying-equality":{"tf":1.0},"rustdoc.html#hot-potato":{"tf":1.0},"high-level-overview.html#the-main-stages-of-compilation":{"tf":1.0},"tests/adding.html#tests-that-do-not-result-in-compile-errors":{"tf":1.0},"traits/caching.html#caching-and-subtle-considerations-therewith":{"tf":1.0},"mir/visitor.html#mir-visitor":{"tf":1.0},"compiler-debugging.html#expensive-operations-in-logs":{"tf":1.7320508075688773},"miri.html#interpretation":{"tf":1.0},"conventions.html#line-length":{"tf":1.0},"compiletest.html#introduction":{"tf":1.0},"mir/borrowck.html#mir-borrow-check":{"tf":1.0},"traits/canonical-queries.html#a-trait-query-in-rustc":{"tf":1.0},"compiler-debugging.html#debugging-llvm":{"tf":1.0},"traits/goals-and-clauses.html#coinductive-goals":{"tf":1.0},"mir/passes.html#stealing":{"tf":1.0},"traits/canonical-queries.html#examples":{"tf":1.0},"about-this-guide.html#about-this-guide":{"tf":1.0},"incremental-compilation.html#the-basic-algorithm":{"tf":1.0},"name-resolution.html#scopes-and-ribs":{"tf":1.0},"mir/regionck.html#another-example":{"tf":1.4142135623730952},"traits/specialization.html#specialization":{"tf":1.0}},"df":22,"t":{"docs":{"rustdoc.html#from-crate-to-clean":{"tf":1.0}},"df":1,"u":{"docs":{"traits/lowering-rules.html#lowering-function-and-constant-declarations":{"tf":1.0},"query.html#queries-demand-driven-compilation":{"tf":1.0},"query.html#how-the-compiler-executes-a-query":{"tf":1.0},"traits/lowering-rules.html#function-and-constant-values":{"tf":1.0},"mir/regionck.html#subtyping-and-skolemization":{"tf":1.0},"mir/regionck.html#mir-based-region-checking-nll":{"tf":1.0},"type-inference.html#extracting-region-constraints":{"tf":1.0}},"df":7}}}},"a":{"docs":{},"df":0,"l":{"docs":{},"df":0,"u":{"docs":{"variance.html#dependency-graph-management":{"tf":1.0},"compiler-debugging.html#expensive-operations-in-logs":{"tf":1.0},"miri.html#miri":{"tf":2.8284271247461905},"const-eval.html#constant-evaluation":{"tf":3.0},"traits/resolution.html#overview":{"tf":1.0},"compiletest.html#implementing-the-behavior-change":{"tf":1.4142135623730952},"mir/passes.html#mir-passes":{"tf":1.0},"param_env.html#parameter-environment":{"tf":1.7320508075688773},"appendix/glossary.html#appendix-c-glossary":{"tf":1.0},"miri.html#allocations":{"tf":1.0},"miri.html#interpretation":{"tf":2.6457513110645909},"miri.html#datastructures":{"tf":1.0}},"df":12}}}},"2":{"docs":{"name-resolution.html#todo":{"tf":1.0}},"df":1},"0":{"docs":{},"df":0,"9":{"docs":{},"df":0,"9":{"docs":{},"df":0,"9":{"docs":{"diag.html#suggestions":{"tf":1.4142135623730952}},"df":1}}}},"f":{"docs":{},"df":0,"f":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"t":{"docs":{"diag.html#emitting-diagnostics":{"tf":1.0}},"df":1}}},"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{"conventions.html#prefer-exhaustive-matches":{"tf":1.0},"traits/index.html#trait-solving-new-style":{"tf":1.0},"variance.html#dependency-graph-management":{"tf":1.0},"traits/canonicalization.html#executing-the-query":{"tf":1.0},"type-inference.html#enforcing-equality--subtyping":{"tf":1.0},"type-inference.html#trying-equality":{"tf":1.0},"traits/caching.html#an-example":{"tf":1.4142135623730952},"rustc-driver.html#the-rustc-driver":{"tf":1.0},"traits/caching.html#caching-and-subtle-considerations-therewith":{"tf":1.0},"tests/intro.html#compiletest-test-suites":{"tf":1.0},"method-lookup.html#method-lookup":{"tf":1.0},"high-level-overview.html#crate-structure":{"tf":1.0},"type-inference.html#snapshots":{"tf":1.0},"query.html#queries-demand-driven-compilation":{"tf":1.0},"hir.html#identifiers-in-the-hir":{"tf":1.0}},"df":15}}},"i":{"docs":{},"df":0,"c":{"docs":{},"df":0,"i":{"docs":{"ty.html#allocating-and-working-with-types":{"tf":1.0},"appendix/glossary.html#appendix-c-glossary":{"tf":1.0},"mir/passes.html#implementing-and-registering-a-pass":{"tf":1.0},"compiletest.html#introduction":{"tf":1.0},"traits/lowering-to-logic.html#type-checking-generic-functions-beyond-horn-clauses":{"tf":1.0},"mir/regionck.html#representing-the-values-of-a-region-variable":{"tf":1.0}},"df":6}}}}}},"p":{"docs":{"traits/associated-types.html#integration-with-unification":{"tf":1.0},"appendix/glossary.html#appendix-c-glossary":{"tf":1.0},"mir/regionck.html#skolemization-and-outlives-constraints":{"tf":1.7320508075688773},"mir/regionck.html#back-to-our-example":{"tf":1.7320508075688773}},"df":4,"n":{"docs":{},"df":0,"+":{"docs":{},"df":0,"1":{"docs":{},"df":0,".":{"docs":{},"df":0,".":{"docs":{},"df":0,"p":{"docs":{},"df":0,"m":{"docs":{"traits/lowering-rules.html#associated-type-declarations":{"tf":3.1622776601683797}},"df":1}}}}}}},"l":{"docs":{},"df":0,"d":{"docs":{},"df":0,"i":{"docs":{},"df":0,"'":{"docs":{},"df":0,"1":{"docs":{},"df":0,"1":{"docs":{"variance.html#variance-of-type-and-lifetime-parameters":{"tf":1.0}},"df":1}}}}},"a":{"docs":{},"df":0,"c":{"docs":{},"df":0,"e":{"docs":{"query.html#how-the-compiler-executes-a-query":{"tf":1.0},"type-inference.html#snapshots":{"tf":1.0},"type-inference.html#inference-variables":{"tf":1.0},"mir/passes.html#implementing-and-registering-a-pass":{"tf":1.0},"mir/borrowck.html#major-phases-of-the-borrow-checker":{"tf":1.0},"name-resolution.html#todo":{"tf":1.0},"traits/specialization.html#specialization":{"tf":1.7320508075688773},"mir/borrowck.html#mir-borrow-check":{"tf":1.4142135623730952},"macro-expansion.html#the-macro-parser":{"tf":1.0},"name-resolution.html#name-resolution":{"tf":1.0},"miri.html#miri":{"tf":1.0},"query.html#adding-a-new-kind-of-query":{"tf":1.7320508075688773},"mir/index.html#key-mir-vocabulary":{"tf":3.7416573867739415},"name-resolution.html#scopes-and-ribs":{"tf":1.4142135623730952},"mir/index.html#mir-data-types":{"tf":2.0},"appendix/glossary.html#appendix-c-glossary":{"tf":1.0},"appendix/background.html#what-is-a-control-flow-graph":{"tf":1.0},"ty.html#the-tcx-and-how-it-uses-lifetimes":{"tf":1.0}},"df":18,"h":{"docs":{},"df":0,"o":{"docs":{},"df":0,"l":{"docs":{},"df":0,"d":{"docs":{"traits/canonicalization.html#canonicalization":{"tf":1.0},"diag.html#suggestions":{"tf":1.0}},"df":2}}}}}},"t":{"docs":{},"df":0,"f":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"m":{"docs":{"tests/intro.html#testing-on-emulators":{"tf":1.7320508075688773},"tests/intro.html#testing-with-docker-images":{"tf":1.4142135623730952},"tests/intro.html#testing-infrastructure":{"tf":1.7320508075688773},"appendix/glossary.html#appendix-c-glossary":{"tf":1.4142135623730952},"tests/adding.html#normalization":{"tf":1.7320508075688773}},"df":5}}}}},"y":{"docs":{"compiler-debugging.html#debugging-llvm":{"tf":1.4142135623730952},"traits/specialization.html#specialization":{"tf":1.0},"mir/index.html#key-mir-vocabulary":{"tf":1.0},"mir/regionck.html#final-example":{"tf":1.0}},"df":4,"e":{"docs":{},"df":0,"r":{"docs":{"the-parser.html#the-parser":{"tf":1.0}},"df":1}},"g":{"docs":{},"df":0,"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"u":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{"mir/index.html#key-mir-vocabulary":{"tf":1.0}},"df":1}}}}}}},"u":{"docs":{},"df":0,"s":{"docs":{},"df":0,"i":{"docs":{},"df":0,"b":{"docs":{},"df":0,"l":{"docs":{"method-lookup.html#candidate-assembly":{"tf":1.0}},"df":1}}}}},"n":{"docs":{"query.html#how-the-compiler-executes-a-query":{"tf":1.0}},"df":1}},"u":{"docs":{"traits/hrtb.html#higher-ranked-trait-obligations":{"tf":1.0},"mir/regionck.html#region-variables-and-constraints":{"tf":1.0}},"df":2,"g":{"docs":{"rustc-driver.html#a-note-on-lifetimes":{"tf":1.0}},"df":1}},"e":{"docs":{},"df":0,"a":{"docs":{},"df":0,"s":{"docs":{"tests/adding.html#normalization":{"tf":1.0},"appendix/stupid-stats.html#what-next":{"tf":1.0},"conventions.html#how-to-structure-your-pr":{"tf":1.0},"compiler-debugging.html#debugging-the-compiler":{"tf":1.0},"about-this-guide.html#about-this-guide":{"tf":1.0},"traits/chalk-overview.html#an-overview-of-chalk":{"tf":1.0},"rustdoc.html#hot-potato":{"tf":1.0}},"df":7,"u":{"docs":{},"df":0,"r":{"docs":{"incrcomp-debugging.html#dumping-the-graph":{"tf":1.0}},"df":1}}}}}},"e":{"docs":{},"df":0,"a":{"docs":{},"df":0,"k":{"docs":{"ty.html#the-tcx-and-how-it-uses-lifetimes":{"tf":1.0}},"df":1}},"r":{"docs":{"query.html#how-the-compiler-executes-a-query":{"tf":1.4142135623730952},"macro-expansion.html#the-macro-parser":{"tf":1.0},"hir.html#identifiers-in-the-hir":{"tf":1.0},"rustdoc.html#hot-potato":{"tf":1.0},"compiletest.html#implementing-the-behavior-change":{"tf":1.0},"mir/regionck.html#what-is-a-universe":{"tf":1.0}},"df":6,"s":{"docs":{},"df":0,"p":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{"rustc-driver.html#the-rustc-driver":{"tf":1.0}},"df":1}}}},"i":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{"variance.html#variance-of-type-and-lifetime-parameters":{"tf":1.0},"mir/index.html#key-mir-vocabulary":{"tf":1.0}},"df":2}}}},"f":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"m":{"docs":{"tests/adding.html#normalization":{"tf":1.0},"mir/passes.html#mir-passes":{"tf":1.0},"appendix/stupid-stats.html#compilercalls":{"tf":1.4142135623730952},"ty.html#the-tcx-and-how-it-uses-lifetimes":{"tf":1.0},"rustdoc.html#the-walking-tour-of-rustdoc":{"tf":1.0},"mir/borrowck.html#major-phases-of-the-borrow-checker":{"tf":1.0},"compiler-debugging.html#logging-etiquette":{"tf":1.0},"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.0},"name-resolution.html#overall-strategy":{"tf":1.4142135623730952},"how-to-build-and-run.html#create-a-configtoml":{"tf":1.0},"tests/intro.html#compiletest-test-suites":{"tf":1.0},"type-inference.html#enforcing-equality--subtyping":{"tf":1.4142135623730952},"traits/specialization.html#specialization":{"tf":1.0},"type-inference.html#snapshots":{"tf":1.0},"compiler-debugging.html#debugging-llvm":{"tf":1.0},"appendix/code-index.html#appendix-d-code-index":{"tf":1.0},"type-inference.html#inference-variables":{"tf":1.0},"incremental-compilation.html#improvements-to-the-basic-algorithm":{"tf":1.4142135623730952},"mir/passes.html#implementing-and-registering-a-pass":{"tf":1.0},"high-level-overview.html#the-main-stages-of-compilation":{"tf":1.4142135623730952}},"df":20}}},"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{"traits/goals-and-clauses.html#coinductive-goals":{"tf":1.0}},"df":1}}}}}},"i":{"docs":{},"df":0,"o":{"docs":{},"df":0,"d":{"docs":{"type-inference.html#extracting-region-constraints":{"tf":1.0}},"df":1}}},"v":{"docs":{},"df":0,"a":{"docs":{},"df":0,"s":{"docs":{"rustc-driver.html#a-note-on-lifetimes":{"tf":1.0},"high-level-overview.html#crate-structure":{"tf":1.0}},"df":2}}},"h":{"docs":{},"df":0,"a":{"docs":{},"df":0,"p":{"docs":{"how-to-build-and-run.html#create-a-configtoml":{"tf":1.0},"how-to-build-and-run.html#running-xpy-and-building-a-stage1-compiler":{"tf":1.0},"traits/implied-bounds.html#implied-bounds":{"tf":1.0},"mir/regionck.html#what-is-a-universe":{"tf":1.0},"hir.html#identifiers-in-the-hir":{"tf":1.0},"tests/adding.html#naming-your-test":{"tf":1.0},"appendix/glossary.html#appendix-c-glossary":{"tf":1.0},"compiletest.html#implementing-the-behavior-change":{"tf":1.0},"incrcomp-debugging.html#dumping-the-graph":{"tf":1.0},"ty.html#allocating-and-working-with-types":{"tf":1.0},"type-inference.html#enforcing-equality--subtyping":{"tf":1.0},"ty.html#the-tcx-and-how-it-uses-lifetimes":{"tf":1.0},"traits/lowering-rules.html#trait-header":{"tf":1.0},"type-inference.html#inference-variables":{"tf":1.0}},"df":14}}},"m":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{"variance.html#addendum-variance-on-traits":{"tf":1.0},"traits/resolution.html#candidate-assembly":{"tf":1.0},"traits/goals-and-clauses.html#domain-goals":{"tf":1.0},"high-level-overview.html#the-main-stages-of-compilation":{"tf":1.0},"traits/associated-types.html#associated-type-projection-and-normalization":{"tf":1.0}},"df":5},"s":{"docs":{},"df":0,"s":{"docs":{"conventions.html#using-crates-from-cratesio":{"tf":1.0}},"df":1}}},"a":{"docs":{},"df":0,"n":{"docs":{"type-inference.html#snapshots":{"tf":1.0}},"df":1}}}},"o":{"docs":{},"df":0,"p":{"docs":{},"df":0,"l":{"docs":{"rustc-driver.html#a-note-on-lifetimes":{"tf":1.0},"tests/running.html#running-an-individual-test":{"tf":1.0},"tests/intro.html#testing-with-docker-images":{"tf":1.0},"traits/associated-types.html#associated-type-projection-and-normalization":{"tf":1.0}},"df":4}}}},"r":{"docs":{"conventions.html#use-todo-comments-for-things-you-dont-want-to-forget":{"tf":1.4142135623730952},"tests/intro.html#testing-infrastructure":{"tf":1.0},"tests/running.html#running-tests":{"tf":1.0},"conventions.html#formatting-and-the-tidy-script":{"tf":1.0},"tests/adding.html#adding-new-tests":{"tf":1.4142135623730952},"tests/running.html#running-a-subset-of-the-test-suites":{"tf":1.0},"compiler-debugging.html#debugging-the-compiler":{"tf":1.0},"about-this-guide.html#about-this-guide":{"tf":1.0},"conventions.html#how-to-structure-your-pr":{"tf":2.0}},"df":9,"e":{"docs":{"traits/hrtb.html#basic-matching-and-skolemization-leaks":{"tf":1.0},"mir/visitor.html#traversal":{"tf":1.0}},"df":2,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{"appendix/stupid-stats.html#compilercalls":{"tf":1.0}},"df":1}}},"t":{"docs":{},"df":0,"i":{"docs":{"appendix/stupid-stats.html#what-next":{"tf":1.4142135623730952},"appendix/background.html#what-is-a-control-flow-graph":{"tf":1.0},"mir/index.html#key-mir-vocabulary":{"tf":1.0},"tests/adding.html#other-header-commands":{"tf":1.0},"compiletest.html#adding-a-new-header-command":{"tf":1.0},"query.html#adding-a-new-kind-of-query":{"tf":1.0},"appendix/stupid-stats.html#compilercalls":{"tf":1.0},"tests/adding.html#ignoring-tests":{"tf":1.7320508075688773},"traits/caching.html#where-clauses-and-the-local-vs-global-cache":{"tf":1.0},"appendix/stupid-stats.html#appendix-a-a-tutorial-on-creating-a-drop-in-replacement-for-rustc":{"tf":1.0},"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.4142135623730952},"tests/intro.html#compiletest-test-suites":{"tf":1.4142135623730952},"appendix/stupid-stats.html#overview-of-the-compilation-process":{"tf":1.0},"query.html#queries-demand-driven-compilation":{"tf":1.0},"macro-expansion.html#the-macro-parser":{"tf":1.0}},"df":15}}},"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{"query.html#how-the-compiler-executes-a-query":{"tf":1.0},"mir/regionck.html#skolemization-and-outlives-constraints":{"tf":1.0},"tests/adding.html#guide-to-the-ui-tests":{"tf":1.0},"name-resolution.html#name-resolution":{"tf":1.0},"compiletest.html#adding-a-new-header-command":{"tf":1.0},"rustdoc.html#from-crate-to-clean":{"tf":1.0},"mir/regionck.html#mir-based-region-checking-nll":{"tf":1.0},"mir/regionck.html#representing-the-values-of-a-region-variable":{"tf":1.0},"traits/associated-types.html#associated-type-projection-and-normalization":{"tf":1.0},"appendix/stupid-stats.html#overview-of-the-compilation-process":{"tf":1.0},"query.html#adding-a-new-kind-of-query":{"tf":1.0}},"df":11},"c":{"docs":{"compiletest.html#adding-a-new-header-command":{"tf":1.0}},"df":1}},"r":{"docs":{},"df":0,"v":{"docs":{"high-level-overview.html#the-main-stages-of-compilation":{"tf":1.0},"variance.html#addendum-variance-on-traits":{"tf":1.0}},"df":2}}},"u":{"docs":{},"df":0,"m":{"docs":{"traits/resolution.html#candidate-assembly":{"tf":1.0},"traits/lowering-rules.html#function-and-constant-values":{"tf":1.0},"variance.html#variance-and-object-types":{"tf":1.0},"conventions.html#how-to-structure-your-pr":{"tf":1.0}},"df":4}}},"f":{"docs":{},"df":0,"i":{"docs":{},"df":0,"x":{"docs":{"high-level-overview.html#crate-structure":{"tf":1.0},"traits/lowering-module.html#unit-tests":{"tf":1.0},"appendix/stupid-stats.html#overview-of-the-compilation-process":{"tf":1.0},"ty.html#import-conventions":{"tf":1.0}},"df":4}},"e":{"docs":{},"df":0,"r":{"docs":{"traits/index.html#trait-solving-new-style":{"tf":1.0},"conventions.html#prefer-exhaustive-matches":{"tf":1.7320508075688773},"appendix/stupid-stats.html#what-next":{"tf":1.0},"tests/adding.html#what-kind-of-test-should-i-add":{"tf":1.4142135623730952},"rustc-driver.html#a-note-on-lifetimes":{"tf":1.0},"conventions.html#tabs-vs-spaces":{"tf":1.0},"traits/resolution.html#trait-resolution-old-style":{"tf":1.0}},"df":7}}},"v":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{"traits/associated-types.html#integration-with-unification":{"tf":1.0},"variance.html#variance-and-object-types":{"tf":1.0},"tests/adding.html#what-kind-of-test-should-i-add":{"tf":1.0},"mir/borrowck.html#mir-borrow-check":{"tf":1.0},"tests/adding.html#adding-new-tests":{"tf":1.0},"rustc-driver.html#a-note-on-lifetimes":{"tf":1.0},"mir/regionck.html#what-is-a-universe":{"tf":1.0},"const-eval.html#constant-evaluation":{"tf":1.0}},"df":8}}},"i":{"docs":{},"df":0,"o":{"docs":{},"df":0,"u":{"docs":{"diag.html#suggestions":{"tf":1.7320508075688773},"traits/lowering-to-logic.html#type-checking-generic-functions-beyond-horn-clauses":{"tf":1.0},"traits/lowering-module.html#unit-tests":{"tf":1.0},"conventions.html#how-to-structure-your-pr":{"tf":1.0},"mir/index.html#mir-data-types":{"tf":1.0},"type-inference.html#snapshots":{"tf":1.0},"tests/intro.html#compiletest-test-suites":{"tf":1.0},"incrcomp-debugging.html#tracking-down-incorrect-edges":{"tf":1.7320508075688773},"incremental-compilation.html#the-try-mark-green-algorithm":{"tf":1.4142135623730952},"traits/canonical-queries.html#examples":{"tf":1.0},"rustdoc.html#hot-potato":{"tf":1.0},"tests/adding.html#error-annotations":{"tf":1.4142135623730952},"traits/canonicalization.html#processing-the-canonicalized-query-result":{"tf":1.0},"incremental-compilation.html#the-basic-algorithm":{"tf":2.0},"rustdoc.html#cheat-sheet":{"tf":1.0},"compiler-debugging.html#getting-a-backtrace-for-errors":{"tf":1.0},"traits/resolution.html#confirmation":{"tf":1.0},"mir/regionck.html#final-example":{"tf":1.4142135623730952},"mir/regionck.html#what-is-a-universe":{"tf":1.0}},"df":19,"s":{"docs":{"tests/running.html#running-tests":{"tf":1.0},"traits/chalk-overview.html#intermediate-representation-ir":{"tf":1.0},"macro-expansion.html#the-macro-parser":{"tf":1.0},"rustdoc.html#cheat-sheet":{"tf":1.0}},"df":4}}}}},"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"m":{"docs":{},"df":0,"p":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{"const-eval.html#constant-evaluation":{"tf":1.0}},"df":1}}}}},"e":{"docs":{},"df":0,"d":{"docs":{"traits/resolution.html#overview":{"tf":1.0}},"df":1}},"i":{"docs":{},"df":0,"s":{"docs":{"rustdoc.html#dotting-is-and-crossing-ts":{"tf":1.0},"type-inference.html#inference-variables":{"tf":1.0},"traits/resolution.html#candidate-assembly":{"tf":1.0},"traits/canonicalization.html#canonicalizing-the-query-result":{"tf":1.0},"traits/index.html#trait-solving-new-style":{"tf":1.4142135623730952},"variance.html#variance-and-object-types":{"tf":1.0},"type-inference.html#enforcing-equality--subtyping":{"tf":1.0}},"df":7}},"a":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{"query.html#cycles-between-queries":{"tf":1.0}},"df":1}}}},"d":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"s":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{"incrcomp-debugging.html#dumping-the-graph":{"tf":1.4142135623730952}},"df":1}}}}}}},"i":{"docs":{},"df":0,"c":{"docs":{"ty.html#beyond-types-other-kinds-of-arena-allocated-data-structures":{"tf":1.0},"traits/goals-and-clauses.html#coinductive-goals":{"tf":1.0},"traits/lowering-to-logic.html#rust-traits-and-logic":{"tf":1.4142135623730952},"traits/associated-types.html#projection-equality":{"tf":1.7320508075688773},"traits/lowering-rules.html#trait-header":{"tf":1.7320508075688773},"traits/associated-types.html#equality-and-associated-types":{"tf":1.4142135623730952},"traits/lowering-to-logic.html#type-checking-normal-functions":{"tf":1.0},"traits/associated-types.html#associated-type-projection-and-normalization":{"tf":1.0}},"df":8}}},"p":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{"conventions.html#how-to-structure-your-pr":{"tf":1.0}},"df":1}},"o":{"docs":{},"df":0,"p":{"docs":{},"df":0,"u":{"docs":{},"df":0,"l":{"docs":{"compiler-debugging.html#debugging-llvm":{"tf":1.0}},"df":1}}}}}},"o":{"docs":{},"df":0,"l":{"docs":{},"df":0,"o":{"docs":{},"df":0,"g":{"docs":{"traits/canonical-queries.html#a-trait-query-in-rustc":{"tf":1.0},"type-inference.html#inference-variables":{"tf":1.0},"traits/lowering-to-logic.html#rust-traits-and-logic":{"tf":1.4142135623730952},"traits/goals-and-clauses.html#goals-and-clauses":{"tf":1.0},"traits/lowering-to-logic.html#lowering-to-logic":{"tf":1.4142135623730952},"traits/bibliography.html#bibliography":{"tf":1.4142135623730952},"traits/canonical-queries.html#the-traditional-interactive-prolog-query":{"tf":2.23606797749979},"traits/lowering-to-logic.html#type-checking-normal-functions":{"tf":1.0},"traits/lowering-to-logic.html#type-checking-generic-functions-beyond-horn-clauses":{"tf":1.7320508075688773}},"df":9}}},"m":{"docs":{},"df":0,"o":{"docs":{},"df":0,"t":{"docs":{"mir/passes.html#seeing-how-the-mir-changes-as-the-compiler-executes":{"tf":1.0},"miri.html#miri":{"tf":1.0},"appendix/glossary.html#appendix-c-glossary":{"tf":1.0},"mir/index.html#promoted-constants":{"tf":1.4142135623730952},"const-eval.html#constant-evaluation":{"tf":1.0},"mir/index.html#mir-data-types":{"tf":1.0}},"df":6,"e":{"docs":{},"df":0,"d":{"docs":{},"df":0,"[":{"docs":{},"df":0,"1":{"docs":{},"df":0,"]":{"docs":{},"df":0,".":{"docs":{},"df":0,"0":{"docs":{},"df":0,"0":{"docs":{},"df":0,"2":{"docs":{"mir/passes.html#seeing-how-the-mir-changes-as-the-compiler-executes":{"tf":2.0}},"df":1}}}}}},"0":{"docs":{"mir/passes.html#seeing-how-the-mir-changes-as-the-compiler-executes":{"tf":1.0}},"df":1,"]":{"docs":{},"df":0,".":{"docs":{},"df":0,"0":{"docs":{},"df":0,"0":{"docs":{},"df":0,"2":{"docs":{"mir/passes.html#seeing-how-the-mir-changes-as-the-compiler-executes":{"tf":2.0}},"df":1}}}}}}}}}}},"i":{"docs":{},"df":0,"s":{"docs":{"mir/regionck.html#final-example":{"tf":1.4142135623730952}},"df":1},"n":{"docs":{"const-eval.html#constant-evaluation":{"tf":1.0}},"df":1}}},"j":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{"tests/intro.html#the-compiler-testing-framework":{"tf":1.0},"traits/specialization.html#specialization":{"tf":1.0},"compiletest.html#adding-a-new-header-command":{"tf":1.0},"appendix/stupid-stats.html#appendix-a-a-tutorial-on-creating-a-drop-in-replacement-for-rustc":{"tf":1.0},"variance.html#variance-and-associated-types":{"tf":2.0},"conventions.html#copyright-notice":{"tf":1.0},"tests/intro.html#other-tests":{"tf":1.0},"traits/associated-types.html#skolemized-associated-types":{"tf":1.4142135623730952},"traits/associated-types.html#equality-and-associated-types":{"tf":1.0},"traits/goals-and-clauses.html#domain-goals":{"tf":2.449489742783178},"type-inference.html#inference-variables":{"tf":1.0},"traits/lowering-rules.html#associated-type-declarations":{"tf":1.0},"appendix/glossary.html#appendix-c-glossary":{"tf":1.7320508075688773},"traits/associated-types.html#associated-type-projection-and-normalization":{"tf":2.8284271247461905},"rustdoc.html#the-walking-tour-of-rustdoc":{"tf":1.0},"traits/associated-types.html#projection-equality":{"tf":2.0},"compiler-debugging.html#debugging-llvm":{"tf":1.0},"traits/associated-types.html#integration-with-unification":{"tf":1.4142135623730952},"tests/adding.html#header-commands-configuring-rustc":{"tf":1.0},"rustdoc.html#cheat-sheet":{"tf":1.0},"mir/index.html#mir-data-types":{"tf":2.23606797749979},"variance.html#addendum-variance-on-traits":{"tf":1.0}},"df":22,"i":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"e":{"docs":{},"df":0,"l":{"docs":{},"df":0,"e":{"docs":{},"df":0,"m":{"docs":{},"df":0,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"d":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"f":{"docs":{"mir/index.html#mir-data-types":{"tf":1.0}},"df":1}}}}}}}}}},"q":{"docs":{"traits/associated-types.html#projection-equality":{"tf":2.0},"traits/goals-and-clauses.html#domain-goals":{"tf":1.0},"traits/lowering-rules.html#associated-type-declarations":{"tf":2.449489742783178},"traits/associated-types.html#equality-and-associated-types":{"tf":1.0}},"df":4,"(":{"docs":{},"df":0,"<":{"docs":{},"df":0,"t":{"docs":{"traits/associated-types.html#projection-equality":{"tf":1.7320508075688773},"traits/lowering-module.html#unit-tests":{"tf":1.0}},"df":2},"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"l":{"docs":{},"df":0,"f":{"docs":{"traits/lowering-rules.html#associated-type-declarations":{"tf":1.0}},"df":1}}}},"a":{"docs":{},"df":0,"0":{"docs":{"traits/lowering-rules.html#lowering-where-clauses":{"tf":1.0}},"df":1}}},"p":{"docs":{"traits/associated-types.html#integration-with-unification":{"tf":1.0}},"df":1,"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"j":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{"traits/goals-and-clauses.html#domain-goals":{"tf":1.4142135623730952},"traits/lowering-rules.html#transforming-the-lowered-where-clauses":{"tf":1.4142135623730952}},"df":2}}}}}},"2":{"docs":{"traits/associated-types.html#integration-with-unification":{"tf":1.0}},"df":1},"1":{"docs":{"traits/associated-types.html#integration-with-unification":{"tf":1.0}},"df":1}}},"<":{"docs":{},"df":0,"t":{"docs":{"traits/goals-and-clauses.html#domain-goals":{"tf":1.4142135623730952}},"df":1}}}}}}}}}}},"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{"conventions.html#copyright-notice":{"tf":1.0}},"df":1}}},"o":{"docs":{},"df":0,"t":{"docs":{},"df":0,"y":{"docs":{},"df":0,"p":{"docs":{"traits/lowering-to-logic.html#type-checking-generic-functions-beyond-horn-clauses":{"tf":1.0},"appendix/stupid-stats.html#what-next":{"tf":1.0},"variance.html#trait-variance-and-vtable-resolution":{"tf":1.0}},"df":3}}}}},"c":{"docs":{},"df":0,"_":{"docs":{},"df":0,"r":{"docs":{"compiletest.html#implementing-the-behavior-change":{"tf":2.0}},"df":1,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,".":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{},"df":0,"u":{"docs":{"compiletest.html#implementing-the-behavior-change":{"tf":1.0}},"df":1,"s":{"docs":{},"df":0,".":{"docs":{},"df":0,"s":{"docs":{},"df":0,"u":{"docs":{},"df":0,"c":{"docs":{},"df":0,"c":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"s":{"docs":{"compiletest.html#implementing-the-behavior-change":{"tf":1.0}},"df":1}}}}}}},"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"d":{"docs":{"compiletest.html#implementing-the-behavior-change":{"tf":1.4142135623730952}},"df":1}}}}}}}}}}}}}}},"e":{"docs":{"traits/resolution.html#candidate-assembly":{"tf":1.0},"macro-expansion.html#the-macro-parser":{"tf":1.0}},"df":2,"d":{"docs":{},"df":0,"u":{"docs":{},"df":0,"r":{"docs":{"macro-expansion.html#procedural-macros":{"tf":1.4142135623730952},"traits/goals-and-clauses.html#goals-and-clauses-meta-structure":{"tf":1.4142135623730952},"traits/lowering-to-logic.html#type-checking-generic-functions-beyond-horn-clauses":{"tf":1.0},"tests/running.html#running-a-subset-of-the-test-suites":{"tf":1.0},"traits/goals-and-clauses.html#incomplete-chapter":{"tf":1.0},"mir/regionck.html#skolemization-and-outlives-constraints":{"tf":1.0},"traits/associated-types.html#integration-with-unification":{"tf":1.4142135623730952},"traits/bibliography.html#bibliography":{"tf":1.0}},"df":8}}},"s":{"docs":{},"df":0,"s":{"docs":{"rustdoc.html#other-tricks-up-its-sleeve":{"tf":1.4142135623730952},"traits/canonicalization.html#processing-the-canonicalized-query-result":{"tf":1.4142135623730952},"mir/passes.html#stealing":{"tf":1.4142135623730952},"traits/resolution.html#trait-resolution-old-style":{"tf":1.4142135623730952},"traits/associated-types.html#integration-with-unification":{"tf":1.0},"rustdoc.html#dotting-is-and-crossing-ts":{"tf":1.0},"mir/passes.html#implementing-and-registering-a-pass":{"tf":1.0},"traits/caching.html#caching-and-subtle-considerations-therewith":{"tf":1.7320508075688773},"traits/canonicalization.html#canonicalizing-the-query":{"tf":1.0},"type-inference.html#type-inference":{"tf":1.0},"type-inference.html#extracting-region-constraints":{"tf":1.4142135623730952},"mir/borrowck.html#mir-borrow-check":{"tf":1.0},"appendix/stupid-stats.html#compilercalls":{"tf":1.7320508075688773},"mir/visitor.html#mir-visitor":{"tf":1.0},"const-eval.html#constant-evaluation":{"tf":1.0},"traits/canonicalization.html#canonicalization":{"tf":1.0},"appendix/stupid-stats.html#appendix-a-a-tutorial-on-creating-a-drop-in-replacement-for-rustc":{"tf":1.4142135623730952},"appendix/stupid-stats.html#overview-of-the-compilation-process":{"tf":1.7320508075688773},"mir/regionck.html#back-to-our-example":{"tf":1.0},"rustdoc.html#from-clean-to-crate":{"tf":1.0},"rustdoc.html#from-crate-to-clean":{"tf":2.449489742783178},"query.html#adding-a-new-kind-of-query":{"tf":1.4142135623730952},"type-checking.html#type-collection":{"tf":1.0},"rustdoc.html#cheat-sheet":{"tf":1.0},"method-lookup.html#method-lookup":{"tf":1.0},"high-level-overview.html#the-main-stages-of-compilation":{"tf":2.8284271247461905},"traits/caching.html#an-example":{"tf":1.4142135623730952},"traits/index.html#trait-solving-new-style":{"tf":1.0},"macro-expansion.html#example":{"tf":1.0},"rustc-driver.html#the-rustc-driver":{"tf":1.7320508075688773},"traits/resolution.html#selection":{"tf":1.0},"traits/resolution.html#candidate-assembly":{"tf":2.0},"compiler-debugging.html#debugging-llvm":{"tf":1.0},"traits/resolution.html#major-concepts":{"tf":1.0},"type-inference.html#lexical-region-resolution":{"tf":1.0},"appendix/glossary.html#appendix-c-glossary":{"tf":1.0},"name-resolution.html#overall-strategy":{"tf":1.0},"the-parser.html#the-parser":{"tf":1.0}},"df":38}}},"r":{"docs":{"compiletest.html#implementing-the-behavior-change":{"tf":1.0}},"df":1}},"p":{"docs":{},"df":0,"a":{"docs":{},"df":0,"g":{"docs":{"mir/regionck.html#extending-the-universal-regions-check":{"tf":1.0},"traits/associated-types.html#integration-with-unification":{"tf":1.0},"traits/specialization.html#specialization":{"tf":1.4142135623730952},"mir/regionck.html#back-to-our-example":{"tf":1.0},"mir/regionck.html#final-example":{"tf":1.0},"rustdoc.html#hot-potato":{"tf":1.4142135623730952}},"df":6}},"e":{"docs":{},"df":0,"r":{"docs":{"tests/adding.html#other-header-commands":{"tf":1.0},"tests/adding.html#naming-your-test":{"tf":1.0},"traits/lowering-to-logic.html#type-checking-generic-functions-beyond-horn-clauses":{"tf":1.0}},"df":3,"t":{"docs":{},"df":0,"y":{"docs":{},"df":0,"'":{"docs":{"compiletest.html#adding-a-new-header-command":{"tf":1.0}},"df":1}},"i":{"docs":{"compiletest.html#adding-a-new-header-command":{"tf":2.8284271247461905},"compiletest.html#implementing-the-behavior-change":{"tf":1.0},"appendix/glossary.html#appendix-c-glossary":{"tf":1.0},"mir/borrowck.html#mir-borrow-check":{"tf":1.0}},"df":4}}}}},"d":{"docs":{},"df":0,"u":{"docs":{},"df":0,"c":{"docs":{"traits/lowering-rules.html#trait-header":{"tf":1.0},"incremental-compilation.html#the-basic-algorithm":{"tf":1.4142135623730952},"macro-expansion.html#the-macro-parser":{"tf":1.0},"compiler-debugging.html#debugging-llvm":{"tf":1.0},"traits/canonicalization.html#processing-the-canonicalized-query-result":{"tf":1.0},"compiler-debugging.html#formatting-graphviz-output-dot-files":{"tf":1.0},"traits/lowering-rules.html#associated-type-declarations":{"tf":1.0},"traits/chalk-overview.html#parsing":{"tf":1.0},"how-to-build-and-run.html#running-xpy-and-building-a-stage1-compiler":{"tf":1.4142135623730952},"mir/passes.html#stealing":{"tf":1.0},"traits/associated-types.html#integration-with-unification":{"tf":1.4142135623730952},"param_env.html#parameter-environment":{"tf":1.0},"traits/lowering-module.html#unit-tests":{"tf":1.0},"query.html#adding-a-new-kind-of-query":{"tf":1.0},"mir/index.html#key-mir-vocabulary":{"tf":1.0},"compiletest.html#implementing-the-behavior-change":{"tf":1.0},"traits/lowering-rules.html#lowering-where-clauses":{"tf":1.0},"appendix/code-index.html#appendix-d-code-index":{"tf":1.0},"appendix/glossary.html#appendix-c-glossary":{"tf":1.7320508075688773},"name-resolution.html#name-resolution":{"tf":1.4142135623730952},"tests/adding.html#other-header-commands":{"tf":1.0},"traits/lowering-rules.html#associated-type-values":{"tf":1.0},"traits/lowering-module.html#the--program_clauses_for--query":{"tf":1.4142135623730952},"high-level-overview.html#the-main-stages-of-compilation":{"tf":1.7320508075688773},"miri.html#interpretation":{"tf":1.0},"traits/canonical-queries.html#the-traditional-interactive-prolog-query":{"tf":1.0},"appendix/stupid-stats.html#compilercontroller":{"tf":1.0},"appendix/stupid-stats.html#appendix-a-a-tutorial-on-creating-a-drop-in-replacement-for-rustc":{"tf":1.0},"traits/lowering-rules.html#lowering-traits":{"tf":1.0},"mir/passes.html#mir-passes":{"tf":1.0},"method-lookup.html#method-lookup":{"tf":1.0}},"df":31}}},"o":{"docs":{},"df":0,"f":{"docs":{"traits/goals-and-clauses.html#goals-and-clauses-meta-structure":{"tf":1.4142135623730952},"traits/goals-and-clauses.html#incomplete-chapter":{"tf":1.0},"traits/bibliography.html#bibliography":{"tf":1.4142135623730952},"traits/lowering-to-logic.html#type-checking-generic-functions-beyond-horn-clauses":{"tf":1.0}},"df":4}},"v":{"docs":{},"df":0,"e":{"docs":{"traits/wf.html#well-formedness-checking":{"tf":1.0},"traits/canonical-queries.html#a-trait-query-in-rustc":{"tf":1.7320508075688773},"ty.html#beyond-types-other-kinds-of-arena-allocated-data-structures":{"tf":1.0},"traits/goals-and-clauses.html#goals-and-clauses":{"tf":1.0},"traits/lowering-rules.html#trait-header":{"tf":2.0},"traits/lowering-to-logic.html#type-checking-generic-functions-beyond-horn-clauses":{"tf":1.0},"traits/canonicalization.html#processing-the-canonicalized-query-result":{"tf":1.0},"mir/regionck.html#subtyping-and-skolemization":{"tf":1.0},"traits/lowering-to-logic.html#type-checking-normal-functions":{"tf":2.23606797749979},"traits/goals-and-clauses.html#goals-and-clauses-meta-structure":{"tf":1.0},"traits/goals-and-clauses.html#domain-goals":{"tf":1.7320508075688773},"traits/lowering-to-logic.html#rust-traits-and-logic":{"tf":1.4142135623730952},"traits/goals-and-clauses.html#coinductive-goals":{"tf":2.0},"traits/resolution.html#major-concepts":{"tf":1.0},"traits/associated-types.html#integration-with-unification":{"tf":1.0}},"df":15,"n":{"docs":{"traits/canonicalization.html#canonicalizing-the-query-result":{"tf":1.4142135623730952},"traits/lowering-to-logic.html#rust-traits-and-logic":{"tf":1.0},"traits/lowering-rules.html#associated-type-declarations":{"tf":1.0},"appendix/glossary.html#appendix-c-glossary":{"tf":1.0},"traits/canonicalization.html#executing-the-query":{"tf":1.4142135623730952},"traits/canonical-queries.html#examples":{"tf":1.7320508075688773},"traits/canonicalization.html#processing-the-canonicalized-query-result":{"tf":1.4142135623730952},"traits/associated-types.html#integration-with-unification":{"tf":1.0},"traits/canonical-queries.html#a-trait-query-in-rustc":{"tf":1.0},"traits/associated-types.html#projection-equality":{"tf":1.0}},"df":10}},"a":{"docs":{},"df":0,"b":{"docs":{},"df":0,"l":{"docs":{"traits/lowering-to-logic.html#type-checking-generic-functions-beyond-horn-clauses":{"tf":1.0},"traits/lowering-to-logic.html#type-checking-normal-functions":{"tf":1.7320508075688773},"traits/chalk-overview.html#lowering":{"tf":1.0},"traits/canonical-queries.html#a-trait-query-in-rustc":{"tf":1.0},"traits/goals-and-clauses.html#goals-and-clauses-meta-structure":{"tf":1.0},"traits/lowering-to-logic.html#rust-traits-and-logic":{"tf":2.23606797749979}},"df":6}}},"i":{"docs":{},"df":0,"d":{"docs":{"query.html#adding-a-new-kind-of-query":{"tf":1.7320508075688773},"variance.html#variance-and-object-types":{"tf":1.0},"traits/lowering-to-logic.html#type-checking-generic-functions-beyond-horn-clauses":{"tf":1.0},"type-inference.html#enforcing-equality--subtyping":{"tf":1.0},"rustdoc.html#hot-potato":{"tf":1.0},"variance.html#trait-variance-and-vtable-resolution":{"tf":1.0},"appendix/background.html#appendix-b-background-topics":{"tf":1.0},"name-resolution.html#todo":{"tf":1.0},"query.html#how-the-compiler-executes-a-query":{"tf":5.5677643628300219},"tests/adding.html#normalization":{"tf":1.4142135623730952},"method-lookup.html#method-lookup":{"tf":1.0},"appendix/glossary.html#appendix-c-glossary":{"tf":1.0},"traits/resolution.html#major-concepts":{"tf":1.4142135623730952},"rustc-driver.html#the-rustc-driver":{"tf":1.0}},"df":14,"e":{"docs":{},"df":0,"_":{"docs":{},"df":0,"e":{"docs":{},"df":0,"x":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"n":{"docs":{"query.html#how-the-compiler-executes-a-query":{"tf":1.0}},"df":1}}}}}}},"r":{"docs":{},"df":0,"<":{"docs":{},"df":0,"'":{"docs":{},"df":0,"c":{"docs":{},"df":0,"x":{"docs":{"query.html#how-the-compiler-executes-a-query":{"tf":1.0}},"df":1}}}},"s":{"docs":{},"df":0,".":{"docs":{},"df":0,"t":{"docs":{},"df":0,"y":{"docs":{},"df":0,"p":{"docs":{},"df":0,"e":{"docs":{},"df":0,"_":{"docs":{},"df":0,"o":{"docs":{},"df":0,"f":{"docs":{"query.html#how-the-compiler-executes-a-query":{"tf":1.0}},"df":1}}}}}}}}}},"(":{"docs":{},"df":0,"p":{"docs":{},"df":0,"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"v":{"docs":{},"df":0,"i":{"docs":{},"df":0,"d":{"docs":{"query.html#how-the-compiler-executes-a-query":{"tf":1.4142135623730952}},"df":1}}}}}}}}}}},"b":{"docs":{},"df":0,"a":{"docs":{},"df":0,"b":{"docs":{},"df":0,"l":{"docs":{"compiler-debugging.html#logging-etiquette":{"tf":1.0},"tests/running.html#running-tests":{"tf":1.0},"name-resolution.html#todo":{"tf":1.0},"traits/goals-and-clauses.html#coinductive-goals":{"tf":1.0},"compiler-debugging.html#debugging-llvm":{"tf":1.0},"ty.html#allocating-and-working-with-types":{"tf":1.0},"appendix/stupid-stats.html#compilercontroller":{"tf":1.0},"param_env.html#parameter-environment":{"tf":1.0},"rustdoc.html#from-clean-to-crate":{"tf":1.0},"query.html#adding-a-new-kind-of-query":{"tf":1.0},"how-to-build-and-run.html#running-xpy-and-building-a-stage1-compiler":{"tf":1.0}},"df":11}}},"e":{"docs":{"type-inference.html#snapshots":{"tf":1.0},"method-lookup.html#method-lookup":{"tf":1.7320508075688773},"method-lookup.html#the-probe-phase":{"tf":1.4142135623730952},"method-lookup.html#steps":{"tf":1.0}},"df":4,".":{"docs":{},"df":0,"r":{"docs":{"method-lookup.html#method-lookup":{"tf":1.0}},"df":1}},":":{"docs":{},"df":0,":":{"docs":{},"df":0,"p":{"docs":{},"df":0,"i":{"docs":{},"df":0,"c":{"docs":{},"df":0,"k":{"docs":{"method-lookup.html#method-lookup":{"tf":1.0}},"df":1}}}}}}},"l":{"docs":{},"df":0,"e":{"docs":{},"df":0,"m":{"docs":{"tests/adding.html#comment-explaining-what-the-test-is-about":{"tf":1.0},"traits/lowering-to-logic.html#type-checking-generic-functions-beyond-horn-clauses":{"tf":1.0},"mir/regionck.html#final-example":{"tf":1.0},"incremental-compilation.html#the-query-dag":{"tf":1.0},"appendix/stupid-stats.html#what-next":{"tf":1.0},"traits/index.html#trait-solving-new-style":{"tf":1.0},"variance.html#variance-and-associated-types":{"tf":1.0}},"df":7,"a":{"docs":{},"df":0,"t":{"docs":{"name-resolution.html#overall-strategy":{"tf":1.0}},"df":1}}}}}},"g":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"s":{"docs":{"query.html#cycles-between-queries":{"tf":1.0},"type-inference.html#subtyping-obligations":{"tf":1.0},"traits/index.html#trait-solving-new-style":{"tf":1.0},"method-lookup.html#steps":{"tf":1.0}},"df":4}}},"a":{"docs":{},"df":0,"m":{"docs":{"traits/associated-types.html#projection-equality":{"tf":1.4142135623730952},"traits/lowering-to-logic.html#rust-traits-and-logic":{"tf":1.4142135623730952},"the-parser.html#the-parser":{"tf":1.0},"type-inference.html#extracting-region-constraints":{"tf":1.0},"compiler-debugging.html#getting-logging-output":{"tf":1.0},"query.html#cycles-between-queries":{"tf":1.4142135623730952},"traits/chalk-overview.html#an-overview-of-chalk":{"tf":1.4142135623730952},"appendix/background.html#what-is-a-free-region-or-a-free-variable-what-about-bound-region":{"tf":1.0},"compiler-debugging.html#getting-a-backtrace":{"tf":1.0},"mir/index.html#key-mir-vocabulary":{"tf":2.0},"mir/regionck.html#skolemization-and-universes":{"tf":1.4142135623730952},"traits/chalk-overview.html#parsing":{"tf":1.0},"traits/associated-types.html#associated-type-projection-and-normalization":{"tf":1.4142135623730952},"traits/lowering-module.html#the--program_clauses_for--query":{"tf":1.4142135623730952},"rustc-driver.html#a-note-on-lifetimes":{"tf":1.0},"appendix/stupid-stats.html#overview-of-the-compilation-process":{"tf":1.4142135623730952},"tests/intro.html#testing-on-emulators":{"tf":1.4142135623730952},"appendix/background.html#what-is-a-dataflow-analysis":{"tf":1.0},"traits/lowering-rules.html#associated-type-declarations":{"tf":1.0},"traits/lowering-rules.html#lowering-rules":{"tf":1.0},"traits/lowering-rules.html#lowering-where-clauses":{"tf":1.0},"appendix/background.html#what-is-a-control-flow-graph":{"tf":1.0},"traits/lowering-module.html#the-lowering-module-in-rustc":{"tf":1.0},"appendix/glossary.html#appendix-c-glossary":{"tf":2.449489742783178},"traits/goals-and-clauses.html#goals-and-clauses":{"tf":1.0},"traits/lowering-rules.html#trait-header":{"tf":1.0},"high-level-overview.html#crate-structure":{"tf":1.0},"traits/lowering-rules.html#lowering-traits":{"tf":1.0},"traits/bibliography.html#bibliography":{"tf":1.0},"mir/regionck.html#representing-the-values-of-a-region-variable":{"tf":1.0},"traits/wf.html#well-formedness-checking":{"tf":1.0},"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.7320508075688773},"tests/adding.html#tests-that-do-not-result-in-compile-errors":{"tf":1.0},"traits/lowering-to-logic.html#type-checking-normal-functions":{"tf":1.0},"traits/chalk-overview.html#lowering":{"tf":1.4142135623730952},"high-level-overview.html#the-main-stages-of-compilation":{"tf":1.0},"tests/adding.html#other-header-commands":{"tf":1.0}},"df":37,"c":{"docs":{},"df":0,"l":{"docs":{},"df":0,"a":{"docs":{},"df":0,"u":{"docs":{},"df":0,"s":{"docs":{"traits/chalk-overview.html#intermediate-representation-ir":{"tf":1.0},"traits/chalk-overview.html#lowering":{"tf":1.0}},"df":2}}}}},"_":{"docs":{},"df":0,"c":{"docs":{},"df":0,"l":{"docs":{},"df":0,"a":{"docs":{},"df":0,"u":{"docs":{},"df":0,"s":{"docs":{"traits/chalk-overview.html#intermediate-representation-ir":{"tf":1.0}},"df":1,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"_":{"docs":{},"df":0,"f":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{"traits/lowering-module.html#unit-tests":{"tf":1.0},"traits/lowering-module.html#the--program_clauses_for--query":{"tf":1.7320508075688773}},"df":2}}}}}}}}}}}}}}}}},"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"c":{"docs":{},"df":0,"i":{"docs":{},"df":0,"p":{"docs":{},"df":0,"l":{"docs":{"traits/chalk-overview.html#an-overview-of-chalk":{"tf":1.0}},"df":1}}}},"t":{"docs":{"mir/index.html#key-mir-vocabulary":{"tf":1.0},"diag.html#error-messages":{"tf":1.0},"compiler-debugging.html#getting-logging-output":{"tf":1.0},"tests/adding.html#ignoring-tests":{"tf":1.0},"macro-expansion.html#the-macro-parser":{"tf":2.6457513110645909},"tests/adding.html#guide-to-the-ui-tests":{"tf":1.4142135623730952},"rustdoc.html#cheat-sheet":{"tf":1.0},"compiler-debugging.html#debugging-llvm":{"tf":2.0},"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":2.0},"appendix/stupid-stats.html#overview-of-the-compilation-process":{"tf":1.0},"rustdoc.html#from-clean-to-crate":{"tf":2.0},"appendix/stupid-stats.html#what-next":{"tf":1.0},"macro-expansion.html#example":{"tf":1.4142135623730952}},"df":13,"e":{"docs":{},"df":0,"r":{"docs":{"tests/adding.html#ignoring-tests":{"tf":1.0},"macro-expansion.html#example":{"tf":1.0},"tests/intro.html#compiletest-test-suites":{"tf":1.0},"tests/adding.html#other-header-commands":{"tf":1.0}},"df":4,"!":{"docs":{},"df":0,"(":{"docs":{},"df":0,"p":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{"macro-expansion.html#example":{"tf":1.0}},"df":1}}}}}}}}},"o":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{"compiler-debugging.html#debugging-llvm":{"tf":1.0}},"df":1}}},"l":{"docs":{},"df":0,"n":{"docs":{"macro-expansion.html#example":{"tf":2.0},"macro-expansion.html#the-macro-parser":{"tf":1.7320508075688773},"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":2.449489742783178}},"df":3,"_":{"docs":{},"df":0,"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"u":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.0}},"df":1}}}}}},"!":{"docs":{},"df":0,"(":{"docs":{},"df":0,"\"":{"docs":{},"df":0,"{":{"docs":{},"df":0,":":{"docs":{},"df":0,".":{"docs":{},"df":0,"0":{"docs":{"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.0}},"df":1}}}},"f":{"docs":{},"df":0,"o":{"docs":{},"df":0,"u":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.0}},"df":1}}}}},"c":{"docs":{},"df":0,"l":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{"traits/goals-and-clauses.html#domain-goals":{"tf":1.0}},"df":1}}}},"i":{"docs":{},"df":0,"n":{"docs":{"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.0}},"df":1}},"t":{"docs":{},"df":0,"h":{"docs":{"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.0}},"df":1}},"h":{"docs":{},"df":0,"e":{"docs":{},"df":0,"l":{"docs":{},"df":0,"l":{"docs":{},"df":0,"o":{"docs":{"traits/lowering-module.html#unit-tests":{"tf":1.0},"mir/passes.html#seeing-how-the-mir-changes-as-the-compiler-executes":{"tf":1.0}},"df":2}}}}}}}}}}}},"v":{"docs":{"rustdoc.html#hot-potato":{"tf":1.4142135623730952}},"df":1,"a":{"docs":{},"df":0,"t":{"docs":{"rustdoc.html#hot-potato":{"tf":2.23606797749979}},"df":1,"e":{"docs":{},"df":0,"/":{"docs":{},"df":0,"h":{"docs":{},"df":0,"i":{"docs":{},"df":0,"d":{"docs":{},"df":0,"d":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{"rustdoc.html#hot-potato":{"tf":1.0}},"df":1}}}}}}}}},"c":{"docs":{},"df":0,"i":{"docs":{"high-level-overview.html#the-main-stages-of-compilation":{"tf":1.0}},"df":1}}}},"m":{"docs":{},"df":0,"v":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{"miri.html#datastructures":{"tf":1.7320508075688773}},"df":1,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"b":{"docs":{},"df":0,"y":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"(":{"docs":{},"df":0,"0":{"docs":{"miri.html#miri":{"tf":1.0}},"df":1}}}}}}}}}}}},"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{"type-inference.html#enforcing-equality--subtyping":{"tf":1.0},"appendix/stupid-stats.html#compilercalls":{"tf":1.0},"diag.html#span":{"tf":1.0},"rustdoc.html#from-crate-to-clean":{"tf":1.0},"hir.html#the-hir":{"tf":1.0},"appendix/stupid-stats.html#the-driver-customisation-apis":{"tf":1.0}},"df":6,"l":{"docs":{},"df":0,"i":{"docs":{"appendix/code-index.html#appendix-d-code-index":{"tf":1.0},"hir.html#identifiers-in-the-hir":{"tf":1.0},"appendix/glossary.html#appendix-c-glossary":{"tf":1.4142135623730952},"appendix/stupid-stats.html#overview-of-the-compilation-process":{"tf":1.4142135623730952},"rustdoc.html#from-clean-to-crate":{"tf":1.0}},"df":5}}}}}}},"a":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{},"df":0,"i":{"docs":{},"df":0,"c":{"docs":{"diag.html#error-messages":{"tf":1.0},"incremental-compilation.html#improvements-to-the-basic-algorithm":{"tf":1.4142135623730952},"high-level-overview.html#crate-structure":{"tf":1.0},"variance.html#variance-of-type-and-lifetime-parameters":{"tf":1.0}},"df":4}}}}}},"0":{"docs":{"traits/lowering-rules.html#lowering-traits":{"tf":1.0},"traits/goals-and-clauses.html#domain-goals":{"tf":1.4142135623730952},"traits/lowering-rules.html#associated-type-declarations":{"tf":1.0},"traits/lowering-rules.html#associated-type-values":{"tf":1.0}},"df":4,".":{"docs":{},"df":0,".":{"docs":{},"df":0,"p":{"docs":{},"df":0,"m":{"docs":{"traits/goals-and-clauses.html#domain-goals":{"tf":1.0}},"df":1},"n":{"docs":{"traits/goals-and-clauses.html#domain-goals":{"tf":1.0}},"df":1}}}}},"2":{"docs":{"traits/associated-types.html#integration-with-unification":{"tf":1.0}},"df":1},"d":{"docs":{},"df":0,"f":{"docs":{"compiler-debugging.html#formatting-graphviz-output-dot-files":{"tf":1.4142135623730952}},"df":1}},"h":{"docs":{},"df":0,"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"s":{"docs":{},"df":0,"e":{"docs":{"variance.html#trait-variance-and-vtable-resolution":{"tf":1.0}},"df":1}}}},"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{},"df":0,"o":{"docs":{},"df":0,"m":{"docs":{"query.html#adding-a-new-kind-of-query":{"tf":1.0}},"df":1,"f":{"docs":{},"df":0,"n":{"docs":{"variance.html#addendum-variance-on-traits":{"tf":1.0}},"df":1}},"d":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{},"df":0,"a":{"docs":{},"df":0,"<":{"docs":{},"df":0,"&":{"docs":{},"df":0,"'":{"docs":{},"df":0,"t":{"docs":{},"df":0,"c":{"docs":{},"df":0,"x":{"docs":{"query.html#adding-a-new-kind-of-query":{"tf":1.0}},"df":1}}}}}}}}}}}}}},"s":{"docs":{},"df":0,"e":{"docs":{"mir/borrowck.html#mir-borrow-check":{"tf":1.0},"appendix/stupid-stats.html#the-driver-customisation-apis":{"tf":1.4142135623730952},"hir.html#identifiers-in-the-hir":{"tf":1.0},"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.4142135623730952},"appendix/stupid-stats.html#compilercontroller":{"tf":2.0},"high-level-overview.html#crate-structure":{"tf":1.0},"appendix/stupid-stats.html#appendix-a-a-tutorial-on-creating-a-drop-in-replacement-for-rustc":{"tf":1.0},"rustdoc.html#from-clean-to-crate":{"tf":1.4142135623730952},"macro-expansion.html#macro-expansion":{"tf":1.0},"mir/borrowck.html#major-phases-of-the-borrow-checker":{"tf":1.4142135623730952},"traits/chalk-overview.html#lowering":{"tf":1.4142135623730952},"method-lookup.html#method-lookup":{"tf":2.0},"rustc-driver.html#a-note-on-lifetimes":{"tf":1.0},"traits/chalk-overview.html#parsing":{"tf":1.0},"rustc-driver.html#the-rustc-driver":{"tf":1.7320508075688773},"type-inference.html#trying-equality":{"tf":1.0},"appendix/glossary.html#appendix-c-glossary":{"tf":1.0},"method-lookup.html#steps":{"tf":1.0},"method-lookup.html#the-probe-phase":{"tf":1.4142135623730952},"mir/passes.html#stealing":{"tf":1.0},"traits/resolution.html#selection":{"tf":1.0},"appendix/stupid-stats.html#overview-of-the-compilation-process":{"tf":3.7416573867739415}},"df":22,"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{},"df":0,"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"l":{"docs":{"appendix/stupid-stats.html#compilercontroller":{"tf":1.7320508075688773}},"df":1}}}}}}}}}}},"u":{"docs":{},"df":0,"s":{"docs":{},"df":0,"h":{"docs":{"rustc-driver.html#a-note-on-lifetimes":{"tf":1.0},"name-resolution.html#scopes-and-ribs":{"tf":1.0},"type-inference.html#type-inference":{"tf":1.0}},"df":3}},"l":{"docs":{},"df":0,"l":{"docs":{"rustc-driver.html#a-note-on-lifetimes":{"tf":1.0},"tests/intro.html#testing-infrastructure":{"tf":1.0}},"df":2}},"t":{"docs":{"diag.html#emitting-diagnostics":{"tf":1.0},"mir/regionck.html#what-is-a-universe":{"tf":1.0},"compiler-debugging.html#expensive-operations-in-logs":{"tf":1.4142135623730952},"appendix/glossary.html#appendix-c-glossary":{"tf":1.0},"tests/adding.html#header-commands-configuring-rustc":{"tf":1.0},"mir/index.html#key-mir-vocabulary":{"tf":1.0},"query.html#adding-a-new-kind-of-query":{"tf":1.0},"tests/adding.html#naming-your-test":{"tf":1.4142135623730952},"variance.html#addendum-variance-on-traits":{"tf":1.0},"variance.html#trait-variance-and-vtable-resolution":{"tf":1.0},"conventions.html#how-to-structure-your-pr":{"tf":1.0},"mir/regionck.html#extending-the-universal-regions-check":{"tf":1.0},"traits/specialization.html#specialization":{"tf":1.0},"compiler-debugging.html#getting-logging-output":{"tf":1.7320508075688773},"traits/goals-and-clauses.html#coinductive-goals":{"tf":1.0},"traits/lowering-to-logic.html#rust-traits-and-logic":{"tf":1.0}},"df":16},"n":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{},"df":0,"u":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{"macro-expansion.html#example":{"tf":1.0}},"df":1}}}}}},"r":{"docs":{},"df":0,"e":{"docs":{"high-level-overview.html#the-main-stages-of-compilation":{"tf":1.0},"traits/chalk-overview.html#intermediate-representation-ir":{"tf":1.0},"conventions.html#how-to-structure-your-pr":{"tf":1.0}},"df":3},"p":{"docs":{},"df":0,"o":{"docs":{},"df":0,"s":{"docs":{"mir/passes.html#mir-passes":{"tf":1.0},"traits/canonicalization.html#canonicalizing-the-query-result":{"tf":1.0},"type-inference.html#inference-variables":{"tf":1.0},"compiletest.html#implementing-the-behavior-change":{"tf":1.0}},"df":4}}}},"b":{"docs":{"query.html#how-the-compiler-executes-a-query":{"tf":1.4142135623730952},"compiletest.html#introduction":{"tf":1.0},"diag.html#declaring-a-lint":{"tf":1.0},"query.html#adding-a-new-kind-of-query":{"tf":1.0},"ty.html#allocating-and-working-with-types":{"tf":1.0},"rustdoc.html#from-crate-to-clean":{"tf":1.4142135623730952},"compiletest.html#adding-a-new-header-command":{"tf":2.23606797749979},"diag.html#edition-gated-lints":{"tf":1.0}},"df":8,"l":{"docs":{},"df":0,"i":{"docs":{},"df":0,"c":{"docs":{"high-level-overview.html#crate-structure":{"tf":1.0},"rustdoc.html#hot-potato":{"tf":1.7320508075688773},"compiletest.html#adding-a-new-header-command":{"tf":1.0}},"df":3,"l":{"docs":{},"df":0,"i":{"docs":{"rustdoc.html#from-crate-to-clean":{"tf":1.0}},"df":1}}},"s":{"docs":{},"df":0,"h":{"docs":{"variance.html#variance-of-type-and-lifetime-parameters":{"tf":1.0},"name-resolution.html#todo":{"tf":1.0}},"df":2}}}}}},"i":{"docs":{"traits/lowering-rules.html#notation":{"tf":1.0}},"df":1,"p":{"docs":{},"df":0,"e":{"docs":{"compiler-debugging.html#debugging-llvm":{"tf":1.0},"compiler-debugging.html#getting-logging-output":{"tf":1.0}},"df":2,"l":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{"compiler-debugging.html#debugging-llvm":{"tf":1.7320508075688773},"mir/passes.html#stealing":{"tf":1.4142135623730952},"traits/chalk-overview.html#testing":{"tf":1.0}},"df":3}}}}},"e":{"docs":{},"df":0,"c":{"docs":{"rustc-driver.html#a-note-on-lifetimes":{"tf":1.0},"rustdoc.html#from-clean-to-crate":{"tf":1.0},"tests/adding.html#naming-your-test":{"tf":1.0}},"df":3}},"c":{"docs":{},"df":0,"k":{"docs":{"method-lookup.html#method-lookup":{"tf":1.0},"method-lookup.html#candidate-search":{"tf":1.7320508075688773}},"df":2,"_":{"docs":{},"df":0,"c":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{},"df":0,"i":{"docs":{},"df":0,"d":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"_":{"docs":{},"df":0,"c":{"docs":{},"df":0,"a":{"docs":{},"df":0,"c":{"docs":{},"df":0,"h":{"docs":{"traits/caching.html#where-clauses-and-the-local-vs-global-cache":{"tf":1.4142135623730952}},"df":1}}}}}}}}}}}}}}}}},"n":{"docs":{"compiler-debugging.html#logging-etiquette":{"tf":1.0}},"df":1}},"1":{"docs":{"traits/associated-types.html#integration-with-unification":{"tf":1.0}},"df":1,".":{"docs":{},"df":0,".":{"docs":{},"df":0,"p":{"docs":{},"df":0,"n":{"docs":{"traits/lowering-rules.html#trait-header":{"tf":1.7320508075688773},"traits/lowering-rules.html#associated-type-declarations":{"tf":3.1622776601683797}},"df":2}}}}},"y":{"docs":{},"df":0,"t":{"docs":{},"df":0,"h":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{"how-to-build-and-run.html#how-to-build-the-compiler-and-run-what-you-built":{"tf":1.0}},"df":1}}}}},"o":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{},"df":0,"i":{"docs":{"mir/index.html#key-mir-vocabulary":{"tf":1.0},"name-resolution.html#scopes-and-ribs":{"tf":1.0},"appendix/stupid-stats.html#compilercontroller":{"tf":1.0},"traits/canonical-queries.html#a-trait-query-in-rustc":{"tf":1.0}},"df":4}}}},"a":{"docs":{},"df":0,"t":{"docs":{},"df":0,"o":{"docs":{"rustdoc.html#hot-potato":{"tf":1.4142135623730952}},"df":1}}}},"w":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"compiler-debugging.html#getting-logging-output":{"tf":1.0}},"df":1}}},"p":{"docs":{},"df":0,"u":{"docs":{},"df":0,"l":{"docs":{"query.html#how-the-compiler-executes-a-query":{"tf":1.0}},"df":1}}},"o":{"docs":{},"df":0,"l":{"docs":{"ty.html#the-tcx-and-how-it-uses-lifetimes":{"tf":1.0}},"df":1},"r":{"docs":{"traits/resolution.html#candidate-assembly":{"tf":1.0}},"df":1}},"r":{"docs":{},"df":0,"t":{"docs":{},"df":0,"i":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{"macro-expansion.html#macro-expansion":{"tf":1.0},"mir/regionck.html#representing-the-values-of-a-region-variable":{"tf":1.0},"mir/regionck.html#back-to-our-example":{"tf":1.0}},"df":3}}}}},"s":{"docs":{},"df":0,"s":{"docs":{},"df":0,"i":{"docs":{},"df":0,"b":{"docs":{},"df":0,"l":{"docs":{"diag.html#suggestions":{"tf":1.4142135623730952},"traits/goals-and-clauses.html#coinductive-goals":{"tf":1.0},"traits/canonical-queries.html#a-trait-query-in-rustc":{"tf":2.0},"appendix/glossary.html#appendix-c-glossary":{"tf":1.0},"mir/index.html#key-mir-vocabulary":{"tf":1.4142135623730952},"compiler-debugging.html#debugging-llvm":{"tf":1.0},"type-inference.html#trying-equality":{"tf":1.4142135623730952},"type-inference.html#snapshots":{"tf":1.0},"traits/canonical-queries.html#the-traditional-interactive-prolog-query":{"tf":2.0},"type-inference.html#inference-variables":{"tf":1.0},"method-lookup.html#method-lookup":{"tf":1.0},"query.html#adding-a-new-kind-of-query":{"tf":1.0},"traits/resolution.html#candidate-assembly":{"tf":1.7320508075688773},"appendix/stupid-stats.html#appendix-a-a-tutorial-on-creating-a-drop-in-replacement-for-rustc":{"tf":1.0},"traits/canonical-queries.html#examples":{"tf":1.0},"ty.html#allocating-and-working-with-types":{"tf":1.0},"traits/lowering-rules.html#associated-type-declarations":{"tf":1.0},"traits/resolution.html#confirmation":{"tf":1.0},"miri.html#datastructures":{"tf":1.0},"appendix/background.html#what-is-a-control-flow-graph":{"tf":1.0},"tests/adding.html#naming-your-test":{"tf":1.0},"appendix/stupid-stats.html#what-next":{"tf":1.0},"miri.html#miri":{"tf":1.0},"how-to-build-and-run.html#create-a-configtoml":{"tf":1.0},"traits/caching.html#an-example":{"tf":1.0},"miri.html#allocations":{"tf":1.0},"traits/resolution.html#selection":{"tf":1.7320508075688773},"incremental-compilation.html#incremental-compilation":{"tf":1.0}},"df":28}}}},"i":{"docs":{},"df":0,"t":{"docs":{"variance.html#variance-and-object-types":{"tf":1.4142135623730952},"traits/lowering-rules.html#lowering-where-clauses":{"tf":1.0},"traits/hrtb.html#higher-ranked-trait-obligations":{"tf":1.0}},"df":3}},"t":{"docs":{"traits/lowering-to-logic.html#source":{"tf":1.0},"high-level-overview.html#the-main-stages-of-compilation":{"tf":1.0},"tests/intro.html#further-reading":{"tf":1.0},"traits/chalk-overview.html#blog-posts":{"tf":1.4142135623730952},"type-inference.html#inference-variables":{"tf":1.0},"mir/visitor.html#traversal":{"tf":1.0},"mir/index.html#the-mir-mid-level-ir":{"tf":1.0}},"df":7}},"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{"traits/resolution.html#trait-resolution-old-style":{"tf":1.0},"traits/goals-and-clauses.html#coinductive-goals":{"tf":1.0},"appendix/stupid-stats.html#compilercalls":{"tf":1.4142135623730952},"rustdoc.html#from-crate-to-clean":{"tf":1.4142135623730952},"mir/passes.html#mir-passes":{"tf":1.0},"mir/borrowck.html#major-phases-of-the-borrow-checker":{"tf":1.4142135623730952},"compiler-debugging.html#getting-a-backtrace-for-errors":{"tf":1.0},"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.0},"type-inference.html#extracting-region-constraints":{"tf":1.0},"mir/regionck.html#what-is-a-universe":{"tf":1.0},"compiler-debugging.html#getting-logging-output":{"tf":1.0},"type-inference.html#lexical-region-resolution":{"tf":1.0},"mir/regionck.html#back-to-our-example":{"tf":1.7320508075688773},"tests/adding.html#header-commands-configuring-rustc":{"tf":1.0},"miri.html#interpretation":{"tf":1.0},"appendix/glossary.html#appendix-c-glossary":{"tf":1.4142135623730952},"how-to-build-and-run.html#creating-a-rustup-toolchain":{"tf":1.0},"variance.html#the-algorithm":{"tf":1.0},"name-resolution.html#overall-strategy":{"tf":1.4142135623730952},"traits/associated-types.html#integration-with-unification":{"tf":1.0},"traits/canonicalization.html#canonicalizing-the-query-result":{"tf":1.0},"tests/adding.html#comment-explaining-what-the-test-is-about":{"tf":1.0},"traits/lowering-module.html#the--program_clauses_for--query":{"tf":1.0},"query.html#cycles-between-queries":{"tf":1.0},"mir/regionck.html#representing-the-values-of-a-region-variable":{"tf":1.0},"appendix/stupid-stats.html#compilercontroller":{"tf":1.0},"type-inference.html#region-constraints":{"tf":1.0},"hir.html#identifiers-in-the-hir":{"tf":1.0},"miri.html#allocations":{"tf":1.0},"traits/canonical-queries.html#examples":{"tf":1.0},"rustdoc.html#the-walking-tour-of-rustdoc":{"tf":1.0},"mir/regionck.html#skolemization-and-outlives-constraints":{"tf":1.4142135623730952},"incremental-compilation.html#the-query-dag":{"tf":1.0}},"df":33,"e":{"docs":{},"df":0,"r":{"docs":{"appendix/glossary.html#appendix-c-glossary":{"tf":3.605551275463989},"variance.html#trait-variance-and-vtable-resolution":{"tf":1.0},"miri.html#allocations":{"tf":2.449489742783178},"tests/adding.html#ignoring-tests":{"tf":1.0},"miri.html#miri":{"tf":1.0},"query.html#how-the-compiler-executes-a-query":{"tf":1.0},"hir.html#the-hir-map":{"tf":1.0},"const-eval.html#constant-evaluation":{"tf":1.4142135623730952},"miri.html#datastructures":{"tf":1.0}},"df":9}}}}}},"t":{"docs":{},"df":0,"r":{"docs":{"tests/adding.html#normalization":{"tf":2.0}},"df":1}},"a":{"docs":{},"df":0,"p":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"variance.html#variance-of-type-and-lifetime-parameters":{"tf":1.7320508075688773},"traits/hrtb.html#basic-matching-and-skolemization-leaks":{"tf":1.4142135623730952},"variance.html#the-algorithm":{"tf":1.0},"traits/bibliography.html#bibliography":{"tf":1.7320508075688773},"traits/goals-and-clauses.html#goals-and-clauses-meta-structure":{"tf":1.0}},"df":5}}},"s":{"docs":{},"df":0,"t":{"docs":{"rustdoc.html#hot-potato":{"tf":1.0},"tests/adding.html#adding-new-tests":{"tf":1.0}},"df":2},"s":{"docs":{"hir.html#the-hir":{"tf":1.0},"compiler-debugging.html#debugging-llvm":{"tf":1.7320508075688773},"mir/passes.html#mir-passes":{"tf":2.23606797749979},"tests/adding.html#other-header-commands":{"tf":1.4142135623730952},"traits/hrtb.html#higher-ranked-trait-obligations":{"tf":1.0},"rustdoc.html#hot-potato":{"tf":3.1622776601683797},"incrcomp-debugging.html#dumping-the-graph":{"tf":1.0},"rustdoc.html#from-clean-to-crate":{"tf":1.0},"tests/running.html#running-a-subset-of-the-test-suites":{"tf":1.4142135623730952},"traits/hrtb.html#basic-matching-and-skolemization-leaks":{"tf":1.0},"mir/passes.html#implementing-and-registering-a-pass":{"tf":2.6457513110645909},"appendix/stupid-stats.html#compilercontroller":{"tf":1.0},"tests/adding.html#editing-and-updating-the-reference-files":{"tf":1.0},"rustc-driver.html#a-note-on-lifetimes":{"tf":1.0},"traits/resolution.html#candidate-assembly":{"tf":2.0},"rustc-driver.html#the-rustc-driver":{"tf":1.7320508075688773},"compiletest.html#adding-a-new-header-command":{"tf":1.0},"query.html#queries-demand-driven-compilation":{"tf":1.0},"appendix/stupid-stats.html#overview-of-the-compilation-process":{"tf":1.0},"variance.html#trait-variance-and-vtable-resolution":{"tf":1.0},"high-level-overview.html#the-main-stages-of-compilation":{"tf":1.7320508075688773},"mir/index.html#mir-data-types":{"tf":1.0},"tests/intro.html#compiletest-test-suites":{"tf":1.4142135623730952},"tests/adding.html#naming-your-test":{"tf":1.0},"ty.html#beyond-types-other-kinds-of-arena-allocated-data-structures":{"tf":1.0},"appendix/code-index.html#appendix-d-code-index":{"tf":1.4142135623730952},"tests/adding.html#what-kind-of-test-should-i-add":{"tf":1.0},"name-resolution.html#todo":{"tf":1.4142135623730952},"how-to-build-and-run.html#other-xpy-commands":{"tf":1.4142135623730952},"rustdoc.html#from-crate-to-clean":{"tf":1.0},"rustdoc.html#from-soup-to-nuts":{"tf":1.4142135623730952},"ty.html#allocating-and-working-with-types":{"tf":1.0},"mir/passes.html#seeing-how-the-mir-changes-as-the-compiler-executes":{"tf":2.6457513110645909},"compiler-debugging.html#getting-a-backtrace-for-errors":{"tf":1.0},"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.7320508075688773},"compiletest.html#introduction":{"tf":1.0},"tests/adding.html#tests-that-do-not-result-in-compile-errors":{"tf":1.4142135623730952},"mir/passes.html#stealing":{"tf":1.0},"tests/adding.html#revisions":{"tf":1.4142135623730952},"tests/adding.html#adding-new-tests":{"tf":1.0},"variance.html#variance-and-associated-types":{"tf":1.0},"name-resolution.html#name-resolution":{"tf":1.0}},"df":42,"/":{"docs":{},"df":0,"r":{"docs":{},"df":0,"f":{"docs":{},"df":0,"c":{"docs":{},"df":0,"1":{"docs":{},"df":0,"2":{"docs":{},"df":0,"3":{"docs":{},"df":0,"4":{"docs":{"tests/adding.html#naming-your-test":{"tf":1.0}},"df":1}}}}}}},"i":{"docs":{},"df":0,"s":{"docs":{},"df":0,"s":{"docs":{},"df":0,"u":{"docs":{"tests/adding.html#naming-your-test":{"tf":1.0}},"df":1}}}}}}},"n":{"docs":{},"df":0,"i":{"docs":{},"df":0,"c":{"docs":{"tests/intro.html#compiletest-test-suites":{"tf":1.4142135623730952},"compiler-debugging.html#getting-a-backtrace-for-errors":{"tf":1.7320508075688773},"mir/passes.html#stealing":{"tf":1.0},"miri.html#datastructures":{"tf":1.0},"compiler-debugging.html#getting-a-backtrace":{"tf":1.4142135623730952},"compiletest.html#implementing-the-behavior-change":{"tf":1.0},"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.4142135623730952},"compiler-debugging.html#expensive-operations-in-logs":{"tf":1.0}},"df":8,"=":{"docs":{},"df":0,"a":{"docs":{},"df":0,"b":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"t":{"docs":{"mir/passes.html#implementing-and-registering-a-pass":{"tf":1.0}},"df":1}}}}}},"!":{"docs":{},"df":0,"(":{"docs":{},"df":0,"\"":{"docs":{},"df":0,"n":{"docs":{},"df":0,"o":{"docs":{"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.0}},"df":1}}}}},"k":{"docs":{"compiler-debugging.html#getting-a-backtrace-for-errors":{"tf":1.4142135623730952},"hir.html#the-hir-map":{"tf":1.0}},"df":2}}}},"c":{"docs":{},"df":0,"k":{"docs":{"appendix/glossary.html#appendix-c-glossary":{"tf":1.0}},"df":1,"a":{"docs":{},"df":0,"g":{"docs":{"tests/intro.html#other-tests":{"tf":1.7320508075688773}},"df":1}}}},"i":{"docs":{},"df":0,"r":{"docs":{"miri.html#miri":{"tf":1.0},"mir/regionck.html#representing-the-values-of-a-region-variable":{"tf":1.0},"macro-expansion.html#example":{"tf":1.0},"hir.html#out-of-band-storage-and-the--crate--type":{"tf":1.0},"traits/resolution.html#major-concepts":{"tf":1.0}},"df":5,"w":{"docs":{},"df":0,"i":{"docs":{},"df":0,"s":{"docs":{"variance.html#variance-and-object-types":{"tf":1.0}},"df":1}}}},"n":{"docs":{"conventions.html#how-to-structure-your-pr":{"tf":1.0}},"df":1}},"g":{"docs":{},"df":0,"e":{"docs":{"rustdoc.html#the-walking-tour-of-rustdoc":{"tf":1.0},"rustdoc.html#cheat-sheet":{"tf":1.0},"rustdoc.html#from-soup-to-nuts":{"tf":1.0},"rustdoc.html#from-crate-to-clean":{"tf":1.7320508075688773},"rustdoc.html#from-clean-to-crate":{"tf":1.7320508075688773},"traits/lowering-to-logic.html#source":{"tf":1.0}},"df":6}},"t":{"docs":{},"df":0,"h":{"docs":{"appendix/glossary.html#appendix-c-glossary":{"tf":1.0},"rustdoc.html#dotting-is-and-crossing-ts":{"tf":1.0},"mir/passes.html#seeing-how-the-mir-changes-as-the-compiler-executes":{"tf":1.0},"high-level-overview.html#the-main-stages-of-compilation":{"tf":1.4142135623730952},"type-inference.html#snapshots":{"tf":1.0},"tests/adding.html#guide-to-the-ui-tests":{"tf":1.0},"mir/index.html#mir-data-types":{"tf":1.0},"incremental-compilation.html#the-query-dag":{"tf":1.0},"incrcomp-debugging.html#testing-the-dependency-graph":{"tf":2.23606797749979},"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":2.0},"appendix/background.html#what-is-a-control-flow-graph":{"tf":1.0},"hir.html#identifiers-in-the-hir":{"tf":1.4142135623730952},"type-checking.html#type-collection":{"tf":1.0},"incrcomp-debugging.html#tracking-down-incorrect-edges":{"tf":1.7320508075688773}},"df":14,"_":{"docs":{},"df":0,"t":{"docs":{},"df":0,"o":{"docs":{},"df":0,"_":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"g":{"docs":{},"df":0,"(":{"docs":{},"df":0,"p":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{},"df":0,"h":{"docs":{"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.0}},"df":1}}}}}}}}}}}}}}},"/":{"docs":{},"df":0,"t":{"docs":{},"df":0,"o":{"docs":{},"df":0,"/":{"docs":{},"df":0,"b":{"docs":{},"df":0,"u":{"docs":{},"df":0,"i":{"docs":{},"df":0,"l":{"docs":{},"df":0,"d":{"docs":{},"df":0,"/":{"docs":{},"df":0,"$":{"docs":{},"df":0,"t":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"g":{"docs":{},"df":0,"e":{"docs":{},"df":0,"t":{"docs":{},"df":0,"/":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"a":{"docs":{},"df":0,"g":{"docs":{},"df":0,"e":{"docs":{},"df":0,"1":{"docs":{"rustdoc.html#cheat-sheet":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"n":{"docs":{"macro-expansion.html#the-macro-parser":{"tf":2.23606797749979},"const-eval.html#constant-evaluation":{"tf":1.4142135623730952},"tests/adding.html#revisions":{"tf":1.0},"type-inference.html#snapshots":{"tf":1.0},"compiletest.html#adding-a-new-header-command":{"tf":1.0},"traits/goals-and-clauses.html#coinductive-goals":{"tf":1.0}},"df":6}}}}},"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{},"df":0,"l":{"docs":{},"df":0,"e":{"docs":{},"df":0,"l":{"docs":{"appendix/glossary.html#appendix-c-glossary":{"tf":1.0},"compiletest.html#introduction":{"tf":1.0},"name-resolution.html#scopes-and-ribs":{"tf":1.0},"how-to-build-and-run.html#create-a-configtoml":{"tf":1.0},"compiler-debugging.html#debugging-llvm":{"tf":1.4142135623730952}},"df":5}}}},"m":{"docs":{},"df":0,"t":{"docs":{"traits/lowering-rules.html#notation":{"tf":1.0}},"df":1},"_":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"v":{"docs":{"miri.html#miri":{"tf":1.0}},"df":1,".":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{},"df":0,"(":{"docs":{},"df":0,"t":{"docs":{},"df":0,"i":{"docs":{"param_env.html#parameter-environment":{"tf":1.0}},"df":1}}}}}}}}}}},"e":{"docs":{},"df":0,"t":{"docs":{"ty.html#the-tcx-and-how-it-uses-lifetimes":{"tf":1.7320508075688773},"traits/lowering-rules.html#function-and-constant-values":{"tf":1.0},"variance.html#variance-and-object-types":{"tf":2.449489742783178},"rustc-driver.html#the-rustc-driver":{"tf":1.0},"traits/resolution.html#overview":{"tf":1.0},"param_env.html#parameter-environment":{"tf":2.6457513110645909},"variance.html#variance-of-type-and-lifetime-parameters":{"tf":3.1622776601683797},"variance.html#addendum-variance-on-traits":{"tf":1.4142135623730952},"traits/resolution.html#candidate-assembly":{"tf":1.7320508075688773},"name-resolution.html#scopes-and-ribs":{"tf":1.4142135623730952},"traits/associated-types.html#associated-type-projection-and-normalization":{"tf":1.0},"variance.html#the-algorithm":{"tf":2.23606797749979},"diag.html#edition-gated-lints":{"tf":1.0},"compiletest.html#adding-a-new-header-command":{"tf":1.0},"miri.html#miri":{"tf":1.0},"traits/lowering-rules.html#notation":{"tf":1.0},"traits/resolution.html#confirmation":{"tf":1.4142135623730952},"appendix/glossary.html#appendix-c-glossary":{"tf":2.449489742783178},"variance.html#trait-variance-and-vtable-resolution":{"tf":2.0},"method-lookup.html#candidate-assembly":{"tf":1.4142135623730952},"ty.html#beyond-types-other-kinds-of-arena-allocated-data-structures":{"tf":1.0},"type-checking.html#type-collection":{"tf":1.0},"traits/canonicalization.html#executing-the-query":{"tf":1.0},"mir/regionck.html#what-is-a-universe":{"tf":1.0}},"df":24},"n":{"docs":{},"df":0,"v":{"docs":{"traits/caching.html#where-clauses-and-the-local-vs-global-cache":{"tf":1.0},"param_env.html#parameter-environment":{"tf":2.449489742783178},"const-eval.html#constant-evaluation":{"tf":1.0}},"df":3,"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{},"df":0,"<":{"docs":{},"df":0,"t":{"docs":{},"df":0,"i":{"docs":{"param_env.html#parameter-environment":{"tf":1.0}},"df":1}}}}}}}}}}},"t":{"docs":{"appendix/glossary.html#appendix-c-glossary":{"tf":1.0},"traits/canonical-queries.html#examples":{"tf":1.0},"traits/canonical-queries.html#canonical-queries":{"tf":1.0},"traits/associated-types.html#projection-equality":{"tf":1.0},"rustdoc.html#from-clean-to-crate":{"tf":1.4142135623730952},"traits/hrtb.html#basic-matching-and-skolemization-leaks":{"tf":1.0},"miri.html#miri":{"tf":1.4142135623730952},"traits/caching.html#caching-and-subtle-considerations-therewith":{"tf":1.0},"tests/adding.html#guide-to-the-ui-tests":{"tf":1.0},"traits/chalk-overview.html#blog-posts":{"tf":1.4142135623730952},"traits/resolution.html#overview":{"tf":1.0},"how-to-build-and-run.html#running-xpy-and-building-a-stage1-compiler":{"tf":1.0},"name-resolution.html#todo":{"tf":1.0},"incremental-compilation.html#the-basic-algorithm":{"tf":1.0},"traits/goals-and-clauses.html#domain-goals":{"tf":1.0},"hir.html#the-hir":{"tf":1.0},"tests/intro.html#compiletest-test-suites":{"tf":1.4142135623730952},"appendix/stupid-stats.html#what-next":{"tf":1.0},"name-resolution.html#scopes-and-ribs":{"tf":1.0},"high-level-overview.html#crate-structure":{"tf":1.0},"traits/resolution.html#candidate-assembly":{"tf":1.0},"traits/canonicalization.html#canonicalization":{"tf":1.4142135623730952},"mir/passes.html#seeing-how-the-mir-changes-as-the-compiler-executes":{"tf":1.4142135623730952},"traits/specialization.html#specialization":{"tf":1.0},"appendix/stupid-stats.html#appendix-a-a-tutorial-on-creating-a-drop-in-replacement-for-rustc":{"tf":1.0},"compiler-debugging.html#getting-a-backtrace-for-errors":{"tf":1.4142135623730952},"rustdoc.html#from-crate-to-clean":{"tf":1.0},"appendix/stupid-stats.html#overview-of-the-compilation-process":{"tf":1.4142135623730952},"traits/chalk-overview.html#well-formedness-checks":{"tf":1.0},"traits/canonical-queries.html#a-trait-query-in-rustc":{"tf":1.0},"mir/regionck.html#what-is-a-universe":{"tf":1.0},"mir/regionck.html#skolemization-and-outlives-constraints":{"tf":1.0},"method-lookup.html#candidate-assembly":{"tf":1.0},"hir.html#identifiers-in-the-hir":{"tf":1.0},"mir/passes.html#implementing-and-registering-a-pass":{"tf":1.0},"mir/passes.html#stealing":{"tf":1.0},"traits/lowering-to-logic.html#rust-traits-and-logic":{"tf":1.0},"traits/associated-types.html#equality-and-associated-types":{"tf":1.0},"tests/adding.html#comment-explaining-what-the-test-is-about":{"tf":1.4142135623730952},"macro-expansion.html#the-macro-parser":{"tf":1.0}},"df":40,"l":{"docs":{},"df":0,"i":{"docs":{"traits/wf.html#well-formedness-checking":{"tf":1.0}},"df":1}},"i":{"docs":{"rustc-driver.html#the-rustc-driver":{"tf":1.0}},"df":1,"a":{"docs":{},"df":0,"l":{"docs":{"traits/canonicalization.html#processing-the-canonicalized-query-result":{"tf":1.0},"rustdoc.html#other-tricks-up-its-sleeve":{"tf":1.0},"traits/specialization.html#specialization":{"tf":1.0}},"df":3,"e":{"docs":{},"df":0,"q":{"docs":{"traits/lowering-rules.html#trait-header":{"tf":2.0}},"df":1}}}},"c":{"docs":{},"df":0,"u":{"docs":{},"df":0,"l":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{"type-inference.html#extracting-region-constraints":{"tf":1.0},"mir/regionck.html#mir-based-region-checking-nll":{"tf":1.0},"incremental-compilation.html#improvements-to-the-basic-algorithm":{"tf":1.0},"variance.html#dependency-graph-management":{"tf":1.4142135623730952},"conventions.html#line-length":{"tf":1.0},"tests/adding.html#guide-to-the-ui-tests":{"tf":1.0},"incrcomp-debugging.html#dumping-the-graph":{"tf":1.7320508075688773},"traits/resolution.html#selection-during-translation":{"tf":1.4142135623730952},"variance.html#variance-and-object-types":{"tf":1.0},"how-to-build-and-run.html#running-xpy-and-building-a-stage1-compiler":{"tf":1.4142135623730952},"rustc-driver.html#the-rustc-driver":{"tf":1.0},"tests/adding.html#adding-new-tests":{"tf":1.0},"traits/resolution.html#candidate-assembly":{"tf":1.7320508075688773},"traits/goals-and-clauses.html#domain-goals":{"tf":1.0},"compiletest.html#adding-a-new-header-command":{"tf":1.4142135623730952},"traits/canonical-queries.html#a-trait-query-in-rustc":{"tf":1.0},"traits/lowering-to-logic.html#rust-traits-and-logic":{"tf":1.0},"traits/lowering-rules.html#associated-type-declarations":{"tf":1.0},"hir.html#identifiers-in-the-hir":{"tf":1.0},"method-lookup.html#method-lookup":{"tf":1.0},"mir/regionck.html#subtyping-and-skolemization":{"tf":1.0},"query.html#adding-a-new-kind-of-query":{"tf":1.4142135623730952},"tests/adding.html#revisions":{"tf":1.4142135623730952},"compiler-debugging.html#getting-logging-output":{"tf":1.0},"the-parser.html#the-parser":{"tf":1.0},"appendix/stupid-stats.html#what-next":{"tf":1.0},"compiletest.html#implementing-the-behavior-change":{"tf":1.0},"appendix/glossary.html#appendix-c-glossary":{"tf":1.7320508075688773},"tests/running.html#running-a-subset-of-the-test-suites":{"tf":1.0},"ty.html#import-conventions":{"tf":1.0},"mir/passes.html#stealing":{"tf":1.0},"high-level-overview.html#the-main-stages-of-compilation":{"tf":1.0},"type-inference.html#enforcing-equality--subtyping":{"tf":1.0},"incremental-compilation.html#the-basic-algorithm":{"tf":1.0},"mir/borrowck.html#major-phases-of-the-borrow-checker":{"tf":1.0},"compiler-debugging.html#debugging-llvm":{"tf":1.0}},"df":36,"l":{"docs":{},"df":0,"i":{"docs":{"how-to-build-and-run.html#create-a-configtoml":{"tf":1.0},"incrcomp-debugging.html#dumping-the-graph":{"tf":1.0},"ty.html#the-tcx-and-how-it-uses-lifetimes":{"tf":1.0},"ty.html#allocating-and-working-with-types":{"tf":1.0}},"df":4}}}}}}}}},"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{"hir.html#the-hir-map":{"tf":1.0},"the-parser.html#the-parser":{"tf":1.0},"hir.html#out-of-band-storage-and-the--crate--type":{"tf":1.0},"traits/canonicalization.html#canonicalizing-the-query-result":{"tf":1.0},"mir/regionck.html#what-is-a-universe":{"tf":1.4142135623730952},"traits/canonicalization.html#canonicalization":{"tf":1.0}},"df":6,"h":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{"high-level-overview.html#the-main-stages-of-compilation":{"tf":1.4142135623730952},"macro-expansion.html#example":{"tf":1.4142135623730952}},"df":2}}}}}},"s":{"docs":{"the-parser.html#the-parser":{"tf":2.0},"macro-expansion.html#example":{"tf":1.0},"high-level-overview.html#the-main-stages-of-compilation":{"tf":2.0},"macro-expansion.html#the-macro-parser":{"tf":3.3166247903554},"traits/chalk-overview.html#lowering":{"tf":1.0},"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":2.0},"hir.html#the-hir":{"tf":1.0},"appendix/stupid-stats.html#compilercontroller":{"tf":1.4142135623730952},"rustdoc.html#hot-potato":{"tf":1.0},"appendix/stupid-stats.html#compilercalls":{"tf":1.0},"query.html#queries-demand-driven-compilation":{"tf":1.0},"appendix/glossary.html#appendix-c-glossary":{"tf":1.0},"macro-expansion.html#macro-expansion":{"tf":1.7320508075688773},"traits/chalk-overview.html#parsing":{"tf":1.7320508075688773},"appendix/code-index.html#appendix-d-code-index":{"tf":1.7320508075688773},"name-resolution.html#name-resolution":{"tf":1.0},"tests/adding.html#what-kind-of-test-should-i-add":{"tf":1.0},"appendix/stupid-stats.html#overview-of-the-compilation-process":{"tf":2.0},"tests/intro.html#compiletest-test-suites":{"tf":1.4142135623730952},"compiletest.html#adding-a-new-header-command":{"tf":2.0},"rustc-driver.html#the-rustc-driver":{"tf":1.7320508075688773}},"df":21,"e":{"docs":{},"df":0,"r":{"docs":{"rustdoc.html#from-clean-to-crate":{"tf":1.4142135623730952},"rustdoc.html#hot-potato":{"tf":1.7320508075688773},"the-parser.html#the-parser":{"tf":3.4641016151377546},"macro-expansion.html#the-macro-parser":{"tf":4.795831523312719},"appendix/code-index.html#appendix-d-code-index":{"tf":2.449489742783178},"high-level-overview.html#crate-structure":{"tf":1.0},"compiletest.html#adding-a-new-header-command":{"tf":3.0},"macro-expansion.html#macro-expansion":{"tf":2.449489742783178},"traits/chalk-overview.html#parsing":{"tf":1.4142135623730952}},"df":9,"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"s":{"docs":{"macro-expansion.html#the-macro-parser":{"tf":1.0}},"df":1}}}},"'":{"docs":{"macro-expansion.html#the-macro-parser":{"tf":1.4142135623730952}},"df":1}},"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"s":{"docs":{"diag.html#error-messages":{"tf":1.0},"the-parser.html#the-parser":{"tf":1.0},"appendix/code-index.html#appendix-d-code-index":{"tf":1.0}},"df":3}}}},"_":{"docs":{"the-parser.html#the-parser":{"tf":1.0}},"df":1,"<":{"docs":{},"df":0,"h":{"docs":{},"df":0,"e":{"docs":{},"df":0,"a":{"docs":{},"df":0,"d":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"_":{"docs":{},"df":0,"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"m":{"docs":{},"df":0,"m":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{"compiletest.html#adding-a-new-header-command":{"tf":1.0}},"df":1}}}}}}}}}}}}}}},"p":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"t":{"docs":{},"df":0,"t":{"docs":{},"df":0,"i":{"docs":{"appendix/stupid-stats.html#compilercalls":{"tf":1.0}},"df":1}}}}}},"n":{"docs":{},"df":0,"a":{"docs":{},"df":0,"m":{"docs":{},"df":0,"e":{"docs":{},"df":0,"_":{"docs":{},"df":0,"d":{"docs":{},"df":0,"i":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{"compiletest.html#adding-a-new-header-command":{"tf":1.0}},"df":1}}}}}},"v":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{},"df":0,"u":{"docs":{},"df":0,"e":{"docs":{},"df":0,"_":{"docs":{},"df":0,"d":{"docs":{},"df":0,"i":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{"compiletest.html#adding-a-new-header-command":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}},"f":{"docs":{},"df":0,"a":{"docs":{},"df":0,"i":{"docs":{},"df":0,"l":{"docs":{},"df":0,"u":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"_":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{},"df":0,"u":{"docs":{"compiletest.html#implementing-the-behavior-change":{"tf":1.0},"compiletest.html#adding-a-new-header-command":{"tf":1.0}},"df":2,"s":{"docs":{},"df":0,"(":{"docs":{},"df":0,"&":{"docs":{},"df":0,"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"l":{"docs":{},"df":0,"f":{"docs":{"compiletest.html#adding-a-new-header-command":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}}}}}}}}},"f":{"docs":{"traits/hrtb.html#higher-ranked-trait-obligations":{"tf":1.7320508075688773},"mir/passes.html#seeing-how-the-mir-changes-as-the-compiler-executes":{"tf":1.0},"high-level-overview.html#the-main-stages-of-compilation":{"tf":1.0},"mir/index.html#mir-data-types":{"tf":1.0}},"df":4,"l":{"docs":{},"df":0,"e":{"docs":{},"df":0,"x":{"docs":{},"df":0,"i":{"docs":{},"df":0,"b":{"docs":{},"df":0,"l":{"docs":{"appendix/stupid-stats.html#what-next":{"tf":1.0},"tests/intro.html#compiletest-test-suites":{"tf":1.0}},"df":2}}}}},"a":{"docs":{},"df":0,"g":{"docs":{"tests/adding.html#other-header-commands":{"tf":1.4142135623730952},"compiler-debugging.html#debugging-llvm":{"tf":1.0},"appendix/stupid-stats.html#compilercontroller":{"tf":2.0},"hir.html#the-hir":{"tf":1.0},"query.html#adding-a-new-kind-of-query":{"tf":1.4142135623730952},"tests/adding.html#revisions":{"tf":1.7320508075688773},"tests/adding.html#editing-and-updating-the-reference-files":{"tf":1.0},"tests/running.html#running-an-individual-test":{"tf":1.0},"incrcomp-debugging.html#dumping-the-graph":{"tf":1.0},"tests/adding.html#header-commands-configuring-rustc":{"tf":1.7320508075688773}},"df":10},"v":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{"tests/adding.html#normalization":{"tf":1.0}},"df":1}}}},"o":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{"type-inference.html#inference-variables":{"tf":1.7320508075688773}},"df":1}},"w":{"docs":{"high-level-overview.html#crate-structure":{"tf":1.4142135623730952},"appendix/glossary.html#appendix-c-glossary":{"tf":2.23606797749979},"mir/index.html#key-mir-vocabulary":{"tf":1.4142135623730952},"mir/index.html#the-mir-mid-level-ir":{"tf":1.4142135623730952},"mir/borrowck.html#major-phases-of-the-borrow-checker":{"tf":1.0},"appendix/background.html#what-is-a-control-flow-graph":{"tf":2.8284271247461905},"query.html#queries-demand-driven-compilation":{"tf":1.0},"mir/regionck.html#skolemization-and-outlives-constraints":{"tf":1.0},"mir/borrowck.html#mir-borrow-check":{"tf":1.0},"mir/regionck.html#representing-the-values-of-a-region-variable":{"tf":1.4142135623730952},"mir/index.html#introduction-to-mir":{"tf":1.0}},"df":11}}},"o":{"docs":{},"df":0,"o":{"docs":{"miri.html#miri":{"tf":2.23606797749979},"traits/lowering-to-logic.html#rust-traits-and-logic":{"tf":1.4142135623730952},"traits/lowering-to-logic.html#type-checking-normal-functions":{"tf":2.0},"traits/lowering-module.html#unit-tests":{"tf":2.23606797749979},"traits/index.html#trait-solving-new-style":{"tf":1.0},"traits/lowering-rules.html#rule-names-and-cross-references":{"tf":1.0},"incrcomp-debugging.html#testing-the-dependency-graph":{"tf":1.4142135623730952},"mir/index.html#mir-data-types":{"tf":1.0},"mir/passes.html#seeing-how-the-mir-changes-as-the-compiler-executes":{"tf":1.0},"macro-expansion.html#the-macro-parser":{"tf":1.7320508075688773},"incrcomp-debugging.html#dumping-the-graph":{"tf":1.4142135623730952},"method-lookup.html#candidate-assembly":{"tf":2.449489742783178},"traits/resolution.html#selection-during-translation":{"tf":1.7320508075688773},"mir/visitor.html#mir-visitor":{"tf":1.4142135623730952},"traits/hrtb.html#basic-matching-and-skolemization-leaks":{"tf":1.0},"traits/goals-and-clauses.html#coinductive-goals":{"tf":2.449489742783178},"traits/lowering-rules.html#trait-header":{"tf":2.6457513110645909},"mir/regionck.html#skolemization-and-universes":{"tf":1.0},"traits/canonical-queries.html#examples":{"tf":1.7320508075688773},"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.0},"query.html#adding-a-new-kind-of-query":{"tf":1.0},"traits/resolution.html#candidate-assembly":{"tf":1.0},"mir/regionck.html#what-is-a-universe":{"tf":1.4142135623730952},"tests/adding.html#revisions":{"tf":2.23606797749979},"tests/adding.html#normalization":{"tf":1.0},"variance.html#constraints":{"tf":1.4142135623730952},"traits/canonicalization.html#executing-the-query":{"tf":1.0},"mir/regionck.html#subtyping-and-skolemization":{"tf":1.0},"conventions.html#use-todo-comments-for-things-you-dont-want-to-forget":{"tf":1.0},"type-checking.html#type-collection":{"tf":1.4142135623730952},"traits/chalk-overview.html#intermediate-representation-ir":{"tf":1.0},"traits/lowering-to-logic.html#type-checking-generic-functions-beyond-horn-clauses":{"tf":2.0},"macro-expansion.html#example":{"tf":2.0},"traits/hrtb.html#higher-ranked-trait-obligations":{"tf":1.0},"incrcomp-debugging.html#tracking-down-incorrect-edges":{"tf":1.0},"hir.html#out-of-band-storage-and-the--crate--type":{"tf":2.0}},"df":36,"]":{"docs":{},"df":0,"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"m":{"docs":{},"df":0,"p":{"docs":{},"df":0,"i":{"docs":{},"df":0,"l":{"docs":{"tests/adding.html#revisions":{"tf":1.0}},"df":1}}}}}}},"<":{"docs":{},"df":0,"i":{"docs":{"variance.html#constraints":{"tf":1.4142135623730952},"traits/caching.html#an-example":{"tf":1.0}},"df":2,"s":{"docs":{"traits/caching.html#an-example":{"tf":1.0}},"df":1}},"$":{"docs":{},"df":0,"0":{"docs":{"traits/caching.html#an-example":{"tf":1.7320508075688773}},"df":1},"u":{"docs":{"traits/caching.html#an-example":{"tf":1.0}},"df":1},"t":{"docs":{"traits/caching.html#an-example":{"tf":1.0}},"df":1}},"a":{"docs":{"traits/canonical-queries.html#examples":{"tf":1.4142135623730952}},"df":1,"1":{"docs":{},"df":0,".":{"docs":{},"df":0,".":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{"traits/lowering-rules.html#lowering-where-clauses":{"tf":1.7320508075688773}},"df":1,">":{"docs":{},"df":0,">":{"docs":{},"df":0,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"m":{"docs":{"traits/lowering-rules.html#lowering-where-clauses":{"tf":1.0}},"df":1}}}}}}}}}}}}}},"t":{"docs":{"appendix/glossary.html#appendix-c-glossary":{"tf":1.0},"traits/lowering-to-logic.html#type-checking-generic-functions-beyond-horn-clauses":{"tf":1.0},"variance.html#constraints":{"tf":1.0},"traits/associated-types.html#skolemized-associated-types":{"tf":1.0},"param_env.html#parameter-environment":{"tf":1.0}},"df":5},"x":{"docs":{"variance.html#constraints":{"tf":1.0},"traits/hrtb.html#basic-matching-and-skolemization-leaks":{"tf":1.0},"traits/hrtb.html#higher-ranked-trait-obligations":{"tf":1.4142135623730952}},"df":3,":":{"docs":{},"df":0,"a":{"docs":{},"df":0,"2":{"docs":{},"df":0,"+":{"docs":{},"df":0,"b":{"docs":{},"df":0,">":{"docs":{},"df":0,"(":{"docs":{},"df":0,"x":{"docs":{"traits/resolution.html#candidate-assembly":{"tf":1.0}},"df":1}}}}}}}}},"&":{"docs":{},"df":0,"'":{"docs":{},"df":0,"a":{"docs":{"traits/hrtb.html#higher-ranked-trait-obligations":{"tf":1.0},"traits/hrtb.html#basic-matching-and-skolemization-leaks":{"tf":2.449489742783178}},"df":2},"$":{"docs":{},"df":0,"a":{"docs":{"traits/hrtb.html#basic-matching-and-skolemization-leaks":{"tf":1.0}},"df":1}},"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{"traits/hrtb.html#basic-matching-and-skolemization-leaks":{"tf":1.4142135623730952}},"df":1}}}},"0":{"docs":{"traits/hrtb.html#basic-matching-and-skolemization-leaks":{"tf":1.0}},"df":1}}},"'":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{"traits/canonicalization.html#processing-the-canonicalized-query-result":{"tf":1.0},"traits/canonicalization.html#canonicalizing-the-query":{"tf":1.0}},"df":2}}}},"?":{"docs":{},"df":0,"1":{"docs":{"traits/canonicalization.html#canonicalizing-the-query":{"tf":1.4142135623730952},"traits/canonicalization.html#executing-the-query":{"tf":1.0},"traits/canonicalization.html#processing-the-canonicalized-query-result":{"tf":1.0},"traits/canonicalization.html#canonicalizing-the-query-result":{"tf":1.0}},"df":4},"b":{"docs":{"traits/canonicalization.html#executing-the-query":{"tf":1.0}},"df":1}},"a":{"docs":{"traits/canonicalization.html#executing-the-query":{"tf":1.0}},"df":1,">":{"docs":{},"df":0,"(":{"docs":{},"df":0,"&":{"docs":{},"df":0,"'":{"docs":{},"df":0,"a":{"docs":{"mir/regionck.html#mir-based-region-checking-nll":{"tf":1.0}},"df":1}}}}}}},"b":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{"traits/chalk-overview.html#intermediate-representation-ir":{"tf":1.0}},"df":1}}}},"(":{"docs":{},"df":0,"x":{"docs":{"type-checking.html#type-collection":{"tf":1.0},"mir/regionck.html#skolemization-and-universes":{"tf":1.0}},"df":2},"&":{"docs":{},"df":0,"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"l":{"docs":{},"df":0,"f":{"docs":{"traits/hrtb.html#higher-ranked-trait-obligations":{"tf":1.0},"variance.html#variance-and-associated-types":{"tf":1.0},"traits/hrtb.html#basic-matching-and-skolemization-leaks":{"tf":1.0}},"df":3}}}}},"t":{"docs":{"traits/canonical-queries.html#examples":{"tf":1.4142135623730952},"appendix/glossary.html#appendix-c-glossary":{"tf":1.0}},"df":2},"d":{"docs":{"mir/passes.html#stealing":{"tf":1.4142135623730952}},"df":1}},":":{"docs":{},"df":0,":":{"docs":{},"df":0,"{":{"docs":{},"df":0,"{":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{},"df":0,"i":{"docs":{"miri.html#miri":{"tf":1.0}},"df":1}}}}}}}}},"t":{"docs":{},"df":0,"y":{"docs":{},"df":0,"p":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"h":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"k":{"docs":{"traits/lowering-to-logic.html#type-checking-generic-functions-beyond-horn-clauses":{"tf":1.0},"traits/lowering-to-logic.html#type-checking-normal-functions":{"tf":1.7320508075688773}},"df":2}}}}}}}},"n":{"docs":{},"df":0,"o":{"docs":{},"df":0,"t":{"docs":{"rustdoc.html#from-clean-to-crate":{"tf":1.0},"incremental-compilation.html#footnotes":{"tf":1.4142135623730952}},"df":2}}}},".":{"docs":{},"df":0,"r":{"docs":{"mir/passes.html#seeing-how-the-mir-changes-as-the-compiler-executes":{"tf":2.0},"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.7320508075688773}},"df":2}}},"c":{"docs":{},"df":0,"u":{"docs":{"traits/lowering-to-logic.html#type-checking-normal-functions":{"tf":1.0}},"df":1,"s":{"docs":{"mir/regionck.html#what-is-a-universe":{"tf":1.0},"high-level-overview.html#crate-structure":{"tf":1.0},"traits/lowering-rules.html#lowering-traits":{"tf":1.0}},"df":3}}},"u":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{"appendix/stupid-stats.html#overview-of-the-compilation-process":{"tf":1.0},"mir/index.html#introduction-to-mir":{"tf":1.0},"traits/caching.html#an-example":{"tf":1.0},"rustdoc.html#dotting-is-and-crossing-ts":{"tf":1.0},"ty.html#beyond-types-other-kinds-of-arena-allocated-data-structures":{"tf":1.0},"compiletest.html#implementing-the-behavior-change":{"tf":1.0},"compiletest.html#introduction":{"tf":1.0},"tests/adding.html#other-header-commands":{"tf":1.4142135623730952},"incrcomp-debugging.html#testing-the-dependency-graph":{"tf":1.0},"traits/resolution.html#selection":{"tf":1.0},"mir/visitor.html#mir-visitor":{"tf":1.4142135623730952},"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.0},"traits/resolution.html#confirmation":{"tf":1.0},"mir/borrowck.html#major-phases-of-the-borrow-checker":{"tf":1.7320508075688773},"high-level-overview.html#crate-structure":{"tf":1.0},"variance.html#variance-of-type-and-lifetime-parameters":{"tf":1.4142135623730952},"compiletest.html#adding-a-new-header-command":{"tf":1.4142135623730952},"rustdoc.html#other-tricks-up-its-sleeve":{"tf":1.0},"mir/index.html#mir-data-types":{"tf":1.0},"miri.html#datastructures":{"tf":1.0},"mir/passes.html#implementing-and-registering-a-pass":{"tf":1.4142135623730952},"about-this-guide.html#about-this-guide":{"tf":1.0},"tests/running.html#running-tests":{"tf":1.0},"traits/resolution.html#candidate-assembly":{"tf":1.0},"type-checking.html#type-collection":{"tf":1.0}},"df":25}},"r":{"docs":{"type-inference.html#inference-variables":{"tf":1.0},"traits/canonical-queries.html#a-trait-query-in-rustc":{"tf":1.0},"appendix/background.html#what-is-a-control-flow-graph":{"tf":1.0},"hir.html#identifiers-in-the-hir":{"tf":1.0},"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.4142135623730952}},"df":5,"t":{"docs":{},"df":0,"h":{"docs":{"tests/adding.html#ignoring-tests":{"tf":1.0}},"df":1}},"_":{"docs":{},"df":0,"p":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"c":{"docs":{"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.4142135623730952}},"df":1}}}}}}},"l":{"docs":{},"df":0,"l":{"docs":{},"df":0,"o":{"docs":{},"df":0,"w":{"docs":{"traits/canonical-queries.html#examples":{"tf":1.0},"conventions.html#coding-for-correctness":{"tf":1.0},"tests/intro.html#testing-on-emulators":{"tf":1.0},"compiletest.html#adding-a-new-header-command":{"tf":1.4142135623730952},"compiler-debugging.html#formatting-graphviz-output-dot-files":{"tf":1.0},"conventions.html#copyright-notice":{"tf":1.0},"tests/adding.html#error-annotations":{"tf":2.0},"mir/borrowck.html#major-phases-of-the-borrow-checker":{"tf":1.0},"type-inference.html#subtyping-obligations":{"tf":1.0},"diag.html#declaring-a-lint":{"tf":1.0},"tests/running.html#running-a-subset-of-the-test-suites":{"tf":1.0},"traits/canonicalization.html#canonicalizing-the-query-result":{"tf":1.0},"name-resolution.html#todo":{"tf":1.0},"traits/goals-and-clauses.html#goals-and-clauses-meta-structure":{"tf":1.0},"tests/intro.html#further-reading":{"tf":1.0},"traits/resolution.html#confirmation":{"tf":1.0},"macro-expansion.html#the-macro-parser":{"tf":1.7320508075688773},"traits/goals-and-clauses.html#domain-goals":{"tf":1.4142135623730952},"conventions.html#how-to-structure-your-pr":{"tf":1.0},"mir/regionck.html#another-example":{"tf":1.0},"variance.html#the-algorithm":{"tf":1.0},"macro-expansion.html#example":{"tf":1.4142135623730952},"type-inference.html#creating-an-inference-context":{"tf":1.0},"conventions.html#formatting-and-the-tidy-script":{"tf":1.0},"mir/regionck.html#representing-the-values-of-a-region-variable":{"tf":1.0},"incrcomp-debugging.html#dumping-the-graph":{"tf":1.0},"traits/resolution.html#candidate-assembly":{"tf":1.4142135623730952},"high-level-overview.html#the-main-stages-of-compilation":{"tf":1.0},"mir/regionck.html#subtyping-and-skolemization":{"tf":1.0},"traits/chalk-overview.html#lowering":{"tf":1.7320508075688773},"traits/lowering-rules.html#lowering-impls":{"tf":1.0},"type-inference.html#snapshots":{"tf":1.0},"traits/lowering-rules.html#lowering-where-clauses":{"tf":1.0},"how-to-build-and-run.html#running-xpy-and-building-a-stage1-compiler":{"tf":1.0},"how-to-build-and-run.html#create-a-configtoml":{"tf":1.0},"tests/running.html#running-tests":{"tf":1.0},"incremental-compilation.html#the-try-mark-green-algorithm":{"tf":1.0},"traits/canonicalization.html#canonicalizing-the-query":{"tf":1.4142135623730952},"traits/lowering-rules.html#trait-header":{"tf":1.4142135623730952},"traits/lowering-rules.html#associated-type-values":{"tf":1.0},"traits/canonicalization.html#executing-the-query":{"tf":1.4142135623730952},"tests/adding.html#tests-that-do-not-result-in-compile-errors":{"tf":1.0},"traits/lowering-to-logic.html#rust-traits-and-logic":{"tf":1.4142135623730952}},"df":43}}},"d":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"rustdoc.html#cheat-sheet":{"tf":1.0},"rustdoc.html#from-clean-to-crate":{"tf":1.0},"compiletest.html#introduction":{"tf":1.7320508075688773}},"df":3}}}},"h":{"docs":{},"df":0,"h":{"docs":{"traits/lowering-to-logic.html#type-checking-generic-functions-beyond-horn-clauses":{"tf":1.7320508075688773}},"df":1}},"n":{"docs":{},"df":0,"t":{"docs":{"rustdoc.html#from-clean-to-crate":{"tf":1.0}},"df":1}},"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"i":{"docs":{},"df":0,"g":{"docs":{},"df":0,"n":{"docs":{"mir/passes.html#mir-passes":{"tf":1.0},"rustdoc.html#from-soup-to-nuts":{"tf":1.0}},"df":2}}}},"a":{"docs":{},"df":0,"l":{"docs":{"mir/regionck.html#what-is-a-universe":{"tf":1.0},"traits/lowering-to-logic.html#type-checking-generic-functions-beyond-horn-clauses":{"tf":1.4142135623730952},"traits/chalk-overview.html#lowering":{"tf":1.0}},"df":3,"l":{"docs":{},"df":0,"<":{"docs":{},"df":0,"p":{"docs":{},"df":0,"0":{"docs":{},"df":0,".":{"docs":{},"df":0,".":{"docs":{},"df":0,"p":{"docs":{},"df":0,"n":{"docs":{"traits/lowering-rules.html#lowering-impls":{"tf":1.0}},"df":1},"m":{"docs":{"traits/lowering-rules.html#associated-type-values":{"tf":1.0}},"df":1}}}}},"n":{"docs":{},"df":0,"+":{"docs":{},"df":0,"1":{"docs":{},"df":0,".":{"docs":{},"df":0,".":{"docs":{},"df":0,"p":{"docs":{},"df":0,"m":{"docs":{"traits/lowering-rules.html#associated-type-values":{"tf":1.0}},"df":1}}}}}}}},"t":{"docs":{"traits/lowering-to-logic.html#type-checking-generic-functions-beyond-horn-clauses":{"tf":1.0},"traits/associated-types.html#associated-type-projection-and-normalization":{"tf":1.0},"traits/chalk-overview.html#lowering":{"tf":2.23606797749979},"traits/associated-types.html#projection-equality":{"tf":1.4142135623730952}},"df":4,"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{"traits/chalk-overview.html#lowering":{"tf":1.0}},"df":1}}}}},"i":{"docs":{"mir/regionck.html#what-is-a-universe":{"tf":1.0}},"df":1},"k":{"docs":{"traits/goals-and-clauses.html#goals-and-clauses-meta-structure":{"tf":1.4142135623730952}},"df":1},"z":{"docs":{"mir/regionck.html#what-is-a-universe":{"tf":1.0}},"df":1},"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"l":{"docs":{},"df":0,"f":{"docs":{"traits/lowering-rules.html#trait-header":{"tf":1.7320508075688773},"traits/lowering-rules.html#associated-type-declarations":{"tf":2.449489742783178}},"df":2}}}}}}}},"m":{"docs":{"traits/lowering-rules.html#associated-type-declarations":{"tf":1.7320508075688773},"name-resolution.html#scopes-and-ribs":{"tf":1.0},"mir/index.html#key-mir-vocabulary":{"tf":1.0},"appendix/code-index.html#appendix-d-code-index":{"tf":1.0},"variance.html#constraints":{"tf":1.0},"traits/chalk-overview.html#lowering":{"tf":1.4142135623730952},"mir/index.html#the-mir-mid-level-ir":{"tf":1.0},"hir.html#the-hir":{"tf":1.0},"appendix/glossary.html#appendix-c-glossary":{"tf":1.7320508075688773},"type-inference.html#region-constraints":{"tf":1.0},"traits/canonicalization.html#canonicalization":{"tf":1.4142135623730952},"mir/regionck.html#what-is-a-universe":{"tf":1.0},"traits/goals-and-clauses.html#domain-goals":{"tf":1.4142135623730952},"traits/canonicalization.html#executing-the-query":{"tf":1.0},"mir/regionck.html#skolemization-and-outlives-constraints":{"tf":1.0},"rustc-driver.html#the-rustc-driver":{"tf":1.0},"traits/lowering-to-logic.html#type-checking-normal-functions":{"tf":1.4142135623730952},"traits/goals-and-clauses.html#goals-and-clauses-meta-structure":{"tf":1.4142135623730952},"the-parser.html#the-parser":{"tf":1.0},"rustdoc.html#the-walking-tour-of-rustdoc":{"tf":1.0},"traits/lowering-rules.html#trait-header":{"tf":2.0},"traits/index.html#trait-solving-new-style":{"tf":1.4142135623730952},"traits/associated-types.html#associated-type-projection-and-normalization":{"tf":1.0},"method-lookup.html#method-lookup":{"tf":1.4142135623730952},"traits/wf.html#well-formedness-checking":{"tf":1.0},"variance.html#the-algorithm":{"tf":1.0}},"df":26,"a":{"docs":{},"df":0,"t":{"docs":{"diag.html#suggestions":{"tf":1.0},"conventions.html#coding-for-correctness":{"tf":1.0},"traits/chalk-overview.html#parsing":{"tf":1.0},"mir/index.html#key-mir-vocabulary":{"tf":1.4142135623730952},"query.html#adding-a-new-kind-of-query":{"tf":1.0},"appendix/stupid-stats.html#appendix-a-a-tutorial-on-creating-a-drop-in-replacement-for-rustc":{"tf":1.0},"compiler-debugging.html#formatting-graphviz-output-dot-files":{"tf":1.4142135623730952},"tests/intro.html#other-tests":{"tf":1.0},"conventions.html#how-to-structure-your-pr":{"tf":1.0},"conventions.html#formatting-and-the-tidy-script":{"tf":2.0},"compiler-debugging.html#expensive-operations-in-logs":{"tf":1.0}},"df":11,"!":{"docs":{},"df":0,"(":{"docs":{},"df":0,"\"":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{"compiletest.html#implementing-the-behavior-change":{"tf":1.0}},"df":1}}}}},"q":{"docs":{},"df":0,"u":{"docs":{},"df":0,"x":{"docs":{"diag.html#error-messages":{"tf":1.0},"diag.html#suggestions":{"tf":1.0}},"df":2}}},"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"m":{"docs":{},"df":0,"p":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{"query.html#adding-a-new-kind-of-query":{"tf":1.0}},"df":1}}}}}},"f":{"docs":{},"df":0,"a":{"docs":{},"df":0,"i":{"docs":{},"df":0,"l":{"docs":{},"df":0,"u":{"docs":{},"df":0,"r":{"docs":{"compiletest.html#implementing-the-behavior-change":{"tf":1.0}},"df":1}}}}}}}}}}},"e":{"docs":{},"df":0,"r":{"docs":{"appendix/stupid-stats.html#the-driver-customisation-apis":{"tf":1.0},"rustdoc.html#other-tricks-up-its-sleeve":{"tf":1.0},"rustdoc.html#from-crate-to-clean":{"tf":1.0}},"df":3},"d":{"docs":{"traits/chalk-overview.html#well-formedness-checks":{"tf":1.7320508075688773},"traits/goals-and-clauses.html#domain-goals":{"tf":1.0},"traits/wf.html#well-formedness-checking":{"tf":1.4142135623730952},"variance.html#constraints":{"tf":1.0}},"df":4}},"u":{"docs":{},"df":0,"l":{"docs":{"query.html#how-the-compiler-executes-a-query":{"tf":1.0},"traits/bibliography.html#bibliography":{"tf":1.4142135623730952},"traits/goals-and-clauses.html#domain-goals":{"tf":1.0}},"df":3,"a":{"docs":{"traits/goals-and-clauses.html#goals-and-clauses-meta-structure":{"tf":1.0},"traits/bibliography.html#bibliography":{"tf":1.0},"traits/lowering-to-logic.html#type-checking-generic-functions-beyond-horn-clauses":{"tf":1.0}},"df":3}}}},"<":{"docs":{},"df":0,"'":{"docs":{},"df":0,"b":{"docs":{"mir/regionck.html#final-example":{"tf":1.0},"mir/regionck.html#what-is-a-universe":{"tf":1.7320508075688773},"mir/regionck.html#another-example":{"tf":1.0}},"df":3},"a":{"docs":{"appendix/glossary.html#appendix-c-glossary":{"tf":1.4142135623730952},"appendix/background.html#what-is-a-free-region-or-a-free-variable-what-about-bound-region":{"tf":1.0},"type-inference.html#a-note-on-terminology":{"tf":1.0},"traits/hrtb.html#higher-ranked-trait-obligations":{"tf":1.7320508075688773},"mir/regionck.html#another-example":{"tf":1.4142135623730952},"mir/regionck.html#final-example":{"tf":1.4142135623730952},"mir/regionck.html#subtyping-and-skolemization":{"tf":1.0},"mir/regionck.html#skolemization-and-universes":{"tf":1.0},"traits/hrtb.html#higher-ranked-trait-bounds":{"tf":1.0},"traits/hrtb.html#basic-matching-and-skolemization-leaks":{"tf":1.7320508075688773}},"df":10},"c":{"docs":{"mir/regionck.html#what-is-a-universe":{"tf":1.0}},"df":1,"x":{"docs":{"query.html#how-the-compiler-executes-a-query":{"tf":1.0}},"df":1}}},"t":{"docs":{"traits/canonicalization.html#processing-the-canonicalized-query-result":{"tf":1.0},"traits/canonicalization.html#canonicalizing-the-query-result":{"tf":1.0}},"df":2,",":{"docs":{},"df":0,"l":{"docs":{},"df":0,",":{"docs":{},"df":0,"t":{"docs":{"traits/canonicalization.html#canonicalizing-the-query-result":{"tf":1.0},"traits/canonicalization.html#canonicalizing-the-query":{"tf":1.0},"traits/canonicalization.html#executing-the-query":{"tf":1.0},"traits/canonicalization.html#processing-the-canonicalized-query-result":{"tf":1.0}},"df":4}}}}}},"c":{"docs":{"mir/passes.html#stealing":{"tf":2.0},"tests/adding.html#other-header-commands":{"tf":1.0},"type-inference.html#enforcing-equality--subtyping":{"tf":1.4142135623730952},"compiler-debugging.html#getting-logging-output":{"tf":1.0},"mir/regionck.html#another-example":{"tf":1.0},"traits/canonical-queries.html#examples":{"tf":1.0},"tests/running.html#running-tests":{"tf":1.0},"appendix/glossary.html#appendix-c-glossary":{"tf":1.0},"type-inference.html#subtyping-obligations":{"tf":1.0},"mir/regionck.html#skolemization-and-outlives-constraints":{"tf":1.0}},"df":10},"g":{"docs":{"compiler-debugging.html#debugging-the-compiler":{"tf":1.0}},"df":1,"e":{"docs":{},"df":0,"t":{"docs":{"conventions.html#use-todo-comments-for-things-you-dont-want-to-forget":{"tf":1.4142135623730952}},"df":1}},"o":{"docs":{},"df":0,"t":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{"variance.html#variance-of-type-and-lifetime-parameters":{"tf":1.0}},"df":1}}}}}},"t":{"docs":{},"df":0,"h":{"docs":{"appendix/stupid-stats.html#overview-of-the-compilation-process":{"tf":1.0},"tests/intro.html#compiletest-test-suites":{"tf":1.0},"mir/visitor.html#traversal":{"tf":1.0},"type-inference.html#enforcing-equality--subtyping":{"tf":1.0},"high-level-overview.html#the-main-stages-of-compilation":{"tf":1.4142135623730952},"tests/adding.html#guide-to-the-ui-tests":{"tf":1.0},"query.html#adding-a-new-kind-of-query":{"tf":1.0},"conventions.html#how-to-structure-your-pr":{"tf":1.0},"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.0},"traits/canonical-queries.html#examples":{"tf":1.0}},"df":10}},"k":{"docs":{"appendix/stupid-stats.html#appendix-a-a-tutorial-on-creating-a-drop-in-replacement-for-rustc":{"tf":1.0}},"df":1},"w":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"d":{"docs":{"tests/adding.html#normalization":{"tf":1.0}},"df":1}}}}}},"a":{"docs":{},"df":0,"l":{"docs":{},"df":0,"s":{"docs":{"traits/canonical-queries.html#a-trait-query-in-rustc":{"tf":1.4142135623730952},"compiletest.html#adding-a-new-header-command":{"tf":1.0},"how-to-build-and-run.html#create-a-configtoml":{"tf":1.0},"incremental-compilation.html#the-query-dag":{"tf":1.0},"mir/regionck.html#what-is-a-universe":{"tf":1.0}},"df":5},"l":{"docs":{"diag.html#suggestions":{"tf":1.0},"traits/associated-types.html#integration-with-unification":{"tf":1.0},"type-inference.html#trying-equality":{"tf":1.0}},"df":3}},"v":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{"mir/borrowck.html#mir-borrow-check":{"tf":1.0}},"df":1,"i":{"docs":{},"df":0,"t":{"docs":{"compiler-debugging.html#formatting-graphviz-output-dot-files":{"tf":1.0}},"df":1}}}}},"m":{"docs":{},"df":0,"i":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{"traits/associated-types.html#associated-type-projection-and-normalization":{"tf":1.0},"traits/specialization.html#specialization":{"tf":1.0}},"df":2,"a":{"docs":{},"df":0,"r":{"docs":{"type-inference.html#inference-variables":{"tf":1.0},"appendix/background.html#what-is-a-control-flow-graph":{"tf":1.0},"mir/index.html#key-mir-vocabulary":{"tf":1.0},"appendix/background.html#what-is-a-free-region-or-a-free-variable-what-about-bound-region":{"tf":1.0}},"df":4}}}}}},"r":{"docs":{"traits/associated-types.html#projection-equality":{"tf":1.0},"traits/lowering-to-logic.html#rust-traits-and-logic":{"tf":1.0},"traits/chalk-overview.html#an-overview-of-chalk":{"tf":1.0},"traits/lowering-to-logic.html#type-checking-normal-functions":{"tf":1.4142135623730952},"mir/regionck.html#back-to-our-example":{"tf":1.0},"traits/associated-types.html#associated-type-projection-and-normalization":{"tf":1.0},"mir/borrowck.html#mir-borrow-check":{"tf":1.0}},"df":7},"i":{"docs":{},"df":0,"l":{"docs":{"compiletest.html#implementing-the-behavior-change":{"tf":1.0},"traits/associated-types.html#integration-with-unification":{"tf":1.0},"tests/intro.html#compiletest-test-suites":{"tf":2.23606797749979},"traits/hrtb.html#basic-matching-and-skolemization-leaks":{"tf":1.0},"compiletest.html#introduction":{"tf":1.7320508075688773},"tests/running.html#running-tests":{"tf":1.0},"traits/lowering-to-logic.html#rust-traits-and-logic":{"tf":1.0},"tests/adding.html#editing-and-updating-the-reference-files":{"tf":1.0},"tests/adding.html#adding-new-tests":{"tf":1.0},"type-inference.html#enforcing-equality--subtyping":{"tf":1.0},"tests/running.html#running-a-subset-of-the-test-suites":{"tf":1.0},"tests/adding.html#what-kind-of-test-should-i-add":{"tf":1.4142135623730952},"tests/adding.html#revisions":{"tf":1.4142135623730952},"tests/adding.html#guide-to-the-ui-tests":{"tf":1.0},"miri.html#miri":{"tf":1.4142135623730952},"compiler-debugging.html#debugging-llvm":{"tf":1.0},"mir/passes.html#stealing":{"tf":1.0},"tests/adding.html#other-header-commands":{"tf":1.4142135623730952},"incrcomp-debugging.html#testing-the-dependency-graph":{"tf":1.0}},"df":19,",":{"docs":{},"df":0,"r":{"docs":{},"df":0,"u":{"docs":{},"df":0,"n":{"docs":{"tests/running.html#running-a-subset-of-the-test-suites":{"tf":1.0}},"df":1}}}},"/":{"docs":{},"df":0,"d":{"docs":{},"df":0,"e":{"docs":{},"df":0,"p":{"docs":{"incrcomp-debugging.html#testing-the-dependency-graph":{"tf":1.0}},"df":1}}}},"u":{"docs":{},"df":0,"r":{"docs":{"tests/adding.html#guide-to-the-ui-tests":{"tf":1.0},"type-inference.html#trying-equality":{"tf":1.0},"macro-expansion.html#the-macro-parser":{"tf":1.0},"compiletest.html#introduction":{"tf":1.7320508075688773},"variance.html#constraints":{"tf":1.0},"compiler-debugging.html#debugging-llvm":{"tf":1.0},"traits/hrtb.html#basic-matching-and-skolemization-leaks":{"tf":1.4142135623730952},"compiletest.html#adding-a-new-header-command":{"tf":2.449489742783178},"compiletest.html#implementing-the-behavior-change":{"tf":2.8284271247461905}},"df":9,"e":{"docs":{},"df":0,"_":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{},"df":0,"u":{"docs":{"compiletest.html#adding-a-new-header-command":{"tf":1.4142135623730952}},"df":1}}}}}}}}}},"r":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{"variance.html#variance-of-type-and-lifetime-parameters":{"tf":1.0},"mir/index.html#mir-data-types":{"tf":1.0},"mir/regionck.html#mir-based-region-checking-nll":{"tf":1.0},"traits/canonical-queries.html#canonical-queries":{"tf":1.0},"appendix/stupid-stats.html#compilercalls":{"tf":1.0},"rustc-driver.html#a-note-on-lifetimes":{"tf":1.0},"type-inference.html#lexical-region-resolution":{"tf":1.0}},"df":7}}}},"t":{"docs":{"const-eval.html#constant-evaluation":{"tf":1.0},"appendix/glossary.html#appendix-c-glossary":{"tf":2.23606797749979},"miri.html#datastructures":{"tf":1.0}},"df":3,"a":{"docs":{},"df":0,"l":{"docs":{"diag.html#error-messages":{"tf":1.0},"macro-expansion.html#the-macro-parser":{"tf":1.0}},"df":2}},"l":{"docs":{},"df":0,"t":{"docs":{},"df":0,"o":{"docs":{"appendix/glossary.html#appendix-c-glossary":{"tf":1.0}},"df":1}}}},"s":{"docs":{},"df":0,"h":{"docs":{},"df":0,"i":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{"query.html#cycles-between-queries":{"tf":1.0},"traits/lowering-to-logic.html#lowering-to-logic":{"tf":1.0},"type-inference.html#lexical-region-resolution":{"tf":1.0}},"df":3}}}},"t":{"docs":{"how-to-build-and-run.html#running-xpy-and-building-a-stage1-compiler":{"tf":1.0},"ty.html#import-conventions":{"tf":1.0}},"df":2,"e":{"docs":{},"df":0,"r":{"docs":{"tests/running.html#running-an-individual-test":{"tf":1.0}},"df":1}}}},"c":{"docs":{},"df":0,"t":{"docs":{"type-inference.html#region-constraints":{"tf":1.0},"macro-expansion.html#macro-expansion":{"tf":1.0},"traits/canonical-queries.html#the-traditional-interactive-prolog-query":{"tf":1.0},"mir/regionck.html#another-example":{"tf":1.0},"ty.html#allocating-and-working-with-types":{"tf":1.4142135623730952},"traits/canonical-queries.html#examples":{"tf":1.0},"mir/regionck.html#skolemization-and-outlives-constraints":{"tf":1.0},"hir.html#the-hir-map":{"tf":1.0},"mir/regionck.html#what-is-a-universe":{"tf":1.0},"conventions.html#copyright-notice":{"tf":1.0},"variance.html#variance-and-object-types":{"tf":1.0},"traits/resolution.html#selection":{"tf":1.0},"mir/index.html#key-mir-vocabulary":{"tf":1.4142135623730952},"incremental-compilation.html#the-try-mark-green-algorithm":{"tf":1.0}},"df":14,"o":{"docs":{},"df":0,"r":{"docs":{"query.html#cycles-between-queries":{"tf":1.0},"method-lookup.html#method-lookup":{"tf":1.0}},"df":2}}}}},"u":{"docs":{},"df":0,"r":{"docs":{},"df":0,"t":{"docs":{},"df":0,"h":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"mir/regionck.html#another-example":{"tf":1.4142135623730952},"miri.html#interpretation":{"tf":1.0},"type-inference.html#extracting-region-constraints":{"tf":1.0},"variance.html#trait-variance-and-vtable-resolution":{"tf":1.0},"mir/index.html#key-mir-vocabulary":{"tf":1.0},"traits/lowering-to-logic.html#rust-traits-and-logic":{"tf":1.0},"miri.html#miri":{"tf":1.0},"tests/intro.html#further-reading":{"tf":1.4142135623730952},"query.html#queries-demand-driven-compilation":{"tf":1.7320508075688773},"appendix/glossary.html#appendix-c-glossary":{"tf":1.0}},"df":10,"m":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{"method-lookup.html#candidate-assembly":{"tf":1.0}},"df":1}}}}}}}},"l":{"docs":{},"df":0,"l":{"docs":{"tests/adding.html#what-kind-of-test-should-i-add":{"tf":1.0},"how-to-build-and-run.html#create-a-configtoml":{"tf":1.0},"rustdoc.html#from-crate-to-clean":{"tf":1.0},"variance.html#the-algorithm":{"tf":1.0},"tests/running.html#running-tests":{"tf":1.0},"compiler-debugging.html#getting-a-backtrace":{"tf":1.0},"name-resolution.html#scopes-and-ribs":{"tf":1.0},"traits/associated-types.html#equality-and-associated-types":{"tf":1.0},"traits/lowering-to-logic.html#rust-traits-and-logic":{"tf":1.0},"mir/regionck.html#mir-based-region-checking-nll":{"tf":1.0},"macro-expansion.html#the-macro-parser":{"tf":1.0},"tests/intro.html#testing-infrastructure":{"tf":1.0},"traits/lowering-module.html#unit-tests":{"tf":1.0},"mir/regionck.html#what-is-a-universe":{"tf":1.0},"how-to-build-and-run.html#running-xpy-and-building-a-stage1-compiler":{"tf":1.4142135623730952},"compiler-debugging.html#getting-logging-output":{"tf":1.0},"diag.html#declaring-a-lint":{"tf":1.0},"rustdoc.html#dotting-is-and-crossing-ts":{"tf":1.7320508075688773},"traits/resolution.html#selection-during-translation":{"tf":1.4142135623730952},"tests/running.html#running-a-subset-of-the-test-suites":{"tf":1.0},"traits/chalk-overview.html#testing":{"tf":1.0},"rustdoc.html#other-tricks-up-its-sleeve":{"tf":1.0},"incrcomp-debugging.html#dumping-the-graph":{"tf":1.0}},"df":23,"i":{"docs":{"traits/caching.html#caching-and-subtle-considerations-therewith":{"tf":1.0},"traits/canonicalization.html#executing-the-query":{"tf":1.0},"mir/index.html#introduction-to-mir":{"tf":1.0},"compiletest.html#header-commands":{"tf":1.0},"query.html#queries-demand-driven-compilation":{"tf":1.0},"traits/associated-types.html#associated-type-projection-and-normalization":{"tf":1.0}},"df":6},"d":{"docs":{},"df":0,"e":{"docs":{},"df":0,"p":{"docs":{"tests/adding.html#what-kind-of-test-should-i-add":{"tf":1.0},"tests/intro.html#compiletest-test-suites":{"tf":1.0}},"df":2}}}},"f":{"docs":{},"df":0,"i":{"docs":{},"df":0,"l":{"docs":{"type-inference.html#enforcing-equality--subtyping":{"tf":1.4142135623730952},"traits/resolution.html#overview":{"tf":1.7320508075688773}},"df":2}}}},"t":{"docs":{},"df":0,"u":{"docs":{},"df":0,"r":{"docs":{"appendix/stupid-stats.html#compilercalls":{"tf":1.0},"miri.html#miri":{"tf":1.0},"appendix/stupid-stats.html#compilercontroller":{"tf":1.0},"appendix/stupid-stats.html#appendix-a-a-tutorial-on-creating-a-drop-in-replacement-for-rustc":{"tf":1.0},"miri.html#allocations":{"tf":1.0},"query.html#cycles-between-queries":{"tf":1.0},"traits/resolution.html#candidate-assembly":{"tf":1.0},"traits/associated-types.html#associated-type-projection-and-normalization":{"tf":1.0},"mir/regionck.html#skolemization-and-outlives-constraints":{"tf":1.0}},"df":9,"e":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"m":{"docs":{},"df":0,"p":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{},"df":0,"i":{"docs":{},"df":0,"b":{"docs":{},"df":0,"i":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{},"df":0,"y":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{"diag.html#edition-gated-lints":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}}}}}},"b":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{"query.html#how-the-compiler-executes-a-query":{"tf":1.4142135623730952}},"df":1,"<":{"docs":{},"df":0,"'":{"docs":{},"df":0,"c":{"docs":{},"df":0,"x":{"docs":{"query.html#how-the-compiler-executes-a-query":{"tf":1.0}},"df":1}},"t":{"docs":{},"df":0,"c":{"docs":{},"df":0,"x":{"docs":{"query.html#how-the-compiler-executes-a-query":{"tf":1.0}},"df":1}}}}}}}},"n":{"docs":{},"df":0,"c":{"docs":{"compiler-debugging.html#debugging-llvm":{"tf":1.0}},"df":1,"=":{"docs":{},"df":0,"'":{"docs":{},"df":0,"_":{"docs":{},"df":0,"z":{"docs":{},"df":0,"n":{"docs":{},"df":0,"1":{"docs":{},"df":0,"1":{"docs":{},"df":0,"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"l":{"docs":{},"df":0,"l":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{},"df":0,"i":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"s":{"docs":{},"df":0,"3":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"r":{"docs":{},"df":0,"2":{"docs":{},"df":0,"1":{"docs":{},"df":0,"_":{"docs":{},"df":0,"$":{"docs":{},"df":0,"l":{"docs":{},"df":0,"t":{"docs":{},"df":0,"$":{"docs":{},"df":0,"i":{"docs":{},"df":0,"m":{"docs":{},"df":0,"p":{"docs":{},"df":0,"l":{"docs":{},"df":0,"$":{"docs":{},"df":0,"u":{"docs":{},"df":0,"2":{"docs":{},"df":0,"0":{"docs":{},"df":0,"$":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"r":{"docs":{},"df":0,"$":{"docs":{},"df":0,"g":{"docs":{},"df":0,"t":{"docs":{},"df":0,"$":{"docs":{},"df":0,"7":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"p":{"docs":{},"df":0,"l":{"docs":{},"df":0,"a":{"docs":{},"df":0,"c":{"docs":{},"df":0,"e":{"docs":{},"df":0,"1":{"docs":{},"df":0,"7":{"docs":{},"df":0,"h":{"docs":{},"df":0,"b":{"docs":{},"df":0,"e":{"docs":{},"df":0,"1":{"docs":{},"df":0,"0":{"docs":{},"df":0,"e":{"docs":{},"df":0,"a":{"docs":{},"df":0,"2":{"docs":{},"df":0,"e":{"docs":{},"df":0,"7":{"docs":{},"df":0,"c":{"docs":{},"df":0,"8":{"docs":{},"df":0,"0":{"docs":{},"df":0,"9":{"docs":{},"df":0,"b":{"docs":{},"df":0,"0":{"docs":{},"df":0,"b":{"docs":{"compiler-debugging.html#debugging-llvm":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"df":0,"i":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{"variance.html#variance-and-object-types":{"tf":1.4142135623730952},"high-level-overview.html#the-main-stages-of-compilation":{"tf":1.0},"diag.html#lint-groups":{"tf":1.0},"type-checking.html#type-collection":{"tf":2.449489742783178},"variance.html#the-algorithm":{"tf":1.0},"traits/associated-types.html#skolemized-associated-types":{"tf":1.0},"diag.html#edition-gated-lints":{"tf":1.0},"mir/borrowck.html#major-phases-of-the-borrow-checker":{"tf":1.0},"the-parser.html#the-parser":{"tf":1.0},"compiletest.html#implementing-the-behavior-change":{"tf":1.0},"traits/resolution.html#major-concepts":{"tf":1.7320508075688773},"traits/lowering-rules.html#trait-header":{"tf":1.0},"miri.html#miri":{"tf":1.4142135623730952},"rustc-driver.html#the-rustc-driver":{"tf":1.4142135623730952},"traits/lowering-to-logic.html#type-checking-normal-functions":{"tf":2.23606797749979},"miri.html#interpretation":{"tf":1.4142135623730952},"traits/resolution.html#selection":{"tf":1.0},"rustdoc.html#other-tricks-up-its-sleeve":{"tf":1.0},"rustdoc.html#from-crate-to-clean":{"tf":1.0},"traits/lowering-rules.html#lowering-function-and-constant-declarations":{"tf":1.7320508075688773},"traits/canonical-queries.html#examples":{"tf":1.0},"query.html#adding-a-new-kind-of-query":{"tf":1.7320508075688773},"const-eval.html#constant-evaluation":{"tf":2.0},"mir/regionck.html#subtyping-and-skolemization":{"tf":1.0},"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":2.8284271247461905},"traits/hrtb.html#basic-matching-and-skolemization-leaks":{"tf":1.0},"mir/passes.html#seeing-how-the-mir-changes-as-the-compiler-executes":{"tf":2.23606797749979},"mir/visitor.html#traversal":{"tf":1.0},"mir/regionck.html#what-is-a-universe":{"tf":1.0},"variance.html#trait-variance-and-vtable-resolution":{"tf":1.4142135623730952},"mir/passes.html#mir-passes":{"tf":1.0},"type-checking.html#type-checking":{"tf":1.0},"variance.html#variance-of-type-and-lifetime-parameters":{"tf":1.0},"hir.html#identifiers-in-the-hir":{"tf":1.0},"type-inference.html#a-note-on-terminology":{"tf":1.0},"compiler-debugging.html#getting-logging-output":{"tf":1.4142135623730952},"traits/lowering-to-logic.html#type-checking-generic-functions-beyond-horn-clauses":{"tf":2.449489742783178},"mir/index.html#mir-data-types":{"tf":1.0},"type-inference.html#creating-an-inference-context":{"tf":1.0},"appendix/stupid-stats.html#overview-of-the-compilation-process":{"tf":1.4142135623730952},"name-resolution.html#scopes-and-ribs":{"tf":2.0},"param_env.html#parameter-environment":{"tf":1.7320508075688773},"rustdoc.html#cheat-sheet":{"tf":1.4142135623730952},"query.html#how-the-compiler-executes-a-query":{"tf":2.6457513110645909},"traits/goals-and-clauses.html#domain-goals":{"tf":1.7320508075688773},"rustc-driver.html#a-note-on-lifetimes":{"tf":1.0},"mir/index.html#key-mir-vocabulary":{"tf":1.7320508075688773},"how-to-build-and-run.html#running-xpy-and-building-a-stage1-compiler":{"tf":1.0},"mir/regionck.html#representing-the-values-of-a-region-variable":{"tf":1.0},"hir.html#out-of-band-storage-and-the--crate--type":{"tf":2.23606797749979},"high-level-overview.html#crate-structure":{"tf":1.0},"mir/regionck.html#skolemization-and-universes":{"tf":1.7320508075688773},"rustdoc.html#from-clean-to-crate":{"tf":2.0},"variance.html#variance-and-associated-types":{"tf":1.0},"traits/lowering-rules.html#function-and-constant-values":{"tf":1.7320508075688773},"traits/chalk-overview.html#testing":{"tf":1.0},"mir/regionck.html#mir-based-region-checking-nll":{"tf":2.0},"incrcomp-debugging.html#dumping-the-graph":{"tf":1.0},"miri.html#allocations":{"tf":1.0},"compiler-debugging.html#debugging-llvm":{"tf":1.0},"appendix/glossary.html#appendix-c-glossary":{"tf":2.0}},"df":61,"s":{"docs":{},"df":0,"/":{"docs":{},"df":0,"m":{"docs":{},"df":0,"e":{"docs":{},"df":0,"t":{"docs":{},"df":0,"h":{"docs":{},"df":0,"o":{"docs":{},"df":0,"d":{"docs":{"param_env.html#parameter-environment":{"tf":1.0}},"df":1}}}}}}}},"/":{"docs":{},"df":0,"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{"traits/lowering-rules.html#lowering-function-and-constant-declarations":{"tf":1.0}},"df":1}}}},"l":{"docs":{},"df":0,"o":{"docs":{},"df":0,"s":{"docs":{},"df":0,"u":{"docs":{},"df":0,"r":{"docs":{"hir.html#hir-bodies":{"tf":1.0}},"df":1}}}}}},"i":{"docs":{},"df":0,"m":{"docs":{},"df":0,"p":{"docs":{},"df":0,"l":{"docs":{"variance.html#variance-of-type-and-lifetime-parameters":{"tf":1.0}},"df":1}}}}},"'":{"docs":{"const-eval.html#constant-evaluation":{"tf":1.0}},"df":1}}}}},"s":{"docs":{},"df":0,"=":{"docs":{},"df":0,"e":{"docs":{},"df":0,"x":{"docs":{},"df":0,"a":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{},"df":0,"_":{"docs":{},"df":0,"f":{"docs":{},"df":0,"u":{"docs":{},"df":0,"n":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{},"df":0,"i":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"_":{"docs":{},"df":0,"n":{"docs":{},"df":0,"a":{"docs":{},"df":0,"m":{"docs":{"compiler-debugging.html#debugging-llvm":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}},"_":{"docs":{},"df":0,"z":{"docs":{},"df":0,"n":{"docs":{},"df":0,"1":{"docs":{},"df":0,"1":{"docs":{},"df":0,"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"l":{"docs":{},"df":0,"l":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{},"df":0,"i":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"s":{"docs":{},"df":0,"3":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"r":{"docs":{},"df":0,"2":{"docs":{},"df":0,"1":{"docs":{},"df":0,"_":{"docs":{},"df":0,"$":{"docs":{},"df":0,"l":{"docs":{},"df":0,"t":{"docs":{},"df":0,"$":{"docs":{},"df":0,"i":{"docs":{},"df":0,"m":{"docs":{},"df":0,"p":{"docs":{},"df":0,"l":{"docs":{},"df":0,"$":{"docs":{},"df":0,"u":{"docs":{},"df":0,"2":{"docs":{},"df":0,"0":{"docs":{},"df":0,"$":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"r":{"docs":{},"df":0,"$":{"docs":{},"df":0,"g":{"docs":{},"df":0,"t":{"docs":{"compiler-debugging.html#debugging-llvm":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"df":0,"w":{"docs":{"traits/goals-and-clauses.html#domain-goals":{"tf":1.0},"traits/lowering-rules.html#trait-header":{"tf":1.0},"rustdoc.html#from-crate-to-clean":{"tf":1.0},"compiler-debugging.html#debugging-the-compiler":{"tf":1.0},"ty.html#beyond-types-other-kinds-of-arena-allocated-data-structures":{"tf":1.0},"traits/hrtb.html#basic-matching-and-skolemization-leaks":{"tf":1.0},"appendix/glossary.html#appendix-c-glossary":{"tf":1.4142135623730952},"traits/index.html#trait-solving-new-style":{"tf":1.0},"compiler-debugging.html#logging-etiquette":{"tf":1.0},"type-checking.html#type-checking":{"tf":1.0},"diag.html#suggestions":{"tf":1.0},"traits/goals-and-clauses.html#goals-and-clauses":{"tf":1.0},"how-to-build-and-run.html#running-xpy-and-building-a-stage1-compiler":{"tf":1.0},"tests/intro.html#other-tests":{"tf":1.0},"traits/lowering-to-logic.html#rust-traits-and-logic":{"tf":1.0},"conventions.html#coding-for-correctness":{"tf":1.0},"mir/index.html#mir-data-types":{"tf":1.0},"rustdoc.html#hot-potato":{"tf":1.0},"how-to-build-and-run.html#other-xpy-commands":{"tf":1.0}},"df":19,"e":{"docs":{},"df":0,"r":{"docs":{"type-inference.html#type-inference":{"tf":1.0}},"df":1}}},"a":{"docs":{},"df":0,"t":{"docs":{},"df":0,"u":{"docs":{},"df":0,"r":{"docs":{"rustdoc.html#dotting-is-and-crossing-ts":{"tf":1.0},"tests/adding.html#naming-your-test":{"tf":1.0},"miri.html#miri":{"tf":1.0},"traits/lowering-module.html#unit-tests":{"tf":1.0},"how-to-build-and-run.html#running-xpy-and-building-a-stage1-compiler":{"tf":1.0},"tests/adding.html#other-header-commands":{"tf":2.0},"rustdoc.html#from-clean-to-crate":{"tf":1.0},"compiler-debugging.html#formatting-graphviz-output-dot-files":{"tf":1.0}},"df":8,"e":{"docs":{},"df":0,"(":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"m":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{},"df":0,"i":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"_":{"docs":{},"df":0,"t":{"docs":{},"df":0,"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{"compiletest.html#adding-a-new-header-command":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}},"n":{"docs":{},"df":0,"l":{"docs":{"mir/borrowck.html#major-phases-of-the-borrow-checker":{"tf":1.0}},"df":1}},"r":{"docs":{},"df":0,"u":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"c":{"docs":{},"df":0,"_":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{},"df":0,"t":{"docs":{},"df":0,"r":{"docs":{"traits/lowering-module.html#unit-tests":{"tf":1.0}},"df":1}}}}}}}}}},"x":{"docs":{"tests/adding.html#other-header-commands":{"tf":1.0}},"df":1}}}}}}},"e":{"docs":{},"df":0,"l":{"docs":{"mir/index.html#key-mir-vocabulary":{"tf":1.0}},"df":1},"d":{"docs":{},"df":0,"b":{"docs":{},"df":0,"a":{"docs":{},"df":0,"c":{"docs":{},"df":0,"k":{"docs":{"traits/resolution.html#selection":{"tf":1.0}},"df":1}}}}}}},"m":{"docs":{},"df":0,"t":{"docs":{"compiler-debugging.html#expensive-operations-in-logs":{"tf":1.4142135623730952}},"df":1,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"u":{"docs":{},"df":0,"l":{"docs":{},"df":0,"t":{"docs":{"compiler-debugging.html#expensive-operations-in-logs":{"tf":1.0}},"df":1}}}}}},"d":{"docs":{},"df":0,"e":{"docs":{},"df":0,"b":{"docs":{},"df":0,"u":{"docs":{},"df":0,"g":{"docs":{"compiler-debugging.html#expensive-operations-in-logs":{"tf":1.4142135623730952}},"df":1,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"f":{"docs":{},"df":0,"m":{"docs":{},"df":0,"t":{"docs":{},"df":0,"(":{"docs":{},"df":0,"&":{"docs":{},"df":0,"v":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{},"df":0,"u":{"docs":{"compiler-debugging.html#expensive-operations-in-logs":{"tf":1.0}},"df":1}}}}}}}}}}}}}}},"i":{"docs":{},"df":0,"s":{"docs":{},"df":0,"p":{"docs":{},"df":0,"l":{"docs":{},"df":0,"a":{"docs":{},"df":0,"y":{"docs":{"rustdoc.html#cheat-sheet":{"tf":1.0},"rustdoc.html#from-clean-to-crate":{"tf":1.4142135623730952}},"df":2}}}}}}},"f":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"m":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{},"df":0,"t":{"docs":{"compiler-debugging.html#expensive-operations-in-logs":{"tf":1.0}},"df":1}}}}}}}}},"(":{"docs":{},"df":0,"&":{"docs":{},"df":0,"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"l":{"docs":{},"df":0,"f":{"docs":{"compiler-debugging.html#expensive-operations-in-logs":{"tf":1.0}},"df":1}}}}}}}},"r":{"docs":{},"df":0,"i":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.0},"appendix/code-index.html#appendix-d-code-index":{"tf":1.0},"hir.html#the-hir":{"tf":1.0}},"df":3}}}}}},"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{"appendix/glossary.html#appendix-c-glossary":{"tf":1.0},"high-level-overview.html#the-main-stages-of-compilation":{"tf":1.0}},"df":2}},"m":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"v":{"docs":{"traits/lowering-rules.html#trait-header":{"tf":1.4142135623730952},"traits/implied-bounds.html#implied-bounds":{"tf":1.0}},"df":2,"(":{"docs":{},"df":0,"<":{"docs":{},"df":0,"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"l":{"docs":{},"df":0,"f":{"docs":{"traits/lowering-rules.html#associated-type-declarations":{"tf":1.0},"traits/goals-and-clauses.html#domain-goals":{"tf":1.0}},"df":2}}}}},"(":{"docs":{},"df":0,"t":{"docs":{},"df":0,"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{},"df":0,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"a":{"docs":{},"df":0,"s":{"docs":{},"df":0,"s":{"docs":{},"df":0,"o":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{},"df":0,"y":{"docs":{},"df":0,"p":{"docs":{},"df":0,"e":{"docs":{},"df":0,")":{"docs":{},"df":0,"<":{"docs":{},"df":0,"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"l":{"docs":{},"df":0,"f":{"docs":{"traits/lowering-rules.html#associated-type-declarations":{"tf":1.4142135623730952}},"df":1}}}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{"traits/lowering-rules.html#trait-header":{"tf":1.4142135623730952},"traits/goals-and-clauses.html#domain-goals":{"tf":1.4142135623730952}},"df":2,"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"f":{"docs":{"traits/lowering-rules.html#transforming-the-lowered-where-clauses":{"tf":1.0},"traits/goals-and-clauses.html#domain-goals":{"tf":1.4142135623730952}},"df":2}}}}}}}},"x":{"docs":{"traits/goals-and-clauses.html#domain-goals":{"tf":1.0}},"df":1},"p":{"docs":{},"df":0,"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"j":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{"traits/lowering-rules.html#transforming-the-lowered-where-clauses":{"tf":1.0},"traits/goals-and-clauses.html#domain-goals":{"tf":1.4142135623730952}},"df":2}}}}}}},"w":{"docs":{},"df":0,"c":{"docs":{"traits/lowering-rules.html#transforming-the-lowered-where-clauses":{"tf":1.0},"traits/lowering-rules.html#trait-header":{"tf":1.0}},"df":2,"1":{"docs":{"traits/lowering-rules.html#associated-type-declarations":{"tf":1.0}},"df":1}}},"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"l":{"docs":{},"df":0,"f":{"docs":{"traits/lowering-rules.html#associated-type-declarations":{"tf":1.4142135623730952},"traits/goals-and-clauses.html#domain-goals":{"tf":1.0},"traits/lowering-rules.html#trait-header":{"tf":1.4142135623730952}},"df":3}}}}}}}}}},"a":{"docs":{},"df":0,"m":{"docs":{},"df":0,"e":{"docs":{"appendix/stupid-stats.html#appendix-a-a-tutorial-on-creating-a-drop-in-replacement-for-rustc":{"tf":1.0},"miri.html#interpretation":{"tf":2.6457513110645909}},"df":2,"w":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"k":{"docs":{"compiletest.html#header-commands":{"tf":1.0},"tests/adding.html#ignoring-tests":{"tf":1.0},"compiletest.html#introduction":{"tf":1.4142135623730952},"compiletest.html#adding-a-new-test-file":{"tf":1.0},"tests/adding.html#naming-your-test":{"tf":1.0},"compiletest.html#adding-a-new-header-command":{"tf":1.0},"tests/adding.html#editing-and-updating-the-reference-files":{"tf":1.0},"tests/running.html#running-tests":{"tf":1.0},"tests/adding.html#guide-to-the-ui-tests":{"tf":1.0},"compiletest.html#implementing-the-behavior-change":{"tf":1.0},"tests/adding.html#what-kind-of-test-should-i-add":{"tf":1.0},"tests/intro.html#the-compiler-testing-framework":{"tf":1.7320508075688773},"tests/adding.html#other-header-commands":{"tf":1.0},"tests/adding.html#normalization":{"tf":1.0},"tests/adding.html#error-annotations":{"tf":1.0},"tests/adding.html#comment-explaining-what-the-test-is-about":{"tf":1.0},"tests/adding.html#header-commands-configuring-rustc":{"tf":1.0},"tests/adding.html#adding-new-tests":{"tf":1.0},"tests/adding.html#tests-that-do-not-result-in-compile-errors":{"tf":1.0},"tests/adding.html#revisions":{"tf":1.0},"compiletest.html#compiletest":{"tf":1.0},"tests/running.html#running-an-individual-test":{"tf":1.0},"tests/running.html#running-a-subset-of-the-test-suites":{"tf":1.0}},"df":23}}}}}}},"e":{"docs":{},"df":0,"e":{"docs":{"traits/canonicalization.html#canonicalizing-the-query":{"tf":1.0},"type-inference.html#a-note-on-terminology":{"tf":1.0},"appendix/background.html#what-is-a-free-region-or-a-free-variable-what-about-bound-region":{"tf":3.3166247903554},"traits/canonicalization.html#canonicalizing-the-query-result":{"tf":1.4142135623730952},"mir/regionck.html#what-is-a-universe":{"tf":1.0},"appendix/glossary.html#appendix-c-glossary":{"tf":1.4142135623730952},"mir/regionck.html#mir-based-region-checking-nll":{"tf":1.4142135623730952}},"df":7,"b":{"docs":{},"df":0,"s":{"docs":{},"df":0,"d":{"docs":{"tests/adding.html#ignoring-tests":{"tf":1.0}},"df":1}}},"d":{"docs":{"ty.html#the-tcx-and-how-it-uses-lifetimes":{"tf":1.4142135623730952}},"df":1}},"q":{"docs":{},"df":0,"u":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{"incrcomp-debugging.html#dumping-the-graph":{"tf":1.0},"about-this-guide.html#about-this-guide":{"tf":1.0}},"df":2}}}}},"s":{"docs":{},"df":0,"h":{"docs":{"traits/canonicalization.html#processing-the-canonicalized-query-result":{"tf":1.4142135623730952},"mir/borrowck.html#major-phases-of-the-borrow-checker":{"tf":1.0},"traits/canonicalization.html#executing-the-query":{"tf":2.0},"mir/regionck.html#mir-based-region-checking-nll":{"tf":1.0},"traits/hrtb.html#basic-matching-and-skolemization-leaks":{"tf":1.0},"type-inference.html#creating-an-inference-context":{"tf":1.4142135623730952},"traits/canonicalization.html#canonicalizing-the-query-result":{"tf":1.0}},"df":7}}}},"n":{"docs":{"mir/visitor.html#mir-visitor":{"tf":1.0},"compiletest.html#adding-a-new-header-command":{"tf":1.4142135623730952},"tests/adding.html#header-commands-configuring-rustc":{"tf":1.0},"incrcomp-debugging.html#dumping-the-graph":{"tf":1.0},"type-checking.html#type-collection":{"tf":1.0},"traits/lowering-to-logic.html#type-checking-generic-functions-beyond-horn-clauses":{"tf":1.4142135623730952},"mir/regionck.html#skolemization-and-universes":{"tf":1.7320508075688773},"hir.html#out-of-band-storage-and-the--crate--type":{"tf":1.0},"mir/index.html#key-mir-vocabulary":{"tf":1.4142135623730952},"query.html#how-the-compiler-executes-a-query":{"tf":2.0},"traits/lowering-to-logic.html#type-checking-normal-functions":{"tf":1.4142135623730952},"mir/regionck.html#final-example":{"tf":1.4142135623730952},"ty.html#the-tcx-and-how-it-uses-lifetimes":{"tf":1.4142135623730952},"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":3.0},"traits/hrtb.html#higher-ranked-trait-obligations":{"tf":1.4142135623730952},"compiler-debugging.html#getting-a-backtrace-for-errors":{"tf":1.0},"mir/passes.html#seeing-how-the-mir-changes-as-the-compiler-executes":{"tf":1.0},"compiler-debugging.html#expensive-operations-in-logs":{"tf":1.0},"query.html#adding-a-new-kind-of-query":{"tf":1.7320508075688773},"traits/resolution.html#candidate-assembly":{"tf":2.6457513110645909},"appendix/glossary.html#appendix-c-glossary":{"tf":1.0},"variance.html#variance-and-object-types":{"tf":1.0},"variance.html#trait-variance-and-vtable-resolution":{"tf":1.0},"traits/goals-and-clauses.html#domain-goals":{"tf":1.0},"compiletest.html#implementing-the-behavior-change":{"tf":1.0},"mir/regionck.html#what-is-a-universe":{"tf":1.7320508075688773},"name-resolution.html#scopes-and-ribs":{"tf":1.4142135623730952},"traits/hrtb.html#basic-matching-and-skolemization-leaks":{"tf":1.4142135623730952},"rustdoc.html#from-crate-to-clean":{"tf":1.0},"miri.html#interpretation":{"tf":1.0},"mir/regionck.html#extending-the-universal-regions-check":{"tf":1.0},"mir/regionck.html#another-example":{"tf":1.0},"tests/adding.html#normalization":{"tf":2.6457513110645909},"macro-expansion.html#the-macro-parser":{"tf":1.0},"conventions.html#use-todo-comments-for-things-you-dont-want-to-forget":{"tf":1.0},"incremental-compilation.html#the-query-dag":{"tf":1.0},"mir/regionck.html#mir-based-region-checking-nll":{"tf":1.0},"param_env.html#parameter-environment":{"tf":1.0},"diag.html#declaring-a-lint":{"tf":1.4142135623730952},"traits/canonical-queries.html#examples":{"tf":2.0},"traits/resolution.html#major-concepts":{"tf":1.4142135623730952},"traits/lowering-module.html#unit-tests":{"tf":1.0},"tests/adding.html#revisions":{"tf":1.0},"type-inference.html#type-inference":{"tf":1.0},"hir.html#hir-bodies":{"tf":1.0},"traits/resolution.html#confirmation":{"tf":1.0},"traits/associated-types.html#skolemized-associated-types":{"tf":1.0},"incrcomp-debugging.html#testing-the-dependency-graph":{"tf":1.7320508075688773},"ty.html#allocating-and-working-with-types":{"tf":1.0},"variance.html#variance-and-associated-types":{"tf":1.0},"mir/regionck.html#subtyping-and-skolemization":{"tf":1.0}},"df":51,"(":{"docs":{},"df":0,"t":{"docs":{},"df":0,"y":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{},"df":0,"x":{"docs":{},"df":0,"t":{"docs":{},"df":0,"<":{"docs":{},"df":0,"'":{"docs":{},"df":0,"c":{"docs":{},"df":0,"x":{"docs":{"query.html#how-the-compiler-executes-a-query":{"tf":1.0}},"df":1}}}}}}}}}},"&":{"docs":{},"df":0,"'":{"docs":{},"df":0,"a":{"docs":{"appendix/glossary.html#appendix-c-glossary":{"tf":1.0},"mir/regionck.html#final-example":{"tf":1.4142135623730952},"mir/regionck.html#another-example":{"tf":1.4142135623730952},"mir/regionck.html#subtyping-and-skolemization":{"tf":1.0},"appendix/background.html#what-is-a-free-region-or-a-free-variable-what-about-bound-region":{"tf":1.0},"mir/regionck.html#skolemization-and-universes":{"tf":1.0},"type-inference.html#a-note-on-terminology":{"tf":1.0}},"df":7},"b":{"docs":{"mir/regionck.html#what-is-a-universe":{"tf":1.7320508075688773},"mir/regionck.html#another-example":{"tf":1.0},"mir/regionck.html#final-example":{"tf":1.0}},"df":3},"?":{"docs":{},"df":0,"3":{"docs":{"mir/regionck.html#another-example":{"tf":1.0},"mir/regionck.html#final-example":{"tf":1.0}},"df":2}},"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{},"df":0,"i":{"docs":{},"df":0,"c":{"docs":{"mir/regionck.html#subtyping-and-skolemization":{"tf":1.4142135623730952},"mir/regionck.html#back-to-our-example":{"tf":1.0}},"df":2}}}}}},"!":{"docs":{},"df":0,"1":{"docs":{"mir/regionck.html#back-to-our-example":{"tf":1.0},"mir/regionck.html#final-example":{"tf":1.4142135623730952},"mir/regionck.html#another-example":{"tf":1.4142135623730952},"mir/regionck.html#subtyping-and-skolemization":{"tf":1.0}},"df":4}}}},"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"l":{"docs":{},"df":0,"f":{"docs":{"variance.html#trait-variance-and-vtable-resolution":{"tf":1.0}},"df":1}}}}}},"(":{"docs":{},"df":0,"&":{"docs":{},"df":0,"x":{"docs":{"mir/regionck.html#skolemization-and-universes":{"tf":1.0}},"df":1}}},"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{"appendix/stupid-stats.html#appendix-a-a-tutorial-on-creating-a-drop-in-replacement-for-rustc":{"tf":1.0},"incrcomp-debugging.html#dumping-the-graph":{"tf":1.0},"traits/resolution.html#major-concepts":{"tf":1.4142135623730952},"method-lookup.html#candidate-search":{"tf":1.0},"compiler-debugging.html#getting-a-backtrace":{"tf":1.0},"traits/canonicalization.html#canonicalization":{"tf":1.0},"about-this-guide.html#about-this-guide":{"tf":1.0},"traits/resolution.html#selection-during-translation":{"tf":1.0},"rustdoc.html#from-clean-to-crate":{"tf":1.4142135623730952},"traits/resolution.html#candidate-assembly":{"tf":1.0},"mir/regionck.html#mir-based-region-checking-nll":{"tf":1.0},"traits/index.html#trait-solving-new-style":{"tf":1.0},"method-lookup.html#candidate-assembly":{"tf":1.0},"compiler-debugging.html#expensive-operations-in-logs":{"tf":1.0},"traits/hrtb.html#basic-matching-and-skolemization-leaks":{"tf":1.0},"incrcomp-debugging.html#tracking-down-incorrect-edges":{"tf":1.4142135623730952},"traits/chalk-overview.html#parsing":{"tf":1.0},"hir.html#the-hir-map":{"tf":1.4142135623730952},"compiler-debugging.html#getting-logging-output":{"tf":1.7320508075688773},"mir/regionck.html#final-example":{"tf":1.0},"macro-expansion.html#the-macro-parser":{"tf":1.0},"hir.html#hir-bodies":{"tf":1.4142135623730952},"traits/canonical-queries.html#a-trait-query-in-rustc":{"tf":1.0},"name-resolution.html#scopes-and-ribs":{"tf":1.0},"hir.html#identifiers-in-the-hir":{"tf":1.0},"ty.html#allocating-and-working-with-types":{"tf":1.0},"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.4142135623730952},"traits/lowering-rules.html#rule-names-and-cross-references":{"tf":1.0},"traits/canonical-queries.html#the-traditional-interactive-prolog-query":{"tf":1.4142135623730952},"mir/regionck.html#skolemization-and-outlives-constraints":{"tf":1.0},"compiler-debugging.html#debugging-llvm":{"tf":1.0},"compiletest.html#adding-a-new-test-file":{"tf":1.0},"query.html#how-the-compiler-executes-a-query":{"tf":1.0},"traits/canonicalization.html#processing-the-canonicalized-query-result":{"tf":1.0}},"df":34,"_":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"a":{"docs":{},"df":0,"b":{"docs":{},"df":0,"l":{"docs":{},"df":0,"e":{"docs":{},"df":0,"_":{"docs":{},"df":0,"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"d":{"docs":{"rustdoc.html#from-clean-to-crate":{"tf":1.0},"rustdoc.html#other-tricks-up-its-sleeve":{"tf":1.0}},"df":2}}}}}}}}}}}}}},"a":{"docs":{},"df":0,"l":{"docs":{"traits/canonicalization.html#processing-the-canonicalized-query-result":{"tf":1.0},"type-inference.html#extracting-region-constraints":{"tf":1.0},"mir/index.html#key-mir-vocabulary":{"tf":1.0},"rustdoc.html#dotting-is-and-crossing-ts":{"tf":1.4142135623730952},"appendix/background.html#what-is-a-control-flow-graph":{"tf":1.0},"mir/passes.html#mir-passes":{"tf":1.4142135623730952},"method-lookup.html#candidate-search":{"tf":1.0},"variance.html#addendum-variance-on-traits":{"tf":1.0},"appendix/stupid-stats.html#overview-of-the-compilation-process":{"tf":1.0},"high-level-overview.html#the-main-stages-of-compilation":{"tf":1.0},"traits/hrtb.html#basic-matching-and-skolemization-leaks":{"tf":1.0},"mir/regionck.html#final-example":{"tf":1.7320508075688773},"how-to-build-and-run.html#running-xpy-and-building-a-stage1-compiler":{"tf":1.0},"tests/adding.html#other-header-commands":{"tf":1.4142135623730952},"diag.html#declaring-a-lint":{"tf":1.0},"high-level-overview.html#crate-structure":{"tf":1.0},"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.4142135623730952},"type-inference.html#subtyping-obligations":{"tf":1.0},"tests/adding.html#adding-new-tests":{"tf":1.0},"hir.html#the-hir-map":{"tf":1.0},"traits/canonicalization.html#executing-the-query":{"tf":1.0},"mir/regionck.html#extending-the-universal-regions-check":{"tf":1.0},"appendix/glossary.html#appendix-c-glossary":{"tf":1.4142135623730952},"mir/borrowck.html#major-phases-of-the-borrow-checker":{"tf":1.0},"appendix/stupid-stats.html#appendix-a-a-tutorial-on-creating-a-drop-in-replacement-for-rustc":{"tf":1.0}},"df":25}},"g":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"p":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{"appendix/glossary.html#appendix-c-glossary":{"tf":1.0}},"df":1}}}}}}}},"i":{"docs":{},"df":0,"s":{"docs":{},"df":0,"h":{"docs":{"rustc-driver.html#a-note-on-lifetimes":{"tf":1.4142135623730952}},"df":1}}},"e":{"docs":{"query.html#cycles-between-queries":{"tf":1.0},"mir/regionck.html#another-example":{"tf":1.0},"appendix/stupid-stats.html#compilercalls":{"tf":1.0},"rustdoc.html#hot-potato":{"tf":1.0},"tests/running.html#running-a-subset-of-the-test-suites":{"tf":1.0}},"df":5,"r":{"docs":{"appendix/stupid-stats.html#compilercontroller":{"tf":1.0},"high-level-overview.html#crate-structure":{"tf":1.0},"diag.html#error-messages":{"tf":1.0},"rustdoc.html#hot-potato":{"tf":1.0},"traits/caching.html#where-clauses-and-the-local-vs-global-cache":{"tf":1.0}},"df":5}}},"x":{"docs":{"name-resolution.html#overall-strategy":{"tf":1.0},"diag.html#error-messages":{"tf":1.0},"mir/borrowck.html#mir-borrow-check":{"tf":1.0},"conventions.html#use-todo-comments-for-things-you-dont-want-to-forget":{"tf":1.7320508075688773},"variance.html#the-algorithm":{"tf":1.0},"diag.html#suggestions":{"tf":1.0},"traits/goals-and-clauses.html#coinductive-goals":{"tf":1.0},"tests/running.html#running-an-individual-test":{"tf":1.0},"traits/chalk-overview.html#an-overview-of-chalk":{"tf":1.4142135623730952},"type-inference.html#region-constraints":{"tf":1.0},"type-inference.html#lexical-region-resolution":{"tf":1.0},"tests/adding.html#adding-new-tests":{"tf":1.0},"traits/canonicalization.html#canonicalization":{"tf":1.0},"tests/adding.html#editing-and-updating-the-reference-files":{"tf":1.0},"tests/adding.html#comment-explaining-what-the-test-is-about":{"tf":1.0},"tests/adding.html#other-header-commands":{"tf":1.0},"incrcomp-debugging.html#tracking-down-incorrect-edges":{"tf":1.0}},"df":17,"m":{"docs":{"method-lookup.html#candidate-assembly":{"tf":1.4142135623730952}},"df":1}},"e":{"docs":{},"df":0,"l":{"docs":{},"df":0,"d":{"docs":{"ty.html#allocating-and-working-with-types":{"tf":1.4142135623730952},"miri.html#interpretation":{"tf":1.0},"appendix/glossary.html#appendix-c-glossary":{"tf":1.0},"mir/index.html#mir-data-types":{"tf":1.4142135623730952},"mir/passes.html#implementing-and-registering-a-pass":{"tf":1.0},"traits/chalk-overview.html#intermediate-representation-ir":{"tf":1.0},"high-level-overview.html#the-main-stages-of-compilation":{"tf":1.4142135623730952},"traits/goals-and-clauses.html#coinductive-goals":{"tf":1.0},"rustdoc.html#from-crate-to-clean":{"tf":1.0},"diag.html#error-messages":{"tf":1.0}},"df":10}}},"r":{"docs":{},"df":0,"e":{"docs":{"rustc-driver.html#the-rustc-driver":{"tf":1.0}},"df":1,"f":{"docs":{},"df":0,"o":{"docs":{},"df":0,"x":{"docs":{"compiler-debugging.html#formatting-graphviz-output-dot-files":{"tf":1.0}},"df":1}}}},"s":{"docs":{},"df":0,"t":{"docs":{"traits/lowering-rules.html#trait-header":{"tf":1.0},"mir/regionck.html#skolemization-and-outlives-constraints":{"tf":1.0},"tests/adding.html#adding-new-tests":{"tf":1.0},"traits/caching.html#an-example":{"tf":1.0},"traits/resolution.html#candidate-assembly":{"tf":2.0},"incremental-compilation.html#the-try-mark-green-algorithm":{"tf":1.0},"incremental-compilation.html#the-query-dag":{"tf":1.0},"traits/lowering-to-logic.html#type-checking-generic-functions-beyond-horn-clauses":{"tf":1.0},"compiler-debugging.html#getting-a-backtrace-for-errors":{"tf":1.4142135623730952},"miri.html#miri":{"tf":1.0},"incrcomp-debugging.html#tracking-down-incorrect-edges":{"tf":1.0},"mir/index.html#key-mir-vocabulary":{"tf":1.0},"query.html#adding-a-new-kind-of-query":{"tf":1.0},"macro-expansion.html#the-macro-parser":{"tf":1.0},"mir/borrowck.html#major-phases-of-the-borrow-checker":{"tf":1.0},"mir/regionck.html#another-example":{"tf":1.0},"mir/regionck.html#back-to-our-example":{"tf":1.0},"const-eval.html#constant-evaluation":{"tf":1.0},"incremental-compilation.html#the-basic-algorithm":{"tf":1.0},"traits/lowering-to-logic.html#rust-traits-and-logic":{"tf":1.4142135623730952},"traits/hrtb.html#basic-matching-and-skolemization-leaks":{"tf":1.0},"traits/chalk-overview.html#parsing":{"tf":1.0},"name-resolution.html#todo":{"tf":1.4142135623730952},"appendix/background.html#what-is-a-control-flow-graph":{"tf":1.0},"mir/regionck.html#mir-based-region-checking-nll":{"tf":1.7320508075688773},"traits/canonical-queries.html#examples":{"tf":1.4142135623730952},"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.4142135623730952},"variance.html#trait-variance-and-vtable-resolution":{"tf":1.0},"appendix/stupid-stats.html#appendix-a-a-tutorial-on-creating-a-drop-in-replacement-for-rustc":{"tf":1.0},"traits/goals-and-clauses.html#domain-goals":{"tf":1.0},"mir/passes.html#implementing-and-registering-a-pass":{"tf":1.0},"rustdoc.html#from-soup-to-nuts":{"tf":1.0},"query.html#queries-demand-driven-compilation":{"tf":1.0},"type-inference.html#enforcing-equality--subtyping":{"tf":1.0},"method-lookup.html#steps":{"tf":1.0},"traits/specialization.html#specialization":{"tf":1.0},"how-to-build-and-run.html#creating-a-rustup-toolchain":{"tf":1.0},"name-resolution.html#overall-strategy":{"tf":1.0},"type-inference.html#subtyping-obligations":{"tf":1.0},"traits/goals-and-clauses.html#goals-and-clauses-meta-structure":{"tf":1.0},"method-lookup.html#candidate-search":{"tf":1.4142135623730952},"traits/lowering-rules.html#associated-type-declarations":{"tf":1.0},"mir/regionck.html#final-example":{"tf":1.4142135623730952},"appendix/stupid-stats.html#overview-of-the-compilation-process":{"tf":1.0},"rustdoc.html#from-crate-to-clean":{"tf":1.0},"traits/canonicalization.html#canonicalizing-the-query-result":{"tf":1.0}},"df":46}}},"l":{"docs":{},"df":0,"e":{"docs":{"tests/adding.html#other-header-commands":{"tf":1.0},"method-lookup.html#method-lookup":{"tf":1.0},"conventions.html#formatting-and-the-tidy-script":{"tf":1.0},"appendix/stupid-stats.html#compilercalls":{"tf":1.0},"tests/adding.html#comment-explaining-what-the-test-is-about":{"tf":1.0},"rustc-driver.html#the-rustc-driver":{"tf":1.0},"tests/adding.html#normalization":{"tf":1.0},"name-resolution.html#name-resolution":{"tf":1.0},"appendix/stupid-stats.html#overview-of-the-compilation-process":{"tf":2.0},"mir/passes.html#seeing-how-the-mir-changes-as-the-compiler-executes":{"tf":1.7320508075688773},"tests/adding.html#naming-your-test":{"tf":1.0},"rustdoc.html#cheat-sheet":{"tf":1.0},"macro-expansion.html#example":{"tf":1.0},"traits/lowering-module.html#unit-tests":{"tf":1.0},"tests/intro.html#compiletest-test-suites":{"tf":1.0},"compiletest.html#adding-a-new-test-file":{"tf":2.0},"compiler-debugging.html#formatting-graphviz-output-dot-files":{"tf":2.0},"tests/adding.html#revisions":{"tf":1.4142135623730952},"tests/adding.html#guide-to-the-ui-tests":{"tf":1.7320508075688773},"how-to-build-and-run.html#creating-a-rustup-toolchain":{"tf":1.0},"about-this-guide.html#about-this-guide":{"tf":1.0},"rustdoc.html#from-clean-to-crate":{"tf":1.0},"tests/running.html#running-an-individual-test":{"tf":1.0},"appendix/glossary.html#appendix-c-glossary":{"tf":1.0},"compiletest.html#header-commands":{"tf":1.4142135623730952},"rustdoc.html#hot-potato":{"tf":1.0},"conventions.html#copyright-notice":{"tf":2.23606797749979},"tests/adding.html#editing-and-updating-the-reference-files":{"tf":1.7320508075688773},"compiler-debugging.html#getting-logging-output":{"tf":1.0},"high-level-overview.html#crate-structure":{"tf":1.0},"high-level-overview.html#the-main-stages-of-compilation":{"tf":1.7320508075688773},"conventions.html#how-to-structure-your-pr":{"tf":1.4142135623730952},"rustdoc.html#other-tricks-up-its-sleeve":{"tf":1.4142135623730952},"compiletest.html#introduction":{"tf":1.0},"compiletest.html#adding-a-new-header-command":{"tf":2.6457513110645909},"tests/adding.html#adding-new-tests":{"tf":2.0},"rustdoc.html#dotting-is-and-crossing-ts":{"tf":1.4142135623730952},"conventions.html#line-length":{"tf":1.0},"tests/running.html#running-tests":{"tf":1.4142135623730952},"query.html#adding-a-new-kind-of-query":{"tf":1.0},"compiler-debugging.html#debugging-llvm":{"tf":1.0},"how-to-build-and-run.html#create-a-configtoml":{"tf":1.0},"appendix/stupid-stats.html#appendix-a-a-tutorial-on-creating-a-drop-in-replacement-for-rustc":{"tf":1.0},"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.4142135623730952}},"df":44,"n":{"docs":{},"df":0,"a":{"docs":{},"df":0,"m":{"docs":{"tests/adding.html#normalization":{"tf":1.0},"incrcomp-debugging.html#dumping-the-graph":{"tf":1.0}},"df":2}}},".":{"docs":{},"df":0,"l":{"docs":{"compiler-debugging.html#debugging-llvm":{"tf":1.0}},"df":1},"r":{"docs":{"compiler-debugging.html#getting-logging-output":{"tf":2.23606797749979},"compiler-debugging.html#debugging-llvm":{"tf":1.0}},"df":2}},"m":{"docs":{},"df":0,"a":{"docs":{},"df":0,"p":{"docs":{"the-parser.html#the-parser":{"tf":1.0}},"df":1}}}},"l":{"docs":{"compiler-debugging.html#getting-logging-output":{"tf":1.0},"name-resolution.html#overall-strategy":{"tf":1.0}},"df":2},"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"tests/running.html#running-an-individual-test":{"tf":1.0},"compiler-debugging.html#expensive-operations-in-logs":{"tf":1.0},"incrcomp-debugging.html#dumping-the-graph":{"tf":2.0},"incrcomp-debugging.html#tracking-down-incorrect-edges":{"tf":2.0},"compiler-debugging.html#debugging-llvm":{"tf":1.7320508075688773},"compiler-debugging.html#getting-logging-output":{"tf":1.4142135623730952},"mir/passes.html#seeing-how-the-mir-changes-as-the-compiler-executes":{"tf":2.0}},"df":7}}}},"g":{"docs":{},"df":0,"u":{"docs":{},"df":0,"r":{"docs":{"type-checking.html#type-collection":{"tf":1.0},"mir/borrowck.html#major-phases-of-the-borrow-checker":{"tf":1.0},"traits/resolution.html#major-concepts":{"tf":1.4142135623730952},"traits/resolution.html#selection-during-translation":{"tf":1.0},"traits/hrtb.html#basic-matching-and-skolemization-leaks":{"tf":1.0},"appendix/glossary.html#appendix-c-glossary":{"tf":1.0},"variance.html#trait-variance-and-vtable-resolution":{"tf":1.0},"miri.html#miri":{"tf":1.0},"traits/index.html#trait-solving-new-style":{"tf":1.0}},"df":9}}},"t":{"docs":{"query.html#queries-demand-driven-compilation":{"tf":1.0},"traits/specialization.html#specialization":{"tf":1.0}},"df":2}}},"q":{"docs":{"incremental-compilation.html#the-basic-algorithm":{"tf":1.4142135623730952},"incremental-compilation.html#improvements-to-the-basic-algorithm":{"tf":2.23606797749979},"incremental-compilation.html#the-try-mark-green-algorithm":{"tf":3.3166247903554},"incremental-compilation.html#the-query-dag":{"tf":1.7320508075688773}},"df":4,"2":{"docs":{"incremental-compilation.html#the-basic-algorithm":{"tf":1.4142135623730952}},"df":1},"e":{"docs":{},"df":0,"m":{"docs":{},"df":0,"u":{"docs":{"tests/intro.html#testing-on-emulators":{"tf":1.0}},"df":1}}},"u":{"docs":{},"df":0,"e":{"docs":{},"df":0,"u":{"docs":{},"df":0,"e":{"docs":{"tests/intro.html#testing-infrastructure":{"tf":1.0}},"df":1}},"r":{"docs":{},"df":0,"y":{"docs":{},"df":0,"_":{"docs":{},"df":0,"k":{"docs":{},"df":0,"e":{"docs":{},"df":0,"y":{"docs":{"query.html#how-the-compiler-executes-a-query":{"tf":1.0}},"df":1}}},"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"u":{"docs":{},"df":0,"l":{"docs":{},"df":0,"t":{"docs":{"query.html#how-the-compiler-executes-a-query":{"tf":1.0}},"df":1}}}}}}},"d":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"c":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{},"df":0,"p":{"docs":{},"df":0,"t":{"docs":{"query.html#adding-a-new-kind-of-query":{"tf":1.0}},"df":1}}}}}}}},"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"u":{"docs":{},"df":0,"l":{"docs":{},"df":0,"t":{"docs":{"traits/canonical-queries.html#a-trait-query-in-rustc":{"tf":1.0}},"df":1}}}}}},"'":{"docs":{"traits/canonicalization.html#executing-the-query":{"tf":1.0}},"df":1},"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"f":{"docs":{},"df":0,"i":{"docs":{},"df":0,"g":{"docs":{"query.html#adding-a-new-kind-of-query":{"tf":1.0}},"df":1}}}}}}},"i":{"docs":{"query.html#invoking-queries":{"tf":2.23606797749979},"query.html#how-the-compiler-executes-a-query":{"tf":4.242640687119285},"incrcomp-debugging.html#dumping-the-graph":{"tf":1.0},"incremental-compilation.html#improvements-to-the-basic-algorithm":{"tf":1.4142135623730952},"appendix/glossary.html#appendix-c-glossary":{"tf":1.7320508075688773},"traits/canonical-queries.html#canonical-queries":{"tf":2.23606797749979},"incremental-compilation.html#the-basic-algorithm":{"tf":4.58257569495584},"traits/index.html#trait-solving-new-style":{"tf":1.0},"type-checking.html#type-collection":{"tf":1.4142135623730952},"mir/passes.html#mir-passes":{"tf":2.0},"traits/canonicalization.html#canonicalizing-the-query":{"tf":2.449489742783178},"incremental-compilation.html#the-query-dag":{"tf":3.3166247903554},"incremental-compilation.html#footnotes":{"tf":1.0},"appendix/code-index.html#appendix-d-code-index":{"tf":1.0},"high-level-overview.html#the-main-stages-of-compilation":{"tf":2.8284271247461905},"query.html#cycles-between-queries":{"tf":2.8284271247461905},"const-eval.html#constant-evaluation":{"tf":1.4142135623730952},"incrcomp-debugging.html#debugging-and-testing-dependencies":{"tf":1.0},"incrcomp-debugging.html#tracking-down-incorrect-edges":{"tf":1.0},"incremental-compilation.html#incremental-compilation":{"tf":1.4142135623730952},"traits/canonical-queries.html#the-traditional-interactive-prolog-query":{"tf":2.8284271247461905},"query.html#adding-a-new-kind-of-query":{"tf":5.656854249492381},"mir/passes.html#stealing":{"tf":2.449489742783178},"traits/canonicalization.html#executing-the-query":{"tf":3.1622776601683797},"tests/intro.html#compiletest-test-suites":{"tf":1.0},"variance.html#dependency-graph-management":{"tf":1.7320508075688773},"miri.html#miri":{"tf":1.0},"traits/canonicalization.html#processing-the-canonicalized-query-result":{"tf":2.23606797749979},"traits/chalk-overview.html#blog-posts":{"tf":1.4142135623730952},"mir/borrowck.html#major-phases-of-the-borrow-checker":{"tf":1.0},"rustc-driver.html#the-rustc-driver":{"tf":1.0},"rustdoc.html#cheat-sheet":{"tf":1.0},"query.html#queries-demand-driven-compilation":{"tf":3.605551275463989},"traits/lowering-module.html#the--program_clauses_for--query":{"tf":2.23606797749979},"incrcomp-debugging.html#testing-the-dependency-graph":{"tf":1.0},"traits/chalk-overview.html#an-overview-of-chalk":{"tf":1.0},"traits/canonicalization.html#canonicalization":{"tf":1.7320508075688773},"traits/canonicalization.html#canonicalizing-the-query-result":{"tf":3.1622776601683797},"traits/canonical-queries.html#examples":{"tf":2.449489742783178},"traits/lowering-module.html#unit-tests":{"tf":1.0},"incremental-compilation.html#the-try-mark-green-algorithm":{"tf":3.0},"traits/canonical-queries.html#a-trait-query-in-rustc":{"tf":3.0},"incrcomp-debugging.html#debugging-the-dependency-graph":{"tf":1.0},"ty.html#the-tcx-and-how-it-uses-lifetimes":{"tf":1.0},"miri.html#interpretation":{"tf":1.0},"rustdoc.html#dotting-is-and-crossing-ts":{"tf":1.7320508075688773},"high-level-overview.html#crate-structure":{"tf":1.4142135623730952},"mir/passes.html#implementing-and-registering-a-pass":{"tf":1.0},"rustdoc.html#the-walking-tour-of-rustdoc":{"tf":1.4142135623730952}},"df":49,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"t":{"docs":{},"df":0,"y":{"docs":{},"df":0,"p":{"docs":{},"df":0,"e":{"docs":{},"df":0,"_":{"docs":{},"df":0,"o":{"docs":{},"df":0,"f":{"docs":{},"df":0,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"t":{"docs":{},"df":0,"r":{"docs":{},"df":0,"y":{"docs":{},"df":0,"_":{"docs":{},"df":0,"g":{"docs":{},"df":0,"e":{"docs":{},"df":0,"t":{"docs":{},"df":0,"(":{"docs":{},"df":0,"t":{"docs":{},"df":0,"c":{"docs":{},"df":0,"x":{"docs":{"query.html#cycles-between-queries":{"tf":1.0}},"df":1}}}}}}}}}}}}},"<":{"docs":{},"df":0,"'":{"docs":{},"df":0,"t":{"docs":{},"df":0,"c":{"docs":{},"df":0,"x":{"docs":{"query.html#adding-a-new-kind-of-query":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}},"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"i":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{"compiletest.html#adding-a-new-header-command":{"tf":1.0},"appendix/glossary.html#appendix-c-glossary":{"tf":1.0},"mir/regionck.html#what-is-a-universe":{"tf":1.0},"variance.html#trait-variance-and-vtable-resolution":{"tf":1.0},"traits/specialization.html#specialization":{"tf":1.0},"traits/associated-types.html#projection-equality":{"tf":1.0},"traits/hrtb.html#basic-matching-and-skolemization-leaks":{"tf":1.0}},"df":7}}}}}},"x":{"docs":{"diag.html#suggestions":{"tf":2.8284271247461905},"diag.html#error-messages":{"tf":1.4142135623730952}},"df":2},"i":{"docs":{},"df":0,"t":{"docs":{"traits/bibliography.html#bibliography":{"tf":1.0},"incrcomp-debugging.html#dumping-the-graph":{"tf":1.0},"traits/goals-and-clauses.html#goals-and-clauses-meta-structure":{"tf":1.0},"mir/passes.html#seeing-how-the-mir-changes-as-the-compiler-executes":{"tf":1.0},"tests/intro.html#compiletest-test-suites":{"tf":1.0},"incrcomp-debugging.html#tracking-down-incorrect-edges":{"tf":1.0},"variance.html#the-algorithm":{"tf":1.0},"how-to-build-and-run.html#running-xpy-and-building-a-stage1-compiler":{"tf":1.0},"variance.html#dependency-graph-management":{"tf":1.0},"high-level-overview.html#the-main-stages-of-compilation":{"tf":1.0},"hir.html#the-hir":{"tf":1.0},"incremental-compilation.html#improvements-to-the-basic-algorithm":{"tf":1.0},"traits/lowering-to-logic.html#lowering-to-logic":{"tf":1.0}},"df":13},"c":{"docs":{},"df":0,"k":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{"appendix/glossary.html#appendix-c-glossary":{"tf":1.0}},"df":1}}}}},"a":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{},"df":0,"f":{"docs":{"mir/passes.html#stealing":{"tf":1.0}},"df":1}}},"n":{"docs":{},"df":0,"t":{"docs":{},"df":0,"i":{"docs":{},"df":0,"f":{"docs":{"traits/goals-and-clauses.html#goals-and-clauses-meta-structure":{"tf":1.4142135623730952},"traits/associated-types.html#associated-type-projection-and-normalization":{"tf":1.0},"traits/chalk-overview.html#lowering":{"tf":1.0},"traits/lowering-to-logic.html#type-checking-generic-functions-beyond-horn-clauses":{"tf":1.0},"appendix/glossary.html#appendix-c-glossary":{"tf":1.0}},"df":5,"i":{"docs":{"mir/regionck.html#skolemization-and-outlives-constraints":{"tf":1.0},"appendix/glossary.html#appendix-c-glossary":{"tf":1.0},"traits/chalk-overview.html#lowering":{"tf":1.4142135623730952},"mir/regionck.html#subtyping-and-skolemization":{"tf":1.0},"appendix/background.html#what-is-universally-quantified-what-about-existentially-quantified":{"tf":2.0},"traits/hrtb.html#basic-matching-and-skolemization-leaks":{"tf":1.0}},"df":6}}}}}}},"'":{"docs":{"incremental-compilation.html#the-try-mark-green-algorithm":{"tf":1.4142135623730952}},"df":1},"r":{"docs":{"traits/canonicalization.html#canonicalizing-the-query-result":{"tf":1.4142135623730952}},"df":1},"1":{"docs":{"incremental-compilation.html#the-basic-algorithm":{"tf":1.4142135623730952}},"df":1}},"g":{"docs":{"tests/adding.html#other-header-commands":{"tf":1.0}},"df":1,"d":{"docs":{},"df":0,"b":{"docs":{"tests/adding.html#ignoring-tests":{"tf":1.0},"tests/intro.html#compiletest-test-suites":{"tf":1.0},"tests/adding.html#what-kind-of-test-should-i-add":{"tf":1.0}},"df":3,",":{"docs":{},"df":0,"l":{"docs":{},"df":0,"l":{"docs":{},"df":0,"d":{"docs":{},"df":0,"b":{"docs":{"tests/adding.html#other-header-commands":{"tf":1.0}},"df":1}}}}}}},"l":{"docs":{},"df":0,"o":{"docs":{},"df":0,"b":{"docs":{"appendix/stupid-stats.html#compilercontroller":{"tf":1.0}},"df":1,"a":{"docs":{},"df":0,"l":{"docs":{"miri.html#allocations":{"tf":1.0},"ty.html#the-tcx-and-how-it-uses-lifetimes":{"tf":2.23606797749979},"mir/regionck.html#what-is-a-universe":{"tf":1.4142135623730952},"ty.html#allocating-and-working-with-types":{"tf":1.0},"traits/caching.html#where-clauses-and-the-local-vs-global-cache":{"tf":2.0},"query.html#how-the-compiler-executes-a-query":{"tf":1.0},"appendix/glossary.html#appendix-c-glossary":{"tf":1.4142135623730952}},"df":7,"i":{"docs":{},"df":0,"d":{"docs":{"const-eval.html#constant-evaluation":{"tf":1.4142135623730952},"miri.html#miri":{"tf":1.4142135623730952}},"df":2}}}}},"s":{"docs":{},"df":0,"s":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{"appendix/glossary.html#appendix-c-glossary":{"tf":1.7320508075688773},"traits/chalk-overview.html#resources":{"tf":1.0}},"df":2}}}}}},"e":{"docs":{},"df":0,"e":{"docs":{},"df":0,"f":{"docs":{},"df":0,"u":{"docs":{},"df":0,"l":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{"traits/canonical-queries.html#the-traditional-interactive-prolog-query":{"tf":1.0}},"df":1}}}}}}},"u":{"docs":{},"df":0,"e":{"docs":{"rustc-driver.html#the-rustc-driver":{"tf":1.0}},"df":1}}},"o":{"docs":{"rustdoc.html#other-tricks-up-its-sleeve":{"tf":1.0},"mir/regionck.html#subtyping-and-skolemization":{"tf":1.0},"traits/lowering-to-logic.html#rust-traits-and-logic":{"tf":1.0},"how-to-build-and-run.html#how-to-build-the-compiler-and-run-what-you-built":{"tf":1.0},"traits/resolution.html#candidate-assembly":{"tf":1.0},"how-to-build-and-run.html#running-xpy-and-building-a-stage1-compiler":{"tf":1.4142135623730952},"mir/passes.html#implementing-and-registering-a-pass":{"tf":1.4142135623730952},"query.html#adding-a-new-kind-of-query":{"tf":1.0},"traits/canonical-queries.html#examples":{"tf":1.0},"query.html#queries-demand-driven-compilation":{"tf":1.4142135623730952},"mir/regionck.html#extending-the-universal-regions-check":{"tf":1.0},"mir/regionck.html#skolemization-and-outlives-constraints":{"tf":1.0},"variance.html#variance-and-object-types":{"tf":1.0},"appendix/stupid-stats.html#what-next":{"tf":1.0},"traits/canonicalization.html#executing-the-query":{"tf":1.4142135623730952},"traits/caching.html#an-example":{"tf":1.0},"rustc-driver.html#the-rustc-driver":{"tf":1.0},"variance.html#addendum-variance-on-traits":{"tf":1.0},"mir/regionck.html#final-example":{"tf":1.0},"query.html#how-the-compiler-executes-a-query":{"tf":1.0},"traits/canonicalization.html#canonicalizing-the-query-result":{"tf":1.0},"method-lookup.html#candidate-assembly":{"tf":1.0},"traits/goals-and-clauses.html#coinductive-goals":{"tf":1.0},"mir/regionck.html#back-to-our-example":{"tf":1.0},"appendix/stupid-stats.html#appendix-a-a-tutorial-on-creating-a-drop-in-replacement-for-rustc":{"tf":1.4142135623730952},"ty.html#allocating-and-working-with-types":{"tf":1.0},"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.0},"type-inference.html#region-constraints":{"tf":1.0},"rustdoc.html#from-soup-to-nuts":{"tf":1.0},"traits/implied-bounds.html#implied-bounds":{"tf":1.0}},"df":30,"o":{"docs":{},"df":0,"d":{"docs":{"traits/lowering-module.html#unit-tests":{"tf":1.0},"traits/resolution.html#selection-during-translation":{"tf":1.0},"mir/regionck.html#back-to-our-example":{"tf":1.0},"traits/lowering-to-logic.html#type-checking-normal-functions":{"tf":1.0},"appendix/stupid-stats.html#what-next":{"tf":1.0},"compiler-debugging.html#getting-logging-output":{"tf":1.0},"traits/resolution.html#candidate-assembly":{"tf":1.0},"mir/passes.html#implementing-and-registering-a-pass":{"tf":1.4142135623730952},"compiler-debugging.html#debugging-llvm":{"tf":1.0},"traits/lowering-to-logic.html#rust-traits-and-logic":{"tf":1.4142135623730952},"diag.html#suggestions":{"tf":1.0},"tests/running.html#running-a-subset-of-the-test-suites":{"tf":1.0},"compiletest.html#introduction":{"tf":1.0},"variance.html#variance-and-object-types":{"tf":1.0},"mir/regionck.html#final-example":{"tf":1.0}},"df":15}},"t":{"docs":{},"df":0,"o":{"docs":{"appendix/background.html#what-is-a-control-flow-graph":{"tf":2.0}},"df":1}},"e":{"docs":{"rustdoc.html#from-soup-to-nuts":{"tf":1.0},"traits/chalk-overview.html#parsing":{"tf":1.0},"mir/regionck.html#extending-the-universal-regions-check":{"tf":1.0},"appendix/stupid-stats.html#overview-of-the-compilation-process":{"tf":1.0},"tests/intro.html#testing-infrastructure":{"tf":1.0}},"df":5},"v":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"n":{"docs":{"rustc-driver.html#the-rustc-driver":{"tf":1.0}},"df":1}}}},"n":{"docs":{},"df":0,"e":{"docs":{"mir/regionck.html#final-example":{"tf":1.0}},"df":1}},"p":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{"traits/bibliography.html#bibliography":{"tf":1.4142135623730952},"traits/lowering-to-logic.html#type-checking-generic-functions-beyond-horn-clauses":{"tf":1.0}},"df":2}}}}},"a":{"docs":{},"df":0,"l":{"docs":{"traits/lowering-to-logic.html#type-checking-normal-functions":{"tf":2.0},"high-level-overview.html#the-main-stages-of-compilation":{"tf":1.0},"traits/lowering-rules.html#function-and-constant-values":{"tf":1.0},"traits/chalk-overview.html#an-overview-of-chalk":{"tf":1.0},"traits/lowering-rules.html#lowering-rules":{"tf":1.0},"traits/lowering-rules.html#lowering-where-clauses":{"tf":2.0},"traits/chalk-overview.html#lowering":{"tf":1.0},"traits/index.html#trait-solving-new-style":{"tf":1.0},"traits/goals-and-clauses.html#goals-and-clauses-meta-structure":{"tf":3.7416573867739415},"traits/goals-and-clauses.html#coinductive-goals":{"tf":2.449489742783178},"traits/lowering-rules.html#notation":{"tf":1.0},"rustdoc.html#hot-potato":{"tf":1.0},"traits/goals-and-clauses.html#goals-and-clauses":{"tf":1.7320508075688773},"traits/goals-and-clauses.html#domain-goals":{"tf":2.0},"traits/lowering-rules.html#trait-header":{"tf":1.0},"traits/lowering-to-logic.html#type-checking-generic-functions-beyond-horn-clauses":{"tf":1.4142135623730952}},"df":16}}},"u":{"docs":{},"df":0,"i":{"docs":{},"df":0,"d":{"docs":{"tests/adding.html#guide-to-the-ui-tests":{"tf":1.4142135623730952},"miri.html#interpretation":{"tf":1.0},"appendix/background.html#appendix-b-background-topics":{"tf":1.0},"compiletest.html#adding-a-new-test-file":{"tf":1.0},"about-this-guide.html#about-this-guide":{"tf":2.23606797749979},"appendix/background.html#what-is-co--and-contra-variance":{"tf":1.0},"traits/chalk-overview.html#resources":{"tf":1.0},"rustc-driver.html#the-rustc-driver":{"tf":1.0}},"df":8,"e":{"docs":{},"df":0,"p":{"docs":{},"df":0,"o":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{"name-resolution.html#todo":{"tf":1.0}},"df":1}}}}},"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"c":{"docs":{"appendix/code-index.html#appendix-d-code-index":{"tf":1.0}},"df":1}}}}},"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{"appendix/stupid-stats.html#appendix-a-a-tutorial-on-creating-a-drop-in-replacement-for-rustc":{"tf":1.0}},"df":1}}}}}}},"e":{"docs":{},"df":0,"t":{"docs":{"compiler-debugging.html#getting-a-backtrace-for-errors":{"tf":1.4142135623730952},"tests/intro.html#the-compiler-testing-framework":{"tf":1.0},"traits/index.html#trait-solving-new-style":{"tf":1.0},"traits/hrtb.html#basic-matching-and-skolemization-leaks":{"tf":1.0},"mir/passes.html#implementing-and-registering-a-pass":{"tf":1.0},"traits/resolution.html#candidate-assembly":{"tf":1.0},"rustdoc.html#from-crate-to-clean":{"tf":1.0},"compiler-debugging.html#getting-a-backtrace":{"tf":1.4142135623730952},"compiler-debugging.html#getting-logging-output":{"tf":1.4142135623730952},"high-level-overview.html#crate-structure":{"tf":1.0},"miri.html#allocations":{"tf":1.0}},"df":11,"(":{"docs":{},"df":0,"&":{"docs":{},"df":0,"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"l":{"docs":{},"df":0,"f":{"docs":{"traits/resolution.html#candidate-assembly":{"tf":1.7320508075688773}},"df":1}}}}}},"o":{"docs":{},"df":0,"p":{"docs":{},"df":0,"t":{"docs":{},"df":0,"s":{"docs":{},"df":0,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"m":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{},"df":0,"c":{"docs":{},"df":0,"h":{"docs":{"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.7320508075688773}},"df":1}}}}}}}}}}},"_":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{},"df":0,"(":{"docs":{},"df":0,"&":{"docs":{},"df":0,"b":{"docs":{},"df":0,"o":{"docs":{},"df":0,"x":{"docs":{},"df":0,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"n":{"docs":{},"df":0,"e":{"docs":{},"df":0,"w":{"docs":{},"df":0,"(":{"docs":{},"df":0,"1":{"docs":{},"df":0,"_":{"docs":{},"df":0,"u":{"docs":{},"df":0,"1":{"docs":{},"df":0,"6":{"docs":{"traits/resolution.html#candidate-assembly":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}},"l":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{},"df":0,"s":{"docs":{},"df":0,"(":{"docs":{},"df":0,"&":{"docs":{},"df":0,"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"l":{"docs":{},"df":0,"f":{"docs":{"diag.html#declaring-a-lint":{"tf":1.0}},"df":1}}}}}}}}}}}}},"n":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"rustc-driver.html#the-rustc-driver":{"tf":1.0},"incremental-compilation.html#the-basic-algorithm":{"tf":1.0},"tests/intro.html#compiletest-test-suites":{"tf":2.0},"macro-expansion.html#the-macro-parser":{"tf":1.0},"traits/resolution.html#major-concepts":{"tf":1.7320508075688773},"traits/canonicalization.html#canonicalizing-the-query":{"tf":1.0},"how-to-build-and-run.html#create-a-configtoml":{"tf":1.0},"traits/resolution.html#selection-during-translation":{"tf":1.0},"mir/visitor.html#mir-visitor":{"tf":1.0},"traits/hrtb.html#higher-ranked-trait-obligations":{"tf":1.0},"param_env.html#parameter-environment":{"tf":2.0},"trans.html#generating-llvm-ir":{"tf":1.4142135623730952},"hir.html#the-hir":{"tf":1.0},"query.html#adding-a-new-kind-of-query":{"tf":2.0},"traits/goals-and-clauses.html#domain-goals":{"tf":1.0},"appendix/glossary.html#appendix-c-glossary":{"tf":3.1622776601683797},"traits/resolution.html#candidate-assembly":{"tf":1.0},"appendix/stupid-stats.html#overview-of-the-compilation-process":{"tf":1.4142135623730952},"mir/index.html#the-mir-mid-level-ir":{"tf":1.0},"variance.html#the-algorithm":{"tf":1.4142135623730952},"mir/regionck.html#what-is-a-universe":{"tf":1.4142135623730952},"traits/canonical-queries.html#canonical-queries":{"tf":1.0},"diag.html#error-messages":{"tf":2.23606797749979},"query.html#how-the-compiler-executes-a-query":{"tf":1.0},"traits/goals-and-clauses.html#coinductive-goals":{"tf":1.0},"ty.html#the-tcx-and-how-it-uses-lifetimes":{"tf":1.0},"traits/caching.html#caching-and-subtle-considerations-therewith":{"tf":1.0},"name-resolution.html#name-resolution":{"tf":1.0},"high-level-overview.html#the-main-stages-of-compilation":{"tf":1.4142135623730952},"traits/lowering-rules.html#notation":{"tf":1.4142135623730952},"type-inference.html#inference-variables":{"tf":1.0},"type-inference.html#subtyping-obligations":{"tf":1.0},"mir/index.html#key-mir-vocabulary":{"tf":1.0},"rustdoc.html#from-clean-to-crate":{"tf":1.0},"traits/resolution.html#trait-resolution-old-style":{"tf":1.0},"tests/running.html#running-a-subset-of-the-test-suites":{"tf":1.0},"traits/chalk-overview.html#lowering":{"tf":1.0},"tests/adding.html#adding-new-tests":{"tf":1.7320508075688773},"traits/caching.html#where-clauses-and-the-local-vs-global-cache":{"tf":1.0},"traits/chalk-overview.html#intermediate-representation-ir":{"tf":1.0},"rustdoc.html#from-soup-to-nuts":{"tf":1.0},"tests/adding.html#other-header-commands":{"tf":1.4142135623730952},"appendix/stupid-stats.html#appendix-a-a-tutorial-on-creating-a-drop-in-replacement-for-rustc":{"tf":1.0},"traits/lowering-to-logic.html#rust-traits-and-logic":{"tf":1.4142135623730952},"variance.html#variance-of-type-and-lifetime-parameters":{"tf":1.0},"appendix/background.html#appendix-b-background-topics":{"tf":1.0},"traits/lowering-to-logic.html#type-checking-generic-functions-beyond-horn-clauses":{"tf":2.449489742783178},"query.html#cycles-between-queries":{"tf":1.4142135623730952},"traits/lowering-rules.html#associated-type-declarations":{"tf":1.0},"rustdoc.html#cheat-sheet":{"tf":1.4142135623730952},"query.html#queries-demand-driven-compilation":{"tf":1.0},"ty.html#beyond-types-other-kinds-of-arena-allocated-data-structures":{"tf":1.0},"rustdoc.html#other-tricks-up-its-sleeve":{"tf":1.0}},"df":53}}}},"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"w":{"docs":{"type-inference.html#lexical-region-resolution":{"tf":1.0},"mir/regionck.html#back-to-our-example":{"tf":1.4142135623730952}},"df":2,"n":{"docs":{"type-inference.html#lexical-region-resolution":{"tf":1.0}},"df":1}},"u":{"docs":{},"df":0,"p":{"docs":{"method-lookup.html#candidate-assembly":{"tf":1.0},"diag.html#lint-groups":{"tf":2.449489742783178},"appendix/glossary.html#appendix-c-glossary":{"tf":1.0},"compiletest.html#introduction":{"tf":1.0},"tests/intro.html#compiletest-test-suites":{"tf":1.0},"miri.html#allocations":{"tf":1.0},"traits/index.html#trait-solving-new-style":{"tf":1.0}},"df":7}}},"e":{"docs":{},"df":0,"w":{"docs":{"mir/regionck.html#back-to-our-example":{"tf":1.0}},"df":1},"e":{"docs":{},"df":0,"n":{"docs":{"incremental-compilation.html#the-basic-algorithm":{"tf":2.0},"incremental-compilation.html#the-query-dag":{"tf":1.4142135623730952},"variance.html#dependency-graph-management":{"tf":1.4142135623730952},"incremental-compilation.html#improvements-to-the-basic-algorithm":{"tf":1.4142135623730952},"incremental-compilation.html#the-try-mark-green-algorithm":{"tf":3.1622776601683797}},"df":5}},"a":{"docs":{},"df":0,"t":{"docs":{"appendix/stupid-stats.html#what-next":{"tf":1.0},"diag.html#emitting-diagnostics":{"tf":1.0},"param_env.html#parameter-environment":{"tf":1.0}},"df":3,"e":{"docs":{},"df":0,"r":{"docs":{"mir/regionck.html#what-is-a-universe":{"tf":1.0}},"df":1}}}}},"a":{"docs":{},"df":0,"p":{"docs":{},"df":0,"h":{"docs":{"traits/hrtb.html#basic-matching-and-skolemization-leaks":{"tf":1.0},"incremental-compilation.html#the-basic-algorithm":{"tf":1.0},"mir/index.html#key-mir-vocabulary":{"tf":1.0},"incrcomp-debugging.html#testing-the-dependency-graph":{"tf":2.449489742783178},"mir/borrowck.html#mir-borrow-check":{"tf":1.0},"appendix/glossary.html#appendix-c-glossary":{"tf":1.7320508075688773},"incrcomp-debugging.html#debugging-the-dependency-graph":{"tf":1.4142135623730952},"traits/specialization.html#specialization":{"tf":2.8284271247461905},"incrcomp-debugging.html#dumping-the-graph":{"tf":2.6457513110645909},"compiler-debugging.html#formatting-graphviz-output-dot-files":{"tf":1.4142135623730952},"mir/index.html#introduction-to-mir":{"tf":1.0},"mir/index.html#the-mir-mid-level-ir":{"tf":1.0},"appendix/background.html#what-is-a-control-flow-graph":{"tf":2.6457513110645909},"mir/regionck.html#skolemization-and-outlives-constraints":{"tf":1.0},"incrcomp-debugging.html#tracking-down-incorrect-edges":{"tf":2.0},"variance.html#dependency-graph-management":{"tf":1.7320508075688773},"mir/regionck.html#representing-the-values-of-a-region-variable":{"tf":1.4142135623730952}},"df":17,".":{"docs":{},"df":0,"t":{"docs":{},"df":0,"x":{"docs":{},"df":0,"t":{"docs":{"incrcomp-debugging.html#tracking-down-incorrect-edges":{"tf":1.0}},"df":1}}}},"v":{"docs":{},"df":0,"i":{"docs":{},"df":0,"z":{"docs":{"compiler-debugging.html#formatting-graphviz-output-dot-files":{"tf":2.23606797749979}},"df":1}}}}},"i":{"docs":{},"df":0,"n":{"docs":{"high-level-overview.html#crate-structure":{"tf":1.0},"traits/caching.html#where-clauses-and-the-local-vs-global-cache":{"tf":1.0},"appendix/stupid-stats.html#compilercontroller":{"tf":1.0},"query.html#cycles-between-queries":{"tf":1.0},"rustdoc.html#hot-potato":{"tf":1.0},"appendix/stupid-stats.html#compilercalls":{"tf":1.0}},"df":6}},"b":{"docs":{"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.0},"rustdoc.html#other-tricks-up-its-sleeve":{"tf":1.0}},"df":2},"t":{"docs":{},"df":0,"u":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{"conventions.html#using-crates-from-cratesio":{"tf":1.0}},"df":1}}}},"m":{"docs":{},"df":0,"m":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{"macro-expansion.html#example":{"tf":1.0},"mir/index.html#key-mir-vocabulary":{"tf":1.4142135623730952},"traits/chalk-overview.html#parsing":{"tf":1.0}},"df":3}}}},"d":{"docs":{},"df":0,"u":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{"appendix/glossary.html#appendix-c-glossary":{"tf":1.0},"high-level-overview.html#crate-structure":{"tf":1.0},"high-level-overview.html#the-main-stages-of-compilation":{"tf":1.0},"appendix/stupid-stats.html#appendix-a-a-tutorial-on-creating-a-drop-in-replacement-for-rustc":{"tf":1.0}},"df":4}}}}}},"c":{"docs":{},"df":0,"x":{"docs":{"compiler-debugging.html#expensive-operations-in-logs":{"tf":2.23606797749979},"type-inference.html#creating-an-inference-context":{"tf":1.0},"compiler-debugging.html#getting-a-backtrace-for-errors":{"tf":1.4142135623730952},"ty.html#the-tcx-and-how-it-uses-lifetimes":{"tf":2.449489742783178},"appendix/glossary.html#appendix-c-glossary":{"tf":1.0}},"df":5}},"a":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{"hir.html#out-of-band-storage-and-the--crate--type":{"tf":1.7320508075688773}},"df":1}},"v":{"docs":{},"df":0,"e":{"docs":{"traits/canonical-queries.html#the-traditional-interactive-prolog-query":{"tf":1.0}},"df":1}},"t":{"docs":{},"df":0,"h":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"appendix/code-index.html#appendix-d-code-index":{"tf":1.0},"rustdoc.html#from-crate-to-clean":{"tf":1.0}},"df":2}}},"e":{"docs":{"tests/adding.html#other-header-commands":{"tf":2.0},"diag.html#edition-gated-lints":{"tf":1.4142135623730952}},"df":2}}},"n":{"docs":{},"df":0,"u":{"docs":{"how-to-build-and-run.html#creating-a-rustup-toolchain":{"tf":1.0},"tests/intro.html#testing-on-emulators":{"tf":1.4142135623730952},"tests/adding.html#ignoring-tests":{"tf":1.0},"compiler-debugging.html#getting-a-backtrace-for-errors":{"tf":1.0}},"df":4,"e":{"docs":{},"df":0,"a":{"docs":{},"df":0,"b":{"docs":{},"df":0,"i":{"docs":{},"df":0,"h":{"docs":{},"df":0,"f":{"docs":{"tests/intro.html#testing-on-emulators":{"tf":1.0}},"df":1}}}}}},"/":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"a":{"docs":{},"df":0,"g":{"docs":{},"df":0,"e":{"docs":{},"df":0,"1":{"docs":{},"df":0,"/":{"docs":{},"df":0,"b":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"/":{"docs":{},"df":0,"r":{"docs":{},"df":0,"u":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"c":{"docs":{"compiler-debugging.html#getting-a-backtrace-for-errors":{"tf":1.4142135623730952}},"df":1}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"df":0,"t":{"docs":{"conventions.html#how-to-structure-your-pr":{"tf":1.0}},"df":1,"h":{"docs":{},"df":0,"u":{"docs":{},"df":0,"b":{"docs":{"about-this-guide.html#about-this-guide":{"tf":1.0},"compiler-debugging.html#debugging-the-compiler":{"tf":1.0},"appendix/stupid-stats.html#what-next":{"tf":1.0},"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.0},"tests/intro.html#testing-infrastructure":{"tf":1.0},"appendix/stupid-stats.html#appendix-a-a-tutorial-on-creating-a-drop-in-replacement-for-rustc":{"tf":1.0}},"df":6}}}},"d":{"docs":{"miri.html#miri":{"tf":1.0}},"df":1},"v":{"docs":{},"df":0,"e":{"docs":{"traits/index.html#trait-solving-new-style":{"tf":1.0},"traits/canonical-queries.html#examples":{"tf":1.0},"tests/adding.html#header-commands-configuring-rustc":{"tf":1.0},"appendix/background.html#appendix-b-background-topics":{"tf":1.0},"high-level-overview.html#crate-structure":{"tf":1.0},"appendix/code-index.html#appendix-d-code-index":{"tf":1.0},"traits/canonical-queries.html#a-trait-query-in-rustc":{"tf":1.0},"compiler-debugging.html#getting-a-backtrace-for-errors":{"tf":1.0},"query.html#cycles-between-queries":{"tf":1.0},"mir/regionck.html#universes-and-skolemized-region-elements":{"tf":1.0},"traits/resolution.html#selection":{"tf":1.0},"appendix/glossary.html#appendix-c-glossary":{"tf":1.4142135623730952},"hir.html#out-of-band-storage-and-the--crate--type":{"tf":1.0},"traits/canonicalization.html#canonicalizing-the-query":{"tf":1.4142135623730952},"how-to-build-and-run.html#create-a-configtoml":{"tf":1.0},"traits/canonicalization.html#processing-the-canonicalized-query-result":{"tf":1.0},"about-this-guide.html#about-this-guide":{"tf":1.0},"traits/goals-and-clauses.html#goals-and-clauses-meta-structure":{"tf":1.0},"traits/lowering-to-logic.html#type-checking-normal-functions":{"tf":1.0},"mir/passes.html#mir-passes":{"tf":1.0},"mir/visitor.html#mir-visitor":{"tf":1.4142135623730952},"query.html#adding-a-new-kind-of-query":{"tf":1.0},"traits/lowering-rules.html#notation":{"tf":1.0},"appendix/stupid-stats.html#compilercalls":{"tf":1.0},"mir/regionck.html#what-is-a-universe":{"tf":1.4142135623730952},"traits/canonical-queries.html#the-traditional-interactive-prolog-query":{"tf":2.0},"mir/regionck.html#representing-the-values-of-a-region-variable":{"tf":1.0},"traits/lowering-rules.html#lowering-rules":{"tf":1.0},"traits/bibliography.html#bibliography":{"tf":1.0},"mir/index.html#key-mir-vocabulary":{"tf":1.0},"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.4142135623730952},"tests/intro.html#compiletest-test-suites":{"tf":1.0},"tests/intro.html#the-compiler-testing-framework":{"tf":1.0},"tests/adding.html#naming-your-test":{"tf":1.0},"traits/associated-types.html#integration-with-unification":{"tf":1.4142135623730952},"rustc-driver.html#the-rustc-driver":{"tf":1.0},"traits/lowering-to-logic.html#rust-traits-and-logic":{"tf":1.0}},"df":37,"n":{"docs":{"diag.html#error-messages":{"tf":1.4142135623730952},"query.html#how-the-compiler-executes-a-query":{"tf":1.0},"traits/canonical-queries.html#a-trait-query-in-rustc":{"tf":1.0},"traits/canonical-queries.html#the-traditional-interactive-prolog-query":{"tf":1.0},"hir.html#out-of-band-storage-and-the--crate--type":{"tf":1.0},"traits/resolution.html#candidate-assembly":{"tf":1.0},"rustdoc.html#dotting-is-and-crossing-ts":{"tf":1.0},"mir/passes.html#mir-passes":{"tf":1.0},"traits/lowering-rules.html#associated-type-values":{"tf":1.0},"traits/lowering-rules.html#lowering-traits":{"tf":1.0},"traits/lowering-rules.html#associated-type-declarations":{"tf":1.0},"appendix/background.html#what-is-a-free-region-or-a-free-variable-what-about-bound-region":{"tf":1.0},"traits/goals-and-clauses.html#coinductive-goals":{"tf":1.0},"traits/associated-types.html#associated-type-projection-and-normalization":{"tf":1.0},"variance.html#trait-variance-and-vtable-resolution":{"tf":1.7320508075688773},"mir/regionck.html#skolemization-and-universes":{"tf":1.0},"rustdoc.html#cheat-sheet":{"tf":1.0},"compiletest.html#adding-a-new-header-command":{"tf":1.0},"incremental-compilation.html#the-try-mark-green-algorithm":{"tf":1.0},"mir/regionck.html#mir-based-region-checking-nll":{"tf":1.0},"traits/lowering-rules.html#notation":{"tf":1.0},"traits/lowering-module.html#the--program_clauses_for--query":{"tf":1.0},"query.html#queries-demand-driven-compilation":{"tf":1.0},"traits/goals-and-clauses.html#domain-goals":{"tf":2.8284271247461905},"incrcomp-debugging.html#dumping-the-graph":{"tf":1.0},"appendix/glossary.html#appendix-c-glossary":{"tf":1.4142135623730952},"rustdoc.html#hot-potato":{"tf":1.0},"hir.html#hir-bodies":{"tf":1.0},"macro-expansion.html#the-macro-parser":{"tf":1.0},"traits/specialization.html#specialization":{"tf":1.7320508075688773},"traits/lowering-rules.html#rule-names-and-cross-references":{"tf":1.0},"traits/associated-types.html#projection-equality":{"tf":1.0},"traits/lowering-rules.html#lowering-impls":{"tf":1.0}},"df":33}}}}},"v":{"docs":{"traits/canonical-queries.html#examples":{"tf":1.7320508075688773},"high-level-overview.html#crate-structure":{"tf":1.7320508075688773},"mir/passes.html#stealing":{"tf":1.0},"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.4142135623730952},"traits/resolution.html#major-concepts":{"tf":1.4142135623730952}},"df":5,"i":{"docs":{},"df":0,"c":{"docs":{},"df":0,"e":{"docs":{"traits/goals-and-clauses.html#domain-goals":{"tf":1.4142135623730952},"type-inference.html#region-constraints":{"tf":1.0}},"df":2}},"a":{"docs":{"traits/associated-types.html#projection-equality":{"tf":1.0},"conventions.html#how-to-structure-your-pr":{"tf":1.0},"type-inference.html#subtyping-obligations":{"tf":1.0},"tests/intro.html#testing-on-emulators":{"tf":1.0},"miri.html#datastructures":{"tf":1.0},"the-parser.html#the-parser":{"tf":1.0},"miri.html#interpretation":{"tf":1.0},"rustdoc.html#from-clean-to-crate":{"tf":1.4142135623730952},"variance.html#variance-and-object-types":{"tf":1.0},"hir.html#the-hir-map":{"tf":1.7320508075688773},"appendix/glossary.html#appendix-c-glossary":{"tf":1.0},"traits/resolution.html#selection":{"tf":1.4142135623730952},"miri.html#miri":{"tf":1.0},"incremental-compilation.html#improvements-to-the-basic-algorithm":{"tf":1.0},"tests/intro.html#other-tests":{"tf":1.0},"const-eval.html#constant-evaluation":{"tf":1.4142135623730952},"traits/resolution.html#candidate-assembly":{"tf":1.0},"param_env.html#parameter-environment":{"tf":1.4142135623730952},"mir/visitor.html#mir-visitor":{"tf":1.0},"hir.html#identifiers-in-the-hir":{"tf":1.0}},"df":20},"s":{"docs":{},"df":0,"i":{"docs":{},"df":0,"b":{"docs":{},"df":0,"l":{"docs":{"name-resolution.html#scopes-and-ribs":{"tf":2.23606797749979},"mir/regionck.html#skolemization-and-outlives-constraints":{"tf":1.0},"rustdoc.html#from-crate-to-clean":{"tf":1.0},"mir/regionck.html#what-is-a-universe":{"tf":1.4142135623730952},"mir/regionck.html#final-example":{"tf":1.0}},"df":5}},"t":{"docs":{"the-parser.html#the-parser":{"tf":1.0},"incremental-compilation.html#the-try-mark-green-algorithm":{"tf":1.0},"type-checking.html#type-collection":{"tf":1.0},"incremental-compilation.html#the-query-dag":{"tf":1.4142135623730952},"mir/visitor.html#mir-visitor":{"tf":1.0}},"df":5,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"v":{"docs":{},"df":0,"i":{"docs":{},"df":0,"s":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"<":{"docs":{},"df":0,"'":{"docs":{},"df":0,"v":{"docs":{"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.0}},"df":1}}}}}}}}}},"w":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{},"df":0,"k":{"docs":{},"df":0,"_":{"docs":{},"df":0,"m":{"docs":{},"df":0,"a":{"docs":{},"df":0,"c":{"docs":{},"df":0,"(":{"docs":{},"df":0,"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"l":{"docs":{},"df":0,"f":{"docs":{"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.0}},"df":1}}}}}}}},"c":{"docs":{},"df":0,"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"(":{"docs":{},"df":0,"&":{"docs":{},"df":0,"m":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.0}},"df":1}}}}}}}}}},"i":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"m":{"docs":{},"df":0,"(":{"docs":{},"df":0,"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"l":{"docs":{},"df":0,"f":{"docs":{"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}},"_":{"docs":{},"df":0,"a":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,".":{"docs":{},"df":0,"r":{"docs":{"rustdoc.html#from-crate-to-clean":{"tf":1.0}},"df":1}},":":{"docs":{},"df":0,":":{"docs":{},"df":0,"r":{"docs":{},"df":0,"u":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"d":{"docs":{},"df":0,"o":{"docs":{},"df":0,"c":{"docs":{},"df":0,"v":{"docs":{},"df":0,"i":{"docs":{},"df":0,"s":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{"rustdoc.html#from-crate-to-clean":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"m":{"docs":{"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.0}},"df":1,"(":{"docs":{},"df":0,"&":{"docs":{},"df":0,"m":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.0}},"df":1}}}}}}}}},"m":{"docs":{},"df":0,"a":{"docs":{},"df":0,"c":{"docs":{"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.0}},"df":1,"(":{"docs":{},"df":0,"&":{"docs":{},"df":0,"m":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.0}},"df":1}}}}}}}},"f":{"docs":{},"df":0,"o":{"docs":{},"df":0,"o":{"docs":{"mir/visitor.html#mir-visitor":{"tf":1.0}},"df":1,"(":{"docs":{},"df":0,"&":{"docs":{},"df":0,"m":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{"mir/visitor.html#mir-visitor":{"tf":1.0}},"df":1}}}}}}}},"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"m":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{"mir/visitor.html#mir-visitor":{"tf":1.0}},"df":1}}}}}}},"o":{"docs":{},"df":0,"r":{"docs":{"mir/visitor.html#mir-visitor":{"tf":3.1622776601683797},"mir/passes.html#implementing-and-registering-a-pass":{"tf":1.4142135623730952},"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.7320508075688773},"mir/visitor.html#traversal":{"tf":1.0}},"df":4,".":{"docs":{},"df":0,"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"m":{"docs":{},"df":0,"p":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"_":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"g":{"docs":{},"df":0,"_":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}},"p":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{},"df":0,"l":{"docs":{},"df":0,"n":{"docs":{},"df":0,"_":{"docs":{},"df":0,"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"u":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}},"o":{"docs":{},"df":0,"n":{"docs":{"query.html#queries-demand-driven-compilation":{"tf":1.4142135623730952}},"df":1}}}},"r":{"docs":{},"df":0,"t":{"docs":{},"df":0,"u":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{"const-eval.html#constant-evaluation":{"tf":1.0},"variance.html#variance-and-object-types":{"tf":1.0},"variance.html#addendum-variance-on-traits":{"tf":1.0},"miri.html#datastructures":{"tf":1.0},"miri.html#interpretation":{"tf":1.4142135623730952},"miri.html#miri":{"tf":2.0}},"df":6}}}}},"e":{"docs":{},"df":0,"w":{"docs":{"compiler-debugging.html#formatting-graphviz-output-dot-files":{"tf":1.0},"mir/passes.html#seeing-how-the-mir-changes-as-the-compiler-executes":{"tf":1.0},"appendix/stupid-stats.html#appendix-a-a-tutorial-on-creating-a-drop-in-replacement-for-rustc":{"tf":1.0},"type-inference.html#region-constraints":{"tf":1.0},"mir/index.html#key-mir-vocabulary":{"tf":1.0},"hir.html#the-hir":{"tf":1.0}},"df":6,"e":{"docs":{},"df":0,"r":{"docs":{"compiler-debugging.html#formatting-graphviz-output-dot-files":{"tf":1.0}},"df":1}}}}},".":{"docs":{},"df":0,"p":{"docs":{},"df":0,"u":{"docs":{},"df":0,"s":{"docs":{},"df":0,"h":{"docs":{},"df":0,"(":{"docs":{},"df":0,"(":{"docs":{},"df":0,"*":{"docs":{},"df":0,"e":{"docs":{},"df":0,")":{"docs":{},"df":0,".":{"docs":{},"df":0,"c":{"docs":{},"df":0,"l":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{"traits/resolution.html#major-concepts":{"tf":1.0}},"df":1}}}}}}}}}}}}}}},"1":{"docs":{"variance.html#the-algorithm":{"tf":1.0},"mir/regionck.html#extending-the-universal-regions-check":{"tf":1.4142135623730952},"mir/regionck.html#back-to-our-example":{"tf":2.23606797749979},"mir/regionck.html#skolemization-and-outlives-constraints":{"tf":2.0},"mir/regionck.html#final-example":{"tf":2.23606797749979}},"df":5,".":{"docs":{},"df":0,"x":{"docs":{},"df":0,"f":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"m":{"docs":{},"df":0,"(":{"docs":{},"df":0,"v":{"docs":{},"df":0,"2":{"docs":{"variance.html#the-algorithm":{"tf":1.0}},"df":1}}}}}}}}}},"2":{"docs":{"mir/regionck.html#skolemization-and-outlives-constraints":{"tf":1.7320508075688773},"mir/regionck.html#final-example":{"tf":2.6457513110645909},"variance.html#the-algorithm":{"tf":1.0}},"df":3},"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{"type-inference.html#extracting-region-constraints":{"tf":1.0},"mir/visitor.html#mir-visitor":{"tf":1.0},"compiler-debugging.html#getting-logging-output":{"tf":1.4142135623730952},"hir.html#identifiers-in-the-hir":{"tf":1.0},"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.7320508075688773},"traits/canonicalization.html#canonicalization":{"tf":1.0},"appendix/glossary.html#appendix-c-glossary":{"tf":1.4142135623730952},"compiletest.html#introduction":{"tf":1.0},"traits/caching.html#where-clauses-and-the-local-vs-global-cache":{"tf":1.4142135623730952},"diag.html#declaring-a-lint":{"tf":1.0},"appendix/background.html#what-is-a-control-flow-graph":{"tf":1.0},"appendix/stupid-stats.html#appendix-a-a-tutorial-on-creating-a-drop-in-replacement-for-rustc":{"tf":1.0},"mir/regionck.html#final-example":{"tf":1.0},"rustc-driver.html#the-rustc-driver":{"tf":1.0},"traits/lowering-to-logic.html#lowering-to-logic":{"tf":1.0},"tests/adding.html#comment-explaining-what-the-test-is-about":{"tf":1.4142135623730952},"incremental-compilation.html#improvements-to-the-basic-algorithm":{"tf":1.0},"tests/running.html#running-tests":{"tf":1.4142135623730952},"mir/index.html#the-mir-mid-level-ir":{"tf":1.0},"high-level-overview.html#the-main-stages-of-compilation":{"tf":1.0},"how-to-build-and-run.html#running-xpy-and-building-a-stage1-compiler":{"tf":1.0},"traits/lowering-to-logic.html#type-checking-normal-functions":{"tf":1.0}},"df":22,"f":{"docs":{"traits/canonicalization.html#processing-the-canonicalized-query-result":{"tf":1.0}},"df":1,"i":{"docs":{"type-inference.html#region-constraints":{"tf":1.0},"traits/goals-and-clauses.html#domain-goals":{"tf":1.0},"traits/resolution.html#major-concepts":{"tf":1.0},"tests/intro.html#other-tests":{"tf":1.4142135623730952}},"df":4}}},"b":{"docs":{},"df":0,"o":{"docs":{},"df":0,"s":{"docs":{"compiler-debugging.html#getting-a-backtrace-for-errors":{"tf":1.0},"tests/adding.html#revisions":{"tf":1.0}},"df":2}}},"s":{"docs":{},"df":0,"u":{"docs":{"conventions.html#prefer-exhaustive-matches":{"tf":1.0},"conventions.html#how-to-structure-your-pr":{"tf":1.0}},"df":2},"a":{"docs":{"traits/goals-and-clauses.html#domain-goals":{"tf":1.4142135623730952},"type-inference.html#region-constraints":{"tf":1.0}},"df":2},"i":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{"traits/lowering-to-logic.html#source":{"tf":1.0},"conventions.html#copyright-notice":{"tf":1.0},"traits/caching.html#an-example":{"tf":1.0},"how-to-build-and-run.html#creating-a-rustup-toolchain":{"tf":1.4142135623730952},"hir.html#identifiers-in-the-hir":{"tf":1.4142135623730952},"tests/adding.html#other-header-commands":{"tf":1.4142135623730952},"high-level-overview.html#the-main-stages-of-compilation":{"tf":1.0},"how-to-build-and-run.html#running-xpy-and-building-a-stage1-compiler":{"tf":2.23606797749979},"compiletest.html#adding-a-new-header-command":{"tf":1.0}},"df":9}}}}},"c":{"docs":{"traits/canonical-queries.html#examples":{"tf":1.4142135623730952},"type-inference.html#type-inference":{"tf":1.0},"mir/index.html#key-mir-vocabulary":{"tf":1.7320508075688773},"appendix/glossary.html#appendix-c-glossary":{"tf":1.0},"compiletest.html#adding-a-new-header-command":{"tf":1.4142135623730952}},"df":5,"t":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{"traits/canonicalization.html#canonicalizing-the-query":{"tf":1.0},"traits/canonicalization.html#processing-the-canonicalized-query-result":{"tf":1.0},"mir/index.html#mir-data-types":{"tf":1.7320508075688773},"incremental-compilation.html#the-try-mark-green-algorithm":{"tf":1.0},"traits/lowering-module.html#the--program_clauses_for--query":{"tf":1.0},"traits/canonical-queries.html#examples":{"tf":1.7320508075688773},"variance.html#trait-variance-and-vtable-resolution":{"tf":1.4142135623730952}},"df":7}}},":":{"docs":{},"df":0,":":{"docs":{},"df":0,"n":{"docs":{},"df":0,"e":{"docs":{},"df":0,"w":{"docs":{"mir/index.html#key-mir-vocabulary":{"tf":2.0},"traits/resolution.html#major-concepts":{"tf":1.0}},"df":2}}}}},"<":{"docs":{},"df":0,"u":{"docs":{"appendix/glossary.html#appendix-c-glossary":{"tf":1.0}},"df":1,"s":{"docs":{"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.0}},"df":1}},"f":{"docs":{},"df":0,"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"m":{"docs":{"miri.html#interpretation":{"tf":1.0}},"df":1}}}},"a":{"docs":{"traits/lowering-rules.html#notation":{"tf":1.0}},"df":1},"i":{"docs":{},"df":0,"s":{"docs":{"traits/resolution.html#selection-during-translation":{"tf":1.0},"traits/resolution.html#major-concepts":{"tf":1.0}},"df":2},"3":{"docs":{},"df":0,"2":{"docs":{"traits/canonical-queries.html#a-trait-query-in-rustc":{"tf":1.0},"traits/canonical-queries.html#the-traditional-interactive-prolog-query":{"tf":2.0}},"df":2}}},"(":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"r":{"docs":{"compiletest.html#adding-a-new-header-command":{"tf":1.4142135623730952}},"df":1}}}},"x":{"docs":{"traits/canonicalization.html#executing-the-query":{"tf":1.0}},"df":1},"_":{"docs":{"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.0},"traits/canonical-queries.html#examples":{"tf":1.4142135623730952}},"df":2},"?":{"docs":{"traits/canonicalization.html#canonicalizing-the-query-result":{"tf":1.4142135623730952},"traits/canonicalization.html#executing-the-query":{"tf":1.0}},"df":2,"c":{"docs":{"traits/canonicalization.html#processing-the-canonicalized-query-result":{"tf":1.4142135623730952}},"df":1},"0":{"docs":{"traits/canonicalization.html#processing-the-canonicalized-query-result":{"tf":1.0},"traits/canonicalization.html#canonicalizing-the-query-result":{"tf":1.0}},"df":2},"t":{"docs":{"traits/canonical-queries.html#examples":{"tf":3.3166247903554},"traits/lowering-to-logic.html#rust-traits-and-logic":{"tf":1.0},"traits/canonical-queries.html#a-trait-query-in-rustc":{"tf":1.0}},"df":3},"v":{"docs":{"traits/canonical-queries.html#examples":{"tf":1.7320508075688773}},"df":1},"u":{"docs":{"traits/lowering-to-logic.html#rust-traits-and-logic":{"tf":1.0},"traits/canonical-queries.html#the-traditional-interactive-prolog-query":{"tf":1.0}},"df":2}},"t":{"docs":{"traits/canonical-queries.html#examples":{"tf":1.0},"traits/lowering-to-logic.html#rust-traits-and-logic":{"tf":1.4142135623730952},"traits/chalk-overview.html#lowering":{"tf":1.7320508075688773},"traits/goals-and-clauses.html#domain-goals":{"tf":1.4142135623730952},"traits/associated-types.html#skolemized-associated-types":{"tf":1.0},"appendix/glossary.html#appendix-c-glossary":{"tf":1.0},"traits/resolution.html#major-concepts":{"tf":1.4142135623730952},"traits/resolution.html#selection-during-translation":{"tf":1.0}},"df":8},"b":{"docs":{},"df":0,"o":{"docs":{},"df":0,"x":{"docs":{},"df":0,"<":{"docs":{},"df":0,"i":{"docs":{},"df":0,"3":{"docs":{},"df":0,"2":{"docs":{"traits/canonical-queries.html#the-traditional-interactive-prolog-query":{"tf":1.0}},"df":1}}},"b":{"docs":{},"df":0,"o":{"docs":{},"df":0,"x":{"docs":{},"df":0,"<":{"docs":{},"df":0,"i":{"docs":{},"df":0,"3":{"docs":{},"df":0,"2":{"docs":{"traits/canonical-queries.html#the-traditional-interactive-prolog-query":{"tf":1.0}},"df":1}}},"b":{"docs":{},"df":0,"o":{"docs":{},"df":0,"x":{"docs":{},"df":0,"<":{"docs":{},"df":0,"i":{"docs":{},"df":0,"3":{"docs":{},"df":0,"2":{"docs":{"traits/canonical-queries.html#the-traditional-interactive-prolog-query":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}},".":{"docs":{},"df":0,"p":{"docs":{},"df":0,"u":{"docs":{},"df":0,"s":{"docs":{},"df":0,"h":{"docs":{},"df":0,"(":{"docs":{},"df":0,"2":{"docs":{"mir/index.html#key-mir-vocabulary":{"tf":1.0}},"df":1},"1":{"docs":{"mir/index.html#key-mir-vocabulary":{"tf":1.0}},"df":1}}}}}}},"_":{"docs":{},"df":0,"b":{"docs":{"traits/canonical-queries.html#examples":{"tf":1.4142135623730952}},"df":1}},"!":{"docs":{},"df":0,"[":{"docs":{},"df":0,"\"":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"r":{"docs":{"variance.html#trait-variance-and-vtable-resolution":{"tf":1.0}},"df":1}}}},"u":{"docs":{},"df":0,"8":{"docs":{"miri.html#miri":{"tf":1.4142135623730952}},"df":1}}}}}},"a":{"docs":{},"df":0,"g":{"docs":{},"df":0,"u":{"docs":{"name-resolution.html#todo":{"tf":1.0}},"df":1}},"l":{"docs":{"name-resolution.html#scopes-and-ribs":{"tf":2.449489742783178}},"df":1,"g":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{"tests/intro.html#compiletest-test-suites":{"tf":1.4142135623730952},"how-to-build-and-run.html#create-a-configtoml":{"tf":1.0}},"df":2}}}}},"i":{"docs":{},"df":0,"d":{"docs":{"param_env.html#parameter-environment":{"tf":1.0},"variance.html#the-algorithm":{"tf":1.0},"tests/intro.html#other-tests":{"tf":1.0},"traits/goals-and-clauses.html#coinductive-goals":{"tf":1.0},"tests/intro.html#compiletest-test-suites":{"tf":1.0}},"df":5,"l":{"docs":{},"df":0,"i":{"docs":{"variance.html#variance-and-associated-types":{"tf":1.0}},"df":1}}}},"u":{"docs":{"mir/regionck.html#another-example":{"tf":1.0},"mir/regionck.html#back-to-our-example":{"tf":1.4142135623730952},"query.html#adding-a-new-kind-of-query":{"tf":1.0},"query.html#how-the-compiler-executes-a-query":{"tf":1.0},"incremental-compilation.html#the-basic-algorithm":{"tf":1.0},"mir/index.html#mir-data-types":{"tf":1.4142135623730952},"mir/index.html#key-mir-vocabulary":{"tf":2.0},"incremental-compilation.html#improvements-to-the-basic-algorithm":{"tf":1.0},"mir/borrowck.html#major-phases-of-the-borrow-checker":{"tf":1.0},"compiletest.html#adding-a-new-header-command":{"tf":2.6457513110645909},"method-lookup.html#candidate-assembly":{"tf":1.4142135623730952},"appendix/glossary.html#appendix-c-glossary":{"tf":2.449489742783178},"mir/regionck.html#causal-tracking":{"tf":1.0},"mir/regionck.html#extending-the-universal-regions-check":{"tf":1.0},"traits/canonical-queries.html#examples":{"tf":2.8284271247461905},"miri.html#miri":{"tf":2.0},"mir/regionck.html#representing-the-values-of-a-region-variable":{"tf":2.23606797749979},"query.html#cycles-between-queries":{"tf":1.0},"compiler-debugging.html#expensive-operations-in-logs":{"tf":1.0},"mir/regionck.html#universes-and-skolemized-region-elements":{"tf":1.7320508075688773},"type-inference.html#type-inference":{"tf":1.0},"incremental-compilation.html#the-try-mark-green-algorithm":{"tf":1.0},"ty.html#beyond-types-other-kinds-of-arena-allocated-data-structures":{"tf":1.4142135623730952},"mir/regionck.html#what-is-a-universe":{"tf":1.7320508075688773},"name-resolution.html#namespaces":{"tf":1.0},"type-inference.html#inference-variables":{"tf":1.4142135623730952},"variance.html#trait-variance-and-vtable-resolution":{"tf":1.7320508075688773},"macro-expansion.html#example":{"tf":1.0},"hir.html#out-of-band-storage-and-the--crate--type":{"tf":1.0},"traits/resolution.html#confirmation":{"tf":1.0},"traits/lowering-rules.html#lowering-function-and-constant-declarations":{"tf":1.0},"traits/canonicalization.html#processing-the-canonicalized-query-result":{"tf":3.0},"traits/canonical-queries.html#a-trait-query-in-rustc":{"tf":2.6457513110645909},"traits/lowering-rules.html#function-and-constant-values":{"tf":1.4142135623730952},"mir/borrowck.html#mir-borrow-check":{"tf":1.4142135623730952},"traits/lowering-to-logic.html#rust-traits-and-logic":{"tf":1.0},"traits/canonicalization.html#canonicalization":{"tf":1.0},"mir/regionck.html#final-example":{"tf":1.0},"traits/canonicalization.html#executing-the-query":{"tf":1.7320508075688773},"traits/lowering-rules.html#associated-type-values":{"tf":1.4142135623730952},"compiletest.html#implementing-the-behavior-change":{"tf":2.0},"param_env.html#parameter-environment":{"tf":1.4142135623730952},"name-resolution.html#scopes-and-ribs":{"tf":1.4142135623730952},"traits/canonicalization.html#canonicalizing-the-query":{"tf":1.0},"miri.html#datastructures":{"tf":1.4142135623730952},"miri.html#interpretation":{"tf":1.0},"type-inference.html#enforcing-equality--subtyping":{"tf":1.0},"mir/regionck.html#mir-based-region-checking-nll":{"tf":1.0},"type-inference.html#lexical-region-resolution":{"tf":1.0},"traits/goals-and-clauses.html#coinductive-goals":{"tf":1.4142135623730952},"variance.html#variance-and-object-types":{"tf":1.4142135623730952},"traits/canonicalization.html#canonicalizing-the-query-result":{"tf":2.0},"traits/canonical-queries.html#the-traditional-interactive-prolog-query":{"tf":1.0},"const-eval.html#constant-evaluation":{"tf":1.4142135623730952}},"df":54,"e":{"docs":{},"df":0,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"b":{"docs":{},"df":0,"y":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"f":{"docs":{"const-eval.html#constant-evaluation":{"tf":1.0}},"df":1}}},"v":{"docs":{"const-eval.html#constant-evaluation":{"tf":1.0}},"df":1,"a":{"docs":{},"df":0,"l":{"docs":{},"df":0,"(":{"docs":{},"df":0,"p":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{},"df":0,"m":{"docs":{},"df":0,"v":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{},"df":0,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"u":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{},"df":0,"e":{"docs":{},"df":0,"f":{"docs":{"miri.html#miri":{"tf":1.0}},"df":1}}}}},"b":{"docs":{},"df":0,"y":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"(":{"docs":{},"df":0,"4":{"docs":{},"df":0,"0":{"docs":{},"df":0,"5":{"docs":{},"df":0,"4":{"docs":{"miri.html#miri":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}}},"p":{"docs":{},"df":0,"a":{"docs":{},"df":0,"i":{"docs":{},"df":0,"r":{"docs":{"const-eval.html#constant-evaluation":{"tf":1.0}},"df":1,"(":{"docs":{},"df":0,"p":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{},"df":0,"m":{"docs":{},"df":0,"v":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{},"df":0,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"b":{"docs":{},"df":0,"y":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"(":{"docs":{},"df":0,"4":{"docs":{},"df":0,"0":{"docs":{},"df":0,"5":{"docs":{},"df":0,"4":{"docs":{"miri.html#miri":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"df":0,"[":{"docs":{},"df":0,"2":{"docs":{"traits/canonicalization.html#processing-the-canonicalized-query-result":{"tf":1.0}},"df":1}}},"(":{"docs":{},"df":0,"v":{"docs":{},"df":0,"2":{"docs":{"mir/regionck.html#skolemization-and-outlives-constraints":{"tf":1.4142135623730952}},"df":1},"1":{"docs":{"mir/regionck.html#skolemization-and-outlives-constraints":{"tf":1.7320508075688773}},"df":1}}},"'":{"docs":{"appendix/glossary.html#appendix-c-glossary":{"tf":1.0}},"df":1}}}},"r":{"docs":{"traits/canonical-queries.html#examples":{"tf":1.4142135623730952},"traits/canonical-queries.html#a-trait-query-in-rustc":{"tf":1.4142135623730952}},"df":2,"_":{"docs":{},"df":0,"v":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{},"df":0,"u":{"docs":{"traits/canonicalization.html#canonicalizing-the-query-result":{"tf":1.7320508075688773},"traits/canonicalization.html#processing-the-canonicalized-query-result":{"tf":1.4142135623730952}},"df":2}}}}},"i":{"docs":{"traits/canonical-queries.html#a-trait-query-in-rustc":{"tf":1.0},"traits/caching.html#where-clauses-and-the-local-vs-global-cache":{"tf":1.0},"variance.html#addendum-variance-on-traits":{"tf":1.0}},"df":3,"b":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{"traits/canonicalization.html#canonicalizing-the-query":{"tf":1.0}},"df":1}}},"o":{"docs":{},"df":0,"u":{"docs":{"hir.html#the-hir-map":{"tf":1.0},"traits/implied-bounds.html#implied-bounds":{"tf":1.0},"type-inference.html#inference-variables":{"tf":1.0},"tests/adding.html#adding-new-tests":{"tf":1.0},"traits/hrtb.html#higher-ranked-trait-obligations":{"tf":1.0},"query.html#how-the-compiler-executes-a-query":{"tf":1.0},"tests/intro.html#other-tests":{"tf":1.0},"query.html#adding-a-new-kind-of-query":{"tf":1.0},"high-level-overview.html#crate-structure":{"tf":1.4142135623730952},"type-inference.html#region-constraints":{"tf":1.0},"compiletest.html#introduction":{"tf":1.0},"type-checking.html#type-collection":{"tf":1.0},"appendix/glossary.html#appendix-c-glossary":{"tf":1.7320508075688773},"incrcomp-debugging.html#testing-the-dependency-graph":{"tf":1.0},"traits/wf.html#well-formedness-checking":{"tf":1.0},"type-inference.html#type-inference":{"tf":1.0},"type-inference.html#snapshots":{"tf":1.0},"the-parser.html#the-parser":{"tf":1.0},"high-level-overview.html#the-main-stages-of-compilation":{"tf":1.0},"ty.html#allocating-and-working-with-types":{"tf":1.7320508075688773},"query.html#queries-demand-driven-compilation":{"tf":1.0},"variance.html#trait-variance-and-vtable-resolution":{"tf":1.0},"rustdoc.html#dotting-is-and-crossing-ts":{"tf":1.0},"ty.html#beyond-types-other-kinds-of-arena-allocated-data-structures":{"tf":1.0},"rustc-driver.html#the-rustc-driver":{"tf":1.4142135623730952},"compiler-debugging.html#formatting-graphviz-output-dot-files":{"tf":1.0},"macro-expansion.html#the-macro-parser":{"tf":1.0}},"df":27}},"a":{"docs":{},"df":0,"t":{"docs":{"traits/resolution.html#confirmation":{"tf":1.0}},"df":1},"n":{"docs":{},"df":0,"t":{"docs":{"traits/canonicalization.html#processing-the-canonicalized-query-result":{"tf":1.0},"traits/lowering-to-logic.html#lowering-to-logic":{"tf":1.0},"conventions.html#prefer-exhaustive-matches":{"tf":1.7320508075688773},"query.html#adding-a-new-kind-of-query":{"tf":1.0},"high-level-overview.html#the-main-stages-of-compilation":{"tf":1.0},"ty.html#allocating-and-working-with-types":{"tf":1.0},"appendix/glossary.html#appendix-c-glossary":{"tf":1.0},"const-eval.html#constant-evaluation":{"tf":1.4142135623730952},"mir/index.html#mir-data-types":{"tf":1.0},"incremental-compilation.html#incremental-compilation":{"tf":1.0}},"df":10},"c":{"docs":{"variance.html#addendum-variance-on-traits":{"tf":2.449489742783178},"appendix/glossary.html#appendix-c-glossary":{"tf":2.0},"variance.html#trait-variance-and-vtable-resolution":{"tf":2.0},"variance.html#variance-and-associated-types":{"tf":1.4142135623730952},"variance.html#variance-and-object-types":{"tf":1.7320508075688773},"variance.html#the-algorithm":{"tf":3.7416573867739415},"variance.html#variance-of-type-and-lifetime-parameters":{"tf":3.4641016151377546},"variance.html#constraints":{"tf":2.0},"appendix/background.html#what-is-co--and-contra-variance":{"tf":2.0},"variance.html#dependency-graph-management":{"tf":2.23606797749979}},"df":10,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"_":{"docs":{},"df":0,"o":{"docs":{},"df":0,"f":{"docs":{"variance.html#dependency-graph-management":{"tf":1.7320508075688773}},"df":1}}}}}}},"b":{"docs":{"mir/regionck.html#mir-based-region-checking-nll":{"tf":1.0}},"df":1,"l":{"docs":{"traits/hrtb.html#higher-ranked-trait-obligations":{"tf":1.0},"traits/resolution.html#selection":{"tf":1.0},"traits/canonicalization.html#canonicalization":{"tf":2.8284271247461905},"mir/regionck.html#causal-tracking":{"tf":1.0},"ty.html#allocating-and-working-with-types":{"tf":1.4142135623730952},"type-inference.html#lexical-region-resolution":{"tf":1.7320508075688773},"mir/regionck.html#mir-based-region-checking-nll":{"tf":2.0},"type-checking.html#type-collection":{"tf":1.0},"traits/canonical-queries.html#examples":{"tf":2.23606797749979},"traits/specialization.html#specialization":{"tf":1.0},"name-resolution.html#scopes-and-ribs":{"tf":1.4142135623730952},"mir/regionck.html#subtyping-and-skolemization":{"tf":1.0},"name-resolution.html#namespaces":{"tf":1.4142135623730952},"mir/index.html#key-mir-vocabulary":{"tf":2.8284271247461905},"appendix/background.html#what-is-a-free-region-or-a-free-variable-what-about-bound-region":{"tf":3.0},"appendix/glossary.html#appendix-c-glossary":{"tf":3.605551275463989},"type-inference.html#a-note-on-terminology":{"tf":1.4142135623730952},"method-lookup.html#method-lookup":{"tf":1.4142135623730952},"variance.html#the-algorithm":{"tf":1.4142135623730952},"mir/regionck.html#skolemization-and-outlives-constraints":{"tf":1.7320508075688773},"type-inference.html#subtyping-obligations":{"tf":1.7320508075688773},"traits/canonicalization.html#processing-the-canonicalized-query-result":{"tf":2.449489742783178},"traits/canonicalization.html#canonicalizing-the-query":{"tf":2.23606797749979},"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.0},"traits/associated-types.html#associated-type-projection-and-normalization":{"tf":1.0},"incrcomp-debugging.html#tracking-down-incorrect-edges":{"tf":1.0},"traits/canonicalization.html#executing-the-query":{"tf":2.449489742783178},"mir/borrowck.html#major-phases-of-the-borrow-checker":{"tf":1.0},"incrcomp-debugging.html#dumping-the-graph":{"tf":1.4142135623730952},"mir/regionck.html#final-example":{"tf":1.4142135623730952},"mir/regionck.html#universes-and-skolemized-region-elements":{"tf":2.23606797749979},"miri.html#interpretation":{"tf":1.4142135623730952},"macro-expansion.html#example":{"tf":1.4142135623730952},"traits/hrtb.html#basic-matching-and-skolemization-leaks":{"tf":2.0},"traits/associated-types.html#integration-with-unification":{"tf":1.0},"mir/regionck.html#representing-the-values-of-a-region-variable":{"tf":1.4142135623730952},"mir/borrowck.html#mir-borrow-check":{"tf":1.0},"type-inference.html#inference-variables":{"tf":3.4641016151377546},"traits/resolution.html#selection-during-translation":{"tf":1.0},"type-inference.html#enforcing-equality--subtyping":{"tf":1.0},"traits/caching.html#an-example":{"tf":1.4142135623730952},"traits/caching.html#caching-and-subtle-considerations-therewith":{"tf":1.4142135623730952},"traits/resolution.html#candidate-assembly":{"tf":2.0},"compiler-debugging.html#getting-logging-output":{"tf":1.0},"miri.html#allocations":{"tf":1.4142135623730952},"mir/regionck.html#region-variables-and-constraints":{"tf":1.4142135623730952},"type-inference.html#extracting-region-constraints":{"tf":1.0},"traits/canonical-queries.html#the-traditional-interactive-prolog-query":{"tf":1.0},"mir/index.html#mir-data-types":{"tf":1.7320508075688773},"traits/canonicalization.html#canonicalizing-the-query-result":{"tf":2.23606797749979},"mir/regionck.html#extending-the-universal-regions-check":{"tf":1.0},"traits/canonical-queries.html#a-trait-query-in-rustc":{"tf":1.4142135623730952},"mir/regionck.html#what-is-a-universe":{"tf":2.6457513110645909},"rustdoc.html#from-soup-to-nuts":{"tf":1.0},"mir/regionck.html#back-to-our-example":{"tf":1.0},"mir/regionck.html#another-example":{"tf":2.0}},"df":56,"e":{"docs":{},"df":0,"'":{"docs":{"mir/regionck.html#what-is-a-universe":{"tf":1.0}},"df":1}}}}},"e":{"docs":{},"df":0,"t":{"docs":{},"df":0,"i":{"docs":{"type-inference.html#inference-variables":{"tf":1.0},"tests/intro.html#the-compiler-testing-framework":{"tf":1.0}},"df":2}}}}}},"v":{"docs":{"how-to-build-and-run.html#creating-a-rustup-toolchain":{"tf":1.4142135623730952}},"df":1},"s":{"docs":{"mir/regionck.html#region-variables-and-constraints":{"tf":1.0},"name-resolution.html#namespaces":{"tf":1.4142135623730952},"mir/regionck.html#back-to-our-example":{"tf":2.0},"appendix/background.html#what-is-a-free-region-or-a-free-variable-what-about-bound-region":{"tf":1.0},"traits/caching.html#where-clauses-and-the-local-vs-global-cache":{"tf":1.4142135623730952},"conventions.html#tabs-vs-spaces":{"tf":1.4142135623730952}},"df":6},"3":{"docs":{"mir/regionck.html#final-example":{"tf":3.1622776601683797},"variance.html#the-algorithm":{"tf":1.0}},"df":2},"o":{"docs":{},"df":0,"i":{"docs":{},"df":0,"l":{"docs":{},"df":0,"a":{"docs":{"incrcomp-debugging.html#tracking-down-incorrect-edges":{"tf":1.0}},"df":1}}},"l":{"docs":{},"df":0,"u":{"docs":{},"df":0,"m":{"docs":{"traits/bibliography.html#bibliography":{"tf":1.0}},"df":1}}},"c":{"docs":{},"df":0,"a":{"docs":{},"df":0,"b":{"docs":{},"df":0,"u":{"docs":{},"df":0,"l":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{"mir/index.html#key-mir-vocabulary":{"tf":1.4142135623730952}},"df":1}}}}}}}}},"(":{"docs":{},"df":0,"b":{"docs":{"variance.html#the-algorithm":{"tf":1.4142135623730952}},"df":1},"c":{"docs":{"variance.html#the-algorithm":{"tf":1.4142135623730952}},"df":1,")":{"docs":{},"df":0,"=":{"docs":{},"df":0,"o":{"docs":{"variance.html#the-algorithm":{"tf":1.0}},"df":1}}}},"x":{"docs":{"variance.html#the-algorithm":{"tf":1.7320508075688773}},"df":1},"a":{"docs":{"variance.html#the-algorithm":{"tf":1.4142135623730952}},"df":1}},"_":{"docs":{"variance.html#trait-variance-and-vtable-resolution":{"tf":2.0}},"df":1,"o":{"docs":{"variance.html#trait-variance-and-vtable-resolution":{"tf":2.0}},"df":1}},"t":{"docs":{},"df":0,"a":{"docs":{},"df":0,"b":{"docs":{},"df":0,"l":{"docs":{"variance.html#trait-variance-and-vtable-resolution":{"tf":1.4142135623730952},"variance.html#addendum-variance-on-traits":{"tf":1.4142135623730952}},"df":2}}}}},"o":{"docs":{"variance.html#the-algorithm":{"tf":1.4142135623730952},"variance.html#variance-of-type-and-lifetime-parameters":{"tf":1.0},"variance.html#variance-and-object-types":{"tf":1.0},"compiler-debugging.html#debugging-llvm":{"tf":1.4142135623730952},"high-level-overview.html#the-main-stages-of-compilation":{"tf":1.4142135623730952},"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.4142135623730952}},"df":6,"l":{"docs":{},"df":0,"d":{"docs":{"traits/caching.html#an-example":{"tf":1.0},"traits/hrtb.html#higher-ranked-trait-bounds":{"tf":1.0},"traits/caching.html#caching-and-subtle-considerations-therewith":{"tf":1.0},"traits/caching.html#where-clauses-and-the-local-vs-global-cache":{"tf":1.0},"traits/hrtb.html#higher-ranked-trait-obligations":{"tf":1.0},"traits/specialization.html#specialization":{"tf":1.0},"traits/hrtb.html#basic-matching-and-skolemization-leaks":{"tf":1.0},"traits/resolution.html#trait-resolution-old-style":{"tf":1.4142135623730952}},"df":8,"e":{"docs":{},"df":0,"r":{"docs":{"traits/associated-types.html#integration-with-unification":{"tf":1.0},"how-to-build-and-run.html#running-xpy-and-building-a-stage1-compiler":{"tf":1.7320508075688773}},"df":2}}}},"d":{"docs":{},"df":0,"i":{"docs":{},"df":0,"r":{"docs":{"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":2.0}},"df":1}}},"k":{"docs":{"traits/goals-and-clauses.html#coinductive-goals":{"tf":1.4142135623730952},"conventions.html#how-to-structure-your-pr":{"tf":1.0},"incrcomp-debugging.html#testing-the-dependency-graph":{"tf":1.0},"type-inference.html#trying-equality":{"tf":1.4142135623730952},"variance.html#trait-variance-and-vtable-resolution":{"tf":1.4142135623730952},"mir/regionck.html#back-to-our-example":{"tf":1.0},"traits/lowering-to-logic.html#type-checking-normal-functions":{"tf":1.4142135623730952},"traits/canonicalization.html#executing-the-query":{"tf":1.0}},"df":8,"a":{"docs":{},"df":0,"y":{"docs":{"traits/goals-and-clauses.html#domain-goals":{"tf":1.0}},"df":1}},"(":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"u":{"docs":{},"df":0,"l":{"docs":{},"df":0,"t":{"docs":{"query.html#cycles-between-queries":{"tf":1.0}},"df":1}}}}}},"s":{"docs":{},"df":0,"o":{"docs":{},"df":0,"m":{"docs":{},"df":0,"e":{"docs":{},"df":0,"(":{"docs":{},"df":0,"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"l":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{"traits/resolution.html#selection":{"tf":1.0}},"df":1}}}}}}}}}}},"n":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{"traits/resolution.html#selection":{"tf":1.0}},"df":1}}}}},"s":{"docs":{"tests/adding.html#ignoring-tests":{"tf":1.0}},"df":1},"w":{"docs":{},"df":0,"n":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"hir.html#hir-bodies":{"tf":1.4142135623730952}},"df":1}}}},"f":{"docs":{},"df":0,"f":{"docs":{},"df":0,"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"t":{"docs":{"hir.html#identifiers-in-the-hir":{"tf":1.0},"miri.html#allocations":{"tf":1.0},"appendix/glossary.html#appendix-c-glossary":{"tf":1.0}},"df":3}}},"e":{"docs":{},"df":0,"r":{"docs":{"tests/intro.html#testing-on-emulators":{"tf":1.0},"conventions.html#formatting-and-the-tidy-script":{"tf":1.0},"query.html#invoking-queries":{"tf":1.0},"appendix/glossary.html#appendix-c-glossary":{"tf":1.0}},"df":4}},"i":{"docs":{},"df":0,"c":{"docs":{},"df":0,"i":{"docs":{"compiler-debugging.html#debugging-llvm":{"tf":1.0},"compiler-debugging.html#getting-logging-output":{"tf":1.0}},"df":2}}}},"i":{"docs":{},"df":0,"l":{"docs":{"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":2.0}},"df":1}},".":{"docs":{},"df":0,".":{"docs":{},"df":0,".":{"docs":{},"df":0,"i":{"docs":{},"df":0,"d":{"docs":{},"df":0,"i":{"docs":{},"df":0,"o":{"docs":{},"df":0,"s":{"docs":{},"df":0,"y":{"docs":{},"df":0,"n":{"docs":{},"df":0,"c":{"docs":{},"df":0,"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{"appendix/glossary.html#appendix-c-glossary":{"tf":1.0}},"df":1}}}}}}}}}}}}}}},"n":{"docs":{"traits/lowering-rules.html#trait-header":{"tf":1.0},"traits/chalk-overview.html#rules":{"tf":1.0},"query.html#adding-a-new-kind-of-query":{"tf":2.23606797749979},"conventions.html#use-todo-comments-for-things-you-dont-want-to-forget":{"tf":1.0},"traits/lowering-to-logic.html#rust-traits-and-logic":{"tf":1.4142135623730952},"compiler-debugging.html#logging-etiquette":{"tf":1.0},"type-inference.html#region-constraints":{"tf":1.0},"traits/resolution.html#candidate-assembly":{"tf":2.23606797749979},"traits/canonicalization.html#canonicalization":{"tf":1.0},"ty.html#allocating-and-working-with-types":{"tf":1.4142135623730952},"name-resolution.html#scopes-and-ribs":{"tf":2.6457513110645909},"hir.html#out-of-band-storage-and-the--crate--type":{"tf":1.4142135623730952},"mir/regionck.html#final-example":{"tf":2.0},"compiler-debugging.html#debugging-llvm":{"tf":1.0},"appendix/stupid-stats.html#appendix-a-a-tutorial-on-creating-a-drop-in-replacement-for-rustc":{"tf":1.0},"traits/associated-types.html#equality-and-associated-types":{"tf":1.4142135623730952},"diag.html#error-messages":{"tf":1.4142135623730952},"diag.html#suggestions":{"tf":1.0},"rustdoc.html#hot-potato":{"tf":1.7320508075688773},"type-inference.html#snapshots":{"tf":1.0},"traits/canonical-queries.html#examples":{"tf":1.0},"query.html#queries-demand-driven-compilation":{"tf":1.0},"method-lookup.html#method-lookup":{"tf":1.4142135623730952},"traits/specialization.html#specialization":{"tf":1.4142135623730952},"mir/regionck.html#mir-based-region-checking-nll":{"tf":1.4142135623730952},"traits/canonicalization.html#canonicalizing-the-query-result":{"tf":1.0},"mir/index.html#key-mir-vocabulary":{"tf":2.0},"how-to-build-and-run.html#creating-a-rustup-toolchain":{"tf":1.0},"rustdoc.html#other-tricks-up-its-sleeve":{"tf":1.0},"compiletest.html#implementing-the-behavior-change":{"tf":1.0},"name-resolution.html#namespaces":{"tf":1.0},"traits/resolution.html#overview":{"tf":1.0},"compiler-debugging.html#getting-logging-output":{"tf":1.0},"rustdoc.html#from-clean-to-crate":{"tf":1.0},"traits/caching.html#where-clauses-and-the-local-vs-global-cache":{"tf":1.0},"name-resolution.html#overall-strategy":{"tf":1.0},"variance.html#variance-and-object-types":{"tf":1.4142135623730952},"traits/caching.html#an-example":{"tf":1.0},"traits/canonical-queries.html#the-traditional-interactive-prolog-query":{"tf":1.0},"tests/adding.html#adding-new-tests":{"tf":1.0},"type-inference.html#extracting-region-constraints":{"tf":1.0},"traits/canonicalization.html#executing-the-query":{"tf":1.0},"mir/regionck.html#extending-the-universal-regions-check":{"tf":1.0},"traits/goals-and-clauses.html#domain-goals":{"tf":1.7320508075688773},"conventions.html#how-to-structure-your-pr":{"tf":1.4142135623730952},"rustdoc.html#from-crate-to-clean":{"tf":1.0},"mir/regionck.html#back-to-our-example":{"tf":1.4142135623730952},"type-inference.html#subtyping-obligations":{"tf":1.4142135623730952},"high-level-overview.html#the-main-stages-of-compilation":{"tf":1.0},"incrcomp-debugging.html#dumping-the-graph":{"tf":1.0},"incremental-compilation.html#the-query-dag":{"tf":1.0},"compiletest.html#adding-a-new-header-command":{"tf":1.0},"compiler-debugging.html#expensive-operations-in-logs":{"tf":1.0},"mir/regionck.html#skolemization-and-outlives-constraints":{"tf":1.0},"tests/adding.html#normalization":{"tf":1.0},"variance.html#addendum-variance-on-traits":{"tf":1.4142135623730952},"tests/adding.html#tests-that-do-not-result-in-compile-errors":{"tf":1.4142135623730952},"mir/passes.html#implementing-and-registering-a-pass":{"tf":1.0},"traits/goals-and-clauses.html#goals-and-clauses-meta-structure":{"tf":1.0},"appendix/background.html#what-is-a-control-flow-graph":{"tf":1.0},"macro-expansion.html#the-macro-parser":{"tf":2.23606797749979},"traits/resolution.html#selection-during-translation":{"tf":1.4142135623730952},"traits/goals-and-clauses.html#coinductive-goals":{"tf":1.0},"query.html#how-the-compiler-executes-a-query":{"tf":2.0},"appendix/glossary.html#appendix-c-glossary":{"tf":1.7320508075688773},"mir/regionck.html#subtyping-and-skolemization":{"tf":1.0},"variance.html#trait-variance-and-vtable-resolution":{"tf":1.0},"traits/chalk-overview.html#lowering":{"tf":1.0},"rustdoc.html#the-walking-tour-of-rustdoc":{"tf":1.0},"method-lookup.html#candidate-assembly":{"tf":1.0},"how-to-build-and-run.html#running-xpy-and-building-a-stage1-compiler":{"tf":1.0},"traits/lowering-to-logic.html#type-checking-normal-functions":{"tf":1.0},"traits/hrtb.html#higher-ranked-trait-bounds":{"tf":1.0},"tests/intro.html#testing-infrastructure":{"tf":1.0},"traits/associated-types.html#associated-type-projection-and-normalization":{"tf":1.7320508075688773},"tests/running.html#running-an-individual-test":{"tf":1.4142135623730952},"mir/regionck.html#what-is-a-universe":{"tf":2.23606797749979},"miri.html#miri":{"tf":1.4142135623730952}},"df":78,"g":{"docs":{},"df":0,"o":{"docs":{"rustc-driver.html#the-rustc-driver":{"tf":1.0},"mir/regionck.html#skolemization-and-universes":{"tf":1.0}},"df":2}},"t":{"docs":{},"df":0,"o":{"docs":{"traits/lowering-to-logic.html#lowering-to-logic":{"tf":1.0},"name-resolution.html#scopes-and-ribs":{"tf":1.0}},"df":2}},"c":{"docs":{"traits/resolution.html#overview":{"tf":1.0},"mir/regionck.html#mir-based-region-checking-nll":{"tf":1.0},"appendix/glossary.html#appendix-c-glossary":{"tf":1.0},"traits/lowering-to-logic.html#type-checking-generic-functions-beyond-horn-clauses":{"tf":1.0},"how-to-build-and-run.html#running-xpy-and-building-a-stage1-compiler":{"tf":1.0},"type-checking.html#type-collection":{"tf":1.0},"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.0},"tests/adding.html#revisions":{"tf":1.7320508075688773},"traits/canonicalization.html#executing-the-query":{"tf":1.0},"how-to-build-and-run.html#creating-a-rustup-toolchain":{"tf":1.0},"high-level-overview.html#the-main-stages-of-compilation":{"tf":1.7320508075688773},"miri.html#miri":{"tf":1.0},"traits/hrtb.html#higher-ranked-trait-obligations":{"tf":1.0},"traits/resolution.html#candidate-assembly":{"tf":1.0},"mir/regionck.html#subtyping-and-skolemization":{"tf":1.0},"ty.html#allocating-and-working-with-types":{"tf":1.0},"type-inference.html#extracting-region-constraints":{"tf":1.4142135623730952},"ty.html#the-tcx-and-how-it-uses-lifetimes":{"tf":1.7320508075688773},"traits/index.html#trait-solving-new-style":{"tf":1.0},"incremental-compilation.html#the-query-dag":{"tf":1.0}},"df":20}},"=":{"docs":{},"df":0,"&":{"docs":{},"df":0,"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"v":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"t":{"docs":{},"df":0,"t":{"docs":{},"df":0,"o":{"docs":{},"df":0,"<":{"docs":{},"df":0,"o":{"docs":{},"df":0,"b":{"docs":{},"df":0,"j":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{"variance.html#variance-and-object-types":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}},"2":{"docs":{"compiler-debugging.html#debugging-llvm":{"tf":1.0}},"df":1},"p":{"docs":{},"df":0,"t":{"docs":{"tests/intro.html#compiletest-test-suites":{"tf":1.0},"compiler-debugging.html#debugging-llvm":{"tf":1.4142135623730952},"tests/adding.html#what-kind-of-test-should-i-add":{"tf":1.0}},"df":3,"=":{"docs":{},"df":0,".":{"docs":{},"df":0,"/":{"docs":{},"df":0,"b":{"docs":{},"df":0,"u":{"docs":{},"df":0,"i":{"docs":{},"df":0,"l":{"docs":{},"df":0,"d":{"docs":{},"df":0,"/":{"docs":{},"df":0,"$":{"docs":{},"df":0,"t":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{},"df":0,"p":{"docs":{},"df":0,"l":{"docs":{},"df":0,"e":{"docs":{},"df":0,"/":{"docs":{},"df":0,"l":{"docs":{},"df":0,"l":{"docs":{},"df":0,"v":{"docs":{},"df":0,"m":{"docs":{},"df":0,"/":{"docs":{},"df":0,"b":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"/":{"docs":{},"df":0,"o":{"docs":{},"df":0,"p":{"docs":{},"df":0,"t":{"docs":{"compiler-debugging.html#debugging-llvm":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{"query.html#adding-a-new-kind-of-query":{"tf":1.0},"mir/passes.html#seeing-how-the-mir-changes-as-the-compiler-executes":{"tf":1.0},"traits/canonical-queries.html#examples":{"tf":1.4142135623730952},"method-lookup.html#steps":{"tf":1.0},"conventions.html#copyright-notice":{"tf":1.0},"tests/running.html#running-an-individual-test":{"tf":1.4142135623730952},"compiler-debugging.html#formatting-graphviz-output-dot-files":{"tf":1.0},"rustdoc.html#other-tricks-up-its-sleeve":{"tf":1.0},"compiletest.html#adding-a-new-header-command":{"tf":1.7320508075688773},"appendix/stupid-stats.html#compilercalls":{"tf":1.0},"how-to-build-and-run.html#running-xpy-and-building-a-stage1-compiler":{"tf":1.4142135623730952},"rustc-driver.html#a-note-on-lifetimes":{"tf":1.0}},"df":12,"<":{"docs":{},"df":0,"n":{"docs":{},"df":0,"o":{"docs":{},"df":0,"d":{"docs":{},"df":0,"e":{"docs":{},"df":0,"i":{"docs":{},"df":0,"d":{"docs":{"hir.html#the-hir-map":{"tf":1.0}},"df":1}},"<":{"docs":{},"df":0,"'":{"docs":{},"df":0,"t":{"docs":{},"df":0,"c":{"docs":{},"df":0,"x":{"docs":{"hir.html#the-hir-map":{"tf":1.0}},"df":1}}}}}}}}},"_":{"docs":{"traits/canonical-queries.html#examples":{"tf":1.4142135623730952}},"df":1},"t":{"docs":{"traits/associated-types.html#skolemized-associated-types":{"tf":1.0},"traits/associated-types.html#associated-type-projection-and-normalization":{"tf":1.7320508075688773}},"df":2},"p":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{},"df":0,"h":{"docs":{"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":2.23606797749979}},"df":1,"b":{"docs":{},"df":0,"u":{"docs":{},"df":0,"f":{"docs":{"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.4142135623730952}},"df":1}}}}}}},"u":{"docs":{},"df":0,"3":{"docs":{},"df":0,"2":{"docs":{"traits/associated-types.html#associated-type-projection-and-normalization":{"tf":1.4142135623730952}},"df":1}},"1":{"docs":{},"df":0,"2":{"docs":{},"df":0,"8":{"docs":{"miri.html#datastructures":{"tf":1.0}},"df":1}}}},"b":{"docs":{"traits/canonical-queries.html#examples":{"tf":1.4142135623730952}},"df":1,"o":{"docs":{},"df":0,"x":{"docs":{},"df":0,"<":{"docs":{},"df":0,"f":{"docs":{},"df":0,"o":{"docs":{},"df":0,"o":{"docs":{"traits/goals-and-clauses.html#coinductive-goals":{"tf":1.7320508075688773}},"df":1}}}}}}},"?":{"docs":{},"df":0,"u":{"docs":{"traits/canonical-queries.html#examples":{"tf":1.4142135623730952}},"df":1},"t":{"docs":{"traits/associated-types.html#associated-type-projection-and-normalization":{"tf":1.0}},"df":1}},"(":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"p":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.0}},"df":1}}}}}},"a":{"docs":{"variance.html#the-algorithm":{"tf":1.0}},"df":1},"v":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"<":{"docs":{},"df":0,"?":{"docs":{},"df":0,"v":{"docs":{"traits/canonical-queries.html#examples":{"tf":1.0}},"df":1}}}}}},"i":{"docs":{},"df":0,"3":{"docs":{},"df":0,"2":{"docs":{"compiletest.html#adding-a-new-header-command":{"tf":1.0}},"df":1}}}},"a":{"docs":{},"df":0,"l":{"docs":{},"df":0,"f":{"docs":{},"df":0,"n":{"docs":{},"df":0,"<":{"docs":{},"df":0,"b":{"docs":{"variance.html#the-algorithm":{"tf":1.0}},"df":1}}}},"m":{"docs":{},"df":0,"a":{"docs":{},"df":0,"p":{"docs":{},"df":0,"<":{"docs":{},"df":0,"c":{"docs":{"variance.html#the-algorithm":{"tf":1.0}},"df":1}}}}}}}}},"m":{"docs":{"variance.html#the-algorithm":{"tf":1.0},"mir/passes.html#implementing-and-registering-a-pass":{"tf":1.4142135623730952},"mir/passes.html#stealing":{"tf":1.4142135623730952},"traits/specialization.html#specialization":{"tf":1.4142135623730952},"tests/intro.html#compiletest-test-suites":{"tf":1.4142135623730952},"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.0},"traits/canonicalization.html#processing-the-canonicalized-query-result":{"tf":1.0},"high-level-overview.html#the-main-stages-of-compilation":{"tf":1.7320508075688773},"mir/index.html#the-mir-mid-level-ir":{"tf":1.0},"mir/optimizations.html#mir-optimizations":{"tf":1.4142135623730952},"mir/passes.html#mir-passes":{"tf":2.23606797749979},"compiler-debugging.html#debugging-llvm":{"tf":2.23606797749979},"const-eval.html#constant-evaluation":{"tf":1.0},"appendix/glossary.html#appendix-c-glossary":{"tf":1.7320508075688773},"how-to-build-and-run.html#running-xpy-and-building-a-stage1-compiler":{"tf":1.4142135623730952}},"df":15,"i":{"docs":{},"df":0,"s":{"docs":{"appendix/stupid-stats.html#overview-of-the-compilation-process":{"tf":1.0}},"df":1},"z":{"docs":{},"df":0,"e":{"docs":{},"df":0,"d":{"docs":{},"df":0,"_":{"docs":{},"df":0,"m":{"docs":{},"df":0,"i":{"docs":{},"df":0,"r":{"docs":{"mir/passes.html#implementing-and-registering-a-pass":{"tf":1.4142135623730952}},"df":1,"(":{"docs":{},"df":0,"d":{"docs":{"mir/passes.html#mir-passes":{"tf":1.4142135623730952}},"df":1,"e":{"docs":{},"df":0,"f":{"docs":{},"df":0,"_":{"docs":{},"df":0,"i":{"docs":{},"df":0,"d":{"docs":{"mir/passes.html#mir-passes":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}},"m":{"docs":{},"df":0,"i":{"docs":{},"df":0,"z":{"docs":{"appendix/glossary.html#appendix-c-glossary":{"tf":1.0}},"df":1}}}},"e":{"docs":{},"df":0,"n":{"docs":{"macro-expansion.html#example":{"tf":1.0},"about-this-guide.html#about-this-guide":{"tf":1.4142135623730952},"tests/intro.html#testing-infrastructure":{"tf":1.0},"traits/bibliography.html#bibliography":{"tf":1.0},"compiler-debugging.html#debugging-the-compiler":{"tf":1.0},"tests/running.html#running-tests":{"tf":1.0},"traits/chalk-overview.html#an-overview-of-chalk":{"tf":1.0},"appendix/glossary.html#appendix-c-glossary":{"tf":1.0},"incrcomp-debugging.html#tracking-down-incorrect-edges":{"tf":1.0},"how-to-build-and-run.html#create-a-configtoml":{"tf":1.0}},"df":10},"r":{"docs":{"appendix/stupid-stats.html#appendix-a-a-tutorial-on-creating-a-drop-in-replacement-for-rustc":{"tf":1.0},"ty.html#allocating-and-working-with-types":{"tf":1.0},"type-inference.html#enforcing-equality--subtyping":{"tf":1.0},"high-level-overview.html#the-main-stages-of-compilation":{"tf":1.7320508075688773},"miri.html#allocations":{"tf":1.0},"type-inference.html#inference-variables":{"tf":1.0},"type-inference.html#snapshots":{"tf":1.4142135623730952},"mir/visitor.html#mir-visitor":{"tf":1.4142135623730952},"const-eval.html#constant-evaluation":{"tf":1.0},"macro-expansion.html#example":{"tf":1.0},"mir/borrowck.html#major-phases-of-the-borrow-checker":{"tf":1.0},"appendix/stupid-stats.html#overview-of-the-compilation-process":{"tf":1.0},"compiler-debugging.html#expensive-operations-in-logs":{"tf":2.0}},"df":13,"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{"mir/index.html#key-mir-vocabulary":{"tf":2.449489742783178},"mir/index.html#mir-data-types":{"tf":1.4142135623730952}},"df":2}}}}},"p":{"docs":{},"df":0,"o":{"docs":{},"df":0,"s":{"docs":{"tests/adding.html#other-header-commands":{"tf":1.0}},"df":1},"r":{"docs":{},"df":0,"t":{"docs":{},"df":0,"u":{"docs":{},"df":0,"n":{"docs":{"appendix/stupid-stats.html#compilercalls":{"tf":1.0}},"df":1,"i":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"i":{"docs":{},"df":0,"c":{"docs":{},"df":0,"_":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"o":{"docs":{},"df":0,"l":{"docs":{},"df":0,"v":{"docs":{},"df":0,"e":{"docs":{},"df":0,"_":{"docs":{},"df":0,"v":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{"type-inference.html#region-constraints":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}}}}}}},"v":{"docs":{"traits/canonicalization.html#canonicalizing-the-query":{"tf":1.4142135623730952}},"df":1,"e":{"docs":{},"df":0,"r":{"docs":{"rustdoc.html#from-crate-to-clean":{"tf":1.0},"high-level-overview.html#crate-structure":{"tf":1.0},"mir/index.html#key-mir-vocabulary":{"tf":1.0},"traits/chalk-overview.html#rules":{"tf":1.0},"hir.html#out-of-band-storage-and-the--crate--type":{"tf":1.4142135623730952},"rustdoc.html#hot-potato":{"tf":1.4142135623730952},"traits/chalk-overview.html#lowering":{"tf":1.0},"mir/regionck.html#extending-the-universal-regions-check":{"tf":1.0},"traits/associated-types.html#associated-type-projection-and-normalization":{"tf":1.0},"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.0},"type-inference.html#inference-variables":{"tf":1.0},"appendix/stupid-stats.html#overview-of-the-compilation-process":{"tf":1.4142135623730952},"traits/resolution.html#candidate-assembly":{"tf":1.0},"variance.html#the-algorithm":{"tf":1.0},"high-level-overview.html#the-main-stages-of-compilation":{"tf":1.0},"mir/regionck.html#skolemization-and-outlives-constraints":{"tf":1.0},"appendix/stupid-stats.html#appendix-a-a-tutorial-on-creating-a-drop-in-replacement-for-rustc":{"tf":1.0},"diag.html#error-messages":{"tf":1.0},"query.html#adding-a-new-kind-of-query":{"tf":1.0},"ty.html#the-tcx-and-how-it-uses-lifetimes":{"tf":1.4142135623730952},"tests/intro.html#testing-infrastructure":{"tf":1.0}},"df":21,"l":{"docs":{},"df":0,"a":{"docs":{},"df":0,"p":{"docs":{"traits/resolution.html#overview":{"tf":1.0},"traits/specialization.html#specialization":{"tf":1.7320508075688773},"const-eval.html#constant-evaluation":{"tf":1.0}},"df":3}}},"f":{"docs":{},"df":0,"l":{"docs":{},"df":0,"o":{"docs":{},"df":0,"w":{"docs":{"tests/adding.html#header-commands-configuring-rustc":{"tf":1.0},"miri.html#miri":{"tf":1.4142135623730952},"mir/index.html#key-mir-vocabulary":{"tf":1.0}},"df":3}}}},"w":{"docs":{},"df":0,"h":{"docs":{},"df":0,"e":{"docs":{},"df":0,"l":{"docs":{},"df":0,"m":{"docs":{"incrcomp-debugging.html#dumping-the-graph":{"tf":1.0}},"df":1}}}}},"a":{"docs":{},"df":0,"l":{"docs":{"incremental-compilation.html#incremental-compilation":{"tf":1.0},"query.html#queries-demand-driven-compilation":{"tf":1.0},"name-resolution.html#overall-strategy":{"tf":1.4142135623730952},"mir/borrowck.html#major-phases-of-the-borrow-checker":{"tf":1.0},"high-level-overview.html#crate-structure":{"tf":1.0},"rustc-driver.html#the-rustc-driver":{"tf":1.0},"name-resolution.html#todo":{"tf":1.0}},"df":7}},"v":{"docs":{},"df":0,"i":{"docs":{},"df":0,"e":{"docs":{},"df":0,"w":{"docs":{"method-lookup.html#method-lookup":{"tf":1.0},"high-level-overview.html#high-level-overview-of-the-compiler-source":{"tf":1.4142135623730952},"query.html#queries-demand-driven-compilation":{"tf":1.0},"tests/intro.html#the-compiler-testing-framework":{"tf":1.0},"traits/resolution.html#overview":{"tf":1.4142135623730952},"rustdoc.html#the-walking-tour-of-rustdoc":{"tf":1.0},"appendix/stupid-stats.html#overview-of-the-compilation-process":{"tf":1.4142135623730952},"traits/chalk-overview.html#an-overview-of-chalk":{"tf":1.4142135623730952}},"df":8}}}},"r":{"docs":{},"df":0,"i":{"docs":{},"df":0,"d":{"docs":{"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.0},"compiletest.html#adding-a-new-header-command":{"tf":1.4142135623730952},"mir/visitor.html#mir-visitor":{"tf":1.4142135623730952},"diag.html#declaring-a-lint":{"tf":1.4142135623730952},"incrcomp-debugging.html#dumping-the-graph":{"tf":1.0}},"df":5,"d":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{"compiletest.html#implementing-the-behavior-change":{"tf":1.0},"traits/specialization.html#specialization":{"tf":1.0}},"df":2}}}}}}}}},"t":{"docs":{},"df":0,"o":{"docs":{},"df":0,"h":{"docs":{"variance.html#variance-and-associated-types":{"tf":1.0}},"df":1}},"h":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"appendix/stupid-stats.html#appendix-a-a-tutorial-on-creating-a-drop-in-replacement-for-rustc":{"tf":1.0},"rustdoc.html#from-soup-to-nuts":{"tf":1.0},"how-to-build-and-run.html#create-a-configtoml":{"tf":1.0},"tests/adding.html#comment-explaining-what-the-test-is-about":{"tf":1.4142135623730952},"high-level-overview.html#crate-structure":{"tf":1.0},"name-resolution.html#scopes-and-ribs":{"tf":1.0}},"df":6,"w":{"docs":{},"df":0,"i":{"docs":{},"df":0,"s":{"docs":{"traits/resolution.html#candidate-assembly":{"tf":1.4142135623730952},"traits/canonical-queries.html#a-trait-query-in-rustc":{"tf":1.0},"miri.html#interpretation":{"tf":1.0},"incremental-compilation.html#improvements-to-the-basic-algorithm":{"tf":1.0},"mir/passes.html#stealing":{"tf":1.0},"hir.html#the-hir-map":{"tf":1.0},"incremental-compilation.html#the-try-mark-green-algorithm":{"tf":1.0},"method-lookup.html#method-lookup":{"tf":1.0},"method-lookup.html#candidate-search":{"tf":1.0},"tests/running.html#running-tests":{"tf":1.0}},"df":10}}}}}}},"r":{"docs":{},"df":0,"c":{"docs":{},"df":0,"h":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"r":{"docs":{"tests/intro.html#the-compiler-testing-framework":{"tf":1.0},"tests/intro.html#testing-on-emulators":{"tf":1.0}},"df":2}}}}}},"g":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{"hir.html#out-of-band-storage-and-the--crate--type":{"tf":1.0},"compiletest.html#introduction":{"tf":1.7320508075688773},"query.html#queries-demand-driven-compilation":{"tf":1.0}},"df":3}}},"i":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{"how-to-build-and-run.html#how-to-build-the-compiler-and-run-what-you-built":{"tf":1.0},"compiler-debugging.html#getting-logging-output":{"tf":1.0}},"df":2}}},"g":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{"type-inference.html#subtyping-obligations":{"tf":1.0},"traits/canonicalization.html#canonicalizing-the-query":{"tf":1.0},"traits/hrtb.html#higher-ranked-trait-obligations":{"tf":1.0},"traits/canonical-queries.html#the-traditional-interactive-prolog-query":{"tf":1.0},"traits/canonicalization.html#processing-the-canonicalized-query-result":{"tf":1.4142135623730952},"ty.html#allocating-and-working-with-types":{"tf":1.0},"traits/canonicalization.html#executing-the-query":{"tf":1.0},"traits/canonicalization.html#canonicalizing-the-query-result":{"tf":1.4142135623730952},"incremental-compilation.html#the-try-mark-green-algorithm":{"tf":1.0},"traits/canonicalization.html#canonicalization":{"tf":1.0},"incrcomp-debugging.html#dumping-the-graph":{"tf":1.4142135623730952},"mir/index.html#key-mir-vocabulary":{"tf":1.0},"traits/canonical-queries.html#a-trait-query-in-rustc":{"tf":1.0}},"df":13}}}},"d":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{"traits/associated-types.html#integration-with-unification":{"tf":1.0},"name-resolution.html#scopes-and-ribs":{"tf":1.0},"traits/associated-types.html#skolemized-associated-types":{"tf":1.0},"mir/regionck.html#skolemization-and-outlives-constraints":{"tf":1.0}},"df":4}}}}},"e":{"docs":{},"df":0,"r":{"docs":{"mir/visitor.html#traversal":{"tf":1.7320508075688773},"traits/resolution.html#candidate-assembly":{"tf":1.0},"macro-expansion.html#the-macro-parser":{"tf":1.0},"traits/chalk-overview.html#parsing":{"tf":1.0},"traits/lowering-to-logic.html#type-checking-generic-functions-beyond-horn-clauses":{"tf":1.0},"mir/visitor.html#mir-visitor":{"tf":1.0},"rustdoc.html#hot-potato":{"tf":1.0},"mir/regionck.html#what-is-a-universe":{"tf":1.0},"miri.html#miri":{"tf":1.0},"variance.html#variance-and-object-types":{"tf":1.0},"rustc-driver.html#the-rustc-driver":{"tf":1.0},"tests/adding.html#comment-explaining-what-the-test-is-about":{"tf":1.0},"traits/canonicalization.html#canonicalization":{"tf":1.0},"high-level-overview.html#the-main-stages-of-compilation":{"tf":1.0},"traits/lowering-to-logic.html#type-checking-normal-functions":{"tf":1.0},"query.html#cycles-between-queries":{"tf":1.0},"traits/bibliography.html#bibliography":{"tf":1.0},"compiletest.html#implementing-the-behavior-change":{"tf":1.0},"incremental-compilation.html#the-try-mark-green-algorithm":{"tf":1.0},"traits/canonicalization.html#executing-the-query":{"tf":1.0},"how-to-build-and-run.html#creating-a-rustup-toolchain":{"tf":1.0},"incremental-compilation.html#the-query-dag":{"tf":2.0},"type-inference.html#snapshots":{"tf":1.0}},"df":23}}},"t":{"docs":{},"df":0,"h":{"docs":{},"df":0,"o":{"docs":{},"df":0,"g":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{"traits/chalk-overview.html#parsing":{"tf":1.0}},"df":1}}}}}}},"c":{"docs":{},"df":0,"c":{"docs":{},"df":0,"u":{"docs":{},"df":0,"r":{"docs":{"macro-expansion.html#the-macro-parser":{"tf":1.7320508075688773},"rustdoc.html#from-clean-to-crate":{"tf":1.0},"incremental-compilation.html#the-try-mark-green-algorithm":{"tf":1.0},"traits/resolution.html#candidate-assembly":{"tf":1.0},"variance.html#variance-and-object-types":{"tf":1.0},"query.html#adding-a-new-kind-of-query":{"tf":1.0},"rustdoc.html#hot-potato":{"tf":1.0},"query.html#cycles-between-queries":{"tf":1.7320508075688773},"type-inference.html#snapshots":{"tf":1.0},"appendix/glossary.html#appendix-c-glossary":{"tf":1.0}},"df":10}}}},"m":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{"compiler-debugging.html#getting-a-backtrace-for-errors":{"tf":1.0}},"df":1}}},"u":{"docs":{},"df":0,"t":{"docs":{"traits/resolution.html#trait-resolution-old-style":{"tf":1.0},"mir/index.html#key-mir-vocabulary":{"tf":1.0},"appendix/stupid-stats.html#what-next":{"tf":1.0},"rustdoc.html#from-crate-to-clean":{"tf":1.0},"compiler-debugging.html#getting-logging-output":{"tf":1.4142135623730952},"tests/adding.html#other-header-commands":{"tf":1.0},"traits/lowering-to-logic.html#type-checking-generic-functions-beyond-horn-clauses":{"tf":1.4142135623730952},"type-checking.html#type-collection":{"tf":1.0},"traits/hrtb.html#higher-ranked-trait-obligations":{"tf":1.0},"type-inference.html#snapshots":{"tf":1.0},"hir.html#out-of-band-storage-and-the--crate--type":{"tf":1.4142135623730952},"rustdoc.html#the-walking-tour-of-rustdoc":{"tf":1.0},"appendix/background.html#what-is-co--and-contra-variance":{"tf":1.0},"incremental-compilation.html#the-query-dag":{"tf":1.0},"query.html#how-the-compiler-executes-a-query":{"tf":1.0},"traits/hrtb.html#basic-matching-and-skolemization-leaks":{"tf":1.0},"traits/lowering-to-logic.html#lowering-to-logic":{"tf":1.0},"variance.html#variance-and-associated-types":{"tf":2.0},"traits/canonical-queries.html#the-traditional-interactive-prolog-query":{"tf":1.0},"appendix/glossary.html#appendix-c-glossary":{"tf":1.4142135623730952},"type-inference.html#trying-equality":{"tf":1.0},"traits/canonicalization.html#executing-the-query":{"tf":1.0},"hir.html#the-hir-map":{"tf":1.0},"mir/borrowck.html#major-phases-of-the-borrow-checker":{"tf":1.0},"high-level-overview.html#the-main-stages-of-compilation":{"tf":1.7320508075688773},"traits/resolution.html#selection-during-translation":{"tf":1.4142135623730952},"variance.html#trait-variance-and-vtable-resolution":{"tf":1.4142135623730952},"traits/resolution.html#major-concepts":{"tf":1.4142135623730952},"traits/index.html#trait-solving-new-style":{"tf":1.4142135623730952},"rustdoc.html#cheat-sheet":{"tf":1.4142135623730952},"mir/index.html#mir-data-types":{"tf":1.0},"variance.html#addendum-variance-on-traits":{"tf":1.0},"appendix/stupid-stats.html#overview-of-the-compilation-process":{"tf":1.4142135623730952},"tests/adding.html#guide-to-the-ui-tests":{"tf":1.0},"tests/intro.html#testing-with-docker-images":{"tf":1.0},"hir.html#identifiers-in-the-hir":{"tf":1.0},"miri.html#miri":{"tf":1.4142135623730952},"rustdoc.html#from-clean-to-crate":{"tf":2.23606797749979},"high-level-overview.html#crate-structure":{"tf":1.0},"method-lookup.html#candidate-search":{"tf":1.0},"rustc-driver.html#the-rustc-driver":{"tf":1.0},"method-lookup.html#candidate-assembly":{"tf":1.0},"mir/borrowck.html#mir-borrow-check":{"tf":1.0},"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.4142135623730952},"mir/regionck.html#final-example":{"tf":1.0},"mir/regionck.html#what-is-a-universe":{"tf":1.0},"rustdoc.html#dotting-is-and-crossing-ts":{"tf":1.0},"appendix/background.html#what-is-a-control-flow-graph":{"tf":1.0},"incrcomp-debugging.html#dumping-the-graph":{"tf":1.0}},"df":49,"d":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{"traits/chalk-overview.html#an-overview-of-chalk":{"tf":1.0}},"df":1}}},"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"m":{"docs":{"traits/resolution.html#selection":{"tf":1.0}},"df":1}}},"e":{"docs":{},"df":0,"r":{"docs":{"name-resolution.html#scopes-and-ribs":{"tf":1.7320508075688773},"ty.html#the-tcx-and-how-it-uses-lifetimes":{"tf":1.0}},"df":2,"m":{"docs":{},"df":0,"o":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{"ty.html#allocating-and-working-with-types":{"tf":1.0}},"df":1}}}}}},"l":{"docs":{},"df":0,"i":{"docs":{},"df":0,"v":{"docs":{"mir/regionck.html#final-example":{"tf":1.4142135623730952},"mir/regionck.html#another-example":{"tf":1.4142135623730952},"traits/goals-and-clauses.html#domain-goals":{"tf":1.0},"mir/regionck.html#mir-based-region-checking-nll":{"tf":1.4142135623730952},"type-inference.html#lexical-region-resolution":{"tf":1.0},"mir/regionck.html#subtyping-and-skolemization":{"tf":1.0},"traits/lowering-rules.html#transforming-the-lowered-where-clauses":{"tf":1.0},"type-inference.html#region-constraints":{"tf":1.0},"mir/regionck.html#skolemization-and-outlives-constraints":{"tf":2.449489742783178},"type-inference.html#extracting-region-constraints":{"tf":1.0},"mir/regionck.html#back-to-our-example":{"tf":1.7320508075688773},"mir/regionck.html#extending-the-universal-regions-check":{"tf":1.0}},"df":12,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"(":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"g":{"docs":{},"df":0,"i":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{"traits/goals-and-clauses.html#domain-goals":{"tf":1.4142135623730952}},"df":1}}}}}},"'":{"docs":{},"df":0,"a":{"docs":{"traits/lowering-rules.html#lowering-where-clauses":{"tf":1.0},"traits/goals-and-clauses.html#domain-goals":{"tf":1.0}},"df":2}},"&":{"docs":{},"df":0,"'":{"docs":{},"df":0,"a":{"docs":{"traits/goals-and-clauses.html#domain-goals":{"tf":1.0}},"df":1}}},"t":{"docs":{"traits/lowering-rules.html#lowering-where-clauses":{"tf":1.0}},"df":1,"y":{"docs":{},"df":0,"p":{"docs":{"traits/goals-and-clauses.html#domain-goals":{"tf":1.4142135623730952}},"df":1}}}}}}}}},"p":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.4142135623730952},"tests/adding.html#what-kind-of-test-should-i-add":{"tf":1.4142135623730952},"compiler-debugging.html#debugging-llvm":{"tf":1.0},"appendix/stupid-stats.html#overview-of-the-compilation-process":{"tf":1.4142135623730952},"appendix/glossary.html#appendix-c-glossary":{"tf":1.4142135623730952},"rustdoc.html#other-tricks-up-its-sleeve":{"tf":1.0},"tests/adding.html#editing-and-updating-the-reference-files":{"tf":1.0},"incremental-compilation.html#the-try-mark-green-algorithm":{"tf":1.0},"diag.html#suggestions":{"tf":1.0},"tests/adding.html#normalization":{"tf":1.4142135623730952},"macro-expansion.html#the-macro-parser":{"tf":1.4142135623730952},"traits/resolution.html#major-concepts":{"tf":1.0},"mir/index.html#key-mir-vocabulary":{"tf":1.4142135623730952},"traits/resolution.html#confirmation":{"tf":1.0},"compiler-debugging.html#getting-logging-output":{"tf":3.1622776601683797},"rustdoc.html#from-crate-to-clean":{"tf":1.0},"tests/adding.html#adding-new-tests":{"tf":1.0},"appendix/stupid-stats.html#what-next":{"tf":1.0},"compiler-debugging.html#expensive-operations-in-logs":{"tf":1.0},"compiler-debugging.html#formatting-graphviz-output-dot-files":{"tf":1.4142135623730952},"appendix/stupid-stats.html#appendix-a-a-tutorial-on-creating-a-drop-in-replacement-for-rustc":{"tf":1.0},"tests/adding.html#guide-to-the-ui-tests":{"tf":2.0},"rustdoc.html#cheat-sheet":{"tf":1.0},"rustdoc.html#hot-potato":{"tf":1.0},"rustdoc.html#dotting-is-and-crossing-ts":{"tf":1.0}},"df":25}}},"s":{"docs":{},"df":0,"i":{"docs":{},"df":0,"d":{"docs":{"rustdoc.html#from-soup-to-nuts":{"tf":1.0},"appendix/background.html#what-is-a-free-region-or-a-free-variable-what-about-bound-region":{"tf":1.4142135623730952},"hir.html#the-hir-map":{"tf":1.0},"variance.html#variance-and-object-types":{"tf":1.0},"traits/lowering-rules.html#lowering-traits":{"tf":1.0}},"df":5}},"o":{"docs":{},"df":0,"u":{"docs":{},"df":0,"r":{"docs":{},"df":0,"c":{"docs":{"appendix/stupid-stats.html#overview-of-the-compilation-process":{"tf":1.0}},"df":1}}}}},"w":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"d":{"docs":{"name-resolution.html#scopes-and-ribs":{"tf":1.0}},"df":1}}}}},"g":{"docs":{},"df":0,"h":{"docs":{},"df":0,"t":{"docs":{"mir/regionck.html#skolemization-and-universes":{"tf":1.0},"mir/regionck.html#subtyping-and-skolemization":{"tf":1.0},"tests/intro.html#compiletest-test-suites":{"tf":1.0}},"df":3}}}},"h":{"docs":{"diag.html#suggestions":{"tf":1.7320508075688773},"diag.html#error-messages":{"tf":1.0}},"df":2},"b":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{},"df":0,"g":{"docs":{"appendix/glossary.html#appendix-c-glossary":{"tf":1.0},"traits/resolution.html#selection":{"tf":2.6457513110645909},"type-inference.html#subtyping-obligations":{"tf":2.0},"traits/resolution.html#candidate-assembly":{"tf":3.872983346207417},"traits/canonical-queries.html#examples":{"tf":1.4142135623730952},"traits/resolution.html#selection-during-translation":{"tf":2.23606797749979},"type-inference.html#enforcing-equality--subtyping":{"tf":1.0},"traits/hrtb.html#higher-ranked-trait-obligations":{"tf":2.449489742783178},"traits/resolution.html#major-concepts":{"tf":1.4142135623730952},"traits/hrtb.html#basic-matching-and-skolemization-leaks":{"tf":2.0},"traits/resolution.html#overview":{"tf":3.0},"traits/resolution.html#confirmation":{"tf":1.4142135623730952}},"df":12}}},"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"v":{"docs":{"traits/lowering-to-logic.html#rust-traits-and-logic":{"tf":1.0},"hir.html#out-of-band-storage-and-the--crate--type":{"tf":1.0},"incrcomp-debugging.html#tracking-down-incorrect-edges":{"tf":1.0},"traits/lowering-to-logic.html#lowering-to-logic":{"tf":1.0}},"df":4}}}},"j":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{"variance.html#trait-variance-and-vtable-resolution":{"tf":3.0},"appendix/stupid-stats.html#compilercalls":{"tf":1.0},"variance.html#addendum-variance-on-traits":{"tf":1.0},"appendix/glossary.html#appendix-c-glossary":{"tf":1.4142135623730952},"variance.html#variance-and-object-types":{"tf":3.1622776601683797},"appendix/stupid-stats.html#compilercontroller":{"tf":1.0},"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.4142135623730952},"method-lookup.html#candidate-assembly":{"tf":1.4142135623730952},"appendix/stupid-stats.html#overview-of-the-compilation-process":{"tf":1.4142135623730952}},"df":9,",":{"docs":{},"df":0,"i":{"docs":{},"df":0,"3":{"docs":{},"df":0,"2":{"docs":{"variance.html#trait-variance-and-vtable-resolution":{"tf":1.0}},"df":1}}}}}}}},"v":{"docs":{},"df":0,"i":{"docs":{},"df":0,"o":{"docs":{},"df":0,"u":{"docs":{"traits/resolution.html#trait-resolution-old-style":{"tf":1.0},"name-resolution.html#scopes-and-ribs":{"tf":1.0},"variance.html#addendum-variance-on-traits":{"tf":1.0}},"df":3,"s":{"docs":{"traits/hrtb.html#higher-ranked-trait-obligations":{"tf":1.0},"compiletest.html#implementing-the-behavior-change":{"tf":1.0}},"df":2}}}}},"t":{"docs":{},"df":0,"a":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{"miri.html#miri":{"tf":1.0},"param_env.html#parameter-environment":{"tf":1.4142135623730952}},"df":2}}}}}},"b":{"docs":{"variance.html#variance-of-type-and-lifetime-parameters":{"tf":1.4142135623730952},"mir/borrowck.html#major-phases-of-the-borrow-checker":{"tf":1.0},"appendix/background.html#appendix-b-background-topics":{"tf":1.4142135623730952},"traits/canonicalization.html#processing-the-canonicalized-query-result":{"tf":2.23606797749979},"traits/associated-types.html#integration-with-unification":{"tf":1.4142135623730952},"mir/regionck.html#skolemization-and-outlives-constraints":{"tf":1.4142135623730952},"variance.html#the-algorithm":{"tf":1.0},"mir/index.html#key-mir-vocabulary":{"tf":1.4142135623730952},"miri.html#allocations":{"tf":1.0},"query.html#adding-a-new-kind-of-query":{"tf":1.0},"traits/canonicalization.html#canonicalizing-the-query":{"tf":1.7320508075688773},"query.html#cycles-between-queries":{"tf":1.0},"traits/lowering-rules.html#lowering-where-clauses":{"tf":1.4142135623730952},"traits/associated-types.html#skolemized-associated-types":{"tf":1.0},"type-inference.html#trying-equality":{"tf":1.4142135623730952},"traits/lowering-to-logic.html#rust-traits-and-logic":{"tf":1.7320508075688773},"mir/regionck.html#final-example":{"tf":1.0},"traits/canonical-queries.html#examples":{"tf":1.0},"traits/lowering-rules.html#trait-header":{"tf":2.23606797749979},"traits/canonicalization.html#executing-the-query":{"tf":1.4142135623730952},"traits/resolution.html#candidate-assembly":{"tf":2.449489742783178},"variance.html#variance-and-object-types":{"tf":1.0},"traits/canonicalization.html#canonicalizing-the-query-result":{"tf":1.0},"appendix/background.html#what-is-a-free-region-or-a-free-variable-what-about-bound-region":{"tf":3.1622776601683797},"type-inference.html#subtyping-obligations":{"tf":2.0},"mir/regionck.html#what-is-a-universe":{"tf":1.0},"type-inference.html#region-constraints":{"tf":2.0},"traits/goals-and-clauses.html#domain-goals":{"tf":1.0},"appendix/background.html#what-is-a-control-flow-graph":{"tf":1.4142135623730952}},"df":29,"e":{"docs":{"mir/borrowck.html#mir-borrow-check":{"tf":1.0},"compiletest.html#adding-a-new-header-command":{"tf":1.0},"mir/index.html#mir-data-types":{"tf":1.7320508075688773},"hir.html#out-of-band-storage-and-the--crate--type":{"tf":1.0},"hir.html#identifiers-in-the-hir":{"tf":1.4142135623730952},"method-lookup.html#candidate-assembly":{"tf":1.0},"mir/index.html#key-mir-vocabulary":{"tf":1.0},"variance.html#variance-and-object-types":{"tf":1.0},"type-checking.html#type-collection":{"tf":1.0},"traits/goals-and-clauses.html#domain-goals":{"tf":1.0},"query.html#how-the-compiler-executes-a-query":{"tf":1.0},"mir/passes.html#seeing-how-the-mir-changes-as-the-compiler-executes":{"tf":1.0},"appendix/code-index.html#appendix-d-code-index":{"tf":1.0},"traits/lowering-to-logic.html#type-checking-normal-functions":{"tf":1.0},"miri.html#interpretation":{"tf":1.0},"appendix/glossary.html#appendix-c-glossary":{"tf":1.7320508075688773},"traits/associated-types.html#integration-with-unification":{"tf":1.0},"tests/adding.html#revisions":{"tf":1.0},"miri.html#miri":{"tf":1.0},"high-level-overview.html#crate-structure":{"tf":1.0},"variance.html#dependency-graph-management":{"tf":1.0},"mir/regionck.html#another-example":{"tf":1.0},"high-level-overview.html#the-main-stages-of-compilation":{"tf":1.0},"rustdoc.html#from-clean-to-crate":{"tf":1.0},"traits/index.html#trait-solving-new-style":{"tf":1.0},"diag.html#span":{"tf":1.0},"mir/regionck.html#extending-the-universal-regions-check":{"tf":1.0},"tests/adding.html#naming-your-test":{"tf":1.0},"rustdoc.html#from-soup-to-nuts":{"tf":1.0},"appendix/stupid-stats.html#appendix-a-a-tutorial-on-creating-a-drop-in-replacement-for-rustc":{"tf":1.0}},"df":30,"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"m":{"docs":{"high-level-overview.html#crate-structure":{"tf":1.0},"query.html#cycles-between-queries":{"tf":1.0},"traits/chalk-overview.html#parsing":{"tf":1.0},"traits/lowering-rules.html#transforming-the-lowered-where-clauses":{"tf":2.0},"ty.html#allocating-and-working-with-types":{"tf":1.0},"mir/regionck.html#mir-based-region-checking-nll":{"tf":1.0},"variance.html#dependency-graph-management":{"tf":1.0}},"df":7}}},"f":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{"appendix/glossary.html#appendix-c-glossary":{"tf":1.0},"rustdoc.html#other-tricks-up-its-sleeve":{"tf":1.0},"conventions.html#use-todo-comments-for-things-you-dont-want-to-forget":{"tf":1.0},"mir/passes.html#stealing":{"tf":1.7320508075688773},"traits/canonical-queries.html#examples":{"tf":1.4142135623730952},"mir/passes.html#seeing-how-the-mir-changes-as-the-compiler-executes":{"tf":1.4142135623730952},"rustdoc.html#from-soup-to-nuts":{"tf":1.4142135623730952},"compiletest.html#header-commands":{"tf":1.0},"traits/caching.html#an-example":{"tf":1.0},"rustdoc.html#hot-potato":{"tf":1.0},"rustdoc.html#from-clean-to-crate":{"tf":1.4142135623730952},"rustdoc.html#from-crate-to-clean":{"tf":1.0},"type-inference.html#creating-an-inference-context":{"tf":1.0},"incremental-compilation.html#the-query-dag":{"tf":1.4142135623730952},"name-resolution.html#overall-strategy":{"tf":1.4142135623730952},"variance.html#constraints":{"tf":1.0},"mir/borrowck.html#mir-borrow-check":{"tf":1.0},"miri.html#miri":{"tf":1.7320508075688773},"tests/adding.html#header-commands-configuring-rustc":{"tf":1.0},"query.html#how-the-compiler-executes-a-query":{"tf":1.0},"mir/regionck.html#another-example":{"tf":1.0},"type-inference.html#snapshots":{"tf":1.0},"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.4142135623730952},"appendix/stupid-stats.html#compilercalls":{"tf":1.4142135623730952},"compiletest.html#adding-a-new-header-command":{"tf":1.0},"appendix/stupid-stats.html#compilercontroller":{"tf":1.0},"macro-expansion.html#macro-expansion":{"tf":1.0},"how-to-build-and-run.html#how-to-build-the-compiler-and-run-what-you-built":{"tf":1.0},"diag.html#error-messages":{"tf":1.0},"traits/hrtb.html#basic-matching-and-skolemization-leaks":{"tf":1.0},"compiletest.html#introduction":{"tf":1.0}},"df":31}}},"g":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{"tests/adding.html#adding-new-tests":{"tf":1.0},"traits/hrtb.html#basic-matching-and-skolemization-leaks":{"tf":1.0},"compiletest.html#adding-a-new-header-command":{"tf":1.0},"rustdoc.html#from-clean-to-crate":{"tf":1.7320508075688773},"traits/canonicalization.html#processing-the-canonicalized-query-result":{"tf":1.0},"conventions.html#copyright-notice":{"tf":1.0},"mir/index.html#key-mir-vocabulary":{"tf":1.0}},"df":7}}},"y":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{"ty.html#beyond-types-other-kinds-of-arena-allocated-data-structures":{"tf":1.4142135623730952},"traits/lowering-to-logic.html#type-checking-generic-functions-beyond-horn-clauses":{"tf":1.4142135623730952},"conventions.html#coding-for-correctness":{"tf":1.0}},"df":3}}}},"n":{"docs":{},"df":0,"e":{"docs":{},"df":0,"f":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{"traits/specialization.html#specialization":{"tf":1.0},"appendix/stupid-stats.html#appendix-a-a-tutorial-on-creating-a-drop-in-replacement-for-rustc":{"tf":1.0},"variance.html#addendum-variance-on-traits":{"tf":1.0},"traits/chalk-overview.html#an-overview-of-chalk":{"tf":1.0}},"df":4}}}}},"l":{"docs":{},"df":0,"o":{"docs":{},"df":0,"w":{"docs":{"traits/lowering-module.html#the--program_clauses_for--query":{"tf":1.0},"query.html#cycles-between-queries":{"tf":1.0},"tests/adding.html#guide-to-the-ui-tests":{"tf":1.0},"traits/lowering-rules.html#lowering-function-and-constant-declarations":{"tf":1.0},"mir/index.html#mir-data-types":{"tf":1.0},"incremental-compilation.html#the-try-mark-green-algorithm":{"tf":1.4142135623730952},"traits/lowering-rules.html#lowering-where-clauses":{"tf":1.0},"type-inference.html#inference-variables":{"tf":1.0},"traits/goals-and-clauses.html#goals-and-clauses-meta-structure":{"tf":1.0},"high-level-overview.html#crate-structure":{"tf":1.0},"traits/lowering-rules.html#transforming-the-lowered-where-clauses":{"tf":1.0},"variance.html#addendum-variance-on-traits":{"tf":1.0},"hir.html#out-of-band-storage-and-the--crate--type":{"tf":1.0},"compiletest.html#implementing-the-behavior-change":{"tf":1.0},"traits/canonical-queries.html#a-trait-query-in-rustc":{"tf":1.0},"tests/adding.html#ignoring-tests":{"tf":1.0},"type-inference.html#subtyping-obligations":{"tf":1.0}},"df":17}}},"t":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"appendix/glossary.html#appendix-c-glossary":{"tf":1.0},"tests/running.html#running-a-subset-of-the-test-suites":{"tf":1.0},"traits/chalk-overview.html#an-overview-of-chalk":{"tf":1.0},"how-to-build-and-run.html#create-a-configtoml":{"tf":1.0},"hir.html#out-of-band-storage-and-the--crate--type":{"tf":1.0},"about-this-guide.html#about-this-guide":{"tf":1.0},"query.html#cycles-between-queries":{"tf":1.0},"tests/adding.html#naming-your-test":{"tf":1.4142135623730952},"high-level-overview.html#crate-structure":{"tf":1.0},"conventions.html#line-length":{"tf":1.0},"conventions.html#how-to-structure-your-pr":{"tf":1.4142135623730952}},"df":11}}},"w":{"docs":{},"df":0,"e":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{"incrcomp-debugging.html#dumping-the-graph":{"tf":1.4142135623730952},"variance.html#variance-and-object-types":{"tf":1.0},"traits/resolution.html#candidate-assembly":{"tf":1.0},"traits/lowering-rules.html#trait-header":{"tf":1.4142135623730952},"miri.html#interpretation":{"tf":1.0},"appendix/glossary.html#appendix-c-glossary":{"tf":1.4142135623730952},"mir/regionck.html#mir-based-region-checking-nll":{"tf":1.0},"traits/resolution.html#selection":{"tf":1.0},"traits/canonical-queries.html#a-trait-query-in-rustc":{"tf":1.0},"appendix/stupid-stats.html#the-driver-customisation-apis":{"tf":1.0},"rustdoc.html#hot-potato":{"tf":1.4142135623730952},"mir/index.html#key-mir-vocabulary":{"tf":1.0},"appendix/stupid-stats.html#overview-of-the-compilation-process":{"tf":1.0},"rustdoc.html#from-clean-to-crate":{"tf":1.0},"mir/regionck.html#extending-the-universal-regions-check":{"tf":1.0},"hir.html#the-hir-map":{"tf":1.0},"type-inference.html#region-constraints":{"tf":1.0},"traits/associated-types.html#equality-and-associated-types":{"tf":1.0},"tests/adding.html#normalization":{"tf":1.0},"macro-expansion.html#example":{"tf":1.0},"query.html#cycles-between-queries":{"tf":1.4142135623730952}},"df":21}}}},"a":{"docs":{"how-to-build-and-run.html#running-xpy-and-building-a-stage1-compiler":{"tf":1.4142135623730952}},"df":1}},"s":{"docs":{},"df":0,"i":{"docs":{},"df":0,"d":{"docs":{"traits/resolution.html#candidate-assembly":{"tf":1.0},"tests/adding.html#normalization":{"tf":1.0}},"df":2}},"t":{"docs":{"how-to-build-and-run.html#running-xpy-and-building-a-stage1-compiler":{"tf":1.0},"appendix/stupid-stats.html#appendix-a-a-tutorial-on-creating-a-drop-in-replacement-for-rustc":{"tf":1.0}},"df":2}},"h":{"docs":{},"df":0,"a":{"docs":{},"df":0,"v":{"docs":{"traits/chalk-overview.html#an-overview-of-chalk":{"tf":1.0}},"df":1,"i":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{"tests/adding.html#header-commands-configuring-rustc":{"tf":1.0},"compiletest.html#introduction":{"tf":1.4142135623730952},"compiletest.html#implementing-the-behavior-change":{"tf":2.6457513110645909},"diag.html#edition-gated-lints":{"tf":1.0},"method-lookup.html#candidate-assembly":{"tf":1.0},"compiler-debugging.html#debugging-llvm":{"tf":1.0},"compiletest.html#adding-a-new-header-command":{"tf":1.0}},"df":7},"u":{"docs":{},"df":0,"r":{"docs":{"appendix/stupid-stats.html#appendix-a-a-tutorial-on-creating-a-drop-in-replacement-for-rustc":{"tf":1.0},"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.4142135623730952}},"df":2}}}}}}}},"o":{"docs":{},"df":0,"t":{"docs":{"tests/intro.html#testing-infrastructure":{"tf":1.0}},"df":1,"h":{"docs":{"compiletest.html#introduction":{"tf":1.0},"tests/adding.html#what-kind-of-test-should-i-add":{"tf":1.0},"mir/regionck.html#another-example":{"tf":1.4142135623730952},"query.html#how-the-compiler-executes-a-query":{"tf":1.4142135623730952},"traits/associated-types.html#skolemized-associated-types":{"tf":1.0},"tests/adding.html#normalization":{"tf":1.0},"appendix/glossary.html#appendix-c-glossary":{"tf":1.0},"traits/resolution.html#candidate-assembly":{"tf":1.0},"macro-expansion.html#the-macro-parser":{"tf":2.0},"type-inference.html#a-note-on-terminology":{"tf":1.0},"traits/canonical-queries.html#examples":{"tf":1.0},"the-parser.html#the-parser":{"tf":1.0},"traits/canonicalization.html#canonicalizing-the-query-result":{"tf":1.0},"traits/canonical-queries.html#canonical-queries":{"tf":1.0},"mir/passes.html#seeing-how-the-mir-changes-as-the-compiler-executes":{"tf":1.4142135623730952},"traits/lowering-rules.html#associated-type-values":{"tf":1.0},"name-resolution.html#scopes-and-ribs":{"tf":1.4142135623730952},"mir/borrowck.html#major-phases-of-the-borrow-checker":{"tf":1.0}},"df":18},"t":{"docs":{},"df":0,"o":{"docs":{},"df":0,"m":{"docs":{"query.html#adding-a-new-kind-of-query":{"tf":1.0},"high-level-overview.html#the-main-stages-of-compilation":{"tf":1.0},"variance.html#the-algorithm":{"tf":1.0}},"df":3}}}},"r":{"docs":{"tests/running.html#running-tests":{"tf":1.0},"conventions.html#how-to-structure-your-pr":{"tf":1.0},"tests/intro.html#testing-infrastructure":{"tf":1.0},"tests/running.html#running-a-subset-of-the-test-suites":{"tf":1.0}},"df":4,"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"w":{"docs":{"traits/canonical-queries.html#examples":{"tf":1.0},"mir/borrowck.html#mir-borrow-check":{"tf":3.3166247903554},"appendix/glossary.html#appendix-c-glossary":{"tf":1.7320508075688773},"traits/chalk-overview.html#parsing":{"tf":1.0},"mir/borrowck.html#major-phases-of-the-borrow-checker":{"tf":2.449489742783178},"const-eval.html#constant-evaluation":{"tf":1.0},"compiler-debugging.html#formatting-graphviz-output-dot-files":{"tf":1.0},"mir/passes.html#mir-passes":{"tf":1.0},"appendix/stupid-stats.html#overview-of-the-compilation-process":{"tf":1.0},"mir/index.html#key-mir-vocabulary":{"tf":1.0},"mir/index.html#the-mir-mid-level-ir":{"tf":1.0}},"df":11,"<":{"docs":{},"df":0,"v":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"<":{"docs":{},"df":0,"?":{"docs":{},"df":0,"v":{"docs":{"traits/canonical-queries.html#examples":{"tf":1.0}},"df":1}}}}}},"[":{"docs":{},"df":0,"t":{"docs":{"traits/canonical-queries.html#examples":{"tf":1.0}},"df":1}},"b":{"docs":{"traits/canonical-queries.html#examples":{"tf":1.4142135623730952}},"df":1},"t":{"docs":{"traits/canonical-queries.html#examples":{"tf":1.4142135623730952}},"df":1},"?":{"docs":{},"df":0,"u":{"docs":{"traits/canonical-queries.html#examples":{"tf":2.449489742783178}},"df":1}}},"c":{"docs":{},"df":0,"k":{"docs":{"mir/regionck.html#final-example":{"tf":1.0},"mir/regionck.html#back-to-our-example":{"tf":1.0},"mir/regionck.html#representing-the-values-of-a-region-variable":{"tf":1.0},"high-level-overview.html#the-main-stages-of-compilation":{"tf":1.0},"mir/regionck.html#region-variables-and-constraints":{"tf":1.0},"appendix/glossary.html#appendix-c-glossary":{"tf":1.0},"mir/borrowck.html#major-phases-of-the-borrow-checker":{"tf":1.0},"mir/regionck.html#universes-and-skolemized-region-elements":{"tf":1.0},"mir/regionck.html#closures":{"tf":1.0},"mir/regionck.html#mir-based-region-checking-nll":{"tf":1.0},"mir/regionck.html#skolemization-and-outlives-constraints":{"tf":1.0},"mir/regionck.html#extending-the-universal-regions-check":{"tf":1.0},"mir/regionck.html#another-example":{"tf":1.0},"mir/regionck.html#what-is-a-universe":{"tf":1.0},"mir/regionck.html#subtyping-and-skolemization":{"tf":1.0},"mir/regionck.html#universal-regions":{"tf":1.0},"mir/regionck.html#skolemization-and-universes":{"tf":1.0},"mir/regionck.html#causal-tracking":{"tf":1.0},"mir/regionck.html#the-mir-type-check":{"tf":1.0}},"df":19,"/":{"docs":{},"df":0,"i":{"docs":{},"df":0,"s":{"docs":{},"df":0,"s":{"docs":{},"df":0,"u":{"docs":{"tests/adding.html#naming-your-test":{"tf":1.0}},"df":1}}}}}}}}}},"d":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"name-resolution.html#scopes-and-ribs":{"tf":1.0}},"df":1}}}},"u":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{"mir/regionck.html#subtyping-and-skolemization":{"tf":1.0},"traits/hrtb.html#higher-ranked-trait-obligations":{"tf":1.4142135623730952},"appendix/glossary.html#appendix-c-glossary":{"tf":2.23606797749979},"traits/resolution.html#overview":{"tf":1.0},"compiler-debugging.html#getting-a-backtrace-for-errors":{"tf":1.4142135623730952},"traits/hrtb.html#higher-ranked-trait-bounds":{"tf":2.0},"traits/hrtb.html#basic-matching-and-skolemization-leaks":{"tf":1.0},"traits/goals-and-clauses.html#domain-goals":{"tf":1.7320508075688773},"variance.html#trait-variance-and-vtable-resolution":{"tf":1.0},"traits/goals-and-clauses.html#coinductive-goals":{"tf":1.0},"type-inference.html#lexical-region-resolution":{"tf":1.0},"appendix/background.html#what-is-a-free-region-or-a-free-variable-what-about-bound-region":{"tf":2.23606797749979},"rustc-driver.html#a-note-on-lifetimes":{"tf":1.0},"traits/canonicalization.html#executing-the-query":{"tf":1.0},"variance.html#addendum-variance-on-traits":{"tf":1.0},"variance.html#variance-and-object-types":{"tf":1.0},"traits/wf.html#well-formedness-checking":{"tf":1.0},"type-inference.html#a-note-on-terminology":{"tf":1.7320508075688773},"method-lookup.html#candidate-assembly":{"tf":1.0},"mir/regionck.html#skolemization-and-outlives-constraints":{"tf":1.0},"traits/resolution.html#major-concepts":{"tf":1.0},"traits/lowering-rules.html#trait-header":{"tf":2.0},"type-inference.html#subtyping-obligations":{"tf":1.0},"traits/lowering-rules.html#associated-type-declarations":{"tf":2.6457513110645909},"traits/canonical-queries.html#examples":{"tf":1.0},"traits/canonicalization.html#canonicalization":{"tf":1.0},"param_env.html#parameter-environment":{"tf":1.4142135623730952},"traits/implied-bounds.html#implied-bounds":{"tf":1.4142135623730952}},"df":28,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{"name-resolution.html#scopes-and-ribs":{"tf":1.0}},"df":1}}}}}},"x":{"docs":{"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.0},"traits/canonical-queries.html#the-traditional-interactive-prolog-query":{"tf":1.0},"method-lookup.html#candidate-assembly":{"tf":1.0},"rustc-driver.html#a-note-on-lifetimes":{"tf":1.0}},"df":4,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"n":{"docs":{},"df":0,"e":{"docs":{},"df":0,"w":{"docs":{},"df":0,"(":{"docs":{},"df":0,"g":{"docs":{},"df":0,"e":{"docs":{},"df":0,"t":{"docs":{},"df":0,"_":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{},"df":0,"(":{"docs":{},"df":0,"&":{"docs":{},"df":0,"*":{"docs":{},"df":0,"*":{"docs":{},"df":0,"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"l":{"docs":{},"df":0,"f":{"docs":{"traits/resolution.html#candidate-assembly":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}}},"<":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{"compiletest.html#adding-a-new-header-command":{"tf":1.4142135623730952}},"df":1}}}}},"u":{"docs":{"method-lookup.html#candidate-assembly":{"tf":1.0}},"df":1,"1":{"docs":{},"df":0,"6":{"docs":{"traits/resolution.html#candidate-assembly":{"tf":1.4142135623730952}},"df":1}}},"f":{"docs":{},"df":0,"o":{"docs":{},"df":0,"o":{"docs":{"traits/goals-and-clauses.html#coinductive-goals":{"tf":1.0}},"df":1}}},"[":{"docs":{},"df":0,"t":{"docs":{"method-lookup.html#candidate-assembly":{"tf":1.0},"method-lookup.html#steps":{"tf":1.0}},"df":2}},"t":{"docs":{"traits/resolution.html#candidate-assembly":{"tf":1.7320508075688773}},"df":1,"o":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"r":{"docs":{"method-lookup.html#candidate-assembly":{"tf":1.0}},"df":1}}}}},"i":{"docs":{},"df":0,"3":{"docs":{},"df":0,"2":{"docs":{"traits/canonical-queries.html#a-trait-query-in-rustc":{"tf":1.0},"traits/canonical-queries.html#the-traditional-interactive-prolog-query":{"tf":1.0}},"df":2}}}}},"d":{"docs":{},"df":0,"y":{"docs":{},"df":0,"_":{"docs":{},"df":0,"o":{"docs":{},"df":0,"w":{"docs":{},"df":0,"n":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"_":{"docs":{},"df":0,"d":{"docs":{},"df":0,"e":{"docs":{},"df":0,"f":{"docs":{},"df":0,"_":{"docs":{},"df":0,"i":{"docs":{},"df":0,"d":{"docs":{"hir.html#hir-bodies":{"tf":1.0}},"df":1}}}}}}}}}}}}},"i":{"docs":{},"df":0,"d":{"docs":{"hir.html#identifiers-in-the-hir":{"tf":1.0}},"df":1}},"'":{"docs":{"traits/goals-and-clauses.html#domain-goals":{"tf":1.0}},"df":1}},"i":{"docs":{"hir.html#out-of-band-storage-and-the--crate--type":{"tf":1.0},"traits/lowering-to-logic.html#type-checking-generic-functions-beyond-horn-clauses":{"tf":1.7320508075688773},"hir.html#identifiers-in-the-hir":{"tf":1.0},"traits/goals-and-clauses.html#domain-goals":{"tf":1.7320508075688773},"traits/resolution.html#candidate-assembly":{"tf":1.0},"rustdoc.html#from-clean-to-crate":{"tf":1.0},"traits/resolution.html#major-concepts":{"tf":1.0},"mir/regionck.html#mir-based-region-checking-nll":{"tf":1.4142135623730952},"hir.html#hir-bodies":{"tf":2.6457513110645909},"mir/regionck.html#what-is-a-universe":{"tf":1.0},"macro-expansion.html#the-macro-parser":{"tf":1.4142135623730952},"type-checking.html#type-collection":{"tf":1.0}},"df":12}},"o":{"docs":{},"df":0,"t":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"p":{"docs":{"how-to-build-and-run.html#running-xpy-and-building-a-stage1-compiler":{"tf":1.0},"tests/intro.html#other-tests":{"tf":1.0}},"df":2}}}}}},"k":{"docs":{"macro-expansion.html#example":{"tf":1.0},"traits/bibliography.html#bibliography":{"tf":1.0}},"df":2},"l":{"docs":{"miri.html#miri":{"tf":1.7320508075688773}},"df":1,"e":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{"miri.html#miri":{"tf":1.0}},"df":1}}}}}},">":{"docs":{},"df":0,"(":{"docs":{},"df":0,"a":{"docs":{"traits/canonical-queries.html#examples":{"tf":1.4142135623730952}},"df":1}}},"l":{"docs":{},"df":0,"a":{"docs":{},"df":0,"h":{"docs":{"tests/adding.html#header-commands-configuring-rustc":{"tf":1.7320508075688773},"macro-expansion.html#the-macro-parser":{"tf":1.0}},"df":2}},"o":{"docs":{},"df":0,"g":{"docs":{"traits/lowering-to-logic.html#source":{"tf":1.0},"tests/intro.html#further-reading":{"tf":1.0},"traits/chalk-overview.html#blog-posts":{"tf":1.4142135623730952},"type-inference.html#inference-variables":{"tf":1.0},"mir/index.html#the-mir-mid-level-ir":{"tf":1.0}},"df":5},"c":{"docs":{},"df":0,"k":{"docs":{"mir/index.html#key-mir-vocabulary":{"tf":3.0},"name-resolution.html#overall-strategy":{"tf":1.0},"mir/regionck.html#representing-the-values-of-a-region-variable":{"tf":1.0},"rustdoc.html#from-clean-to-crate":{"tf":1.4142135623730952},"rustdoc.html#cheat-sheet":{"tf":1.0},"appendix/background.html#what-is-a-control-flow-graph":{"tf":2.449489742783178},"compiletest.html#implementing-the-behavior-change":{"tf":1.0},"name-resolution.html#scopes-and-ribs":{"tf":1.7320508075688773},"macro-expansion.html#the-macro-parser":{"tf":1.0},"mir/index.html#mir-data-types":{"tf":1.7320508075688773},"compiletest.html#adding-a-new-header-command":{"tf":2.23606797749979}},"df":11}}},"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"s":{"docs":{"tests/adding.html#editing-and-updating-the-reference-files":{"tf":1.4142135623730952}},"df":1}}}},"y":{"docs":{},"df":0,"v":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{"miri.html#datastructures":{"tf":1.4142135623730952}},"df":1,"p":{"docs":{},"df":0,"a":{"docs":{},"df":0,"i":{"docs":{},"df":0,"r":{"docs":{"miri.html#datastructures":{"tf":1.0}},"df":1}}}},"(":{"docs":{},"df":0,"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"m":{"docs":{},"df":0,"p":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"d":{"docs":{},"df":0,"_":{"docs":{},"df":0,"v":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{},"df":0,"u":{"docs":{"miri.html#miri":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}},"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"f":{"docs":{"miri.html#datastructures":{"tf":1.0},"miri.html#interpretation":{"tf":1.0}},"df":2,"(":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"n":{"docs":{},"df":0,"e":{"docs":{},"df":0,"d":{"docs":{},"df":0,"_":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{},"df":0,"l":{"docs":{},"df":0,"o":{"docs":{},"df":0,"c":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{},"df":0,"i":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"_":{"docs":{},"df":0,"i":{"docs":{},"df":0,"d":{"docs":{"miri.html#miri":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}}}}}}}}},"p":{"docs":{},"df":0,"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"d":{"docs":{},"df":0,"u":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{"variance.html#variance-of-type-and-lifetime-parameters":{"tf":1.0}},"df":1}}}}}},"a":{"docs":{},"df":0,"s":{"docs":{},"df":0,"s":{"docs":{"rustdoc.html#hot-potato":{"tf":1.0}},"df":1}}}},"t":{"docs":{},"df":0,"e":{"docs":{"macro-expansion.html#example":{"tf":1.0},"appendix/glossary.html#appendix-c-glossary":{"tf":1.0},"miri.html#allocations":{"tf":2.0}},"df":3}}},"i":{"docs":{},"df":0,"g":{"docs":{"conventions.html#how-to-structure-your-pr":{"tf":1.0},"appendix/stupid-stats.html#overview-of-the-compilation-process":{"tf":1.0},"query.html#how-the-compiler-executes-a-query":{"tf":1.0},"compiler-debugging.html#debugging-llvm":{"tf":1.0},"rustdoc.html#from-crate-to-clean":{"tf":1.0},"traits/resolution.html#selection":{"tf":1.0},"query.html#adding-a-new-kind-of-query":{"tf":1.0},"rustc-driver.html#a-note-on-lifetimes":{"tf":1.0},"query.html#queries-demand-driven-compilation":{"tf":1.0}},"df":9},"b":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{},"df":0,"o":{"docs":{},"df":0,"g":{"docs":{},"df":0,"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"p":{"docs":{},"df":0,"h":{"docs":{},"df":0,"i":{"docs":{"traits/lowering-to-logic.html#type-checking-generic-functions-beyond-horn-clauses":{"tf":1.0},"traits/bibliography.html#bibliography":{"tf":1.4142135623730952}},"df":2}}}}}}}}}},"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{"conventions.html#how-to-structure-your-pr":{"tf":1.0}},"df":1}}}},"v":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{"variance.html#variance-of-type-and-lifetime-parameters":{"tf":1.0},"variance.html#the-algorithm":{"tf":1.0}},"df":2}}}},"n":{"docs":{},"df":0,"d":{"docs":{"the-parser.html#the-parser":{"tf":1.0},"macro-expansion.html#macro-expansion":{"tf":1.0},"macro-expansion.html#example":{"tf":1.4142135623730952},"macro-expansion.html#the-macro-parser":{"tf":1.4142135623730952},"name-resolution.html#scopes-and-ribs":{"tf":1.7320508075688773},"traits/goals-and-clauses.html#domain-goals":{"tf":1.0},"variance.html#variance-and-object-types":{"tf":1.0},"type-inference.html#inference-variables":{"tf":1.0}},"df":8,"e":{"docs":{},"df":0,"r":{"docs":{"appendix/glossary.html#appendix-c-glossary":{"tf":2.0},"appendix/background.html#what-is-a-free-region-or-a-free-variable-what-about-bound-region":{"tf":1.0}},"df":2,"s":{"docs":{},"df":0,"<":{"docs":{},"df":0,"t":{"docs":{"traits/chalk-overview.html#lowering":{"tf":1.0}},"df":1}}}}}},"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{"how-to-build-and-run.html#creating-a-rustup-toolchain":{"tf":1.0},"rustdoc.html#the-walking-tour-of-rustdoc":{"tf":1.0},"tests/adding.html#tests-that-do-not-result-in-compile-errors":{"tf":1.4142135623730952},"tests/adding.html#what-kind-of-test-should-i-add":{"tf":1.0},"traits/resolution.html#major-concepts":{"tf":1.0},"const-eval.html#constant-evaluation":{"tf":1.0},"appendix/glossary.html#appendix-c-glossary":{"tf":1.4142135623730952},"how-to-build-and-run.html#running-xpy-and-building-a-stage1-compiler":{"tf":1.0}},"df":8}}}},"t":{"docs":{"mir/index.html#key-mir-vocabulary":{"tf":1.0},"type-checking.html#type-checking":{"tf":1.0},"rustdoc.html#cheat-sheet":{"tf":1.0},"mir/passes.html#stealing":{"tf":1.0},"traits/lowering-to-logic.html#type-checking-normal-functions":{"tf":1.0},"appendix/glossary.html#appendix-c-glossary":{"tf":1.0},"traits/lowering-rules.html#function-and-constant-values":{"tf":1.0},"traits/canonical-queries.html#a-trait-query-in-rustc":{"tf":1.0},"how-to-build-and-run.html#running-xpy-and-building-a-stage1-compiler":{"tf":1.0},"traits/canonical-queries.html#examples":{"tf":1.4142135623730952},"tests/adding.html#normalization":{"tf":3.4641016151377546},"type-inference.html#enforcing-equality--subtyping":{"tf":1.0},"mir/passes.html#implementing-and-registering-a-pass":{"tf":1.0},"traits/lowering-to-logic.html#rust-traits-and-logic":{"tf":1.0},"traits/lowering-to-logic.html#type-checking-generic-functions-beyond-horn-clauses":{"tf":1.0},"query.html#cycles-between-queries":{"tf":1.0},"traits/canonical-queries.html#the-traditional-interactive-prolog-query":{"tf":1.0},"name-resolution.html#overall-strategy":{"tf":1.0},"high-level-overview.html#the-main-stages-of-compilation":{"tf":1.0},"mir/regionck.html#what-is-a-universe":{"tf":1.4142135623730952},"name-resolution.html#scopes-and-ribs":{"tf":1.0},"type-checking.html#type-collection":{"tf":1.0},"rustc-driver.html#the-rustc-driver":{"tf":1.0},"traits/canonical-queries.html#canonical-queries":{"tf":1.0},"name-resolution.html#todo":{"tf":1.0},"how-to-build-and-run.html#create-a-configtoml":{"tf":1.0}},"df":26,"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"t":{"docs":{"mir/regionck.html#representing-the-values-of-a-region-variable":{"tf":1.0}},"df":1}}},"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"d":{"docs":{"how-to-build-and-run.html#create-a-configtoml":{"tf":1.0}},"df":1}}}}},"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{"hir.html#out-of-band-storage-and-the--crate--type":{"tf":1.4142135623730952}},"df":1}},"r":{"docs":{"traits/lowering-to-logic.html#rust-traits-and-logic":{"tf":1.0},"variance.html#constraints":{"tf":2.23606797749979},"traits/lowering-rules.html#trait-header":{"tf":2.449489742783178},"mir/regionck.html#skolemization-and-universes":{"tf":1.0},"traits/lowering-to-logic.html#type-checking-normal-functions":{"tf":2.0},"hir.html#out-of-band-storage-and-the--crate--type":{"tf":2.8284271247461905},"traits/index.html#trait-solving-new-style":{"tf":1.0},"incrcomp-debugging.html#tracking-down-incorrect-edges":{"tf":1.0},"traits/goals-and-clauses.html#coinductive-goals":{"tf":2.6457513110645909},"incrcomp-debugging.html#dumping-the-graph":{"tf":2.0},"tests/adding.html#revisions":{"tf":1.7320508075688773},"tests/adding.html#normalization":{"tf":1.0},"traits/lowering-rules.html#rule-names-and-cross-references":{"tf":1.0},"traits/hrtb.html#higher-ranked-trait-obligations":{"tf":1.0},"mir/regionck.html#subtyping-and-skolemization":{"tf":1.0},"mir/regionck.html#what-is-a-universe":{"tf":2.0},"incrcomp-debugging.html#testing-the-dependency-graph":{"tf":1.0}},"df":17,"<":{"docs":{},"df":0,"&":{"docs":{},"df":0,"'":{"docs":{},"df":0,"a":{"docs":{"traits/hrtb.html#higher-ranked-trait-obligations":{"tf":1.4142135623730952}},"df":1},"0":{"docs":{"traits/hrtb.html#higher-ranked-trait-obligations":{"tf":1.0}},"df":1}}},"x":{"docs":{"traits/hrtb.html#higher-ranked-trait-obligations":{"tf":1.4142135623730952}},"df":1},"u":{"docs":{"traits/lowering-to-logic.html#type-checking-normal-functions":{"tf":1.0},"traits/lowering-to-logic.html#type-checking-generic-functions-beyond-horn-clauses":{"tf":1.0},"traits/resolution.html#selection-during-translation":{"tf":1.0}},"df":3,"s":{"docs":{"traits/resolution.html#selection-during-translation":{"tf":1.0}},"df":1}},"'":{"docs":{},"df":0,"a":{"docs":{"mir/regionck.html#what-is-a-universe":{"tf":1.7320508075688773}},"df":1}}},"w":{"docs":{},"df":0,"e":{"docs":{},"df":0,"l":{"docs":{},"df":0,"l":{"docs":{},"df":0,"f":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"m":{"docs":{},"df":0,"e":{"docs":{},"df":0,"d":{"docs":{},"df":0,"(":{"docs":{},"df":0,"u":{"docs":{},"df":0,"s":{"docs":{"traits/lowering-to-logic.html#type-checking-normal-functions":{"tf":1.4142135623730952}},"df":1}},"?":{"docs":{},"df":0,"u":{"docs":{"traits/lowering-to-logic.html#type-checking-normal-functions":{"tf":1.0}},"df":1}},"t":{"docs":{"traits/lowering-to-logic.html#type-checking-generic-functions-beyond-horn-clauses":{"tf":1.4142135623730952}},"df":1}}}}}}}}}}}},":":{"docs":{},"df":0,":":{"docs":{},"df":0,"<":{"docs":{},"df":0,"u":{"docs":{},"df":0,"s":{"docs":{"traits/lowering-to-logic.html#type-checking-normal-functions":{"tf":1.7320508075688773}},"df":1}},"t":{"docs":{"traits/lowering-to-logic.html#type-checking-generic-functions-beyond-horn-clauses":{"tf":1.0}},"df":1}}}},"(":{"docs":{},"df":0,"&":{"docs":{},"df":0,"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"l":{"docs":{},"df":0,"f":{"docs":{"traits/hrtb.html#higher-ranked-trait-obligations":{"tf":1.0}},"df":1}}}}},"f":{"docs":{"mir/regionck.html#skolemization-and-universes":{"tf":1.0}},"df":1,"o":{"docs":{},"df":0,"o":{"docs":{"mir/regionck.html#subtyping-and-skolemization":{"tf":1.0},"mir/regionck.html#skolemization-and-universes":{"tf":1.0}},"df":2}}}}},"s":{"docs":{},"df":0,"i":{"docs":{"traits/wf.html#well-formedness-checking":{"tf":1.0},"compiletest.html#adding-a-new-header-command":{"tf":1.0},"traits/bibliography.html#bibliography":{"tf":1.0}},"df":3,"c":{"docs":{"rustdoc.html#dotting-is-and-crossing-ts":{"tf":1.0},"tests/adding.html#naming-your-test":{"tf":1.0},"mir/index.html#mir-data-types":{"tf":1.7320508075688773},"macro-expansion.html#the-macro-parser":{"tf":1.0},"incremental-compilation.html#incremental-compilation":{"tf":1.0},"appendix/background.html#what-is-a-control-flow-graph":{"tf":2.23606797749979},"hir.html#out-of-band-storage-and-the--crate--type":{"tf":1.0},"variance.html#constraints":{"tf":1.0},"mir/index.html#key-mir-vocabulary":{"tf":2.23606797749979},"incremental-compilation.html#the-basic-algorithm":{"tf":1.7320508075688773},"traits/bibliography.html#bibliography":{"tf":1.0},"mir/regionck.html#subtyping-and-skolemization":{"tf":1.4142135623730952},"traits/chalk-overview.html#testing":{"tf":1.0},"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.4142135623730952},"mir/passes.html#implementing-and-registering-a-pass":{"tf":1.4142135623730952},"tests/running.html#running-tests":{"tf":1.0},"traits/associated-types.html#integration-with-unification":{"tf":1.0},"mir/regionck.html#skolemization-and-outlives-constraints":{"tf":1.0},"traits/lowering-rules.html#trait-header":{"tf":1.0},"mir/regionck.html#what-is-a-universe":{"tf":1.0},"traits/specialization.html#specialization":{"tf":1.0},"traits/resolution.html#overview":{"tf":1.0},"tests/intro.html#compiletest-test-suites":{"tf":1.0},"traits/resolution.html#selection":{"tf":1.0},"query.html#how-the-compiler-executes-a-query":{"tf":1.0},"traits/resolution.html#major-concepts":{"tf":1.0},"traits/hrtb.html#basic-matching-and-skolemization-leaks":{"tf":1.7320508075688773},"traits/lowering-to-logic.html#type-checking-generic-functions-beyond-horn-clauses":{"tf":1.0},"traits/lowering-to-logic.html#lowering-to-logic":{"tf":1.0},"traits/hrtb.html#higher-ranked-trait-obligations":{"tf":1.0},"traits/lowering-to-logic.html#rust-traits-and-logic":{"tf":1.4142135623730952},"incremental-compilation.html#improvements-to-the-basic-algorithm":{"tf":1.7320508075688773},"rustdoc.html#hot-potato":{"tf":1.0},"query.html#cycles-between-queries":{"tf":1.0},"traits/resolution.html#candidate-assembly":{"tf":1.7320508075688773},"ty.html#the-tcx-and-how-it-uses-lifetimes":{"tf":1.4142135623730952},"mir/regionck.html#representing-the-values-of-a-region-variable":{"tf":1.0},"high-level-overview.html#the-main-stages-of-compilation":{"tf":1.0},"type-inference.html#inference-variables":{"tf":1.0},"query.html#adding-a-new-kind-of-query":{"tf":1.0},"ty.html#allocating-and-working-with-types":{"tf":1.4142135623730952},"variance.html#the-algorithm":{"tf":1.0},"type-inference.html#enforcing-equality--subtyping":{"tf":1.4142135623730952},"mir/regionck.html#mir-based-region-checking-nll":{"tf":1.0}},"df":44,"_":{"docs":{},"df":0,"b":{"docs":{},"df":0,"l":{"docs":{},"df":0,"o":{"docs":{},"df":0,"c":{"docs":{},"df":0,"k":{"docs":{"mir/index.html#mir-data-types":{"tf":1.0}},"df":1}}}}}},".":{"docs":{},"df":0,"j":{"docs":{"rustdoc.html#dotting-is-and-crossing-ts":{"tf":1.0}},"df":1}},"b":{"docs":{},"df":0,"l":{"docs":{},"df":0,"o":{"docs":{},"df":0,"c":{"docs":{},"df":0,"k":{"docs":{"mir/index.html#mir-data-types":{"tf":1.0}},"df":1,"d":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{},"df":0,"a":{"docs":{"mir/index.html#mir-data-types":{"tf":1.0}},"df":1}}}}}}}}}}},"e":{"docs":{"traits/resolution.html#confirmation":{"tf":1.4142135623730952},"traits/associated-types.html#associated-type-projection-and-normalization":{"tf":1.0},"query.html#queries-demand-driven-compilation":{"tf":1.0},"variance.html#the-algorithm":{"tf":1.4142135623730952},"traits/resolution.html#candidate-assembly":{"tf":1.0},"mir/borrowck.html#mir-borrow-check":{"tf":1.4142135623730952},"traits/index.html#trait-solving-new-style":{"tf":1.0},"how-to-build-and-run.html#running-xpy-and-building-a-stage1-compiler":{"tf":1.0},"traits/canonicalization.html#canonicalization":{"tf":1.0},"mir/index.html#introduction-to-mir":{"tf":1.0},"traits/resolution.html#major-concepts":{"tf":1.0},"high-level-overview.html#the-main-stages-of-compilation":{"tf":2.0},"macro-expansion.html#the-macro-parser":{"tf":1.4142135623730952},"variance.html#addendum-variance-on-traits":{"tf":1.0},"traits/goals-and-clauses.html#goals-and-clauses":{"tf":1.0},"variance.html#variance-and-object-types":{"tf":1.0},"variance.html#variance-of-type-and-lifetime-parameters":{"tf":1.0},"mir/regionck.html#mir-based-region-checking-nll":{"tf":2.0},"appendix/glossary.html#appendix-c-glossary":{"tf":1.0},"rustdoc.html#from-clean-to-crate":{"tf":1.0},"mir/index.html#mir-data-types":{"tf":1.4142135623730952},"rustdoc.html#from-soup-to-nuts":{"tf":1.0},"type-inference.html#type-inference":{"tf":1.0}},"df":23}},"c":{"docs":{},"df":0,"k":{"docs":{"variance.html#trait-variance-and-vtable-resolution":{"tf":1.0},"traits/associated-types.html#integration-with-unification":{"tf":2.0},"traits/canonical-queries.html#a-trait-query-in-rustc":{"tf":1.7320508075688773},"query.html#queries-demand-driven-compilation":{"tf":1.0},"traits/canonicalization.html#canonicalization":{"tf":1.0},"traits/canonical-queries.html#the-traditional-interactive-prolog-query":{"tf":2.0},"ty.html#allocating-and-working-with-types":{"tf":1.4142135623730952},"traits/resolution.html#selection":{"tf":1.0},"conventions.html#how-to-structure-your-pr":{"tf":1.0},"conventions.html#use-todo-comments-for-things-you-dont-want-to-forget":{"tf":1.0},"high-level-overview.html#the-main-stages-of-compilation":{"tf":1.0},"macro-expansion.html#the-macro-parser":{"tf":1.4142135623730952},"mir/passes.html#mir-passes":{"tf":1.0},"compiletest.html#adding-a-new-header-command":{"tf":1.0},"traits/canonicalization.html#processing-the-canonicalized-query-result":{"tf":1.4142135623730952},"query.html#cycles-between-queries":{"tf":1.0},"traits/hrtb.html#higher-ranked-trait-obligations":{"tf":1.4142135623730952},"mir/regionck.html#back-to-our-example":{"tf":1.4142135623730952},"mir/visitor.html#mir-visitor":{"tf":1.4142135623730952},"the-parser.html#the-parser":{"tf":1.0},"traits/canonicalization.html#canonicalizing-the-query":{"tf":1.0},"type-inference.html#snapshots":{"tf":1.0},"incremental-compilation.html#the-query-dag":{"tf":1.4142135623730952},"traits/canonical-queries.html#examples":{"tf":1.0}},"df":24,"g":{"docs":{},"df":0,"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"u":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{"traits/bibliography.html#bibliography":{"tf":1.0},"appendix/glossary.html#appendix-c-glossary":{"tf":2.6457513110645909},"type-inference.html#enforcing-equality--subtyping":{"tf":1.0},"mir/index.html#key-mir-vocabulary":{"tf":1.0},"compiletest.html#introduction":{"tf":1.0},"tests/running.html#running-tests":{"tf":1.0},"variance.html#variance-of-type-and-lifetime-parameters":{"tf":1.4142135623730952},"appendix/background.html#appendix-b-background-topics":{"tf":1.4142135623730952}},"df":8}}}}}},"t":{"docs":{},"df":0,"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"c":{"docs":{"incrcomp-debugging.html#tracking-down-incorrect-edges":{"tf":1.4142135623730952},"how-to-build-and-run.html#create-a-configtoml":{"tf":1.0},"compiler-debugging.html#getting-a-backtrace":{"tf":2.8284271247461905},"compiler-debugging.html#getting-a-backtrace-for-errors":{"tf":3.1622776601683797}},"df":4,"k":{"docs":{"type-inference.html#snapshots":{"tf":1.0}},"df":1}}}}},"s":{"docs":{},"df":0,"c":{"docs":{},"df":0,"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"l":{"docs":{"compiler-debugging.html#getting-logging-output":{"tf":1.0}},"df":1}}}},"l":{"docs":{},"df":0,"a":{"docs":{},"df":0,"s":{"docs":{},"df":0,"h":{"docs":{"tests/adding.html#normalization":{"tf":1.0}},"df":1}}}}},"w":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"d":{"docs":{"high-level-overview.html#the-main-stages-of-compilation":{"tf":1.0}},"df":1}}}},"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{"appendix/glossary.html#appendix-c-glossary":{"tf":1.0},"appendix/stupid-stats.html#overview-of-the-compilation-process":{"tf":1.0}},"df":2}}}}},"z":{"docs":{"incrcomp-debugging.html#testing-the-dependency-graph":{"tf":1.0},"traits/lowering-rules.html#rule-names-and-cross-references":{"tf":1.0},"tests/adding.html#revisions":{"tf":1.7320508075688773},"traits/hrtb.html#higher-ranked-trait-obligations":{"tf":1.7320508075688773}},"df":4},"l":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"c":{"docs":{"macro-expansion.html#example":{"tf":1.0}},"df":1}}}}},"u":{"docs":{},"df":0,"l":{"docs":{},"df":0,"g":{"docs":{"high-level-overview.html#crate-structure":{"tf":1.0}},"df":1},"k":{"docs":{"appendix/stupid-stats.html#overview-of-the-compilation-process":{"tf":1.0},"high-level-overview.html#crate-structure":{"tf":1.0},"the-parser.html#the-parser":{"tf":1.0}},"df":3}},"n":{"docs":{},"df":0,"c":{"docs":{},"df":0,"h":{"docs":{"how-to-build-and-run.html#running-xpy-and-building-a-stage1-compiler":{"tf":1.0},"rustdoc.html#from-soup-to-nuts":{"tf":1.0},"appendix/stupid-stats.html#overview-of-the-compilation-process":{"tf":1.4142135623730952},"how-to-build-and-run.html#creating-a-rustup-toolchain":{"tf":1.0},"type-inference.html#inference-variables":{"tf":1.0},"mir/index.html#key-mir-vocabulary":{"tf":1.0},"rustdoc.html#cheat-sheet":{"tf":1.0}},"df":7}},"d":{"docs":{},"df":0,"l":{"docs":{"type-checking.html#type-collection":{"tf":1.0},"rustdoc.html#cheat-sheet":{"tf":1.0},"param_env.html#parameter-environment":{"tf":1.0}},"df":3}}},"i":{"docs":{},"df":0,"l":{"docs":{},"df":0,"d":{"docs":{"traits/specialization.html#specialization":{"tf":1.4142135623730952},"compiler-debugging.html#debugging-llvm":{"tf":1.7320508075688773},"tests/intro.html#compiletest-test-suites":{"tf":1.0},"rustdoc.html#other-tricks-up-its-sleeve":{"tf":1.0},"tests/intro.html#other-tests":{"tf":2.0},"rustdoc.html#cheat-sheet":{"tf":1.4142135623730952},"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.4142135623730952},"how-to-build-and-run.html#how-to-build-the-compiler-and-run-what-you-built":{"tf":1.4142135623730952},"how-to-build-and-run.html#create-a-configtoml":{"tf":1.0},"rustc-driver.html#the-rustc-driver":{"tf":1.0},"tests/intro.html#testing-with-docker-images":{"tf":1.7320508075688773},"conventions.html#how-to-structure-your-pr":{"tf":1.7320508075688773},"appendix/code-index.html#appendix-d-code-index":{"tf":1.0},"tests/intro.html#testing-on-emulators":{"tf":1.0},"tests/running.html#running-tests":{"tf":1.0},"appendix/stupid-stats.html#appendix-a-a-tutorial-on-creating-a-drop-in-replacement-for-rustc":{"tf":1.4142135623730952},"tests/intro.html#the-compiler-testing-framework":{"tf":1.0},"how-to-build-and-run.html#other-xpy-commands":{"tf":2.6457513110645909},"how-to-build-and-run.html#creating-a-rustup-toolchain":{"tf":2.0},"tests/intro.html#testing-infrastructure":{"tf":1.7320508075688773},"tests/running.html#running-a-subset-of-the-test-suites":{"tf":1.7320508075688773},"compiler-debugging.html#getting-logging-output":{"tf":1.0},"name-resolution.html#namespaces":{"tf":1.0},"how-to-build-and-run.html#running-xpy-and-building-a-stage1-compiler":{"tf":4.358898943540674}},"df":24,"_":{"docs":{},"df":0,"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{},"df":0,"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"l":{"docs":{"appendix/stupid-stats.html#compilercalls":{"tf":1.0},"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.0}},"df":2,"l":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"(":{"docs":{},"df":0,"&":{"docs":{},"df":0,"m":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.4142135623730952}},"df":1}}}}}}}}}}}}}}}},"e":{"docs":{},"df":0,"r":{"docs":{"type-inference.html#creating-an-inference-context":{"tf":1.0}},"df":1}},"/":{"docs":{},"df":0,"<":{"docs":{},"df":0,"t":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"g":{"docs":{},"df":0,"e":{"docs":{},"df":0,"t":{"docs":{"tests/adding.html#guide-to-the-ui-tests":{"tf":1.0}},"df":1}}}}}},"h":{"docs":{},"df":0,"o":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{"how-to-build-and-run.html#creating-a-rustup-toolchain":{"tf":1.4142135623730952},"compiler-debugging.html#debugging-llvm":{"tf":1.4142135623730952}},"df":2}}}}},"x":{"docs":{},"df":0,"8":{"docs":{},"df":0,"6":{"docs":{},"df":0,"_":{"docs":{},"df":0,"6":{"docs":{},"df":0,"4":{"docs":{"compiler-debugging.html#getting-a-backtrace-for-errors":{"tf":1.4142135623730952}},"df":1}}}}}},"$":{"docs":{},"df":0,"t":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{},"df":0,"p":{"docs":{},"df":0,"l":{"docs":{},"df":0,"e":{"docs":{},"df":0,"/":{"docs":{},"df":0,"l":{"docs":{},"df":0,"l":{"docs":{},"df":0,"v":{"docs":{},"df":0,"m":{"docs":{},"df":0,"/":{"docs":{},"df":0,"b":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"/":{"docs":{},"df":0,"l":{"docs":{},"df":0,"l":{"docs":{},"df":0,"v":{"docs":{},"df":0,"m":{"docs":{"compiler-debugging.html#debugging-llvm":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}},"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"g":{"docs":{},"df":0,"e":{"docs":{},"df":0,"t":{"docs":{},"df":0,"/":{"docs":{},"df":0,"d":{"docs":{},"df":0,"o":{"docs":{},"df":0,"c":{"docs":{},"df":0,"/":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"d":{"docs":{"rustdoc.html#cheat-sheet":{"tf":1.0}},"df":1}}}}}}}}}}}}}}},"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"c":{"docs":{},"df":0,"h":{"docs":{},"df":0,"/":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{"tests/running.html#running-tests":{"tf":1.0}},"df":1}}}}}}}}}}},"t":{"docs":{"how-to-build-and-run.html#how-to-build-the-compiler-and-run-what-you-built":{"tf":1.7320508075688773},"how-to-build-and-run.html#running-xpy-and-building-a-stage1-compiler":{"tf":1.0},"tests/adding.html#normalization":{"tf":1.0},"how-to-build-and-run.html#creating-a-rustup-toolchain":{"tf":1.7320508075688773},"compiler-debugging.html#getting-logging-output":{"tf":1.0},"diag.html#declaring-a-lint":{"tf":1.0},"incrcomp-debugging.html#tracking-down-incorrect-edges":{"tf":1.0},"tests/intro.html#compiletest-test-suites":{"tf":1.0}},"df":8}}},"g":{"docs":{"tests/adding.html#adding-new-tests":{"tf":1.0},"mir/borrowck.html#mir-borrow-check":{"tf":1.4142135623730952},"tests/adding.html#comment-explaining-what-the-test-is-about":{"tf":1.0},"compiler-debugging.html#debugging-llvm":{"tf":1.0},"query.html#cycles-between-queries":{"tf":1.0},"compiler-debugging.html#getting-logging-output":{"tf":1.0},"compiler-debugging.html#getting-a-backtrace-for-errors":{"tf":2.0},"incrcomp-debugging.html#tracking-down-incorrect-edges":{"tf":1.4142135623730952},"traits/caching.html#where-clauses-and-the-local-vs-global-cache":{"tf":1.0},"conventions.html#use-todo-comments-for-things-you-dont-want-to-forget":{"tf":1.0},"compiler-debugging.html#logging-etiquette":{"tf":1.0},"compiler-debugging.html#expensive-operations-in-logs":{"tf":1.0}},"df":12},"t":{"docs":{},"df":0,"t":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{"mir/index.html#key-mir-vocabulary":{"tf":1.4142135623730952}},"df":1}}}}},"b":{"docs":{},"df":0,"2":{"docs":{"mir/index.html#key-mir-vocabulary":{"tf":2.23606797749979},"appendix/background.html#what-is-a-control-flow-graph":{"tf":1.4142135623730952}},"df":2},"1":{"docs":{"appendix/background.html#what-is-a-control-flow-graph":{"tf":1.4142135623730952},"miri.html#miri":{"tf":1.4142135623730952}},"df":2},"3":{"docs":{"mir/index.html#key-mir-vocabulary":{"tf":1.0},"appendix/background.html#what-is-a-control-flow-graph":{"tf":1.7320508075688773}},"df":2},"0":{"docs":{"miri.html#miri":{"tf":1.0},"appendix/background.html#what-is-a-control-flow-graph":{"tf":1.4142135623730952},"mir/index.html#key-mir-vocabulary":{"tf":1.4142135623730952}},"df":3},"4":{"docs":{"mir/index.html#key-mir-vocabulary":{"tf":1.0}},"df":1}},"r":{"docs":{},"df":0,"i":{"docs":{},"df":0,"e":{"docs":{},"df":0,"f":{"docs":{"tests/intro.html#compiletest-test-suites":{"tf":1.0},"tests/intro.html#the-compiler-testing-framework":{"tf":1.0}},"df":2,"l":{"docs":{},"df":0,"i":{"docs":{"compiletest.html#adding-a-new-test-file":{"tf":1.0}},"df":1}}}},"n":{"docs":{},"df":0,"g":{"docs":{"traits/canonicalization.html#canonicalizing-the-query-result":{"tf":1.0},"variance.html#trait-variance-and-vtable-resolution":{"tf":1.0},"traits/associated-types.html#projection-equality":{"tf":1.0}},"df":3}}},"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"c":{"docs":{},"df":0,"h":{"docs":{"tests/intro.html#testing-infrastructure":{"tf":1.0},"appendix/background.html#what-is-a-control-flow-graph":{"tf":1.4142135623730952}},"df":2}}},"c":{"docs":{},"df":0,"e":{"docs":{"name-resolution.html#scopes-and-ribs":{"tf":1.0}},"df":1}}},"e":{"docs":{},"df":0,"a":{"docs":{},"df":0,"k":{"docs":{"rustdoc.html#hot-potato":{"tf":1.0},"tests/adding.html#comment-explaining-what-the-test-is-about":{"tf":1.0},"conventions.html#how-to-structure-your-pr":{"tf":1.0},"appendix/background.html#what-is-a-control-flow-graph":{"tf":1.0},"rustc-driver.html#the-rustc-driver":{"tf":1.0},"mir/regionck.html#another-example":{"tf":1.0},"traits/goals-and-clauses.html#domain-goals":{"tf":1.0}},"df":7}},"v":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{},"df":0,"i":{"docs":{"compiler-debugging.html#getting-a-backtrace":{"tf":1.7320508075688773}},"df":1}}}}},"o":{"docs":{},"df":0,"k":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{"traits/chalk-overview.html#an-overview-of-chalk":{"tf":1.0},"how-to-build-and-run.html#running-xpy-and-building-a-stage1-compiler":{"tf":1.0},"traits/resolution.html#selection":{"tf":1.0},"query.html#adding-a-new-kind-of-query":{"tf":1.0},"rustdoc.html#dotting-is-and-crossing-ts":{"tf":1.0}},"df":5}}},"w":{"docs":{},"df":0,"s":{"docs":{"tests/adding.html#other-header-commands":{"tf":1.0}},"df":1}},"a":{"docs":{},"df":0,"d":{"docs":{"rustdoc.html#dotting-is-and-crossing-ts":{"tf":1.0}},"df":1}}},"s":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"'":{"docs":{"tests/intro.html#further-reading":{"tf":1.0}},"df":1}}}}}},"h":{"docs":{"type-inference.html#inference-variables":{"tf":1.4142135623730952}},"df":1,"o":{"docs":{},"df":0,"l":{"docs":{},"df":0,"d":{"docs":{"compiletest.html#adding-a-new-header-command":{"tf":1.0},"traits/canonical-queries.html#a-trait-query-in-rustc":{"tf":1.0},"traits/resolution.html#selection":{"tf":1.0},"traits/canonical-queries.html#examples":{"tf":1.7320508075688773},"traits/lowering-to-logic.html#type-checking-generic-functions-beyond-horn-clauses":{"tf":1.4142135623730952},"traits/lowering-rules.html#associated-type-declarations":{"tf":1.0},"traits/resolution.html#candidate-assembly":{"tf":1.0},"traits/goals-and-clauses.html#coinductive-goals":{"tf":1.0},"compiletest.html#introduction":{"tf":1.4142135623730952},"variance.html#constraints":{"tf":1.0},"traits/lowering-rules.html#trait-header":{"tf":1.4142135623730952}},"df":11,"e":{"docs":{},"df":0,"r":{"docs":{"query.html#adding-a-new-kind-of-query":{"tf":1.0}},"df":1}}}},"o":{"docs":{},"df":0,"k":{"docs":{"appendix/stupid-stats.html#compilercalls":{"tf":1.0}},"df":1},"d":{"docs":{"tests/intro.html#other-tests":{"tf":1.0},"tests/running.html#running-an-individual-test":{"tf":1.0}},"df":2}},"t":{"docs":{"rustdoc.html#hot-potato":{"tf":1.4142135623730952}},"df":1},"c":{"docs":{"traits/chalk-overview.html#an-overview-of-chalk":{"tf":1.0},"appendix/stupid-stats.html#compilercalls":{"tf":1.0}},"df":2},"s":{"docs":{},"df":0,"t":{"docs":{"how-to-build-and-run.html#creating-a-rustup-toolchain":{"tf":1.0}},"df":1}},"p":{"docs":{},"df":0,"e":{"docs":{"high-level-overview.html#crate-structure":{"tf":1.0}},"df":1,"f":{"docs":{},"df":0,"u":{"docs":{},"df":0,"l":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{"appendix/stupid-stats.html#appendix-a-a-tutorial-on-creating-a-drop-in-replacement-for-rustc":{"tf":1.0},"appendix/stupid-stats.html#compilercalls":{"tf":1.0},"mir/regionck.html#mir-based-region-checking-nll":{"tf":1.4142135623730952},"incrcomp-debugging.html#dumping-the-graph":{"tf":1.0}},"df":4}}}}}}},"m":{"docs":{},"df":0,"e":{"docs":{},"df":0,"/":{"docs":{},"df":0,"u":{"docs":{},"df":0,"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"/":{"docs":{},"df":0,"r":{"docs":{},"df":0,"u":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"/":{"docs":{},"df":0,"s":{"docs":{},"df":0,"r":{"docs":{},"df":0,"c":{"docs":{},"df":0,"/":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{},"df":0,"b":{"docs":{},"df":0,"r":{"docs":{},"df":0,"u":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"c":{"docs":{},"df":0,"_":{"docs":{},"df":0,"d":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{},"df":0,"v":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"/":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{},"df":0,"b":{"docs":{},"df":0,".":{"docs":{},"df":0,"r":{"docs":{},"df":0,"s":{"docs":{},"df":0,":":{"docs":{},"df":0,"2":{"docs":{},"df":0,"5":{"docs":{},"df":0,"3":{"docs":{"compiler-debugging.html#getting-a-backtrace-for-errors":{"tf":1.0},"compiler-debugging.html#getting-a-backtrace":{"tf":1.0}},"df":2}}}}}}}}}},"d":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{},"df":0,"v":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,".":{"docs":{},"df":0,"r":{"docs":{},"df":0,"s":{"docs":{},"df":0,":":{"docs":{},"df":0,"2":{"docs":{},"df":0,"1":{"docs":{},"df":0,"2":{"docs":{"compiler-debugging.html#getting-a-backtrace":{"tf":1.0}},"df":1}}},"1":{"docs":{},"df":0,"0":{"docs":{},"df":0,"1":{"docs":{},"df":0,"0":{"docs":{"compiler-debugging.html#getting-a-backtrace":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"df":0,"y":{"docs":{},"df":0,"p":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"k":{"docs":{},"df":0,"/":{"docs":{},"df":0,"c":{"docs":{},"df":0,"h":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"k":{"docs":{},"df":0,"/":{"docs":{},"df":0,"c":{"docs":{},"df":0,"a":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,".":{"docs":{},"df":0,"r":{"docs":{},"df":0,"s":{"docs":{},"df":0,":":{"docs":{},"df":0,"1":{"docs":{},"df":0,"1":{"docs":{},"df":0,"0":{"docs":{"compiler-debugging.html#getting-a-backtrace":{"tf":1.0}},"df":1}}},"3":{"docs":{},"df":0,"7":{"docs":{},"df":0,"0":{"docs":{"compiler-debugging.html#getting-a-backtrace":{"tf":1.0}},"df":1}}},"5":{"docs":{},"df":0,"7":{"docs":{},"df":0,"2":{"docs":{"compiler-debugging.html#getting-a-backtrace":{"tf":1.0}},"df":1}}},"4":{"docs":{},"df":0,"6":{"docs":{},"df":0,"0":{"docs":{"compiler-debugging.html#getting-a-backtrace":{"tf":1.0}},"df":1}}}}}}}}}}},"m":{"docs":{},"df":0,"o":{"docs":{},"df":0,"d":{"docs":{},"df":0,".":{"docs":{},"df":0,"r":{"docs":{},"df":0,"s":{"docs":{},"df":0,":":{"docs":{},"df":0,"2":{"docs":{},"df":0,"1":{"docs":{},"df":0,"9":{"docs":{},"df":0,"2":{"docs":{"compiler-debugging.html#getting-a-backtrace-for-errors":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"s":{"docs":{},"df":0,"/":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{},"df":0,"b":{"docs":{},"df":0,".":{"docs":{},"df":0,"r":{"docs":{},"df":0,"s":{"docs":{},"df":0,":":{"docs":{},"df":0,"4":{"docs":{},"df":0,"1":{"docs":{},"df":0,"1":{"docs":{},"df":0,":":{"docs":{},"df":0,"1":{"docs":{},"df":0,"2":{"docs":{"compiler-debugging.html#getting-a-backtrace-for-errors":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}}}},"/":{"docs":{},"df":0,"t":{"docs":{},"df":0,"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{},"df":0,"s":{"docs":{},"df":0,"/":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"_":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"p":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"t":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"g":{"docs":{},"df":0,".":{"docs":{},"df":0,"r":{"docs":{},"df":0,"s":{"docs":{},"df":0,":":{"docs":{},"df":0,"1":{"docs":{},"df":0,"1":{"docs":{},"df":0,"2":{"docs":{"compiler-debugging.html#getting-a-backtrace-for-errors":{"tf":1.0}},"df":1}},"6":{"docs":{},"df":0,"0":{"docs":{"compiler-debugging.html#getting-a-backtrace-for-errors":{"tf":1.0}},"df":1}}},"8":{"docs":{},"df":0,"2":{"docs":{},"df":0,"3":{"docs":{"compiler-debugging.html#getting-a-backtrace-for-errors":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"u":{"docs":{},"df":0,"r":{"docs":{"tests/intro.html#testing-on-emulators":{"tf":1.0}},"df":1},"s":{"docs":{"type-inference.html#inference-variables":{"tf":1.0},"tests/intro.html#compiletest-test-suites":{"tf":1.0}},"df":2}},"r":{"docs":{},"df":0,"n":{"docs":{"traits/lowering-to-logic.html#type-checking-generic-functions-beyond-horn-clauses":{"tf":2.23606797749979},"traits/lowering-to-logic.html#lowering-to-logic":{"tf":1.0},"traits/lowering-to-logic.html#rust-traits-and-logic":{"tf":1.7320508075688773},"traits/goals-and-clauses.html#goals-and-clauses":{"tf":1.0}},"df":4},"r":{"docs":{},"df":0,"i":{"docs":{},"df":0,"b":{"docs":{},"df":0,"l":{"docs":{"miri.html#interpretation":{"tf":1.0}},"df":1}}}}}},"e":{"docs":{},"df":0,"a":{"docs":{},"df":0,"p":{"docs":{"miri.html#allocations":{"tf":1.4142135623730952},"const-eval.html#constant-evaluation":{"tf":1.0}},"df":2},"v":{"docs":{},"df":0,"i":{"docs":{"traits/chalk-overview.html#an-overview-of-chalk":{"tf":1.0}},"df":1,"l":{"docs":{},"df":0,"i":{"docs":{"type-checking.html#type-checking":{"tf":1.0},"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.0},"rustc-driver.html#a-note-on-lifetimes":{"tf":1.0},"traits/chalk-overview.html#parsing":{"tf":1.0}},"df":4}}}},"d":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"tests/adding.html#tests-that-do-not-result-in-compile-errors":{"tf":1.0},"compiletest.html#header-commands":{"tf":2.0},"traits/lowering-rules.html#trait-header":{"tf":1.7320508075688773},"tests/adding.html#header-commands-configuring-rustc":{"tf":1.7320508075688773},"tests/adding.html#normalization":{"tf":1.0},"traits/lowering-rules.html#lowering-traits":{"tf":1.0},"compiletest.html#implementing-the-behavior-change":{"tf":2.6457513110645909},"tests/adding.html#adding-new-tests":{"tf":1.0},"compiletest.html#adding-a-new-header-command":{"tf":4.47213595499958},"tests/adding.html#other-header-commands":{"tf":2.23606797749979},"tests/adding.html#revisions":{"tf":2.449489742783178}},"df":11,"_":{"docs":{},"df":0,"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"m":{"docs":{},"df":0,"m":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{"compiletest.html#adding-a-new-header-command":{"tf":1.0}},"df":1}}}}}}}},".":{"docs":{},"df":0,"r":{"docs":{"tests/adding.html#other-header-commands":{"tf":1.0}},"df":1}}}}}},"u":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{"tests/adding.html#what-kind-of-test-should-i-add":{"tf":1.0}},"df":1}}}}},"l":{"docs":{},"df":0,"p":{"docs":{"mir/passes.html#implementing-and-registering-a-pass":{"tf":1.0},"how-to-build-and-run.html#create-a-configtoml":{"tf":1.0},"incrcomp-debugging.html#tracking-down-incorrect-edges":{"tf":1.0},"compiletest.html#implementing-the-behavior-change":{"tf":1.0},"high-level-overview.html#the-main-stages-of-compilation":{"tf":1.0},"about-this-guide.html#about-this-guide":{"tf":1.4142135623730952},"name-resolution.html#name-resolution":{"tf":1.0},"variance.html#variance-and-associated-types":{"tf":1.0},"compiler-debugging.html#logging-etiquette":{"tf":1.4142135623730952},"type-inference.html#snapshots":{"tf":1.0},"variance.html#trait-variance-and-vtable-resolution":{"tf":1.0},"conventions.html#how-to-structure-your-pr":{"tf":1.0},"tests/adding.html#what-kind-of-test-should-i-add":{"tf":1.0},"macro-expansion.html#example":{"tf":1.0},"diag.html#error-messages":{"tf":1.0},"rustc-driver.html#a-note-on-lifetimes":{"tf":1.0},"appendix/stupid-stats.html#appendix-a-a-tutorial-on-creating-a-drop-in-replacement-for-rustc":{"tf":1.0},"tests/intro.html#testing-on-emulators":{"tf":1.0},"name-resolution.html#scopes-and-ribs":{"tf":1.0},"tests/adding.html#comment-explaining-what-the-test-is-about":{"tf":1.0},"high-level-overview.html#crate-structure":{"tf":1.0},"incrcomp-debugging.html#dumping-the-graph":{"tf":1.0},"tests/adding.html#naming-your-test":{"tf":1.0},"mir/borrowck.html#mir-borrow-check":{"tf":1.0},"compiler-debugging.html#getting-a-backtrace-for-errors":{"tf":1.7320508075688773},"diag.html#suggestions":{"tf":1.4142135623730952},"tests/adding.html#error-annotations":{"tf":1.4142135623730952},"traits/index.html#trait-solving-new-style":{"tf":1.0}},"df":28,"e":{"docs":{},"df":0,"r":{"docs":{"name-resolution.html#scopes-and-ribs":{"tf":2.449489742783178},"query.html#cycles-between-queries":{"tf":1.0},"name-resolution.html#name-resolution":{"tf":1.0}},"df":3}}}},"n":{"docs":{},"df":0,"c":{"docs":{"traits/lowering-rules.html#trait-header":{"tf":1.0},"traits/canonical-queries.html#the-traditional-interactive-prolog-query":{"tf":1.0},"traits/lowering-rules.html#associated-type-declarations":{"tf":1.0},"tests/intro.html#compiletest-test-suites":{"tf":1.0},"traits/caching.html#an-example":{"tf":1.0},"mir/regionck.html#skolemization-and-outlives-constraints":{"tf":1.0},"mir/regionck.html#mir-based-region-checking-nll":{"tf":1.0},"traits/resolution.html#confirmation":{"tf":1.0},"mir/regionck.html#another-example":{"tf":1.0},"variance.html#variance-and-object-types":{"tf":1.0},"incremental-compilation.html#the-query-dag":{"tf":1.0},"traits/hrtb.html#basic-matching-and-skolemization-leaks":{"tf":1.0},"incremental-compilation.html#the-basic-algorithm":{"tf":1.4142135623730952},"high-level-overview.html#the-main-stages-of-compilation":{"tf":1.0},"mir/index.html#key-mir-vocabulary":{"tf":1.0}},"df":15}},"r":{"docs":{},"df":0,"e":{"docs":{"variance.html#the-algorithm":{"tf":1.4142135623730952},"how-to-build-and-run.html#running-xpy-and-building-a-stage1-compiler":{"tf":1.7320508075688773},"ty.html#the-tcx-and-how-it-uses-lifetimes":{"tf":1.7320508075688773},"ty.html#beyond-types-other-kinds-of-arena-allocated-data-structures":{"tf":1.4142135623730952},"miri.html#miri":{"tf":1.0},"mir/index.html#key-mir-vocabulary":{"tf":1.4142135623730952},"traits/canonical-queries.html#examples":{"tf":1.4142135623730952},"traits/lowering-rules.html#trait-header":{"tf":1.0},"mir/borrowck.html#mir-borrow-check":{"tf":1.0},"appendix/glossary.html#appendix-c-glossary":{"tf":1.4142135623730952},"type-inference.html#type-inference":{"tf":1.0},"mir/passes.html#seeing-how-the-mir-changes-as-the-compiler-executes":{"tf":1.0},"traits/implied-bounds.html#implied-bounds":{"tf":1.0},"traits/lowering-rules.html#associated-type-declarations":{"tf":1.0},"compiler-debugging.html#debugging-llvm":{"tf":1.0},"mir/regionck.html#subtyping-and-skolemization":{"tf":1.4142135623730952},"query.html#cycles-between-queries":{"tf":1.0},"type-inference.html#creating-an-inference-context":{"tf":1.0},"traits/canonical-queries.html#a-trait-query-in-rustc":{"tf":1.0},"appendix/stupid-stats.html#compilercontroller":{"tf":1.0},"appendix/stupid-stats.html#compilercalls":{"tf":1.0},"tests/adding.html#other-header-commands":{"tf":1.0},"tests/adding.html#what-kind-of-test-should-i-add":{"tf":1.0},"traits/lowering-rules.html#transforming-the-lowered-where-clauses":{"tf":1.0},"mir/regionck.html#final-example":{"tf":1.0},"diag.html#error-messages":{"tf":1.4142135623730952},"traits/lowering-to-logic.html#lowering-to-logic":{"tf":1.0},"rustdoc.html#other-tricks-up-its-sleeve":{"tf":1.0},"traits/specialization.html#specialization":{"tf":1.0},"traits/goals-and-clauses.html#coinductive-goals":{"tf":1.0},"traits/lowering-rules.html#associated-type-values":{"tf":1.0},"mir/regionck.html#another-example":{"tf":1.4142135623730952},"traits/lowering-to-logic.html#type-checking-normal-functions":{"tf":1.0},"conventions.html#how-to-structure-your-pr":{"tf":1.0},"compiler-debugging.html#debugging-the-compiler":{"tf":1.0},"variance.html#trait-variance-and-vtable-resolution":{"tf":1.0},"mir/regionck.html#what-is-a-universe":{"tf":2.0},"traits/resolution.html#selection-during-translation":{"tf":1.0},"traits/associated-types.html#integration-with-unification":{"tf":1.0},"appendix/background.html#what-is-a-free-region-or-a-free-variable-what-about-bound-region":{"tf":1.0},"query.html#how-the-compiler-executes-a-query":{"tf":1.4142135623730952},"rustdoc.html#from-clean-to-crate":{"tf":1.4142135623730952},"tests/adding.html#normalization":{"tf":1.0},"traits/chalk-overview.html#resources":{"tf":1.0},"compiletest.html#adding-a-new-header-command":{"tf":1.7320508075688773},"tests/intro.html#testing-on-emulators":{"tf":1.0},"tests/adding.html#naming-your-test":{"tf":1.0},"tests/intro.html#compiletest-test-suites":{"tf":1.0},"incremental-compilation.html#the-basic-algorithm":{"tf":1.0},"traits/hrtb.html#higher-ranked-trait-obligations":{"tf":1.4142135623730952},"traits/lowering-to-logic.html#type-checking-generic-functions-beyond-horn-clauses":{"tf":1.0},"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.0},"name-resolution.html#scopes-and-ribs":{"tf":2.0},"traits/hrtb.html#basic-matching-and-skolemization-leaks":{"tf":1.4142135623730952},"name-resolution.html#namespaces":{"tf":1.0},"how-to-build-and-run.html#other-xpy-commands":{"tf":1.0},"mir/regionck.html#skolemization-and-outlives-constraints":{"tf":1.4142135623730952},"compiletest.html#header-commands":{"tf":1.0},"query.html#queries-demand-driven-compilation":{"tf":1.0},"macro-expansion.html#the-macro-parser":{"tf":1.0},"method-lookup.html#method-lookup":{"tf":1.0},"mir/regionck.html#back-to-our-example":{"tf":1.4142135623730952},"rustdoc.html#hot-potato":{"tf":1.0},"variance.html#variance-and-object-types":{"tf":1.0},"traits/bibliography.html#bibliography":{"tf":1.0},"diag.html#suggestions":{"tf":2.0}},"df":66,"d":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{"traits/goals-and-clauses.html#goals-and-clauses":{"tf":1.0},"traits/lowering-to-logic.html#type-checking-generic-functions-beyond-horn-clauses":{"tf":1.4142135623730952},"traits/goals-and-clauses.html#goals-and-clauses-meta-structure":{"tf":1.0},"traits/bibliography.html#bibliography":{"tf":1.0}},"df":4}}}}}},"a":{"docs":{},"df":0,"f":{"docs":{},"df":0,"t":{"docs":{"variance.html#variance-of-type-and-lifetime-parameters":{"tf":1.0}},"df":1}}}}}},"i":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{"variance.html#addendum-variance-on-traits":{"tf":1.0},"high-level-overview.html#crate-structure":{"tf":1.0}},"df":2,"i":{"docs":{"conventions.html#how-to-structure-your-pr":{"tf":1.0}},"df":1}}}}},"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"c":{"docs":{},"df":0,"h":{"docs":{"name-resolution.html#scopes-and-ribs":{"tf":1.0}},"df":1,"i":{"docs":{"name-resolution.html#namespaces":{"tf":1.0},"name-resolution.html#overall-strategy":{"tf":1.0},"traits/specialization.html#specialization":{"tf":1.4142135623730952}},"df":3}}}}}}},"g":{"docs":{},"df":0,"h":{"docs":{"high-level-overview.html#crate-structure":{"tf":1.0},"high-level-overview.html#the-main-stages-of-compilation":{"tf":1.4142135623730952},"rustdoc.html#the-walking-tour-of-rustdoc":{"tf":1.0},"appendix/stupid-stats.html#appendix-a-a-tutorial-on-creating-a-drop-in-replacement-for-rustc":{"tf":1.0},"mir/index.html#the-mir-mid-level-ir":{"tf":1.0},"query.html#queries-demand-driven-compilation":{"tf":1.0},"appendix/stupid-stats.html#the-driver-customisation-apis":{"tf":1.0},"high-level-overview.html#high-level-overview-of-the-compiler-source":{"tf":1.4142135623730952},"incremental-compilation.html#the-basic-algorithm":{"tf":1.0},"hir.html#the-hir":{"tf":1.0},"appendix/stupid-stats.html#overview-of-the-compilation-process":{"tf":1.0},"compiletest.html#adding-a-new-header-command":{"tf":1.0},"traits/canonical-queries.html#canonical-queries":{"tf":1.0},"appendix/glossary.html#appendix-c-glossary":{"tf":1.0},"traits/caching.html#where-clauses-and-the-local-vs-global-cache":{"tf":1.0},"traits/caching.html#an-example":{"tf":1.0},"about-this-guide.html#about-this-guide":{"tf":1.0}},"df":17,"l":{"docs":{},"df":0,"i":{"docs":{"traits/chalk-overview.html#an-overview-of-chalk":{"tf":1.0}},"df":1,"g":{"docs":{},"df":0,"h":{"docs":{},"df":0,"t":{"docs":{"tests/adding.html#comment-explaining-what-the-test-is-about":{"tf":1.4142135623730952},"rustdoc.html#from-clean-to-crate":{"tf":1.0},"conventions.html#how-to-structure-your-pr":{"tf":1.0}},"df":3}}}}},"e":{"docs":{},"df":0,"r":{"docs":{"traits/bibliography.html#bibliography":{"tf":1.0},"traits/hrtb.html#higher-ranked-trait-bounds":{"tf":2.0},"appendix/glossary.html#appendix-c-glossary":{"tf":1.0},"type-inference.html#type-inference":{"tf":1.0},"type-inference.html#snapshots":{"tf":1.0},"traits/hrtb.html#higher-ranked-trait-obligations":{"tf":1.4142135623730952},"traits/hrtb.html#basic-matching-and-skolemization-leaks":{"tf":1.4142135623730952}},"df":7,"_":{"docs":{},"df":0,"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"k":{"docs":{},"df":0,"e":{"docs":{},"df":0,"d":{"docs":{},"df":0,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"p":{"docs":{},"df":0,"l":{"docs":{},"df":0,"u":{"docs":{},"df":0,"g":{"docs":{},"df":0,"_":{"docs":{},"df":0,"l":{"docs":{},"df":0,"e":{"docs":{},"df":0,"a":{"docs":{},"df":0,"k":{"docs":{"traits/hrtb.html#higher-ranked-trait-obligations":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"df":0,"t":{"docs":{"appendix/stupid-stats.html#overview-of-the-compilation-process":{"tf":1.0}},"df":1}}}}},"n":{"docs":{},"df":0,"d":{"docs":{},"df":0,"l":{"docs":{},"df":0,"e":{"docs":{},"df":0,"y":{"docs":{"type-inference.html#type-inference":{"tf":1.0}},"df":1}}}}},"r":{"docs":{"rustdoc.html#from-crate-to-clean":{"tf":1.4142135623730952},"incrcomp-debugging.html#tracking-down-incorrect-edges":{"tf":1.0},"rustdoc.html#cheat-sheet":{"tf":1.0},"hir.html#out-of-band-storage-and-the--crate--type":{"tf":2.449489742783178},"type-checking.html#type-collection":{"tf":1.0},"appendix/code-index.html#appendix-d-code-index":{"tf":1.0},"mir/borrowck.html#mir-borrow-check":{"tf":1.4142135623730952},"diag.html#span":{"tf":1.0},"hir.html#the-hir-map":{"tf":3.0},"ty.html#allocating-and-working-with-types":{"tf":1.0},"query.html#queries-demand-driven-compilation":{"tf":1.0},"rustc-driver.html#a-note-on-lifetimes":{"tf":1.0},"mir/index.html#the-mir-mid-level-ir":{"tf":1.0},"rustc-driver.html#the-rustc-driver":{"tf":1.0},"hir.html#identifiers-in-the-hir":{"tf":2.23606797749979},"hir.html#the-hir":{"tf":2.8284271247461905},"rustdoc.html#the-walking-tour-of-rustdoc":{"tf":1.4142135623730952},"traits/chalk-overview.html#intermediate-representation-ir":{"tf":1.0},"appendix/glossary.html#appendix-c-glossary":{"tf":3.0},"high-level-overview.html#the-main-stages-of-compilation":{"tf":2.8284271247461905},"hir.html#hir-bodies":{"tf":1.7320508075688773}},"df":21,"&":{"docs":{},"df":0,"f":{"docs":{},"df":0,"o":{"docs":{},"df":0,"o":{"docs":{"incrcomp-debugging.html#tracking-down-incorrect-edges":{"tf":1.0}},"df":1}}}},":":{"docs":{},"df":0,":":{"docs":{},"df":0,"e":{"docs":{},"df":0,"x":{"docs":{},"df":0,"p":{"docs":{},"df":0,"r":{"docs":{"hir.html#the-hir-map":{"tf":1.0},"diag.html#declaring-a-lint":{"tf":1.0}},"df":2,"w":{"docs":{},"df":0,"h":{"docs":{},"df":0,"i":{"docs":{},"df":0,"l":{"docs":{},"df":0,"e":{"docs":{},"df":0,"(":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"f":{"docs":{"diag.html#declaring-a-lint":{"tf":1.0}},"df":1}}}}}}}}},"l":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{},"df":0,"(":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"f":{"docs":{"diag.html#declaring-a-lint":{"tf":1.0}},"df":1}}}}}}}}}}},"m":{"docs":{},"df":0,"a":{"docs":{},"df":0,"p":{"docs":{"hir.html#the-hir-map":{"tf":1.0}},"df":1}}},"l":{"docs":{},"df":0,"o":{"docs":{},"df":0,"w":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"g":{"docs":{},"df":0,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"o":{"docs":{},"df":0,"l":{"docs":{},"df":0,"v":{"docs":{"name-resolution.html#name-resolution":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}},"i":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"m":{"docs":{"hir.html#out-of-band-storage-and-the--crate--type":{"tf":1.0}},"df":1}}}},"c":{"docs":{},"df":0,"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{"appendix/code-index.html#appendix-d-code-index":{"tf":1.0},"rustdoc.html#from-crate-to-clean":{"tf":1.0}},"df":2}}}},"t":{"docs":{},"df":0,"i":{"docs":{"type-checking.html#type-collection":{"tf":1.4142135623730952}},"df":1}}}},"i":{"docs":{},"df":0,"d":{"docs":{"hir.html#identifiers-in-the-hir":{"tf":1.4142135623730952},"appendix/glossary.html#appendix-c-glossary":{"tf":1.4142135623730952}},"df":2}},"(":{"docs":{},"df":0,"f":{"docs":{},"df":0,"o":{"docs":{},"df":0,"o":{"docs":{"incrcomp-debugging.html#dumping-the-graph":{"tf":1.0},"incrcomp-debugging.html#testing-the-dependency-graph":{"tf":1.0},"incrcomp-debugging.html#tracking-down-incorrect-edges":{"tf":1.0}},"df":3}}}}},"t":{"docs":{"traits/canonical-queries.html#the-traditional-interactive-prolog-query":{"tf":1.7320508075688773},"traits/caching.html#where-clauses-and-the-local-vs-global-cache":{"tf":1.0},"traits/caching.html#an-example":{"tf":1.7320508075688773}},"df":3},"d":{"docs":{},"df":0,"d":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{"rustdoc.html#hot-potato":{"tf":1.4142135623730952},"tests/adding.html#what-kind-of-test-should-i-add":{"tf":1.0}},"df":2}}}}},"t":{"docs":{},"df":0,"m":{"docs":{},"df":0,"l":{"docs":{"rustdoc.html#cheat-sheet":{"tf":1.0},"rustdoc.html#dotting-is-and-crossing-ts":{"tf":1.4142135623730952},"rustdoc.html#from-clean-to-crate":{"tf":1.7320508075688773},"rustdoc.html#other-tricks-up-its-sleeve":{"tf":1.4142135623730952},"rustdoc.html#from-soup-to-nuts":{"tf":1.4142135623730952}},"df":5,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"r":{"docs":{},"df":0,"u":{"docs":{},"df":0,"n":{"docs":{"rustdoc.html#from-soup-to-nuts":{"tf":1.0}},"df":1}}}}}}}}}}}}},"/":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{},"df":0,"i":{"docs":{},"df":0,"c":{"docs":{"rustdoc.html#from-clean-to-crate":{"tf":1.0}},"df":1}}}}}},"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,".":{"docs":{},"df":0,"r":{"docs":{"rustdoc.html#cheat-sheet":{"tf":1.0},"rustdoc.html#from-clean-to-crate":{"tf":1.7320508075688773}},"df":2}}}}}}}},"f":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"m":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{},"df":0,".":{"docs":{},"df":0,"r":{"docs":{"rustdoc.html#from-clean-to-crate":{"tf":1.0},"rustdoc.html#cheat-sheet":{"tf":1.0}},"df":2}}}}}}}},"h":{"docs":{},"df":0,"i":{"docs":{},"df":0,"g":{"docs":{},"df":0,"h":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{},"df":0,"g":{"docs":{},"df":0,"h":{"docs":{},"df":0,"t":{"docs":{},"df":0,".":{"docs":{},"df":0,"r":{"docs":{"rustdoc.html#from-clean-to-crate":{"tf":1.0}},"df":1}}}}}}}}}}},"m":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"k":{"docs":{},"df":0,"d":{"docs":{},"df":0,"o":{"docs":{},"df":0,"w":{"docs":{},"df":0,"n":{"docs":{},"df":0,".":{"docs":{},"df":0,"r":{"docs":{"rustdoc.html#cheat-sheet":{"tf":1.0},"rustdoc.html#from-clean-to-crate":{"tf":1.0},"rustdoc.html#other-tricks-up-its-sleeve":{"tf":1.4142135623730952}},"df":3}}}}}}}}}},"l":{"docs":{},"df":0,"a":{"docs":{},"df":0,"y":{"docs":{},"df":0,"o":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{},"df":0,".":{"docs":{},"df":0,"r":{"docs":{"rustdoc.html#from-clean-to-crate":{"tf":1.0}},"df":1}}}}}}}}},"d":{"docs":{},"df":0,"o":{"docs":{},"df":0,"c":{"docs":{},"df":0,"c":{"docs":{},"df":0,"k":{"docs":{},"df":0,".":{"docs":{},"df":0,"p":{"docs":{},"df":0,"i":{"docs":{"rustdoc.html#dotting-is-and-crossing-ts":{"tf":1.0}},"df":1}}}}}}}}}},"t":{"docs":{},"df":0,"p":{"docs":{},"df":0,":":{"docs":{},"df":0,"/":{"docs":{},"df":0,"/":{"docs":{},"df":0,"r":{"docs":{},"df":0,"u":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{"compiletest.html#adding-a-new-header-command":{"tf":1.0},"conventions.html#copyright-notice":{"tf":1.0}},"df":2}}}},"o":{"docs":{},"df":0,"p":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"s":{"docs":{},"df":0,"o":{"docs":{},"df":0,"u":{"docs":{},"df":0,"r":{"docs":{},"df":0,"c":{"docs":{},"df":0,"e":{"docs":{},"df":0,".":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"g":{"docs":{},"df":0,"/":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{},"df":0,"c":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"/":{"docs":{},"df":0,"m":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{"compiletest.html#adding-a-new-header-command":{"tf":1.0},"conventions.html#copyright-notice":{"tf":1.0}},"df":2}}}}}}}}}}}}}}}}}}}}}}}}}}},"w":{"docs":{},"df":0,"w":{"docs":{},"df":0,"w":{"docs":{},"df":0,".":{"docs":{},"df":0,"a":{"docs":{},"df":0,"p":{"docs":{},"df":0,"a":{"docs":{},"df":0,"c":{"docs":{},"df":0,"h":{"docs":{},"df":0,"e":{"docs":{},"df":0,".":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"g":{"docs":{},"df":0,"/":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{},"df":0,"c":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"/":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{},"df":0,"c":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"s":{"docs":{"conventions.html#copyright-notice":{"tf":1.0},"compiletest.html#adding-a-new-header-command":{"tf":1.0}},"df":2}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"df":0,":":{"docs":{},"df":0,"/":{"docs":{},"df":0,"/":{"docs":{},"df":0,"g":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{},"df":0,"h":{"docs":{},"df":0,"u":{"docs":{},"df":0,"b":{"docs":{},"df":0,".":{"docs":{},"df":0,"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"m":{"docs":{},"df":0,"/":{"docs":{},"df":0,"r":{"docs":{},"df":0,"u":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{"traits/slg.html#the-slg-solver":{"tf":1.0},"compiler-debugging.html#getting-a-backtrace-for-errors":{"tf":1.0}},"df":2}}}}}}}}}}}}}}}}}}}}}},"a":{"docs":{},"df":0,"p":{"docs":{},"df":0,"p":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{"const-eval.html#constant-evaluation":{"tf":1.0},"miri.html#miri":{"tf":1.0},"mir/regionck.html#back-to-our-example":{"tf":1.0},"rustdoc.html#hot-potato":{"tf":1.0},"name-resolution.html#todo":{"tf":1.0},"traits/resolution.html#selection":{"tf":1.0},"query.html#how-the-compiler-executes-a-query":{"tf":1.0},"traits/caching.html#caching-and-subtle-considerations-therewith":{"tf":1.0},"traits/associated-types.html#integration-with-unification":{"tf":1.0},"mir/regionck.html#what-is-a-universe":{"tf":1.7320508075688773},"mir/regionck.html#skolemization-and-outlives-constraints":{"tf":1.0},"traits/canonical-queries.html#examples":{"tf":1.0},"traits/hrtb.html#higher-ranked-trait-obligations":{"tf":1.0},"name-resolution.html#namespaces":{"tf":1.0},"appendix/stupid-stats.html#overview-of-the-compilation-process":{"tf":1.4142135623730952},"rustdoc.html#from-crate-to-clean":{"tf":1.4142135623730952},"variance.html#trait-variance-and-vtable-resolution":{"tf":1.0},"query.html#adding-a-new-kind-of-query":{"tf":1.0},"macro-expansion.html#the-macro-parser":{"tf":1.0},"ty.html#allocating-and-working-with-types":{"tf":1.0},"mir/regionck.html#subtyping-and-skolemization":{"tf":1.0},"query.html#cycles-between-queries":{"tf":1.7320508075688773},"mir/passes.html#stealing":{"tf":1.0},"appendix/stupid-stats.html#compilercontroller":{"tf":1.0},"variance.html#variance-and-object-types":{"tf":1.0},"name-resolution.html#scopes-and-ribs":{"tf":1.0},"mir/regionck.html#universes-and-skolemized-region-elements":{"tf":1.0},"macro-expansion.html#macro-expansion":{"tf":1.0},"traits/resolution.html#candidate-assembly":{"tf":1.4142135623730952}},"df":29}},"i":{"docs":{"variance.html#trait-variance-and-vtable-resolution":{"tf":1.0},"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.0}},"df":2}}},"r":{"docs":{"tests/intro.html#the-compiler-testing-framework":{"tf":1.0},"rustdoc.html#cheat-sheet":{"tf":1.0},"compiletest.html#introduction":{"tf":1.0}},"df":3,"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"p":{"docs":{"traits/lowering-to-logic.html#type-checking-generic-functions-beyond-horn-clauses":{"tf":1.4142135623730952},"traits/goals-and-clauses.html#goals-and-clauses-meta-structure":{"tf":1.0},"traits/bibliography.html#bibliography":{"tf":1.0},"traits/goals-and-clauses.html#goals-and-clauses":{"tf":1.0}},"df":4}}},"d":{"docs":{"ty.html#import-conventions":{"tf":1.0},"compiler-debugging.html#getting-logging-output":{"tf":1.0},"compiler-debugging.html#debugging-llvm":{"tf":1.0},"traits/lowering-to-logic.html#type-checking-generic-functions-beyond-horn-clauses":{"tf":1.0},"appendix/glossary.html#appendix-c-glossary":{"tf":1.0}},"df":5,"w":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{"tests/intro.html#testing-on-emulators":{"tf":1.0}},"df":1}}}}},"s":{"docs":{},"df":0,"p":{"docs":{},"df":0,"l":{"docs":{},"df":0,"a":{"docs":{},"df":0,"c":{"docs":{},"df":0,"e":{"docs":{},"df":0,"h":{"docs":{},"df":0,"o":{"docs":{},"df":0,"l":{"docs":{},"df":0,"d":{"docs":{"diag.html#suggestions":{"tf":1.0}},"df":1}}}}}}}}},"h":{"docs":{"appendix/glossary.html#appendix-c-glossary":{"tf":1.0},"incremental-compilation.html#the-try-mark-green-algorithm":{"tf":1.7320508075688773},"ty.html#allocating-and-working-with-types":{"tf":1.0},"how-to-build-and-run.html#creating-a-rustup-toolchain":{"tf":1.0},"incremental-compilation.html#improvements-to-the-basic-algorithm":{"tf":1.4142135623730952}},"df":5,"t":{"docs":{},"df":0,"a":{"docs":{},"df":0,"b":{"docs":{},"df":0,"l":{"docs":{"query.html#queries-demand-driven-compilation":{"tf":1.0},"appendix/glossary.html#appendix-c-glossary":{"tf":1.0}},"df":2}}}},"m":{"docs":{},"df":0,"a":{"docs":{},"df":0,"p":{"docs":{},"df":0,"<":{"docs":{},"df":0,"i":{"docs":{},"df":0,"3":{"docs":{},"df":0,"2":{"docs":{"appendix/glossary.html#appendix-c-glossary":{"tf":1.0},"ty.html#beyond-types-other-kinds-of-arena-allocated-data-structures":{"tf":1.0}},"df":2}}}}}}}},"_":{"docs":{},"df":0,"c":{"docs":{},"df":0,"f":{"docs":{},"df":0,"g":{"docs":{},"df":0,"_":{"docs":{},"df":0,"p":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"f":{"docs":{},"df":0,"i":{"docs":{},"df":0,"x":{"docs":{"compiletest.html#adding-a-new-header-command":{"tf":1.0}},"df":1}}}}}}}}}}},"n":{"docs":{},"df":0,"'":{"docs":{},"df":0,"t":{"docs":{"mir/regionck.html#skolemization-and-universes":{"tf":1.0}},"df":1}}}},"n":{"docs":{},"df":0,"g":{"docs":{"mir/visitor.html#mir-visitor":{"tf":1.0}},"df":1},"d":{"docs":{"mir/index.html#key-mir-vocabulary":{"tf":1.0},"rustdoc.html#dotting-is-and-crossing-ts":{"tf":1.0},"rustdoc.html#from-clean-to-crate":{"tf":1.0},"traits/caching.html#an-example":{"tf":1.0},"rustdoc.html#from-soup-to-nuts":{"tf":1.0},"traits/goals-and-clauses.html#domain-goals":{"tf":1.0},"mir/regionck.html#another-example":{"tf":1.0},"rustdoc.html#from-crate-to-clean":{"tf":1.0},"rustdoc.html#other-tricks-up-its-sleeve":{"tf":1.7320508075688773},"tests/running.html#running-an-individual-test":{"tf":1.0},"variance.html#variance-of-type-and-lifetime-parameters":{"tf":1.0}},"df":11,"l":{"docs":{"appendix/background.html#what-is-co--and-contra-variance":{"tf":1.0},"appendix/glossary.html#appendix-c-glossary":{"tf":1.4142135623730952},"rustdoc.html#hot-potato":{"tf":1.0},"appendix/stupid-stats.html#overview-of-the-compilation-process":{"tf":1.7320508075688773},"tests/intro.html#other-tests":{"tf":1.0},"mir/regionck.html#subtyping-and-skolemization":{"tf":1.0},"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.4142135623730952},"traits/lowering-to-logic.html#type-checking-generic-functions-beyond-horn-clauses":{"tf":1.0},"traits/canonical-queries.html#a-trait-query-in-rustc":{"tf":1.0},"traits/lowering-to-logic.html#type-checking-normal-functions":{"tf":1.0},"type-inference.html#extracting-region-constraints":{"tf":1.0},"conventions.html#prefer-exhaustive-matches":{"tf":1.0},"rustdoc.html#cheat-sheet":{"tf":1.0},"appendix/stupid-stats.html#the-driver-customisation-apis":{"tf":1.0},"traits/associated-types.html#equality-and-associated-types":{"tf":1.0},"incrcomp-debugging.html#tracking-down-incorrect-edges":{"tf":1.0}},"df":16},"i":{"docs":{"mir/passes.html#seeing-how-the-mir-changes-as-the-compiler-executes":{"tf":1.0},"mir/passes.html#implementing-and-registering-a-pass":{"tf":1.0}},"df":2}}},"v":{"docs":{},"df":0,"e":{"docs":{"mir/regionck.html#final-example":{"tf":1.0},"appendix/glossary.html#appendix-c-glossary":{"tf":1.0},"macro-expansion.html#example":{"tf":1.0},"conventions.html#prefer-exhaustive-matches":{"tf":1.0},"const-eval.html#constant-evaluation":{"tf":1.0},"compiletest.html#adding-a-new-header-command":{"tf":1.0},"traits/lowering-rules.html#function-and-constant-values":{"tf":1.0},"conventions.html#how-to-structure-your-pr":{"tf":1.0}},"df":8,"n":{"docs":{},"df":0,"'":{"docs":{},"df":0,"t":{"docs":{"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.0}},"df":1}}}}},"c":{"docs":{},"df":0,"k":{"docs":{"tests/running.html#running-a-subset-of-the-test-suites":{"tf":1.0},"traits/index.html#trait-solving-new-style":{"tf":1.0},"how-to-build-and-run.html#how-to-build-the-compiler-and-run-what-you-built":{"tf":1.0},"how-to-build-and-run.html#running-xpy-and-building-a-stage1-compiler":{"tf":1.0}},"df":4}}},"y":{"docs":{},"df":0,"g":{"docs":{},"df":0,"i":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{"name-resolution.html#scopes-and-ribs":{"tf":1.0},"macro-expansion.html#hygiene":{"tf":1.4142135623730952}},"df":2}}}}},"m":{"docs":{"type-inference.html#type-inference":{"tf":1.0}},"df":1},"h":{"docs":{"traits/goals-and-clauses.html#goals-and-clauses":{"tf":1.0}},"df":1},"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"f":{"docs":{"tests/intro.html#other-tests":{"tf":1.0}},"df":1}}},"u":{"docs":{},"df":0,"g":{"docs":{},"df":0,"e":{"docs":{"tests/adding.html#naming-your-test":{"tf":1.0}},"df":1}},"m":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{"mir/index.html#key-mir-vocabulary":{"tf":1.0},"query.html#adding-a-new-kind-of-query":{"tf":1.0}},"df":2}}}}},"0":{"docs":{"traits/hrtb.html#higher-ranked-trait-obligations":{"tf":2.0},"tests/adding.html#header-commands-configuring-rustc":{"tf":1.4142135623730952},"compiler-debugging.html#getting-a-backtrace":{"tf":1.0},"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.0},"miri.html#miri":{"tf":1.0},"traits/caching.html#an-example":{"tf":1.0},"how-to-build-and-run.html#create-a-configtoml":{"tf":1.0},"mir/regionck.html#what-is-a-universe":{"tf":1.4142135623730952},"traits/canonicalization.html#canonicalization":{"tf":2.449489742783178},"traits/canonicalization.html#canonicalizing-the-query-result":{"tf":1.0},"how-to-build-and-run.html#running-xpy-and-building-a-stage1-compiler":{"tf":1.4142135623730952},"traits/canonicalization.html#executing-the-query":{"tf":1.4142135623730952},"mir/passes.html#seeing-how-the-mir-changes-as-the-compiler-executes":{"tf":1.0},"traits/canonicalization.html#canonicalizing-the-query":{"tf":1.7320508075688773},"traits/hrtb.html#basic-matching-and-skolemization-leaks":{"tf":3.0},"traits/canonicalization.html#processing-the-canonicalized-query-result":{"tf":1.0}},"df":16,"0":{"docs":{},"df":0,"0":{"docs":{},"df":0,".":{"docs":{},"df":0,"c":{"docs":{},"df":0,"l":{"docs":{},"df":0,"e":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"g":{"docs":{},"df":0,"i":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"s":{"docs":{},"df":0,".":{"docs":{},"df":0,"a":{"docs":{},"df":0,"f":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,".":{"docs":{},"df":0,"m":{"docs":{},"df":0,"i":{"docs":{},"df":0,"r":{"docs":{"mir/passes.html#seeing-how-the-mir-changes-as-the-compiler-executes":{"tf":2.0}},"df":1}}}}}}}}},"b":{"docs":{},"df":0,"e":{"docs":{},"df":0,"f":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,".":{"docs":{},"df":0,"m":{"docs":{},"df":0,"i":{"docs":{},"df":0,"r":{"docs":{"mir/passes.html#seeing-how-the-mir-changes-as-the-compiler-executes":{"tf":1.4142135623730952}},"df":1}}}}}}}}}}}}}}}}}}}}}}}}}},"n":{"docs":{},"df":0,"o":{"docs":{},"df":0,"l":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"g":{"docs":{},"df":0,"p":{"docs":{},"df":0,"a":{"docs":{},"df":0,"d":{"docs":{},"df":0,"s":{"docs":{},"df":0,".":{"docs":{},"df":0,"a":{"docs":{},"df":0,"f":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,".":{"docs":{},"df":0,"m":{"docs":{},"df":0,"i":{"docs":{},"df":0,"r":{"docs":{"mir/passes.html#seeing-how-the-mir-changes-as-the-compiler-executes":{"tf":1.7320508075688773}},"df":1}}}}}}}}},"b":{"docs":{},"df":0,"e":{"docs":{},"df":0,"f":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,".":{"docs":{},"df":0,"m":{"docs":{},"df":0,"i":{"docs":{},"df":0,"r":{"docs":{"mir/passes.html#seeing-how-the-mir-changes-as-the-compiler-executes":{"tf":1.7320508075688773}},"df":1}}}}}}}}}}}}}}}}}}}}}}}}}},"6":{"docs":{},"df":0,".":{"docs":{},"df":0,"n":{"docs":{},"df":0,"o":{"docs":{},"df":0,"l":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"g":{"docs":{},"df":0,"p":{"docs":{},"df":0,"a":{"docs":{},"df":0,"d":{"docs":{},"df":0,"s":{"docs":{},"df":0,".":{"docs":{},"df":0,"a":{"docs":{},"df":0,"f":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,".":{"docs":{},"df":0,"m":{"docs":{},"df":0,"i":{"docs":{},"df":0,"r":{"docs":{"mir/passes.html#seeing-how-the-mir-changes-as-the-compiler-executes":{"tf":1.7320508075688773}},"df":1}}}}}}}}},"b":{"docs":{},"df":0,"e":{"docs":{},"df":0,"f":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,".":{"docs":{},"df":0,"m":{"docs":{},"df":0,"i":{"docs":{},"df":0,"r":{"docs":{"mir/passes.html#seeing-how-the-mir-changes-as-the-compiler-executes":{"tf":1.7320508075688773}},"df":1}}}}}}}}}}}}}}}}}}}}}}}}}}}},"9":{"docs":{"compiler-debugging.html#getting-a-backtrace-for-errors":{"tf":1.0}},"df":1,"5":{"docs":{"traits/caching.html#where-clauses-and-the-local-vs-global-cache":{"tf":1.0}},"df":1}},"5":{"docs":{"compiler-debugging.html#getting-a-backtrace":{"tf":1.0},"name-resolution.html#scopes-and-ribs":{"tf":1.4142135623730952}},"df":2,"0":{"docs":{"tests/intro.html#testing-infrastructure":{"tf":1.0}},"df":1,"1":{"docs":{},"df":0,",":{"docs":{},"df":0,"6":{"docs":{"compiletest.html#implementing-the-behavior-change":{"tf":1.0}},"df":1}}}}},"_":{"docs":{"conventions.html#prefer-exhaustive-matches":{"tf":1.4142135623730952},"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":3.605551275463989},"compiletest.html#adding-a-new-header-command":{"tf":1.0}},"df":3,"2":{"docs":{"mir/index.html#key-mir-vocabulary":{"tf":1.7320508075688773}},"df":1},"n":{"docs":{},"df":0,"o":{"docs":{},"df":0,"t":{"docs":{},"df":0,"_":{"docs":{"diag.html#error-messages":{"tf":1.0}},"df":1}}}},"0":{"docs":{"miri.html#miri":{"tf":2.0},"mir/index.html#key-mir-vocabulary":{"tf":1.7320508075688773}},"df":2},"4":{"docs":{"mir/index.html#key-mir-vocabulary":{"tf":1.0}},"df":1},"1":{"docs":{"mir/index.html#mir-data-types":{"tf":1.7320508075688773},"mir/index.html#key-mir-vocabulary":{"tf":3.4641016151377546},"miri.html#miri":{"tf":2.23606797749979}},"df":3,".":{"docs":{},"df":0,"f":{"docs":{"mir/index.html#key-mir-vocabulary":{"tf":1.0},"mir/index.html#mir-data-types":{"tf":1.0}},"df":2},"0":{"docs":{"miri.html#miri":{"tf":1.0}},"df":1}}},"5":{"docs":{"mir/index.html#key-mir-vocabulary":{"tf":1.0}},"df":1},"3":{"docs":{"mir/index.html#key-mir-vocabulary":{"tf":2.8284271247461905}},"df":1,".":{"docs":{},"df":0,"f":{"docs":{"mir/index.html#key-mir-vocabulary":{"tf":1.0}},"df":1}}}},"r":{"docs":{"incremental-compilation.html#the-try-mark-green-algorithm":{"tf":1.4142135623730952},"traits/lowering-rules.html#lowering-where-clauses":{"tf":1.4142135623730952},"mir/index.html#key-mir-vocabulary":{"tf":1.0},"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.4142135623730952}},"df":4,"c":{"docs":{"query.html#how-the-compiler-executes-a-query":{"tf":1.0},"query.html#adding-a-new-kind-of-query":{"tf":1.0}},"df":2,"<":{"docs":{},"df":0,"?":{"docs":{},"df":0,"t":{"docs":{"traits/canonical-queries.html#the-traditional-interactive-prolog-query":{"tf":1.7320508075688773},"traits/canonical-queries.html#a-trait-query-in-rustc":{"tf":1.0}},"df":2}},"u":{"docs":{"method-lookup.html#candidate-assembly":{"tf":1.4142135623730952}},"df":1},"b":{"docs":{},"df":0,"o":{"docs":{},"df":0,"x":{"docs":{},"df":0,"<":{"docs":{},"df":0,"[":{"docs":{},"df":0,"t":{"docs":{"method-lookup.html#candidate-search":{"tf":1.4142135623730952},"method-lookup.html#steps":{"tf":1.4142135623730952},"method-lookup.html#candidate-assembly":{"tf":1.4142135623730952}},"df":3}}}}}}}},"f":{"docs":{"how-to-build-and-run.html#other-xpy-commands":{"tf":1.0}},"df":1,"c":{"docs":{"mir/index.html#the-mir-mid-level-ir":{"tf":1.0},"tests/adding.html#naming-your-test":{"tf":1.0},"traits/lowering-rules.html#trait-header":{"tf":1.0},"mir/regionck.html#mir-based-region-checking-nll":{"tf":1.0}},"df":4}},"u":{"docs":{},"df":0,"l":{"docs":{},"df":0,"e":{"docs":{"method-lookup.html#candidate-search":{"tf":1.0},"traits/chalk-overview.html#rules":{"tf":2.23606797749979},"traits/associated-types.html#associated-type-projection-and-normalization":{"tf":1.0},"traits/lowering-rules.html#lowering-rules":{"tf":2.0},"name-resolution.html#namespaces":{"tf":1.0},"query.html#adding-a-new-kind-of-query":{"tf":1.0},"traits/lowering-to-logic.html#rust-traits-and-logic":{"tf":2.449489742783178},"traits/lowering-rules.html#trait-header":{"tf":2.8284271247461905},"traits/goals-and-clauses.html#coinductive-goals":{"tf":1.7320508075688773},"traits/lowering-rules.html#lowering-impls":{"tf":1.4142135623730952},"traits/lowering-rules.html#notation":{"tf":1.0},"traits/lowering-rules.html#associated-type-values":{"tf":1.4142135623730952},"traits/chalk-overview.html#lowering":{"tf":1.7320508075688773},"traits/lowering-rules.html#transforming-the-lowered-where-clauses":{"tf":1.0},"traits/lowering-rules.html#lowering-where-clauses":{"tf":1.0},"traits/lowering-rules.html#associated-type-declarations":{"tf":2.8284271247461905},"variance.html#variance-and-object-types":{"tf":1.0},"traits/lowering-to-logic.html#type-checking-normal-functions":{"tf":1.4142135623730952},"name-resolution.html#scopes-and-ribs":{"tf":1.7320508075688773},"traits/lowering-module.html#the--program_clauses_for--query":{"tf":1.0},"traits/lowering-module.html#unit-tests":{"tf":1.0},"traits/lowering-rules.html#rule-names-and-cross-references":{"tf":2.23606797749979},"conventions.html#how-to-structure-your-pr":{"tf":1.0},"traits/goals-and-clauses.html#domain-goals":{"tf":1.0},"traits/chalk-overview.html#an-overview-of-chalk":{"tf":1.0},"traits/lowering-to-logic.html#type-checking-generic-functions-beyond-horn-clauses":{"tf":1.0},"traits/caching.html#where-clauses-and-the-local-vs-global-cache":{"tf":1.4142135623730952},"traits/index.html#trait-solving-new-style":{"tf":1.7320508075688773},"traits/lowering-to-logic.html#lowering-to-logic":{"tf":1.7320508075688773},"traits/implied-bounds.html#implied-bounds":{"tf":1.0},"variance.html#variance-and-associated-types":{"tf":1.0},"method-lookup.html#candidate-assembly":{"tf":1.0},"mir/regionck.html#subtyping-and-skolemization":{"tf":1.0},"ty.html#import-conventions":{"tf":1.0},"traits/lowering-module.html#the-lowering-module-in-rustc":{"tf":1.4142135623730952},"compiletest.html#adding-a-new-header-command":{"tf":1.0},"macro-expansion.html#the-macro-parser":{"tf":1.4142135623730952},"tests/adding.html#normalization":{"tf":1.0}},"df":38}},"s":{"docs":{},"df":0,"t":{"docs":{"tests/intro.html#the-compiler-testing-framework":{"tf":1.0},"traits/lowering-rules.html#lowering-rules":{"tf":1.0},"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.4142135623730952},"how-to-build-and-run.html#create-a-configtoml":{"tf":1.0},"traits/index.html#trait-solving-new-style":{"tf":1.0},"appendix/background.html#what-is-co--and-contra-variance":{"tf":1.0},"query.html#queries-demand-driven-compilation":{"tf":1.4142135623730952},"the-parser.html#the-parser":{"tf":1.4142135623730952},"name-resolution.html#namespaces":{"tf":1.0},"macro-expansion.html#macro-expansion":{"tf":1.7320508075688773},"tests/intro.html#testing-with-docker-images":{"tf":1.4142135623730952},"conventions.html#formatting-and-the-tidy-script":{"tf":1.0},"mir/index.html#the-mir-mid-level-ir":{"tf":1.4142135623730952},"conventions.html#how-to-structure-your-pr":{"tf":1.4142135623730952},"compiletest.html#adding-a-new-header-command":{"tf":1.4142135623730952},"rustdoc.html#from-clean-to-crate":{"tf":1.4142135623730952},"hir.html#the-hir":{"tf":1.0},"compiletest.html#adding-a-new-test-file":{"tf":1.0},"traits/goals-and-clauses.html#coinductive-goals":{"tf":1.4142135623730952},"traits/lowering-to-logic.html#lowering-to-logic":{"tf":1.0},"traits/chalk-overview.html#blog-posts":{"tf":1.0},"conventions.html#copyright-notice":{"tf":1.0},"traits/wf.html#well-formedness-checking":{"tf":1.0},"tests/intro.html#compiletest-test-suites":{"tf":1.4142135623730952},"high-level-overview.html#crate-structure":{"tf":1.4142135623730952},"type-inference.html#type-inference":{"tf":1.0},"compiler-debugging.html#debugging-the-compiler":{"tf":1.0},"traits/chalk-overview.html#intermediate-representation-ir":{"tf":1.7320508075688773},"hir.html#identifiers-in-the-hir":{"tf":1.0},"ty.html#the--ty--module-representing-types":{"tf":1.0},"traits/lowering-to-logic.html#type-checking-generic-functions-beyond-horn-clauses":{"tf":1.0},"tests/adding.html#adding-new-tests":{"tf":1.4142135623730952},"compiletest.html#introduction":{"tf":1.7320508075688773},"about-this-guide.html#about-this-guide":{"tf":1.0},"macro-expansion.html#the-macro-parser":{"tf":1.7320508075688773},"traits/lowering-to-logic.html#rust-traits-and-logic":{"tf":2.23606797749979},"mir/regionck.html#another-example":{"tf":1.0},"how-to-build-and-run.html#running-xpy-and-building-a-stage1-compiler":{"tf":2.0},"compiletest.html#implementing-the-behavior-change":{"tf":1.0},"ty.html#the-tcx-and-how-it-uses-lifetimes":{"tf":1.0},"traits/goals-and-clauses.html#domain-goals":{"tf":1.4142135623730952},"tests/intro.html#testing-on-emulators":{"tf":1.0},"rustc-driver.html#a-note-on-lifetimes":{"tf":1.4142135623730952},"traits/chalk-overview.html#parsing":{"tf":2.23606797749979},"mir/passes.html#stealing":{"tf":1.0},"traits/lowering-rules.html#lowering-where-clauses":{"tf":1.4142135623730952},"query.html#adding-a-new-kind-of-query":{"tf":1.0},"appendix/stupid-stats.html#overview-of-the-compilation-process":{"tf":1.4142135623730952},"tests/intro.html#further-reading":{"tf":1.0},"compiler-debugging.html#getting-logging-output":{"tf":1.4142135623730952},"traits/chalk-overview.html#lowering":{"tf":1.0},"traits/chalk-overview.html#an-overview-of-chalk":{"tf":1.4142135623730952},"mir/index.html#mir-data-types":{"tf":1.0},"appendix/background.html#what-is-a-control-flow-graph":{"tf":1.0},"mir/regionck.html#mir-based-region-checking-nll":{"tf":1.0},"appendix/background.html#appendix-b-background-topics":{"tf":1.0},"tests/intro.html#other-tests":{"tf":2.6457513110645909},"appendix/glossary.html#appendix-c-glossary":{"tf":2.6457513110645909},"mir/index.html#key-mir-vocabulary":{"tf":1.0},"high-level-overview.html#the-main-stages-of-compilation":{"tf":2.23606797749979},"tests/adding.html#header-commands-configuring-rustc":{"tf":1.4142135623730952},"compiler-debugging.html#getting-a-backtrace":{"tf":1.0},"ty.html#allocating-and-working-with-types":{"tf":1.4142135623730952},"traits/chalk-overview.html#testing":{"tf":1.0},"tests/running.html#running-an-individual-test":{"tf":1.0},"rustdoc.html#other-tricks-up-its-sleeve":{"tf":1.4142135623730952}},"df":66,"_":{"docs":{},"df":0,"b":{"docs":{},"df":0,"a":{"docs":{},"df":0,"c":{"docs":{},"df":0,"k":{"docs":{},"df":0,"t":{"docs":{},"df":0,"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"c":{"docs":{},"df":0,"e":{"docs":{},"df":0,"=":{"docs":{},"df":0,"f":{"docs":{},"df":0,"u":{"docs":{},"df":0,"l":{"docs":{"compiler-debugging.html#getting-a-backtrace-for-errors":{"tf":1.0}},"df":1}}},"1":{"docs":{"incrcomp-debugging.html#tracking-down-incorrect-edges":{"tf":1.0},"compiler-debugging.html#getting-a-backtrace":{"tf":1.0},"compiler-debugging.html#getting-a-backtrace-for-errors":{"tf":1.4142135623730952}},"df":3}}}}}}}}}}},"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"r":{"docs":{"compiletest.html#implementing-the-behavior-change":{"tf":1.0}},"df":1}}},"c":{"docs":{},"df":0,"h":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"k":{"docs":{},"df":0,"o":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{"how-to-build-and-run.html#create-a-configtoml":{"tf":1.0}},"df":1}}}}}}}},"f":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"b":{"docs":{},"df":0,"i":{"docs":{},"df":0,"d":{"docs":{},"df":0,"_":{"docs":{},"df":0,"d":{"docs":{},"df":0,"e":{"docs":{},"df":0,"p":{"docs":{},"df":0,"_":{"docs":{},"df":0,"g":{"docs":{},"df":0,"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"p":{"docs":{},"df":0,"h":{"docs":{},"df":0,"_":{"docs":{},"df":0,"e":{"docs":{},"df":0,"d":{"docs":{},"df":0,"g":{"docs":{"incrcomp-debugging.html#tracking-down-incorrect-edges":{"tf":1.4142135623730952}},"df":1}}}}}}}}}}}}}}}}}}}},"l":{"docs":{},"df":0,"o":{"docs":{},"df":0,"g":{"docs":{"compiler-debugging.html#getting-logging-output":{"tf":1.4142135623730952},"compiler-debugging.html#expensive-operations-in-logs":{"tf":1.4142135623730952}},"df":2,"=":{"docs":{},"df":0,"m":{"docs":{},"df":0,"o":{"docs":{},"df":0,"d":{"docs":{},"df":0,"u":{"docs":{},"df":0,"l":{"docs":{},"df":0,"e":{"docs":{},"df":0,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"p":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{},"df":0,"h":{"docs":{"compiler-debugging.html#getting-logging-output":{"tf":1.0}},"df":1}}}}}}}}}}}},"r":{"docs":{},"df":0,"u":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"c":{"docs":{"compiler-debugging.html#getting-logging-output":{"tf":1.0}},"df":1,"_":{"docs":{},"df":0,"t":{"docs":{},"df":0,"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"s":{"docs":{},"df":0,"=":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"f":{"docs":{},"df":0,"o":{"docs":{"compiler-debugging.html#getting-logging-output":{"tf":1.0}},"df":1}}}}}}}}}}},":":{"docs":{},"df":0,":":{"docs":{},"df":0,"t":{"docs":{},"df":0,"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{"compiler-debugging.html#getting-logging-output":{"tf":1.4142135623730952}},"df":1}}}}},"b":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{"compiler-debugging.html#expensive-operations-in-logs":{"tf":1.0}},"df":1}}}}}}}}}},"d":{"docs":{},"df":0,"e":{"docs":{},"df":0,"b":{"docs":{},"df":0,"u":{"docs":{},"df":0,"g":{"docs":{"compiler-debugging.html#getting-logging-output":{"tf":1.0}},"df":1}}}}}}}}},"d":{"docs":{},"df":0,"e":{"docs":{},"df":0,"p":{"docs":{},"df":0,"_":{"docs":{},"df":0,"g":{"docs":{},"df":0,"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"p":{"docs":{},"df":0,"h":{"docs":{"incrcomp-debugging.html#dumping-the-graph":{"tf":1.0}},"df":1,"_":{"docs":{},"df":0,"f":{"docs":{},"df":0,"i":{"docs":{},"df":0,"l":{"docs":{},"df":0,"t":{"docs":{"incrcomp-debugging.html#dumping-the-graph":{"tf":1.7320508075688773}},"df":1,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"=":{"docs":{},"df":0,"'":{"docs":{},"df":0,"h":{"docs":{},"df":0,"i":{"docs":{},"df":0,"r":{"docs":{"incrcomp-debugging.html#dumping-the-graph":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"_":{"docs":{},"df":0,"t":{"docs":{},"df":0,"h":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"a":{"docs":{},"df":0,"d":{"docs":{"compiletest.html#adding-a-new-header-command":{"tf":1.0}},"df":1}}}}}},"n":{"docs":{},"df":0,"o":{"docs":{},"df":0,"c":{"docs":{},"df":0,"a":{"docs":{},"df":0,"p":{"docs":{},"df":0,"t":{"docs":{},"df":0,"u":{"docs":{},"df":0,"r":{"docs":{"compiletest.html#adding-a-new-header-command":{"tf":1.0}},"df":1}}}}}}}}}}}}}},"b":{"docs":{},"df":0,"u":{"docs":{},"df":0,"i":{"docs":{},"df":0,"l":{"docs":{},"df":0,"d":{"docs":{"rustdoc.html#cheat-sheet":{"tf":1.0}},"df":1}}}}},"f":{"docs":{},"df":0,"i":{"docs":{},"df":0,"x":{"docs":{"tests/adding.html#other-header-commands":{"tf":1.0},"diag.html#suggestions":{"tf":1.7320508075688773}},"df":2}},"m":{"docs":{},"df":0,"t":{"docs":{"conventions.html#how-to-structure-your-pr":{"tf":2.0},"appendix/stupid-stats.html#what-next":{"tf":1.0},"tests/intro.html#other-tests":{"tf":1.0},"appendix/stupid-stats.html#appendix-a-a-tutorial-on-creating-a-drop-in-replacement-for-rustc":{"tf":1.0}},"df":4}}},"'":{"docs":{"traits/canonical-queries.html#the-traditional-interactive-prolog-query":{"tf":1.0},"traits/goals-and-clauses.html#goals-and-clauses":{"tf":1.0},"tests/intro.html#testing-infrastructure":{"tf":1.0},"hir.html#the-hir":{"tf":1.0},"traits/lowering-to-logic.html#type-checking-generic-functions-beyond-horn-clauses":{"tf":1.0},"mir/index.html#the-mir-mid-level-ir":{"tf":1.0},"type-inference.html#subtyping-obligations":{"tf":1.0},"mir/borrowck.html#mir-borrow-check":{"tf":1.0},"traits/goals-and-clauses.html#goals-and-clauses-meta-structure":{"tf":1.0},"traits/chalk-overview.html#an-overview-of-chalk":{"tf":1.0},"appendix/glossary.html#appendix-c-glossary":{"tf":1.0}},"df":11},"u":{"docs":{},"df":0,"p":{"docs":{"rustdoc.html#cheat-sheet":{"tf":1.0},"how-to-build-and-run.html#creating-a-rustup-toolchain":{"tf":2.23606797749979}},"df":2}},"i":{"docs":{},"df":0,"f":{"docs":{},"df":0,"i":{"docs":{"traits/lowering-to-logic.html#type-checking-generic-functions-beyond-horn-clauses":{"tf":1.0}},"df":1}}},"c":{"docs":{"traits/caching.html#where-clauses-and-the-local-vs-global-cache":{"tf":1.0},"how-to-build-and-run.html#how-to-build-the-compiler-and-run-what-you-built":{"tf":1.0},"how-to-build-and-run.html#create-a-configtoml":{"tf":1.0},"rustdoc.html#other-tricks-up-its-sleeve":{"tf":1.0},"diag.html#emitting-diagnostics":{"tf":1.0},"appendix/stupid-stats.html#overview-of-the-compilation-process":{"tf":1.7320508075688773},"how-to-build-and-run.html#creating-a-rustup-toolchain":{"tf":2.449489742783178},"rustdoc.html#from-clean-to-crate":{"tf":1.0},"rustdoc.html#from-soup-to-nuts":{"tf":1.0},"tests/adding.html#naming-your-test":{"tf":1.0},"traits/canonical-queries.html#canonical-queries":{"tf":1.4142135623730952},"tests/running.html#running-a-subset-of-the-test-suites":{"tf":1.0},"rustdoc.html#dotting-is-and-crossing-ts":{"tf":1.0},"about-this-guide.html#about-this-guide":{"tf":1.4142135623730952},"tests/running.html#running-an-individual-test":{"tf":1.0},"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":3.0},"compiler-debugging.html#getting-logging-output":{"tf":2.449489742783178},"rustdoc.html#hot-potato":{"tf":1.0},"diag.html#declaring-a-lint":{"tf":1.0},"rustdoc.html#the-walking-tour-of-rustdoc":{"tf":1.4142135623730952},"how-to-build-and-run.html#running-xpy-and-building-a-stage1-compiler":{"tf":2.8284271247461905},"tests/adding.html#adding-new-tests":{"tf":1.0},"rustc-driver.html#the-rustc-driver":{"tf":2.23606797749979},"rustdoc.html#from-crate-to-clean":{"tf":1.7320508075688773},"hir.html#the-hir":{"tf":1.7320508075688773},"traits/canonical-queries.html#a-trait-query-in-rustc":{"tf":2.0},"compiler-debugging.html#expensive-operations-in-logs":{"tf":1.0},"high-level-overview.html#crate-structure":{"tf":2.449489742783178},"appendix/code-index.html#appendix-d-code-index":{"tf":1.7320508075688773},"compiler-debugging.html#debugging-llvm":{"tf":3.0},"mir/passes.html#seeing-how-the-mir-changes-as-the-compiler-executes":{"tf":2.0},"traits/lowering-module.html#the-lowering-module-in-rustc":{"tf":1.4142135623730952},"tests/adding.html#header-commands-configuring-rustc":{"tf":1.7320508075688773},"appendix/stupid-stats.html#appendix-a-a-tutorial-on-creating-a-drop-in-replacement-for-rustc":{"tf":2.6457513110645909},"traits/lowering-rules.html#rule-names-and-cross-references":{"tf":1.0},"ty.html#allocating-and-working-with-types":{"tf":1.0},"traits/chalk-overview.html#resources":{"tf":1.0},"rustdoc.html#cheat-sheet":{"tf":1.4142135623730952},"conventions.html#formatting-and-the-tidy-script":{"tf":1.4142135623730952},"appendix/glossary.html#appendix-c-glossary":{"tf":1.0},"macro-expansion.html#macro-expansion":{"tf":1.0},"compiler-debugging.html#getting-a-backtrace-for-errors":{"tf":1.4142135623730952},"diag.html#suggestions":{"tf":2.0},"miri.html#miri":{"tf":1.0},"diag.html#span":{"tf":1.0}},"df":45,"d":{"docs":{},"df":0,"e":{"docs":{},"df":0,"f":{"docs":{},"df":0,"a":{"docs":{},"df":0,"u":{"docs":{},"df":0,"l":{"docs":{},"df":0,"t":{"docs":{},"df":0,"c":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.4142135623730952}},"df":1}}}}}}}}}},":":{"docs":{},"df":0,":":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"f":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"f":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{},"df":0,"x":{"docs":{},"df":0,"t":{"docs":{},"df":0,"<":{"docs":{},"df":0,"'":{"docs":{},"df":0,"a":{"docs":{"compiler-debugging.html#getting-a-backtrace-for-errors":{"tf":1.4142135623730952}},"df":1}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"df":0,"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{},"df":0,"s":{"docs":{},"df":0,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"_":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"p":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"t":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"g":{"docs":{},"df":0,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"<":{"docs":{},"df":0,"i":{"docs":{},"df":0,"m":{"docs":{},"df":0,"p":{"docs":{},"df":0,"l":{"docs":{"compiler-debugging.html#getting-a-backtrace-for-errors":{"tf":1.4142135623730952}},"df":1}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"y":{"docs":{},"df":0,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"t":{"docs":{},"df":0,"l":{"docs":{"rustc-driver.html#a-note-on-lifetimes":{"tf":1.0}},"df":1}},"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"x":{"docs":{},"df":0,"t":{"docs":{},"df":0,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"t":{"docs":{},"df":0,"y":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{},"df":0,"x":{"docs":{},"df":0,"t":{"docs":{},"df":0,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"c":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"_":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{},"df":0,"_":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{"compiler-debugging.html#getting-a-backtrace":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"m":{"docs":{},"df":0,"i":{"docs":{},"df":0,"r":{"docs":{},"df":0,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"t":{"docs":{},"df":0,"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"v":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"s":{"docs":{"mir/visitor.html#traversal":{"tf":1.0}},"df":1}}}}}}},"v":{"docs":{},"df":0,"i":{"docs":{},"df":0,"s":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{"mir/visitor.html#mir-visitor":{"tf":1.0}},"df":1}}}}}}}}}},"l":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{"diag.html#lints":{"tf":1.0}},"df":1}}}},"f":{"docs":{},"df":0,"o":{"docs":{},"df":0,"o":{"docs":{"compiler-debugging.html#expensive-operations-in-logs":{"tf":1.0}},"df":1}}}}},".":{"docs":{},"df":0,"m":{"docs":{},"df":0,"a":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{"mir/passes.html#seeing-how-the-mir-changes-as-the-compiler-executes":{"tf":2.8284271247461905}},"df":1,".":{"docs":{},"df":0,"0":{"docs":{},"df":0,"0":{"docs":{},"df":0,"0":{"docs":{"mir/passes.html#seeing-how-the-mir-changes-as-the-compiler-executes":{"tf":2.449489742783178}},"df":1},"2":{"docs":{"mir/passes.html#seeing-how-the-mir-changes-as-the-compiler-executes":{"tf":2.0}},"df":1}}}}}}}}},"_":{"docs":{"high-level-overview.html#crate-structure":{"tf":1.0},"query.html#how-the-compiler-executes-a-query":{"tf":1.4142135623730952}},"df":2,"t":{"docs":{},"df":0,"h":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"_":{"docs":{},"df":0,"t":{"docs":{},"df":0,"h":{"docs":{},"df":0,"i":{"docs":{},"df":0,"s":{"docs":{},"df":0,"_":{"docs":{},"df":0,"w":{"docs":{},"df":0,"o":{"docs":{},"df":0,"u":{"docs":{},"df":0,"l":{"docs":{},"df":0,"d":{"docs":{},"df":0,"_":{"docs":{},"df":0,"n":{"docs":{},"df":0,"e":{"docs":{"incrcomp-debugging.html#testing-the-dependency-graph":{"tf":1.4142135623730952}},"df":1,"e":{"docs":{},"df":0,"d":{"docs":{},"df":0,"(":{"docs":{},"df":0,"t":{"docs":{},"df":0,"y":{"docs":{},"df":0,"p":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"k":{"docs":{},"df":0,"t":{"docs":{"incrcomp-debugging.html#testing-the-dependency-graph":{"tf":1.4142135623730952}},"df":1}}}}}}}}}}}}}}}}}}}}}}}}}}},"y":{"docs":{},"df":0,"p":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"k":{"docs":{"type-checking.html#type-checking":{"tf":1.0}},"df":1,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"c":{"docs":{},"df":0,"h":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"k":{"docs":{},"df":0,"_":{"docs":{},"df":0,"c":{"docs":{},"df":0,"r":{"docs":{"compiler-debugging.html#getting-a-backtrace":{"tf":1.0}},"df":1}}},":":{"docs":{},"df":0,":":{"docs":{},"df":0,"c":{"docs":{},"df":0,"a":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"c":{"docs":{},"df":0,"a":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"c":{"docs":{},"df":0,"h":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"k":{"docs":{},"df":0,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"c":{"docs":{},"df":0,"h":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"k":{"docs":{"compiler-debugging.html#getting-a-backtrace":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}}}}},"f":{"docs":{},"df":0,"n":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{},"df":0,"x":{"docs":{},"df":0,"t":{"docs":{},"df":0,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"l":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{},"df":0,"_":{"docs":{},"df":0,"o":{"docs":{},"df":0,"b":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{},"df":0,"g":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{},"df":0,"i":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"s":{"docs":{},"df":0,"_":{"docs":{},"df":0,"w":{"docs":{},"df":0,"h":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"_":{"docs":{},"df":0,"p":{"docs":{},"df":0,"o":{"docs":{},"df":0,"s":{"docs":{},"df":0,"s":{"docs":{"compiler-debugging.html#getting-a-backtrace-for-errors":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{"compiler-debugging.html#getting-logging-output":{"tf":1.0},"high-level-overview.html#crate-structure":{"tf":1.4142135623730952}},"df":2},"i":{"docs":{},"df":0,"t":{"docs":{},"df":0,"s":{"docs":{},"df":0,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"l":{"docs":{},"df":0,"o":{"docs":{},"df":0,"w":{"docs":{"traits/lowering-module.html#the-lowering-module-in-rustc":{"tf":1.0}},"df":1}}}}}}}}}}},"i":{"docs":{},"df":0,"f":{"docs":{},"df":0,"_":{"docs":{},"df":0,"t":{"docs":{},"df":0,"h":{"docs":{},"df":0,"i":{"docs":{},"df":0,"s":{"docs":{},"df":0,"_":{"docs":{},"df":0,"c":{"docs":{},"df":0,"h":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"g":{"docs":{"incrcomp-debugging.html#testing-the-dependency-graph":{"tf":1.4142135623730952}},"df":1}}}}}}}}}}}}},"l":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{"diag.html#declaring-a-lint":{"tf":1.0}},"df":1,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{},"df":0,"b":{"docs":{"diag.html#lint-groups":{"tf":1.0},"diag.html#edition-gated-lints":{"tf":1.0}},"df":2}}}}}}}}},"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{"diag.html#error-messages":{"tf":1.0}},"df":1}}}}},"m":{"docs":{},"df":0,"i":{"docs":{},"df":0,"r":{"docs":{},"df":0,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"b":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"w":{"docs":{},"df":0,"_":{"docs":{},"df":0,"c":{"docs":{},"df":0,"h":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"k":{"docs":{"mir/borrowck.html#major-phases-of-the-borrow-checker":{"tf":1.0}},"df":1,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"n":{"docs":{},"df":0,"l":{"docs":{"mir/regionck.html#mir-based-region-checking-nll":{"tf":1.0}},"df":1,"l":{"docs":{},"df":0,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"g":{"docs":{},"df":0,"i":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"_":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"f":{"docs":{"mir/regionck.html#representing-the-values-of-a-region-variable":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"df":0,"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"s":{"docs":{},"df":0,"f":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"m":{"docs":{"mir/passes.html#implementing-and-registering-a-pass":{"tf":1.0}},"df":1}}}}}}}}}}},"(":{"docs":{},"df":0,"b":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"w":{"docs":{},"df":0,"c":{"docs":{},"df":0,"k":{"docs":{},"df":0,"_":{"docs":{},"df":0,"g":{"docs":{},"df":0,"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"p":{"docs":{},"df":0,"h":{"docs":{},"df":0,"v":{"docs":{},"df":0,"i":{"docs":{},"df":0,"z":{"docs":{},"df":0,"_":{"docs":{},"df":0,"p":{"docs":{},"df":0,"o":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"f":{"docs":{},"df":0,"l":{"docs":{},"df":0,"o":{"docs":{},"df":0,"w":{"docs":{},"df":0,"=":{"docs":{},"df":0,"\"":{"docs":{},"df":0,"s":{"docs":{},"df":0,"u":{"docs":{},"df":0,"f":{"docs":{},"df":0,"f":{"docs":{},"df":0,"i":{"docs":{},"df":0,"x":{"docs":{},"df":0,".":{"docs":{},"df":0,"d":{"docs":{},"df":0,"o":{"docs":{},"df":0,"t":{"docs":{"compiler-debugging.html#formatting-graphviz-output-dot-files":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"df":0,"t":{"docs":{},"df":0,"a":{"docs":{},"df":0,"d":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{},"df":0,"a":{"docs":{"high-level-overview.html#crate-structure":{"tf":1.0},"query.html#how-the-compiler-executes-a-query":{"tf":1.0}},"df":2}}}}}}}},"a":{"docs":{},"df":0,"t":{"docs":{},"df":0,"t":{"docs":{},"df":0,"r":{"docs":{"traits/lowering-module.html#unit-tests":{"tf":1.0}},"df":1}}}},"b":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"w":{"docs":{},"df":0,"c":{"docs":{},"df":0,"k":{"docs":{"high-level-overview.html#crate-structure":{"tf":1.0}},"df":1}}}}}}},"a":{"docs":{},"df":0,"c":{"docs":{},"df":0,"k":{"docs":{"high-level-overview.html#crate-structure":{"tf":1.0}},"df":1}}}},"d":{"docs":{},"df":0,"u":{"docs":{},"df":0,"m":{"docs":{},"df":0,"p":{"docs":{},"df":0,"_":{"docs":{},"df":0,"p":{"docs":{},"df":0,"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"g":{"docs":{},"df":0,"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"m":{"docs":{},"df":0,"_":{"docs":{},"df":0,"c":{"docs":{},"df":0,"l":{"docs":{},"df":0,"a":{"docs":{},"df":0,"u":{"docs":{},"df":0,"s":{"docs":{"traits/lowering-module.html#unit-tests":{"tf":1.7320508075688773}},"df":1}}}}}}}}}}}}}}}}},"r":{"docs":{},"df":0,"i":{"docs":{},"df":0,"v":{"docs":{"high-level-overview.html#crate-structure":{"tf":2.0},"query.html#how-the-compiler-executes-a-query":{"tf":1.0},"rustc-driver.html#the-rustc-driver":{"tf":2.0},"query.html#adding-a-new-kind-of-query":{"tf":1.0}},"df":4,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"r":{"docs":{},"df":0,"u":{"docs":{},"df":0,"n":{"docs":{},"df":0,"_":{"docs":{},"df":0,"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"m":{"docs":{},"df":0,"p":{"docs":{},"df":0,"i":{"docs":{},"df":0,"l":{"docs":{"compiler-debugging.html#getting-a-backtrace":{"tf":1.4142135623730952},"compiler-debugging.html#getting-a-backtrace-for-errors":{"tf":1.0}},"df":2,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"(":{"docs":{},"df":0,"&":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"g":{"docs":{"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}},"d":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{},"df":0,"v":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"m":{"docs":{},"df":0,"p":{"docs":{},"df":0,"i":{"docs":{},"df":0,"l":{"docs":{},"df":0,"e":{"docs":{},"df":0,"_":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"p":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{"compiler-debugging.html#getting-a-backtrace":{"tf":1.4142135623730952}},"df":1}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"d":{"docs":{},"df":0,"o":{"docs":{},"df":0,"c":{"docs":{"tests/intro.html#compiletest-test-suites":{"tf":1.4142135623730952},"rustdoc.html#from-soup-to-nuts":{"tf":1.0},"appendix/stupid-stats.html#what-next":{"tf":1.4142135623730952},"tests/adding.html#what-kind-of-test-should-i-add":{"tf":1.4142135623730952},"rustdoc.html#from-crate-to-clean":{"tf":1.4142135623730952},"rustdoc.html#the-walking-tour-of-rustdoc":{"tf":2.23606797749979},"tests/intro.html#other-tests":{"tf":1.7320508075688773},"appendix/code-index.html#appendix-d-code-index":{"tf":1.4142135623730952},"rustdoc.html#from-clean-to-crate":{"tf":1.4142135623730952},"rustdoc.html#cheat-sheet":{"tf":2.23606797749979},"rustdoc.html#other-tricks-up-its-sleeve":{"tf":1.4142135623730952},"appendix/stupid-stats.html#appendix-a-a-tutorial-on-creating-a-drop-in-replacement-for-rustc":{"tf":1.0},"rustdoc.html#hot-potato":{"tf":1.4142135623730952},"rustdoc.html#dotting-is-and-crossing-ts":{"tf":1.0}},"df":14,"'":{"docs":{"rustdoc.html#dotting-is-and-crossing-ts":{"tf":1.4142135623730952}},"df":1},"v":{"docs":{},"df":0,"i":{"docs":{},"df":0,"s":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{"rustdoc.html#from-crate-to-clean":{"tf":1.0}},"df":1}}}}}}}}}}}},"n":{"docs":{"query.html#queries-demand-driven-compilation":{"tf":1.0},"compiler-debugging.html#formatting-graphviz-output-dot-files":{"tf":1.0},"mir/regionck.html#mir-based-region-checking-nll":{"tf":1.4142135623730952},"tests/intro.html#testing-infrastructure":{"tf":2.23606797749979},"variance.html#variance-and-object-types":{"tf":1.0},"tests/running.html#running-an-individual-test":{"tf":2.23606797749979},"compiletest.html#introduction":{"tf":1.7320508075688773},"tests/adding.html#editing-and-updating-the-reference-files":{"tf":1.4142135623730952},"tests/adding.html#guide-to-the-ui-tests":{"tf":1.4142135623730952},"appendix/stupid-stats.html#overview-of-the-compilation-process":{"tf":1.7320508075688773},"how-to-build-and-run.html#other-xpy-commands":{"tf":2.23606797749979},"conventions.html#formatting-and-the-tidy-script":{"tf":1.4142135623730952},"tests/adding.html#what-kind-of-test-should-i-add":{"tf":2.0},"compiler-debugging.html#expensive-operations-in-logs":{"tf":2.23606797749979},"tests/adding.html#other-header-commands":{"tf":1.0},"incrcomp-debugging.html#tracking-down-incorrect-edges":{"tf":1.0},"tests/intro.html#compiletest-test-suites":{"tf":3.0},"rustdoc.html#from-clean-to-crate":{"tf":1.4142135623730952},"conventions.html#how-to-structure-your-pr":{"tf":1.4142135623730952},"tests/intro.html#other-tests":{"tf":3.0},"name-resolution.html#name-resolution":{"tf":1.0},"compiletest.html#implementing-the-behavior-change":{"tf":1.0},"compiler-debugging.html#getting-logging-output":{"tf":1.4142135623730952},"tests/running.html#running-a-subset-of-the-test-suites":{"tf":2.449489742783178},"how-to-build-and-run.html#running-xpy-and-building-a-stage1-compiler":{"tf":1.7320508075688773},"how-to-build-and-run.html#how-to-build-the-compiler-and-run-what-you-built":{"tf":2.0},"tests/intro.html#testing-with-docker-images":{"tf":1.4142135623730952},"traits/canonical-queries.html#the-traditional-interactive-prolog-query":{"tf":1.4142135623730952},"diag.html#declaring-a-lint":{"tf":1.0},"traits/resolution.html#selection-during-translation":{"tf":1.0},"tests/adding.html#revisions":{"tf":1.4142135623730952},"rustdoc.html#hot-potato":{"tf":1.4142135623730952},"traits/chalk-overview.html#testing":{"tf":1.0},"tests/intro.html#the-compiler-testing-framework":{"tf":1.4142135623730952},"how-to-build-and-run.html#creating-a-rustup-toolchain":{"tf":2.23606797749979},"tests/running.html#running-tests":{"tf":2.23606797749979},"incremental-compilation.html#the-basic-algorithm":{"tf":1.4142135623730952},"tests/adding.html#ignoring-tests":{"tf":1.4142135623730952},"compiler-debugging.html#debugging-llvm":{"tf":1.0},"tests/adding.html#tests-that-do-not-result-in-compile-errors":{"tf":2.0},"tests/intro.html#testing-on-emulators":{"tf":3.1622776601683797},"rustdoc.html#other-tricks-up-its-sleeve":{"tf":2.449489742783178},"rustc-driver.html#the-rustc-driver":{"tf":2.23606797749979},"mir/borrowck.html#major-phases-of-the-borrow-checker":{"tf":1.0},"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.7320508075688773},"compiler-debugging.html#getting-a-backtrace-for-errors":{"tf":1.7320508075688773},"rustdoc.html#the-walking-tour-of-rustdoc":{"tf":1.4142135623730952},"appendix/stupid-stats.html#what-next":{"tf":1.0},"rustdoc.html#cheat-sheet":{"tf":1.0},"high-level-overview.html#the-main-stages-of-compilation":{"tf":1.4142135623730952},"traits/chalk-overview.html#parsing":{"tf":1.0}},"df":51,"t":{"docs":{},"df":0,"i":{"docs":{},"df":0,"m":{"docs":{"how-to-build-and-run.html#create-a-configtoml":{"tf":1.0},"compiletest.html#adding-a-new-header-command":{"tf":1.0},"rustdoc.html#dotting-is-and-crossing-ts":{"tf":1.0},"const-eval.html#constant-evaluation":{"tf":1.0},"compiletest.html#implementing-the-behavior-change":{"tf":1.0}},"df":5}}},"n":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"rustdoc.html#from-clean-to-crate":{"tf":1.0},"tests/running.html#running-an-individual-test":{"tf":1.4142135623730952},"tests/running.html#running-tests":{"tf":1.0},"tests/adding.html#header-commands-configuring-rustc":{"tf":1.0},"tests/adding.html#naming-your-test":{"tf":1.0},"rustdoc.html#other-tricks-up-its-sleeve":{"tf":1.0},"rustdoc.html#cheat-sheet":{"tf":1.0}},"df":7}}},"_":{"docs":{},"df":0,"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"m":{"docs":{},"df":0,"p":{"docs":{},"df":0,"i":{"docs":{},"df":0,"l":{"docs":{"rustc-driver.html#the-rustc-driver":{"tf":1.0},"rustc-driver.html#a-note-on-lifetimes":{"tf":1.0}},"df":2}}}},"r":{"docs":{"rustdoc.html#from-soup-to-nuts":{"tf":1.0},"rustdoc.html#from-crate-to-clean":{"tf":1.4142135623730952}},"df":2}}},"p":{"docs":{},"df":0,"a":{"docs":{},"df":0,"s":{"docs":{},"df":0,"s":{"docs":{"compiletest.html#adding-a-new-header-command":{"tf":1.0},"mir/passes.html#implementing-and-registering-a-pass":{"tf":1.0}},"df":2}}}}}}},"v":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{},"df":0,"u":{"docs":{"mir/index.html#mir-data-types":{"tf":1.4142135623730952},"mir/index.html#key-mir-vocabulary":{"tf":2.8284271247461905}},"df":2}}}},"l":{"docs":{"tests/intro.html#other-tests":{"tf":1.0},"rustc-driver.html#the-rustc-driver":{"tf":1.0},"name-resolution.html#todo":{"tf":1.0}},"df":3},"e":{"docs":{"variance.html#dependency-graph-management":{"tf":1.0},"appendix/glossary.html#appendix-c-glossary":{"tf":1.0},"incrcomp-debugging.html#tracking-down-incorrect-edges":{"tf":1.0},"incremental-compilation.html#the-try-mark-green-algorithm":{"tf":2.0},"traits/canonicalization.html#canonicalizing-the-query-result":{"tf":1.0},"traits/canonicalization.html#executing-the-query":{"tf":1.0},"incremental-compilation.html#the-basic-algorithm":{"tf":1.7320508075688773},"incrcomp-debugging.html#dumping-the-graph":{"tf":1.0}},"df":8,"l":{"docs":{"hir.html#identifiers-in-the-hir":{"tf":1.0},"appendix/glossary.html#appendix-c-glossary":{"tf":1.0},"high-level-overview.html#crate-structure":{"tf":1.0}},"df":3,"e":{"docs":{},"df":0,"v":{"docs":{"rustdoc.html#other-tricks-up-its-sleeve":{"tf":1.0},"mir/regionck.html#back-to-our-example":{"tf":1.0},"param_env.html#parameter-environment":{"tf":1.0},"rustdoc.html#hot-potato":{"tf":1.4142135623730952},"variance.html#dependency-graph-management":{"tf":1.0},"traits/associated-types.html#integration-with-unification":{"tf":1.0},"name-resolution.html#name-resolution":{"tf":1.0}},"df":7},"a":{"docs":{},"df":0,"s":{"docs":{"how-to-build-and-run.html#creating-a-rustup-toolchain":{"tf":1.0},"mir/index.html#key-mir-vocabulary":{"tf":1.0},"how-to-build-and-run.html#running-xpy-and-building-a-stage1-compiler":{"tf":1.0}},"df":3}}},"a":{"docs":{},"df":0,"t":{"docs":{"type-inference.html#region-constraints":{"tf":1.0},"type-inference.html#lexical-region-resolution":{"tf":1.0},"diag.html#error-messages":{"tf":1.0},"traits/lowering-rules.html#trait-header":{"tf":1.0},"type-inference.html#subtyping-obligations":{"tf":1.4142135623730952},"traits/lowering-rules.html#transforming-the-lowered-where-clauses":{"tf":1.0},"traits/canonical-queries.html#a-trait-query-in-rustc":{"tf":1.0},"type-checking.html#type-checking":{"tf":1.0},"variance.html#variance-and-associated-types":{"tf":1.4142135623730952},"mir/regionck.html#subtyping-and-skolemization":{"tf":1.4142135623730952},"traits/hrtb.html#basic-matching-and-skolemization-leaks":{"tf":2.23606797749979}},"df":11,"i":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"s":{"docs":{},"df":0,"h":{"docs":{},"df":0,"i":{"docs":{},"df":0,"p":{"docs":{"mir/regionck.html#mir-based-region-checking-nll":{"tf":1.0},"variance.html#variance-and-associated-types":{"tf":1.0},"type-inference.html#extracting-region-constraints":{"tf":1.0},"mir/regionck.html#extending-the-universal-regions-check":{"tf":1.0},"mir/regionck.html#another-example":{"tf":1.0},"mir/regionck.html#back-to-our-example":{"tf":1.0},"traits/resolution.html#selection":{"tf":1.0},"traits/lowering-rules.html#trait-header":{"tf":1.0},"variance.html#variance-of-type-and-lifetime-parameters":{"tf":1.0},"mir/regionck.html#subtyping-and-skolemization":{"tf":1.7320508075688773},"variance.html#variance-and-object-types":{"tf":1.4142135623730952},"mir/regionck.html#final-example":{"tf":1.7320508075688773}},"df":12}}}}}}}}},"o":{"docs":{},"df":0,"c":{"docs":{"miri.html#allocations":{"tf":1.4142135623730952}},"df":1}},"i":{"docs":{"mir/index.html#the-mir-mid-level-ir":{"tf":1.0},"variance.html#dependency-graph-management":{"tf":1.0},"traits/lowering-rules.html#associated-type-values":{"tf":1.0},"rustc-driver.html#a-note-on-lifetimes":{"tf":1.0},"traits/lowering-rules.html#associated-type-declarations":{"tf":1.0},"tests/running.html#running-an-individual-test":{"tf":1.0}},"df":6}},"e":{"docs":{},"df":0,"x":{"docs":{},"df":0,"p":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"t":{"docs":{"rustdoc.html#from-crate-to-clean":{"tf":1.0},"rustdoc.html#hot-potato":{"tf":1.0}},"df":2}}}}},"n":{"docs":{},"df":0,"t":{"docs":{},"df":0,"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"c":{"docs":{"traits/specialization.html#specialization":{"tf":1.0}},"df":1}}}}}}},"f":{"docs":{"method-lookup.html#candidate-search":{"tf":1.4142135623730952},"traits/lowering-rules.html#trait-header":{"tf":1.0},"traits/hrtb.html#basic-matching-and-skolemization-leaks":{"tf":1.0}},"df":3,"e":{"docs":{},"df":0,"r":{"docs":{"variance.html#variance-and-associated-types":{"tf":1.0},"traits/associated-types.html#skolemized-associated-types":{"tf":1.0},"ty.html#the-tcx-and-how-it-uses-lifetimes":{"tf":2.23606797749979},"miri.html#interpretation":{"tf":2.0},"traits/caching.html#caching-and-subtle-considerations-therewith":{"tf":1.0},"traits/goals-and-clauses.html#coinductive-goals":{"tf":1.0},"variance.html#addendum-variance-on-traits":{"tf":1.0},"traits/lowering-rules.html#rule-names-and-cross-references":{"tf":1.4142135623730952},"name-resolution.html#scopes-and-ribs":{"tf":1.0},"miri.html#allocations":{"tf":1.4142135623730952},"mir/passes.html#seeing-how-the-mir-changes-as-the-compiler-executes":{"tf":1.4142135623730952},"mir/borrowck.html#major-phases-of-the-borrow-checker":{"tf":1.0},"appendix/background.html#what-is-a-free-region-or-a-free-variable-what-about-bound-region":{"tf":2.449489742783178},"hir.html#identifiers-in-the-hir":{"tf":1.4142135623730952},"traits/goals-and-clauses.html#domain-goals":{"tf":2.0},"query.html#cycles-between-queries":{"tf":1.0},"tests/adding.html#normalization":{"tf":1.0},"traits/canonicalization.html#canonicalizing-the-query-result":{"tf":1.0},"miri.html#datastructures":{"tf":1.0},"traits/chalk-overview.html#rules":{"tf":1.0},"high-level-overview.html#the-main-stages-of-compilation":{"tf":1.0},"mir/regionck.html#what-is-a-universe":{"tf":1.4142135623730952},"traits/hrtb.html#higher-ranked-trait-obligations":{"tf":1.0},"const-eval.html#constant-evaluation":{"tf":1.4142135623730952},"type-inference.html#a-note-on-terminology":{"tf":1.7320508075688773},"rustc-driver.html#a-note-on-lifetimes":{"tf":1.7320508075688773},"traits/lowering-rules.html#notation":{"tf":1.0},"hir.html#the-hir-map":{"tf":1.4142135623730952},"traits/index.html#trait-solving-new-style":{"tf":1.0},"traits/lowering-rules.html#trait-header":{"tf":1.0},"query.html#how-the-compiler-executes-a-query":{"tf":1.0},"traits/lowering-to-logic.html#type-checking-normal-functions":{"tf":1.0},"traits/hrtb.html#higher-ranked-trait-bounds":{"tf":1.0},"ty.html#allocating-and-working-with-types":{"tf":1.4142135623730952},"mir/index.html#mir-data-types":{"tf":1.0},"appendix/glossary.html#appendix-c-glossary":{"tf":2.449489742783178},"rustc-driver.html#the-rustc-driver":{"tf":1.0},"variance.html#variance-of-type-and-lifetime-parameters":{"tf":1.4142135623730952},"mir/regionck.html#subtyping-and-skolemization":{"tf":1.0},"traits/resolution.html#major-concepts":{"tf":1.7320508075688773},"traits/lowering-rules.html#associated-type-declarations":{"tf":1.0},"traits/lowering-rules.html#lowering-impls":{"tf":1.0},"traits/goals-and-clauses.html#goals-and-clauses-meta-structure":{"tf":1.0},"ty.html#beyond-types-other-kinds-of-arena-allocated-data-structures":{"tf":1.7320508075688773},"miri.html#miri":{"tf":1.0},"mir/visitor.html#mir-visitor":{"tf":1.4142135623730952},"tests/adding.html#adding-new-tests":{"tf":1.0},"traits/resolution.html#candidate-assembly":{"tf":1.4142135623730952},"traits/lowering-rules.html#lowering-rules":{"tf":1.4142135623730952},"traits/caching.html#an-example":{"tf":1.0},"mir/borrowck.html#mir-borrow-check":{"tf":1.0},"macro-expansion.html#example":{"tf":1.7320508075688773},"tests/adding.html#editing-and-updating-the-reference-files":{"tf":1.4142135623730952},"mir/index.html#key-mir-vocabulary":{"tf":1.0},"traits/hrtb.html#basic-matching-and-skolemization-leaks":{"tf":1.0},"tests/adding.html#guide-to-the-ui-tests":{"tf":1.0},"mir/regionck.html#skolemization-and-universes":{"tf":2.0}},"df":57,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"c":{"docs":{"traits/associated-types.html#associated-type-projection-and-normalization":{"tf":1.0},"ty.html#import-conventions":{"tf":1.0}},"df":2},"t":{"docs":{},"df":0,"i":{"docs":{"macro-expansion.html#the-macro-parser":{"tf":1.0}},"df":1}}}}}},"l":{"docs":{},"df":0,"e":{"docs":{},"df":0,"x":{"docs":{"traits/canonical-queries.html#the-traditional-interactive-prolog-query":{"tf":1.0},"traits/canonical-queries.html#examples":{"tf":1.0}},"df":2},"c":{"docs":{},"df":0,"t":{"docs":{"mir/regionck.html#mir-based-region-checking-nll":{"tf":1.0},"appendix/glossary.html#appendix-c-glossary":{"tf":1.0},"traits/resolution.html#selection":{"tf":1.0}},"df":3}}}},"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"h":{"docs":{"traits/canonicalization.html#canonicalizing-the-query-result":{"tf":1.4142135623730952},"traits/canonical-queries.html#examples":{"tf":1.0}},"df":2}}}},"i":{"docs":{},"df":0,"n":{"docs":{"variance.html#the-algorithm":{"tf":1.0},"incremental-compilation.html#the-try-mark-green-algorithm":{"tf":1.0}},"df":2}},"a":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{"variance.html#dependency-graph-management":{"tf":1.0},"tests/adding.html#comment-explaining-what-the-test-is-about":{"tf":1.0},"how-to-build-and-run.html#running-xpy-and-building-a-stage1-compiler":{"tf":1.0},"conventions.html#how-to-structure-your-pr":{"tf":1.0},"appendix/stupid-stats.html#what-next":{"tf":1.0}},"df":5}}}}},"c":{"docs":{},"df":0,"e":{"docs":{},"df":0,"l":{"docs":{"rustdoc.html#from-soup-to-nuts":{"tf":1.0},"query.html#adding-a-new-kind-of-query":{"tf":1.0}},"df":2}}}},"s":{"docs":{},"df":0,"p":{"docs":{"variance.html#variance-of-type-and-lifetime-parameters":{"tf":1.4142135623730952}},"df":1,"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"s":{"docs":{"the-parser.html#the-parser":{"tf":1.0},"rustdoc.html#from-clean-to-crate":{"tf":1.0},"high-level-overview.html#the-main-stages-of-compilation":{"tf":1.0},"traits/canonical-queries.html#a-trait-query-in-rustc":{"tf":1.0},"traits/canonicalization.html#processing-the-canonicalized-query-result":{"tf":1.4142135623730952},"traits/canonicalization.html#canonicalizing-the-query":{"tf":1.0},"traits/canonical-queries.html#the-traditional-interactive-prolog-query":{"tf":1.7320508075688773},"traits/canonicalization.html#canonicalizing-the-query-result":{"tf":1.0}},"df":8}}},"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{"variance.html#constraints":{"tf":2.0},"appendix/stupid-stats.html#appendix-a-a-tutorial-on-creating-a-drop-in-replacement-for-rustc":{"tf":1.0},"variance.html#variance-and-object-types":{"tf":1.0},"variance.html#the-algorithm":{"tf":1.0},"variance.html#variance-and-associated-types":{"tf":1.0},"mir/regionck.html#final-example":{"tf":1.0},"mir/regionck.html#skolemization-and-outlives-constraints":{"tf":1.0}},"df":7}}}},"u":{"docs":{},"df":0,"l":{"docs":{},"df":0,"t":{"docs":{"const-eval.html#constant-evaluation":{"tf":1.4142135623730952},"rustdoc.html#cheat-sheet":{"tf":1.0},"query.html#cycles-between-queries":{"tf":1.4142135623730952},"traits/caching.html#caching-and-subtle-considerations-therewith":{"tf":1.7320508075688773},"tests/intro.html#testing-on-emulators":{"tf":1.0},"traits/canonical-queries.html#examples":{"tf":1.7320508075688773},"traits/canonicalization.html#canonicalizing-the-query":{"tf":1.0},"traits/resolution.html#confirmation":{"tf":1.0},"macro-expansion.html#example":{"tf":1.0},"traits/resolution.html#candidate-assembly":{"tf":1.0},"tests/adding.html#guide-to-the-ui-tests":{"tf":1.0},"traits/hrtb.html#higher-ranked-trait-obligations":{"tf":1.4142135623730952},"traits/canonicalization.html#executing-the-query":{"tf":1.4142135623730952},"traits/resolution.html#major-concepts":{"tf":1.0},"variance.html#variance-and-associated-types":{"tf":1.0},"tests/adding.html#what-kind-of-test-should-i-add":{"tf":1.0},"compiletest.html#adding-a-new-header-command":{"tf":1.0},"rustdoc.html#dotting-is-and-crossing-ts":{"tf":1.7320508075688773},"name-resolution.html#todo":{"tf":1.4142135623730952},"hir.html#out-of-band-storage-and-the--crate--type":{"tf":1.0},"type-inference.html#subtyping-obligations":{"tf":1.0},"traits/canonicalization.html#canonicalizing-the-query-result":{"tf":2.8284271247461905},"query.html#adding-a-new-kind-of-query":{"tf":1.4142135623730952},"incremental-compilation.html#the-basic-algorithm":{"tf":2.8284271247461905},"incremental-compilation.html#improvements-to-the-basic-algorithm":{"tf":2.8284271247461905},"incremental-compilation.html#the-try-mark-green-algorithm":{"tf":2.23606797749979},"variance.html#the-algorithm":{"tf":1.0},"traits/index.html#trait-solving-new-style":{"tf":1.0},"miri.html#miri":{"tf":1.7320508075688773},"macro-expansion.html#the-macro-parser":{"tf":1.0},"mir/regionck.html#mir-based-region-checking-nll":{"tf":1.4142135623730952},"variance.html#trait-variance-and-vtable-resolution":{"tf":1.0},"how-to-build-and-run.html#creating-a-rustup-toolchain":{"tf":1.0},"tests/adding.html#tests-that-do-not-result-in-compile-errors":{"tf":2.23606797749979},"tests/intro.html#compiletest-test-suites":{"tf":1.0},"variance.html#dependency-graph-management":{"tf":1.4142135623730952},"mir/passes.html#stealing":{"tf":2.449489742783178},"traits/resolution.html#selection-during-translation":{"tf":1.4142135623730952},"compiletest.html#introduction":{"tf":1.0},"traits/canonical-queries.html#a-trait-query-in-rustc":{"tf":2.23606797749979},"query.html#queries-demand-driven-compilation":{"tf":1.4142135623730952},"traits/caching.html#where-clauses-and-the-local-vs-global-cache":{"tf":1.4142135623730952},"mir/borrowck.html#major-phases-of-the-borrow-checker":{"tf":1.4142135623730952},"traits/canonicalization.html#processing-the-canonicalized-query-result":{"tf":2.8284271247461905},"compiletest.html#implementing-the-behavior-change":{"tf":1.0},"query.html#how-the-compiler-executes-a-query":{"tf":1.4142135623730952},"miri.html#datastructures":{"tf":1.4142135623730952},"how-to-build-and-run.html#running-xpy-and-building-a-stage1-compiler":{"tf":1.7320508075688773},"tests/adding.html#revisions":{"tf":1.4142135623730952},"type-inference.html#inference-variables":{"tf":1.0},"tests/running.html#running-tests":{"tf":1.0},"traits/specialization.html#specialization":{"tf":1.0},"appendix/stupid-stats.html#overview-of-the-compilation-process":{"tf":1.4142135623730952},"type-inference.html#extracting-region-constraints":{"tf":1.0}},"df":54,"<":{"docs":{},"df":0,"q":{"docs":{},"df":0,"u":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"y":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"u":{"docs":{},"df":0,"l":{"docs":{},"df":0,"t":{"docs":{},"df":0,"<":{"docs":{},"df":0,"t":{"docs":{"traits/canonical-queries.html#a-trait-query-in-rustc":{"tf":1.0}},"df":1}}}}}}}}}}}}},"(":{"docs":{},"df":0,"s":{"docs":{},"df":0,"u":{"docs":{},"df":0,"b":{"docs":{},"df":0,"g":{"docs":{},"df":0,"o":{"docs":{"traits/associated-types.html#integration-with-unification":{"tf":1.0}},"df":1}}}}}}}}}},"e":{"docs":{},"df":0,"m":{"docs":{},"df":0,"b":{"docs":{},"df":0,"l":{"docs":{"hir.html#the-hir":{"tf":1.0}},"df":1}}},"r":{"docs":{},"df":0,"v":{"docs":{"const-eval.html#constant-evaluation":{"tf":1.0}},"df":1}}},"i":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{"rustdoc.html#the-walking-tour-of-rustdoc":{"tf":1.0}},"df":1}}},"t":{"docs":{"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.4142135623730952},"appendix/code-index.html#appendix-d-code-index":{"tf":1.0},"macro-expansion.html#example":{"tf":1.0},"name-resolution.html#overall-strategy":{"tf":1.0},"name-resolution.html#name-resolution":{"tf":1.0},"high-level-overview.html#crate-structure":{"tf":1.0}},"df":6,"r":{"docs":{},"df":0,"i":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{"tests/intro.html#testing-infrastructure":{"tf":1.0}},"df":1}}}}},"o":{"docs":{},"df":0,"u":{"docs":{},"df":0,"r":{"docs":{},"df":0,"c":{"docs":{"appendix/background.html#what-is-a-dataflow-analysis":{"tf":1.0},"traits/chalk-overview.html#resources":{"tf":1.4142135623730952}},"df":2}}},"l":{"docs":{},"df":0,"v":{"docs":{"variance.html#dependency-graph-management":{"tf":1.0},"name-resolution.html#overall-strategy":{"tf":1.4142135623730952},"conventions.html#how-to-structure-your-pr":{"tf":1.0},"traits/resolution.html#overview":{"tf":1.7320508075688773},"high-level-overview.html#the-main-stages-of-compilation":{"tf":1.7320508075688773},"traits/resolution.html#selection":{"tf":2.449489742783178},"traits/resolution.html#major-concepts":{"tf":1.0},"traits/resolution.html#candidate-assembly":{"tf":1.7320508075688773},"name-resolution.html#namespaces":{"tf":1.0},"rustc-driver.html#the-rustc-driver":{"tf":1.0},"traits/resolution.html#selection-during-translation":{"tf":1.0}},"df":11,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"o":{"docs":{},"df":0,"l":{"docs":{},"df":0,"v":{"docs":{},"df":0,"e":{"docs":{},"df":0,"_":{"docs":{},"df":0,"c":{"docs":{},"df":0,"r":{"docs":{"name-resolution.html#name-resolution":{"tf":1.0}},"df":1}}}}}}}}}}}}},"_":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"g":{"docs":{},"df":0,"i":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"s":{"docs":{},"df":0,"_":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{},"df":0,"_":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"p":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"t":{"docs":{},"df":0,"_":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{"type-inference.html#extracting-region-constraints":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}}}}}}}}}},"u":{"docs":{},"df":0,"t":{"docs":{"name-resolution.html#name-resolution":{"tf":2.23606797749979},"traits/resolution.html#trait-resolution-old-style":{"tf":1.7320508075688773},"variance.html#trait-variance-and-vtable-resolution":{"tf":1.4142135623730952},"traits/resolution.html#major-concepts":{"tf":1.7320508075688773},"traits/bibliography.html#bibliography":{"tf":1.0},"rustc-driver.html#the-rustc-driver":{"tf":1.4142135623730952},"traits/hrtb.html#higher-ranked-trait-bounds":{"tf":1.0},"hir.html#the-hir":{"tf":1.0},"traits/canonicalization.html#canonicalization":{"tf":1.0},"name-resolution.html#overall-strategy":{"tf":1.7320508075688773},"high-level-overview.html#the-main-stages-of-compilation":{"tf":1.4142135623730952},"traits/resolution.html#candidate-assembly":{"tf":1.0},"traits/resolution.html#selection-during-translation":{"tf":2.0},"type-inference.html#lexical-region-resolution":{"tf":1.7320508075688773},"macro-expansion.html#macro-expansion":{"tf":1.0},"traits/resolution.html#overview":{"tf":1.0},"appendix/stupid-stats.html#overview-of-the-compilation-process":{"tf":1.0}},"df":17}}}}},"c":{"docs":{},"df":0,"u":{"docs":{},"df":0,"r":{"docs":{},"df":0,"s":{"docs":{"traits/goals-and-clauses.html#coinductive-goals":{"tf":1.0},"method-lookup.html#candidate-search":{"tf":1.0},"mir/visitor.html#mir-visitor":{"tf":1.0},"miri.html#interpretation":{"tf":1.0},"compiletest.html#adding-a-new-test-file":{"tf":1.0},"traits/resolution.html#candidate-assembly":{"tf":1.0},"incremental-compilation.html#the-try-mark-green-algorithm":{"tf":1.0},"high-level-overview.html#the-main-stages-of-compilation":{"tf":1.0},"name-resolution.html#overall-strategy":{"tf":1.0},"traits/lowering-to-logic.html#rust-traits-and-logic":{"tf":1.0},"rustdoc.html#from-clean-to-crate":{"tf":1.0}},"df":11}}},"e":{"docs":{},"df":0,"i":{"docs":{},"df":0,"v":{"docs":{"compiletest.html#implementing-the-behavior-change":{"tf":1.0},"variance.html#variance-and-object-types":{"tf":1.0},"method-lookup.html#candidate-search":{"tf":1.0},"method-lookup.html#steps":{"tf":1.4142135623730952},"method-lookup.html#candidate-assembly":{"tf":1.7320508075688773},"method-lookup.html#method-lookup":{"tf":1.4142135623730952}},"df":6,"e":{"docs":{},"df":0,"d":{"docs":{},"df":0,"_":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{},"df":0,"u":{"docs":{"compiletest.html#implementing-the-behavior-change":{"tf":1.7320508075688773}},"df":1}}}}}}},"r":{"docs":{},"df":0,".":{"docs":{},"df":0,"m":{"docs":{},"df":0,"e":{"docs":{},"df":0,"t":{"docs":{},"df":0,"h":{"docs":{},"df":0,"o":{"docs":{},"df":0,"d":{"docs":{"method-lookup.html#method-lookup":{"tf":1.0}},"df":1}}}}}}},"t":{"docs":{},"df":0,"y":{"docs":{},"df":0,"p":{"docs":{},"df":0,"e":{"docs":{},"df":0,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"m":{"docs":{},"df":0,"e":{"docs":{},"df":0,"t":{"docs":{},"df":0,"h":{"docs":{},"df":0,"o":{"docs":{},"df":0,"d":{"docs":{},"df":0,"(":{"docs":{},"df":0,"a":{"docs":{},"df":0,"d":{"docs":{},"df":0,"j":{"docs":{},"df":0,"(":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"e":{"docs":{},"df":0,"i":{"docs":{},"df":0,"v":{"docs":{"method-lookup.html#method-lookup":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}}}}}}}}}}},"a":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{"traits/chalk-overview.html#an-overview-of-chalk":{"tf":1.0}},"df":1}},"l":{"docs":{"traits/specialization.html#specialization":{"tf":1.0},"traits/canonicalization.html#processing-the-canonicalized-query-result":{"tf":1.0}},"df":2}},"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"s":{"docs":{},"df":0,"i":{"docs":{},"df":0,"d":{"docs":{"method-lookup.html#candidate-assembly":{"tf":1.0}},"df":1}}}},"v":{"docs":{"query.html#cycles-between-queries":{"tf":1.4142135623730952}},"df":1},"r":{"docs":{},"df":0,"d":{"docs":{"type-inference.html#snapshots":{"tf":1.0},"traits/canonicalization.html#processing-the-canonicalized-query-result":{"tf":1.4142135623730952},"hir.html#out-of-band-storage-and-the--crate--type":{"tf":1.0},"rustc-driver.html#a-note-on-lifetimes":{"tf":1.0},"traits/caching.html#an-example":{"tf":1.0},"query.html#adding-a-new-kind-of-query":{"tf":1.0},"appendix/stupid-stats.html#compilercalls":{"tf":1.4142135623730952},"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.0},"type-inference.html#region-constraints":{"tf":1.0}},"df":9,"_":{"docs":{},"df":0,"s":{"docs":{},"df":0,"p":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"i":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{},"df":0,"z":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{},"df":0,"i":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"_":{"docs":{},"df":0,"p":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{"traits/chalk-overview.html#well-formedness-checks":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}}}}}},"m":{"docs":{},"df":0,"m":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{"compiler-debugging.html#getting-logging-output":{"tf":1.0},"type-inference.html#enforcing-equality--subtyping":{"tf":1.0},"traits/hrtb.html#basic-matching-and-skolemization-leaks":{"tf":1.0},"query.html#adding-a-new-kind-of-query":{"tf":1.0},"traits/bibliography.html#bibliography":{"tf":1.0},"how-to-build-and-run.html#creating-a-rustup-toolchain":{"tf":1.0}},"df":6}}}},"p":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{"incremental-compilation.html#improvements-to-the-basic-algorithm":{"tf":1.0}},"df":1}},"i":{"docs":{},"df":0,"l":{"docs":{"appendix/glossary.html#appendix-c-glossary":{"tf":1.0}},"df":1}}}}}},"b":{"docs":{},"df":0,"u":{"docs":{},"df":0,"i":{"docs":{},"df":0,"l":{"docs":{},"df":0,"d":{"docs":{"compiler-debugging.html#getting-a-backtrace":{"tf":1.0},"compiler-debugging.html#getting-logging-output":{"tf":1.0},"how-to-build-and-run.html#running-xpy-and-building-a-stage1-compiler":{"tf":1.4142135623730952},"how-to-build-and-run.html#other-xpy-commands":{"tf":1.0}},"df":4}}}},"a":{"docs":{},"df":0,"s":{"docs":{"conventions.html#how-to-structure-your-pr":{"tf":1.7320508075688773}},"df":1}}},"t":{"docs":{},"df":0,"u":{"docs":{},"df":0,"r":{"docs":{},"df":0,"n":{"docs":{"mir/index.html#mir-data-types":{"tf":1.0},"compiletest.html#header-commands":{"tf":1.0},"query.html#queries-demand-driven-compilation":{"tf":2.0},"appendix/stupid-stats.html#compilercalls":{"tf":1.0},"variance.html#variance-and-object-types":{"tf":1.4142135623730952},"const-eval.html#constant-evaluation":{"tf":1.0},"mir/index.html#key-mir-vocabulary":{"tf":1.7320508075688773},"incremental-compilation.html#the-try-mark-green-algorithm":{"tf":1.4142135623730952},"type-inference.html#enforcing-equality--subtyping":{"tf":2.23606797749979},"compiletest.html#adding-a-new-header-command":{"tf":1.0},"incremental-compilation.html#improvements-to-the-basic-algorithm":{"tf":1.0},"compiletest.html#introduction":{"tf":1.0},"traits/resolution.html#selection":{"tf":1.0},"miri.html#miri":{"tf":1.7320508075688773},"macro-expansion.html#the-macro-parser":{"tf":1.0},"traits/lowering-module.html#the--program_clauses_for--query":{"tf":1.0},"incremental-compilation.html#the-query-dag":{"tf":1.4142135623730952},"type-inference.html#trying-equality":{"tf":1.4142135623730952},"miri.html#interpretation":{"tf":1.0},"rustdoc.html#from-soup-to-nuts":{"tf":1.0},"query.html#how-the-compiler-executes-a-query":{"tf":2.0},"ty.html#allocating-and-working-with-types":{"tf":1.0},"mir/regionck.html#skolemization-and-outlives-constraints":{"tf":1.0},"type-inference.html#subtyping-obligations":{"tf":1.0},"type-inference.html#creating-an-inference-context":{"tf":1.4142135623730952},"mir/regionck.html#final-example":{"tf":2.0},"traits/specialization.html#specialization":{"tf":1.4142135623730952},"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.0},"hir.html#the-hir-map":{"tf":2.0},"mir/regionck.html#representing-the-values-of-a-region-variable":{"tf":1.0},"conventions.html#use-todo-comments-for-things-you-dont-want-to-forget":{"tf":1.0},"compiletest.html#implementing-the-behavior-change":{"tf":1.0},"diag.html#error-messages":{"tf":1.0}},"df":33,"_":{"docs":{},"df":0,"p":{"docs":{},"df":0,"l":{"docs":{},"df":0,"a":{"docs":{},"df":0,"c":{"docs":{"mir/index.html#mir-data-types":{"tf":1.0}},"df":1}}}}}}}},"a":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{"traits/caching.html#where-clauses-and-the-local-vs-global-cache":{"tf":1.0}},"df":1}}}},"a":{"docs":{},"df":0,"c":{"docs":{},"df":0,"h":{"docs":{"traits/goals-and-clauses.html#coinductive-goals":{"tf":1.4142135623730952},"diag.html#error-messages":{"tf":1.0},"type-inference.html#lexical-region-resolution":{"tf":1.0},"mir/regionck.html#skolemization-and-outlives-constraints":{"tf":1.0},"incrcomp-debugging.html#dumping-the-graph":{"tf":1.4142135623730952}},"df":5,"a":{"docs":{},"df":0,"b":{"docs":{},"df":0,"l":{"docs":{"traits/goals-and-clauses.html#coinductive-goals":{"tf":1.0}},"df":1}}}}},"l":{"docs":{"compiler-debugging.html#debugging-llvm":{"tf":1.0},"high-level-overview.html#crate-structure":{"tf":1.0},"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.0},"incremental-compilation.html#incremental-compilation":{"tf":1.0},"tests/intro.html#testing-on-emulators":{"tf":1.0},"appendix/stupid-stats.html#appendix-a-a-tutorial-on-creating-a-drop-in-replacement-for-rustc":{"tf":1.0}},"df":6,"i":{"docs":{},"df":0,"z":{"docs":{"query.html#queries-demand-driven-compilation":{"tf":1.0},"mir/regionck.html#another-example":{"tf":1.0}},"df":2}},"l":{"docs":{},"df":0,"i":{"docs":{"query.html#how-the-compiler-executes-a-query":{"tf":1.0},"appendix/stupid-stats.html#overview-of-the-compilation-process":{"tf":1.4142135623730952},"tests/adding.html#adding-new-tests":{"tf":1.0},"appendix/glossary.html#appendix-c-glossary":{"tf":1.0},"hir.html#identifiers-in-the-hir":{"tf":1.0},"traits/lowering-to-logic.html#type-checking-generic-functions-beyond-horn-clauses":{"tf":1.0},"conventions.html#how-to-structure-your-pr":{"tf":1.0},"high-level-overview.html#crate-structure":{"tf":1.0},"appendix/stupid-stats.html#what-next":{"tf":1.0},"how-to-build-and-run.html#running-xpy-and-building-a-stage1-compiler":{"tf":1.0},"traits/associated-types.html#associated-type-projection-and-normalization":{"tf":1.0},"macro-expansion.html#example":{"tf":1.0},"traits/canonicalization.html#canonicalization":{"tf":1.4142135623730952},"traits/associated-types.html#skolemized-associated-types":{"tf":1.0},"tests/adding.html#revisions":{"tf":1.0}},"df":15}}},"s":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{"mir/regionck.html#skolemization-and-universes":{"tf":1.0},"traits/goals-and-clauses.html#domain-goals":{"tf":1.0},"variance.html#the-algorithm":{"tf":1.0},"traits/specialization.html#specialization":{"tf":1.4142135623730952},"mir/regionck.html#another-example":{"tf":1.0},"high-level-overview.html#crate-structure":{"tf":1.0},"type-inference.html#snapshots":{"tf":1.0},"traits/goals-and-clauses.html#coinductive-goals":{"tf":1.0},"tests/adding.html#comment-explaining-what-the-test-is-about":{"tf":1.0},"traits/wf.html#well-formedness-checking":{"tf":1.0},"variance.html#trait-variance-and-vtable-resolution":{"tf":1.0},"traits/lowering-to-logic.html#type-checking-generic-functions-beyond-horn-clauses":{"tf":1.0},"variance.html#variance-and-object-types":{"tf":1.0},"variance.html#variance-and-associated-types":{"tf":1.0},"method-lookup.html#method-lookup":{"tf":1.0},"traits/caching.html#caching-and-subtle-considerations-therewith":{"tf":1.0},"variance.html#constraints":{"tf":1.0},"hir.html#out-of-band-storage-and-the--crate--type":{"tf":1.0},"traits/goals-and-clauses.html#incomplete-chapter":{"tf":1.0},"traits/chalk-overview.html#blog-posts":{"tf":1.0}},"df":20}}},"p":{"docs":{},"df":0,"p":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{"traits/canonicalization.html#canonicalizing-the-query-result":{"tf":1.0},"traits/canonicalization.html#executing-the-query":{"tf":1.0}},"df":2}}}},"d":{"docs":{"mir/passes.html#stealing":{"tf":2.23606797749979},"traits/hrtb.html#basic-matching-and-skolemization-leaks":{"tf":1.0},"compiler-debugging.html#debugging-llvm":{"tf":1.0},"mir/index.html#mir-data-types":{"tf":1.0},"rustdoc.html#other-tricks-up-its-sleeve":{"tf":1.0},"traits/resolution.html#trait-resolution-old-style":{"tf":1.0},"incremental-compilation.html#the-try-mark-green-algorithm":{"tf":1.0},"mir/passes.html#mir-passes":{"tf":1.0},"appendix/stupid-stats.html#overview-of-the-compilation-process":{"tf":1.0},"traits/chalk-overview.html#lowering":{"tf":1.0},"tests/adding.html#normalization":{"tf":1.0},"mir/index.html#key-mir-vocabulary":{"tf":1.4142135623730952},"variance.html#dependency-graph-management":{"tf":1.4142135623730952},"tests/intro.html#testing-on-emulators":{"tf":1.0},"type-inference.html#inference-variables":{"tf":1.0},"traits/bibliography.html#bibliography":{"tf":1.0},"traits/index.html#trait-solving-new-style":{"tf":1.0},"appendix/glossary.html#appendix-c-glossary":{"tf":1.0},"incremental-compilation.html#the-query-dag":{"tf":1.4142135623730952},"query.html#adding-a-new-kind-of-query":{"tf":1.0},"traits/canonicalization.html#canonicalization":{"tf":1.0},"tests/intro.html#further-reading":{"tf":1.4142135623730952}},"df":22,"s":{"docs":{},"df":0,"(":{"docs":{},"df":0,"m":{"docs":{},"df":0,"a":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"_":{"docs":{},"df":0,"q":{"docs":{},"df":0,"u":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{"incremental-compilation.html#the-query-dag":{"tf":1.0}},"df":1}}}}}}}}}},"q":{"docs":{"incremental-compilation.html#the-try-mark-green-algorithm":{"tf":2.23606797749979}},"df":1}}},"m":{"docs":{"query.html#adding-a-new-kind-of-query":{"tf":1.0}},"df":1,"e":{"docs":{},"df":0,".":{"docs":{},"df":0,"m":{"docs":{},"df":0,"d":{"docs":{"high-level-overview.html#crate-structure":{"tf":1.0}},"df":1}}}}},"i":{"docs":{"mir/passes.html#mir-passes":{"tf":1.4142135623730952},"traits/associated-types.html#integration-with-unification":{"tf":1.0},"how-to-build-and-run.html#running-xpy-and-building-a-stage1-compiler":{"tf":1.0}},"df":3,"l":{"docs":{},"df":0,"i":{"docs":{"tests/intro.html#testing-on-emulators":{"tf":1.0}},"df":1}}},"a":{"docs":{},"df":0,"b":{"docs":{},"df":0,"l":{"docs":{"traits/bibliography.html#bibliography":{"tf":1.0},"mir/regionck.html#mir-based-region-checking-nll":{"tf":1.0},"query.html#adding-a-new-kind-of-query":{"tf":1.0},"traits/chalk-overview.html#an-overview-of-chalk":{"tf":1.0}},"df":4}}}}},"q":{"docs":{},"df":0,"u":{"docs":{},"df":0,"i":{"docs":{},"df":0,"r":{"docs":{"conventions.html#how-to-structure-your-pr":{"tf":1.0},"incremental-compilation.html#the-basic-algorithm":{"tf":1.0},"traits/resolution.html#overview":{"tf":1.0},"miri.html#miri":{"tf":1.0},"traits/lowering-module.html#unit-tests":{"tf":1.0},"traits/resolution.html#selection":{"tf":1.0},"traits/canonical-queries.html#examples":{"tf":1.7320508075688773},"traits/lowering-rules.html#associated-type-declarations":{"tf":1.0},"appendix/stupid-stats.html#what-next":{"tf":1.0},"mir/passes.html#stealing":{"tf":1.0},"variance.html#variance-and-object-types":{"tf":1.4142135623730952},"miri.html#allocations":{"tf":1.0},"traits/goals-and-clauses.html#coinductive-goals":{"tf":1.0},"variance.html#the-algorithm":{"tf":1.0},"incremental-compilation.html#improvements-to-the-basic-algorithm":{"tf":1.0},"macro-expansion.html#example":{"tf":1.0},"high-level-overview.html#the-main-stages-of-compilation":{"tf":1.0},"traits/specialization.html#specialization":{"tf":1.0},"tests/adding.html#other-header-commands":{"tf":1.4142135623730952},"mir/index.html#key-mir-vocabulary":{"tf":1.0},"mir/visitor.html#mir-visitor":{"tf":1.0},"traits/goals-and-clauses.html#domain-goals":{"tf":1.0},"miri.html#interpretation":{"tf":1.0}},"df":23}},"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{"variance.html#dependency-graph-management":{"tf":1.0},"tests/intro.html#testing-infrastructure":{"tf":1.0}},"df":2}}}}},"n":{"docs":{},"df":0,"a":{"docs":{},"df":0,"m":{"docs":{"incremental-compilation.html#footnotes":{"tf":1.0},"conventions.html#how-to-structure-your-pr":{"tf":1.7320508075688773},"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.4142135623730952},"how-to-build-and-run.html#running-xpy-and-building-a-stage1-compiler":{"tf":1.0}},"df":4}},"d":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"rustdoc.html#other-tricks-up-its-sleeve":{"tf":1.0},"rustdoc.html#from-clean-to-crate":{"tf":2.8284271247461905},"rustdoc.html#from-crate-to-clean":{"tf":1.0},"rustdoc.html#the-walking-tour-of-rustdoc":{"tf":1.4142135623730952},"rustdoc.html#cheat-sheet":{"tf":1.0},"rustdoc.html#from-soup-to-nuts":{"tf":1.7320508075688773}},"df":6}}}},"r":{"docs":{},"df":0,"u":{"docs":{},"df":0,"n":{"docs":{"tests/running.html#running-tests":{"tf":1.0}},"df":1}}},"g":{"docs":{},"df":0,"e":{"docs":{},"df":0,"x":{"docs":{"macro-expansion.html#the-macro-parser":{"tf":1.7320508075688773},"tests/adding.html#normalization":{"tf":1.7320508075688773}},"df":2}},"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"s":{"docs":{"tests/adding.html#what-kind-of-test-should-i-add":{"tf":1.0},"tests/intro.html#other-tests":{"tf":1.0},"tests/adding.html#adding-new-tests":{"tf":1.0},"tests/adding.html#naming-your-test":{"tf":1.0},"tests/adding.html#comment-explaining-what-the-test-is-about":{"tf":1.0}},"df":5}}}},"i":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{"mir/passes.html#implementing-and-registering-a-pass":{"tf":1.4142135623730952},"diag.html#declaring-a-lint":{"tf":1.0},"diag.html#edition-gated-lints":{"tf":1.0}},"df":3,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"_":{"docs":{},"df":0,"b":{"docs":{},"df":0,"u":{"docs":{},"df":0,"i":{"docs":{},"df":0,"l":{"docs":{},"df":0,"t":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{"diag.html#edition-gated-lints":{"tf":1.0},"diag.html#lint-groups":{"tf":1.0}},"df":2}}}}}}}}}},"r":{"docs":{"compiletest.html#adding-a-new-test-file":{"tf":1.0}},"df":1}}},"o":{"docs":{},"df":0,"n":{"docs":{"traits/hrtb.html#higher-ranked-trait-obligations":{"tf":2.449489742783178},"mir/regionck.html#back-to-our-example":{"tf":2.0},"traits/index.html#trait-solving-new-style":{"tf":1.4142135623730952},"mir/regionck.html#subtyping-and-skolemization":{"tf":2.6457513110645909},"type-inference.html#trying-equality":{"tf":1.4142135623730952},"traits/canonical-queries.html#examples":{"tf":1.0},"type-inference.html#type-inference":{"tf":1.0},"mir/regionck.html#representing-the-values-of-a-region-variable":{"tf":2.8284271247461905},"appendix/background.html#what-is-a-free-region-or-a-free-variable-what-about-bound-region":{"tf":2.449489742783178},"rustc-driver.html#the-rustc-driver":{"tf":1.0},"type-inference.html#inference-variables":{"tf":1.7320508075688773},"traits/canonical-queries.html#a-trait-query-in-rustc":{"tf":1.4142135623730952},"mir/regionck.html#extending-the-universal-regions-check":{"tf":3.0},"mir/regionck.html#another-example":{"tf":1.7320508075688773},"traits/associated-types.html#integration-with-unification":{"tf":1.0},"type-inference.html#subtyping-obligations":{"tf":1.7320508075688773},"traits/regions.html#region-constraints":{"tf":1.4142135623730952},"traits/canonicalization.html#executing-the-query":{"tf":1.0},"mir/regionck.html#mir-based-region-checking-nll":{"tf":3.605551275463989},"mir/borrowck.html#mir-borrow-check":{"tf":1.0},"mir/regionck.html#what-is-a-universe":{"tf":1.0},"mir/regionck.html#skolemization-and-outlives-constraints":{"tf":2.0},"type-inference.html#a-note-on-terminology":{"tf":2.0},"mir/regionck.html#skolemization-and-universes":{"tf":1.0},"appendix/glossary.html#appendix-c-glossary":{"tf":1.4142135623730952},"traits/canonicalization.html#processing-the-canonicalized-query-result":{"tf":1.4142135623730952},"type-inference.html#lexical-region-resolution":{"tf":2.6457513110645909},"mir/regionck.html#universal-regions":{"tf":1.4142135623730952},"traits/canonicalization.html#canonicalizing-the-query-result":{"tf":1.0},"mir/borrowck.html#major-phases-of-the-borrow-checker":{"tf":2.449489742783178},"type-inference.html#region-constraints":{"tf":2.23606797749979},"traits/chalk-overview.html#lowering":{"tf":1.0},"traits/goals-and-clauses.html#domain-goals":{"tf":2.449489742783178},"type-inference.html#extracting-region-constraints":{"tf":3.3166247903554},"mir/regionck.html#region-variables-and-constraints":{"tf":1.4142135623730952},"traits/hrtb.html#basic-matching-and-skolemization-leaks":{"tf":3.1622776601683797},"mir/regionck.html#universes-and-skolemized-region-elements":{"tf":2.6457513110645909}},"df":37,"e":{"docs":{},"df":0,"l":{"docs":{"mir/regionck.html#representing-the-values-of-a-region-variable":{"tf":1.0}},"df":1,"e":{"docs":{},"df":0,"m":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{},"df":0,"e":{"docs":{},"df":0,"x":{"docs":{"mir/regionck.html#representing-the-values-of-a-region-variable":{"tf":1.0}},"df":1}}}}}}}}}}}},"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{"traits/associated-types.html#integration-with-unification":{"tf":1.0}},"df":1}}}}}}}}},"k":{"docs":{"mir/borrowck.html#major-phases-of-the-borrow-checker":{"tf":1.0}},"df":1}},"_":{"docs":{},"df":0,"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{"traits/canonicalization.html#canonicalizing-the-query-result":{"tf":1.4142135623730952},"type-inference.html#region-constraints":{"tf":1.0},"traits/canonicalization.html#processing-the-canonicalized-query-result":{"tf":1.4142135623730952}},"df":3}}}}}}}}}}},"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"f":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"c":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"x":{"docs":{},"df":0,"t":{"docs":{"mir/regionck.html#region-variables-and-constraints":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}},"u":{"docs":{},"df":0,"l":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{"traits/associated-types.html#skolemized-associated-types":{"tf":1.0}},"df":1}}}},"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"d":{"docs":{"rustdoc.html#hot-potato":{"tf":1.0}},"df":1,"l":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"s":{"docs":{"high-level-overview.html#the-main-stages-of-compilation":{"tf":1.0}},"df":1}}}}}}}},"p":{"docs":{},"df":0,"o":{"docs":{"appendix/glossary.html#appendix-c-glossary":{"tf":1.0},"rustdoc.html#dotting-is-and-crossing-ts":{"tf":1.0},"compiler-debugging.html#debugging-the-compiler":{"tf":1.0}},"df":3,"r":{"docs":{},"df":0,"t":{"docs":{"miri.html#miri":{"tf":1.0},"compiler-debugging.html#getting-a-backtrace-for-errors":{"tf":1.4142135623730952},"traits/resolution.html#confirmation":{"tf":1.4142135623730952},"mir/regionck.html#back-to-our-example":{"tf":1.0},"diag.html#error-messages":{"tf":1.4142135623730952},"high-level-overview.html#crate-structure":{"tf":1.0},"conventions.html#use-todo-comments-for-things-you-dont-want-to-forget":{"tf":1.0},"appendix/glossary.html#appendix-c-glossary":{"tf":1.0},"query.html#cycles-between-queries":{"tf":2.23606797749979},"macro-expansion.html#the-macro-parser":{"tf":1.0},"appendix/code-index.html#appendix-d-code-index":{"tf":1.0},"mir/regionck.html#final-example":{"tf":1.0},"diag.html#span":{"tf":1.0},"incrcomp-debugging.html#tracking-down-incorrect-edges":{"tf":1.0},"incrcomp-debugging.html#testing-the-dependency-graph":{"tf":1.0}},"df":15}},"s":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{"appendix/stupid-stats.html#appendix-a-a-tutorial-on-creating-a-drop-in-replacement-for-rustc":{"tf":1.0},"high-level-overview.html#crate-structure":{"tf":1.0},"about-this-guide.html#about-this-guide":{"tf":1.0}},"df":3}}}}}}},"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{"compiletest.html#introduction":{"tf":1.0},"mir/regionck.html#what-is-a-universe":{"tf":1.0},"traits/canonical-queries.html#examples":{"tf":1.7320508075688773},"variance.html#the-algorithm":{"tf":1.0},"diag.html#edition-gated-lints":{"tf":1.0},"traits/chalk-overview.html#lowering":{"tf":1.4142135623730952},"mir/regionck.html#skolemization-and-outlives-constraints":{"tf":1.0},"variance.html#trait-variance-and-vtable-resolution":{"tf":1.0},"diag.html#span":{"tf":1.0},"high-level-overview.html#the-main-stages-of-compilation":{"tf":1.0},"mir/regionck.html#back-to-our-example":{"tf":1.4142135623730952},"traits/lowering-to-logic.html#rust-traits-and-logic":{"tf":1.0},"mir/regionck.html#subtyping-and-skolemization":{"tf":1.4142135623730952},"variance.html#addendum-variance-on-traits":{"tf":1.0},"query.html#adding-a-new-kind-of-query":{"tf":1.4142135623730952},"traits/associated-types.html#skolemized-associated-types":{"tf":1.0},"type-inference.html#inference-variables":{"tf":1.7320508075688773},"mir/regionck.html#representing-the-values-of-a-region-variable":{"tf":1.4142135623730952},"hir.html#hir-bodies":{"tf":1.0},"high-level-overview.html#crate-structure":{"tf":1.0},"traits/canonicalization.html#executing-the-query":{"tf":1.0},"traits/hrtb.html#basic-matching-and-skolemization-leaks":{"tf":1.0},"ty.html#the--ty--module-representing-types":{"tf":1.7320508075688773},"appendix/glossary.html#appendix-c-glossary":{"tf":1.4142135623730952},"traits/chalk-overview.html#intermediate-representation-ir":{"tf":1.0},"ty.html#beyond-types-other-kinds-of-arena-allocated-data-structures":{"tf":1.0},"mir/index.html#mir-data-types":{"tf":2.6457513110645909},"traits/resolution.html#candidate-assembly":{"tf":1.0},"ty.html#allocating-and-working-with-types":{"tf":1.4142135623730952},"mir/passes.html#mir-passes":{"tf":1.4142135623730952},"traits/canonicalization.html#canonicalization":{"tf":1.0},"type-checking.html#type-collection":{"tf":1.4142135623730952},"mir/index.html#representing-constants":{"tf":1.4142135623730952},"mir/regionck.html#extending-the-universal-regions-check":{"tf":1.0},"mir/visitor.html#mir-visitor":{"tf":1.0}},"df":35,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{"type-checking.html#type-collection":{"tf":1.0},"appendix/stupid-stats.html#overview-of-the-compilation-process":{"tf":1.0},"hir.html#the-hir":{"tf":1.7320508075688773},"high-level-overview.html#the-main-stages-of-compilation":{"tf":1.0},"rustdoc.html#from-crate-to-clean":{"tf":1.0},"traits/chalk-overview.html#intermediate-representation-ir":{"tf":1.7320508075688773},"mir/index.html#the-mir-mid-level-ir":{"tf":1.0},"appendix/glossary.html#appendix-c-glossary":{"tf":1.7320508075688773},"const-eval.html#constant-evaluation":{"tf":1.4142135623730952},"appendix/background.html#what-is-a-control-flow-graph":{"tf":1.0},"rustdoc.html#the-walking-tour-of-rustdoc":{"tf":1.0},"hir.html#out-of-band-storage-and-the--crate--type":{"tf":1.7320508075688773},"appendix/code-index.html#appendix-d-code-index":{"tf":1.4142135623730952}},"df":13,"a":{"docs":{},"df":0,"d":{"docs":{"miri.html#datastructures":{"tf":1.0}},"df":1}}}}}}},"o":{"docs":{},"df":0,"d":{"docs":{},"df":0,"u":{"docs":{},"df":0,"c":{"docs":{"traits/lowering-rules.html#associated-type-declarations":{"tf":1.0}},"df":1}}}}},"l":{"docs":{},"df":0,"i":{"docs":{},"df":0,"c":{"docs":{"compiler-debugging.html#debugging-llvm":{"tf":1.0}},"df":1}},"a":{"docs":{},"df":0,"y":{"docs":{"traits/caching.html#caching-and-subtle-considerations-therewith":{"tf":1.0}},"df":1},"c":{"docs":{"traits/canonicalization.html#executing-the-query":{"tf":1.0},"high-level-overview.html#the-main-stages-of-compilation":{"tf":1.0},"about-this-guide.html#about-this-guide":{"tf":1.0},"traits/canonicalization.html#canonicalization":{"tf":1.0},"traits/canonicalization.html#canonicalizing-the-query":{"tf":1.0},"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.4142135623730952},"appendix/glossary.html#appendix-c-glossary":{"tf":1.0},"traits/caching.html#an-example":{"tf":1.4142135623730952},"appendix/stupid-stats.html#overview-of-the-compilation-process":{"tf":1.4142135623730952},"mir/regionck.html#subtyping-and-skolemization":{"tf":1.4142135623730952},"mir/regionck.html#mir-based-region-checking-nll":{"tf":1.0},"tests/adding.html#normalization":{"tf":1.7320508075688773},"mir/borrowck.html#major-phases-of-the-borrow-checker":{"tf":1.0},"appendix/stupid-stats.html#appendix-a-a-tutorial-on-creating-a-drop-in-replacement-for-rustc":{"tf":1.7320508075688773}},"df":14,"e":{"docs":{},"df":0,"_":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"g":{"docs":{},"df":0,"i":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"s":{"docs":{},"df":0,"_":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"_":{"docs":{},"df":0,"m":{"docs":{},"df":0,"i":{"docs":{},"df":0,"r":{"docs":{"mir/regionck.html#mir-based-region-checking-nll":{"tf":1.4142135623730952}},"df":1}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{"traits/resolution.html#major-concepts":{"tf":1.0},"tests/adding.html#adding-new-tests":{"tf":1.0},"traits/resolution.html#selection-during-translation":{"tf":1.0},"traits/canonicalization.html#canonicalization":{"tf":1.0}},"df":4,"e":{"docs":{},"df":0,"d":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{"type-inference.html#lexical-region-resolution":{"tf":1.0}},"df":1}}}}}}}},"d":{"docs":{"incremental-compilation.html#the-try-mark-green-algorithm":{"tf":1.7320508075688773},"variance.html#dependency-graph-management":{"tf":1.0},"incremental-compilation.html#the-query-dag":{"tf":1.0},"incremental-compilation.html#the-basic-algorithm":{"tf":1.4142135623730952}},"df":4,"u":{"docs":{},"df":0,"c":{"docs":{"const-eval.html#constant-evaluation":{"tf":1.0},"ty.html#the-tcx-and-how-it-uses-lifetimes":{"tf":1.0},"rustc-driver.html#a-note-on-lifetimes":{"tf":1.0},"traits/resolution.html#candidate-assembly":{"tf":1.0}},"df":4}}},"j":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{"mir/regionck.html#skolemization-and-universes":{"tf":1.0},"tests/intro.html#other-tests":{"tf":1.0}},"df":2}}}},"v":{"docs":{},"df":0,"i":{"docs":{},"df":0,"s":{"docs":{"tests/adding.html#revisions":{"tf":3.0}},"df":1,"i":{"docs":{},"df":0,"t":{"docs":{"traits/canonical-queries.html#examples":{"tf":1.0}},"df":1}}},"e":{"docs":{},"df":0,"w":{"docs":{"conventions.html#how-to-structure-your-pr":{"tf":1.0},"conventions.html#formatting-and-the-tidy-script":{"tf":1.0},"tests/adding.html#what-kind-of-test-should-i-add":{"tf":1.0}},"df":3}}},"a":{"docs":{},"df":0,"m":{"docs":{},"df":0,"p":{"docs":{"traits/lowering-to-logic.html#type-checking-generic-functions-beyond-horn-clauses":{"tf":1.0}},"df":1}}},"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"s":{"docs":{"type-inference.html#trying-equality":{"tf":1.0},"mir/visitor.html#traversal":{"tf":1.0},"traits/lowering-rules.html#associated-type-declarations":{"tf":1.0}},"df":3}}}},"m":{"docs":{},"df":0,"e":{"docs":{},"df":0,"m":{"docs":{},"df":0,"b":{"docs":{"traits/canonical-queries.html#a-trait-query-in-rustc":{"tf":1.0},"traits/canonicalization.html#executing-the-query":{"tf":1.0},"traits/lowering-rules.html#trait-header":{"tf":1.0},"traits/index.html#trait-solving-new-style":{"tf":1.0},"mir/passes.html#stealing":{"tf":1.0}},"df":5}}},"o":{"docs":{},"df":0,"v":{"docs":{"compiler-debugging.html#logging-etiquette":{"tf":1.0},"rustdoc.html#hot-potato":{"tf":1.4142135623730952},"traits/resolution.html#overview":{"tf":1.0},"variance.html#variance-of-type-and-lifetime-parameters":{"tf":1.0},"traits/resolution.html#candidate-assembly":{"tf":1.0},"high-level-overview.html#the-main-stages-of-compilation":{"tf":1.0},"conventions.html#use-todo-comments-for-things-you-dont-want-to-forget":{"tf":1.0},"tests/running.html#running-tests":{"tf":1.0},"compiler-debugging.html#getting-a-backtrace-for-errors":{"tf":1.4142135623730952},"mir/passes.html#implementing-and-registering-a-pass":{"tf":1.0},"mir/visitor.html#mir-visitor":{"tf":1.0},"compiler-debugging.html#getting-a-backtrace":{"tf":1.7320508075688773},"appendix/glossary.html#appendix-c-glossary":{"tf":1.0}},"df":13},"t":{"docs":{"conventions.html#how-to-structure-your-pr":{"tf":1.0},"tests/intro.html#testing-on-emulators":{"tf":2.23606797749979}},"df":2}},"a":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{"traits/associated-types.html#integration-with-unification":{"tf":1.0},"mir/regionck.html#skolemization-and-outlives-constraints":{"tf":1.0}},"df":2,"d":{"docs":{"macro-expansion.html#example":{"tf":1.0},"mir/regionck.html#representing-the-values-of-a-region-variable":{"tf":1.0},"appendix/background.html#what-is-a-control-flow-graph":{"tf":1.0}},"df":3}}}}},"u":{"docs":{},"df":0,"s":{"docs":{"incremental-compilation.html#the-basic-algorithm":{"tf":1.0},"tests/intro.html#compiletest-test-suites":{"tf":1.0}},"df":2}},"w":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{"tests/adding.html#comment-explaining-what-the-test-is-about":{"tf":1.0}},"df":1}}}}}}}},"s":{"docs":{"high-level-overview.html#the-main-stages-of-compilation":{"tf":1.0},"tests/running.html#running-an-individual-test":{"tf":1.0}},"df":2},"a":{"docs":{},"df":0,"w":{"docs":{"appendix/glossary.html#appendix-c-glossary":{"tf":1.0},"macro-expansion.html#example":{"tf":1.0},"appendix/code-index.html#appendix-d-code-index":{"tf":1.0},"macro-expansion.html#the-macro-parser":{"tf":1.0},"the-parser.html#the-parser":{"tf":1.0},"miri.html#allocations":{"tf":1.0}},"df":6},"d":{"docs":{},"df":0,"i":{"docs":{},"df":0,"c":{"docs":{"mir/index.html#the-mir-mid-level-ir":{"tf":1.0},"mir/borrowck.html#mir-borrow-check":{"tf":1.0}},"df":2}}},"n":{"docs":{"high-level-overview.html#the-main-stages-of-compilation":{"tf":1.0}},"df":1,"k":{"docs":{"type-inference.html#type-inference":{"tf":1.0},"traits/hrtb.html#higher-ranked-trait-bounds":{"tf":2.0},"traits/hrtb.html#basic-matching-and-skolemization-leaks":{"tf":1.4142135623730952},"appendix/glossary.html#appendix-c-glossary":{"tf":1.0},"traits/hrtb.html#higher-ranked-trait-obligations":{"tf":1.4142135623730952}},"df":5},"d":{"docs":{},"df":0,"o":{"docs":{},"df":0,"m":{"docs":{"tests/adding.html#naming-your-test":{"tf":1.0}},"df":1,"_":{"docs":{},"df":0,"o":{"docs":{},"df":0,"p":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"compiler-debugging.html#expensive-operations-in-logs":{"tf":1.0}},"df":1,"a":{"docs":{},"df":0,"t":{"docs":{},"df":0,"i":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"(":{"docs":{},"df":0,"t":{"docs":{},"df":0,"c":{"docs":{},"df":0,"x":{"docs":{"compiler-debugging.html#expensive-operations-in-logs":{"tf":1.4142135623730952}},"df":1}}}}}}}}}}}}}}}}}},"r":{"docs":{},"df":0,"e":{"docs":{"tests/running.html#running-tests":{"tf":1.0},"rustc-driver.html#a-note-on-lifetimes":{"tf":1.0}},"df":2}},"t":{"docs":{},"df":0,"e":{"docs":{"traits/caching.html#where-clauses-and-the-local-vs-global-cache":{"tf":1.0}},"df":1}}},"o":{"docs":{},"df":0,"o":{"docs":{},"df":0,"t":{"docs":{"the-parser.html#the-parser":{"tf":1.0},"miri.html#interpretation":{"tf":1.0},"hir.html#out-of-band-storage-and-the--crate--type":{"tf":1.0},"mir/regionck.html#skolemization-and-outlives-constraints":{"tf":1.0},"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.0},"mir/regionck.html#what-is-a-universe":{"tf":3.4641016151377546}},"df":6}},"l":{"docs":{},"df":0,"e":{"docs":{"mir/regionck.html#region-variables-and-constraints":{"tf":1.0}},"df":1},"l":{"docs":{"type-inference.html#snapshots":{"tf":1.0}},"df":1,"b":{"docs":{},"df":0,"a":{"docs":{},"df":0,"c":{"docs":{},"df":0,"k":{"docs":{},"df":0,"_":{"docs":{},"df":0,"t":{"docs":{},"df":0,"o":{"docs":{"type-inference.html#snapshots":{"tf":1.0}},"df":1}}}}}}}}},"u":{"docs":{},"df":0,"g":{"docs":{},"df":0,"h":{"docs":{"tests/adding.html#what-kind-of-test-should-i-add":{"tf":1.0}},"df":1,"l":{"docs":{},"df":0,"i":{"docs":{"high-level-overview.html#crate-structure":{"tf":1.0},"type-inference.html#enforcing-equality--subtyping":{"tf":1.0},"query.html#queries-demand-driven-compilation":{"tf":1.0},"query.html#cycles-between-queries":{"tf":1.0},"traits/canonicalization.html#canonicalization":{"tf":1.0},"appendix/glossary.html#appendix-c-glossary":{"tf":1.0}},"df":6}}}},"n":{"docs":{},"df":0,"d":{"docs":{"traits/resolution.html#selection-during-translation":{"tf":1.0}},"df":1,"a":{"docs":{},"df":0,"b":{"docs":{},"df":0,"o":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{"rustdoc.html#from-soup-to-nuts":{"tf":1.0}},"df":1}}}}}}},"t":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{"high-level-overview.html#crate-structure":{"tf":1.0}},"df":1}}}}},"h":{"docs":{"macro-expansion.html#the-macro-parser":{"tf":1.0}},"df":1,"s":{"docs":{},"df":0,":":{"docs":{},"df":0,"t":{"docs":{},"df":0,"t":{"docs":{"macro-expansion.html#the-macro-parser":{"tf":1.0}},"df":1}}}}},"m":{"docs":{"how-to-build-and-run.html#other-xpy-commands":{"tf":1.0}},"df":1},"i":{"docs":{},"df":0,"s":{"docs":{},"df":0,"k":{"docs":{},"df":0,"i":{"docs":{"ty.html#allocating-and-working-with-types":{"tf":1.0}},"df":1}}},"b":{"docs":{"name-resolution.html#todo":{"tf":1.0},"name-resolution.html#overall-strategy":{"tf":1.4142135623730952},"name-resolution.html#scopes-and-ribs":{"tf":3.4641016151377546}},"df":3},"c":{"docs":{},"df":0,"h":{"docs":{"traits/lowering-to-logic.html#rust-traits-and-logic":{"tf":1.0}},"df":1}},"g":{"docs":{},"df":0,"h":{"docs":{},"df":0,"t":{"docs":{"traits/specialization.html#specialization":{"tf":1.4142135623730952},"traits/canonical-queries.html#the-traditional-interactive-prolog-query":{"tf":1.0},"query.html#how-the-compiler-executes-a-query":{"tf":1.0},"rustdoc.html#from-soup-to-nuts":{"tf":1.0},"traits/canonicalization.html#canonicalization":{"tf":1.0},"query.html#adding-a-new-kind-of-query":{"tf":1.0},"name-resolution.html#scopes-and-ribs":{"tf":1.0},"high-level-overview.html#the-main-stages-of-compilation":{"tf":1.0},"mir/index.html#key-mir-vocabulary":{"tf":1.0},"hir.html#identifiers-in-the-hir":{"tf":1.0},"traits/hrtb.html#basic-matching-and-skolemization-leaks":{"tf":1.0},"traits/goals-and-clauses.html#domain-goals":{"tf":1.0},"ty.html#allocating-and-working-with-types":{"tf":1.0},"type-inference.html#extracting-region-constraints":{"tf":1.0},"mir/regionck.html#subtyping-and-skolemization":{"tf":1.0},"traits/lowering-rules.html#transforming-the-lowered-where-clauses":{"tf":1.0},"rustdoc.html#cheat-sheet":{"tf":1.0}},"df":17}}},"p":{"docs":{},"df":0,"g":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"p":{"docs":{"tests/intro.html#other-tests":{"tf":1.0}},"df":1}}}}}}},"k":{"docs":{"traits/goals-and-clauses.html#goals-and-clauses-meta-structure":{"tf":1.0}},"df":1,"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.4142135623730952}},"df":1}}}},"e":{"docs":{},"df":0,"e":{"docs":{},"df":0,"p":{"docs":{"appendix/stupid-stats.html#appendix-a-a-tutorial-on-creating-a-drop-in-replacement-for-rustc":{"tf":1.0},"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":2.0},"traits/canonical-queries.html#the-traditional-interactive-prolog-query":{"tf":1.0},"mir/passes.html#implementing-and-registering-a-pass":{"tf":1.0},"mir/regionck.html#what-is-a-universe":{"tf":1.4142135623730952},"how-to-build-and-run.html#running-xpy-and-building-a-stage1-compiler":{"tf":1.0},"ty.html#the-tcx-and-how-it-uses-lifetimes":{"tf":1.0},"appendix/glossary.html#appendix-c-glossary":{"tf":1.0},"macro-expansion.html#the-macro-parser":{"tf":1.7320508075688773},"conventions.html#line-length":{"tf":1.0},"mir/regionck.html#skolemization-and-outlives-constraints":{"tf":1.0},"name-resolution.html#namespaces":{"tf":1.0},"query.html#queries-demand-driven-compilation":{"tf":1.0},"rustc-driver.html#a-note-on-lifetimes":{"tf":1.0}},"df":14}},"b":{"docs":{},"df":0,"a":{"docs":{},"df":0,"b":{"docs":{"compiletest.html#adding-a-new-header-command":{"tf":1.0}},"df":1}}},"y":{"docs":{"traits/associated-types.html#integration-with-unification":{"tf":1.0},"query.html#adding-a-new-kind-of-query":{"tf":2.449489742783178},"hir.html#identifiers-in-the-hir":{"tf":1.0},"query.html#how-the-compiler-executes-a-query":{"tf":2.0},"traits/index.html#trait-solving-new-style":{"tf":1.0},"incremental-compilation.html#the-query-dag":{"tf":1.0},"traits/chalk-overview.html#lowering":{"tf":1.0},"mir/borrowck.html#mir-borrow-check":{"tf":1.0},"traits/lowering-to-logic.html#lowering-to-logic":{"tf":1.0},"appendix/code-index.html#appendix-d-code-index":{"tf":1.0},"hir.html#out-of-band-storage-and-the--crate--type":{"tf":1.0},"mir/index.html#introduction-to-mir":{"tf":1.0},"mir/index.html#mir-data-types":{"tf":1.0},"traits/bibliography.html#bibliography":{"tf":1.0},"mir/regionck.html#subtyping-and-skolemization":{"tf":1.0},"query.html#queries-demand-driven-compilation":{"tf":1.0},"traits/canonicalization.html#canonicalization":{"tf":1.0},"mir/index.html#key-mir-vocabulary":{"tf":1.7320508075688773},"appendix/background.html#what-is-a-control-flow-graph":{"tf":1.0},"compiletest.html#adding-a-new-header-command":{"tf":1.0},"incremental-compilation.html#the-basic-algorithm":{"tf":1.0}},"df":21,"/":{"docs":{},"df":0,"v":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{},"df":0,"u":{"docs":{"query.html#adding-a-new-kind-of-query":{"tf":1.0}},"df":1}}}}},"w":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"d":{"docs":{"appendix/glossary.html#appendix-c-glossary":{"tf":1.0},"appendix/background.html#what-is-a-control-flow-graph":{"tf":1.0}},"df":2}}}}},"p":{"docs":{},"df":0,"t":{"docs":{"traits/canonical-queries.html#the-traditional-interactive-prolog-query":{"tf":1.0}},"df":1}}},"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{"traits/lowering-to-logic.html#lowering-to-logic":{"tf":1.0},"name-resolution.html#name-resolution":{"tf":1.0},"type-inference.html#region-constraints":{"tf":1.0},"mir/index.html#key-mir-vocabulary":{"tf":1.0},"appendix/glossary.html#appendix-c-glossary":{"tf":1.4142135623730952},"traits/canonicalization.html#executing-the-query":{"tf":1.0},"traits/index.html#trait-solving-new-style":{"tf":1.0},"how-to-build-and-run.html#running-xpy-and-building-a-stage1-compiler":{"tf":1.0},"ty.html#allocating-and-working-with-types":{"tf":1.7320508075688773},"about-this-guide.html#about-this-guide":{"tf":1.0},"hir.html#hir-bodies":{"tf":1.4142135623730952},"type-inference.html#inference-variables":{"tf":1.0},"tests/adding.html#adding-new-tests":{"tf":1.4142135623730952},"traits/chalk-overview.html#an-overview-of-chalk":{"tf":1.0},"mir/regionck.html#mir-based-region-checking-nll":{"tf":1.0},"traits/lowering-rules.html#lowering-rules":{"tf":1.0},"traits/bibliography.html#bibliography":{"tf":1.4142135623730952},"appendix/code-index.html#appendix-d-code-index":{"tf":1.0},"high-level-overview.html#crate-structure":{"tf":1.0},"traits/goals-and-clauses.html#goals-and-clauses-meta-structure":{"tf":1.0},"query.html#adding-a-new-kind-of-query":{"tf":2.449489742783178},"method-lookup.html#method-lookup":{"tf":1.0},"traits/lowering-rules.html#trait-header":{"tf":1.4142135623730952},"traits/lowering-rules.html#function-and-constant-values":{"tf":1.0},"name-resolution.html#namespaces":{"tf":1.0},"hir.html#the-hir-map":{"tf":1.0},"type-inference.html#creating-an-inference-context":{"tf":1.0},"mir/regionck.html#representing-the-values-of-a-region-variable":{"tf":1.4142135623730952},"tests/adding.html#what-kind-of-test-should-i-add":{"tf":1.7320508075688773},"name-resolution.html#overall-strategy":{"tf":1.0},"method-lookup.html#candidate-assembly":{"tf":1.4142135623730952},"rustdoc.html#from-clean-to-crate":{"tf":1.4142135623730952},"traits/lowering-to-logic.html#rust-traits-and-logic":{"tf":1.0},"param_env.html#parameter-environment":{"tf":1.0},"query.html#how-the-compiler-executes-a-query":{"tf":1.0},"ty.html#beyond-types-other-kinds-of-arena-allocated-data-structures":{"tf":1.4142135623730952},"mir/regionck.html#what-is-a-universe":{"tf":1.0},"appendix/stupid-stats.html#appendix-a-a-tutorial-on-creating-a-drop-in-replacement-for-rustc":{"tf":1.0}},"df":38}}},"n":{"docs":{},"df":0,"o":{"docs":{},"df":0,"w":{"docs":{"high-level-overview.html#the-main-stages-of-compilation":{"tf":2.0},"variance.html#variance-and-associated-types":{"tf":1.4142135623730952},"traits/canonical-queries.html#canonical-queries":{"tf":1.4142135623730952},"mir/regionck.html#extending-the-universal-regions-check":{"tf":1.0},"tests/adding.html#adding-new-tests":{"tf":1.0},"traits/resolution.html#candidate-assembly":{"tf":1.0},"variance.html#variance-and-object-types":{"tf":1.4142135623730952},"appendix/stupid-stats.html#what-next":{"tf":1.4142135623730952},"traits/associated-types.html#skolemized-associated-types":{"tf":1.0},"mir/regionck.html#skolemization-and-universes":{"tf":1.0},"traits/hrtb.html#higher-ranked-trait-obligations":{"tf":1.0},"traits/chalk-overview.html#parsing":{"tf":1.0},"rustdoc.html#hot-potato":{"tf":1.0},"ty.html#the-tcx-and-how-it-uses-lifetimes":{"tf":1.0},"diag.html#suggestions":{"tf":1.0},"tests/adding.html#what-kind-of-test-should-i-add":{"tf":1.0},"hir.html#the-hir-map":{"tf":1.4142135623730952},"traits/canonical-queries.html#examples":{"tf":1.4142135623730952},"mir/regionck.html#skolemization-and-outlives-constraints":{"tf":1.4142135623730952},"traits/canonicalization.html#canonicalization":{"tf":1.0},"traits/lowering-to-logic.html#type-checking-generic-functions-beyond-horn-clauses":{"tf":1.0},"traits/goals-and-clauses.html#goals-and-clauses":{"tf":1.0},"mir/regionck.html#subtyping-and-skolemization":{"tf":1.0},"param_env.html#parameter-environment":{"tf":1.0},"traits/lowering-rules.html#trait-header":{"tf":1.0},"compiler-debugging.html#expensive-operations-in-logs":{"tf":1.0},"type-inference.html#extracting-region-constraints":{"tf":1.0},"traits/resolution.html#selection-during-translation":{"tf":2.0},"tests/adding.html#header-commands-configuring-rustc":{"tf":1.0},"type-inference.html#trying-equality":{"tf":1.0},"query.html#cycles-between-queries":{"tf":1.0},"tests/adding.html#comment-explaining-what-the-test-is-about":{"tf":1.4142135623730952},"traits/resolution.html#major-concepts":{"tf":1.0}},"df":33,"n":{"docs":{"compiletest.html#header-commands":{"tf":1.0},"traits/canonical-queries.html#a-trait-query-in-rustc":{"tf":1.0},"type-inference.html#extracting-region-constraints":{"tf":1.0},"mir/regionck.html#back-to-our-example":{"tf":1.0},"appendix/glossary.html#appendix-c-glossary":{"tf":1.0},"type-inference.html#subtyping-obligations":{"tf":1.0},"traits/specialization.html#specialization":{"tf":1.4142135623730952},"mir/regionck.html#extending-the-universal-regions-check":{"tf":1.0},"ty.html#allocating-and-working-with-types":{"tf":1.4142135623730952},"traits/canonical-queries.html#examples":{"tf":1.4142135623730952},"variance.html#variance-and-object-types":{"tf":1.0},"traits/caching.html#caching-and-subtle-considerations-therewith":{"tf":1.0},"traits/goals-and-clauses.html#coinductive-goals":{"tf":1.0},"const-eval.html#constant-evaluation":{"tf":1.7320508075688773},"type-inference.html#inference-variables":{"tf":1.0}},"df":15},"l":{"docs":{},"df":0,"e":{"docs":{},"df":0,"d":{"docs":{},"df":0,"g":{"docs":{"macro-expansion.html#the-macro-parser":{"tf":1.0}},"df":1}}}}},"c":{"docs":{},"df":0,"k":{"docs":{"mir/index.html#key-mir-vocabulary":{"tf":1.0}},"df":1}}},"e":{"docs":{},"df":0,"w":{"docs":{"traits/associated-types.html#projection-equality":{"tf":1.0}},"df":1}}}},"x":{"docs":{"traits/resolution.html#confirmation":{"tf":1.0},"high-level-overview.html#the-main-stages-of-compilation":{"tf":1.0},"mir/regionck.html#skolemization-and-universes":{"tf":1.0},"tests/adding.html#normalization":{"tf":1.0},"variance.html#variance-of-type-and-lifetime-parameters":{"tf":1.4142135623730952},"traits/resolution.html#candidate-assembly":{"tf":3.0},"name-resolution.html#namespaces":{"tf":2.23606797749979},"tests/adding.html#header-commands-configuring-rustc":{"tf":1.0},"mir/regionck.html#what-is-a-universe":{"tf":2.8284271247461905},"traits/hrtb.html#higher-ranked-trait-obligations":{"tf":2.23606797749979},"variance.html#the-algorithm":{"tf":2.8284271247461905},"diag.html#suggestions":{"tf":1.0},"variance.html#constraints":{"tf":1.4142135623730952},"mir/regionck.html#skolemization-and-outlives-constraints":{"tf":1.7320508075688773},"traits/hrtb.html#basic-matching-and-skolemization-leaks":{"tf":1.4142135623730952},"traits/canonicalization.html#executing-the-query":{"tf":1.7320508075688773},"traits/canonicalization.html#canonicalization":{"tf":1.4142135623730952},"hir.html#hir-bodies":{"tf":1.4142135623730952},"traits/associated-types.html#integration-with-unification":{"tf":1.7320508075688773},"appendix/glossary.html#appendix-c-glossary":{"tf":1.0},"traits/resolution.html#major-concepts":{"tf":1.0},"mir/index.html#key-mir-vocabulary":{"tf":1.4142135623730952},"traits/caching.html#an-example":{"tf":1.0},"type-checking.html#type-collection":{"tf":1.0},"tests/adding.html#ignoring-tests":{"tf":2.449489742783178},"tests/adding.html#other-header-commands":{"tf":1.7320508075688773},"tests/adding.html#revisions":{"tf":1.0}},"df":27,".":{"docs":{},"df":0,"p":{"docs":{},"df":0,"i":{"docs":{"rustdoc.html#cheat-sheet":{"tf":1.4142135623730952},"conventions.html#formatting-and-the-tidy-script":{"tf":1.4142135623730952},"how-to-build-and-run.html#other-xpy-commands":{"tf":2.8284271247461905},"tests/running.html#running-tests":{"tf":1.4142135623730952},"tests/adding.html#editing-and-updating-the-reference-files":{"tf":1.0},"how-to-build-and-run.html#how-to-build-the-compiler-and-run-what-you-built":{"tf":1.0},"tests/intro.html#the-compiler-testing-framework":{"tf":1.0},"how-to-build-and-run.html#running-xpy-and-building-a-stage1-compiler":{"tf":2.449489742783178},"tests/running.html#running-an-individual-test":{"tf":1.4142135623730952},"tests/intro.html#testing-infrastructure":{"tf":1.0},"tests/intro.html#other-tests":{"tf":2.8284271247461905},"tests/running.html#running-a-subset-of-the-test-suites":{"tf":1.4142135623730952},"compiler-debugging.html#getting-logging-output":{"tf":1.0}},"df":13}},"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"v":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"t":{"docs":{"traits/resolution.html#candidate-assembly":{"tf":1.0},"traits/resolution.html#confirmation":{"tf":1.0}},"df":2}}}}}}},"f":{"docs":{"high-level-overview.html#the-main-stages-of-compilation":{"tf":1.0},"appendix/glossary.html#appendix-c-glossary":{"tf":1.0}},"df":2},"d":{"docs":{},"df":0,"o":{"docs":{},"df":0,"_":{"docs":{},"df":0,"b":{"docs":{"traits/resolution.html#candidate-assembly":{"tf":1.0}},"df":1},"a":{"docs":{},"df":0,"1":{"docs":{"traits/resolution.html#candidate-assembly":{"tf":1.0}},"df":1}}}}}},":":{"docs":{},"df":0,"a":{"docs":{},"df":0,"1":{"docs":{"traits/resolution.html#candidate-assembly":{"tf":1.4142135623730952}},"df":1},"2":{"docs":{"traits/resolution.html#candidate-assembly":{"tf":1.0}},"df":1}}},"x":{"docs":{},"df":0,"x":{"docs":{"high-level-overview.html#crate-structure":{"tf":1.0}},"df":1}},"<":{"docs":{},"df":0,"a":{"docs":{},"df":0,">":{"docs":{},"df":0,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"b":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{"variance.html#addendum-variance-on-traits":{"tf":1.0}},"df":1}}}}}}}},"p":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{},"df":0,"h":{"docs":{"rustdoc.html#dotting-is-and-crossing-ts":{"tf":1.0}},"df":1}}}},"8":{"docs":{},"df":0,"6":{"docs":{"tests/intro.html#testing-infrastructure":{"tf":1.0},"tests/adding.html#ignoring-tests":{"tf":1.0}},"df":2,"_":{"docs":{},"df":0,"6":{"docs":{},"df":0,"4":{"docs":{"how-to-build-and-run.html#creating-a-rustup-toolchain":{"tf":1.0},"tests/adding.html#ignoring-tests":{"tf":1.0},"compiler-debugging.html#getting-a-backtrace-for-errors":{"tf":1.0}},"df":3}}}}}},"m":{"docs":{"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.7320508075688773},"type-inference.html#inference-variables":{"tf":1.4142135623730952}},"df":2,"u":{"docs":{},"df":0,"c":{"docs":{},"df":0,"h":{"docs":{"traits/resolution.html#selection-during-translation":{"tf":1.0},"high-level-overview.html#crate-structure":{"tf":1.4142135623730952},"appendix/stupid-stats.html#compilercalls":{"tf":1.0},"traits/canonical-queries.html#examples":{"tf":1.0},"mir/regionck.html#mir-based-region-checking-nll":{"tf":1.4142135623730952},"macro-expansion.html#example":{"tf":1.4142135623730952},"mir/index.html#introduction-to-mir":{"tf":1.0},"tests/running.html#running-an-individual-test":{"tf":1.0},"rustdoc.html#other-tricks-up-its-sleeve":{"tf":1.0},"traits/chalk-overview.html#an-overview-of-chalk":{"tf":1.0},"type-inference.html#inference-variables":{"tf":1.0},"macro-expansion.html#the-macro-parser":{"tf":1.0},"tests/adding.html#naming-your-test":{"tf":1.0},"miri.html#miri":{"tf":1.0},"tests/intro.html#testing-on-emulators":{"tf":1.0}},"df":15}},"d":{"docs":{},"df":0,"d":{"docs":{},"df":0,"l":{"docs":{"variance.html#dependency-graph-management":{"tf":1.0}},"df":1}}},"l":{"docs":{},"df":0,"t":{"docs":{},"df":0,"i":{"docs":{},"df":0,"r":{"docs":{},"df":0,"u":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.0}},"df":1}}}},"p":{"docs":{},"df":0,"l":{"docs":{"diag.html#suggestions":{"tf":1.4142135623730952},"mir/passes.html#seeing-how-the-mir-changes-as-the-compiler-executes":{"tf":1.0},"mir/index.html#key-mir-vocabulary":{"tf":1.0},"traits/resolution.html#candidate-assembly":{"tf":1.0},"appendix/background.html#what-is-a-control-flow-graph":{"tf":1.0},"name-resolution.html#overall-strategy":{"tf":1.0},"ty.html#allocating-and-working-with-types":{"tf":1.0},"traits/specialization.html#specialization":{"tf":1.0},"type-inference.html#snapshots":{"tf":1.0},"tests/adding.html#revisions":{"tf":1.0},"mir/passes.html#mir-passes":{"tf":1.0},"compiler-debugging.html#debugging-llvm":{"tf":1.7320508075688773}},"df":12}}}}},"t":{"docs":{"query.html#how-the-compiler-executes-a-query":{"tf":1.7320508075688773},"miri.html#miri":{"tf":1.4142135623730952},"diag.html#suggestions":{"tf":1.0},"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.7320508075688773},"method-lookup.html#candidate-search":{"tf":1.0},"variance.html#trait-variance-and-vtable-resolution":{"tf":1.0},"type-inference.html#type-inference":{"tf":1.0},"compiler-debugging.html#expensive-operations-in-logs":{"tf":1.0},"traits/resolution.html#major-concepts":{"tf":1.0},"mir/visitor.html#mir-visitor":{"tf":1.0},"traits/canonical-queries.html#examples":{"tf":2.0},"diag.html#declaring-a-lint":{"tf":1.0},"mir/index.html#key-mir-vocabulary":{"tf":3.605551275463989},"diag.html#error-messages":{"tf":1.0},"method-lookup.html#candidate-assembly":{"tf":1.4142135623730952},"mir/passes.html#implementing-and-registering-a-pass":{"tf":1.0},"rustdoc.html#from-clean-to-crate":{"tf":1.0}},"df":17,"a":{"docs":{},"df":0,"t":{"docs":{"the-parser.html#the-parser":{"tf":1.0},"mir/borrowck.html#mir-borrow-check":{"tf":1.0},"query.html#how-the-compiler-executes-a-query":{"tf":1.0}},"df":3},"b":{"docs":{},"df":0,"l":{"docs":{"mir/borrowck.html#mir-borrow-check":{"tf":1.0},"query.html#adding-a-new-kind-of-query":{"tf":1.0},"mir/index.html#key-mir-vocabulary":{"tf":1.0},"mir/visitor.html#mir-visitor":{"tf":1.0}},"df":4}}},"v":{"docs":{},"df":0,"i":{"docs":{},"df":0,"s":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{"mir/visitor.html#mir-visitor":{"tf":1.4142135623730952}},"df":1,"<":{"docs":{},"df":0,"'":{"docs":{},"df":0,"t":{"docs":{},"df":0,"c":{"docs":{},"df":0,"x":{"docs":{"mir/visitor.html#mir-visitor":{"tf":1.0}},"df":1}}}}}}}}}}}}},"s":{"docs":{},"df":0,"l":{"docs":{"tests/adding.html#ignoring-tests":{"tf":1.0}},"df":1}}},"v":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{"macro-expansion.html#example":{"tf":2.0},"macro-expansion.html#the-macro-parser":{"tf":1.7320508075688773}},"df":2,":":{"docs":{},"df":0,"i":{"docs":{},"df":0,"d":{"docs":{"macro-expansion.html#example":{"tf":1.4142135623730952},"macro-expansion.html#the-macro-parser":{"tf":2.449489742783178}},"df":2}}}}}},"o":{"docs":{},"df":0,"v":{"docs":{},"df":0,"e":{"docs":{"traits/lowering-to-logic.html#type-checking-normal-functions":{"tf":1.0},"mir/regionck.html#mir-based-region-checking-nll":{"tf":1.0},"conventions.html#formatting-and-the-tidy-script":{"tf":1.0},"mir/index.html#key-mir-vocabulary":{"tf":1.4142135623730952},"traits/implied-bounds.html#implied-bounds":{"tf":1.0},"appendix/stupid-stats.html#compilercontroller":{"tf":1.0},"rustdoc.html#hot-potato":{"tf":1.0},"mir/borrowck.html#mir-borrow-check":{"tf":1.4142135623730952},"traits/associated-types.html#equality-and-associated-types":{"tf":1.0},"mir/borrowck.html#major-phases-of-the-borrow-checker":{"tf":1.7320508075688773}},"df":10}},"d":{"docs":{"hir.html#out-of-band-storage-and-the--crate--type":{"tf":1.7320508075688773}},"df":1,"i":{"docs":{},"df":0,"f":{"docs":{"tests/intro.html#compiletest-test-suites":{"tf":1.0}},"df":1,"i":{"docs":{"appendix/stupid-stats.html#compilercontroller":{"tf":1.0},"compiletest.html#adding-a-new-header-command":{"tf":1.0},"conventions.html#copyright-notice":{"tf":1.0},"mir/borrowck.html#major-phases-of-the-borrow-checker":{"tf":1.7320508075688773},"appendix/stupid-stats.html#compilercalls":{"tf":1.0},"mir/passes.html#implementing-and-registering-a-pass":{"tf":1.0},"compiletest.html#implementing-the-behavior-change":{"tf":1.0},"miri.html#interpretation":{"tf":1.0},"query.html#adding-a-new-kind-of-query":{"tf":1.7320508075688773},"tests/running.html#running-a-subset-of-the-test-suites":{"tf":1.0},"query.html#how-the-compiler-executes-a-query":{"tf":1.0}},"df":11}}},"u":{"docs":{},"df":0,"l":{"docs":{"compiler-debugging.html#expensive-operations-in-logs":{"tf":1.7320508075688773},"hir.html#out-of-band-storage-and-the--crate--type":{"tf":2.0},"ty.html#import-conventions":{"tf":1.4142135623730952},"mir/passes.html#implementing-and-registering-a-pass":{"tf":1.0},"traits/specialization.html#specialization":{"tf":1.0},"mir/borrowck.html#major-phases-of-the-borrow-checker":{"tf":1.0},"high-level-overview.html#the-main-stages-of-compilation":{"tf":1.4142135623730952},"name-resolution.html#namespaces":{"tf":1.0},"mir/visitor.html#mir-visitor":{"tf":1.0},"ty.html#the--ty--module-representing-types":{"tf":1.7320508075688773},"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.0},"mir/regionck.html#mir-based-region-checking-nll":{"tf":1.0},"type-inference.html#creating-an-inference-context":{"tf":1.0},"ty.html#beyond-types-other-kinds-of-arena-allocated-data-structures":{"tf":1.4142135623730952},"appendix/stupid-stats.html#compilercalls":{"tf":1.0},"name-resolution.html#scopes-and-ribs":{"tf":1.0},"rustdoc.html#hot-potato":{"tf":1.0},"traits/chalk-overview.html#rules":{"tf":1.4142135623730952},"rustdoc.html#from-crate-to-clean":{"tf":1.7320508075688773},"type-checking.html#type-collection":{"tf":1.0},"mir/regionck.html#representing-the-values-of-a-region-variable":{"tf":1.0},"method-lookup.html#candidate-assembly":{"tf":1.4142135623730952},"mir/visitor.html#traversal":{"tf":1.0},"hir.html#the-hir-map":{"tf":1.0},"mir/index.html#introduction-to-mir":{"tf":1.0},"ty.html#allocating-and-working-with-types":{"tf":1.0},"query.html#queries-demand-driven-compilation":{"tf":1.4142135623730952},"compiler-debugging.html#getting-logging-output":{"tf":1.0},"diag.html#lints":{"tf":1.0},"traits/lowering-module.html#the-lowering-module-in-rustc":{"tf":1.7320508075688773},"mir/index.html#mir-data-types":{"tf":1.0},"type-inference.html#region-constraints":{"tf":1.0},"rustc-driver.html#a-note-on-lifetimes":{"tf":1.0},"appendix/code-index.html#appendix-d-code-index":{"tf":1.4142135623730952},"name-resolution.html#name-resolution":{"tf":1.0},"query.html#adding-a-new-kind-of-query":{"tf":1.0},"the-parser.html#the-parser":{"tf":2.0}},"df":37,"o":{"docs":{"type-inference.html#trying-equality":{"tf":1.0}},"df":1},"e":{"docs":{},"df":0,"'":{"docs":{"rustdoc.html#from-clean-to-crate":{"tf":1.0}},"df":1}}}},"e":{"docs":{"rustdoc.html#other-tricks-up-its-sleeve":{"tf":1.4142135623730952},"tests/intro.html#compiletest-test-suites":{"tf":1.0},"mir/index.html#key-mir-vocabulary":{"tf":1.0},"traits/specialization.html#specialization":{"tf":1.0},"mir/borrowck.html#major-phases-of-the-borrow-checker":{"tf":1.4142135623730952}},"df":5,"l":{"docs":{"high-level-overview.html#crate-structure":{"tf":1.0},"traits/lowering-rules.html#lowering-function-and-constant-declarations":{"tf":1.0},"high-level-overview.html#the-main-stages-of-compilation":{"tf":1.4142135623730952},"traits/lowering-rules.html#trait-header":{"tf":1.0},"traits/lowering-rules.html#transforming-the-lowered-where-clauses":{"tf":1.0},"traits/lowering-rules.html#function-and-constant-values":{"tf":1.0}},"df":6}}},"n":{"docs":{},"df":0,"o":{"docs":{},"df":0,"m":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"p":{"docs":{},"df":0,"h":{"docs":{"traits/associated-types.html#associated-type-projection-and-normalization":{"tf":1.4142135623730952}},"df":1}}}}}}},"r":{"docs":{},"df":0,"e":{"docs":{"mir/borrowck.html#mir-borrow-check":{"tf":1.0},"mir/borrowck.html#major-phases-of-the-borrow-checker":{"tf":1.4142135623730952},"compiletest.html#introduction":{"tf":1.4142135623730952},"mir/passes.html#seeing-how-the-mir-changes-as-the-compiler-executes":{"tf":1.0},"traits/chalk-overview.html#lowering":{"tf":1.0},"appendix/background.html#what-is-co--and-contra-variance":{"tf":1.0},"traits/lowering-to-logic.html#type-checking-normal-functions":{"tf":1.0},"how-to-build-and-run.html#other-xpy-commands":{"tf":1.0},"macro-expansion.html#the-macro-parser":{"tf":1.7320508075688773},"rustc-driver.html#the-rustc-driver":{"tf":1.0},"method-lookup.html#method-lookup":{"tf":1.7320508075688773},"compiletest.html#adding-a-new-header-command":{"tf":1.0},"tests/intro.html#other-tests":{"tf":1.0},"traits/lowering-rules.html#associated-type-declarations":{"tf":1.0},"traits/index.html#trait-solving-new-style":{"tf":1.4142135623730952},"type-checking.html#type-collection":{"tf":1.0},"traits/chalk-overview.html#an-overview-of-chalk":{"tf":1.0},"mir/regionck.html#mir-based-region-checking-nll":{"tf":1.0},"tests/intro.html#compiletest-test-suites":{"tf":1.0},"param_env.html#parameter-environment":{"tf":1.4142135623730952},"macro-expansion.html#example":{"tf":1.4142135623730952},"type-inference.html#enforcing-equality--subtyping":{"tf":1.4142135623730952},"high-level-overview.html#the-main-stages-of-compilation":{"tf":1.4142135623730952},"high-level-overview.html#crate-structure":{"tf":2.23606797749979},"traits/associated-types.html#associated-type-projection-and-normalization":{"tf":1.0},"rustdoc.html#the-walking-tour-of-rustdoc":{"tf":1.7320508075688773},"rustdoc.html#dotting-is-and-crossing-ts":{"tf":1.0},"traits/canonicalization.html#canonicalization":{"tf":1.0},"traits/bibliography.html#bibliography":{"tf":1.0},"traits/resolution.html#candidate-assembly":{"tf":1.0},"mir/passes.html#stealing":{"tf":1.0},"appendix/stupid-stats.html#compilercalls":{"tf":1.4142135623730952},"traits/canonicalization.html#executing-the-query":{"tf":1.0},"diag.html#suggestions":{"tf":1.4142135623730952},"appendix/glossary.html#appendix-c-glossary":{"tf":5.477225575051661},"query.html#adding-a-new-kind-of-query":{"tf":1.0},"how-to-build-and-run.html#running-xpy-and-building-a-stage1-compiler":{"tf":1.0},"miri.html#miri":{"tf":1.0},"how-to-build-and-run.html#create-a-configtoml":{"tf":1.7320508075688773},"traits/lowering-rules.html#lowering-function-and-constant-declarations":{"tf":1.0},"ty.html#allocating-and-working-with-types":{"tf":1.0},"mir/index.html#key-mir-vocabulary":{"tf":1.0},"traits/canonical-queries.html#a-trait-query-in-rustc":{"tf":1.4142135623730952},"compiletest.html#header-commands":{"tf":1.0},"query.html#cycles-between-queries":{"tf":1.4142135623730952},"traits/lowering-to-logic.html#lowering-to-logic":{"tf":1.0},"traits/hrtb.html#higher-ranked-trait-bounds":{"tf":1.0},"traits/canonical-queries.html#canonical-queries":{"tf":1.4142135623730952},"appendix/code-index.html#appendix-d-code-index":{"tf":1.4142135623730952},"variance.html#variance-and-associated-types":{"tf":1.0},"query.html#how-the-compiler-executes-a-query":{"tf":1.0},"appendix/background.html#what-is-a-control-flow-graph":{"tf":1.0},"traits/lowering-to-logic.html#rust-traits-and-logic":{"tf":1.0},"tests/adding.html#comment-explaining-what-the-test-is-about":{"tf":1.0},"appendix/stupid-stats.html#compilercontroller":{"tf":1.0},"rustc-driver.html#a-note-on-lifetimes":{"tf":1.0},"mir/passes.html#mir-passes":{"tf":1.0},"type-inference.html#creating-an-inference-context":{"tf":1.4142135623730952},"tests/adding.html#adding-new-tests":{"tf":1.0},"conventions.html#how-to-structure-your-pr":{"tf":1.0},"hir.html#the-hir":{"tf":1.0},"traits/lowering-rules.html#lowering-impls":{"tf":1.0},"diag.html#error-messages":{"tf":1.0},"tests/adding.html#naming-your-test":{"tf":1.0},"name-resolution.html#overall-strategy":{"tf":1.0},"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.7320508075688773},"type-inference.html#subtyping-obligations":{"tf":1.4142135623730952},"mir/regionck.html#what-is-a-universe":{"tf":1.0},"variance.html#variance-of-type-and-lifetime-parameters":{"tf":1.0},"conventions.html#formatting-and-the-tidy-script":{"tf":1.0}},"df":70,"o":{"docs":{},"df":0,"v":{"docs":{"variance.html#variance-and-associated-types":{"tf":1.0},"tests/adding.html#naming-your-test":{"tf":1.0},"query.html#queries-demand-driven-compilation":{"tf":1.0},"mir/regionck.html#skolemization-and-outlives-constraints":{"tf":1.0},"mir/index.html#key-mir-vocabulary":{"tf":1.0},"variance.html#addendum-variance-on-traits":{"tf":1.0}},"df":6}}}},"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{"traits/index.html#trait-solving-new-style":{"tf":1.0},"traits/lowering-rules.html#trait-header":{"tf":1.0},"traits/wf.html#well-formedness-checking":{"tf":1.0},"ty.html#allocating-and-working-with-types":{"tf":1.0},"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":2.0}},"df":5}}}},"m":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{"traits/resolution.html#candidate-assembly":{"tf":1.0},"conventions.html#formatting-and-the-tidy-script":{"tf":1.0},"conventions.html#copyright-notice":{"tf":1.0},"traits/caching.html#where-clauses-and-the-local-vs-global-cache":{"tf":1.0},"miri.html#interpretation":{"tf":1.0}},"df":5}}}}},"i":{"docs":{},"df":0,"l":{"docs":{},"df":0,"n":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"type-inference.html#type-inference":{"tf":1.0}},"df":1}}},"l":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"traits/bibliography.html#bibliography":{"tf":1.0}},"df":1}}},"d":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{"traits/canonicalization.html#processing-the-canonicalized-query-result":{"tf":1.0}},"df":1}}}},"p":{"docs":{"tests/adding.html#ignoring-tests":{"tf":1.0}},"df":1},"r":{"docs":{"tests/adding.html#what-kind-of-test-should-i-add":{"tf":1.4142135623730952},"diag.html#span":{"tf":1.0},"mir/regionck.html#causal-tracking":{"tf":1.4142135623730952},"const-eval.html#constant-evaluation":{"tf":1.4142135623730952},"appendix/background.html#what-is-a-control-flow-graph":{"tf":1.0},"mir/index.html#key-mir-vocabulary":{"tf":3.1622776601683797},"type-inference.html#extracting-region-constraints":{"tf":1.0},"mir/regionck.html#representing-the-values-of-a-region-variable":{"tf":1.7320508075688773},"mir/borrowck.html#mir-borrow-check":{"tf":2.8284271247461905},"mir/regionck.html#final-example":{"tf":1.4142135623730952},"mir/regionck.html#region-variables-and-constraints":{"tf":1.4142135623730952},"query.html#adding-a-new-kind-of-query":{"tf":1.0},"mir/index.html#introduction-to-mir":{"tf":2.23606797749979},"mir/index.html#mir-data-types":{"tf":2.6457513110645909},"mir/visitor.html#traversal":{"tf":1.4142135623730952},"mir/passes.html#seeing-how-the-mir-changes-as-the-compiler-executes":{"tf":2.8284271247461905},"mir/regionck.html#the-mir-type-check":{"tf":2.0},"mir/regionck.html#universes-and-skolemized-region-elements":{"tf":1.4142135623730952},"mir/regionck.html#skolemization-and-outlives-constraints":{"tf":1.4142135623730952},"appendix/glossary.html#appendix-c-glossary":{"tf":2.23606797749979},"mir/index.html#the-mir-mid-level-ir":{"tf":2.449489742783178},"mir/regionck.html#mir-based-region-checking-nll":{"tf":3.0},"mir/visitor.html#mir-visitor":{"tf":2.8284271247461905},"mir/passes.html#implementing-and-registering-a-pass":{"tf":3.1622776601683797},"mir/regionck.html#closures":{"tf":1.4142135623730952},"mir/regionck.html#subtyping-and-skolemization":{"tf":1.4142135623730952},"tests/intro.html#compiletest-test-suites":{"tf":1.4142135623730952},"mir/regionck.html#skolemization-and-universes":{"tf":1.4142135623730952},"mir/optimizations.html#mir-optimizations":{"tf":1.7320508075688773},"mir/construction.html#mir-construction":{"tf":1.7320508075688773},"high-level-overview.html#the-main-stages-of-compilation":{"tf":1.7320508075688773},"query.html#queries-demand-driven-compilation":{"tf":1.0},"mir/regionck.html#what-is-a-universe":{"tf":1.4142135623730952},"mir/regionck.html#extending-the-universal-regions-check":{"tf":1.4142135623730952},"mir/regionck.html#universal-regions":{"tf":1.4142135623730952},"mir/regionck.html#another-example":{"tf":1.4142135623730952},"mir/regionck.html#back-to-our-example":{"tf":1.4142135623730952},"miri.html#miri":{"tf":2.0},"mir/passes.html#stealing":{"tf":2.23606797749979},"mir/passes.html#mir-passes":{"tf":3.4641016151377546},"mir/borrowck.html#major-phases-of-the-borrow-checker":{"tf":2.23606797749979}},"df":41,"=":{"docs":{},"df":0,"'":{"docs":{},"df":0,"m":{"docs":{},"df":0,"a":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{"mir/passes.html#seeing-how-the-mir-changes-as-the-compiler-executes":{"tf":1.4142135623730952}},"df":1}}}}},"f":{"docs":{"mir/passes.html#seeing-how-the-mir-changes-as-the-compiler-executes":{"tf":1.0}},"df":1,"o":{"docs":{},"df":0,"o":{"docs":{"mir/passes.html#seeing-how-the-mir-changes-as-the-compiler-executes":{"tf":1.0}},"df":1}}},"m":{"docs":{},"df":0,"a":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{"mir/passes.html#seeing-how-the-mir-changes-as-the-compiler-executes":{"tf":1.0}},"df":1}}}}},"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{"the-parser.html#the-parser":{"tf":1.0}},"df":1}}},"i":{"docs":{"miri.html#interpretation":{"tf":1.4142135623730952},"const-eval.html#constant-evaluation":{"tf":1.4142135623730952},"miri.html#miri":{"tf":2.0},"appendix/glossary.html#appendix-c-glossary":{"tf":1.0},"miri.html#allocations":{"tf":1.0},"tests/intro.html#other-tests":{"tf":1.0}},"df":6,"'":{"docs":{"miri.html#datastructures":{"tf":1.0}},"df":1}},"_":{"docs":{},"df":0,"d":{"docs":{},"df":0,"u":{"docs":{},"df":0,"m":{"docs":{},"df":0,"p":{"docs":{"mir/passes.html#seeing-how-the-mir-changes-as-the-compiler-executes":{"tf":2.0}},"df":1}}}},"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{"mir/passes.html#stealing":{"tf":1.4142135623730952}},"df":1,"_":{"docs":{},"df":0,"q":{"docs":{},"df":0,"u":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{},"df":0,"f":{"docs":{"mir/passes.html#stealing":{"tf":1.0}},"df":1,"(":{"docs":{},"df":0,"d":{"docs":{"mir/passes.html#stealing":{"tf":1.4142135623730952}},"df":1}}}}}}}}},"(":{"docs":{},"df":0,"d":{"docs":{"mir/passes.html#mir-passes":{"tf":1.0},"mir/passes.html#stealing":{"tf":1.4142135623730952}},"df":2}}}}}}},"v":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{},"df":0,"d":{"docs":{"mir/passes.html#implementing-and-registering-a-pass":{"tf":1.0},"mir/passes.html#stealing":{"tf":1.4142135623730952}},"df":2,"a":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"d":{"docs":{},"df":0,"(":{"docs":{},"df":0,"d":{"docs":{"mir/passes.html#mir-passes":{"tf":1.0},"mir/passes.html#stealing":{"tf":2.0}},"df":2}}}}}}}}}}},"b":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"w":{"docs":{},"df":0,"c":{"docs":{},"df":0,"k":{"docs":{"mir/borrowck.html#major-phases-of-the-borrow-checker":{"tf":1.0}},"df":1}}}}}}},"u":{"docs":{},"df":0,"i":{"docs":{},"df":0,"l":{"docs":{},"df":0,"d":{"docs":{},"df":0,"(":{"docs":{},"df":0,"d":{"docs":{"mir/passes.html#mir-passes":{"tf":1.0}},"df":1}}}}}}}},"p":{"docs":{},"df":0,"a":{"docs":{},"df":0,"s":{"docs":{},"df":0,"s":{"docs":{"mir/passes.html#implementing-and-registering-a-pass":{"tf":1.7320508075688773}},"df":1}}}}},"d":{"docs":{"mir/optimizations.html#mir-optimizations":{"tf":1.0},"mir/regionck.html#final-example":{"tf":1.0},"mir/regionck.html#extending-the-universal-regions-check":{"tf":1.0},"mir/regionck.html#back-to-our-example":{"tf":1.0},"mir/passes.html#seeing-how-the-mir-changes-as-the-compiler-executes":{"tf":1.0},"mir/passes.html#stealing":{"tf":1.0},"mir/regionck.html#mir-based-region-checking-nll":{"tf":1.0},"mir/visitor.html#mir-visitor":{"tf":1.0},"mir/regionck.html#the-mir-type-check":{"tf":1.0},"mir/regionck.html#another-example":{"tf":1.0},"mir/regionck.html#closures":{"tf":1.0},"mir/regionck.html#causal-tracking":{"tf":1.0},"mir/regionck.html#skolemization-and-outlives-constraints":{"tf":1.0},"appendix/glossary.html#appendix-c-glossary":{"tf":1.0},"mir/regionck.html#representing-the-values-of-a-region-variable":{"tf":1.0},"mir/regionck.html#region-variables-and-constraints":{"tf":1.0},"mir/borrowck.html#mir-borrow-check":{"tf":1.0},"mir/regionck.html#what-is-a-universe":{"tf":1.0},"mir/regionck.html#universes-and-skolemized-region-elements":{"tf":1.0},"mir/construction.html#mir-construction":{"tf":1.0},"mir/passes.html#implementing-and-registering-a-pass":{"tf":1.0},"mir/index.html#the-mir-mid-level-ir":{"tf":1.7320508075688773},"mir/visitor.html#traversal":{"tf":1.0},"mir/borrowck.html#major-phases-of-the-borrow-checker":{"tf":1.0},"mir/regionck.html#subtyping-and-skolemization":{"tf":1.0},"mir/regionck.html#universal-regions":{"tf":1.0},"mir/regionck.html#skolemization-and-universes":{"tf":1.0},"mir/passes.html#mir-passes":{"tf":1.0}},"df":28,"d":{"docs":{},"df":0,"l":{"docs":{"high-level-overview.html#crate-structure":{"tf":1.0},"high-level-overview.html#the-main-stages-of-compilation":{"tf":1.0}},"df":2}}},"x":{"docs":{"compiler-debugging.html#debugging-llvm":{"tf":1.0}},"df":1},"c":{"docs":{},"df":0,"h":{"docs":{},"df":0,"a":{"docs":{},"df":0,"e":{"docs":{},"df":0,"l":{"docs":{"appendix/background.html#what-is-a-dataflow-analysis":{"tf":1.0}},"df":1}}}}},"n":{"docs":{"tests/adding.html#other-header-commands":{"tf":1.4142135623730952}},"df":1,"d":{"docs":{"appendix/stupid-stats.html#appendix-a-a-tutorial-on-creating-a-drop-in-replacement-for-rustc":{"tf":1.0},"how-to-build-and-run.html#running-xpy-and-building-a-stage1-compiler":{"tf":1.0}},"df":2},"g":{"docs":{},"df":0,"w":{"docs":{"compiler-debugging.html#getting-a-backtrace":{"tf":1.0}},"df":1}},"i":{"docs":{},"df":0,"m":{"docs":{"rustc-driver.html#a-note-on-lifetimes":{"tf":1.0},"traits/lowering-module.html#unit-tests":{"tf":1.0},"high-level-overview.html#the-main-stages-of-compilation":{"tf":1.0}},"df":3,"i":{"docs":{},"df":0,"s":{"docs":{"the-parser.html#the-parser":{"tf":1.0}},"df":1}},"u":{"docs":{},"df":0,"m":{"docs":{"variance.html#variance-and-associated-types":{"tf":1.0}},"df":1}}}}},"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"a":{"docs":{},"df":0,"k":{"docs":{"about-this-guide.html#about-this-guide":{"tf":1.0},"tests/adding.html#adding-new-tests":{"tf":1.0}},"df":2}}},"m":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{},"df":0,"c":{"docs":{},"df":0,"h":{"docs":{"tests/adding.html#revisions":{"tf":1.0}},"df":1}}}}},"c":{"docs":{},"df":0,"e":{"docs":{},"df":0,"l":{"docs":{},"df":0,"l":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{"rustc-driver.html#the-rustc-driver":{"tf":1.0}},"df":1}}}}}}},"t":{"docs":{"conventions.html#copyright-notice":{"tf":1.4142135623730952},"compiletest.html#adding-a-new-header-command":{"tf":1.4142135623730952}},"df":2}},"y":{"docs":{},"df":0,"p":{"docs":{},"df":0,"a":{"docs":{},"df":0,"s":{"docs":{},"df":0,"s":{"docs":{"mir/passes.html#implementing-and-registering-a-pass":{"tf":1.0}},"df":1}}}},"t":{"docs":{},"df":0,"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{},"df":0,"<":{"docs":{},"df":0,"&":{"docs":{},"df":0,"'":{"docs":{},"df":0,"a":{"docs":{"traits/hrtb.html#higher-ranked-trait-bounds":{"tf":1.0}},"df":1}}}}}}}},"o":{"docs":{},"df":0,"o":{"docs":{},"df":0,"l":{"docs":{"appendix/stupid-stats.html#appendix-a-a-tutorial-on-creating-a-drop-in-replacement-for-rustc":{"tf":1.0}},"df":1}}}},"v":{"docs":{},"df":0,"i":{"docs":{},"df":0,"s":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{"mir/visitor.html#mir-visitor":{"tf":1.0}},"df":1}}}}}}},"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"d":{"docs":{},"df":0,"e":{"docs":{},"df":0,".":{"docs":{},"df":0,"r":{"docs":{"diag.html#suggestions":{"tf":1.0}},"df":1,"s":{"docs":{},"df":0,":":{"docs":{},"df":0,"3":{"docs":{},"df":0,":":{"docs":{},"df":0,"5":{"docs":{"diag.html#suggestions":{"tf":1.4142135623730952}},"df":1}}}}}}}}}}},"_":{"docs":{},"df":0,"e":{"docs":{},"df":0,"x":{"docs":{},"df":0,"p":{"docs":{},"df":0,"r":{"docs":{"macro-expansion.html#macro-expansion":{"tf":1.0}},"df":1}}}}},"r":{"docs":{},"df":0,"i":{"docs":{},"df":0,"a":{"docs":{},"df":0,"d":{"docs":{"variance.html#addendum-variance-on-traits":{"tf":1.0}},"df":1}}}}},"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"g":{"docs":{"tests/intro.html#testing-infrastructure":{"tf":1.4142135623730952},"conventions.html#how-to-structure-your-pr":{"tf":2.0}},"df":2},"e":{"docs":{"traits/specialization.html#specialization":{"tf":1.0},"compiletest.html#adding-a-new-header-command":{"tf":1.0}},"df":2}},"c":{"docs":{},"df":0,"h":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{"incrcomp-debugging.html#testing-the-dependency-graph":{"tf":1.0},"type-inference.html#subtyping-obligations":{"tf":1.0},"mir/passes.html#stealing":{"tf":1.4142135623730952},"diag.html#suggestions":{"tf":2.6457513110645909},"traits/lowering-module.html#unit-tests":{"tf":1.0},"traits/lowering-module.html#the--program_clauses_for--query":{"tf":1.0},"high-level-overview.html#crate-structure":{"tf":1.0}},"df":7}}}},"n":{"docs":{},"df":0,"t":{"docs":{},"df":0,"i":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{"mir/index.html#mir-data-types":{"tf":1.0},"macro-expansion.html#the-macro-parser":{"tf":1.0},"traits/resolution.html#selection-during-translation":{"tf":1.0},"variance.html#addendum-variance-on-traits":{"tf":1.0}},"df":4,"/":{"docs":{},"df":0,"d":{"docs":{},"df":0,"i":{"docs":{},"df":0,"s":{"docs":{},"df":0,"c":{"docs":{},"df":0,"u":{"docs":{},"df":0,"s":{"docs":{},"df":0,"s":{"docs":{"traits/specialization.html#specialization":{"tf":1.0}},"df":1}}}}}}}}}}}}},"a":{"docs":{},"df":0,"t":{"docs":{"name-resolution.html#name-resolution":{"tf":1.0}},"df":1},"n":{"docs":{"tests/intro.html#compiletest-test-suites":{"tf":1.0},"traits/canonicalization.html#processing-the-canonicalized-query-result":{"tf":1.0},"const-eval.html#constant-evaluation":{"tf":1.4142135623730952},"param_env.html#parameter-environment":{"tf":1.0},"variance.html#variance-and-associated-types":{"tf":2.0},"traits/canonical-queries.html#a-trait-query-in-rustc":{"tf":1.7320508075688773},"conventions.html#prefer-exhaustive-matches":{"tf":1.0},"tests/adding.html#ignoring-tests":{"tf":1.0},"traits/lowering-to-logic.html#rust-traits-and-logic":{"tf":1.0},"appendix/stupid-stats.html#appendix-a-a-tutorial-on-creating-a-drop-in-replacement-for-rustc":{"tf":1.0},"type-inference.html#creating-an-inference-context":{"tf":1.0},"name-resolution.html#namespaces":{"tf":1.0},"mir/regionck.html#subtyping-and-skolemization":{"tf":1.0},"mir/passes.html#stealing":{"tf":1.0},"mir/index.html#key-mir-vocabulary":{"tf":1.0},"incremental-compilation.html#the-basic-algorithm":{"tf":1.4142135623730952},"variance.html#trait-variance-and-vtable-resolution":{"tf":1.0},"traits/index.html#trait-solving-new-style":{"tf":1.0},"variance.html#variance-of-type-and-lifetime-parameters":{"tf":1.4142135623730952},"appendix/glossary.html#appendix-c-glossary":{"tf":1.4142135623730952},"traits/lowering-rules.html#trait-header":{"tf":1.0},"compiler-debugging.html#debugging-llvm":{"tf":1.4142135623730952},"compiler-debugging.html#expensive-operations-in-logs":{"tf":2.0},"traits/lowering-to-logic.html#type-checking-normal-functions":{"tf":1.0},"rustdoc.html#from-soup-to-nuts":{"tf":1.0},"traits/lowering-to-logic.html#type-checking-generic-functions-beyond-horn-clauses":{"tf":1.0},"traits/canonical-queries.html#examples":{"tf":1.0},"variance.html#addendum-variance-on-traits":{"tf":1.0},"traits/lowering-rules.html#notation":{"tf":1.4142135623730952},"name-resolution.html#scopes-and-ribs":{"tf":1.4142135623730952},"mir/regionck.html#what-is-a-universe":{"tf":1.0},"how-to-build-and-run.html#create-a-configtoml":{"tf":1.0},"how-to-build-and-run.html#running-xpy-and-building-a-stage1-compiler":{"tf":1.0},"traits/chalk-overview.html#lowering":{"tf":1.0},"traits/chalk-overview.html#well-formedness-checks":{"tf":1.0},"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.4142135623730952},"macro-expansion.html#example":{"tf":1.4142135623730952},"tests/adding.html#revisions":{"tf":1.0},"traits/associated-types.html#associated-type-projection-and-normalization":{"tf":1.0},"traits/goals-and-clauses.html#coinductive-goals":{"tf":1.0},"query.html#cycles-between-queries":{"tf":1.4142135623730952},"traits/hrtb.html#basic-matching-and-skolemization-leaks":{"tf":1.0},"traits/resolution.html#candidate-assembly":{"tf":1.4142135623730952},"ty.html#the-tcx-and-how-it-uses-lifetimes":{"tf":1.0},"variance.html#variance-and-object-types":{"tf":1.4142135623730952}},"df":45,"t":{"docs":{"rustdoc.html#cheat-sheet":{"tf":1.0},"about-this-guide.html#about-this-guide":{"tf":1.4142135623730952},"tests/adding.html#comment-explaining-what-the-test-is-about":{"tf":1.4142135623730952}},"df":3},"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"g":{"docs":{"conventions.html#copyright-notice":{"tf":1.0},"tests/adding.html#naming-your-test":{"tf":1.0}},"df":2}}},"w":{"docs":{},"df":0,"h":{"docs":{},"df":0,"i":{"docs":{},"df":0,"l":{"docs":{"traits/resolution.html#candidate-assembly":{"tf":1.0}},"df":1}}}}}},"m":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{"mir/index.html#key-mir-vocabulary":{"tf":1.7320508075688773},"miri.html#miri":{"tf":1.7320508075688773},"miri.html#allocations":{"tf":1.4142135623730952},"const-eval.html#constant-evaluation":{"tf":1.0},"miri.html#interpretation":{"tf":2.0},"ty.html#the-tcx-and-how-it-uses-lifetimes":{"tf":1.7320508075688773},"rustc-driver.html#the-rustc-driver":{"tf":1.0},"the-parser.html#the-parser":{"tf":1.0},"traits/canonical-queries.html#the-traditional-interactive-prolog-query":{"tf":1.0},"rustc-driver.html#a-note-on-lifetimes":{"tf":1.0},"traits/canonicalization.html#canonicalizing-the-query-result":{"tf":1.0}},"df":11}},"i":{"docs":{},"df":0,"z":{"docs":{"query.html#queries-demand-driven-compilation":{"tf":1.0},"mir/passes.html#stealing":{"tf":1.0}},"df":2}}},"c":{"docs":{},"df":0,"a":{"docs":{},"df":0,"c":{"docs":{},"df":0,"h":{"docs":{"how-to-build-and-run.html#create-a-configtoml":{"tf":1.0}},"df":1}}}}},"s":{"docs":{},"df":0,"s":{"docs":{"tests/adding.html#naming-your-test":{"tf":1.0}},"df":1,"a":{"docs":{},"df":0,"g":{"docs":{"tests/adding.html#error-annotations":{"tf":1.7320508075688773},"tests/adding.html#guide-to-the-ui-tests":{"tf":1.0},"query.html#cycles-between-queries":{"tf":2.23606797749979},"macro-expansion.html#the-macro-parser":{"tf":1.0},"diag.html#emitting-diagnostics":{"tf":1.0},"miri.html#miri":{"tf":1.0},"diag.html#error-messages":{"tf":2.0},"compiler-debugging.html#getting-a-backtrace-for-errors":{"tf":1.0},"rustc-driver.html#the-rustc-driver":{"tf":1.0},"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.0},"tests/adding.html#revisions":{"tf":1.0},"name-resolution.html#name-resolution":{"tf":1.0}},"df":12}}}},"t":{"docs":{"variance.html#the-algorithm":{"tf":1.0}},"df":1,"a":{"docs":{"traits/lowering-rules.html#trait-header":{"tf":1.0},"traits/goals-and-clauses.html#goals-and-clauses-meta-structure":{"tf":1.4142135623730952},"tests/adding.html#other-header-commands":{"tf":1.0}},"df":3,"v":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{"macro-expansion.html#the-macro-parser":{"tf":2.0},"macro-expansion.html#macro-expansion":{"tf":1.0},"macro-expansion.html#example":{"tf":1.4142135623730952}},"df":3}}}},"d":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{},"df":0,"a":{"docs":{"macro-expansion.html#the-macro-parser":{"tf":1.0},"appendix/glossary.html#appendix-c-glossary":{"tf":1.7320508075688773},"mir/passes.html#mir-passes":{"tf":1.0},"miri.html#miri":{"tf":1.0},"query.html#how-the-compiler-executes-a-query":{"tf":1.0},"conventions.html#using-crates-from-cratesio":{"tf":1.0}},"df":6}}}}},"h":{"docs":{},"df":0,"o":{"docs":{},"df":0,"d":{"docs":{"method-lookup.html#candidate-assembly":{"tf":3.4641016151377546},"hir.html#the-hir-map":{"tf":1.0},"type-inference.html#trying-equality":{"tf":1.0},"appendix/stupid-stats.html#compilercalls":{"tf":1.4142135623730952},"compiletest.html#adding-a-new-header-command":{"tf":1.0},"type-inference.html#snapshots":{"tf":1.4142135623730952},"appendix/glossary.html#appendix-c-glossary":{"tf":1.0},"miri.html#interpretation":{"tf":1.0},"query.html#how-the-compiler-executes-a-query":{"tf":1.0},"mir/visitor.html#mir-visitor":{"tf":1.4142135623730952},"ty.html#allocating-and-working-with-types":{"tf":1.7320508075688773},"diag.html#error-messages":{"tf":2.23606797749979},"diag.html#suggestions":{"tf":1.0},"traits/resolution.html#candidate-assembly":{"tf":1.4142135623730952},"type-inference.html#enforcing-equality--subtyping":{"tf":1.4142135623730952},"traits/resolution.html#selection-during-translation":{"tf":1.0},"query.html#adding-a-new-kind-of-query":{"tf":1.4142135623730952},"variance.html#addendum-variance-on-traits":{"tf":1.0},"rustc-driver.html#the-rustc-driver":{"tf":1.0},"traits/canonicalization.html#canonicalizing-the-query":{"tf":1.0},"method-lookup.html#method-lookup":{"tf":2.8284271247461905},"high-level-overview.html#the-main-stages-of-compilation":{"tf":1.0},"diag.html#span":{"tf":1.0},"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.7320508075688773},"miri.html#datastructures":{"tf":1.0},"diag.html#declaring-a-lint":{"tf":1.7320508075688773},"traits/caching.html#where-clauses-and-the-local-vs-global-cache":{"tf":1.0},"query.html#invoking-queries":{"tf":1.0},"conventions.html#how-to-structure-your-pr":{"tf":1.0},"how-to-build-and-run.html#running-xpy-and-building-a-stage1-compiler":{"tf":1.0},"rustdoc.html#from-crate-to-clean":{"tf":1.0},"type-inference.html#creating-an-inference-context":{"tf":1.0},"variance.html#variance-and-object-types":{"tf":1.7320508075688773},"mir/passes.html#implementing-and-registering-a-pass":{"tf":1.0},"query.html#cycles-between-queries":{"tf":1.4142135623730952},"method-lookup.html#candidate-search":{"tf":1.4142135623730952},"appendix/stupid-stats.html#overview-of-the-compilation-process":{"tf":1.0}},"df":37}}}}},"k":{"docs":{},"df":0,"_":{"docs":{"ty.html#allocating-and-working-with-types":{"tf":1.0}},"df":1,"s":{"docs":{},"df":0,"u":{"docs":{},"df":0,"b":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{"ty.html#beyond-types-other-kinds-of-arena-allocated-data-structures":{"tf":1.0}},"df":1}}}}}}},"s":{"docs":{"macro-expansion.html#the-macro-parser":{"tf":2.449489742783178}},"df":1,"g":{"docs":{"diag.html#declaring-a-lint":{"tf":1.4142135623730952}},"df":1},"v":{"docs":{},"df":0,"c":{"docs":{"tests/adding.html#ignoring-tests":{"tf":1.0},"compiler-debugging.html#getting-a-backtrace":{"tf":1.0}},"df":2}}},"ø":{"docs":{},"df":0,"l":{"docs":{},"df":0,"l":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"appendix/background.html#what-is-a-dataflow-analysis":{"tf":1.0}},"df":1}}}}},"a":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{"traits/lowering-module.html#the--program_clauses_for--query":{"tf":1.0},"rustdoc.html#from-crate-to-clean":{"tf":1.0},"miri.html#interpretation":{"tf":1.0},"rustdoc.html#the-walking-tour-of-rustdoc":{"tf":1.0},"traits/lowering-module.html#unit-tests":{"tf":1.0},"type-inference.html#inference-variables":{"tf":1.0},"compiletest.html#adding-a-new-header-command":{"tf":1.4142135623730952},"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.4142135623730952},"compiletest.html#introduction":{"tf":1.0},"high-level-overview.html#the-main-stages-of-compilation":{"tf":1.4142135623730952},"the-parser.html#the-parser":{"tf":1.7320508075688773},"mir/regionck.html#subtyping-and-skolemization":{"tf":1.0},"tests/adding.html#header-commands-configuring-rustc":{"tf":1.0},"appendix/glossary.html#appendix-c-glossary":{"tf":1.0},"rustc-driver.html#the-rustc-driver":{"tf":2.0},"mir/index.html#key-mir-vocabulary":{"tf":1.7320508075688773},"traits/canonical-queries.html#examples":{"tf":1.4142135623730952},"traits/chalk-overview.html#intermediate-representation-ir":{"tf":1.0},"mir/borrowck.html#mir-borrow-check":{"tf":1.0},"high-level-overview.html#crate-structure":{"tf":1.4142135623730952},"mir/passes.html#seeing-how-the-mir-changes-as-the-compiler-executes":{"tf":3.1622776601683797},"compiler-debugging.html#getting-a-backtrace-for-errors":{"tf":1.0},"tests/intro.html#the-compiler-testing-framework":{"tf":1.0},"mir/index.html#mir-data-types":{"tf":1.0},"mir/regionck.html#skolemization-and-universes":{"tf":1.0},"type-inference.html#type-inference":{"tf":1.0},"traits/resolution.html#selection":{"tf":1.0},"mir/borrowck.html#major-phases-of-the-borrow-checker":{"tf":1.0},"hir.html#the-hir":{"tf":1.0}},"df":29,"t":{"docs":{},"df":0,"a":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{"hir.html#identifiers-in-the-hir":{"tf":1.0},"mir/regionck.html#representing-the-values-of-a-region-variable":{"tf":1.4142135623730952},"appendix/stupid-stats.html#overview-of-the-compilation-process":{"tf":1.0},"appendix/stupid-stats.html#appendix-a-a-tutorial-on-creating-a-drop-in-replacement-for-rustc":{"tf":1.4142135623730952},"query.html#how-the-compiler-executes-a-query":{"tf":1.4142135623730952}},"df":5}}}},"l":{"docs":{},"df":0,"i":{"docs":{"miri.html#datastructures":{"tf":1.0},"tests/adding.html#normalization":{"tf":1.0},"rustdoc.html#from-crate-to-clean":{"tf":1.0}},"df":3}},".":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"d":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"r":{"docs":{"tests/adding.html#normalization":{"tf":1.0}},"df":1}}}}}}},"_":{"docs":{},"df":0,"q":{"docs":{},"df":0,"u":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"y":{"docs":{},"df":0,"(":{"docs":{},"df":0,"t":{"docs":{},"df":0,"c":{"docs":{},"df":0,"x":{"docs":{"incremental-compilation.html#the-query-dag":{"tf":1.0}},"df":1}}}}},"i":{"docs":{"incremental-compilation.html#the-query-dag":{"tf":1.4142135623730952}},"df":1}}}}}}}},"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"tests/intro.html#testing-infrastructure":{"tf":1.0},"tests/adding.html#adding-new-tests":{"tf":1.0}},"df":2}}}},"y":{"docs":{},"df":0,"b":{"docs":{"variance.html#trait-variance-and-vtable-resolution":{"tf":1.0}},"df":1,"e":{"docs":{},"df":0,"_":{"docs":{},"df":0,"b":{"docs":{},"df":0,"o":{"docs":{},"df":0,"d":{"docs":{},"df":0,"y":{"docs":{},"df":0,"_":{"docs":{},"df":0,"o":{"docs":{},"df":0,"w":{"docs":{},"df":0,"n":{"docs":{},"df":0,"e":{"docs":{},"df":0,"d":{"docs":{},"df":0,"_":{"docs":{},"df":0,"b":{"docs":{},"df":0,"i":{"docs":{"hir.html#hir-bodies":{"tf":1.0}},"df":1}}}}}}}}}}}}},"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{},"df":0,"_":{"docs":{},"df":0,"s":{"docs":{},"df":0,"u":{"docs":{},"df":0,"f":{"docs":{},"df":0,"f":{"docs":{},"df":0,"i":{"docs":{},"df":0,"x":{"docs":{},"df":0,".":{"docs":{},"df":0,"p":{"docs":{},"df":0,"d":{"docs":{},"df":0,"f":{"docs":{"compiler-debugging.html#formatting-graphviz-output-dot-files":{"tf":1.4142135623730952}},"df":1}}},"d":{"docs":{},"df":0,"o":{"docs":{},"df":0,"t":{"docs":{"compiler-debugging.html#formatting-graphviz-output-dot-files":{"tf":1.0}},"df":1}}}}}}}}}}}}},"_":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"f":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"c":{"docs":{},"df":0,"e":{"docs":{},"df":0,"<":{"docs":{},"df":0,"'":{"docs":{},"df":0,"a":{"docs":{"ty.html#the-tcx-and-how-it-uses-lifetimes":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}},"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{"diag.html#suggestions":{"tf":1.0}},"df":1}}}}}}}}}}}},"p":{"docs":{"appendix/glossary.html#appendix-c-glossary":{"tf":1.4142135623730952},"traits/canonicalization.html#canonicalization":{"tf":1.0},"traits/lowering-to-logic.html#rust-traits-and-logic":{"tf":2.0},"traits/hrtb.html#higher-ranked-trait-obligations":{"tf":1.0},"traits/lowering-to-logic.html#lowering-to-logic":{"tf":1.0},"appendix/code-index.html#appendix-d-code-index":{"tf":1.0},"rustc-driver.html#the-rustc-driver":{"tf":1.0},"query.html#adding-a-new-kind-of-query":{"tf":1.0},"traits/lowering-rules.html#lowering-where-clauses":{"tf":2.449489742783178},"traits/lowering-rules.html#trait-header":{"tf":1.0},"mir/regionck.html#skolemization-and-outlives-constraints":{"tf":1.0},"mir/index.html#mir-data-types":{"tf":1.0},"hir.html#hir-bodies":{"tf":1.0},"hir.html#out-of-band-storage-and-the--crate--type":{"tf":2.0},"the-parser.html#the-parser":{"tf":1.0},"hir.html#the-hir-map":{"tf":2.449489742783178},"appendix/stupid-stats.html#compilercontroller":{"tf":1.0}},"df":17},"k":{"docs":{},"df":0,"e":{"docs":{"diag.html#suggestions":{"tf":1.4142135623730952},"type-inference.html#type-inference":{"tf":1.0},"param_env.html#parameter-environment":{"tf":1.0},"traits/lowering-rules.html#trait-header":{"tf":1.0},"variance.html#variance-of-type-and-lifetime-parameters":{"tf":1.4142135623730952},"how-to-build-and-run.html#create-a-configtoml":{"tf":1.0},"miri.html#miri":{"tf":1.0},"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":2.0},"tests/intro.html#compiletest-test-suites":{"tf":2.23606797749979},"rustdoc.html#cheat-sheet":{"tf":1.0},"diag.html#edition-gated-lints":{"tf":1.0},"rustdoc.html#from-crate-to-clean":{"tf":1.0},"compiletest.html#adding-a-new-header-command":{"tf":1.0},"high-level-overview.html#the-main-stages-of-compilation":{"tf":1.4142135623730952},"mir/passes.html#seeing-how-the-mir-changes-as-the-compiler-executes":{"tf":1.0},"compiler-debugging.html#debugging-the-compiler":{"tf":1.0},"mir/passes.html#implementing-and-registering-a-pass":{"tf":1.0},"mir/passes.html#mir-passes":{"tf":1.4142135623730952},"compiler-debugging.html#getting-logging-output":{"tf":1.0},"type-inference.html#snapshots":{"tf":1.0},"rustdoc.html#dotting-is-and-crossing-ts":{"tf":1.0},"traits/lowering-to-logic.html#type-checking-generic-functions-beyond-horn-clauses":{"tf":1.0},"method-lookup.html#candidate-search":{"tf":1.0},"query.html#cycles-between-queries":{"tf":1.0},"tests/adding.html#editing-and-updating-the-reference-files":{"tf":1.0},"mir/index.html#key-mir-vocabulary":{"tf":1.0},"type-inference.html#subtyping-obligations":{"tf":1.0},"high-level-overview.html#crate-structure":{"tf":1.4142135623730952},"mir/regionck.html#representing-the-values-of-a-region-variable":{"tf":1.0},"traits/associated-types.html#projection-equality":{"tf":1.0},"appendix/stupid-stats.html#appendix-a-a-tutorial-on-creating-a-drop-in-replacement-for-rustc":{"tf":2.0},"mir/visitor.html#mir-visitor":{"tf":1.0},"diag.html#emitting-diagnostics":{"tf":1.0},"traits/chalk-overview.html#lowering":{"tf":1.0},"compiler-debugging.html#debugging-llvm":{"tf":1.4142135623730952},"conventions.html#how-to-structure-your-pr":{"tf":2.0},"variance.html#variance-and-associated-types":{"tf":1.7320508075688773},"type-inference.html#region-constraints":{"tf":1.0},"rustdoc.html#hot-potato":{"tf":1.4142135623730952},"tests/adding.html#tests-that-do-not-result-in-compile-errors":{"tf":1.0},"hir.html#the-hir":{"tf":1.0},"traits/canonicalization.html#canonicalizing-the-query-result":{"tf":1.0},"tests/adding.html#what-kind-of-test-should-i-add":{"tf":1.4142135623730952},"compiler-debugging.html#getting-a-backtrace-for-errors":{"tf":1.4142135623730952},"tests/adding.html#naming-your-test":{"tf":1.0},"appendix/glossary.html#appendix-c-glossary":{"tf":1.0}},"df":46,"_":{"docs":{},"df":0,"g":{"docs":{},"df":0,"l":{"docs":{},"df":0,"o":{"docs":{},"df":0,"b":{"docs":{},"df":0,"_":{"docs":{},"df":0,"m":{"docs":{},"df":0,"a":{"docs":{},"df":0,"p":{"docs":{"appendix/stupid-stats.html#compilercontroller":{"tf":1.0}},"df":1}}}}}}}},"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{"rustdoc.html#other-tricks-up-its-sleeve":{"tf":1.4142135623730952}},"df":1}}}}},"f":{"docs":{},"df":0,"i":{"docs":{},"df":0,"l":{"docs":{"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.0},"tests/intro.html#compiletest-test-suites":{"tf":1.0}},"df":2}}}}},"j":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{"rustdoc.html#hot-potato":{"tf":1.0},"traits/resolution.html#overview":{"tf":1.0},"rustdoc.html#the-walking-tour-of-rustdoc":{"tf":1.0},"rustdoc.html#from-clean-to-crate":{"tf":1.0},"method-lookup.html#method-lookup":{"tf":1.0},"mir/borrowck.html#major-phases-of-the-borrow-checker":{"tf":1.4142135623730952},"rustdoc.html#other-tricks-up-its-sleeve":{"tf":1.0},"rustdoc.html#from-crate-to-clean":{"tf":1.0},"traits/resolution.html#candidate-assembly":{"tf":1.0},"mir/regionck.html#mir-based-region-checking-nll":{"tf":1.0},"traits/resolution.html#major-concepts":{"tf":1.4142135623730952}},"df":11}}},"n":{"docs":{},"df":0,"i":{"docs":{"traits/canonical-queries.html#examples":{"tf":1.0},"tests/intro.html#other-tests":{"tf":1.0},"compiletest.html#introduction":{"tf":1.4142135623730952},"appendix/background.html#what-is-a-control-flow-graph":{"tf":1.0},"mir/regionck.html#universes-and-skolemized-region-elements":{"tf":1.0},"traits/lowering-to-logic.html#type-checking-generic-functions-beyond-horn-clauses":{"tf":1.0},"compiler-debugging.html#getting-logging-output":{"tf":1.0},"rustc-driver.html#a-note-on-lifetimes":{"tf":1.0},"high-level-overview.html#crate-structure":{"tf":1.4142135623730952},"incremental-compilation.html#improvements-to-the-basic-algorithm":{"tf":1.0},"traits/chalk-overview.html#an-overview-of-chalk":{"tf":1.0},"const-eval.html#constant-evaluation":{"tf":1.0},"appendix/stupid-stats.html#appendix-a-a-tutorial-on-creating-a-drop-in-replacement-for-rustc":{"tf":1.7320508075688773},"compiletest.html#adding-a-new-header-command":{"tf":1.0},"traits/index.html#trait-solving-new-style":{"tf":1.0},"hir.html#the-hir":{"tf":1.0}},"df":16,"p":{"docs":{},"df":0,"u":{"docs":{},"df":0,"l":{"docs":{"mir/index.html#introduction-to-mir":{"tf":1.0}},"df":1}}},"f":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{"rustc-driver.html#a-note-on-lifetimes":{"tf":1.0},"rustdoc.html#from-soup-to-nuts":{"tf":1.0}},"df":2}}}}},"a":{"docs":{},"df":0,"g":{"docs":{"variance.html#dependency-graph-management":{"tf":1.4142135623730952},"rustc-driver.html#the-rustc-driver":{"tf":1.0}},"df":2}},"u":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{"tests/intro.html#compiletest-test-suites":{"tf":1.0},"compiler-debugging.html#debugging-llvm":{"tf":1.0},"appendix/stupid-stats.html#appendix-a-a-tutorial-on-creating-a-drop-in-replacement-for-rustc":{"tf":1.0},"tests/intro.html#testing-on-emulators":{"tf":1.0}},"df":4}}},"d":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{"conventions.html#formatting-and-the-tidy-script":{"tf":1.0}},"df":1}}}}}},"n":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"ty.html#the-tcx-and-how-it-uses-lifetimes":{"tf":1.0},"appendix/code-index.html#appendix-d-code-index":{"tf":1.0}},"df":2}}}},"t":{"docs":{},"df":0,"s":{"docs":{},"df":0,"a":{"docs":{},"df":0,"k":{"docs":{},"df":0,"i":{"docs":{"traits/lowering-to-logic.html#source":{"tf":1.0}},"df":1}}}},"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"traits/canonicalization.html#canonicalization":{"tf":1.0},"traits/canonical-queries.html#the-traditional-interactive-prolog-query":{"tf":1.0},"miri.html#allocations":{"tf":1.0}},"df":3}}},"h":{"docs":{"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.0},"appendix/glossary.html#appendix-c-glossary":{"tf":1.0}},"df":2,"e":{"docs":{},"df":0,"m":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{"traits/lowering-to-logic.html#type-checking-generic-functions-beyond-horn-clauses":{"tf":1.0}},"df":1}}}}},"c":{"docs":{},"df":0,"h":{"docs":{"macro-expansion.html#the-macro-parser":{"tf":3.7416573867739415},"hir.html#the-hir-map":{"tf":1.0},"high-level-overview.html#the-main-stages-of-compilation":{"tf":1.4142135623730952},"compiletest.html#adding-a-new-header-command":{"tf":1.0},"ty.html#allocating-and-working-with-types":{"tf":1.7320508075688773},"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.4142135623730952},"traits/resolution.html#candidate-assembly":{"tf":2.0},"traits/hrtb.html#higher-ranked-trait-obligations":{"tf":1.7320508075688773},"rustdoc.html#dotting-is-and-crossing-ts":{"tf":1.0},"incrcomp-debugging.html#tracking-down-incorrect-edges":{"tf":1.0},"traits/resolution.html#selection":{"tf":1.0},"method-lookup.html#candidate-assembly":{"tf":1.0},"method-lookup.html#candidate-search":{"tf":2.449489742783178},"traits/hrtb.html#basic-matching-and-skolemization-leaks":{"tf":2.23606797749979},"traits/resolution.html#overview":{"tf":1.0},"conventions.html#prefer-exhaustive-matches":{"tf":2.0},"query.html#cycles-between-queries":{"tf":1.0},"tests/adding.html#comment-explaining-what-the-test-is-about":{"tf":1.4142135623730952},"incrcomp-debugging.html#dumping-the-graph":{"tf":1.0},"variance.html#addendum-variance-on-traits":{"tf":1.0}},"df":20,"e":{"docs":{},"df":0,"r":{"docs":{"macro-expansion.html#the-macro-parser":{"tf":2.449489742783178}},"df":1}}}},"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{"traits/implied-bounds.html#implied-bounds":{"tf":1.0},"traits/bibliography.html#bibliography":{"tf":1.0}},"df":2}}}},"r":{"docs":{},"df":0,"k":{"docs":{"miri.html#allocations":{"tf":1.0},"tests/adding.html#other-header-commands":{"tf":1.0},"traits/resolution.html#candidate-assembly":{"tf":1.4142135623730952},"traits/resolution.html#major-concepts":{"tf":1.0},"incremental-compilation.html#the-query-dag":{"tf":1.4142135623730952},"incremental-compilation.html#the-basic-algorithm":{"tf":1.0},"incremental-compilation.html#the-try-mark-green-algorithm":{"tf":2.449489742783178}},"df":7,"d":{"docs":{},"df":0,"o":{"docs":{},"df":0,"w":{"docs":{},"df":0,"n":{"docs":{"rustdoc.html#cheat-sheet":{"tf":1.4142135623730952},"rustdoc.html#from-clean-to-crate":{"tf":1.7320508075688773},"rustdoc.html#hot-potato":{"tf":2.0},"rustdoc.html#other-tricks-up-its-sleeve":{"tf":1.4142135623730952}},"df":4}}}},"e":{"docs":{},"df":0,"r":{"docs":{"rustdoc.html#hot-potato":{"tf":1.0},"compiletest.html#adding-a-new-header-command":{"tf":1.0}},"df":2,"t":{"docs":{},"df":0,"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{"variance.html#addendum-variance-on-traits":{"tf":1.0}},"df":1}}}}}}}}},"d":{"docs":{},"df":0,"e":{"docs":{"traits/canonicalization.html#canonicalizing-the-query-result":{"tf":1.0},"mir/regionck.html#extending-the-universal-regions-check":{"tf":1.0},"appendix/glossary.html#appendix-c-glossary":{"tf":1.0},"const-eval.html#constant-evaluation":{"tf":1.0}},"df":4}},"c":{"docs":{"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.4142135623730952},"compiler-debugging.html#getting-a-backtrace":{"tf":1.0}},"df":2,"h":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{"miri.html#miri":{"tf":1.4142135623730952},"diag.html#suggestions":{"tf":1.0},"appendix/stupid-stats.html#overview-of-the-compilation-process":{"tf":1.0}},"df":3,"e":{"docs":{},"df":0,"a":{"docs":{},"df":0,"p":{"docs":{},"df":0,"p":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{},"df":0,"c":{"docs":{"diag.html#suggestions":{"tf":1.0}},"df":1}}}}}}}}}},"r":{"docs":{},"df":0,"o":{"docs":{"appendix/glossary.html#appendix-c-glossary":{"tf":1.0},"query.html#how-the-compiler-executes-a-query":{"tf":1.0},"name-resolution.html#scopes-and-ribs":{"tf":1.4142135623730952},"rustc-driver.html#the-rustc-driver":{"tf":1.0},"appendix/stupid-stats.html#appendix-a-a-tutorial-on-creating-a-drop-in-replacement-for-rustc":{"tf":1.0},"diag.html#declaring-a-lint":{"tf":1.0},"diag.html#lint-groups":{"tf":1.0},"diag.html#error-messages":{"tf":1.4142135623730952},"tests/running.html#running-a-subset-of-the-test-suites":{"tf":1.0},"hir.html#the-hir":{"tf":1.0},"macro-expansion.html#procedural-macros":{"tf":1.4142135623730952},"query.html#adding-a-new-kind-of-query":{"tf":2.23606797749979},"appendix/stupid-stats.html#compilercontroller":{"tf":1.0},"macro-expansion.html#macro-expansion":{"tf":3.1622776601683797},"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.7320508075688773},"high-level-overview.html#the-main-stages-of-compilation":{"tf":1.4142135623730952},"macro-expansion.html#example":{"tf":2.0},"macro-expansion.html#the-macro-parser":{"tf":5.0},"how-to-build-and-run.html#create-a-configtoml":{"tf":1.0},"name-resolution.html#namespaces":{"tf":1.0},"traits/lowering-rules.html#notation":{"tf":1.4142135623730952},"appendix/stupid-stats.html#overview-of-the-compilation-process":{"tf":2.23606797749979},"mir/visitor.html#mir-visitor":{"tf":1.0},"name-resolution.html#overall-strategy":{"tf":1.0},"traits/chalk-overview.html#testing":{"tf":1.0}},"df":25,"_":{"docs":{},"df":0,"r":{"docs":{},"df":0,"u":{"docs":{},"df":0,"l":{"docs":{"macro-expansion.html#example":{"tf":1.0},"macro-expansion.html#the-macro-parser":{"tf":1.4142135623730952}},"df":2}}}}}},"o":{"docs":{"tests/adding.html#ignoring-tests":{"tf":1.0}},"df":1},".":{"docs":{},"df":0,"n":{"docs":{},"df":0,"o":{"docs":{},"df":0,"d":{"docs":{"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.0}},"df":1}}}}}}},"3":{"docs":{"method-lookup.html#candidate-assembly":{"tf":2.23606797749979},"diag.html#suggestions":{"tf":1.7320508075688773},"mir/regionck.html#another-example":{"tf":2.6457513110645909},"compiler-debugging.html#getting-a-backtrace":{"tf":1.0},"mir/regionck.html#final-example":{"tf":2.449489742783178},"method-lookup.html#candidate-search":{"tf":1.4142135623730952},"traits/resolution.html#major-concepts":{"tf":1.0},"method-lookup.html#steps":{"tf":2.0},"high-level-overview.html#the-main-stages-of-compilation":{"tf":1.4142135623730952},"name-resolution.html#scopes-and-ribs":{"tf":1.4142135623730952},"variance.html#the-algorithm":{"tf":1.4142135623730952},"how-to-build-and-run.html#running-xpy-and-building-a-stage1-compiler":{"tf":1.0},"appendix/stupid-stats.html#overview-of-the-compilation-process":{"tf":1.0}},"df":13,"3":{"docs":{"compiler-debugging.html#getting-a-backtrace":{"tf":1.4142135623730952}},"df":1},"7":{"docs":{"compiler-debugging.html#getting-a-backtrace":{"tf":1.0}},"df":1},"2":{"docs":{"compiler-debugging.html#getting-a-backtrace":{"tf":1.0},"tests/adding.html#normalization":{"tf":2.0}},"df":2,"b":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{"tests/adding.html#normalization":{"tf":1.4142135623730952},"tests/adding.html#ignoring-tests":{"tf":1.0}},"df":2}}},"0":{"docs":{},"df":0,",":{"docs":{},"df":0,"7":{"docs":{"compiletest.html#implementing-the-behavior-change":{"tf":1.0}},"df":1}}},"3":{"docs":{},"df":0,",":{"docs":{},"df":0,"6":{"docs":{"compiletest.html#implementing-the-behavior-change":{"tf":1.0}},"df":1}}},"_":{"docs":{},"df":0,"u":{"docs":{},"df":0,"3":{"docs":{},"df":0,"2":{"docs":{"tests/adding.html#revisions":{"tf":1.0}},"df":1}}}}},"5":{"docs":{"compiler-debugging.html#getting-a-backtrace":{"tf":1.0}},"df":1},"6":{"docs":{"compiler-debugging.html#getting-a-backtrace-for-errors":{"tf":1.0},"compiler-debugging.html#getting-a-backtrace":{"tf":1.0}},"df":2},"4":{"docs":{"compiler-debugging.html#getting-a-backtrace":{"tf":1.4142135623730952}},"df":1},"8":{"docs":{},"df":0,"3":{"docs":{},"df":0,",":{"docs":{},"df":0,"6":{"docs":{"compiletest.html#adding-a-new-header-command":{"tf":1.0}},"df":1}}},"5":{"docs":{},"df":0,",":{"docs":{},"df":0,"1":{"docs":{},"df":0,"0":{"docs":{"compiletest.html#adding-a-new-header-command":{"tf":1.0}},"df":1}}}}}},"j":{"docs":{},"df":0,"e":{"docs":{},"df":0,"m":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{},"df":0,"l":{"docs":{},"df":0,"o":{"docs":{},"df":0,"c":{"docs":{"how-to-build-and-run.html#create-a-configtoml":{"tf":1.4142135623730952}},"df":1}}}}}}},"u":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"i":{"docs":{},"df":0,"f":{"docs":{},"df":0,"i":{"docs":{"traits/lowering-rules.html#trait-header":{"tf":1.0}},"df":1}}}}}},"a":{"docs":{},"df":0,"v":{"docs":{},"df":0,"a":{"docs":{"variance.html#variance-and-object-types":{"tf":1.0}},"df":1,"s":{"docs":{},"df":0,"c":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{},"df":0,"p":{"docs":{},"df":0,"t":{"docs":{"rustdoc.html#cheat-sheet":{"tf":1.0},"rustdoc.html#from-clean-to-crate":{"tf":1.0}},"df":2}}}}}}}}},"o":{"docs":{},"df":0,"b":{"docs":{"type-checking.html#type-collection":{"tf":1.0},"macro-expansion.html#the-macro-parser":{"tf":1.0},"mir/regionck.html#mir-based-region-checking-nll":{"tf":1.4142135623730952},"traits/resolution.html#major-concepts":{"tf":1.0},"incremental-compilation.html#the-try-mark-green-algorithm":{"tf":1.0},"type-inference.html#enforcing-equality--subtyping":{"tf":1.0},"traits/wf.html#well-formedness-checking":{"tf":1.0}},"df":7}},"s":{"docs":{"rustdoc.html#dotting-is-and-crossing-ts":{"tf":1.4142135623730952},"rustdoc.html#cheat-sheet":{"tf":1.0}},"df":2,"o":{"docs":{},"df":0,"n":{"docs":{"diag.html#suggestions":{"tf":1.0}},"df":1}}}}}},"title":{"root":{"docs":{},"df":0,"x":{"docs":{},"df":0,".":{"docs":{},"df":0,"p":{"docs":{},"df":0,"i":{"docs":{"how-to-build-and-run.html#running-xpy-and-building-a-stage1-compiler":{"tf":1.0},"how-to-build-and-run.html#other-xpy-commands":{"tf":1.0}},"df":2}}}},"h":{"docs":{},"df":0,"o":{"docs":{},"df":0,"t":{"docs":{"rustdoc.html#hot-potato":{"tf":1.0}},"df":1},"r":{"docs":{},"df":0,"n":{"docs":{"traits/lowering-to-logic.html#type-checking-generic-functions-beyond-horn-clauses":{"tf":1.0}},"df":1}}},"y":{"docs":{},"df":0,"g":{"docs":{},"df":0,"i":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{"macro-expansion.html#hygiene":{"tf":1.0}},"df":1}}}}},"i":{"docs":{},"df":0,"r":{"docs":{"hir.html#the-hir-map":{"tf":1.0},"hir.html#the-hir":{"tf":1.0},"hir.html#identifiers-in-the-hir":{"tf":1.0},"hir.html#hir-bodies":{"tf":1.0}},"df":4},"g":{"docs":{},"df":0,"h":{"docs":{"high-level-overview.html#high-level-overview-of-the-compiler-source":{"tf":1.0}},"df":1,"e":{"docs":{},"df":0,"r":{"docs":{"traits/hrtb.html#higher-ranked-trait-bounds":{"tf":1.0},"traits/hrtb.html#higher-ranked-trait-obligations":{"tf":1.0}},"df":2}}}}},"e":{"docs":{},"df":0,"a":{"docs":{},"df":0,"d":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"traits/lowering-rules.html#trait-header":{"tf":1.0},"compiletest.html#adding-a-new-header-command":{"tf":1.0},"tests/adding.html#header-commands-configuring-rustc":{"tf":1.0},"tests/adding.html#other-header-commands":{"tf":1.0},"compiletest.html#header-commands":{"tf":1.0}},"df":5}}}}}},"t":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{"appendix/stupid-stats.html#appendix-a-a-tutorial-on-creating-a-drop-in-replacement-for-rustc":{"tf":1.0}},"df":1}}}}},"a":{"docs":{},"df":0,"b":{"docs":{"conventions.html#tabs-vs-spaces":{"tf":1.0}},"df":1}},"h":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"g":{"docs":{"conventions.html#use-todo-comments-for-things-you-dont-want-to-forget":{"tf":1.0}},"df":1}}},"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"w":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{},"df":0,"h":{"docs":{"traits/caching.html#caching-and-subtle-considerations-therewith":{"tf":1.0}},"df":1}}}}}}}},"i":{"docs":{},"df":0,"d":{"docs":{},"df":0,"i":{"docs":{"conventions.html#formatting-and-the-tidy-script":{"tf":1.0}},"df":1}}},"c":{"docs":{},"df":0,"x":{"docs":{"ty.html#the-tcx-and-how-it-uses-lifetimes":{"tf":1.0}},"df":1}},"y":{"docs":{"ty.html#the--ty--module-representing-types":{"tf":1.0}},"df":1,"p":{"docs":{},"df":0,"i":{"docs":{},"df":0,"c":{"docs":{"walkthrough.html#walkthrough-a-typical-contribution":{"tf":1.0}},"df":1}},"e":{"docs":{"ty.html#beyond-types-other-kinds-of-arena-allocated-data-structures":{"tf":1.0},"type-inference.html#type-inference":{"tf":1.0},"type-checking.html#type-collection":{"tf":1.0},"variance.html#variance-and-object-types":{"tf":1.0},"variance.html#variance-and-associated-types":{"tf":1.0},"variance.html#variance-of-type-and-lifetime-parameters":{"tf":1.0},"traits/associated-types.html#associated-type-projection-and-normalization":{"tf":1.0},"ty.html#allocating-and-working-with-types":{"tf":1.0},"type-checking.html#type-checking":{"tf":1.0},"traits/associated-types.html#equality-and-associated-types":{"tf":1.0},"mir/index.html#mir-data-types":{"tf":1.0},"hir.html#out-of-band-storage-and-the--crate--type":{"tf":1.0},"traits/lowering-to-logic.html#type-checking-normal-functions":{"tf":1.0},"traits/associated-types.html#skolemized-associated-types":{"tf":1.0},"traits/lowering-rules.html#associated-type-values":{"tf":1.0},"mir/regionck.html#the-mir-type-check":{"tf":1.0},"ty.html#the--ty--module-representing-types":{"tf":1.0},"traits/lowering-to-logic.html#type-checking-generic-functions-beyond-horn-clauses":{"tf":1.0},"traits/lowering-rules.html#associated-type-declarations":{"tf":1.0}},"df":19}}},"o":{"docs":{},"df":0,"p":{"docs":{},"df":0,"i":{"docs":{},"df":0,"c":{"docs":{"appendix/background.html#appendix-b-background-topics":{"tf":1.0}},"df":1}}},"u":{"docs":{},"df":0,"r":{"docs":{"rustdoc.html#the-walking-tour-of-rustdoc":{"tf":1.0}},"df":1}},"o":{"docs":{},"df":0,"l":{"docs":{},"df":0,"c":{"docs":{},"df":0,"h":{"docs":{},"df":0,"a":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{"how-to-build-and-run.html#creating-a-rustup-toolchain":{"tf":1.0}},"df":1}}}}}}},"d":{"docs":{},"df":0,"o":{"docs":{"name-resolution.html#todo":{"tf":1.0},"conventions.html#use-todo-comments-for-things-you-dont-want-to-forget":{"tf":1.0}},"df":2}}},"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"c":{"docs":{},"df":0,"k":{"docs":{"incrcomp-debugging.html#tracking-down-incorrect-edges":{"tf":1.0},"mir/regionck.html#causal-tracking":{"tf":1.0}},"df":2}},"i":{"docs":{},"df":0,"t":{"docs":{"traits/hrtb.html#higher-ranked-trait-bounds":{"tf":1.0},"traits/lowering-rules.html#lowering-trait-items":{"tf":1.0},"traits/index.html#trait-solving-new-style":{"tf":1.0},"traits/canonical-queries.html#a-trait-query-in-rustc":{"tf":1.0},"traits/hrtb.html#higher-ranked-trait-obligations":{"tf":1.0},"traits/lowering-rules.html#lowering-traits":{"tf":1.0},"variance.html#trait-variance-and-vtable-resolution":{"tf":1.0},"traits/resolution.html#trait-resolution-old-style":{"tf":1.0},"variance.html#addendum-variance-on-traits":{"tf":1.0},"traits/lowering-rules.html#trait-header":{"tf":1.0},"traits/lowering-to-logic.html#rust-traits-and-logic":{"tf":1.0}},"df":11}},"v":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"s":{"docs":{"mir/visitor.html#traversal":{"tf":1.0}},"df":1}}}},"d":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{"traits/canonical-queries.html#the-traditional-interactive-prolog-query":{"tf":1.0}},"df":1}}},"n":{"docs":{},"df":0,"s":{"docs":{},"df":0,"l":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{"traits/resolution.html#selection-during-translation":{"tf":1.0}},"df":1}}},"f":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"m":{"docs":{"traits/lowering-rules.html#transforming-the-lowered-where-clauses":{"tf":1.0}},"df":1}}}}}}},"i":{"docs":{"type-inference.html#trying-equality":{"tf":1.0},"incremental-compilation.html#the-try-mark-green-algorithm":{"tf":1.0}},"df":2,"c":{"docs":{},"df":0,"k":{"docs":{"rustdoc.html#other-tricks-up-its-sleeve":{"tf":1.0}},"df":1}}}},"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"m":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"o":{"docs":{},"df":0,"l":{"docs":{},"df":0,"o":{"docs":{},"df":0,"g":{"docs":{"type-inference.html#a-note-on-terminology":{"tf":1.0}},"df":1}}}}}}}},"s":{"docs":{},"df":0,"t":{"docs":{"tests/running.html#running-an-individual-test":{"tf":1.0},"incrcomp-debugging.html#debugging-and-testing-dependencies":{"tf":1.0},"tests/running.html#running-a-subset-of-the-test-suites":{"tf":1.0},"tests/intro.html#testing-on-emulators":{"tf":1.0},"tests/intro.html#other-tests":{"tf":1.0},"tests/adding.html#what-kind-of-test-should-i-add":{"tf":1.0},"traits/lowering-module.html#unit-tests":{"tf":1.0},"tests/intro.html#testing-infrastructure":{"tf":1.0},"tests/running.html#running-tests":{"tf":1.0},"compiletest.html#adding-a-new-test-file":{"tf":1.0},"tests/adding.html#comment-explaining-what-the-test-is-about":{"tf":1.0},"tests/intro.html#testing-with-docker-images":{"tf":1.0},"tests/adding.html#ignoring-tests":{"tf":1.0},"incrcomp-debugging.html#testing-the-dependency-graph":{"tf":1.0},"tests/adding.html#naming-your-test":{"tf":1.0},"tests/adding.html#guide-to-the-ui-tests":{"tf":1.0},"traits/chalk-overview.html#testing":{"tf":1.0},"tests/adding.html#tests-that-do-not-result-in-compile-errors":{"tf":1.0},"tests/intro.html#the-compiler-testing-framework":{"tf":1.0},"tests/intro.html#compiletest-test-suites":{"tf":1.0},"tests/adding.html#adding-new-tests":{"tf":1.0}},"df":21}}},"'":{"docs":{"rustdoc.html#dotting-is-and-crossing-ts":{"tf":1.0}},"df":1}},"g":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{"diag.html#edition-gated-lints":{"tf":1.0}},"df":1}}},"o":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{"traits/goals-and-clauses.html#coinductive-goals":{"tf":1.0},"traits/goals-and-clauses.html#domain-goals":{"tf":1.0},"traits/goals-and-clauses.html#goals-and-clauses":{"tf":1.0},"traits/goals-and-clauses.html#goals-and-clauses-meta-structure":{"tf":1.0}},"df":4}}},"l":{"docs":{},"df":0,"o":{"docs":{},"df":0,"s":{"docs":{},"df":0,"s":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{"appendix/glossary.html#appendix-c-glossary":{"tf":1.0}},"df":1}}}}},"b":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{"traits/caching.html#where-clauses-and-the-local-vs-global-cache":{"tf":1.0}},"df":1}}}}},"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"traits/lowering-to-logic.html#type-checking-generic-functions-beyond-horn-clauses":{"tf":1.0},"trans.html#generating-llvm-ir":{"tf":1.0}},"df":2}}},"t":{"docs":{"compiler-debugging.html#getting-logging-output":{"tf":1.0},"compiler-debugging.html#getting-a-backtrace-for-errors":{"tf":1.0},"compiler-debugging.html#getting-a-backtrace":{"tf":1.0}},"df":3}},"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"p":{"docs":{},"df":0,"h":{"docs":{"incrcomp-debugging.html#testing-the-dependency-graph":{"tf":1.0},"appendix/background.html#what-is-a-control-flow-graph":{"tf":1.0},"incrcomp-debugging.html#dumping-the-graph":{"tf":1.0},"incrcomp-debugging.html#debugging-the-dependency-graph":{"tf":1.0},"variance.html#dependency-graph-management":{"tf":1.0}},"df":5,"v":{"docs":{},"df":0,"i":{"docs":{},"df":0,"z":{"docs":{"compiler-debugging.html#formatting-graphviz-output-dot-files":{"tf":1.0}},"df":1}}}}}},"e":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{"incremental-compilation.html#the-try-mark-green-algorithm":{"tf":1.0}},"df":1}}},"o":{"docs":{},"df":0,"u":{"docs":{},"df":0,"p":{"docs":{"diag.html#lint-groups":{"tf":1.0}},"df":1}}}},"u":{"docs":{},"df":0,"i":{"docs":{},"df":0,"d":{"docs":{"tests/adding.html#guide-to-the-ui-tests":{"tf":1.0},"about-this-guide.html#about-this-guide":{"tf":1.0}},"df":2}}}},"n":{"docs":{},"df":0,"l":{"docs":{},"df":0,"l":{"docs":{"mir/regionck.html#mir-based-region-checking-nll":{"tf":1.0}},"df":1}},"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"m":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{"traits/associated-types.html#associated-type-projection-and-normalization":{"tf":1.0},"traits/lowering-to-logic.html#type-checking-normal-functions":{"tf":1.0},"tests/adding.html#normalization":{"tf":1.0}},"df":3}}}},"t":{"docs":{},"df":0,"i":{"docs":{},"df":0,"c":{"docs":{"conventions.html#copyright-notice":{"tf":1.0}},"df":1}},"a":{"docs":{},"df":0,"t":{"docs":{"traits/lowering-rules.html#notation":{"tf":1.0}},"df":1}},"e":{"docs":{"type-inference.html#a-note-on-terminology":{"tf":1.0},"rustc-driver.html#a-note-on-lifetimes":{"tf":1.0}},"df":2}}},"e":{"docs":{},"df":0,"x":{"docs":{},"df":0,"t":{"docs":{"appendix/stupid-stats.html#what-next":{"tf":1.0}},"df":1}},"w":{"docs":{"compiletest.html#adding-a-new-test-file":{"tf":1.0},"traits/index.html#trait-solving-new-style":{"tf":1.0},"query.html#adding-a-new-kind-of-query":{"tf":1.0},"tests/adding.html#adding-new-tests":{"tf":1.0},"compiletest.html#adding-a-new-header-command":{"tf":1.0}},"df":5}},"u":{"docs":{},"df":0,"t":{"docs":{"rustdoc.html#from-soup-to-nuts":{"tf":1.0}},"df":1}},"a":{"docs":{},"df":0,"m":{"docs":{},"df":0,"e":{"docs":{"traits/lowering-rules.html#rule-names-and-cross-references":{"tf":1.0},"tests/adding.html#naming-your-test":{"tf":1.0},"name-resolution.html#name-resolution":{"tf":1.0}},"df":3,"s":{"docs":{},"df":0,"p":{"docs":{},"df":0,"a":{"docs":{},"df":0,"c":{"docs":{"name-resolution.html#namespaces":{"tf":1.0}},"df":1}}}}}}}},"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.0}},"df":1},"g":{"docs":{},"df":0,"e":{"docs":{"high-level-overview.html#the-main-stages-of-compilation":{"tf":1.0}},"df":1,"1":{"docs":{"how-to-build-and-run.html#running-xpy-and-building-a-stage1-compiler":{"tf":1.0}},"df":1}}}},"u":{"docs":{},"df":0,"p":{"docs":{},"df":0,"i":{"docs":{},"df":0,"d":{"docs":{"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.0}},"df":1}}}},"y":{"docs":{},"df":0,"l":{"docs":{},"df":0,"e":{"docs":{"traits/resolution.html#trait-resolution-old-style":{"tf":1.0},"traits/index.html#trait-solving-new-style":{"tf":1.0}},"df":2}}},"e":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{"mir/passes.html#stealing":{"tf":1.0}},"df":1}},"p":{"docs":{"method-lookup.html#steps":{"tf":1.0}},"df":1}},"r":{"docs":{},"df":0,"u":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{},"df":0,"u":{"docs":{},"df":0,"r":{"docs":{"traits/goals-and-clauses.html#goals-and-clauses-meta-structure":{"tf":1.0},"high-level-overview.html#crate-structure":{"tf":1.0},"conventions.html#how-to-structure-your-pr":{"tf":1.0},"ty.html#beyond-types-other-kinds-of-arena-allocated-data-structures":{"tf":1.0}},"df":4}}}}},"a":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"g":{"docs":{},"df":0,"i":{"docs":{"name-resolution.html#overall-strategy":{"tf":1.0}},"df":1}}}}}},"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"g":{"docs":{"hir.html#out-of-band-storage-and-the--crate--type":{"tf":1.0}},"df":1}}}}},"h":{"docs":{},"df":0,"e":{"docs":{},"df":0,"e":{"docs":{},"df":0,"t":{"docs":{"rustdoc.html#cheat-sheet":{"tf":1.0}},"df":1}}}},"l":{"docs":{},"df":0,"e":{"docs":{},"df":0,"e":{"docs":{},"df":0,"v":{"docs":{"rustdoc.html#other-tricks-up-its-sleeve":{"tf":1.0}},"df":1}}},"g":{"docs":{"traits/slg.html#the-slg-solver":{"tf":1.0}},"df":1}},"n":{"docs":{},"df":0,"a":{"docs":{},"df":0,"p":{"docs":{},"df":0,"s":{"docs":{},"df":0,"h":{"docs":{},"df":0,"o":{"docs":{},"df":0,"t":{"docs":{"type-inference.html#snapshots":{"tf":1.0}},"df":1}}}}}}},"e":{"docs":{},"df":0,"e":{"docs":{"mir/passes.html#seeing-how-the-mir-changes-as-the-compiler-executes":{"tf":1.0}},"df":1},"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"c":{"docs":{},"df":0,"h":{"docs":{"method-lookup.html#candidate-search":{"tf":1.0}},"df":1}}}},"l":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{"traits/resolution.html#selection":{"tf":1.0},"traits/resolution.html#selection-during-translation":{"tf":1.0}},"df":2}}}}},"o":{"docs":{},"df":0,"l":{"docs":{},"df":0,"v":{"docs":{"traits/index.html#trait-solving-new-style":{"tf":1.0}},"df":1,"e":{"docs":{},"df":0,"r":{"docs":{"traits/slg.html#the-slg-solver":{"tf":1.0},"traits/chalk-overview.html#solver":{"tf":1.0}},"df":2}}}},"u":{"docs":{},"df":0,"p":{"docs":{"rustdoc.html#from-soup-to-nuts":{"tf":1.0}},"df":1},"r":{"docs":{},"df":0,"c":{"docs":{"traits/lowering-to-logic.html#source":{"tf":1.0},"high-level-overview.html#high-level-overview-of-the-compiler-source":{"tf":1.0}},"df":2}}}},"p":{"docs":{},"df":0,"a":{"docs":{},"df":0,"c":{"docs":{},"df":0,"e":{"docs":{"conventions.html#tabs-vs-spaces":{"tf":1.0}},"df":1}},"n":{"docs":{"diag.html#span":{"tf":1.0}},"df":1}},"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"i":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{"traits/specialization.html#specialization":{"tf":1.0}},"df":1}}}}}},"u":{"docs":{},"df":0,"b":{"docs":{},"df":0,"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"t":{"docs":{"tests/running.html#running-a-subset-of-the-test-suites":{"tf":1.0}},"df":1}}},"t":{"docs":{},"df":0,"y":{"docs":{},"df":0,"p":{"docs":{"mir/regionck.html#subtyping-and-skolemization":{"tf":1.0},"type-inference.html#enforcing-equality--subtyping":{"tf":1.0},"type-inference.html#subtyping-obligations":{"tf":1.0}},"df":3}},"l":{"docs":{"traits/caching.html#caching-and-subtle-considerations-therewith":{"tf":1.0}},"df":1}}},"i":{"docs":{},"df":0,"t":{"docs":{"tests/running.html#running-a-subset-of-the-test-suites":{"tf":1.0},"tests/intro.html#compiletest-test-suites":{"tf":1.0}},"df":2}},"g":{"docs":{},"df":0,"g":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{"diag.html#suggestions":{"tf":1.0}},"df":1}}}}}},"c":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{},"df":0,"p":{"docs":{},"df":0,"t":{"docs":{"conventions.html#formatting-and-the-tidy-script":{"tf":1.0}},"df":1}}}},"o":{"docs":{},"df":0,"p":{"docs":{},"df":0,"e":{"docs":{"name-resolution.html#scopes-and-ribs":{"tf":1.0}},"df":1}}}},"k":{"docs":{},"df":0,"o":{"docs":{},"df":0,"l":{"docs":{},"df":0,"e":{"docs":{},"df":0,"m":{"docs":{"traits/hrtb.html#basic-matching-and-skolemization-leaks":{"tf":1.0},"mir/regionck.html#universes-and-skolemized-region-elements":{"tf":1.0},"mir/regionck.html#skolemization-and-universes":{"tf":1.0},"traits/associated-types.html#skolemized-associated-types":{"tf":1.0},"mir/regionck.html#subtyping-and-skolemization":{"tf":1.0},"mir/regionck.html#skolemization-and-outlives-constraints":{"tf":1.0}},"df":6}}}}}},"p":{"docs":{},"df":0,"r":{"docs":{"conventions.html#how-to-structure-your-pr":{"tf":1.0}},"df":1,"o":{"docs":{},"df":0,"j":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{"traits/associated-types.html#associated-type-projection-and-normalization":{"tf":1.0},"traits/associated-types.html#projection-equality":{"tf":1.0}},"df":2}}}},"c":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"s":{"docs":{"appendix/stupid-stats.html#overview-of-the-compilation-process":{"tf":1.0},"traits/canonicalization.html#processing-the-canonicalized-query-result":{"tf":1.0}},"df":2}},"d":{"docs":{},"df":0,"u":{"docs":{},"df":0,"r":{"docs":{"macro-expansion.html#procedural-macros":{"tf":1.0}},"df":1}}}}},"b":{"docs":{},"df":0,"e":{"docs":{"method-lookup.html#the-probe-phase":{"tf":1.0}},"df":1}},"g":{"docs":{},"df":0,"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"m":{"docs":{},"df":0,"_":{"docs":{},"df":0,"c":{"docs":{},"df":0,"l":{"docs":{},"df":0,"a":{"docs":{},"df":0,"u":{"docs":{},"df":0,"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"_":{"docs":{},"df":0,"f":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{"traits/lowering-module.html#the--program_clauses_for--query":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}},"m":{"docs":{},"df":0,"o":{"docs":{},"df":0,"t":{"docs":{"mir/index.html#promoted-constants":{"tf":1.0}},"df":1}}},"l":{"docs":{},"df":0,"o":{"docs":{},"df":0,"g":{"docs":{"traits/canonical-queries.html#the-traditional-interactive-prolog-query":{"tf":1.0}},"df":1}}}},"e":{"docs":{},"df":0,"f":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"conventions.html#prefer-exhaustive-matches":{"tf":1.0}},"df":1}}}}},"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"s":{"docs":{"traits/chalk-overview.html#parsing":{"tf":1.0}},"df":1,"e":{"docs":{},"df":0,"r":{"docs":{"macro-expansion.html#the-macro-parser":{"tf":1.0},"the-parser.html#the-parser":{"tf":1.0}},"df":2}}},"a":{"docs":{},"df":0,"m":{"docs":{},"df":0,"e":{"docs":{},"df":0,"t":{"docs":{"param_env.html#parameter-environment":{"tf":1.0},"variance.html#variance-of-type-and-lifetime-parameters":{"tf":1.0}},"df":2}}}}},"s":{"docs":{},"df":0,"s":{"docs":{"mir/passes.html#implementing-and-registering-a-pass":{"tf":1.0},"mir/passes.html#mir-passes":{"tf":1.0}},"df":2}}},"h":{"docs":{},"df":0,"a":{"docs":{},"df":0,"s":{"docs":{},"df":0,"e":{"docs":{"mir/borrowck.html#major-phases-of-the-borrow-checker":{"tf":1.0},"method-lookup.html#the-probe-phase":{"tf":1.0}},"df":2}}}},"o":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{"traits/chalk-overview.html#blog-posts":{"tf":1.0}},"df":1}},"t":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{},"df":0,"o":{"docs":{"rustdoc.html#hot-potato":{"tf":1.0}},"df":1}}}}}},"c":{"docs":{"appendix/glossary.html#appendix-c-glossary":{"tf":1.0}},"df":1,"y":{"docs":{},"df":0,"c":{"docs":{},"df":0,"l":{"docs":{"query.html#cycles-between-queries":{"tf":1.0}},"df":1}}},"o":{"docs":{"appendix/background.html#what-is-co--and-contra-variance":{"tf":1.0}},"df":1,"n":{"docs":{},"df":0,"v":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{"ty.html#import-conventions":{"tf":1.0}},"df":1}}}},"c":{"docs":{},"df":0,"e":{"docs":{},"df":0,"p":{"docs":{},"df":0,"t":{"docs":{"traits/resolution.html#major-concepts":{"tf":1.0}},"df":1}}}},"t":{"docs":{},"df":0,"r":{"docs":{},"df":0,"a":{"docs":{"appendix/background.html#what-is-co--and-contra-variance":{"tf":1.0}},"df":1},"i":{"docs":{},"df":0,"b":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{"walkthrough.html#walkthrough-a-typical-contribution":{"tf":1.0}},"df":1}}}},"o":{"docs":{},"df":0,"l":{"docs":{"appendix/background.html#what-is-a-control-flow-graph":{"tf":1.0}},"df":1}}},"e":{"docs":{},"df":0,"x":{"docs":{},"df":0,"t":{"docs":{"type-inference.html#creating-an-inference-context":{"tf":1.0}},"df":1}}}},"s":{"docs":{},"df":0,"i":{"docs":{},"df":0,"d":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"traits/caching.html#caching-and-subtle-considerations-therewith":{"tf":1.0}},"df":1}}}},"t":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{"mir/index.html#representing-constants":{"tf":1.0},"const-eval.html#constant-evaluation":{"tf":1.0},"mir/index.html#promoted-constants":{"tf":1.0},"traits/lowering-rules.html#function-and-constant-values":{"tf":1.0},"traits/lowering-rules.html#lowering-function-and-constant-declarations":{"tf":1.0}},"df":5}}},"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{"type-inference.html#extracting-region-constraints":{"tf":1.0},"mir/regionck.html#skolemization-and-outlives-constraints":{"tf":1.0},"mir/regionck.html#region-variables-and-constraints":{"tf":1.0},"type-inference.html#region-constraints":{"tf":1.0},"traits/regions.html#region-constraints":{"tf":1.0},"variance.html#constraints":{"tf":1.0}},"df":6}}}},"u":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{"mir/construction.html#mir-construction":{"tf":1.0}},"df":1}}}}}},"f":{"docs":{},"df":0,"i":{"docs":{},"df":0,"r":{"docs":{},"df":0,"m":{"docs":{"traits/resolution.html#confirmation":{"tf":1.0}},"df":1}},"g":{"docs":{},"df":0,"u":{"docs":{},"df":0,"r":{"docs":{"tests/adding.html#header-commands-configuring-rustc":{"tf":1.0}},"df":1}},".":{"docs":{},"df":0,"t":{"docs":{},"df":0,"o":{"docs":{},"df":0,"m":{"docs":{},"df":0,"l":{"docs":{"how-to-build-and-run.html#create-a-configtoml":{"tf":1.0}},"df":1}}}}}}}}},"m":{"docs":{},"df":0,"m":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{"compiletest.html#adding-a-new-header-command":{"tf":1.0},"tests/adding.html#header-commands-configuring-rustc":{"tf":1.0},"how-to-build-and-run.html#other-xpy-commands":{"tf":1.0},"tests/adding.html#other-header-commands":{"tf":1.0},"compiletest.html#header-commands":{"tf":1.0}},"df":5}}},"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{"conventions.html#use-todo-comments-for-things-you-dont-want-to-forget":{"tf":1.0},"tests/adding.html#comment-explaining-what-the-test-is-about":{"tf":1.0}},"df":2}}}},"p":{"docs":{},"df":0,"i":{"docs":{},"df":0,"l":{"docs":{"tests/intro.html#the-compiler-testing-framework":{"tf":1.0},"how-to-build-and-run.html#how-to-build-the-compiler-and-run-what-you-built":{"tf":1.0},"query.html#how-the-compiler-executes-a-query":{"tf":1.0},"tests/adding.html#tests-that-do-not-result-in-compile-errors":{"tf":1.0},"high-level-overview.html#the-main-stages-of-compilation":{"tf":1.0},"high-level-overview.html#high-level-overview-of-the-compiler-source":{"tf":1.0},"mir/passes.html#seeing-how-the-mir-changes-as-the-compiler-executes":{"tf":1.0},"compiler-debugging.html#debugging-the-compiler":{"tf":1.0},"how-to-build-and-run.html#running-xpy-and-building-a-stage1-compiler":{"tf":1.0},"incremental-compilation.html#incremental-compilation":{"tf":1.0},"query.html#queries-demand-driven-compilation":{"tf":1.0},"appendix/stupid-stats.html#overview-of-the-compilation-process":{"tf":1.0}},"df":12,"e":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{"tests/intro.html#compiletest-test-suites":{"tf":1.0},"compiletest.html#compiletest":{"tf":1.0}},"df":2}}}},"r":{"docs":{},"df":0,"c":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{"appendix/stupid-stats.html#compilercalls":{"tf":1.0}},"df":1}},"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{},"df":0,"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"l":{"docs":{"appendix/stupid-stats.html#compilercontroller":{"tf":1.0}},"df":1}}}}}}}}}}}}},"l":{"docs":{},"df":0,"l":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{"type-checking.html#type-collection":{"tf":1.0}},"df":1}}}}},"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{},"df":0,"u":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{"traits/goals-and-clauses.html#coinductive-goals":{"tf":1.0}},"df":1}}}}}},"d":{"docs":{},"df":0,"e":{"docs":{"appendix/code-index.html#appendix-d-code-index":{"tf":1.0},"conventions.html#coding-for-correctness":{"tf":1.0}},"df":2}},"r":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{"conventions.html#coding-for-correctness":{"tf":1.0}},"df":1}}}}},"p":{"docs":{},"df":0,"y":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{},"df":0,"g":{"docs":{},"df":0,"h":{"docs":{},"df":0,"t":{"docs":{"conventions.html#copyright-notice":{"tf":1.0}},"df":1}}}}}}}},"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{"how-to-build-and-run.html#create-a-configtoml":{"tf":1.0},"appendix/stupid-stats.html#appendix-a-a-tutorial-on-creating-a-drop-in-replacement-for-rustc":{"tf":1.0},"how-to-build-and-run.html#creating-a-rustup-toolchain":{"tf":1.0},"type-inference.html#creating-an-inference-context":{"tf":1.0}},"df":4}}},"a":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{"rustdoc.html#from-clean-to-crate":{"tf":1.0},"rustdoc.html#from-crate-to-clean":{"tf":1.0},"conventions.html#using-crates-from-cratesio":{"tf":1.0},"high-level-overview.html#crate-structure":{"tf":1.0},"hir.html#out-of-band-storage-and-the--crate--type":{"tf":1.0}},"df":5,"r":{"docs":{"tests/intro.html#crater":{"tf":1.0}},"df":1},"s":{"docs":{},"df":0,".":{"docs":{},"df":0,"i":{"docs":{},"df":0,"o":{"docs":{"conventions.html#using-crates-from-cratesio":{"tf":1.0}},"df":1}}}}}}},"o":{"docs":{},"df":0,"s":{"docs":{},"df":0,"s":{"docs":{"rustdoc.html#dotting-is-and-crossing-ts":{"tf":1.0},"traits/lowering-rules.html#rule-names-and-cross-references":{"tf":1.0}},"df":2}}}},"h":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"g":{"docs":{"mir/passes.html#seeing-how-the-mir-changes-as-the-compiler-executes":{"tf":1.0},"compiletest.html#implementing-the-behavior-change":{"tf":1.0}},"df":2}},"p":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"traits/goals-and-clauses.html#incomplete-chapter":{"tf":1.0}},"df":1}}}},"l":{"docs":{},"df":0,"k":{"docs":{"traits/chalk-overview.html#an-overview-of-chalk":{"tf":1.0}},"df":1}}},"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"k":{"docs":{"mir/regionck.html#extending-the-universal-regions-check":{"tf":1.0},"traits/lowering-to-logic.html#type-checking-generic-functions-beyond-horn-clauses":{"tf":1.0},"type-checking.html#type-checking":{"tf":1.0},"mir/regionck.html#the-mir-type-check":{"tf":1.0},"traits/wf.html#well-formedness-checking":{"tf":1.0},"mir/regionck.html#mir-based-region-checking-nll":{"tf":1.0},"traits/chalk-overview.html#well-formedness-checks":{"tf":1.0},"mir/borrowck.html#mir-borrow-check":{"tf":1.0},"traits/lowering-to-logic.html#type-checking-normal-functions":{"tf":1.0}},"df":9,"e":{"docs":{},"df":0,"r":{"docs":{"mir/borrowck.html#major-phases-of-the-borrow-checker":{"tf":1.0}},"df":1}}}},"a":{"docs":{},"df":0,"t":{"docs":{"rustdoc.html#cheat-sheet":{"tf":1.0}},"df":1}}}},"u":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"o":{"docs":{},"df":0,"m":{"docs":{"macro-expansion.html#custom-derive":{"tf":1.0}},"df":1,"i":{"docs":{},"df":0,"s":{"docs":{"appendix/stupid-stats.html#the-driver-customisation-apis":{"tf":1.0}},"df":1}}}}}}},"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{"traits/canonical-queries.html#canonical-queries":{"tf":1.0}},"df":1,"i":{"docs":{},"df":0,"c":{"docs":{"traits/canonicalization.html#canonicalization":{"tf":1.0},"traits/canonicalization.html#canonicalizing-the-query-result":{"tf":1.0},"traits/canonicalization.html#processing-the-canonicalized-query-result":{"tf":1.0},"traits/canonicalization.html#canonicalizing-the-query":{"tf":1.0}},"df":4}}}},"d":{"docs":{},"df":0,"i":{"docs":{},"df":0,"d":{"docs":{"traits/resolution.html#candidate-assembly":{"tf":1.0},"method-lookup.html#candidate-search":{"tf":1.0},"method-lookup.html#candidate-assembly":{"tf":1.0}},"df":3}}}},"c":{"docs":{},"df":0,"h":{"docs":{"traits/caching.html#where-clauses-and-the-local-vs-global-cache":{"tf":1.0},"traits/caching.html#caching-and-subtle-considerations-therewith":{"tf":1.0}},"df":2}},"u":{"docs":{},"df":0,"s":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{"mir/regionck.html#causal-tracking":{"tf":1.0}},"df":1}}}}},"l":{"docs":{},"df":0,"a":{"docs":{},"df":0,"u":{"docs":{},"df":0,"s":{"docs":{"traits/caching.html#where-clauses-and-the-local-vs-global-cache":{"tf":1.0},"traits/lowering-rules.html#lowering-where-clauses":{"tf":1.0},"traits/lowering-rules.html#transforming-the-lowered-where-clauses":{"tf":1.0},"traits/goals-and-clauses.html#goals-and-clauses-meta-structure":{"tf":1.0},"traits/goals-and-clauses.html#goals-and-clauses":{"tf":1.0},"traits/lowering-to-logic.html#type-checking-generic-functions-beyond-horn-clauses":{"tf":1.0}},"df":6}}},"o":{"docs":{},"df":0,"s":{"docs":{},"df":0,"u":{"docs":{},"df":0,"r":{"docs":{"mir/regionck.html#closures":{"tf":1.0}},"df":1}}}},"e":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{"rustdoc.html#from-clean-to-crate":{"tf":1.0},"rustdoc.html#from-crate-to-clean":{"tf":1.0}},"df":2}}}}},"q":{"docs":{},"df":0,"u":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{},"df":0,"i":{"docs":{},"df":0,"f":{"docs":{},"df":0,"i":{"docs":{"appendix/background.html#what-is-universally-quantified-what-about-existentially-quantified":{"tf":1.4142135623730952}},"df":1}}}}}},"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{"incremental-compilation.html#the-query-dag":{"tf":1.0},"traits/canonicalization.html#executing-the-query":{"tf":1.0},"query.html#invoking-queries":{"tf":1.0},"traits/canonicalization.html#canonicalizing-the-query-result":{"tf":1.0},"query.html#queries-demand-driven-compilation":{"tf":1.0},"traits/canonical-queries.html#a-trait-query-in-rustc":{"tf":1.0},"query.html#cycles-between-queries":{"tf":1.0},"traits/canonical-queries.html#the-traditional-interactive-prolog-query":{"tf":1.0},"query.html#how-the-compiler-executes-a-query":{"tf":1.0},"query.html#adding-a-new-kind-of-query":{"tf":1.0},"traits/canonical-queries.html#canonical-queries":{"tf":1.0},"traits/canonicalization.html#canonicalizing-the-query":{"tf":1.0},"traits/lowering-module.html#the--program_clauses_for--query":{"tf":1.0},"traits/canonicalization.html#processing-the-canonicalized-query-result":{"tf":1.0}},"df":14}}}}},"l":{"docs":{},"df":0,"e":{"docs":{},"df":0,"v":{"docs":{},"df":0,"e":{"docs":{},"df":0,"l":{"docs":{"mir/index.html#the-mir-mid-level-ir":{"tf":1.0},"high-level-overview.html#high-level-overview-of-the-compiler-source":{"tf":1.0}},"df":2}}},"a":{"docs":{},"df":0,"k":{"docs":{"traits/hrtb.html#basic-matching-and-skolemization-leaks":{"tf":1.0}},"df":1}},"x":{"docs":{},"df":0,"i":{"docs":{},"df":0,"c":{"docs":{"type-inference.html#lexical-region-resolution":{"tf":1.0}},"df":1}}},"n":{"docs":{},"df":0,"g":{"docs":{},"df":0,"t":{"docs":{},"df":0,"h":{"docs":{"conventions.html#line-length":{"tf":1.0}},"df":1}}}}},"i":{"docs":{},"df":0,"f":{"docs":{},"df":0,"e":{"docs":{},"df":0,"t":{"docs":{},"df":0,"i":{"docs":{},"df":0,"m":{"docs":{"ty.html#the-tcx-and-how-it-uses-lifetimes":{"tf":1.0},"variance.html#variance-of-type-and-lifetime-parameters":{"tf":1.0},"rustc-driver.html#a-note-on-lifetimes":{"tf":1.0}},"df":3}}}}},"n":{"docs":{},"df":0,"t":{"docs":{"diag.html#edition-gated-lints":{"tf":1.0},"diag.html#lint-groups":{"tf":1.0},"diag.html#lints":{"tf":1.0},"diag.html#declaring-a-lint":{"tf":1.0}},"df":4},"e":{"docs":{"conventions.html#line-length":{"tf":1.0}},"df":1}}},"o":{"docs":{},"df":0,"w":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"traits/lowering-rules.html#lowering-impl-items":{"tf":1.0},"traits/lowering-module.html#the-lowering-module-in-rustc":{"tf":1.0},"traits/chalk-overview.html#lowering":{"tf":1.0},"traits/lowering-rules.html#lowering-impls":{"tf":1.0},"traits/lowering-rules.html#lowering-rules":{"tf":1.0},"traits/lowering-rules.html#lowering-trait-items":{"tf":1.0},"traits/lowering-to-logic.html#lowering-to-logic":{"tf":1.0},"traits/lowering-rules.html#transforming-the-lowered-where-clauses":{"tf":1.0},"traits/lowering-rules.html#lowering-where-clauses":{"tf":1.0},"traits/lowering-rules.html#lowering-traits":{"tf":1.0},"traits/lowering-rules.html#lowering-function-and-constant-declarations":{"tf":1.0}},"df":11}}},"c":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{"traits/caching.html#where-clauses-and-the-local-vs-global-cache":{"tf":1.0}},"df":1}}},"o":{"docs":{},"df":0,"k":{"docs":{},"df":0,"u":{"docs":{},"df":0,"p":{"docs":{"method-lookup.html#method-lookup":{"tf":1.0}},"df":1}}}},"g":{"docs":{"compiler-debugging.html#expensive-operations-in-logs":{"tf":1.0},"compiler-debugging.html#logging-etiquette":{"tf":1.0},"compiler-debugging.html#getting-logging-output":{"tf":1.0}},"df":3,"i":{"docs":{},"df":0,"c":{"docs":{"traits/lowering-to-logic.html#lowering-to-logic":{"tf":1.0},"traits/lowering-to-logic.html#rust-traits-and-logic":{"tf":1.0}},"df":2}}}},"l":{"docs":{},"df":0,"v":{"docs":{},"df":0,"m":{"docs":{"trans.html#generating-llvm-ir":{"tf":1.0},"compiler-debugging.html#debugging-llvm":{"tf":1.0}},"df":2}}}},"i":{"docs":{},"df":0,"d":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{},"df":0,"i":{"docs":{},"df":0,"f":{"docs":{},"df":0,"i":{"docs":{"hir.html#identifiers-in-the-hir":{"tf":1.0}},"df":1}}}}}}},"n":{"docs":{},"df":0,"f":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"type-inference.html#inference-variables":{"tf":1.0},"type-inference.html#creating-an-inference-context":{"tf":1.0},"type-inference.html#type-inference":{"tf":1.0}},"df":3}},"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"r":{"docs":{},"df":0,"u":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{},"df":0,"u":{"docs":{},"df":0,"r":{"docs":{"tests/intro.html#testing-infrastructure":{"tf":1.0}},"df":1}}}}}}}}}}},"t":{"docs":{},"df":0,"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"d":{"docs":{},"df":0,"u":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{"compiletest.html#introduction":{"tf":1.0},"mir/index.html#introduction-to-mir":{"tf":1.0}},"df":2}}}}}},"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{"traits/canonical-queries.html#the-traditional-interactive-prolog-query":{"tf":1.0}},"df":1}}},"p":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"t":{"docs":{"miri.html#interpretation":{"tf":1.0}},"df":1}}}},"m":{"docs":{},"df":0,"e":{"docs":{},"df":0,"d":{"docs":{},"df":0,"i":{"docs":{"traits/chalk-overview.html#intermediate-representation-ir":{"tf":1.0}},"df":1}}}}},"g":{"docs":{},"df":0,"r":{"docs":{"traits/associated-types.html#integration-with-unification":{"tf":1.0}},"df":1}}}},"d":{"docs":{},"df":0,"e":{"docs":{},"df":0,"x":{"docs":{"appendix/code-index.html#appendix-d-code-index":{"tf":1.0}},"df":1}},"i":{"docs":{},"df":0,"v":{"docs":{},"df":0,"i":{"docs":{},"df":0,"d":{"docs":{},"df":0,"u":{"docs":{"tests/running.html#running-an-individual-test":{"tf":1.0}},"df":1}}}}}},"v":{"docs":{},"df":0,"o":{"docs":{},"df":0,"k":{"docs":{"query.html#invoking-queries":{"tf":1.0}},"df":1}}},"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{"incrcomp-debugging.html#tracking-down-incorrect-edges":{"tf":1.0}},"df":1}}}}},"m":{"docs":{},"df":0,"p":{"docs":{},"df":0,"l":{"docs":{},"df":0,"e":{"docs":{},"df":0,"t":{"docs":{"traits/goals-and-clauses.html#incomplete-chapter":{"tf":1.0}},"df":1}}}}}},"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"m":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{"incremental-compilation.html#incremental-compilation":{"tf":1.0}},"df":1}}}}}}}},"g":{"docs":{},"df":0,"n":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{"tests/adding.html#ignoring-tests":{"tf":1.0}},"df":1}}}},"m":{"docs":{},"df":0,"p":{"docs":{},"df":0,"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"v":{"docs":{"incremental-compilation.html#improvements-to-the-basic-algorithm":{"tf":1.0}},"df":1}}},"l":{"docs":{"traits/lowering-rules.html#lowering-impl-items":{"tf":1.0},"traits/lowering-rules.html#lowering-impls":{"tf":1.0}},"df":2,"i":{"docs":{"traits/implied-bounds.html#implied-bounds":{"tf":1.0}},"df":1},"e":{"docs":{},"df":0,"m":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{"mir/passes.html#implementing-and-registering-a-pass":{"tf":1.0},"compiletest.html#implementing-the-behavior-change":{"tf":1.0}},"df":2}}}}}},"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"t":{"docs":{"ty.html#import-conventions":{"tf":1.0}},"df":1}}}},"a":{"docs":{},"df":0,"g":{"docs":{"tests/intro.html#testing-with-docker-images":{"tf":1.0}},"df":1}}},"'":{"docs":{"rustdoc.html#dotting-is-and-crossing-ts":{"tf":1.0}},"df":1},"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"m":{"docs":{"traits/lowering-rules.html#lowering-impl-items":{"tf":1.0},"traits/lowering-rules.html#lowering-trait-items":{"tf":1.0}},"df":2}}},"r":{"docs":{"trans.html#generating-llvm-ir":{"tf":1.0},"traits/chalk-overview.html#intermediate-representation-ir":{"tf":1.0},"mir/index.html#the-mir-mid-level-ir":{"tf":1.0}},"df":3}},"r":{"docs":{},"df":0,"u":{"docs":{},"df":0,"n":{"docs":{"tests/running.html#running-an-individual-test":{"tf":1.0},"how-to-build-and-run.html#how-to-build-the-compiler-and-run-what-you-built":{"tf":1.0},"tests/running.html#running-a-subset-of-the-test-suites":{"tf":1.0},"how-to-build-and-run.html#running-xpy-and-building-a-stage1-compiler":{"tf":1.0},"tests/running.html#running-tests":{"tf":1.0}},"df":5},"s":{"docs":{},"df":0,"t":{"docs":{"traits/lowering-to-logic.html#rust-traits-and-logic":{"tf":1.0}},"df":1,"c":{"docs":{"traits/lowering-module.html#the-lowering-module-in-rustc":{"tf":1.0},"traits/canonical-queries.html#a-trait-query-in-rustc":{"tf":1.0},"tests/adding.html#header-commands-configuring-rustc":{"tf":1.0},"rustc-driver.html#the-rustc-driver":{"tf":1.0},"appendix/stupid-stats.html#appendix-a-a-tutorial-on-creating-a-drop-in-replacement-for-rustc":{"tf":1.0}},"df":5},"d":{"docs":{},"df":0,"o":{"docs":{},"df":0,"c":{"docs":{"rustdoc.html#the-walking-tour-of-rustdoc":{"tf":1.0}},"df":1}}},"u":{"docs":{},"df":0,"p":{"docs":{"how-to-build-and-run.html#creating-a-rustup-toolchain":{"tf":1.0}},"df":1}}}},"l":{"docs":{},"df":0,"e":{"docs":{"traits/chalk-overview.html#rules":{"tf":1.0},"traits/lowering-rules.html#lowering-rules":{"tf":1.0},"traits/lowering-rules.html#rule-names-and-cross-references":{"tf":1.0}},"df":3}}},"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"k":{"docs":{"traits/hrtb.html#higher-ranked-trait-bounds":{"tf":1.0},"traits/hrtb.html#higher-ranked-trait-obligations":{"tf":1.0}},"df":2}}},"i":{"docs":{},"df":0,"b":{"docs":{"name-resolution.html#scopes-and-ribs":{"tf":1.0}},"df":1}},"e":{"docs":{},"df":0,"f":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"traits/lowering-rules.html#rule-names-and-cross-references":{"tf":1.0},"tests/adding.html#editing-and-updating-the-reference-files":{"tf":1.0}},"df":2}}},"g":{"docs":{},"df":0,"i":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{"mir/regionck.html#mir-based-region-checking-nll":{"tf":1.0},"mir/regionck.html#extending-the-universal-regions-check":{"tf":1.0},"appendix/background.html#what-is-a-free-region-or-a-free-variable-what-about-bound-region":{"tf":1.4142135623730952},"mir/regionck.html#universal-regions":{"tf":1.0},"mir/regionck.html#region-variables-and-constraints":{"tf":1.0},"type-inference.html#region-constraints":{"tf":1.0},"traits/regions.html#region-constraints":{"tf":1.0},"type-inference.html#lexical-region-resolution":{"tf":1.0},"mir/regionck.html#universes-and-skolemized-region-elements":{"tf":1.0},"type-inference.html#extracting-region-constraints":{"tf":1.0},"mir/regionck.html#representing-the-values-of-a-region-variable":{"tf":1.0}},"df":11}},"s":{"docs":{},"df":0,"t":{"docs":{"mir/passes.html#implementing-and-registering-a-pass":{"tf":1.0}},"df":1}}}},"v":{"docs":{},"df":0,"i":{"docs":{},"df":0,"s":{"docs":{"tests/adding.html#revisions":{"tf":1.0}},"df":1}}},"p":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{"ty.html#the--ty--module-representing-types":{"tf":1.0},"mir/index.html#representing-constants":{"tf":1.0},"mir/regionck.html#representing-the-values-of-a-region-variable":{"tf":1.0}},"df":3,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{"traits/chalk-overview.html#intermediate-representation-ir":{"tf":1.0}},"df":1}}}}}},"l":{"docs":{},"df":0,"a":{"docs":{},"df":0,"c":{"docs":{"appendix/stupid-stats.html#appendix-a-a-tutorial-on-creating-a-drop-in-replacement-for-rustc":{"tf":1.0}},"df":1}}}},"s":{"docs":{},"df":0,"u":{"docs":{},"df":0,"l":{"docs":{},"df":0,"t":{"docs":{"traits/canonicalization.html#canonicalizing-the-query-result":{"tf":1.0},"tests/adding.html#tests-that-do-not-result-in-compile-errors":{"tf":1.0},"traits/canonicalization.html#processing-the-canonicalized-query-result":{"tf":1.0}},"df":3}}},"o":{"docs":{},"df":0,"l":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{"name-resolution.html#name-resolution":{"tf":1.0},"traits/resolution.html#trait-resolution-old-style":{"tf":1.0},"variance.html#trait-variance-and-vtable-resolution":{"tf":1.0},"type-inference.html#lexical-region-resolution":{"tf":1.0}},"df":4}}},"u":{"docs":{},"df":0,"r":{"docs":{},"df":0,"c":{"docs":{"traits/chalk-overview.html#resources":{"tf":1.0}},"df":1}}}}},"a":{"docs":{},"df":0,"d":{"docs":{"tests/intro.html#further-reading":{"tf":1.0}},"df":1}}}},"f":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{"mir/regionck.html#final-example":{"tf":1.0}},"df":1}}},"l":{"docs":{},"df":0,"e":{"docs":{"compiletest.html#adding-a-new-test-file":{"tf":1.0},"tests/adding.html#editing-and-updating-the-reference-files":{"tf":1.0},"compiler-debugging.html#formatting-graphviz-output-dot-files":{"tf":1.0}},"df":3}}},"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"e":{"docs":{"appendix/background.html#what-is-a-free-region-or-a-free-variable-what-about-bound-region":{"tf":1.4142135623730952}},"df":1}},"a":{"docs":{},"df":0,"m":{"docs":{},"df":0,"e":{"docs":{},"df":0,"w":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"k":{"docs":{"tests/intro.html#the-compiler-testing-framework":{"tf":1.0}},"df":1}}}}}}}},"u":{"docs":{},"df":0,"n":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{},"df":0,"i":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{"traits/lowering-rules.html#function-and-constant-values":{"tf":1.0},"traits/lowering-to-logic.html#type-checking-generic-functions-beyond-horn-clauses":{"tf":1.0},"traits/lowering-to-logic.html#type-checking-normal-functions":{"tf":1.0},"traits/lowering-rules.html#lowering-function-and-constant-declarations":{"tf":1.0}},"df":4}}}}}},"r":{"docs":{},"df":0,"t":{"docs":{},"df":0,"h":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"tests/intro.html#further-reading":{"tf":1.0}},"df":1}}}}}},"o":{"docs":{},"df":0,"o":{"docs":{},"df":0,"t":{"docs":{},"df":0,"n":{"docs":{},"df":0,"o":{"docs":{},"df":0,"t":{"docs":{"incremental-compilation.html#footnotes":{"tf":1.0}},"df":1}}}}},"r":{"docs":{},"df":0,"m":{"docs":{},"df":0,"e":{"docs":{},"df":0,"d":{"docs":{"traits/wf.html#well-formedness-checking":{"tf":1.0},"traits/chalk-overview.html#well-formedness-checks":{"tf":1.0}},"df":2}},"a":{"docs":{},"df":0,"t":{"docs":{"conventions.html#formatting-and-the-tidy-script":{"tf":1.0},"compiler-debugging.html#formatting-graphviz-output-dot-files":{"tf":1.0}},"df":2}}},"g":{"docs":{},"df":0,"e":{"docs":{},"df":0,"t":{"docs":{"conventions.html#use-todo-comments-for-things-you-dont-want-to-forget":{"tf":1.0}},"df":1}}}}},"l":{"docs":{},"df":0,"o":{"docs":{},"df":0,"w":{"docs":{"appendix/background.html#what-is-a-control-flow-graph":{"tf":1.0}},"df":1}}}},"o":{"docs":{},"df":0,"v":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"v":{"docs":{},"df":0,"i":{"docs":{},"df":0,"e":{"docs":{},"df":0,"w":{"docs":{"traits/chalk-overview.html#an-overview-of-chalk":{"tf":1.0},"appendix/stupid-stats.html#overview-of-the-compilation-process":{"tf":1.0},"traits/resolution.html#overview":{"tf":1.0},"high-level-overview.html#high-level-overview-of-the-compiler-source":{"tf":1.0}},"df":4}}}},"a":{"docs":{},"df":0,"l":{"docs":{"name-resolution.html#overall-strategy":{"tf":1.0}},"df":1}}}}},"b":{"docs":{},"df":0,"j":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{"variance.html#variance-and-object-types":{"tf":1.0}},"df":1}}}},"l":{"docs":{},"df":0,"i":{"docs":{},"df":0,"g":{"docs":{"traits/hrtb.html#higher-ranked-trait-obligations":{"tf":1.0},"type-inference.html#subtyping-obligations":{"tf":1.0}},"df":2}}}},"l":{"docs":{},"df":0,"d":{"docs":{"traits/resolution.html#trait-resolution-old-style":{"tf":1.0}},"df":1}},"u":{"docs":{},"df":0,"t":{"docs":{"hir.html#out-of-band-storage-and-the--crate--type":{"tf":1.0}},"df":1,"l":{"docs":{},"df":0,"i":{"docs":{},"df":0,"v":{"docs":{"mir/regionck.html#skolemization-and-outlives-constraints":{"tf":1.0}},"df":1}}},"p":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{"compiler-debugging.html#getting-logging-output":{"tf":1.0},"compiler-debugging.html#formatting-graphviz-output-dot-files":{"tf":1.0}},"df":2}}}}},"p":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"compiler-debugging.html#expensive-operations-in-logs":{"tf":1.0}},"df":1}},"t":{"docs":{},"df":0,"i":{"docs":{},"df":0,"m":{"docs":{"mir/optimizations.html#mir-optimizations":{"tf":1.0}},"df":1}}}}},"m":{"docs":{},"df":0,"o":{"docs":{},"df":0,"d":{"docs":{},"df":0,"u":{"docs":{},"df":0,"l":{"docs":{"traits/lowering-module.html#the-lowering-module-in-rustc":{"tf":1.0},"ty.html#the--ty--module-representing-types":{"tf":1.0}},"df":2}}}},"e":{"docs":{},"df":0,"t":{"docs":{},"df":0,"a":{"docs":{"traits/goals-and-clauses.html#goals-and-clauses-meta-structure":{"tf":1.0}},"df":1},"h":{"docs":{},"df":0,"o":{"docs":{},"df":0,"d":{"docs":{"method-lookup.html#method-lookup":{"tf":1.0}},"df":1}}}},"s":{"docs":{},"df":0,"s":{"docs":{},"df":0,"a":{"docs":{},"df":0,"g":{"docs":{"diag.html#error-messages":{"tf":1.0}},"df":1}}}}},"i":{"docs":{},"df":0,"r":{"docs":{"mir/optimizations.html#mir-optimizations":{"tf":1.0},"mir/index.html#introduction-to-mir":{"tf":1.0},"mir/index.html#the-mir-mid-level-ir":{"tf":1.0},"mir/regionck.html#the-mir-type-check":{"tf":1.0},"mir/construction.html#mir-construction":{"tf":1.0},"mir/borrowck.html#mir-borrow-check":{"tf":1.0},"mir/index.html#key-mir-vocabulary":{"tf":1.0},"mir/passes.html#mir-passes":{"tf":1.0},"mir/passes.html#seeing-how-the-mir-changes-as-the-compiler-executes":{"tf":1.0},"mir/visitor.html#mir-visitor":{"tf":1.0},"mir/regionck.html#mir-based-region-checking-nll":{"tf":1.0},"mir/index.html#mir-data-types":{"tf":1.0}},"df":12,"i":{"docs":{"miri.html#miri":{"tf":1.0}},"df":1}},"d":{"docs":{"mir/index.html#the-mir-mid-level-ir":{"tf":1.0}},"df":1}},"a":{"docs":{},"df":0,"p":{"docs":{"hir.html#the-hir-map":{"tf":1.0}},"df":1},"r":{"docs":{},"df":0,"k":{"docs":{"incremental-compilation.html#the-try-mark-green-algorithm":{"tf":1.0}},"df":1}},"n":{"docs":{},"df":0,"a":{"docs":{},"df":0,"g":{"docs":{"variance.html#dependency-graph-management":{"tf":1.0}},"df":1}}},"j":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{"mir/borrowck.html#major-phases-of-the-borrow-checker":{"tf":1.0},"traits/resolution.html#major-concepts":{"tf":1.0}},"df":2}}},"i":{"docs":{},"df":0,"n":{"docs":{"high-level-overview.html#the-main-stages-of-compilation":{"tf":1.0}},"df":1}},"t":{"docs":{},"df":0,"c":{"docs":{},"df":0,"h":{"docs":{"conventions.html#prefer-exhaustive-matches":{"tf":1.0},"traits/hrtb.html#basic-matching-and-skolemization-leaks":{"tf":1.0}},"df":2}}},"c":{"docs":{},"df":0,"r":{"docs":{},"df":0,"o":{"docs":{"macro-expansion.html#procedural-macros":{"tf":1.0},"macro-expansion.html#the-macro-parser":{"tf":1.0},"macro-expansion.html#macro-expansion":{"tf":1.0}},"df":3}}}}},"u":{"docs":{},"df":0,"s":{"docs":{"ty.html#the-tcx-and-how-it-uses-lifetimes":{"tf":1.0},"conventions.html#using-crates-from-cratesio":{"tf":1.0},"conventions.html#use-todo-comments-for-things-you-dont-want-to-forget":{"tf":1.0}},"df":3},"i":{"docs":{"tests/adding.html#guide-to-the-ui-tests":{"tf":1.0}},"df":1},"p":{"docs":{"rustdoc.html#other-tricks-up-its-sleeve":{"tf":1.0}},"df":1,"d":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{"tests/adding.html#editing-and-updating-the-reference-files":{"tf":1.0}},"df":1}}}},"n":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{"traits/lowering-module.html#unit-tests":{"tf":1.0}},"df":1},"v":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"s":{"docs":{"mir/regionck.html#what-is-a-universe":{"tf":1.0},"mir/regionck.html#skolemization-and-universes":{"tf":1.0},"mir/regionck.html#extending-the-universal-regions-check":{"tf":1.0},"mir/regionck.html#universes-and-skolemized-region-elements":{"tf":1.0},"appendix/background.html#what-is-universally-quantified-what-about-existentially-quantified":{"tf":1.0},"mir/regionck.html#universal-regions":{"tf":1.0}},"df":6}}}},"f":{"docs":{"traits/associated-types.html#integration-with-unification":{"tf":1.0}},"df":1}}}},"w":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"k":{"docs":{"ty.html#allocating-and-working-with-types":{"tf":1.0}},"df":1}}},"e":{"docs":{},"df":0,"l":{"docs":{},"df":0,"l":{"docs":{"traits/chalk-overview.html#well-formedness-checks":{"tf":1.0},"traits/wf.html#well-formedness-checking":{"tf":1.0}},"df":2}}},"a":{"docs":{},"df":0,"l":{"docs":{},"df":0,"k":{"docs":{"rustdoc.html#the-walking-tour-of-rustdoc":{"tf":1.0}},"df":1,"t":{"docs":{},"df":0,"h":{"docs":{},"df":0,"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"u":{"docs":{},"df":0,"g":{"docs":{},"df":0,"h":{"docs":{"walkthrough.html#walkthrough-a-typical-contribution":{"tf":1.0}},"df":1}}}}}}}}},"n":{"docs":{},"df":0,"t":{"docs":{"conventions.html#use-todo-comments-for-things-you-dont-want-to-forget":{"tf":1.0}},"df":1}}}},"b":{"docs":{"appendix/background.html#appendix-b-background-topics":{"tf":1.0}},"df":1,"o":{"docs":{},"df":0,"d":{"docs":{},"df":0,"i":{"docs":{"hir.html#hir-bodies":{"tf":1.0}},"df":1}},"u":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{"traits/hrtb.html#higher-ranked-trait-bounds":{"tf":1.0},"appendix/background.html#what-is-a-free-region-or-a-free-variable-what-about-bound-region":{"tf":1.0},"traits/implied-bounds.html#implied-bounds":{"tf":1.0}},"df":3}}},"r":{"docs":{},"df":0,"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"w":{"docs":{"mir/borrowck.html#mir-borrow-check":{"tf":1.0},"mir/borrowck.html#major-phases-of-the-borrow-checker":{"tf":1.0}},"df":2}}}}},"l":{"docs":{},"df":0,"o":{"docs":{},"df":0,"g":{"docs":{"traits/chalk-overview.html#blog-posts":{"tf":1.0}},"df":1}}},"e":{"docs":{},"df":0,"y":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{"ty.html#beyond-types-other-kinds-of-arena-allocated-data-structures":{"tf":1.0},"traits/lowering-to-logic.html#type-checking-generic-functions-beyond-horn-clauses":{"tf":1.0}},"df":2}}}},"h":{"docs":{},"df":0,"a":{"docs":{},"df":0,"v":{"docs":{},"df":0,"i":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{"compiletest.html#implementing-the-behavior-change":{"tf":1.0}},"df":1}}}}}},"t":{"docs":{},"df":0,"w":{"docs":{},"df":0,"e":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{"query.html#cycles-between-queries":{"tf":1.0}},"df":1}}}}}},"u":{"docs":{},"df":0,"i":{"docs":{},"df":0,"l":{"docs":{},"df":0,"d":{"docs":{"how-to-build-and-run.html#how-to-build-the-compiler-and-run-what-you-built":{"tf":1.0},"how-to-build-and-run.html#running-xpy-and-building-a-stage1-compiler":{"tf":1.0}},"df":2},"t":{"docs":{"how-to-build-and-run.html#how-to-build-the-compiler-and-run-what-you-built":{"tf":1.0}},"df":1}}}},"a":{"docs":{},"df":0,"c":{"docs":{},"df":0,"k":{"docs":{"mir/regionck.html#back-to-our-example":{"tf":1.0}},"df":1,"g":{"docs":{},"df":0,"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"u":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{"appendix/background.html#appendix-b-background-topics":{"tf":1.0}},"df":1}}}}}},"t":{"docs":{},"df":0,"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"c":{"docs":{"compiler-debugging.html#getting-a-backtrace-for-errors":{"tf":1.0},"compiler-debugging.html#getting-a-backtrace":{"tf":1.0}},"df":2}}}}}},"s":{"docs":{},"df":0,"e":{"docs":{"mir/regionck.html#mir-based-region-checking-nll":{"tf":1.0}},"df":1},"i":{"docs":{},"df":0,"c":{"docs":{"incremental-compilation.html#the-basic-algorithm":{"tf":1.0},"incremental-compilation.html#improvements-to-the-basic-algorithm":{"tf":1.0},"traits/hrtb.html#basic-matching-and-skolemization-leaks":{"tf":1.0}},"df":3}}},"n":{"docs":{},"df":0,"d":{"docs":{"hir.html#out-of-band-storage-and-the--crate--type":{"tf":1.0}},"df":1}}},"i":{"docs":{},"df":0,"b":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{},"df":0,"o":{"docs":{},"df":0,"g":{"docs":{},"df":0,"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"p":{"docs":{},"df":0,"h":{"docs":{},"df":0,"i":{"docs":{"traits/bibliography.html#bibliography":{"tf":1.0}},"df":1}}}}}}}}}}}},"v":{"docs":{},"df":0,"s":{"docs":{"conventions.html#tabs-vs-spaces":{"tf":1.0},"traits/caching.html#where-clauses-and-the-local-vs-global-cache":{"tf":1.0}},"df":2},"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"c":{"docs":{"variance.html#trait-variance-and-vtable-resolution":{"tf":1.0},"variance.html#variance-of-type-and-lifetime-parameters":{"tf":1.0},"appendix/background.html#what-is-co--and-contra-variance":{"tf":1.0},"variance.html#variance-and-associated-types":{"tf":1.0},"variance.html#variance-and-object-types":{"tf":1.0},"variance.html#addendum-variance-on-traits":{"tf":1.0}},"df":6}},"b":{"docs":{},"df":0,"l":{"docs":{"appendix/background.html#what-is-a-free-region-or-a-free-variable-what-about-bound-region":{"tf":1.0},"mir/regionck.html#representing-the-values-of-a-region-variable":{"tf":1.0},"mir/regionck.html#region-variables-and-constraints":{"tf":1.0},"type-inference.html#inference-variables":{"tf":1.0}},"df":4}}}}},"l":{"docs":{},"df":0,"u":{"docs":{"traits/lowering-rules.html#function-and-constant-values":{"tf":1.0},"mir/regionck.html#representing-the-values-of-a-region-variable":{"tf":1.0},"traits/lowering-rules.html#associated-type-values":{"tf":1.0}},"df":3}}},"i":{"docs":{},"df":0,"s":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{"mir/visitor.html#mir-visitor":{"tf":1.0}},"df":1}}}}}},"o":{"docs":{},"df":0,"c":{"docs":{},"df":0,"a":{"docs":{},"df":0,"b":{"docs":{},"df":0,"u":{"docs":{},"df":0,"l":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{"mir/index.html#key-mir-vocabulary":{"tf":1.0}},"df":1}}}}}}}}},"t":{"docs":{},"df":0,"a":{"docs":{},"df":0,"b":{"docs":{},"df":0,"l":{"docs":{"variance.html#trait-variance-and-vtable-resolution":{"tf":1.0}},"df":1}}}}},"e":{"docs":{},"df":0,"t":{"docs":{},"df":0,"i":{"docs":{},"df":0,"q":{"docs":{},"df":0,"u":{"docs":{},"df":0,"e":{"docs":{},"df":0,"t":{"docs":{},"df":0,"t":{"docs":{"compiler-debugging.html#logging-etiquette":{"tf":1.0}},"df":1}}}}}}},"n":{"docs":{},"df":0,"v":{"docs":{},"df":0,"i":{"docs":{},"df":0,"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{"param_env.html#parameter-environment":{"tf":1.0}},"df":1}}}}},"f":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"c":{"docs":{"type-inference.html#enforcing-equality--subtyping":{"tf":1.0}},"df":1}}}}},"m":{"docs":{},"df":0,"u":{"docs":{},"df":0,"l":{"docs":{"tests/intro.html#testing-on-emulators":{"tf":1.0}},"df":1}},"i":{"docs":{},"df":0,"t":{"docs":{"diag.html#emitting-diagnostics":{"tf":1.0}},"df":1}}},"r":{"docs":{},"df":0,"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{"tests/adding.html#error-annotations":{"tf":1.0},"tests/adding.html#tests-that-do-not-result-in-compile-errors":{"tf":1.0},"compiler-debugging.html#getting-a-backtrace-for-errors":{"tf":1.0},"diag.html#error-messages":{"tf":1.0}},"df":4}}}},"q":{"docs":{},"df":0,"u":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{"type-inference.html#enforcing-equality--subtyping":{"tf":1.0},"traits/associated-types.html#projection-equality":{"tf":1.0},"type-inference.html#trying-equality":{"tf":1.0},"traits/associated-types.html#equality-and-associated-types":{"tf":1.0}},"df":4}}}},"v":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{},"df":0,"u":{"docs":{"const-eval.html#constant-evaluation":{"tf":1.0}},"df":1}}}},"d":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{"tests/adding.html#editing-and-updating-the-reference-files":{"tf":1.0},"diag.html#edition-gated-lints":{"tf":1.0}},"df":2}},"g":{"docs":{"incrcomp-debugging.html#tracking-down-incorrect-edges":{"tf":1.0}},"df":1}},"l":{"docs":{},"df":0,"e":{"docs":{},"df":0,"m":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{"mir/regionck.html#universes-and-skolemized-region-elements":{"tf":1.0}},"df":1}}}}}},"x":{"docs":{},"df":0,"p":{"docs":{},"df":0,"l":{"docs":{},"df":0,"a":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{"tests/adding.html#comment-explaining-what-the-test-is-about":{"tf":1.0}},"df":1}}}},"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"s":{"docs":{"compiler-debugging.html#expensive-operations-in-logs":{"tf":1.0}},"df":1}}},"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"s":{"docs":{"macro-expansion.html#macro-expansion":{"tf":1.0}},"df":1}}}},"t":{"docs":{},"df":0,"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{"type-inference.html#extracting-region-constraints":{"tf":1.0}},"df":1}}}},"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{"mir/regionck.html#extending-the-universal-regions-check":{"tf":1.0}},"df":1}}}},"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{"mir/passes.html#seeing-how-the-mir-changes-as-the-compiler-executes":{"tf":1.0},"traits/canonicalization.html#executing-the-query":{"tf":1.0},"query.html#how-the-compiler-executes-a-query":{"tf":1.0}},"df":3}}}},"i":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{},"df":0,"i":{"docs":{"appendix/background.html#what-is-universally-quantified-what-about-existentially-quantified":{"tf":1.0}},"df":1}}}}}}},"h":{"docs":{},"df":0,"a":{"docs":{},"df":0,"u":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{"conventions.html#prefer-exhaustive-matches":{"tf":1.0}},"df":1}}}}},"a":{"docs":{},"df":0,"m":{"docs":{},"df":0,"p":{"docs":{},"df":0,"l":{"docs":{"mir/regionck.html#final-example":{"tf":1.0},"mir/regionck.html#back-to-our-example":{"tf":1.0},"mir/regionck.html#another-example":{"tf":1.0},"traits/caching.html#an-example":{"tf":1.0},"appendix/stupid-stats.html#an-example---stupid-stats":{"tf":1.0},"traits/canonical-queries.html#examples":{"tf":1.0},"macro-expansion.html#example":{"tf":1.0}},"df":7}}}}}},"k":{"docs":{},"df":0,"e":{"docs":{},"df":0,"y":{"docs":{"mir/index.html#key-mir-vocabulary":{"tf":1.0}},"df":1}},"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{"ty.html#beyond-types-other-kinds-of-arena-allocated-data-structures":{"tf":1.0},"tests/adding.html#what-kind-of-test-should-i-add":{"tf":1.0},"query.html#adding-a-new-kind-of-query":{"tf":1.0}},"df":3}}}},"d":{"docs":{"appendix/code-index.html#appendix-d-code-index":{"tf":1.0}},"df":1,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"l":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{"traits/lowering-rules.html#associated-type-declarations":{"tf":1.0},"traits/lowering-rules.html#lowering-function-and-constant-declarations":{"tf":1.0},"diag.html#declaring-a-lint":{"tf":1.0}},"df":3}}}},"b":{"docs":{},"df":0,"u":{"docs":{},"df":0,"g":{"docs":{"compiler-debugging.html#debugging-llvm":{"tf":1.0},"incrcomp-debugging.html#debugging-and-testing-dependencies":{"tf":1.0},"incrcomp-debugging.html#debugging-the-dependency-graph":{"tf":1.0},"compiler-debugging.html#debugging-the-compiler":{"tf":1.0}},"df":4}}},"m":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{"query.html#queries-demand-driven-compilation":{"tf":1.0}},"df":1}}}},"p":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{"incrcomp-debugging.html#testing-the-dependency-graph":{"tf":1.0},"incrcomp-debugging.html#debugging-the-dependency-graph":{"tf":1.0},"incrcomp-debugging.html#debugging-and-testing-dependencies":{"tf":1.0},"variance.html#dependency-graph-management":{"tf":1.0}},"df":4}}}},"r":{"docs":{},"df":0,"i":{"docs":{},"df":0,"v":{"docs":{"macro-expansion.html#custom-derive":{"tf":1.0}},"df":1}}}},"a":{"docs":{},"df":0,"t":{"docs":{},"df":0,"a":{"docs":{"ty.html#beyond-types-other-kinds-of-arena-allocated-data-structures":{"tf":1.0},"mir/index.html#mir-data-types":{"tf":1.0}},"df":2,"f":{"docs":{},"df":0,"l":{"docs":{},"df":0,"o":{"docs":{},"df":0,"w":{"docs":{"appendix/background.html#what-is-a-dataflow-analysis":{"tf":1.0}},"df":1}}}},"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"r":{"docs":{},"df":0,"u":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{},"df":0,"u":{"docs":{},"df":0,"r":{"docs":{"miri.html#datastructures":{"tf":1.0}},"df":1}}}}}}}}}},"g":{"docs":{"incremental-compilation.html#the-query-dag":{"tf":1.0}},"df":1}},"o":{"docs":{},"df":0,"m":{"docs":{},"df":0,"a":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{"traits/goals-and-clauses.html#domain-goals":{"tf":1.0}},"df":1}}}},"n":{"docs":{},"df":0,"'":{"docs":{},"df":0,"t":{"docs":{"conventions.html#use-todo-comments-for-things-you-dont-want-to-forget":{"tf":1.0}},"df":1}}},"t":{"docs":{"rustdoc.html#dotting-is-and-crossing-ts":{"tf":1.0},"compiler-debugging.html#formatting-graphviz-output-dot-files":{"tf":1.0}},"df":2},"c":{"docs":{},"df":0,"k":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"tests/intro.html#testing-with-docker-images":{"tf":1.0}},"df":1}}}},"w":{"docs":{},"df":0,"n":{"docs":{"incrcomp-debugging.html#tracking-down-incorrect-edges":{"tf":1.0}},"df":1}}},"r":{"docs":{},"df":0,"i":{"docs":{},"df":0,"v":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{"query.html#queries-demand-driven-compilation":{"tf":1.0}},"df":1},"r":{"docs":{"appendix/stupid-stats.html#the-driver-customisation-apis":{"tf":1.0},"rustc-driver.html#the-rustc-driver":{"tf":1.0}},"df":2}}}},"o":{"docs":{},"df":0,"p":{"docs":{"appendix/stupid-stats.html#appendix-a-a-tutorial-on-creating-a-drop-in-replacement-for-rustc":{"tf":1.0}},"df":1}}},"u":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{"traits/resolution.html#selection-during-translation":{"tf":1.0}},"df":1}},"m":{"docs":{},"df":0,"p":{"docs":{"incrcomp-debugging.html#dumping-the-graph":{"tf":1.0}},"df":1}}},"i":{"docs":{},"df":0,"a":{"docs":{},"df":0,"g":{"docs":{},"df":0,"n":{"docs":{},"df":0,"o":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{"diag.html#emitting-diagnostics":{"tf":1.0}},"df":1}}}}}}}},"a":{"docs":{},"df":0,"s":{"docs":{},"df":0,"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"m":{"docs":{},"df":0,"b":{"docs":{},"df":0,"l":{"docs":{"method-lookup.html#candidate-assembly":{"tf":1.0},"traits/resolution.html#candidate-assembly":{"tf":1.0}},"df":2}}}},"o":{"docs":{},"df":0,"c":{"docs":{},"df":0,"i":{"docs":{"traits/lowering-rules.html#associated-type-declarations":{"tf":1.0},"traits/associated-types.html#skolemized-associated-types":{"tf":1.0},"traits/associated-types.html#equality-and-associated-types":{"tf":1.0},"variance.html#variance-and-associated-types":{"tf":1.0},"traits/associated-types.html#associated-type-projection-and-normalization":{"tf":1.0},"traits/lowering-rules.html#associated-type-values":{"tf":1.0}},"df":6}}}}},"d":{"docs":{"tests/adding.html#adding-new-tests":{"tf":1.0},"query.html#adding-a-new-kind-of-query":{"tf":1.0},"compiletest.html#adding-a-new-header-command":{"tf":1.0},"compiletest.html#adding-a-new-test-file":{"tf":1.0}},"df":4,"d":{"docs":{"tests/adding.html#what-kind-of-test-should-i-add":{"tf":1.0}},"df":1,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{},"df":0,"u":{"docs":{},"df":0,"m":{"docs":{"variance.html#addendum-variance-on-traits":{"tf":1.0}},"df":1}}}}}}},"p":{"docs":{},"df":0,"i":{"docs":{"appendix/stupid-stats.html#the-driver-customisation-apis":{"tf":1.0}},"df":1},"p":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{},"df":0,"i":{"docs":{},"df":0,"x":{"docs":{"appendix/background.html#appendix-b-background-topics":{"tf":1.0},"appendix/glossary.html#appendix-c-glossary":{"tf":1.0},"appendix/code-index.html#appendix-d-code-index":{"tf":1.0},"appendix/stupid-stats.html#appendix-a-a-tutorial-on-creating-a-drop-in-replacement-for-rustc":{"tf":1.0}},"df":4}}}}}}},"n":{"docs":{},"df":0,"o":{"docs":{},"df":0,"t":{"docs":{},"df":0,"h":{"docs":{"mir/regionck.html#another-example":{"tf":1.0}},"df":1}}},"a":{"docs":{},"df":0,"l":{"docs":{},"df":0,"y":{"docs":{},"df":0,"s":{"docs":{},"df":0,"i":{"docs":{"appendix/background.html#what-is-a-dataflow-analysis":{"tf":1.0}},"df":1}}}}},"n":{"docs":{},"df":0,"o":{"docs":{},"df":0,"t":{"docs":{"tests/adding.html#error-annotations":{"tf":1.0}},"df":1}}}},"l":{"docs":{},"df":0,"g":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{},"df":0,"h":{"docs":{},"df":0,"m":{"docs":{"incremental-compilation.html#improvements-to-the-basic-algorithm":{"tf":1.0},"variance.html#the-algorithm":{"tf":1.0},"incremental-compilation.html#the-try-mark-green-algorithm":{"tf":1.0},"incremental-compilation.html#the-basic-algorithm":{"tf":1.0}},"df":4}}}}}}},"l":{"docs":{},"df":0,"o":{"docs":{},"df":0,"c":{"docs":{"ty.html#allocating-and-working-with-types":{"tf":1.0},"ty.html#beyond-types-other-kinds-of-arena-allocated-data-structures":{"tf":1.0},"miri.html#allocations":{"tf":1.0}},"df":3}}}},"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"a":{"docs":{"ty.html#beyond-types-other-kinds-of-arena-allocated-data-structures":{"tf":1.0}},"df":1}}}}}}}},"documentStore":{"save":true,"docs":{"traits/lowering-rules.html#lowering-impl-items":{"id":"traits/lowering-rules.html#lowering-impl-items","body":"","title":"Lowering impl items","breadcrumbs":"Trait solving (new-style) » Lowering impl items"},"mir/regionck.html#causal-tracking":{"breadcrumbs":"The MIR (Mid-level IR) » MIR borrowck » Causal tracking","body":"to be written -- describe how we can extend the values of a variable with causal tracking etc","title":"Causal tracking","id":"mir/regionck.html#causal-tracking"},"rustdoc.html#from-soup-to-nuts":{"body":"(alternate title: \"An unbroken thread that stretches from those first Cell s to us\" ) It's important to note that the AST cleaning can ask the compiler for information (crucially, DocContext contains a TyCtxt ), but page rendering cannot. The clean::Crate created within run_core is passed outside the compiler context before being handed to html::render::run . This means that a lot of the \"supplementary data\" that isn't immediately available inside an item's definition, like which trait is the Deref trait used by the language, needs to be collected during cleaning, stored in the DocContext , and passed along to the SharedContext during HTML rendering. This manifests as a bunch of shared state, context variables, and RefCell s. Also of note is that some items that come from \"asking the compiler\" don't go directly into the DocContext - for example, when loading items from a foreign crate, rustdoc will ask about trait implementations and generate new Item s for the impls based on that information. This goes directly into the returned Crate rather than roundabout through the DocContext . This way, these implementations can be collected alongside the others, right before rendering the HTML.","breadcrumbs":"The Rustc Driver » From soup to nuts","title":"From soup to nuts","id":"rustdoc.html#from-soup-to-nuts"},"traits/lowering-rules.html#rule-names-and-cross-references":{"body":"Each of these lowering rules is given a name, documented with a comment like so: // Rule Foo-Bar-Baz you can also search through the librustc_traits crate in rustc to find the corresponding rules from the implementation.","breadcrumbs":"Trait solving (new-style) » Rule names and cross-references","id":"traits/lowering-rules.html#rule-names-and-cross-references","title":"Rule names and cross-references"},"traits/resolution.html#selection":{"title":"Selection","id":"traits/resolution.html#selection","body":"Selection is the process of deciding whether an obligation can be resolved and, if so, how it is to be resolved (via impl, where clause, etc). The main interface is the select() function, which takes an obligation and returns a SelectionResult . There are three possible outcomes: Ok(Some(selection)) – yes, the obligation can be resolved, and selection indicates how. If the impl was resolved via an impl, then selection may also indicate nested obligations that are required by the impl. Ok(None) – we are not yet sure whether the obligation can be resolved or not. This happens most commonly when the obligation contains unbound type variables. Err(err) – the obligation definitely cannot be resolved due to a type error or because there are no impls that could possibly apply. The basic algorithm for selection is broken into two big phases: candidate assembly and confirmation. Note that because of how lifetime inference works, it is not possible to give back immediate feedback as to whether a unification or subtype relationship between lifetimes holds or not. Therefore, lifetime matching is not considered during selection. This is reflected in the fact that subregion assignment is infallible. This may yield lifetime constraints that will later be found to be in error (in contrast, the non-lifetime-constraints have already been checked during selection and can never cause an error, though naturally they may lead to other errors downstream).","breadcrumbs":"Selection"},"conventions.html#using-crates-from-cratesio":{"body":"It is allowed to use crates from crates.io, though external dependencies should not be added gratuitously. All such crates must have a suitably permissive license. There is an automatic check which inspects the Cargo metadata to ensure this.","id":"conventions.html#using-crates-from-cratesio","title":"Using crates from crates.io","breadcrumbs":"Using crates from crates.io"},"traits/canonicalization.html#processing-the-canonicalized-query-result":{"title":"Processing the canonicalized query result","id":"traits/canonicalization.html#processing-the-canonicalized-query-result","breadcrumbs":"Trait solving (new-style) » Canonical queries » Processing the canonicalized query result","body":"In the previous section we produced a canonical query result. We now have to apply that result in our original context. If you recall, way back in the beginning, we were trying to prove this query: ?A: Foo<'static, ?B> We canonicalized that into this: for<T,L,T> { ?0: Foo<'?1, ?2> } and now we got back a canonical response: for<T, L> { certainty: Proven, var_values: [Vec<?0>, '?1, ?2] region_constraints: [?2: '?1], value: (),\n} We now want to apply that response to our context. Conceptually, how we do that is to (a) instantiate each of the canonical variables in the result with a fresh inference variable, (b) unify the values in the result with the original values, and then (c) record the region constraints for later. Doing step (a) would yield a result of { certainty: Proven, var_values: [Vec<?C>, '?D, ?C] ^^ ^^^ fresh inference variables region_constraints: [?C: '?D], value: (),\n} Step (b) would then unify: ?A with Vec<?C>\n'static with '?D\n?B with ?C And finally the region constraint of ?C: 'static would be recorded for later verification. (What we actually do is a mildly optimized variant of that: Rather than eagerly instantiating all of the canonical values in the result with variables, we instead walk the vector of values, looking for cases where the value is just a canonical variable. In our example, values[2] is ?C , so that means we can deduce that ?C := ?B and '?D := 'static`. This gives us a partial set of values. Anything for which we do not find a value, we create an inference variable.)"},"miri.html#miri":{"breadcrumbs":"Constant evaluation » Miri","id":"miri.html#miri","title":"Miri","body":"Miri ( MIR I nterpreter) is a virtual machine for executing MIR without compiling to machine code. It is usually invoked via tcx.const_eval . If you start out with a constant const FOO: usize = 1 << 12; rustc doesn't actually invoke anything until the constant is either used or placed into metadata. Once you have a use-site like type Foo = [u8; FOO - 42]; The compiler needs to figure out the length of the array before being able to create items that use the type (locals, constants, function arguments, ...). To obtain the (in this case empty) parameter environment, one can call let param_env = tcx.param_env(length_def_id); . The GlobalId needed is let gid = GlobalId { promoted: None, instance: Instance::mono(length_def_id),\n}; Invoking tcx.const_eval(param_env.and(gid)) will now trigger the creation of the MIR of the array length expression. The MIR will look something like this: const Foo::{{initializer}}: usize = { let mut _0: usize; // return pointer let mut _1: (usize, bool); bb0: { _1 = CheckedSub(const Unevaluated(FOO, Slice([])), const 42usize); assert(!(_1.1: bool), \"attempt to subtract with overflow\") -> bb1; } bb1: { _0 = (_1.0: usize); return; }\n} Before the evaluation, a virtual memory location (in this case essentially a vec![u8; 4] or vec![u8; 8] ) is created for storing the evaluation result. At the start of the evaluation, _0 and _1 are Value::ByVal(PrimVal::Undef) . When the initialization of _1 is invoked, the value of the FOO constant is required, and triggers another call to tcx.const_eval , which will not be shown here. If the evaluation of FOO is successful, 42 will be subtracted by its value 4096 and the result stored in _1 as Value::ByValPair(PrimVal::Bytes(4054), PrimVal::Bytes(0)) . The first part of the pair is the computed value, the second part is a bool that's true if an overflow happened. The next statement asserts that said boolean is 0 . In case the assertion fails, its error message is used for reporting a compile-time error. Since it does not fail, Value::ByVal(PrimVal::Bytes(4054)) is stored in the virtual memory was allocated before the evaluation. _0 always refers to that location directly. After the evaluation is done, the virtual memory allocation is interned into the TyCtxt . Future evaluations of the same constants will not actually invoke miri, but just extract the value from the interned allocation. The tcx.const_eval function has one additional feature: it will not return a ByRef(interned_allocation_id) , but a ByVal(computed_value) if possible. This makes using the result much more convenient, as no further queries need to be executed in order to get at something as simple as a usize ."},"name-resolution.html#todo":{"breadcrumbs":"TODO:","body":"This is a result of the first pass of learning the code. It is definitely incomplete and not detailed enough. It also might be inaccurate in places. Still, it probably provides useful first guidepost to what happens in there. What exactly does it link to and how is that published and consumed by following stages of compilation? Who calls it and how it is actually used. Is it a pass and then the result is only used, or can it be computed incrementally (eg. for RLS)? The overall strategy description is a bit vague. Where does the name Rib come from? Does this thing have its own tests, or is it tested only as part of some e2e testing?","title":"TODO:","id":"name-resolution.html#todo"},"compiler-debugging.html#formatting-graphviz-output-dot-files":{"title":"Formatting Graphviz output (.dot files)","body":"Some compiler options for debugging specific features yield graphviz graphs - e.g. the #[rustc_mir(borrowck_graphviz_postflow=\"suffix.dot\")] attribute dumps various borrow-checker dataflow graphs. These all produce .dot files. To view these files, install graphviz (e.g. apt-get install graphviz ) and then run the following commands: $ dot -T pdf maybe_init_suffix.dot > maybe_init_suffix.pdf\n$ firefox maybe_init_suffix.pdf # Or your favorite pdf viewer","breadcrumbs":"Formatting Graphviz output (.dot files)","id":"compiler-debugging.html#formatting-graphviz-output-dot-files"},"compiletest.html#header-commands":{"id":"compiletest.html#header-commands","title":"Header Commands","breadcrumbs":"The compiler testing framework » Header Commands","body":"Source file annotations which appear in comments near the top of the source file before any test code are known as header commands. These commands can instruct compiletest to ignore this test, set expectations on whether it is expected to succeed at compiling, or what the test's return code is expected to be. Header commands (and their inline counterparts, Error Info commands) are described more fully here ."},"mir/regionck.html#what-is-a-universe":{"breadcrumbs":"The MIR (Mid-level IR) » MIR borrowck » What is a universe","id":"mir/regionck.html#what-is-a-universe","body":"In the previous section, we introduced the idea of a skolemized region, and we denoted it !1 . We call this number 1 the universe index . The idea of a \"universe\" is that it is a set of names that are in scope within some type or at some point. Universes are formed into a tree, where each child extends its parents with some new names. So the root universe conceptually contains global names, such as the the lifetime 'static or the type i32 . In the compiler, we also put generic type parameters into this root universe (in this sense, there is not just one root universe, but one per item). So consider this function bar : struct Foo { } fn bar<'a, T>(t: &'a T) { ...\n} Here, the root universe would consist of the lifetimes 'static and 'a . In fact, although we're focused on lifetimes here, we can apply the same concept to types, in which case the types Foo and T would be in the root universe (along with other global types, like i32 ). Basically, the root universe contains all the names that appear free in the body of bar . Now let's extend bar a bit by adding a variable x : fn bar<'a, T>(t: &'a T) { let x: for<'b> fn(&'b u32) = ...;\n} Here, the name 'b is not part of the root universe. Instead, when we \"enter\" into this for<'b> (e.g., by skolemizing it), we will create a child universe of the root, let's call it U1: U0 (root universe)\n│\n└─ U1 (child universe) The idea is that this child universe U1 extends the root universe U0 with a new name, which we are identifying by its universe number: !1 . Now let's extend bar a bit by adding one more variable, y : fn bar<'a, T>(t: &'a T) { let x: for<'b> fn(&'b u32) = ...; let y: for<'c> fn(&'b u32) = ...;\n} When we enter this type, we will again create a new universe, which we'll call U2 . Its parent will be the root universe, and U1 will be its sibling: U0 (root universe)\n│\n├─ U1 (child universe)\n│\n└─ U2 (child universe) This implies that, while in U2, we can name things from U0 or U2, but not U1. Giving existential variables a universe. Now that we have this notion of universes, we can use it to extend our type-checker and things to prevent illegal names from leaking out. The idea is that we give each inference (existential) variable -- whether it be a type or a lifetime -- a universe. That variable's value can then only reference names visible from that universe. So for example is a lifetime variable is created in U0, then it cannot be assigned a value of !1 or !2 , because those names are not visible from the universe U0. Representing universes with just a counter. You might be surprised to see that the compiler doesn't keep track of a full tree of universes. Instead, it just keeps a counter -- and, to determine if one universe can see another one, it just checks if the index is greater. For example, U2 can see U0 because 2 >= 0. But U0 cannot see U2, because 0 >= 2 is false. How can we get away with this? Doesn't this mean that we would allow U2 to also see U1? The answer is that, yes, we would, if that question ever arose . But because of the structure of our type checker etc, there is no way for that to happen. In order for something happening in the universe U1 to \"communicate\" with something happening in U2, they would have to have a shared inference variable X in common. And because everything in U1 is scoped to just U1 and its children, that inference variable X would have to be in U0. And since X is in U0, it cannot name anything from U1 (or U2). This is perhaps easiest to see by using a kind of generic \"logic\" example: exists<X> { forall<Y> { ... /* Y is in U1 ... */ } forall<Z> { ... /* Z is in U2 ... */ }\n} Here, the only way for the two foralls to interact would be through X, but neither Y nor Z are in scope when X is declared, so its value cannot reference either of them.","title":"What is a universe"},"traits/goals-and-clauses.html#coinductive-goals":{"id":"traits/goals-and-clauses.html#coinductive-goals","title":"Coinductive goals","body":"Most goals in our system are \"inductive\". In an inductive goal, circular reasoning is disallowed. Consider this example clause: Implemented(Foo: Bar) :- Implemented(Foo: Bar). Considered inductively, this clause is useless: if we are trying to prove Implemented(Foo: Bar) , we would then recursively have to prove Implemented(Foo: Bar) , and that cycle would continue ad infinitum (the trait solver will terminate here, it would just consider that Implemented(Foo: Bar) is not known to be true). However, some goals are co-inductive . Simply put, this means that cycles are OK. So, if Bar were a co-inductive trait, then the rule above would be perfectly valid, and it would indicate that Implemented(Foo: Bar) is true. Auto traits are one example in Rust where co-inductive goals are used. Consider the Send trait, and imagine that we have this struct: struct Foo { next: Option<Box<Foo>>\n} The default rules for auto traits say that Foo is Send if the types of its fields are Send . Therefore, we would have a rule like Implemented(Foo: Send) :- Implemented(Option<Box<Foo>>: Send). As you can probably imagine, proving that Option<Box<Foo>>: Send is going to wind up circularly requiring us to prove that Foo: Send again. So this would be an example where we wind up in a cycle -- but that's ok, we do consider Foo: Send to hold, even though it references itself. In general, co-inductive traits are used in Rust trait solving when we want to enumerate a fixed set of possibilities. In the case of auto traits, we are enumerating the set of reachable types from a given starting point (i.e., Foo can reach values of type Option<Box<Foo>> , which implies it can reach values of type Box<Foo> , and then of type Foo , and then the cycle is complete). In addition to auto traits, WellFormed predicates are co-inductive. These are used to achieve a similar \"enumerate all the cases\" pattern, as described in the section on implied bounds .","breadcrumbs":"Trait solving (new-style) » Lowering to logic » Coinductive goals"},"tests/running.html#running-tests":{"breadcrumbs":"The compiler testing framework » Running tests","body":"You can run the tests using x.py . The most basic command -- which you will almost never want to use! -- is as follows: > ./x.py test This will build the full stage 2 compiler and then run the whole test suite. You probably don't want to do this very often, because it takes a very long time, and anyway bors / travis will do it for you. (Often, I will run this command in the background after opening a PR that I think is done, but rarely otherwise. -nmatsakis) The test results are cached and previously successful tests are ignored during testing. The stdout/stderr contents as well as a timestamp file for every test can be found under build/ARCH/test/ . To force-rerun a test (e.g. in case the test runner fails to notice a change) you can simply remove the timestamp file.","id":"tests/running.html#running-tests","title":"Running tests"},"rustc-driver.html#the-rustc-driver":{"title":"The Rustc Driver","body":"The rustc_driver is essentially rustc 's main() function. It acts as the glue for running the various phases of the compiler in the correct order, managing state such as the CodeMap (maps AST nodes to source code), Session (general build context and error messaging) and the TyCtxt (the \"typing context\", allowing you to query the type system and other cool stuff). The rustc_driver crate also provides external users with a method for running code at particular times during the compilation process, allowing third parties to effectively use rustc 's internals as a library for analysing a crate or emulating the compiler in-process (e.g. the RLS). For those using rustc as a library, the run_compiler() function is the main entrypoint to the compiler. Its main parameters are a list of command-line arguments and a reference to something which implements the CompilerCalls trait. A CompilerCalls creates the overall CompileController , letting it govern which compiler passes are run and attach callbacks to be fired at the end of each phase. From rustc_driver 's perspective, the main phases of the compiler are: Parse Input: Initial crate parsing Configure and Expand: Resolve #[cfg] attributes, name resolution, and expand macros Run Analysis Passes: Run trait resolution, typechecking, region checking and other miscellaneous analysis passes on the crate Translate to LLVM: Translate to the in-memory form of LLVM IR and turn it into an executable/object files The CompileController then gives users the ability to inspect the ongoing compilation process after parsing after AST expansion after HIR lowering after analysis, and when compilation is done The CompileState 's various state_after_*() constructors can be inspected to determine what bits of information are available to which callback. For a more detailed explanation on using rustc_driver , check out the stupid-stats guide by @nrc (attached as Appendix A ). Warning: By its very nature, the internal compiler APIs are always going to be unstable. That said, we do try not to break things unnecessarily.","id":"rustc-driver.html#the-rustc-driver","breadcrumbs":"The Rustc Driver"},"hir.html#the-hir-map":{"body":"Most of the time when you are working with the HIR, you will do so via the HIR Map , accessible in the tcx via tcx.hir (and defined in the hir::map module). The HIR map contains a number of methods to convert between IDs of various kinds and to lookup data associated with an HIR node. For example, if you have a DefId , and you would like to convert it to a NodeId , you can use tcx.hir.as_local_node_id(def_id) . This returns an Option<NodeId> – this will be None if the def-id refers to something outside of the current crate (since then it has no HIR node), but otherwise returns Some(n) where n is the node-id of the definition. Similarly, you can use tcx.hir.find(n) to lookup the node for a NodeId . This returns a Option<Node<'tcx>> , where Node is an enum defined in the map; by matching on this you can find out what sort of node the node-id referred to and also get a pointer to the data itself. Often, you know what sort of node n is – e.g. if you know that n must be some HIR expression, you can do tcx.hir.expect_expr(n) , which will extract and return the &hir::Expr , panicking if n is not in fact an expression. Finally, you can use the HIR map to find the parents of nodes, via calls like tcx.hir.get_parent_node(n) .","breadcrumbs":"The HIR Map","id":"hir.html#the-hir-map","title":"The HIR Map"},"traits/chalk-overview.html#testing":{"body":"TODO: Basically, there is a macro that will take chalk's Rust-like syntax and run it through the full pipeline described above. This is the function that is ultimately called.","id":"traits/chalk-overview.html#testing","breadcrumbs":"Trait solving (new-style) » Testing","title":"Testing"},"tests/adding.html#revisions":{"body":"Certain classes of tests support \"revisions\" (as of the time of this writing, this includes run-pass, compile-fail, run-fail, and incremental, though incremental tests are somewhat different). Revisions allow a single test file to be used for multiple tests. This is done by adding a special header at the top of the file: // revisions: foo bar baz This will result in the test being compiled (and tested) three times, once with --cfg foo , once with --cfg bar , and once with --cfg baz . You can therefore use #[cfg(foo)] etc within the test to tweak each of these results. You can also customize headers and expected error messages to a particular revision. To do this, add [foo] (or bar , baz , etc) after the // comment, like so: // A flag to pass in only for cfg `foo`:\n//[foo]compile-flags: -Z verbose #[cfg(foo)]\nfn test_foo() { let x: usize = 32_u32; //[foo]~ ERROR mismatched types\n} Note that not all headers have meaning when customized to a revision. For example, the ignore-test header (and all \"ignore\" headers) currently only apply to the test as a whole, not to particular revisions. The only headers that are intended to really work when customized to a revision are error patterns and compiler flags.","id":"tests/adding.html#revisions","breadcrumbs":"The compiler testing framework » Revisions","title":"Revisions"},"hir.html#hir-bodies":{"breadcrumbs":"HIR Bodies","title":"HIR Bodies","body":"A body represents some kind of executable code, such as the body of a function/closure or the definition of a constant. Bodies are associated with an owner , which is typically some kind of item (e.g. an fn() or const ), but could also be a closure expression (e.g. |x, y| x + y ). You can use the HIR map to find the body associated with a given def-id ( maybe_body_owned_by() ) or to find the owner of a body ( body_owner_def_id() ).","id":"hir.html#hir-bodies"},"rustc-driver.html#a-note-on-lifetimes":{"body":"The Rust compiler is a fairly large program containing lots of big data structures (e.g. the AST, HIR, and the type system) and as such, arenas and references are heavily relied upon to minimize unnecessary memory use. This manifests itself in the way people can plug into the compiler, preferring a \"push\"-style API (callbacks) instead of the more Rust-ic \"pull\" style (think the Iterator trait). For example the CompileState , the state passed to callbacks after each phase, is essentially just a box of optional references to pieces inside the compiler. The lifetime bound on the CompilerCalls trait then helps to ensure compiler internals don't \"escape\" the compiler (e.g. if you tried to keep a reference to the AST after the compiler is finished), while still letting users record some state for use after the run_compiler() function finishes. Thread-local storage and interning are used a lot through the compiler to reduce duplication while also preventing a lot of the ergonomic issues due to many pervasive lifetimes. The rustc::ty::tls module is used to access these thread-locals, although you should rarely need to touch it.","id":"rustc-driver.html#a-note-on-lifetimes","title":"A Note On Lifetimes","breadcrumbs":"A Note On Lifetimes"},"traits/lowering-rules.html#notation":{"breadcrumbs":"Trait solving (new-style) » Notation","id":"traits/lowering-rules.html#notation","title":"Notation","body":"The nonterminal Pi is used to mean some generic parameter , either a named lifetime like 'a or a type paramter like A . The nonterminal Ai is used to mean some generic argument , which might be a lifetime like 'a or a type like Vec<A> . When defining the lowering rules, we will give goals and clauses in the notation given in this section . We sometimes insert \"macros\" like LowerWhereClause! into these definitions; these macros reference other sections within this chapter."},"method-lookup.html#candidate-assembly":{"breadcrumbs":"Type checking » Candidate assembly","id":"method-lookup.html#candidate-assembly","body":"We then search along those steps to create a list of candidates . A Candidate is a method item that might plausibly be the method being invoked. For each candidate, we'll derive a \"transformed self type\" that takes into account explicit self. Candidates are grouped into two kinds, inherent and extension. Inherent candidates are those that are derived from the type of the receiver itself. So, if you have a receiver of some nominal type Foo (e.g., a struct), any methods defined within an impl like impl Foo are inherent methods. Nothing needs to be imported to use an inherent method, they are associated with the type itself (note that inherent impls can only be defined in the same module as the type itself). FIXME: Inherent candidates are not always derived from impls. If you have a trait object, such as a value of type Box<ToString> , then the trait methods ( to_string() , in this case) are inherently associated with it. Another case is type parameters, in which case the methods of their bounds are inherent. However, this part of the rules is subject to change: when DST's \"impl Trait for Trait\" is complete, trait object dispatch could be subsumed into trait matching, and the type parameter behavior should be reconsidered in light of where clauses. TODO: Is this FIXME still accurate? Extension candidates are derived from imported traits. If I have the trait ToString imported, and I call to_string() on a value of type T , then we will go off to find out whether there is an impl of ToString for T . These kinds of method calls are called \"extension methods\". They can be defined in any module, not only the one that defined T . Furthermore, you must import the trait to call such a method. So, let's continue our example. Imagine that we were calling a method foo with the receiver Rc<Box<[T; 3]>> and there is a trait Foo that defines it with &self for the type Rc<U> as well as a method on the type Box that defines Foo but with &mut self . Then we might have two candidates: &Rc<Box<[T; 3]>> from the impl of `Foo` for `Rc<U>` where `U=Box<T; 3]>\n&mut Box<[T; 3]>> from the inherent impl on `Box<U>` where `U=[T; 3]`","title":"Candidate assembly"},"mir/visitor.html#traversal":{"body":"In addition the visitor, the rustc::mir::traversal module contains useful functions for walking the MIR CFG in different standard orders (e.g. pre-order, reverse post-order, and so forth).","id":"mir/visitor.html#traversal","breadcrumbs":"The MIR (Mid-level IR) » Traversal","title":"Traversal"},"mir/regionck.html#universes-and-skolemized-region-elements":{"body":"But where does that error come from? The way it happens is like this. When we are constructing the region inference context, we can tell from the type inference context how many skolemized variables exist (the InferCtxt has an internal counter). For each of those, we create a corresponding universal region variable !n and a \"region element\" skol(n) . This corresponds to \"some unknown set of other elements\". The value of !n is {skol(n)} . At the same time, we also give each existential variable a universe (also taken from the InferCtxt ). This universe determines which skolemized elements may appear in its value: For example, a variable in universe U3 may name skol(1) , skol(2) , and skol(3) , but not skol(4) . Note that the universe of an inference variable controls what region elements can appear in its value; it does not say region elements will appear.","id":"mir/regionck.html#universes-and-skolemized-region-elements","title":"Universes and skolemized region elements","breadcrumbs":"The MIR (Mid-level IR) » MIR borrowck » Universes and skolemized region elements"},"traits/resolution.html#overview":{"id":"traits/resolution.html#overview","breadcrumbs":"Overview","title":"Overview","body":"Trait resolution consists of three major parts: Selection : Deciding how to resolve a specific obligation. For example, selection might decide that a specific obligation can be resolved by employing an impl which matches the Self type, or by using a parameter bound (e.g. T: Trait ). In the case of an impl, selecting one obligation can create nested obligations because of where clauses on the impl itself. It may also require evaluating those nested obligations to resolve ambiguities. Fulfillment : The fulfillment code is what tracks that obligations are completely fulfilled. Basically it is a worklist of obligations to be selected: once selection is successful, the obligation is removed from the worklist and any nested obligations are enqueued. Coherence : The coherence checks are intended to ensure that there are never overlapping impls, where two impls could be used with equal precedence."},"ty.html#beyond-types-other-kinds-of-arena-allocated-data-structures":{"breadcrumbs":"Beyond types: other kinds of arena-allocated data structures","title":"Beyond types: other kinds of arena-allocated data structures","id":"ty.html#beyond-types-other-kinds-of-arena-allocated-data-structures","body":"In addition to types, there are a number of other arena-allocated data structures that you can allocate, and which are found in this module. Here are a few examples: Substs , allocated with mk_substs – this will intern a slice of types, often used to specify the values to be substituted for generics (e.g. HashMap<i32, u32> would be represented as a slice &'tcx [tcx.types.i32, tcx.types.u32] ). TraitRef , typically passed by value – a trait reference consists of a reference to a trait along with its various type parameters (including Self ), like i32: Display (here, the def-id would reference the Display trait, and the substs would contain i32 ). Predicate defines something the trait system has to prove (see traits module)."},"type-inference.html#type-inference":{"body":"Type inference is the process of automatic detection of the type of an expression. It is what allows Rust to work with fewer or no type annotations, making things easier for users: fn main() { let mut things = vec![]; things.push(\"thing\")\n} Here, the type of things is inferenced to be &str because that's the value we push into things . The type inference is based on the standard Hindley-Milner (HM) type inference algorithm, but extended in various way to accommodate subtyping, region inference, and higher-ranked types.","title":"Type inference","id":"type-inference.html#type-inference","breadcrumbs":"Type inference"},"type-inference.html#lexical-region-resolution":{"title":"Lexical region resolution","breadcrumbs":"Lexical region resolution","id":"type-inference.html#lexical-region-resolution","body":"Lexical region resolution is done by initially assigning each region variable to an empty value. We then process each outlives constraint repeatedly, growing region variables until a fixed-point is reached. Region variables can be grown using a least-upper-bound relation on the region lattice in a fairly straightforward fashion."},"macro-expansion.html#hygiene":{"title":"Hygiene","body":"TODO","breadcrumbs":"Hygiene","id":"macro-expansion.html#hygiene"},"compiler-debugging.html#debugging-the-compiler":{"title":"Debugging the compiler","breadcrumbs":"Debugging the compiler","id":"compiler-debugging.html#debugging-the-compiler","body":"layout: default title: Debugging the Compiler Note: This is copied from the rust-forge . If anything needs updating, please open an issue or make a PR on the github repo. Here are a few tips to debug the compiler:"},"mir/regionck.html#back-to-our-example":{"id":"mir/regionck.html#back-to-our-example","title":"Back to our example","breadcrumbs":"The MIR (Mid-level IR) » MIR borrowck » Back to our example","body":"OK, so far so good. Now let's walk through what would happen with our first example: fn(&'static u32) <: fn(&'!1 u32) @ P // this point P is not imp't here The region inference engine will create a region element domain like this: { CFG; end('static); skol(1) } --- ------------ ------- from the universe `!1` | 'static is always in scope all points in the CFG; not especially relevant here It will always create two universal variables, one representing 'static and one representing '!1 . Let's call them Vs and V1. They will have initial values like so: Vs = { CFG; end('static) } // it is in U0, so can't name anything else\nV1 = { skol(1) } From the subtyping constraint above, we would have an outlives constraint like '!1: 'static @ P To process this, we would grow the value of V1 to include all of Vs: Vs = { CFG; end('static) }\nV1 = { CFG; end('static), skol(1) } At that point, constraint propagation is complete, because all the outlives relationships are satisfied. Then we would go to the \"check universal regions\" portion of the code, which would test that no universal region grew too large. In this case, V1 did grow too large -- it is not known to outlive end('static) , nor any of the CFG -- so we would report an error."},"tests/adding.html#naming-your-test":{"id":"tests/adding.html#naming-your-test","breadcrumbs":"The compiler testing framework » Naming your test","body":"We have not traditionally had a lot of structure in the names of tests. Moreover, for a long time, the rustc test runner did not support subdirectories (it now does), so test suites like src/test/run-pass have a huge mess of files in them. This is not considered an ideal setup. For regression tests -- basically, some random snippet of code that came in from the internet -- we often just name the test after the issue. For example, src/test/run-pass/issue-12345.rs . If possible, though, it is better if you can put the test into a directory that helps identify what piece of code is being tested here (e.g., borrowck/issue-12345.rs is much better), or perhaps give it a more meaningful name. Still, do include the issue number somewhere . When writing a new feature, create a subdirectory to store your tests . For example, if you are implementing RFC 1234 (\"Widgets\"), then it might make sense to put the tests in directories like: src/test/ui/rfc1234-widgets/ src/test/run-pass/rfc1234-widgets/ etc In other cases, there may already be a suitable directory. (The proper directory structure to use is actually an area of active debate.)","title":"Naming your test"},"traits/index.html#trait-solving-new-style":{"body":"🚧 This chapter describes \"new-style\" trait solving. This is still in the process of being implemented ; this chapter serves as a kind of in-progress design document. If you would prefer to read about how the current trait solver works, check out this other chapter . (By the way, if you would like to help in hacking on the new solver, you will find instructions for getting involved in the Traits Working Group tracking issue .) 🚧 Trait solving is based around a few key ideas: Lowering to logic , which expresses Rust traits in terms of standard logical terms. The goals and clauses chapter describes the precise form of rules we use, and lowering rules gives the complete set of lowering rules in a more reference-like form. Canonical queries , which allow us to solve trait problems (like \"is Foo implemented for the type Bar ?\") once, and then apply that same result independently in many different inference contexts. Lazy normalization , which is the technique we use to accommodate associated types when figuring out whether types are equal. Region constraints , which are accumulated during trait solving but mostly ignored. This means that trait solving effectively ignores the precise regions involved, always -- but we still remember the constraints on them so that those constraints can be checked by thet type checker. Note: this is not a complete list of topics. See the sidebar for more.","id":"traits/index.html#trait-solving-new-style","breadcrumbs":"Trait solving (new-style)","title":"Trait solving (new-style)"},"mir/index.html#mir-data-types":{"breadcrumbs":"MIR data types","title":"MIR data types","id":"mir/index.html#mir-data-types","body":"The MIR data types are defined in the src/librustc/mir/ module. Each of the key concepts mentioned in the previous section maps in a fairly straightforward way to a Rust type. The main MIR data type is Mir . It contains the data for a single function (along with sub-instances of Mir for \"promoted constants\", but you can read about those below ). Basic blocks : The basic blocks are stored in the field basic_blocks ; this is a vector of BasicBlockData structures. Nobody ever references a basic block directly: instead, we pass around BasicBlock values, which are newtype'd indices into this vector. Statements are represented by the type Statement . Terminators are represented by the Terminator . Locals are represented by a newtype'd index type Local . The data for a local variable is found in the Mir (the local_decls vector). There is also a special constant RETURN_PLACE identifying the special \"local\" representing the return value. Places are identified by the enum Place . There are a few variants: Local variables like _1 Static variables FOO Projections , which are fields or other things that \"project out\" from a base place. So e.g. the place _1.f is a projection, with f being the \"projection element and _1 being the base path. *_1 is also a projection, with the * being represented by the ProjectionElem::Deref element. Rvalues are represented by the enum Rvalue . Operands are represented by the enum Operand ."},"traits/associated-types.html#equality-and-associated-types":{"body":"This section covers how the trait system handles equality between associated types. The full system consists of several moving parts, which we will introduce one by one: Projection and the Normalize predicate Skolemization The ProjectionEq predicate Integration with unification","id":"traits/associated-types.html#equality-and-associated-types","title":"Equality and associated types","breadcrumbs":"Trait solving (new-style) » Lowering to logic » Equality and associated types"},"traits/resolution.html#selection-during-translation":{"id":"traits/resolution.html#selection-during-translation","body":"As mentioned above, during type checking, we do not store the results of trait selection. At trans time, we repeat the trait selection to choose a particular impl for each method call. In this second selection, we do not consider any where-clauses to be in scope because we know that each resolution will resolve to a particular impl. One interesting twist has to do with nested obligations. In general, in trans, we only need to do a \"shallow\" selection for an obligation. That is, we wish to identify which impl applies, but we do not (yet) need to decide how to select any nested obligations. Nonetheless, we do currently do a complete resolution, and that is because it can sometimes inform the results of type inference. That is, we do not have the full substitutions in terms of the type variables of the impl available to us, so we must run trait selection to figure everything out. TODO : is this still talking about trans? Here is an example: trait Foo { ... }\nimpl<U, T:Bar<U>> Foo for Vec<T> { ... } impl Bar<usize> for isize { ... } After one shallow round of selection for an obligation like Vec<isize> : Foo , we would know which impl we want, and we would know that T=isize , but we do not know the type of U . We must select the nested obligation isize : Bar<U> to find out that U=usize . It would be good to only do just as much nested resolution as necessary. Currently, though, we just do a full resolution.","breadcrumbs":"Selection during translation","title":"Selection during translation"},"traits/resolution.html#confirmation":{"title":"Confirmation","breadcrumbs":"Confirmation","body":"Confirmation unifies the output type parameters of the trait with the values found in the obligation, possibly yielding a type error. Suppose we have the following variation of the Convert example in the previous section: trait Convert<Target> { fn convert(&self) -> Target;\n} impl Convert<usize> for isize { ... } // isize -> usize\nimpl Convert<isize> for usize { ... } // usize -> isize let x: isize = ...;\nlet y: char = x.convert(); // NOTE: `y: char` now! Confirmation is where an error would be reported because the impl specified that Target would be usize , but the obligation reported char . Hence the result of selection would be an error. Note that the candidate impl is chosen based on the Self type, but confirmation is done based on (in this case) the Target type parameter.","id":"traits/resolution.html#confirmation"},"incrcomp-debugging.html#testing-the-dependency-graph":{"id":"incrcomp-debugging.html#testing-the-dependency-graph","breadcrumbs":"Queries: demand-driven compilation » Testing the dependency graph","title":"Testing the dependency graph","body":"There are various ways to write tests against the dependency graph. The simplest mechanisms are the #[rustc_if_this_changed] and #[rustc_then_this_would_need] annotations. These are used in compile-fail tests to test whether the expected set of paths exist in the dependency graph. As an example, see src/test/compile-fail/dep-graph-caller-callee.rs . The idea is that you can annotate a test like: #[rustc_if_this_changed]\nfn foo() { } #[rustc_then_this_would_need(TypeckTables)] //~ ERROR OK\nfn bar() { foo(); } #[rustc_then_this_would_need(TypeckTables)] //~ ERROR no path\nfn baz() { } This will check whether there is a path in the dependency graph from Hir(foo) to TypeckTables(bar) . An error is reported for each #[rustc_then_this_would_need] annotation that indicates whether a path exists. //~ ERROR annotations can then be used to test if a path is found (as demonstrated above)."},"compiler-debugging.html#expensive-operations-in-logs":{"body":"A note of caution: the expressions within the debug! call are run whenever RUST_LOG is set, even if the filter would exclude the log. This means that if in the module rustc::foo you have a statement debug!(\"{:?}\", random_operation(tcx)); Then if someone runs a debug rustc with RUST_LOG=rustc::bar , then random_operation() will still run - even while it's output will never be needed! This means that you should not put anything too expensive or likely to crash there - that would annoy anyone who wants to use logging for their own module. Note that if RUST_LOG is unset (the default), then the code will not run - this means that if your logging code panics, then no-one will know it until someone tries to use logging to find another bug. If you need to do an expensive operation in a log, be aware that while log expressions are evaluated even if logging is not enabled in your module, they are not formatted unless it is . This means you can put your expensive/crashy operations inside an fmt::Debug impl, and they will not be run unless your log is enabled: use std::fmt; struct ExpensiveOperationContainer<'a, 'gcx, 'tcx> where 'tcx: 'gcx, 'a: 'tcx\n{ tcx: TyCtxt<'a, 'gcx, 'tcx>\n} impl<'a, 'gcx, 'tcx> fmt::Debug for ExpensiveOperationContainer<'a, 'gcx, 'tcx> { fn fmt(&self, fmt: &mut fmt::Formatter) -> fmt::Result { let value = random_operation(tcx); fmt::Debug::fmt(&value, fmt) }\n} debug!(\"{:?}\", ExpensiveOperationContainer { tcx });","breadcrumbs":"Expensive operations in logs","id":"compiler-debugging.html#expensive-operations-in-logs","title":"Expensive operations in logs"},"mir/visitor.html#mir-visitor":{"id":"mir/visitor.html#mir-visitor","title":"MIR visitor","body":"The MIR visitor is a convenient tool for traversing the MIR and either looking for things or making changes to it. The visitor traits are defined in the rustc::mir::visit module -- there are two of them, generated via a single macro: Visitor (which operates on a &Mir and gives back shared references) and MutVisitor (which operates on a &mut Mir and gives back mutable references). To implement a visitor, you have to create a type that represents your visitor. Typically, this type wants to \"hang on\" to whatever state you will need while processing MIR: struct MyVisitor<...> { tcx: TyCtxt<'cx, 'tcx, 'tcx>, ...\n} and you then implement the Visitor or MutVisitor trait for that type: impl<'tcx> MutVisitor<'tcx> for NoLandingPads { fn visit_foo(&mut self, ...) { ... self.super_foo(...); }\n} As shown above, within the impl, you can override any of the visit_foo methods (e.g., visit_terminator ) in order to write some code that will execute whenever a foo is found. If you want to recursively walk the contents of the foo , you then invoke the super_foo method. (NB. You never want to override super_foo .) A very simple example of a visitor can be found in NoLandingPads . That visitor doesn't even require any state: it just visits all terminators and removes their unwind successors.","breadcrumbs":"The MIR (Mid-level IR) » MIR visitor"},"compiletest.html#adding-a-new-header-command":{"title":"Adding a new header command","body":"Header commands are defined in the TestProps struct in src/tools/compiletest/src/header.rs . At a high level, there are dozens of test properties defined here, all set to default values in the TestProp struct's impl block. Any test can override this default value by specifying the property in question as header command as a comment ( // ) in the test source file, before any source code. Using a header command Here is an example, specifying the must-compile-successfully header command, which takes no arguments, followed by the failure-status header command, which takes a single argument (which, in this case is a value of 1). failure-status is instructing compiletest to expect a failure status of 1 (rather than the current Rust default of 101 at the time of this writing). The header command and the argument list (if present) are typically separated by a colon: // Copyright 2018 The Rust Project Developers. See the COPYRIGHT\n// file at the top-level directory of this distribution and at\n// http://rust-lang.org/COPYRIGHT.\n//\n// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n// option. This file may not be copied, modified, or distributed\n// except according to those terms. // must-compile-successfully\n// failure-status: 1 #![feature(termination_trait)] use std::io::{Error, ErrorKind}; fn main() -> Result<(), Box<Error>> { Err(Box::new(Error::new(ErrorKind::Other, \"returned Box<Error> from main()\")))\n} Adding a new header command property One would add a new header command if there is a need to define some test property or behavior on an individual, test-by-test basis. A header command property serves as the header command's backing store (holds the command's current value) at runtime. To add a new header command property: 1. Look for the pub struct TestProps declaration in src/tools/compiletest/src/header.rs and add the new public property to the end of the declaration. 2. Look for the impl TestProps implementation block immediately following the struct declaration and initialize the new property to its default value. Adding a new header command parser When compiletest encounters a test file, it parses the file a line at a time by calling every parser defined in the Config struct's implementation block, also in src/tools/compiletest/src/header.rs (note the Config struct's declaration block is found in src/tools/compiletest/src/common.rs . TestProps 's load_from() method will try passing the current line of text to each parser, which, in turn typically checks to see if the line begins with a particular commented ( // ) header command such as // must-compile-successfully or // failure-status . Whitespace after the comment marker is optional. Parsers will override a given header command property's default value merely by being specified in the test file as a header command or by having a parameter value specified in the test file, depending on the header command. Parsers defined in impl Config are typically named parse_<header_command> (note kebab-case <header-command> transformed to snake-case <header_command> ). impl Config also defines several 'low-level' parsers which make it simple to parse common patterns like simple presence or not ( parse_name_directive() ), header-command:parameter(s) ( parse_name_value_directive() ), optional parsing only if a particular cfg attribute is defined ( has_cfg_prefix() ) and many more. The low-level parsers are found near the end of the impl Config block; be sure to look through them and their associated parsers immediately above to see how they are used to avoid writing additional parsing code unneccessarily. As a concrete example, here is the implementation for the parse_failure_status() parser, in src/tools/compiletest/src/header.rs : @@ -232,6 +232,7 @@ pub struct TestProps { // customized normalization rules pub normalize_stdout: Vec<(String, String)>, pub normalize_stderr: Vec<(String, String)>,\n+ pub failure_status: i32, } impl TestProps {\n@@ -260,6 +261,7 @@ impl TestProps { run_pass: false, normalize_stdout: vec![], normalize_stderr: vec![],\n+ failure_status: 101, } } @@ -383,6 +385,10 @@ impl TestProps { if let Some(rule) = config.parse_custom_normalization(ln, \"normalize-stderr\") { self.normalize_stderr.push(rule); }\n+\n+ if let Some(code) = config.parse_failure_status(ln) {\n+ self.failure_status = code;\n+ } }); for key in &[\"RUST_TEST_NOCAPTURE\", \"RUST_TEST_THREADS\"] {\n@@ -488,6 +494,13 @@ impl Config { self.parse_name_directive(line, \"pretty-compare-only\") } + fn parse_failure_status(&self, line: &str) -> Option<i32> {\n+ match self.parse_name_value_directive(line, \"failure-status\") {\n+ Some(code) => code.trim().parse::<i32>().ok(),\n+ _ => None,\n+ }\n+ }","breadcrumbs":"The compiler testing framework » Adding a new header command","id":"compiletest.html#adding-a-new-header-command"},"traits/canonicalization.html#canonicalization":{"title":"Canonicalization","id":"traits/canonicalization.html#canonicalization","body":"Canonicalization is the process of isolating an inference value from its context. It is a key part of implementing canonical queries , and you may wish to read the parent chapter to get more context. Canonicalization is really based on a very simple concept: every inference variable is always in one of two states: either it is unbound , in which case we don't know yet what type it is, or it is bound , in which case we do. So to isolate some data-structure T that contains types/regions from its environment, we just walk down and find the unbound variables that appear in T; those variables get replaced with \"canonical variables\", starting from zero and numbered in a fixed order (left to right, for the most part, but really it doesn't matter as long as it is consistent). So, for example, if we have the type X = (?T, ?U) , where ?T and ?U are distinct, unbound inference variables, then the canonical form of X would be (?0, ?1) , where ?0 and ?1 represent these canonical placeholders . Note that the type Y = (?U, ?T) also canonicalizes to (?0, ?1) . But the type Z = (?T, ?T) would canonicalize to (?0, ?0) (as would (?U, ?U) ). In other words, the exact identity of the inference variables is not important -- unless they are repeated. We use this to improve caching as well as to detect cycles and other things during trait resolution. Roughly speaking, the idea is that if two trait queries have the same canonicalize form, then they will get the same answer. That answer will be expressed in terms of the canonical variables ( ?0 , ?1 ), which we can then map back to the original variables ( ?T , ?U ).","breadcrumbs":"Trait solving (new-style) » Canonical queries » Canonicalization"},"high-level-overview.html#high-level-overview-of-the-compiler-source":{"id":"high-level-overview.html#high-level-overview-of-the-compiler-source","body":"","title":"High-level overview of the compiler source","breadcrumbs":"High-level overview of the compiler source"},"mir/index.html#promoted-constants":{"breadcrumbs":"Promoted constants","body":"to be written","id":"mir/index.html#promoted-constants","title":"Promoted constants"},"walkthrough.html#walkthrough-a-typical-contribution":{"title":"Walkthrough: a typical contribution","breadcrumbs":"Walkthrough: a typical contribution","id":"walkthrough.html#walkthrough-a-typical-contribution","body":""},"traits/resolution.html#trait-resolution-old-style":{"body":"This chapter describes the general process of trait resolution and points out some non-obvious things. Note: This chapter (and its subchapters) describe how the trait solver currently works. However, we are in the process of designing a new trait solver. If you'd prefer to read about that , see this traits chapter .","id":"traits/resolution.html#trait-resolution-old-style","title":"Trait resolution (old-style)","breadcrumbs":"Trait resolution (old-style)"},"tests/adding.html#editing-and-updating-the-reference-files":{"body":"If you have changed the compiler's output intentionally, or you are making a new test, you can pass --bless to the test subcommand. E.g. if some tests in src/test/ui are failing, you can run ./x.py test --stage 1 src/test/ui --bless to automatically adjust the .stderr , .stdout or .fixed files of all tests. Of course you can also target just specific tests with the --test-args your_test_name flag, just like when running the tests.","breadcrumbs":"The compiler testing framework » Editing and updating the reference files","id":"tests/adding.html#editing-and-updating-the-reference-files","title":"Editing and updating the reference files"},"rustdoc.html#the-walking-tour-of-rustdoc":{"title":"The walking tour of rustdoc","id":"rustdoc.html#the-walking-tour-of-rustdoc","breadcrumbs":"The Rustc Driver » The walking tour of rustdoc","body":"Rustdoc actually uses the rustc internals directly. It lives in-tree with the compiler and standard library. This chapter is about how it works. (A new implementation is also under way , though). Rustdoc is implemented entirely within the crate librustdoc . It runs the compiler up to the point where we have an internal representation of a crate (HIR) and the ability to run some queries about the types of items. HIR and queries are discussed in the linked chapters. librustdoc performs two major steps after that to render a set of documentation: \"Clean\" the AST into a form that's more suited to creating documentation (and slightly more resistant to churn in the compiler). Use this cleaned AST to render a crate's documentation, one page at a time. Naturally, there's more than just this, and those descriptions simplify out lots of details, but that's the high-level overview. (Side note: librustdoc is a library crate! The rustdoc binary is created using the project in src/tools/rustdoc . Note that literally all that does is call the main() that's in this crate's lib.rs , though.)"},"hir.html#out-of-band-storage-and-the--crate--type":{"breadcrumbs":"Out-of-band storage and the Crate type","title":"Out-of-band storage and the Crate type","body":"The top-level data-structure in the HIR is the Crate , which stores the contents of the crate currently being compiled (we only ever construct HIR for the current crate). Whereas in the AST the crate data structure basically just contains the root module, the HIR Crate structure contains a number of maps and other things that serve to organize the content of the crate for easier access. For example, the contents of individual items (e.g. modules, functions, traits, impls, etc) in the HIR are not immediately accessible in the parents. So, for example, if there is a module item foo containing a function bar() : mod foo { fn bar() { }\n} then in the HIR the representation of module foo (the Mod stuct) would only have the ItemId I of bar() . To get the details of the function bar() , we would lookup I in the items map. One nice result from this representation is that one can iterate over all items in the crate by iterating over the key-value pairs in these maps (without the need to trawl through the whole HIR). There are similar maps for things like trait items and impl items, as well as \"bodies\" (explained below). The other reason to set up the representation this way is for better integration with incremental compilation. This way, if you gain access to an &hir::Item (e.g. for the mod foo ), you do not immediately gain access to the contents of the function bar() . Instead, you only gain access to the id for bar() , and you must invoke some function to lookup the contents of bar() given its id; this gives the compiler a chance to observe that you accessed the data for bar() , and then record the dependency.","id":"hir.html#out-of-band-storage-and-the--crate--type"},"tests/running.html#running-an-individual-test":{"title":"Running an individual test","breadcrumbs":"The compiler testing framework » Running an individual test","body":"Another common thing that people want to do is to run an individual test , often the test they are trying to fix. One way to do this is to invoke x.py with the --test-args option: > ./x.py test --stage 1 src/test/ui --test-args issue-1234 Under the hood, the test runner invokes the standard rust test runner (the same one you get with #[test] ), so this command would wind up filtering for tests that include \"issue-1234\" in the name. Often, though, it's easier to just run the test by hand. Most tests are just rs files, so you can do something like > rustc +stage1 src/test/ui/issue-1234.rs This is much faster, but doesn't always work. For example, some tests include directives that specify specific compiler flags, or which rely on other crates, and they may not run the same without those options.","id":"tests/running.html#running-an-individual-test"},"appendix/background.html#appendix-b-background-topics":{"body":"This section covers a numbers of common compiler terms that arise in this guide. We try to give the general definition while providing some Rust-specific context.","id":"appendix/background.html#appendix-b-background-topics","breadcrumbs":"Appendix B: Background topics","title":"Appendix B: Background topics"},"conventions.html#how-to-structure-your-pr":{"title":"How to structure your PR","breadcrumbs":"How to structure your PR","id":"conventions.html#how-to-structure-your-pr","body":"How you prepare the commits in your PR can make a big difference for the reviewer. Here are some tips. Isolate \"pure refactorings\" into their own commit. For example, if you rename a method, then put that rename into its own commit, along with the renames of all the uses. More commits is usually better. If you are doing a large change, it's almost always better to break it up into smaller steps that can be independently understood. The one thing to be aware of is that if you introduce some code following one strategy, then change it dramatically (versus adding to it) in a later commit, that 'back-and-forth' can be confusing. If you run rustfmt and the file was not already formatted, isolate that into its own commit. This is really the same as the previous rule, but it's worth highlighting. It's ok to rustfmt files, but since we do not currently run rustfmt all the time, that can introduce a lot of noise into your commit. Please isolate that into its own commit. This also makes rebases a lot less painful, since rustfmt tends to cause a lot of merge conflicts, and having those isolated into their own commit makes them easier to resolve. No merges. We do not allow merge commits into our history, other than those by bors. If you get a merge conflict, rebase instead via a command like git rebase -i rust-lang/master (presuming you use the name rust-lang for your remote). Individual commits do not have to build (but it's nice). We do not require that every intermediate commit successfully builds -- we only expect to be able to bisect at a PR level. However, if you can make individual commits build, that is always helpful."},"query.html#invoking-queries":{"breadcrumbs":"Invoking queries","id":"query.html#invoking-queries","body":"To invoke a query is simple. The tcx (\"type context\") offers a method for each defined query. So, for example, to invoke the type_of query, you would just do this: let ty = tcx.type_of(some_def_id);","title":"Invoking queries"},"compiletest.html#compiletest":{"title":"compiletest","id":"compiletest.html#compiletest","body":"","breadcrumbs":"The compiler testing framework » compiletest"},"incrcomp-debugging.html#debugging-the-dependency-graph":{"id":"incrcomp-debugging.html#debugging-the-dependency-graph","breadcrumbs":"Queries: demand-driven compilation » Debugging the dependency graph","body":"","title":"Debugging the dependency graph"},"traits/lowering-to-logic.html#rust-traits-and-logic":{"id":"traits/lowering-to-logic.html#rust-traits-and-logic","breadcrumbs":"Trait solving (new-style) » Rust traits and logic","body":"One of the first observations is that the Rust trait system is basically a kind of logic. As such, we can map our struct, trait, and impl declarations into logical inference rules. For the most part, these are basically Horn clauses, though we'll see that to capture the full richness of Rust -- and in particular to support generic programming -- we have to go a bit further than standard Horn clauses. To see how this mapping works, let's start with an example. Imagine we declare a trait and a few impls, like so: trait Clone { }\nimpl Clone for usize { }\nimpl<T> Clone for Vec<T> where T: Clone { } We could map these declarations to some Horn clauses, written in a Prolog-like notation, as follows: Clone(usize).\nClone(Vec<?T>) :- Clone(?T). // The notation `A :- B` means \"A is true if B is true\".\n// Or, put another way, B implies A. In Prolog terms, we might say that Clone(Foo) -- where Foo is some Rust type -- is a predicate that represents the idea that the type Foo implements Clone . These rules are program clauses ; they state the conditions under which that predicate can be proven (i.e., considered true). So the first rule just says \"Clone is implemented for usize \". The next rule says \"for any type ?T , Clone is implemented for Vec<?T> if clone is implemented for ?T \". So e.g. if we wanted to prove that Clone(Vec<Vec<usize>>) , we would do so by applying the rules recursively: Clone(Vec<Vec<usize>>) is provable if: Clone(Vec<usize>) is provable if: Clone(usize) is provable. (Which is is, so we're all good.) But now suppose we tried to prove that Clone(Vec<Bar>) . This would fail (after all, I didn't give an impl of Clone for Bar ): Clone(Vec<Bar>) is provable if: Clone(Bar) is provable. (But it is not, as there are no applicable rules.) We can easily extend the example above to cover generic traits with more than one input type. So imagine the Eq<T> trait, which declares that Self is equatable with a value of type T : trait Eq<T> { ... }\nimpl Eq<usize> for usize { }\nimpl<T: Eq<U>> Eq<Vec<U>> for Vec<T> { } That could be mapped as follows: Eq(usize, usize).\nEq(Vec<?T>, Vec<?U>) :- Eq(?T, ?U). So far so good.","title":"Rust traits and logic"},"incrcomp-debugging.html#dumping-the-graph":{"title":"Dumping the graph","id":"incrcomp-debugging.html#dumping-the-graph","breadcrumbs":"Queries: demand-driven compilation » Dumping the graph","body":"The compiler is also capable of dumping the dependency graph for your debugging pleasure. To do so, pass the -Z dump-dep-graph flag. The graph will be dumped to dep_graph.{txt,dot} in the current directory. You can override the filename with the RUST_DEP_GRAPH environment variable. Frequently, though, the full dep graph is quite overwhelming and not particularly helpful. Therefore, the compiler also allows you to filter the graph. You can filter in three ways: All edges originating in a particular set of nodes (usually a single node). All edges reaching a particular set of nodes. All edges that lie between given start and end nodes. To filter, use the RUST_DEP_GRAPH_FILTER environment variable, which should look like one of the following: source_filter // nodes originating from source_filter\n-> target_filter // nodes that can reach target_filter\nsource_filter -> target_filter // nodes in between source_filter and target_filter source_filter and target_filter are a & -separated list of strings. A node is considered to match a filter if all of those strings appear in its label. So, for example: RUST_DEP_GRAPH_FILTER='-> TypeckTables' would select the predecessors of all TypeckTables nodes. Usually though you want the TypeckTables node for some particular fn, so you might write: RUST_DEP_GRAPH_FILTER='-> TypeckTables & bar' This will select only the predecessors of TypeckTables nodes for functions with bar in their name. Perhaps you are finding that when you change foo you need to re-type-check bar , but you don't think you should have to. In that case, you might do: RUST_DEP_GRAPH_FILTER='Hir & foo -> TypeckTables & bar' This will dump out all the nodes that lead from Hir(foo) to TypeckTables(bar) , from which you can (hopefully) see the source of the erroneous edge."},"traits/bibliography.html#bibliography":{"title":"Bibliography","breadcrumbs":"Trait solving (new-style) » Bibliography","id":"traits/bibliography.html#bibliography","body":"If you'd like to read more background material, here are some recommended texts and papers: Programming with Higher-order Logic , by Dale Miller and Gopalan Nadathur, covers the key concepts of Lambda prolog. Although it's a slim little volume, it's the kind of book where you learn something new every time you open it. \"A proof procedure for the logic of Hereditary Harrop formulas\" , by Gopalan Nadathur. This paper covers the basics of universes, environments, and Lambda Prolog-style proof search. Quite readable. \"A new formulation of tabled resolution with delay\" , by Theresa Swift . This paper gives a kind of abstract treatment of the SLG formulation that is the basis for our on-demand solver."},"mir/regionck.html#representing-the-values-of-a-region-variable":{"breadcrumbs":"The MIR (Mid-level IR) » MIR borrowck » Representing the \"values\" of a region variable","body":"The value of a region can be thought of as a set ; we call the domain of this set a RegionElement . In the code, the value for all regions is maintained in the rustc_mir::borrow_check::nll::region_infer module . For each region we maintain a set storing what elements are present in its value (to make this efficient, we give each kind of element an index, the RegionElementIndex , and use sparse bitsets). The kinds of region elements are as follows: Each location in the MIR control-flow graph: a location is just the pair of a basic block and an index. This identifies the point on entry to the statement with that index (or the terminator, if the index is equal to statements.len() ). There is an element end('a) for each universal region 'a , corresponding to some portion of the caller's (or caller's caller, etc) control-flow graph. Similarly, there is an element denoted end('static) corresponding to the remainder of program execution after this function returns. There is an element !1 for each skolemized region !1 . This corresponds (intuitively) to some unknown set of other elements -- for details on skolemization, see the section skolemization and universes .","id":"mir/regionck.html#representing-the-values-of-a-region-variable","title":"Representing the \"values\" of a region variable"},"query.html#queries-demand-driven-compilation":{"breadcrumbs":"Queries: demand-driven compilation","id":"query.html#queries-demand-driven-compilation","title":"Queries: demand-driven compilation","body":"As described in the high-level overview of the compiler , the Rust compiler is current transitioning from a traditional \"pass-based\" setup to a \"demand-driven\" system. The Compiler Query System is the key to our new demand-driven organization. The idea is pretty simple. You have various queries that compute things about the input -- for example, there is a query called type_of(def_id) that, given the def-id of some item, will compute the type of that item and return it to you. Query execution is memoized – so the first time you invoke a query, it will go do the computation, but the next time, the result is returned from a hashtable. Moreover, query execution fits nicely into incremental computation ; the idea is roughly that, when you do a query, the result may be returned to you by loading stored data from disk (but that's a separate topic we won't discuss further here). The overall vision is that, eventually, the entire compiler control-flow will be query driven. There will effectively be one top-level query (\"compile\") that will run compilation on a crate; this will in turn demand information about that crate, starting from the end . For example: This \"compile\" query might demand to get a list of codegen-units (i.e. modules that need to be compiled by LLVM). But computing the list of codegen-units would invoke some subquery that returns the list of all modules defined in the Rust source. That query in turn would invoke something asking for the HIR. This keeps going further and further back until we wind up doing the actual parsing. However, that vision is not fully realized. Still, big chunks of the compiler (for example, generating MIR) work exactly like this."},"conventions.html#tabs-vs-spaces":{"breadcrumbs":"Tabs vs spaces","title":"Tabs vs spaces","body":"Prefer 4-space indent.","id":"conventions.html#tabs-vs-spaces"},"name-resolution.html#namespaces":{"id":"name-resolution.html#namespaces","breadcrumbs":"Namespaces","title":"Namespaces","body":"Different kind of symbols live in different namespaces ‒ eg. types don't clash with variables. This usually doesn't happen, because variables start with lower-case letter while types with upper case one, but this is only a convention. This is legal Rust code that'll compile (with warnings): type x = u32;\nlet x: x = 1;\nlet y: x = 2; // See? x is still a type here. To cope with this, and with slightly different scoping rules for these namespaces, the resolver keeps them separated and builds separate structures for them. In other words, when the code talks about namespaces, it doesn't mean the module hierarchy, it's types vs. values vs. macros."},"traits/wf.html#well-formedness-checking":{"breadcrumbs":"Trait solving (new-style) » Well-formedness checking","id":"traits/wf.html#well-formedness-checking","body":"This chapter is mostly to be written . WF checking, in short, has the job of checking that the various declarations in a Rust program are well-formed. This is the basis for implied bounds, and partly for that reason, this checking can be surprisingly subtle! (For example, we have to be sure that each impl proves the WF conditions declared on the trait.)","title":"Well-formedness checking"},"ty.html#import-conventions":{"body":"Although there is no hard and fast rule, the ty module tends to be used like so: use ty::{self, Ty, TyCtxt}; In particular, since they are so common, the Ty and TyCtxt types are imported directly. Other types are often referenced with an explicit ty:: prefix (e.g. ty::TraitRef<'tcx> ). But some modules choose to import a larger or smaller set of names explicitly.","title":"Import conventions","breadcrumbs":"Import conventions","id":"ty.html#import-conventions"},"compiler-debugging.html#getting-a-backtrace":{"breadcrumbs":"Getting a backtrace","id":"compiler-debugging.html#getting-a-backtrace","title":"Getting a backtrace","body":"When you have an ICE (panic in the compiler), you can set RUST_BACKTRACE=1 to get the stack trace of the panic! like in normal Rust programs. IIRC backtraces don't work on Mac and on MinGW, sorry. If you have trouble or the backtraces are full of unknown , you might want to find some way to use Linux or MSVC on Windows. In the default configuration, you don't have line numbers enabled, so the backtrace looks like this: stack backtrace: 0: std::sys::imp::backtrace::tracing::imp::unwind_backtrace 1: std::sys_common::backtrace::_print 2: std::panicking::default_hook::{{closure}} 3: std::panicking::default_hook 4: std::panicking::rust_panic_with_hook 5: std::panicking::begin_panic (~~~~ LINES REMOVED BY ME FOR BREVITY ~~~~) 32: rustc_typeck::check_crate 33: <std::thread::local::LocalKey<T>>::with 34: <std::thread::local::LocalKey<T>>::with 35: rustc::ty::context::TyCtxt::create_and_enter 36: rustc_driver::driver::compile_input 37: rustc_driver::run_compiler If you want line numbers for the stack trace, you can enable debuginfo-lines=true or debuginfo=true in your config.toml and rebuild the compiler. Then the backtrace will look like this: stack backtrace: (~~~~ LINES REMOVED BY ME FOR BREVITY ~~~~) at /home/user/rust/src/librustc_typeck/check/cast.rs:110 7: rustc_typeck::check::cast::CastCheck::check at /home/user/rust/src/librustc_typeck/check/cast.rs:572 at /home/user/rust/src/librustc_typeck/check/cast.rs:460 at /home/user/rust/src/librustc_typeck/check/cast.rs:370 (~~~~ LINES REMOVED BY ME FOR BREVITY ~~~~) 33: rustc_driver::driver::compile_input at /home/user/rust/src/librustc_driver/driver.rs:1010 at /home/user/rust/src/librustc_driver/driver.rs:212 34: rustc_driver::run_compiler at /home/user/rust/src/librustc_driver/lib.rs:253"},"compiler-debugging.html#debugging-llvm":{"id":"compiler-debugging.html#debugging-llvm","title":"Debugging LLVM","breadcrumbs":"Debugging LLVM","body":"LLVM is a big project on its own that probably needs to have its own debugging document (not that I could find one). But here are some tips that are important in a rustc context: The official compilers (including nightlies) have LLVM assertions disabled, which means that LLVM assertion failures can show up as compiler crashes (not ICEs but \"real\" crashes) and other sorts of weird behavior. If you are encountering these, it is a good idea to try using a compiler with LLVM assertions enabled - either an \"alt\" nightly or a compiler you build yourself by setting [llvm] assertions=true in your config.toml - and see whether anything turns up. The rustc build process builds the LLVM tools into ./build/<host-triple>/llvm/bin . They can be called directly. The default rustc compilation pipeline has multiple codegen units, which is hard to replicate manually and means that LLVM is called multiple times in parallel. If you can get away with it (i.e. if it doesn't make your bug disappear), passing -C codegen-units=1 to rustc will make debugging easier. If you want to play with the optimization pipeline, you can use the opt tool from ./build/<host-triple>/llvm/bin/ with the the LLVM IR emitted by rustc. Note that rustc emits different IR depending on whether -O is enabled, even without LLVM's optimizations, so if you want to play with the IR rustc emits, you should: $ rustc +local my-file.rs --emit=llvm-ir -O -C no-prepopulate-passes \\ -C codegen-units=1\n$ OPT=./build/$TRIPLE/llvm/bin/opt\n$ $OPT -S -O2 < my-file.ll > my If you just want to get the LLVM IR during the LLVM pipeline, to e.g. see which IR causes an optimization-time assertion to fail, or to see when LLVM performs a particular optimization, you can pass the rustc flag -C llvm-args=-print-after-all , and possibly add -C llvm-args='-filter-print-funcs=EXACT_FUNCTION_NAME (e.g. -C llvm-args='-filter-print-funcs=_ZN11collections3str21_$LT$impl$u20$str$GT$\\ 7replace17hbe10ea2e7c809b0bE' ). That produces a lot of output into standard error, so you'll want to pipe that to some file. Also, if you are using neither -filter-print-funcs nor -C codegen-units=1 , then, because the multiple codegen units run in parallel, the printouts will mix together and you won't be able to read anything. If you want just the IR for a specific function (say, you want to see why it causes an assertion or doesn't optimize correctly), you can use llvm-extract , e.g. $ ./build/$TRIPLE/llvm/bin/llvm-extract \\ -func='_ZN11collections3str21_$LT$impl$u20$str$GT$7replace17hbe10ea2e7c809b0bE' \\ -S \\ < unextracted.ll \\ > extracted.ll"},"variance.html#dependency-graph-management":{"breadcrumbs":"Type checking » Dependency graph management","id":"variance.html#dependency-graph-management","title":"Dependency graph management","body":"Because variance is a whole-crate inference, its dependency graph can become quite muddled if we are not careful. To resolve this, we refactor into two queries: crate_variances computes the variance for all items in the current crate. variances_of accesses the variance for an individual reading; it works by requesting crate_variances and extracting the relevant data. If you limit yourself to reading variances_of , your code will only depend then on the inference of that particular item. Ultimately, this setup relies on the red-green algorithm . In particular, every variance query effectively depends on all type definitions in the entire crate (through crate_variances ), but since most changes will not result in a change to the actual results from variance inference, the variances_of query will wind up being considered green after it is re-evaluated."},"diag.html#declaring-a-lint":{"id":"diag.html#declaring-a-lint","body":"The built-in compiler lints are defined in the rustc_lint crate. Each lint is defined as a struct that implements the LintPass trait . The trait implementation allows you to check certain syntactic constructs the linter walks the source code. You can then choose to emit lints in a very similar way to compile errors. Finally, you register the lint to actually get it to be run by the compiler by using the declare_lint! macro. For example, the following lint checks for uses of while true { ... } and suggests using loop { ... } instead. // Declare a lint called `WHILE_TRUE`\ndeclare_lint! { WHILE_TRUE, // warn-by-default Warn, // This string is the lint description \"suggest using `loop { }` instead of `while true { }`\"\n} // Define a struct and `impl LintPass` for it.\n#[derive(Copy, Clone)]\npub struct WhileTrue; impl LintPass for WhileTrue { fn get_lints(&self) -> LintArray { lint_array!(WHILE_TRUE) }\n} // LateLintPass has lots of methods. We only override the definition of\n// `check_expr` for this lint because that's all we need, but you could\n// override other methods for your own lint. See the rustc docs for a full\n// list of methods.\nimpl<'a, 'tcx> LateLintPass<'a, 'tcx> for WhileTrue { fn check_expr(&mut self, cx: &LateContext, e: &hir::Expr) { if let hir::ExprWhile(ref cond, ..) = e.node { if let hir::ExprLit(ref lit) = cond.node { if let ast::LitKind::Bool(true) = lit.node { if lit.span.ctxt() == SyntaxContext::empty() { let msg = \"denote infinite loops with `loop { ... }`\"; let condition_span = cx.tcx.sess.codemap().def_span(e.span); let mut err = cx.struct_span_lint(WHILE_TRUE, condition_span, msg); err.span_suggestion_short(condition_span, \"use `loop`\", \"loop\".to_owned()); err.emit(); } } } } }\n}","title":"Declaring a lint","breadcrumbs":"Declaring a lint"},"mir/regionck.html#closures":{"breadcrumbs":"The MIR (Mid-level IR) » MIR borrowck » Closures","id":"mir/regionck.html#closures","body":"to be written","title":"Closures"},"type-inference.html#extracting-region-constraints":{"id":"type-inference.html#extracting-region-constraints","body":"Ultimately, region constraints are only solved at the very end of type-checking, once all other constraints are known. There are two ways to solve region constraints right now: lexical and non-lexical. Eventually there will only be one. To solve lexical region constraints, you invoke resolve_regions_and_report_errors . This \"closes\" the region constraint process and invoke the lexical_region_resolve code. Once this is done, any further attempt to equate or create a subtyping relationship will yield an ICE. Non-lexical region constraints are not handled within the inference context. Instead, the NLL solver (actually, the MIR type-checker) invokes take_and_reset_region_constraints periodically. This extracts all of the outlives constraints from the region solver, but leaves the set of variables intact. This is used to get just the region constraints that resulted from some particular point in the program, since the NLL solver needs to know not just what regions were subregions but where . Finally, the NLL solver invokes take_region_var_origins , which \"closes\" the region constraint process in the same way as normal solving.","breadcrumbs":"Extracting region constraints","title":"Extracting region constraints"},"mir/index.html#key-mir-vocabulary":{"body":"This section introduces the key concepts of MIR, summarized here: Basic blocks : units of the control-flow graph, consisting of: statements: actions with one successor terminators: actions with potentially multiple successors; always at the end of a block (if you're not familiar with the term basic block , see the background chapter ) Locals: Memory locations alloated on the stack (conceptually, at least), such as function arguments, local variables, and temporaries. These are identified by an index, written with a leading underscore, like _1 . There is also a special \"local\" ( _0 ) allocated to store the return value. Places: expressions that identify a location in memory, like _1 or _1.f . Rvalues: expressions that produce a value. The \"R\" stands for the fact that these are the \"right-hand side\" of an assignment. Operands: the arguments to an rvalue, which can either be a constant (like 22 ) or a place (like _1 ). You can get a feeling for how MIR is structed by translating simple programs into MIR and reading the pretty printed output. In fact, the playground makes this easy, since it supplies a MIR button that will show you the MIR for your program. Try putting this program into play (or clicking on this link ), and then clicking the \"MIR\" button on the top: fn main() { let mut vec = Vec::new(); vec.push(1); vec.push(2);\n} You should see something like: // WARNING: This output format is intended for human consumers only\n// and is subject to change without notice. Knock yourself out.\nfn main() -> () { ...\n} This is the MIR format for the main function. Variable declarations. If we drill in a bit, we'll see it begins with a bunch of variable declarations. They look like this: let mut _0: (); // return place\nscope 1 { let mut _1: std::vec::Vec<i32>; // \"vec\" in scope 1 at src/main.rs:2:9: 2:16\n}\nscope 2 {\n}\nlet mut _2: ();\nlet mut _3: &mut std::vec::Vec<i32>;\nlet mut _4: ();\nlet mut _5: &mut std::vec::Vec<i32>; You can see that variables in MIR don't have names, they have indices, like _0 or _1 . We also intermingle the user's variables (e.g., _1 ) with temporary values (e.g., _2 or _3 ). You can tell the difference between user-defined variables have a comment that gives you their original name ( // \"vec\" in scope 1... ). The \"scope\" blocks (e.g., scope 1 { .. } ) describe the lexical structure of the source program (which names were in scope when). Basic blocks. Reading further, we see our first basic block (naturally it may look slightly different when you view it, and I am ignoring some of the comments): bb0: { StorageLive(_1); _1 = const <std::vec::Vec<T>>::new() -> bb2;\n} A basic block is defined by a series of statements and a final terminator . In this case, there is one statement: StorageLive(_1); This statement indicates that the variable _1 is \"live\", meaning that it may be used later -- this will persist until we encounter a StorageDead(_1) statement, which indicates that the variable _1 is done being used. These \"storage statements\" are used by LLVM to allocate stack space. The terminator of the block bb0 is the call to Vec::new : _1 = const <std::vec::Vec<T>>::new() -> bb2; Terminators are different from statements because they can have more than one successor -- that is, control may flow to different places. Function calls like the call to Vec::new are always terminators because of the possibility of unwinding, although in the case of Vec::new we are able to see that indeed unwinding is not possible, and hence we list only one succssor block, bb2 . If we look ahead to bb2 , we will see it looks like this: bb2: { StorageLive(_3); _3 = &mut _1; _2 = const <std::vec::Vec<T>>::push(move _3, const 1i32) -> [return: bb3, unwind: bb4];\n} Here there are two statements: another StorageLive , introducing the _3 temporary, and then an assignment: _3 = &mut _1; Assignments in general have the form: <Place> = <Rvalue> A place is an expression like _3 , _3.f or *_3 -- it denotes a location in memory. An Rvalue is an expression that creates a value: in this case, the rvalue is a mutable borrow expression, which looks like &mut <Place> . So we can kind of define a grammar for rvalues like so: <Rvalue> = & (mut)? <Place> | <Operand> + <Operand> | <Operand> - <Operand> | ... <Operand> = Constant | copy Place | move Place As you can see from this grammar, rvalues cannot be nested -- they can only reference places and constants. Moreover, when you use a place, we indicate whether we are copying it (which requires that the place have a type T where T: Copy ) or moving it (which works for a place of any type). So, for example, if we had the expression x = a + b + c in Rust, that would get compile to two statements and a temporary: TMP1 = a + b\nx = TMP1 + c ( Try it and see , though you may want to do release mode to skip over the overflow checks.)","title":"Key MIR vocabulary","breadcrumbs":"Key MIR vocabulary","id":"mir/index.html#key-mir-vocabulary"},"appendix/background.html#what-is-co--and-contra-variance":{"title":"What is co- and contra-variance?","id":"appendix/background.html#what-is-co--and-contra-variance","breadcrumbs":"What is co- and contra-variance?","body":"Check out the subtyping chapter from the Rust Nomicon . See the variance chapter of this guide for more info on how the type checker handles variance."},"incremental-compilation.html#incremental-compilation":{"breadcrumbs":"Queries: demand-driven compilation » Incremental compilation","title":"Incremental compilation","id":"incremental-compilation.html#incremental-compilation","body":"The incremental compilation scheme is, in essence, a surprisingly simple extension to the overall query system. We'll start by describing a slightly simplified variant of the real thing – the \"basic algorithm\" – and then describe some possible improvements."},"mir/regionck.html#extending-the-universal-regions-check":{"id":"mir/regionck.html#extending-the-universal-regions-check","body":"After all constraints have been propagated, the NLL region inference has one final check, where it goes over the values that wound up being computed for each universal region and checks that they did not get 'too large'. In our case, we will go through each skolemized region and check that it contains only the skol(u) element it is known to outlive. (Later, we might be able to know that there are relationships between two skolemized regions and take those into account, as we do for universal regions from the fn signature.) Put another way, the \"universal regions\" check can be considered to be checking constraints like: {skol(1)}: V1 where {skol(1)} is like a constant set, and V1 is the variable we made to represent the !1 region.","breadcrumbs":"The MIR (Mid-level IR) » MIR borrowck » Extending the \"universal regions\" check","title":"Extending the \"universal regions\" check"},"traits/lowering-to-logic.html#type-checking-normal-functions":{"breadcrumbs":"Trait solving (new-style) » Type-checking normal functions","id":"traits/lowering-to-logic.html#type-checking-normal-functions","body":"OK, now that we have defined some logical rules that are able to express when traits are implemented and to handle associated types, let's turn our focus a bit towards type-checking . Type-checking is interesting because it is what gives us the goals that we need to prove. That is, everything we've seen so far has been about how we derive the rules by which we can prove goals from the traits and impls in the program; but we are also interested in how to derive the goals that we need to prove, and those come from type-checking. Consider type-checking the function foo() here: fn foo() { bar::<usize>() }\nfn bar<U: Eq<U>>() { } This function is very simple, of course: all it does is to call bar::<usize>() . Now, looking at the definition of bar() , we can see that it has one where-clause U: Eq<U> . So, that means that foo() will have to prove that usize: Eq<usize> in order to show that it can call bar() with usize as the type argument. If we wanted, we could write a Prolog predicate that defines the conditions under which bar() can be called. We'll say that those conditions are called being \"well-formed\": barWellFormed(?U) :- Eq(?U, ?U). Then we can say that foo() type-checks if the reference to bar::<usize> (that is, bar() applied to the type usize ) is well-formed: fooTypeChecks :- barWellFormed(usize). If we try to prove the goal fooTypeChecks , it will succeed: fooTypeChecks is provable if: barWellFormed(usize) , which is provable if: Eq(usize, usize) , which is provable because of an impl. Ok, so far so good. Let's move on to type-checking a more complex function.","title":"Type-checking normal functions"},"high-level-overview.html#the-main-stages-of-compilation":{"body":"The Rust compiler is in a bit of transition right now. It used to be a purely \"pass-based\" compiler, where we ran a number of passes over the entire program, and each did a particular check of transformation. We are gradually replacing this pass-based code with an alternative setup based on on-demand queries . In the query-model, we work backwards, executing a query that expresses our ultimate goal (e.g. \"compile this crate\"). This query in turn may make other queries (e.g. \"get me a list of all modules in the crate\"). Those queries make other queries that ultimately bottom out in the base operations, like parsing the input, running the type-checker, and so forth. This on-demand model permits us to do exciting things like only do the minimal amount of work needed to type-check a single function. It also helps with incremental compilation. (For details on defining queries, check out src/librustc/ty/maps/README.md .) Regardless of the general setup, the basic operations that the compiler must perform are the same. The only thing that changes is whether these operations are invoked front-to-back, or on demand. In order to compile a Rust crate, these are the general steps that we take: Parsing input this processes the .rs files and produces the AST (\"abstract syntax tree\") the AST is defined in syntax/ast.rs . It is intended to match the lexical syntax of the Rust language quite closely. Name resolution, macro expansion, and configuration once parsing is complete, we process the AST recursively, resolving paths and expanding macros. This same process also processes #[cfg] nodes, and hence may strip things out of the AST as well. Lowering to HIR Once name resolution completes, we convert the AST into the HIR, or \" high-level intermediate representation \". The HIR is defined in src/librustc/hir/ ; that module also includes the lowering code. The HIR is a lightly desugared variant of the AST. It is more processed than the AST and more suitable for the analyses that follow. It is not required to match the syntax of the Rust language. As a simple example, in the AST , we preserve the parentheses that the user wrote, so ((1 + 2) + 3) and 1 + 2 + 3 parse into distinct trees, even though they are equivalent. In the HIR, however, parentheses nodes are removed, and those two expressions are represented in the same way. Type-checking and subsequent analyses An important step in processing the HIR is to perform type checking. This process assigns types to every HIR expression, for example, and also is responsible for resolving some \"type-dependent\" paths, such as field accesses ( x.f – we can't know what field f is being accessed until we know the type of x ) and associated type references ( T::Item – we can't know what type Item is until we know what T is). Type checking creates \"side-tables\" ( TypeckTables ) that include the types of expressions, the way to resolve methods, and so forth. After type-checking, we can do other analyses, such as privacy checking. Lowering to MIR and post-processing Once type-checking is done, we can lower the HIR into MIR (\"middle IR\"), which is a very desugared version of Rust, well suited to borrowck but also to certain high-level optimizations. Translation to LLVM and LLVM optimizations From MIR, we can produce LLVM IR. LLVM then runs its various optimizations, which produces a number of .o files (one for each \"codegen unit\"). Linking Finally, those .o files are linked together.","title":"The main stages of compilation","breadcrumbs":"The main stages of compilation","id":"high-level-overview.html#the-main-stages-of-compilation"},"traits/slg.html#the-slg-solver":{"body":"TODO: https://github.com/rust-lang-nursery/chalk/blob/master/chalk-engine/src/README.md","title":"The SLG solver","breadcrumbs":"Trait solving (new-style) » The SLG solver","id":"traits/slg.html#the-slg-solver"},"mir/index.html#representing-constants":{"title":"Representing constants","body":"to be written","id":"mir/index.html#representing-constants","breadcrumbs":"Representing constants"},"compiletest.html#adding-a-new-test-file":{"body":"Briefly, simply create your new test in the appropriate location under src/test . No registration of test files is necessary as compiletest will scan the src/test subfolder recursively, and will execute any Rust source files it finds as tests. See Adding new tests for a complete guide on how to adding new tests.","title":"Adding a new test file","breadcrumbs":"The compiler testing framework » Adding a new test file","id":"compiletest.html#adding-a-new-test-file"},"traits/goals-and-clauses.html#goals-and-clauses":{"breadcrumbs":"Trait solving (new-style) » Lowering to logic » Goals and clauses","title":"Goals and clauses","body":"In logic programming terms, a goal is something that you must prove and a clause is something that you know is true. As described in the lowering to logic chapter, Rust's trait solver is based on an extension of hereditary harrop (HH) clauses, which extend traditional Prolog Horn clauses with a few new superpowers.","id":"traits/goals-and-clauses.html#goals-and-clauses"},"compiler-debugging.html#logging-etiquette":{"title":"Logging etiquette","id":"compiler-debugging.html#logging-etiquette","body":"Because calls to debug! are removed by default, in most cases, don't worry about adding \"unnecessary\" calls to debug! and leaving them in code you commit - they won't slow down the performance of what we ship, and if they helped you pinning down a bug, they will probably help someone else with a different one. However, there are still a few concerns that you might care about:","breadcrumbs":"Logging etiquette"},"mir/regionck.html#skolemization-and-outlives-constraints":{"id":"mir/regionck.html#skolemization-and-outlives-constraints","title":"Skolemization and outlives constraints","breadcrumbs":"The MIR (Mid-level IR) » MIR borrowck » Skolemization and outlives constraints","body":"In the region inference engine, outlives constraints have the form: V1: V2 @ P where V1 and V2 are region indices, and hence map to some region variable (which may be universally or existentially quantified). The P here is a \"point\" in the control-flow graph; it's not important for this section. This variable will have a universe, so let's call those universes U(V1) and U(V2) respectively. (Actually, the only one we are going to care about is U(V1) .) When we encounter this constraint, the ordinary procedure is to start a DFS from P . We keep walking so long as the nodes we are walking are present in value(V2) and we add those nodes to value(V1) . If we reach a return point, we add in any end(X) elements. That part remains unchanged. But then after that we want to iterate over the skolemized skol(x) elements in V2 (each of those must be visible to U(V2) , but we should be able to just assume that is true, we don't have to check it). We have to ensure that value(V1) outlives each of those skolemized elements. Now there are two ways that could happen. First, if U(V1) can see the universe x (i.e., x <= U(V1) ), then we can just add skol(x) to value(V1) and be done. But if not, then we have to approximate: we may not know what set of elements skol(x) represents, but we should be able to compute some sort of upper bound B for it -- some region B that outlives skol(x) . For now, we'll just use 'static for that (since it outlives everything) -- in the future, we can sometimes be smarter here (and in fact we have code for doing this already in other contexts). Moreover, since 'static is in the root universe U0, we know that all variables can see it -- so basically if we find that value(V2) contains skol(x) for some universe x that V1 can't see, then we force V1 to 'static ."},"hir.html#identifiers-in-the-hir":{"title":"Identifiers in the HIR","id":"hir.html#identifiers-in-the-hir","breadcrumbs":"Identifiers in the HIR","body":"Most of the code that has to deal with things in HIR tends not to carry around references into the HIR, but rather to carry around identifier numbers (or just \"ids\"). Right now, you will find four sorts of identifiers in active use: DefId , which primarily names \"definitions\" or top-level items. You can think of a DefId as being shorthand for a very explicit and complete path, like std::collections::HashMap . However, these paths are able to name things that are not nameable in normal Rust (e.g. impls), and they also include extra information about the crate (such as its version number, as two versions of the same crate can co-exist). A DefId really consists of two parts, a CrateNum (which identifies the crate) and a DefIndex (which indixes into a list of items that is maintained per crate). HirId , which combines the index of a particular item with an offset within that item. the key point of a HirId is that it is relative to some item (which is named via a DefId ). BodyId , this is an absolute identifier that refers to a specific body (definition of a function or constant) in the crate. It is currently effectively a \"newtype'd\" NodeId . NodeId , which is an absolute id that identifies a single node in the HIR tree. While these are still in common use, they are being slowly phased out . Since they are absolute within the crate, adding a new node anywhere in the tree causes the NodeId s of all subsequent code in the crate to change. This is terrible for incremental compilation, as you can perhaps imagine."},"query.html#how-the-compiler-executes-a-query":{"breadcrumbs":"How the compiler executes a query","title":"How the compiler executes a query","body":"So you may be wondering what happens when you invoke a query method. The answer is that, for each query, the compiler maintains a cache – if your query has already been executed, then, the answer is simple: we clone the return value out of the cache and return it (therefore, you should try to ensure that the return types of queries are cheaply cloneable; insert a Rc if necessary). Providers If, however, the query is not in the cache, then the compiler will try to find a suitable provider . A provider is a function that has been defined and linked into the compiler somewhere that contains the code to compute the result of the query. Providers are defined per-crate. The compiler maintains, internally, a table of providers for every crate, at least conceptually. Right now, there are really two sets: the providers for queries about the local crate (that is, the one being compiled) and providers for queries about external crates (that is, dependencies of the local crate). Note that what determines the crate that a query is targeting is not the kind of query, but the key . For example, when you invoke tcx.type_of(def_id) , that could be a local query or an external query, depending on what crate the def_id is referring to (see the self::keys::Key trait for more information on how that works). Providers always have the same signature: fn provider<'cx, 'tcx>(tcx: TyCtxt<'cx, 'tcx, 'tcx>, key: QUERY_KEY) -> QUERY_RESULT\n{ ...\n} Providers take two arguments: the tcx and the query key. Note also that they take the global tcx (i.e. they use the 'tcx lifetime twice), rather than taking a tcx with some active inference context. They return the result of the query. How providers are setup When the tcx is created, it is given the providers by its creator using the Providers struct. This struct is generated by the macros here, but it is basically a big list of function pointers: struct Providers { type_of: for<'cx, 'tcx> fn(TyCtxt<'cx, 'tcx, 'tcx>, DefId) -> Ty<'tcx>, ...\n} At present, we have one copy of the struct for local crates, and one for external crates, though the plan is that we may eventually have one per crate. These Provider structs are ultimately created and populated by librustc_driver , but it does this by distributing the work throughout the other rustc_* crates. This is done by invoking various provide functions. These functions tend to look something like this: pub fn provide(providers: &mut Providers) { *providers = Providers { type_of, ..*providers };\n} That is, they take an &mut Providers and mutate it in place. Usually we use the formulation above just because it looks nice, but you could as well do providers.type_of = type_of , which would be equivalent. (Here, type_of would be a top-level function, defined as we saw before.) So, if we want to add a provider for some other query, let's call it fubar , into the crate above, we might modify the provide() function like so: pub fn provide(providers: &mut Providers) { *providers = Providers { type_of, fubar, ..*providers };\n} fn fubar<'cx, 'tcx>(tcx: TyCtxt<'cx, 'tcx>, key: DefId) -> Fubar<'tcx> { ... } N.B. Most of the rustc_* crates only provide local providers . Almost all extern providers wind up going through the rustc_metadata crate , which loads the information from the crate metadata. But in some cases there are crates that provide queries for both local and external crates, in which case they define both a provide and a provide_extern function that rustc_driver can invoke.","id":"query.html#how-the-compiler-executes-a-query"},"rustdoc.html#other-tricks-up-its-sleeve":{"title":"Other tricks up its sleeve","body":"All this describes the process for generating HTML documentation from a Rust crate, but there are couple other major modes that rustdoc runs in. It can also be run on a standalone Markdown file, or it can run doctests on Rust code or standalone Markdown files. For the former, it shortcuts straight to html/markdown.rs , optionally including a mode which inserts a Table of Contents to the output HTML. For the latter, rustdoc runs a similar partial-compilation to get relevant documentation in test.rs , but instead of going through the full clean and render process, it runs a much simpler crate walk to grab just the hand-written documentation. Combined with the aforementioned \" find_testable_code \" in html/markdown.rs , it builds up a collection of tests to run before handing them off to the libtest test runner. One notable location in test.rs is the function make_test , which is where hand-written doctests get transformed into something that can be executed. Some extra reading about make_test can be found here .","breadcrumbs":"The Rustc Driver » Other tricks up its sleeve","id":"rustdoc.html#other-tricks-up-its-sleeve"},"type-inference.html#enforcing-equality--subtyping":{"breadcrumbs":"Enforcing equality / subtyping","body":"The most basic operations you can perform in the type inferencer is equality , which forces two types T and U to be the same. The recommended way to add an equality constraint is to use the at method, roughly like so: infcx.at(...).eq(t, u); The first at() call provides a bit of context, i.e. why you are doing this unification, and in what environment, and the eq method performs the actual equality constraint. When you equate things, you force them to be precisely equal. Equating returns an InferResult – if it returns Err(err) , then equating failed, and the enclosing TypeError will tell you what went wrong. The success case is perhaps more interesting. The \"primary\" return type of eq is () – that is, when it succeeds, it doesn't return a value of any particular interest. Rather, it is executed for its side-effects of constraining type variables and so forth. However, the actual return type is not () , but rather InferOk<()> . The InferOk type is used to carry extra trait obligations – your job is to ensure that these are fulfilled (typically by enrolling them in a fulfillment context). See the trait chapter for more background on that. You can similarly enforce subtyping through infcx.at(..).sub(..) . The same basic concepts as above apply.","title":"Enforcing equality / subtyping","id":"type-inference.html#enforcing-equality--subtyping"},"traits/canonicalization.html#canonicalizing-the-query-result":{"id":"traits/canonicalization.html#canonicalizing-the-query-result","breadcrumbs":"Trait solving (new-style) » Canonical queries » Canonicalizing the query result","title":"Canonicalizing the query result","body":"As discussed in the parent section , most trait queries wind up with a result that brings together a \"certainty value\" certainty , a result substitution var_values , and some region constraints. To create this, we wind up re-using the substitution S that we created when first instantiating our query. To refresh your memory, we had a query for<T,L,T> { ?0: Foo<'?1, ?2> } for which we made a substutition S: S = [?A, '?B, ?C] We then did some work which unified some of those variables with other things. If we \"refresh\" S with the latest results, we get: S = [Vec<?E>, '?D, ?E] These are precisely the new values for the three input variables from our original query. Note though that they include some new variables (like ?E ). We can make those go away by canonicalizing again! We don't just canonicalize S, though, we canonicalize the whole query response QR: QR = { certainty: Proven, // or whatever var_values: [Vec<?E>, '?D, ?E] // this is S region_constraints: [?E: '?D], // from the impl value: (), // for our purposes, just (), but // in some cases this might have // a type or other info\n} The result would be as follows: Canonical(QR) = for<T, L> { certainty: Proven, var_values: [Vec<?0>, '?1, ?2] region_constraints: [?2: '?1], value: (),\n} (One subtle point: when we canonicalize the query result , we do not use any special treatment for free lifetimes. Note that both references to '?D , for example, were converted into the same canonical variable ( ?1 ). This is in contrast to the original query, where we canonicalized every free lifetime into a fresh canonical variable.) Now, this result must be reapplied in each context where needed."},"mir/optimizations.html#mir-optimizations":{"body":"","breadcrumbs":"The MIR (Mid-level IR) » MIR optimizations","title":"MIR optimizations","id":"mir/optimizations.html#mir-optimizations"},"traits/lowering-rules.html#trait-header":{"id":"traits/lowering-rules.html#trait-header","title":"Trait header","breadcrumbs":"Trait solving (new-style) » Trait header","body":"From the trait itself we mostly make \"meta\" rules that setup the relationships between different kinds of domain goals. The first such rule from the trait header creates the mapping between the FromEnv and Implemented predicates: // Rule Implemented-From-Env\nforall<Self, P1..Pn> { Implemented(Self: Trait<P1..Pn>) :- FromEnv(Self: Trait<P1..Pn>)\n} Implied bounds The next few clauses have to do with implied bounds (see also RFC 2089 ). For each trait, we produce two clauses: // Rule Implied-Bound-From-Trait\n//\n// For each where clause WC:\nforall<Self, P1..Pn> { FromEnv(WC) :- FromEnv(Self: Trait<P1..Pn)\n} This clause says that if we are assuming that the trait holds, then we can also assume that its where-clauses hold. It's perhaps useful to see an example: trait Eq: PartialEq { ... } In this case, the PartialEq supertrait is equivalent to a where Self: PartialEq where clause, in our simplified model. The program clause above therefore states that if we can prove FromEnv(T: Eq) -- e.g., if we are in some function with T: Eq in its where clauses -- then we also know that FromEnv(T: PartialEq) . Thus the set of things that follow from the environment are not only the direct where clauses but also things that follow from them. The next rule is related; it defines what it means for a trait reference to be well-formed : // Rule WellFormed-TraitRef\nforall<Self, P1..Pn> { WellFormed(Self: Trait<P1..Pn>) :- Implemented(Self: Trait<P1..Pn>) && WellFormed(WC)\n} This WellFormed rule states that T: Trait is well-formed if (a) T: Trait is implemented and (b) all the where-clauses declared on Trait are well-formed (and hence they are implemented). Remember that the WellFormed predicate is coinductive ; in this case, it is serving as a kind of \"carrier\" that allows us to enumerate all the where clauses that are transitively implied by T: Trait . An example: trait Foo: A + Bar { }\ntrait Bar: B + Foo { }\ntrait A { }\ntrait B { } Here, the transitive set of implications for T: Foo are T: A , T: Bar , and T: B . And indeed if we were to try to prove WellFormed(T: Foo) , we would have to prove each one of those: WellFormed(T: Foo) Implemented(T: Foo) WellFormed(T: A) Implemented(T: A) WellFormed(T: Bar) Implemented(T: Bar) WellFormed(T: B) Implemented(T: Bar) WellFormed(T: Foo) -- cycle, true coinductively This WellFormed predicate is only used when proving that impls are well-formed -- basically, for each impl of some trait ref TraitRef , we must show that WellFormed(TraitRef) . This in turn justifies the implied bounds rules that allow us to extend the set of FromEnv items."},"traits/chalk-overview.html#resources":{"breadcrumbs":"Trait solving (new-style) » Resources","id":"traits/chalk-overview.html#resources","body":"Chalk Source Code Chalk Glossary The traits section of the rustc guide (you are here)","title":"Resources"},"type-inference.html#subtyping-obligations":{"body":"One thing worth discussing is subtyping obligations. When you force two types to be a subtype, like ?T <: i32 , we can often convert those into equality constraints. This follows from Rust's rather limited notion of subtyping: so, in the above case, ?T <: i32 is equivalent to ?T = i32 . However, in some cases we have to be more careful. For example, when regions are involved. So if you have ?T <: &'a i32 , what we would do is to first \"generalize\" &'a i32 into a type with a region variable: &'?b i32 , and then unify ?T with that ( ?T = &'?b i32 ). We then relate this new variable with the original bound: &'?b i32 <: &'a i32 This will result in a region constraint (see below) of '?b: 'a . One final interesting case is relating two unbound type variables, like ?T <: ?U . In that case, we can't make progress, so we enqueue an obligation Subtype(?T, ?U) and return it via the InferOk mechanism. You'll have to try again when more details about ?T or ?U are known.","breadcrumbs":"Subtyping obligations","title":"Subtyping obligations","id":"type-inference.html#subtyping-obligations"},"traits/caching.html#an-example":{"body":"The high-level idea of how the cache works is that we first replace all unbound inference variables with skolemized versions. Therefore, if we had a trait reference usize : Foo<$t> , where $t is an unbound inference variable, we might replace it with usize : Foo<$0> , where $0 is a skolemized type. We would then look this up in the cache. If we found a hit, the hit would tell us the immediate next step to take in the selection process (e.g. apply impl #22, or apply where clause X : Foo<Y> ). On the other hand, if there is no hit, we need to go through the selection process from scratch. Suppose, we come to the conclusion that the only possible impl is this one, with def-id 22: impl Foo<isize> for usize { ... } // Impl #22 We would then record in the cache usize : Foo<$0> => ImplCandidate(22) . Next we would confirm ImplCandidate(22) , which would (as a side-effect) unify $t with isize . Now, at some later time, we might come along and see a usize : Foo<$u> . When skolemized, this would yield usize : Foo<$0> , just as before, and hence the cache lookup would succeed, yielding ImplCandidate(22) . We would confirm ImplCandidate(22) which would (as a side-effect) unify $u with isize .","breadcrumbs":"Trait solving (old-style) » An example","title":"An example","id":"traits/caching.html#an-example"},"traits/lowering-module.html#the--program_clauses_for--query":{"id":"traits/lowering-module.html#the--program_clauses_for--query","body":"The main entry point is the program_clauses_for query , which -- given a def-id -- produces a set of Chalk program clauses. These queries are tested using a dedicated unit-testing mechanism, described below . The query is invoked on a DefId that identifies something like a trait, an impl, or an associated item definition. It then produces and returns a vector of program clauses.","title":"The program_clauses_for query","breadcrumbs":"Trait solving (new-style) » Lowering rules » The program_clauses_for query"},"how-to-build-and-run.html#running-xpy-and-building-a-stage1-compiler":{"breadcrumbs":"Running x.py and building a stage1 compiler","id":"how-to-build-and-run.html#running-xpy-and-building-a-stage1-compiler","title":"Running x.py and building a stage1 compiler","body":"One thing to keep in mind is that rustc is a bootstrapping compiler. That is, since rustc is written in Rust, we need to use an older version of the compiler to compile the newer version. In particular, the newer version of the compiler, libstd , and other tooling may use some unstable features internally. The result is the compiling rustc is done in stages. Stage 0: the stage0 compiler can be your existing (perhaps older version of) Rust compiler, the current beta compiler or you may download the binary from the internet. Stage 1: the code in your clone (for new version) is then compiled with the stage0 compiler to produce the stage1 compiler. However, it was built with an older compiler (stage0), so to optimize the stage1 compiler we go to next stage. Stage 2: we rebuild our stage1 compiler with itself to produce the stage2 compiler (i.e. it builds itself) to have all the latest optimizations . (Optional) Stage 3 : to sanity check of our new compiler, we can build it again with stage2 compiler which must be identical to itself, unless something has broken. For hacking, often building the stage 1 compiler is enough, but for final testing and release, the stage 2 compiler is used. ./x.py check is really fast to build the rust compiler. It is, in particular, very useful when you're doing some kind of \"type-based refactoring\", like renaming a method, or changing the signature of some function. Once you've created a config.toml, you are now ready to run x.py . There are a lot of options here, but let's start with what is probably the best \"go to\" command for building a local rust: > ./x.py build -i --stage 1 src/libstd What this command will do is the following: Using the beta compiler (also called stage 0), it will build the standard library and rustc from the src directory. The resulting compiler is called the \"stage 1\" compiler. During this build, the -i (or --incremental ) switch enables incremental compilation, so that if you later rebuild after editing things in src , you can save a bit of time. Using this stage 1 compiler, it will build the standard library. (this is what the src/libstd ) means. This is just a subset of the full rustc build. The full rustc build (what you get if you just say ./x.py build ) has quite a few more steps: Build stage1 rustc with stage0 compiler. Build libstd with stage1 compiler (up to here is the same). Build rustc from src again, this time with the stage1 compiler (this part is new). The resulting compiler here is called the \"stage2\" compiler. Build libstd with stage2 compiler. Build librustdoc and a bunch of other things."},"rustdoc.html#from-crate-to-clean":{"body":"In core.rs are two central items: the DocContext struct, and the run_core function. The latter is where rustdoc calls out to rustc to compile a crate to the point where rustdoc can take over. The former is a state container used when crawling through a crate to gather its documentation. The main process of crate crawling is done in clean/mod.rs through several implementations of the Clean trait defined within. This is a conversion trait, which defines one method: pub trait Clean<T> { fn clean(&self, cx: &DocContext) -> T;\n} clean/mod.rs also defines the types for the \"cleaned\" AST used later on to render documentation pages. Each usually accompanies an implementation of Clean that takes some AST or HIR type from rustc and converts it into the appropriate \"cleaned\" type. \"Big\" items like modules or associated items may have some extra processing in its Clean implementation, but for the most part these impls are straightforward conversions. The \"entry point\" to this module is the impl Clean<Crate> for visit_ast::RustdocVisitor , which is called by run_core above. You see, I actually lied a little earlier: There's another AST transformation that happens before the events in clean/mod.rs . In visit_ast.rs is the type RustdocVisitor , which actually crawls a hir::Crate to get the first intermediate representation, defined in doctree.rs . This pass is mainly to get a few intermediate wrappers around the HIR types and to process visibility and inlining. This is where #[doc(inline)] , #[doc(no_inline)] , and #[doc(hidden)] are processed, as well as the logic for whether a pub use should get the full page or a \"Reexport\" line in the module page. The other major thing that happens in clean/mod.rs is the collection of doc comments and #[doc=\"\"] attributes into a separate field of the Attributes struct, present on anything that gets hand-written documentation. This makes it easier to collect this documentation later in the process. The primary output of this process is a clean::Crate with a tree of Items which describe the publicly-documentable items in the target crate.","title":"From crate to clean","id":"rustdoc.html#from-crate-to-clean","breadcrumbs":"The Rustc Driver » From crate to clean"},"traits/chalk-overview.html#solver":{"body":"See The SLG Solver .","title":"Solver","id":"traits/chalk-overview.html#solver","breadcrumbs":"Trait solving (new-style) » Solver"},"conventions.html#use-todo-comments-for-things-you-dont-want-to-forget":{"title":"Use \"TODO\" comments for things you don't want to forget","breadcrumbs":"Use \"TODO\" comments for things you don't want to forget","body":"As a useful tool to yourself, you can insert a // TODO comment for something that you want to get back to before you land your PR: fn do_something() { if something_else { unimplemented!(): // TODO write this }\n} The tidy script will report an error for a // TODO comment, so this code would not be able to land until the TODO is fixed (or removed). This can also be useful in a PR as a way to signal from one commit that you are leaving a bug that a later commit will fix: if foo { return true; // TODO wrong, but will be fixed in a later commit\n}","id":"conventions.html#use-todo-comments-for-things-you-dont-want-to-forget"},"how-to-build-and-run.html#creating-a-rustup-toolchain":{"breadcrumbs":"Creating a rustup toolchain","title":"Creating a rustup toolchain","body":"Once you have successfully built rustc, you will have created a bunch of files in your build directory. In order to actually run the resulting rustc, we recommend creating rustup toolchains. The first one will run the stage1 compiler (which we built above). The second will execute the stage2 compiler (which we did not build, but which you will likely need to build at some point; for example, if you want to run the entire test suite). > rustup toolchain link stage1 build/<host-triple>/stage1\n> rustup toolchain link stage2 build/<host-triple>/stage2 Now you can run the rustc you built with. If you run with -vV , you should see a version number ending in -dev , indicating a build from your local environment: > rustc +stage1 -vV\nrustc 1.25.0-dev\nbinary: rustc\ncommit-hash: unknown\ncommit-date: unknown\nhost: x86_64-unknown-linux-gnu\nrelease: 1.25.0-dev\nLLVM version: 4.0","id":"how-to-build-and-run.html#creating-a-rustup-toolchain"},"mir/passes.html#mir-passes":{"title":"MIR passes","body":"If you would like to get the MIR for a function (or constant, etc), you can use the optimized_mir(def_id) query. This will give you back the final, optimized MIR. For foreign def-ids, we simply read the MIR from the other crate's metadata. But for local def-ids, the query will construct the MIR and then iteratively optimize it by applying a series of passes. This section describes how those passes work and how you can extend them. To produce the optimized_mir(D) for a given def-id D , the MIR passes through several suites of optimizations, each represented by a query. Each suite consists of multiple optimizations and transformations. These suites represent useful intermediate points where we want to access the MIR for type checking or other purposes: mir_build(D) – not a query, but this constructs the initial MIR mir_const(D) – applies some simple transformations to make MIR ready for constant evaluation; mir_validated(D) – applies some more transformations, making MIR ready for borrow checking; optimized_mir(D) – the final state, after all optimizations have been performed.","id":"mir/passes.html#mir-passes","breadcrumbs":"The MIR (Mid-level IR) » MIR passes"},"query.html#adding-a-new-kind-of-query":{"id":"query.html#adding-a-new-kind-of-query","body":"So suppose you want to add a new kind of query, how do you do so? Well, defining a query takes place in two steps: first, you have to specify the query name and arguments; and then, you have to supply query providers where needed. To specify the query name and arguments, you simply add an entry to the big macro invocation in src/librustc/ty/maps/mod.rs . This will probably have changed by the time you read this README, but at present it looks something like: define_maps! { <'tcx> /// Records the type of every item. [] fn type_of: TypeOfItem(DefId) -> Ty<'tcx>, ...\n} Each line of the macro defines one query. The name is broken up like this: [] fn type_of: TypeOfItem(DefId) -> Ty<'tcx>,\n^^ ^^^^^^^ ^^^^^^^^^^ ^^^^^ ^^^^^^^^\n| | | | |\n| | | | result type of query\n| | | query key type\n| | dep-node constructor\n| name of query\nquery flags Let's go over them one by one: Query flags: these are largely unused right now, but the intention is that we'll be able to customize various aspects of how the query is processed. Name of query: the name of the query method ( tcx.type_of(..) ). Also used as the name of a struct ( ty::maps::queries::type_of ) that will be generated to represent this query. Dep-node constructor: indicates the constructor function that connects this query to incremental compilation. Typically, this is a DepNode variant, which can be added by modifying the define_dep_nodes! macro invocation in librustc/dep_graph/dep_node.rs . However, sometimes we use a custom function, in which case the name will be in snake case and the function will be defined at the bottom of the file. This is typically used when the query key is not a def-id, or just not the type that the dep-node expects. Query key type: the type of the argument to this query. This type must implement the ty::maps::keys::Key trait, which defines (for example) how to map it to a crate, and so forth. Result type of query: the type produced by this query. This type should (a) not use RefCell or other interior mutability and (b) be cheaply cloneable. Interning or using Rc or Arc is recommended for non-trivial data types. The one exception to those rules is the ty::steal::Steal type, which is used to cheaply modify MIR in place. See the definition of Steal for more details. New uses of Steal should not be added without alerting @rust-lang/compiler . So, to add a query: Add an entry to define_maps! using the format above. Possibly add a corresponding entry to the dep-node macro. Link the provider by modifying the appropriate provide method; or add a new one if needed and ensure that rustc_driver is invoking it. Query structs and descriptions For each kind, the define_maps macro will generate a \"query struct\" named after the query. This struct is a kind of a place-holder describing the query. Each such struct implements the self::config::QueryConfig trait, which has associated types for the key/value of that particular query. Basically the code generated looks something like this: // Dummy struct representing a particular kind of query:\npub struct type_of<'tcx> { phantom: PhantomData<&'tcx ()> } impl<'tcx> QueryConfig for type_of<'tcx> { type Key = DefId; type Value = Ty<'tcx>;\n} There is an additional trait that you may wish to implement called self::config::QueryDescription . This trait is used during cycle errors to give a \"human readable\" name for the query, so that we can summarize what was happening when the cycle occurred. Implementing this trait is optional if the query key is DefId , but if you don't implement it, you get a pretty generic error (\"processing foo ...\"). You can put new impls into the config module. They look something like this: impl<'tcx> QueryDescription for queries::type_of<'tcx> { fn describe(tcx: TyCtxt, key: DefId) -> String { format!(\"computing the type of `{}`\", tcx.item_path_str(key)) }\n}","breadcrumbs":"Adding a new kind of query","title":"Adding a new kind of query"},"compiler-debugging.html#getting-a-backtrace-for-errors":{"title":"Getting a backtrace for errors","body":"If you want to get a backtrace to the point where the compiler emits an error message, you can pass the -Z treat-err-as-bug , which will make the compiler panic on the first error it sees. This can also help when debugging delay_span_bug calls - it will make the first delay_span_bug call panic, which will give you a useful backtrace. For example: $ cat error.rs\nfn main() { 1 + ();\n} $ ./build/x86_64-unknown-linux-gnu/stage1/bin/rustc error.rs\nerror[E0277]: the trait bound `{integer}: std::ops::Add<()>` is not satisfied --> error.rs:2:7 |\n2 | 1 + (); | ^ no implementation for `{integer} + ()` | = help: the trait `std::ops::Add<()>` is not implemented for `{integer}` error: aborting due to previous error $ # Now, where does the error above come from?\n$ RUST_BACKTRACE=1 \\ ./build/x86_64-unknown-linux-gnu/stage1/bin/rustc \\ error.rs \\ -Z treat-err-as-bug\nerror[E0277]: the trait bound `{integer}: std::ops::Add<()>` is not satisfied --> error.rs:2:7 |\n2 | 1 + (); | ^ no implementation for `{integer} + ()` | = help: the trait `std::ops::Add<()>` is not implemented for `{integer}` error: internal compiler error: unexpected panic note: the compiler unexpectedly panicked. this is a bug. note: we would appreciate a bug report: https://github.com/rust-lang/rust/blob/master/CONTRIBUTING.md#bug-reports note: rustc 1.24.0-dev running on x86_64-unknown-linux-gnu note: run with `RUST_BACKTRACE=1` for a backtrace thread 'rustc' panicked at 'encountered error with `-Z treat_err_as_bug', /home/user/rust/src/librustc_errors/lib.rs:411:12\nnote: Some details are omitted, run with `RUST_BACKTRACE=full` for a verbose backtrace.\nstack backtrace: (~~~ IRRELEVANT PART OF BACKTRACE REMOVED BY ME ~~~) 7: rustc::traits::error_reporting::<impl rustc::infer::InferCtxt<'a, 'gcx, 'tcx>>::report_selection_error at /home/user/rust/src/librustc/traits/error_reporting.rs:823 8: rustc::traits::error_reporting::<impl rustc::infer::InferCtxt<'a, 'gcx, 'tcx>>::report_fulfillment_errors at /home/user/rust/src/librustc/traits/error_reporting.rs:160 at /home/user/rust/src/librustc/traits/error_reporting.rs:112 9: rustc_typeck::check::FnCtxt::select_obligations_where_possible at /home/user/rust/src/librustc_typeck/check/mod.rs:2192 (~~~ IRRELEVANT PART OF BACKTRACE REMOVED BY ME ~~~) 36: rustc_driver::run_compiler at /home/user/rust/src/librustc_driver/lib.rs:253\n$ # Cool, now I have a backtrace for the error","breadcrumbs":"Getting a backtrace for errors","id":"compiler-debugging.html#getting-a-backtrace-for-errors"},"compiler-debugging.html#getting-logging-output":{"id":"compiler-debugging.html#getting-logging-output","breadcrumbs":"Getting logging output","title":"Getting logging output","body":"The compiler has a lot of debug! calls, which print out logging information at many points. These are very useful to at least narrow down the location of a bug if not to find it entirely, or just to orient yourself as to why the compiler is doing a particular thing. To see the logs, you need to set the RUST_LOG environment variable to your log filter, e.g. to get the logs for a specific module, you can run the compiler as RUST_LOG=module::path rustc my-file.rs . The Rust logs are powered by env-logger , and you can look at the docs linked there to see the full RUST_LOG syntax. All debug! output will then appear in standard error. Note that unless you use a very strict filter, the logger will emit a lot of output - so it's typically a good idea to pipe standard error to a file and look at the log output with a text editor. So to put it together. # This puts the output of all debug calls in `librustc/traits` into\n# standard error, which might fill your console backscroll.\n$ RUST_LOG=rustc::traits rustc +local my-file.rs # This puts the output of all debug calls in `librustc/traits` in\n# `traits-log`, so you can then see it with a text editor.\n$ RUST_LOG=rustc::traits rustc +local my-file.rs 2>traits-log # Not recommended. This will show the output of all `debug!` calls\n# in the Rust compiler, and there are a *lot* of them, so it will be\n# hard to find anything.\n$ RUST_LOG=debug rustc +local my-file.rs 2>all-log # This will show the output of all `info!` calls in `rustc_trans`.\n#\n# There's an `info!` statement in `trans_instance` that outputs\n# every function that is translated. This is useful to find out\n# which function triggers an LLVM assertion, and this is an `info!`\n# log rather than a `debug!` log so it will work on the official\n# compilers.\n$ RUST_LOG=rustc_trans=info rustc +local my-file.rs While calls to info! are included in every build of the compiler, calls to debug! are only included in the program if the debug-assertions=yes is turned on in config.toml (it is turned off by default), so if you don't see DEBUG logs, especially if you run the compiler with RUST_LOG=rustc rustc some.rs and only see INFO logs, make sure that debug-assertions=yes is turned on in your config.toml. I also think that in some cases just setting it will not trigger a rebuild, so if you changed it and you already have a compiler built, you might want to call x.py clean to force one."},"traits/associated-types.html#projection-equality":{"id":"traits/associated-types.html#projection-equality","body":"So far we have seen two ways to answer the question of \"When can we consider an associated type projection equal to another type?\": the Normalize predicate could be used to transform associated type projections when we knew which impl was applicable; skolemized associated types can be used when we don't. We now introduce the ProjectionEq predicate to bring those two cases together. The ProjectionEq predicate looks like so: ProjectionEq(<T as IntoIterator>::Item = U) and we will see that it can be proven either via normalization or skolemization. As part of lowering an associated type declaration from some trait, we create two program clauses for ProjectionEq : forall<T, U> { ProjectionEq(<T as IntoIterator>::Item = U) :- Normalize(<T as IntoIterator>::Item -> U)\n} forall<T> { ProjectionEq(<T as IntoIterator>::Item = (IntoIterator::Item)<T>)\n} These are the only two ProjectionEq program clauses we ever make for any given associated item.","title":"Projection equality","breadcrumbs":"Trait solving (new-style) » Lowering to logic » Projection equality"},"name-resolution.html#scopes-and-ribs":{"title":"Scopes and ribs","breadcrumbs":"Scopes and ribs","body":"A name is visible only in certain area in the source code. This forms a hierarchical structure, but not necessarily a simple one ‒ if one scope is part of another, it doesn't mean the name visible in the outer one is also visible in the inner one, or that it refers to the same thing. To cope with that, the compiler introduces the concept of Ribs. This is abstraction of a scope. Every time the set of visible names potentially changes, a new rib is pushed onto a stack. The places where this can happen includes for example: The obvious places ‒ curly braces enclosing a block, function boundaries, modules. Introducing a let binding ‒ this can shadow another binding with the same name. Macro expansion border ‒ to cope with macro hygiene. When searching for a name, the stack of ribs is traversed from the innermost outwards. This helps to find the closest meaning of the name (the one not shadowed by anything else). The transition to outer rib may also change the rules what names are usable ‒ if there are nested functions (not closures), the inner one can't access parameters and local bindings of the outer one, even though they should be visible by ordinary scoping rules. An example: fn do_something<T: Default>(val: T) { // <- New rib in both types and values (1) // `val` is accessible, as is the helper function // `T` is accessible let helper = || { // New rib on `helper` (2) and another on the block (3) // `val` is accessible here }; // End of (3) // `val` is accessible, `helper` variable shadows `helper` function fn helper() { // <- New rib in both types and values (4) // `val` is not accessible here, (4) is not transparent for locals) // `T` is not accessible here } // End of (4) let val = T::default(); // New rib (5) // `val` is the variable, not the parameter here\n} // End of (5), (2) and (1) Because the rules for different namespaces are a bit different, each namespace has its own independent rib stack that is constructed in parallel to the others. In addition, there's also a rib stack for local labels (eg. names of loops or blocks), which isn't a full namespace in its own right.","id":"name-resolution.html#scopes-and-ribs"},"diag.html#emitting-diagnostics":{"id":"diag.html#emitting-diagnostics","breadcrumbs":"Emitting Diagnostics","title":"Emitting Diagnostics","body":"A lot of effort has been put into making rustc have great error messages. This chapter is about how to emit compile errors and lints from the compiler."},"diag.html#edition-gated-lints":{"breadcrumbs":"Edition-gated Lints","id":"diag.html#edition-gated-lints","body":"Sometimes we want to change the behavior of a lint in a new edition. To do this, we just add the transition to our invocation of declare_lint! : declare_lint! { pub ANONYMOUS_PARAMETERS, Allow, \"detects anonymous parameters\", Edition::Edition2018 => Warn,\n} This makes the ANONYMOUS_PARAMETERS lint allow-by-default in the 2015 edition but warn-by-default in the 2018 edition. Lints that represent an incompatibility (i.e. error) in the upcoming edition should also be registered as FutureIncompatibilityLint s in register_builtins function in rustc_lint::lib .","title":"Edition-gated Lints"},"type-checking.html#type-collection":{"title":"Type collection","breadcrumbs":"Type collection","body":"Type \"collection\" is the process of converting the types found in the HIR ( hir::Ty ), which represent the syntactic things that the user wrote, into the internal representation used by the compiler ( Ty<'tcx> ) -- we also do similar conversions for where-clauses and other bits of the function signature. To try and get a sense for the difference, consider this function: struct Foo { }\nfn foo(x: Foo, y: self::Foo) { ... }\n// ^^^ ^^^^^^^^^ Those two parameters x and y each have the same type: but they will have distinct hir::Ty nodes. Those nodes will have different spans, and of course they encode the path somewhat differently. But once they are \"collected\" into Ty<'tcx> nodes, they will be represented by the exact same internal type. Collection is defined as a bundle of queries for computing information about the various functions, traits, and other items in the crate being compiled. Note that each of these queries is concerned with interprocedural things -- for example, for a function definition, collection will figure out the type and signature of the function, but it will not visit the body of the function in any way, nor examine type annotations on local variables (that's the job of type checking ). For more details, see the collect module. TODO : actually talk about type checking...","id":"type-checking.html#type-collection"},"traits/lowering-rules.html#function-and-constant-values":{"body":"Chalk didn't model functions and constants, but I would eventually like to treat them exactly like normalization. This presumably involves adding a new kind of parameter (constant), and then having a NormalizeValue domain goal. This is to be written because the details are a bit up in the air.","id":"traits/lowering-rules.html#function-and-constant-values","breadcrumbs":"Trait solving (new-style) » Function and constant values","title":"Function and constant values"},"appendix/background.html#what-is-a-free-region-or-a-free-variable-what-about-bound-region":{"title":"What is a \"free region\" or a \"free variable\"? What about \"bound region\"?","id":"appendix/background.html#what-is-a-free-region-or-a-free-variable-what-about-bound-region","breadcrumbs":"What is a \"free region\" or a \"free variable\"? What about \"bound region\"?","body":"Let's describe the concepts of free vs bound in terms of program variables, since that's the thing we're most familiar with. Consider this expression, which creates a closure: |a, b| a + b . Here, the a and b in a + b refer to the arguments that the closure will be given when it is called. We say that the a and b there are bound to the closure, and that the closure signature |a, b| is a binder for the names a and b (because any references to a or b within refer to the variables that it introduces). Consider this expression: a + b . In this expression, a and b refer to local variables that are defined outside of the expression. We say that those variables appear free in the expression (i.e., they are free , not bound (tied up)). So there you have it: a variable \"appears free\" in some expression/statement/whatever if it refers to something defined outside of that expressions/statement/whatever. Equivalently, we can then refer to the \"free variables\" of an expression -- which is just the set of variables that \"appear free\". So what does this have to do with regions? Well, we can apply the analogous concept to type and regions. For example, in the type &'a u32 , 'a appears free. But in the type for<'a> fn(&'a u32) , it does not."},"hir.html#the-hir":{"id":"hir.html#the-hir","title":"The HIR","body":"The HIR – \"High-Level Intermediate Representation\" – is the primary IR used in most of rustc. It is a compiler-friendly representation of the abstract syntax tree (AST) that is generated after parsing, macro expansion, and name resolution. Many parts of HIR resemble Rust surface syntax quite closely, with the exception that some of Rust's expression forms have been desugared away. For example, for loops are converted into a loop and do not appear in the HIR. This makes HIR more amenable to analysis than a normal AST. This chapter covers the main concepts of the HIR. You can view the HIR representation of your code by passing the -Zunpretty=hir-tree flag to rustc: > cargo rustc -- -Zunpretty=hir-tree","breadcrumbs":"The HIR"},"rustdoc.html#hot-potato":{"breadcrumbs":"The Rustc Driver » Hot potato","body":"Before moving on to the next major step, a few important \"passes\" occur over the documentation. These do things like combine the separate \"attributes\" into a single string and strip leading whitespace to make the document easier on the markdown parser, or drop items that are not public or deliberately hidden with #[doc(hidden)] . These are all implemented in the passes/ directory, one file per pass. By default, all of these passes are run on a crate, but the ones regarding dropping private/hidden items can be bypassed by passing --document-private-items to rustdoc. Note that unlike the previous set of AST transformations, the passes happen on the cleaned crate. (Strictly speaking, you can fine-tune the passes run and even add your own, but we're trying to deprecate that . If you need finer-grain control over these passes, please let us know!) Here is current (as of this writing) list of passes: propagate-doc-cfg - propagates #[doc(cfg(...))] to child items. collapse-docs concatenates all document attributes into one document attribute. This is necessary because each line of a doc comment is given as a separate doc attribute, and this will combine them into a single string with line breaks between each attribute. unindent-comments removes excess indentation on comments in order for markdown to like it. This is necessary because the convention for writing documentation is to provide a space between the /// or //! marker and the text, and stripping that leading space will make the text easier to parse by the Markdown parser. (In the past, the markdown parser used was not Commonmark- compliant, which caused annoyances with extra whitespace but this seems to be less of an issue today.) strip-priv-imports strips all private import statements ( use , extern crate ) from a crate. This is necessary because rustdoc will handle public imports by either inlining the item's documentation to the module or creating a \"Reexports\" section with the import in it. The pass ensures that all of these imports are actually relevant to documentation. strip-hidden and strip-private strip all doc(hidden) and private items from the output. strip-private implies strip-priv-imports . Basically, the goal is to remove items that are not relevant for public documentation.","title":"Hot potato","id":"rustdoc.html#hot-potato"},"macro-expansion.html#procedural-macros":{"body":"TODO","title":"Procedural Macros","id":"macro-expansion.html#procedural-macros","breadcrumbs":"Procedural Macros"},"mir/borrowck.html#major-phases-of-the-borrow-checker":{"title":"Major phases of the borrow checker","id":"mir/borrowck.html#major-phases-of-the-borrow-checker","body":"The borrow checker source is found in the rustc_mir::borrow_check module . The main entry point is the mir_borrowck query. At the time of this writing, MIR borrowck can operate in several modes, but this text will describe only the mode when NLL is enabled (what you get with #![feature(nll)] ). The overall flow of the borrow checker is as follows: We first create a local copy C of the MIR. In the coming steps, we will modify this copy in place to modify the types and things to include references to the new regions that we are computing. We then invoke nll::replace_regions_in_mir to modify this copy C. Among other things, this function will replace all of the regions in the MIR with fresh inference variables . (More details can be found in the regionck section .) Next, we perform a number of dataflow analyses that compute what data is moved and when. The results of these analyses are needed to do both borrow checking and region inference. Using the move data, we can then compute the values of all the regions in the MIR. (More details can be found in the NLL section .) Finally, the borrow checker itself runs, taking as input (a) the results of move analysis and (b) the regions computed by the region checker. This allows us to figure out which loans are still in scope at any particular point.","breadcrumbs":"The MIR (Mid-level IR) » Major phases of the borrow checker"},"traits/canonical-queries.html#the-traditional-interactive-prolog-query":{"id":"traits/canonical-queries.html#the-traditional-interactive-prolog-query","body":"In a traditional Prolog system, when you start a query, the solver will run off and start supplying you with every possible answer it can find. So given something like this: ?- Vec<i32>: AsRef<?U> The solver might answer: Vec<i32>: AsRef<[i32]> continue? (y/n) This continue bit is interesting. The idea in Prolog is that the solver is finding all possible instantiations of your query that are true. In this case, if we instantiate ?U = [i32] , then the query is true (note that a traditional Prolog interface does not, directly, tell us a value for ?U , but we can infer one by unifying the response with our original query -- Rust's solver gives back a substitution instead). If we were to hit y , the solver might then give us another possible answer: Vec<i32>: AsRef<Vec<i32>> continue? (y/n) This answer derives from the fact that there is a reflexive impl ( impl<T> AsRef<T> for T ) for AsRef . If were to hit y again, then we might get back a negative response: no Naturally, in some cases, there may be no possible answers, and hence the solver will just give me back no right away: ?- Box<i32>: Copy no In some cases, there might be an infinite number of responses. So for example if I gave this query, and I kept hitting y , then the solver would never stop giving me back answers: ?- Vec<?U>: Clone Vec<i32>: Clone continue? (y/n) Vec<Box<i32>>: Clone continue? (y/n) Vec<Box<Box<i32>>>: Clone continue? (y/n) Vec<Box<Box<Box<i32>>>>: Clone continue? (y/n) As you can imagine, the solver will gleefully keep adding another layer of Box until we ask it to stop, or it runs out of memory. Another interesting thing is that queries might still have variables in them. For example: ?- Rc<?T>: Clone might produce the answer: Rc<?T>: Clone continue? (y/n) After all, Rc<?T> is true no matter what type ?T is .","title":"The traditional, interactive Prolog query","breadcrumbs":"Trait solving (new-style) » The traditional, interactive Prolog query"},"traits/associated-types.html#skolemized-associated-types":{"body":"Sometimes however we want to work with associated types that cannot be normalized. For example, consider this function: fn foo<T: IntoIterator>(...) { ... } In this context, how would we normalize the type T::Item ? Without knowing what T is, we can't really do so. To represent this case, we introduce a type called a skolemized associated type projection . This is written like so (IntoIterator::Item)<T> . You may note that it looks a lot like a regular type (e.g., Option<T> ), except that the \"name\" of the type is (IntoIterator::Item) . This is not an accident: skolemized associated type projections work just like ordinary types like Vec<T> when it comes to unification. That is, they are only considered equal if (a) they are both references to the same associated type, like IntoIterator::Item and (b) their type arguments are equal. Skolemized associated types are never written directly by the user. They are used internally by the trait system only, as we will see shortly.","breadcrumbs":"Trait solving (new-style) » Lowering to logic » Skolemized associated types","title":"Skolemized associated types","id":"traits/associated-types.html#skolemized-associated-types"},"rustdoc.html#cheat-sheet":{"body":"Use x.py build --stage 1 src/libstd src/tools/rustdoc to make a useable rustdoc you can run on other projects. Add src/libtest to be able to use rustdoc --test . If you've used rustup toolchain link local /path/to/build/$TARGET/stage1 previously, then after the previous build command, cargo +local doc will Just Work. Use x.py doc --stage 1 src/libstd to use this rustdoc to generate the standard library docs. The completed docs will be available in build/$TARGET/doc/std , though the bundle is meant to be used as though you would copy out the doc folder to a web server, since that's where the CSS/JS and landing page are. Most of the HTML printing code is in html/format.rs and html/render.rs . It's in a bunch of fmt::Display implementations and supplementary functions. The types that got Display impls above are defined in clean/mod.rs , right next to the custom Clean trait used to process them out of the rustc HIR. The bits specific to using rustdoc as a test harness are in test.rs . The Markdown renderer is loaded up in html/markdown.rs , including functions for extracting doctests from a given block of Markdown. The tests on rustdoc output are located in src/test/rustdoc , where they're handled by the test runner of rustbuild and the supplementary script src/etc/htmldocck.py . Tests on search index generation are located in src/test/rustdoc-js , as a series of JavaScript files that encode queries on the standard library search index and expected results.","title":"Cheat sheet","id":"rustdoc.html#cheat-sheet","breadcrumbs":"The Rustc Driver » Cheat sheet"},"variance.html#the-algorithm":{"title":"The algorithm","breadcrumbs":"Type checking » The algorithm","id":"variance.html#the-algorithm","body":"The basic idea is quite straightforward. We iterate over the types defined and, for each use of a type parameter X , accumulate a constraint indicating that the variance of X must be valid for the variance of that use site. We then iteratively refine the variance of X until all constraints are met. There is always a solution, because at the limit we can declare all type parameters to be invariant and all constraints will be satisfied. As a simple example, consider: enum Option<A> { Some(A), None }\nenum OptionalFn<B> { Some(|B|), None }\nenum OptionalMap<C> { Some(|C| -> C), None } Here, we will generate the constraints: 1. V(A) <= +\n2. V(B) <= -\n3. V(C) <= +\n4. V(C) <= - These indicate that (1) the variance of A must be at most covariant; (2) the variance of B must be at most contravariant; and (3, 4) the variance of C must be at most covariant and contravariant. All of these results are based on a variance lattice defined as follows: * Top (bivariant)\n- + o Bottom (invariant) Based on this lattice, the solution V(A)=+ , V(B)=- , V(C)=o is the optimal solution. Note that there is always a naive solution which just declares all variables to be invariant. You may be wondering why fixed-point iteration is required. The reason is that the variance of a use site may itself be a function of the variance of other type parameters. In full generality, our constraints take the form: V(X) <= Term\nTerm := + | - | * | o | V(X) | Term x Term Here the notation V(X) indicates the variance of a type/region parameter X with respect to its defining class. Term x Term represents the \"variance transform\" as defined in the paper: If the variance of a type variable X in type expression E is V2 and the definition-site variance of the [corresponding] type parameter of a class C is V1 , then the variance of X in the type expression C<E> is V3 = V1.xform(V2) ."},"appendix/stupid-stats.html#what-next":{"id":"appendix/stupid-stats.html#what-next","body":"These APIs are pretty new and have a long way to go until they're really good. If there are improvements you'd like to see or things you'd like to be able to do, let me know in a comment or GitHub issue . In particular, it's not clear to me exactly what extra flexibility is required. If you have an existing tool that would be suited to this setup, please try it out and let me know if you have problems. It'd be great to see Rustdoc converted to using these APIs, if that is possible (although long term, I'd prefer to see Rustdoc run on the output from save- analysis, rather than doing its own analysis). Other parts of the compiler (e.g., pretty printing, testing) could be refactored to use these APIs internally (I already changed save-analysis to use CompilerController ). I've been experimenting with a prototype rustfmt which also uses these APIs.","title":"What next?","breadcrumbs":"What next?"},"macro-expansion.html#custom-derive":{"title":"Custom Derive","breadcrumbs":"Custom Derive","body":"TODO","id":"macro-expansion.html#custom-derive"},"tests/adding.html#adding-new-tests":{"id":"tests/adding.html#adding-new-tests","title":"Adding new tests","body":"In general, we expect every PR that fixes a bug in rustc to come accompanied by a regression test of some kind. This test should fail in master but pass after the PR. These tests are really useful for preventing us from repeating the mistakes of the past. To add a new test, the first thing you generally do is to create a file, typically a Rust source file. Test files have a particular structure: They always begin with the copyright notice ; then they should have some kind of comment explaining what the test is about ; next, they can have one or more header commands , which are special comments that the test interpreter knows how to interpret. finally, they have the Rust source. This may have various error annotations which indicate expected compilation errors or warnings. Depending on the test suite, there may be some other details to be aware of: For the ui test suite , you need to generate reference output files.","breadcrumbs":"The compiler testing framework » Adding new tests"},"miri.html#datastructures":{"breadcrumbs":"Constant evaluation » Datastructures","id":"miri.html#datastructures","title":"Datastructures","body":"Miri's core datastructures can be found in librustc/mir/interpret . This is mainly the error enum and the Value and PrimVal types. A Value can be either ByVal (a single PrimVal ), ByValPair (two PrimVal s, usually fat pointers or two element tuples) or ByRef , which is used for anything else and refers to a virtual allocation. These allocations can be accessed via the methods on tcx.interpret_interner . If you are expecting a numeric result, you can use unwrap_u64 (panics on anything that can't be representad as a u64 ) or to_raw_bits which results in an Option<u128> yielding the ByVal if possible."},"tests/intro.html#further-reading":{"title":"Further reading","id":"tests/intro.html#further-reading","breadcrumbs":"Further reading","body":"The following blog posts may also be of interest: brson's classic \"How Rust is tested\""},"type-checking.html#type-checking":{"title":"Type checking","breadcrumbs":"Type checking","body":"The rustc_typeck crate contains the source for \"type collection\" and \"type checking\", as well as a few other bits of related functionality. (It draws heavily on the type inference and trait solving .)","id":"type-checking.html#type-checking"},"tests/adding.html#normalization":{"title":"Normalization","body":"The normalization applied is aimed at eliminating output difference between platforms, mainly about filenames: the test directory is replaced with $DIR all backslashes ( \\ ) are converted to forward slashes ( / ) (for Windows) all CR LF newlines are converted to LF Sometimes these built-in normalizations are not enough. In such cases, you may provide custom normalization rules using the header commands, e.g. // normalize-stdout-test: \"foo\" -> \"bar\"\n// normalize-stderr-32bit: \"fn\\(\\) \\(32 bits\\)\" -> \"fn\\(\\) \\($$PTR bits\\)\"\n// normalize-stderr-64bit: \"fn\\(\\) \\(64 bits\\)\" -> \"fn\\(\\) \\($$PTR bits\\)\" This tells the test, on 32-bit platforms, whenever the compiler writes fn() (32 bits) to stderr, it should be normalized to read fn() ($PTR bits) instead. Similar for 64-bit. The replacement is performed by regexes using default regex flavor provided by regex crate. The corresponding reference file will use the normalized output to test both 32-bit and 64-bit platforms: ... | = note: source type: fn() ($PTR bits) = note: target type: u16 (16 bits)\n... Please see ui/transmute/main.rs and main.stderr for a concrete usage example. Besides normalize-stderr-32bit and -64bit , one may use any target information or stage supported by ignore-X here as well (e.g. normalize-stderr-windows or simply normalize-stderr-test for unconditional replacement).","id":"tests/adding.html#normalization","breadcrumbs":"The compiler testing framework » Normalization"},"rustdoc.html#dotting-is-and-crossing-ts":{"body":"So that's rustdoc's code in a nutshell, but there's more things in the repo that deal with it. Since we have the full compiletest suite at hand, there's a set of tests in src/test/rustdoc that make sure the final HTML is what we expect in various situations. These tests also use a supplementary script, src/etc/htmldocck.py , that allows it to look through the final HTML using XPath notation to get a precise look at the output. The full description of all the commands available to rustdoc tests is in htmldocck.py . In addition, there are separate tests for the search index and rustdoc's ability to query it. The files in src/test/rustdoc-js each contain a different search query and the expected results, broken out by search tab. These files are processed by a script in src/tools/rustdoc-js and the Node.js runtime. These tests don't have as thorough of a writeup, but a broad example that features results in all tabs can be found in basic.js . The basic idea is that you match a given QUERY with a set of EXPECTED results, complete with the full item path of each item.","breadcrumbs":"The Rustc Driver » Dotting i's and crossing t's","title":"Dotting i's and crossing t's","id":"rustdoc.html#dotting-is-and-crossing-ts"},"tests/intro.html#testing-with-docker-images":{"breadcrumbs":"Testing with Docker images","id":"tests/intro.html#testing-with-docker-images","body":"The Rust tree includes Docker image definitions for the platforms used on Travis in src/ci/docker . The script src/ci/docker/run.sh is used to build the Docker image, run it, build Rust within the image, and run the tests. TODO: What is a typical workflow for testing/debugging on a platform that you don't have easy access to? Do people build Docker images and enter them to test things out?","title":"Testing with Docker images"},"conventions.html#prefer-exhaustive-matches":{"id":"conventions.html#prefer-exhaustive-matches","body":"Using _ in a match is convenient, but it means that when new variants are added to the enum, they may not get handled correctly. Ask yourself: if a new variant were added to this enum, what's the chance that it would want to use the _ code, versus having some other treatment? Unless the answer is \"low\", then prefer an exhaustive match. (The same advice applies to if let and while let , which are effectively tests for a single variant.)","title":"Prefer exhaustive matches","breadcrumbs":"Prefer exhaustive matches"},"mir/passes.html#implementing-and-registering-a-pass":{"id":"mir/passes.html#implementing-and-registering-a-pass","body":"A MirPass is some bit of code that processes the MIR, typically -- but not always -- transforming it along the way somehow. For example, it might perform an optimization. The MirPass trait itself is found in in the rustc_mir::transform module , and it basically consists of one method, run_pass , that simply gets an &mut Mir (along with the tcx and some information about where it came from). The MIR is therefore modified in place (which helps to keep things efficient). A good example of a basic MIR pass is NoLandingPads , which walks the MIR and removes all edges that are due to unwinding -- this is used when configured with panic=abort , which never unwinds. As you can see from its source, a MIR pass is defined by first defining a dummy type, a struct with no fields, something like: struct MyPass; for which you then implement the MirPass trait. You can then insert this pass into the appropriate list of passes found in a query like optimized_mir , mir_validated , etc. (If this is an optimization, it should go into the optimized_mir list.) If you are writing a pass, there's a good chance that you are going to want to use a MIR visitor . MIR visitors are a handy way to walk all the parts of the MIR, either to search for something or to make small edits.","title":"Implementing and registering a pass","breadcrumbs":"The MIR (Mid-level IR) » Implementing and registering a pass"},"traits/lowering-rules.html#associated-type-values":{"id":"traits/lowering-rules.html#associated-type-values","body":"Given an impl that contains: impl<P0..Pn> Trait<P1..Pn> for P0\nwhere WC_impl\n{ type AssocType<Pn+1..Pm> = T;\n} and our where clause WC1 on the trait associated type from above, we produce the following rule: // Rule Normalize-From-Impl\nforall<P0..Pm> { forall<Pn+1..Pm> { Normalize(<P0 as Trait<P1..Pn>>::AssocType<Pn+1..Pm> -> T) :- Implemented(P0 as Trait) && WC1 }\n} Note that WC_impl and WC1 both encode where-clauses that the impl can rely on. ( WC_impl is not used here, because it is implied by Implemented(P0 as Trait) .)","title":"Associated type values","breadcrumbs":"Trait solving (new-style) » Associated type values"},"diag.html#lint-groups":{"id":"diag.html#lint-groups","body":"Lints can be turned on in groups. These groups are declared in the register_builtins function in rustc_lint::lib . The add_lint_group! macro is used to declare a new group. For example, add_lint_group!(sess, \"nonstandard_style\", NON_CAMEL_CASE_TYPES, NON_SNAKE_CASE, NON_UPPER_CASE_GLOBALS); This defines the nonstandard_style group which turns on the listed lints. A user can turn on these lints by using !#[warn(nonstandard_style)] .","title":"Lint Groups","breadcrumbs":"Lint Groups"},"ty.html#the--ty--module-representing-types":{"breadcrumbs":"The ty module: representing types","title":"The ty module: representing types","body":"The ty module defines how the Rust compiler represents types internally. It also defines the typing context ( tcx or TyCtxt ), which is the central data structure in the compiler.","id":"ty.html#the--ty--module-representing-types"},"diag.html#suggestions":{"title":"Suggestions","body":"We would like to make edition transitions as smooth as possible. To that end, rustfix can use compiler suggestions to automatically fix code. For example, we could use rustfix to mechanically apply the qux suggestion from the previous example. However, not all suggestions are mechanically applicable. We use the span_suggestion_with_applicability method of DiagnosticBuilder to inform the emitter of whether a suggestion is mechanically applicable or not. This information, in turn, is outputed by rustc when the error format is json , which is used by rustfix . For example, to make our qux suggestion machine-applicable, we would do: let mut err = sess.struct_span_err(sp, \"oh no! this is an error!\"); if let Some(snippet) = sess.codemap().span_to_snippet(sp) { // Add applicability info! err.span_suggestion_with_applicability( suggestion_sp, \"try using a qux here\", format!(\"qux {}\", snip), Applicability::MachineApplicable, );\n} else { err.span_help(suggestion_sp, \"you could use a qux here instead\");\n} err.emit(); This might emit an error like $ rustc mycode.rs\nerror[E0999]: oh no! this is an error! --> mycode.rs:3:5 |\n3 | sad() | ^ help: try using a qux here: `qux sad()` error: aborting due to previous error For more information about this error, try `rustc --explain E0999`. In some cases, like when the suggestion spans multiple lines or when there are multiple suggestions, the suggestions are displayed on their own: error[E0999]: oh no! this is an error! --> mycode.rs:3:5 |\n3 | sad() | ^\nhelp: try using a qux here: |\n3 | qux sad() | ^^^ error: aborting due to previous error For more information about this error, try `rustc --explain E0999`. There are a few other Applicability possibilities: MachineApplicable : Can be applied mechanically. HasPlaceholders : Cannot be applied mechanically and has placeholder text in the suggestions. For example, \"Try adding a type: `let x: <type>`\". MaybeIncorrect : Cannot be applied mechanically because the suggestion may or may not be a good one. Unspecified : Cannot be applied mechanically because we don't know which of the above cases it falls into.","id":"diag.html#suggestions","breadcrumbs":"Suggestions"},"name-resolution.html#overall-strategy":{"title":"Overall strategy","breadcrumbs":"Overall strategy","body":"To perform the name resolution of the whole crate, the syntax tree is traversed top-down and every encountered name is resolved. This works for most kinds of names, because at the point of use of a name it is already introduced in the Rib hierarchy. There are some exceptions to this. Items are bit tricky, because they can be used even before encountered ‒ therefore every block needs to be first scanned for items to fill in its Rib. Other, even more problematic ones, are imports which need recursive fixed-point resolution and macros, that need to be resolved and expanded before the rest of the code can be processed. Therefore, the resolution is performed in multiple stages.","id":"name-resolution.html#overall-strategy"},"traits/lowering-rules.html#lowering-rules":{"id":"traits/lowering-rules.html#lowering-rules","title":"Lowering rules","body":"This section gives the complete lowering rules for Rust traits into program clauses . It is a kind of reference. These rules reference the domain goals defined in an earlier section.","breadcrumbs":"Trait solving (new-style) » Lowering rules"},"tests/running.html#running-a-subset-of-the-test-suites":{"body":"When working on a specific PR, you will usually want to run a smaller set of tests, and with a stage 1 build. For example, a good \"smoke test\" that can be used after modifying rustc to see if things are generally working correctly would be the following: > ./x.py test --stage 1 src/test/{ui,compile-fail,run-pass} This will run the ui , compile-fail , and run-pass test suites, and only with the stage 1 build. Of course, the choice of test suites is somewhat arbitrary, and may not suit the task you are doing. For example, if you are hacking on debuginfo, you may be better off with the debuginfo test suite: > ./x.py test --stage 1 src/test/debuginfo Warning: Note that bors only runs the tests with the full stage 2 build; therefore, while the tests usually work fine with stage 1, there are some limitations. In particular, the stage1 compiler doesn't work well with procedural macros or custom derive tests.","title":"Running a subset of the test suites","id":"tests/running.html#running-a-subset-of-the-test-suites","breadcrumbs":"The compiler testing framework » Running a subset of the test suites"},"variance.html#variance-and-object-types":{"id":"variance.html#variance-and-object-types","body":"Just as with structs and enums, we can decide the subtyping relationship between two object types &Trait<A> and &Trait<B> based on the relationship of A and B . Note that for object types we ignore the Self type parameter -- it is unknown, and the nature of dynamic dispatch ensures that we will always call a function that is expected the appropriate Self type. However, we must be careful with the other type parameters, or else we could end up calling a function that is expecting one type but provided another. To see what I mean, consider a trait like so: trait ConvertTo<A> { fn convertTo(&self) -> A;\n} Intuitively, If we had one object O=&ConvertTo<Object> and another S=&ConvertTo<String> , then S <: O because String <: Object (presuming Java-like \"string\" and \"object\" types, my go to examples for subtyping). The actual algorithm would be to compare the (explicit) type parameters pairwise respecting their variance: here, the type parameter A is covariant (it appears only in a return position), and hence we require that String <: Object . You'll note though that we did not consider the binding for the (implicit) Self type parameter: in fact, it is unknown, so that's good. The reason we can ignore that parameter is precisely because we don't need to know its value until a call occurs, and at that time (as you said) the dynamic nature of virtual dispatch means the code we run will be correct for whatever value Self happens to be bound to for the particular object whose method we called. Self is thus different from A , because the caller requires that A be known in order to know the return type of the method convertTo() . (As an aside, we have rules preventing methods where Self appears outside of the receiver position from being called via an object.)","title":"Variance and object types","breadcrumbs":"Type checking » Variance and object types"},"mir/index.html#introduction-to-mir":{"title":"Introduction to MIR","breadcrumbs":"Introduction to MIR","id":"mir/index.html#introduction-to-mir","body":"MIR is defined in the src/librustc/mir/ module, but much of the code that manipulates it is found in src/librustc_mir . Some of the key characteristics of MIR are: It is based on a control-flow graph . It does not have nested expressions. All types in MIR are fully explicit."},"traits/chalk-overview.html#well-formedness-checks":{"id":"traits/chalk-overview.html#well-formedness-checks","body":"As part of lowering from the AST to the internal IR, we also do some \"well formedness\" checks. See the source code for where those are done. The call to record_specialization_priorities checks \"coherence\" which means that it ensures that two impls of the same trait for the same type cannot exist.","title":"Well-formedness checks","breadcrumbs":"Trait solving (new-style) » Well-formedness checks"},"traits/chalk-overview.html#rules":{"breadcrumbs":"Trait solving (new-style) » Rules","id":"traits/chalk-overview.html#rules","title":"Rules","body":"The rules module works by iterating over every trait, impl, etc. and emitting the rules that come from each one. See Lowering Rules for the most up-to-date reference on that. The ir::ProgramEnvironment is created in this module ."},"traits/specialization.html#specialization":{"id":"traits/specialization.html#specialization","body":"TODO : where does Chalk fit in? Should we mention/discuss it here? Defined in the specialize module. The basic strategy is to build up a specialization graph during coherence checking (recall that coherence checking looks for overlapping impls). Insertion into the graph locates the right place to put an impl in the specialization hierarchy; if there is no right place (due to partial overlap but no containment), you get an overlap error. Specialization is consulted when selecting an impl (of course), and the graph is consulted when propagating defaults down the specialization hierarchy. You might expect that the specialization graph would be used during selection – i.e. when actually performing specialization. This is not done for two reasons: It's merely an optimization: given a set of candidates that apply, we can determine the most specialized one by comparing them directly for specialization, rather than consulting the graph. Given that we also cache the results of selection, the benefit of this optimization is questionable. To build the specialization graph in the first place, we need to use selection (because we need to determine whether one impl specializes another). Dealing with this reentrancy would require some additional mode switch for selection. Given that there seems to be no strong reason to use the graph anyway, we stick with a simpler approach in selection, and use the graph only for propagating default implementations. Trait impl selection can succeed even when multiple impls can apply, as long as they are part of the same specialization family. In that case, it returns a single impl on success – this is the most specialized impl known to apply. However, if there are any inference variables in play, the returned impl may not be the actual impl we will use at trans time. Thus, we take special care to avoid projecting associated types unless either (1) the associated type does not use default and thus cannot be overridden or (2) all input types are known concretely.","title":"Specialization","breadcrumbs":"Trait solving (old-style) » Specialization"},"traits/lowering-module.html#unit-tests":{"body":"Unit tests are located in src/test/ui/chalkify . A good example test is the lower_impl test . At the time of this writing, it looked like this: #![feature(rustc_attrs)] trait Foo { } #[rustc_dump_program_clauses] //~ ERROR Implemented(T: Foo) :-\nimpl<T: 'static> Foo for T where T: Iterator<Item = i32> { } fn main() { println!(\"hello\");\n} The #[rustc_dump_program_clauses] annotation can be attached to anything with a def-id. (It requires the rustc_attrs feature.) The compiler will then invoke the program_clauses_for query on that item, and emit compiler errors that dump the clauses produced. These errors just exist for unit-testing, as we can then leverage the standard ui test mechanisms to check them. In this case, there is a //~ ERROR Implemented annotation which is intentionally minimal (it need only be a prefix of the error), but the stderr file contains the full details: error: Implemented(T: Foo) :- ProjectionEq(<T as std::iter::Iterator>::Item == i32), TypeOutlives(T \\\n: 'static), Implemented(T: std::iter::Iterator), Implemented(T: std::marker::Sized). --> $DIR/lower_impl.rs:15:1 |\nLL | #[rustc_dump_program_clauses] //~ ERROR Implemented(T: Foo) :- | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ error: aborting due to previous error","title":"Unit tests","breadcrumbs":"Trait solving (new-style) » Lowering rules » Unit tests","id":"traits/lowering-module.html#unit-tests"},"method-lookup.html#candidate-search":{"title":"Candidate search","body":"Finally, to actually pick the method, we will search down the steps, trying to match the receiver type against the candidate types. At each step, we also consider an auto-ref and auto-mut-ref to see whether that makes any of the candidates match. We pick the first step where we find a match. In the case of our example, the first step is Rc<Box<[T; 3]>> , which does not itself match any candidate. But when we autoref it, we get the type &Rc<Box<[T; 3]>> which does match. We would then recursively consider all where-clauses that appear on the impl: if those match (or we cannot rule out that they do), then this is the method we would pick. Otherwise, we would continue down the series of steps.","breadcrumbs":"Type checking » Candidate search","id":"method-lookup.html#candidate-search"},"tests/intro.html#crater":{"breadcrumbs":"Crater","id":"tests/intro.html#crater","body":"TODO","title":"Crater"},"traits/hrtb.html#higher-ranked-trait-obligations":{"title":"Higher-ranked trait obligations","breadcrumbs":"Trait solving (old-style) » Higher-ranked trait obligations","id":"traits/hrtb.html#higher-ranked-trait-obligations","body":"Once the basic matching is done, we get to another interesting topic: how to deal with impl obligations. I'll work through a simple example here. Imagine we have the traits Foo and Bar and an associated impl: trait Foo<X> { fn foo(&self, x: X) { }\n} trait Bar<X> { fn bar(&self, x: X) { }\n} impl<X,F> Foo<X> for F where F : Bar<X>\n{\n} Now let's say we have a obligation Baz: for<'a> Foo<&'a isize> and we match this impl. What obligation is generated as a result? We want to get Baz: for<'a> Bar<&'a isize> , but how does that happen? After the matching, we are in a position where we have a skolemized substitution like X => &'0 isize . If we apply this substitution to the impl obligations, we get F : Bar<&'0 isize> . Obviously this is not directly usable because the skolemized region '0 cannot leak out of our computation. What we do is to create an inverse mapping from the taint set of '0 back to the original bound region ( 'a , here) that '0 resulted from. (This is done in higher_ranked::plug_leaks ). We know that the leak check passed, so this taint set consists solely of the skolemized region itself plus various intermediate region variables. We then walk the trait-reference and convert every region in that taint set back to a late-bound region, so in this case we'd wind up with Baz: for<'a> Bar<&'a isize> ."},"tests/adding.html#header-commands-configuring-rustc":{"id":"tests/adding.html#header-commands-configuring-rustc","breadcrumbs":"The compiler testing framework » Header commands: configuring rustc","body":"Header commands are special comments that the test runner knows how to interpret. They must appear before the Rust source in the test. They are normally put after the short comment that explains the point of this test. For example, this test uses the // compile-flags command to specify a custom flag to give to rustc when the test is compiled: // Copyright 2017 The Rust Project Developers. blah blah blah.\n// ...\n// except according to those terms. // Test the behavior of `0 - 1` when overflow checks are disabled. // compile-flags: -Coverflow-checks=off fn main() { let x = 0 - 1; ...\n}","title":"Header commands: configuring rustc"},"traits/associated-types.html#associated-type-projection-and-normalization":{"title":"Associated type projection and normalization","breadcrumbs":"Trait solving (new-style) » Lowering to logic » Associated type projection and normalization","body":"When a trait defines an associated type (e.g., the Item type in the IntoIterator trait ), that type can be referenced by the user using an associated type projection like <Option<u32> as IntoIterator>::Item . (Often, though, people will use the shorthand syntax T::Item -- presently, that syntax is expanded during \"type collection\" into the explicit form, though that is something we may want to change in the future.) In some cases, associated type projections can be normalized -- that is, simplified -- based on the types given in an impl. So, to continue with our example, the impl of IntoIterator for Option<T> declares (among other things) that Item = T : impl<T> IntoIterator for Option<T> { type Item = T; ...\n} This means we can normalize the projection <Option<u32> as IntoIterator>::Item to just u32 . In this case, the projection was a \"monomorphic\" one -- that is, it did not have any type parameters. Monomorphic projections are special because they can always be fully normalized -- but often we can normalize other associated type projections as well. For example, <Option<?T> as IntoIterator>::Item (where ?T is an inference variable) can be normalized to just ?T . In our logic, normalization is defined by a predicate Normalize . The Normalize clauses arise only from impls. For example, the impl of IntoIterator for Option<T> that we saw above would be lowered to a program clause like so: forall<T> { Normalize(<Option<T> as IntoIterator>::Item -> T) :- Implemented(Option<T>: IntoIterator)\n} where in this case, the one Implemented condition is always true. (An aside: since we do not permit quantification over traits, this is really more like a family of program clauses, one for each associated type.) We could apply that rule to normalize either of the examples that we've seen so far.","id":"traits/associated-types.html#associated-type-projection-and-normalization"},"query.html#cycles-between-queries":{"body":"A cycle is when a query becomes stuck in a loop e.g. query A generates query B which generates query A again. Currently, cycles during query execution should always result in a compilation error. Typically, they arise because of illegal programs that contain cyclic references they shouldn't (though sometimes they arise because of compiler bugs, in which case we need to factor our queries in a more fine-grained fashion to avoid them). However, it is nonetheless often useful to recover from a cycle (after reporting an error, say) and try to soldier on, so as to give a better user experience. In order to recover from a cycle, you don't get to use the nice method-call-style syntax. Instead, you invoke using the try_get method, which looks roughly like this: use ty::maps::queries;\n...\nmatch queries::type_of::try_get(tcx, DUMMY_SP, self.did) { Ok(result) => { // no cycle occurred! You can use `result` } Err(err) => { // A cycle occurred! The error value `err` is a `DiagnosticBuilder`, // meaning essentially an \"in-progress\", not-yet-reported error message. // See below for more details on what to do here. }\n} So, if you get back an Err from try_get , then a cycle did occur. This means that you must ensure that a compiler error message is reported. You can do that in two ways: The simplest is to invoke err.emit() . This will emit the cycle error to the user. However, often cycles happen because of an illegal program, and you know at that point that an error either already has been reported or will be reported due to this cycle by some other bit of code. In that case, you can invoke err.cancel() to not emit any error. It is traditional to then invoke: tcx.sess.delay_span_bug(some_span, \"some message\") delay_span_bug() is a helper that says: we expect a compilation error to have happened or to happen in the future; so, if compilation ultimately succeeds, make an ICE with the message \"some message\" . This is basically just a precaution in case you are wrong.","id":"query.html#cycles-between-queries","breadcrumbs":"Cycles between queries","title":"Cycles between queries"},"mir/regionck.html#the-mir-type-check":{"title":"The MIR type-check","breadcrumbs":"The MIR (Mid-level IR) » MIR borrowck » The MIR type-check","id":"mir/regionck.html#the-mir-type-check","body":""},"appendix/code-index.html#appendix-d-code-index":{"breadcrumbs":"Appendix D: Code Index","body":"rustc has a lot of important data structures. This is an attempt to give some guidance on where to learn more about some of the key data structures of the compiler. Item Kind Short description Chapter Declaration CodeMap struct The CodeMap maps the AST nodes to their source code The parser src/libsyntax/codemap.rs CompileState struct State that is passed to a callback at each compiler pass The Rustc Driver src/librustc_driver/driver.rs DiagnosticBuilder struct A struct for building up compiler diagnostics, such as errors or lints Emitting Diagnostics src/librustc_errors/diagnostic_builder.rs DocContext struct A state container used by rustdoc when crawling through a crate to gather its documentation Rustdoc src/librustdoc/core.rs ast::Crate struct Syntax-level representation of a parsed crate The parser src/librustc/hir/mod.rs hir::Crate struct More abstract, compiler-friendly form of a crate's AST The Hir src/librustc/hir/mod.rs ParseSess struct This struct contains information about a parsing session the Parser src/libsyntax/parse/mod.rs Session struct The data associated with a compilation session the Parser , The Rustc Driver src/librustc/session/mod.html Span struct A location in the user's source code, used for error reporting primarily Emitting Diagnostics src/libsyntax_pos/span_encoding.rs StringReader struct This is the lexer used during parsing. It consumes characters from the raw source code being compiled and produces a series of tokens for use by the rest of the parser The parser src/libsyntax/parse/lexer/mod.rs TraitDef struct This struct contains a trait's definition with type information The ty modules src/librustc/ty/trait_def.rs Ty<'tcx> struct This is the internal representation of a type used for type checking Type checking src/librustc/ty/mod.rs TyCtxt<'cx, 'tcx, 'tcx> type The \"typing context\". This is the central data structure in the compiler. It is the context that you use to perform all manner of queries. The ty modules src/librustc/ty/context.rs","title":"Appendix D: Code Index","id":"appendix/code-index.html#appendix-d-code-index"},"mir/passes.html#stealing":{"body":"The intermediate queries mir_const() and mir_validated() yield up a &'tcx Steal<Mir<'tcx>> , allocated using tcx.alloc_steal_mir() . This indicates that the result may be stolen by the next suite of optimizations – this is an optimization to avoid cloning the MIR. Attempting to use a stolen result will cause a panic in the compiler. Therefore, it is important that you do not read directly from these intermediate queries except as part of the MIR processing pipeline. Because of this stealing mechanism, some care must also be taken to ensure that, before the MIR at a particular phase in the processing pipeline is stolen, anyone who may want to read from it has already done so. Concretely, this means that if you have some query foo(D) that wants to access the result of mir_const(D) or mir_validated(D) , you need to have the successor pass \"force\" foo(D) using ty::queries::foo::force(...) . This will force a query to execute even though you don't directly require its result. As an example, consider MIR const qualification. It wants to read the result produced by the mir_const() suite. However, that result will be stolen by the mir_validated() suite. If nothing was done, then mir_const_qualif(D) would succeed if it came before mir_validated(D) , but fail otherwise. Therefore, mir_validated(D) will force mir_const_qualif before it actually steals, thus ensuring that the reads have already happened (remember that queries are memoized , so executing a query twice simply loads from a cache the second time): mir_const(D) --read-by--> mir_const_qualif(D) | ^ stolen-by | | (forces) v |\nmir_validated(D) ------------+ This mechanism is a bit dodgy. There is a discussion of more elegant alternatives in rust-lang/rust#41710 .","breadcrumbs":"The MIR (Mid-level IR) » Stealing","id":"mir/passes.html#stealing","title":"Stealing"},"rustdoc.html#from-clean-to-crate":{"body":"This is where the \"second phase\" in rustdoc begins. This phase primarily lives in the html/ folder, and it all starts with run() in html/render.rs . This code is responsible for setting up the Context , SharedContext , and Cache which are used during rendering, copying out the static files which live in every rendered set of documentation (things like the fonts, CSS, and JavaScript that live in html/static/ ), creating the search index, and printing out the source code rendering, before beginning the process of rendering all the documentation for the crate. Several functions implemented directly on Context take the clean::Crate and set up some state between rendering items or recursing on a module's child items. From here the \"page rendering\" begins, via an enormous write!() call in html/layout.rs . The parts that actually generate HTML from the items and documentation occurs within a series of std::fmt::Display implementations and functions that pass around a &mut std::fmt::Formatter . The top-level implementation that writes out the page body is the impl<'a> fmt::Display for Item<'a> in html/render.rs , which switches out to one of several item_* functions based on the kind of Item being rendered. Depending on what kind of rendering code you're looking for, you'll probably find it either in html/render.rs for major items like \"what sections should I print for a struct page\" or html/format.rs for smaller component pieces like \"how should I print a where clause as part of some other item\". Whenever rustdoc comes across an item that should print hand-written documentation alongside, it calls out to html/markdown.rs which interfaces with the Markdown parser. This is exposed as a series of types that wrap a string of Markdown, and implement fmt::Display to emit HTML text. It takes special care to enable certain features like footnotes and tables and add syntax highlighting to Rust code blocks (via html/highlight.rs ) before running the Markdown parser. There's also a function in here ( find_testable_code ) that specifically scans for Rust code blocks so the test-runner code can find all the doctests in the crate.","title":"From clean to crate","id":"rustdoc.html#from-clean-to-crate","breadcrumbs":"The Rustc Driver » From clean to crate"},"conventions.html#coding-for-correctness":{"body":"Beyond formatting, there are a few other tips that are worth following.","title":"Coding for correctness","id":"conventions.html#coding-for-correctness","breadcrumbs":"Coding for correctness"},"method-lookup.html#steps":{"title":"Steps","id":"method-lookup.html#steps","breadcrumbs":"Type checking » Steps","body":"The first thing that the probe phase does is to create a series of steps . This is done by progressively dereferencing the receiver type until it cannot be deref'd anymore, as well as applying an optional \"unsize\" step. So if the receiver has type Rc<Box<[T; 3]>> , this might yield: Rc<Box<[T; 3]>>\nBox<[T; 3]>\n[T; 3]\n[T]"},"method-lookup.html#method-lookup":{"breadcrumbs":"Type checking » Method lookup","body":"Method lookup can be rather complex due to the interaction of a number of factors, such as self types, autoderef, trait lookup, etc. This file provides an overview of the process. More detailed notes are in the code itself, naturally. One way to think of method lookup is that we convert an expression of the form: receiver.method(...) into a more explicit UFCS form: Trait::method(ADJ(receiver), ...) // for a trait call\nReceiverType::method(ADJ(receiver), ...) // for an inherent method call Here ADJ is some kind of adjustment, which is typically a series of autoderefs and then possibly an autoref (e.g., &**receiver ). However we sometimes do other adjustments and coercions along the way, in particular unsizing (e.g., converting from [T; n] to [T] ). Method lookup is divided into two major phases: Probing ( probe.rs ). The probe phase is when we decide what method to call and how to adjust the receiver. Confirmation ( confirm.rs ). The confirmation phase \"applies\" this selection, updating the side-tables, unifying type variables, and otherwise doing side-effectful things. One reason for this division is to be more amenable to caching. The probe phase produces a \"pick\" ( probe::Pick ), which is designed to be cacheable across method-call sites. Therefore, it does not include inference variables or other information.","title":"Method lookup","id":"method-lookup.html#method-lookup"},"variance.html#trait-variance-and-vtable-resolution":{"title":"Trait variance and vtable resolution","breadcrumbs":"Type checking » Trait variance and vtable resolution","id":"variance.html#trait-variance-and-vtable-resolution","body":"But traits aren't only used with objects. They're also used when deciding whether a given impl satisfies a given trait bound. To set the scene here, imagine I had a function: fn convertAll<A,T:ConvertTo<A>>(v: &[T]) { ... } Now imagine that I have an implementation of ConvertTo for Object : impl ConvertTo<i32> for Object { ... } And I want to call convertAll on an array of strings. Suppose further that for whatever reason I specifically supply the value of String for the type parameter T : let mut vector = vec![\"string\", ...];\nconvertAll::<i32, String>(vector); Is this legal? To put another way, can we apply the impl for Object to the type String ? The answer is yes, but to see why we have to expand out what will happen: convertAll will create a pointer to one of the entries in the vector, which will have type &String It will then call the impl of convertTo() that is intended for use with objects. This has the type fn(self: &Object) -> i32 . It is OK to provide a value for self of type &String because &String <: &Object . OK, so intuitively we want this to be legal, so let's bring this back to variance and see whether we are computing the correct result. We must first figure out how to phrase the question \"is an impl for Object,i32 usable where an impl for String,i32 is expected?\" Maybe it's helpful to think of a dictionary-passing implementation of type classes. In that case, convertAll() takes an implicit parameter representing the impl. In short, we have an impl of type: V_O = ConvertTo<i32> for Object and the function prototype expects an impl of type: V_S = ConvertTo<i32> for String As with any argument, this is legal if the type of the value given ( V_O ) is a subtype of the type expected ( V_S ). So is V_O <: V_S ? The answer will depend on the variance of the various parameters. In this case, because the Self parameter is contravariant and A is covariant, it means that: V_O <: V_S iff i32 <: i32 String <: Object These conditions are satisfied and so we are happy."},"ty.html#allocating-and-working-with-types":{"title":"Allocating and working with types","breadcrumbs":"Allocating and working with types","body":"Rust types are represented using the Ty<'tcx> defined in the ty module (not to be confused with the Ty struct from the HIR ). This is in fact a simple type alias for a reference with 'tcx lifetime: pub type Ty<'tcx> = &'tcx TyS<'tcx>; You can basically ignore the TyS struct – you will basically never access it explicitly. We always pass it by reference using the Ty<'tcx> alias – the only exception I think is to define inherent methods on types. Instances of TyS are only ever allocated in one of the rustc arenas (never e.g. on the stack). One common operation on types is to match and see what kinds of types they are. This is done by doing match ty.sty , sort of like this: fn test_type<'tcx>(ty: Ty<'tcx>) { match ty.sty { ty::TyArray(elem_ty, len) => { ... } ... }\n} The sty field (the origin of this name is unclear to me; perhaps structural type?) is of type TypeVariants<'tcx> , which is an enum defining all of the different kinds of types in the compiler. N.B. inspecting the sty field on types during type inference can be risky, as there may be inference variables and other things to consider, or sometimes types are not yet known that will become known later.). To allocate a new type, you can use the various mk_ methods defined on the tcx . These have names that correpond mostly to the various kinds of type variants. For example: let array_ty = tcx.mk_array(elem_ty, len * 2); These methods all return a Ty<'tcx> – note that the lifetime you get back is the lifetime of the innermost arena that this tcx has access to. In fact, types are always canonicalized and interned (so we never allocate exactly the same type twice) and are always allocated in the outermost arena where they can be (so, if they do not contain any inference variables or other \"temporary\" types, they will be allocated in the global arena). However, the lifetime 'tcx is always a safe approximation, so that is what you get back. NB. Because types are interned, it is possible to compare them for equality efficiently using == – however, this is almost never what you want to do unless you happen to be hashing and looking for duplicates. This is because often in Rust there are multiple ways to represent the same type, particularly once inference is involved. If you are going to be testing for type equality, you probably need to start looking into the inference code to do it right. You can also find various common types in the tcx itself by accessing tcx.types.bool , tcx.types.char , etc (see CommonTypes for more).","id":"ty.html#allocating-and-working-with-types"},"traits/chalk-overview.html#lowering":{"breadcrumbs":"Trait solving (new-style) » Lowering","id":"traits/chalk-overview.html#lowering","title":"Lowering","body":"After parsing, there is a \"lowering\" phase. This aims to convert traits/impls into \"program clauses\". A ProgramClause (source code) is essentially one of the following: A clause of the form consequence :- conditions where :- is read as \"if\" and conditions = cond1 && cond2 && ... A universally quantified clause of the form forall<T> { consequence :- conditions } forall<T> { ... } is used to represent universal quantification . See the section on Lowering to logic for more information. A key thing to note about forall is that we don't allow you to \"quantify\" over traits, only types and regions (lifetimes). That is, you can't make a rule like forall<Trait> { u32: Trait } which would say \" u32 implements all traits\". You can however say forall<T> { T: Trait } meaning \" Trait is implemented by all types\". forall<T> { ... } is represented in the code using the Binders<T> struct . See also: Goals and Clauses Lowering is the phase where we encode the rules of the trait system into logic. For example, if we have the following Rust: impl<T: Clone> Clone for Vec<T> {} We generate the following program clause: forall<T> { (Vec<T>: Clone) :- (T: Clone) } This rule dictates that Vec<T>: Clone is only satisfied if T: Clone is also satisfied (i.e. \"provable\")."},"diag.html#error-messages":{"title":"Error messages","body":"The rustc_errors crate defines most of the utilities used for reporting errors. Session and ParseSess have methods (or fields with methods) that allow reporting errors. These methods usually have names like span_err or struct_span_err or span_warn , etc... There are lots of them; they emit different types of \"errors\", such as warnings, errors, fatal errors, suggestions, etc. In general, there are two class of such methods: ones that emit an error directly and ones that allow finer control over what to emit. For example, span_err emits the given error message at the given Span , but struct_span_err instead returns a DiagnosticBuilder . DiagnosticBuilder allows you to add related notes and suggestions to an error before emitting it by calling the emit method. See the docs for more info on what you can do. // Get a DiagnosticBuilder. This does _not_ emit an error yet.\nlet mut err = sess.struct_span_err(sp, \"oh no! this is an error!\"); // In some cases, you might need to check if `sp` is generated by a macro to\n// avoid printing weird errors about macro-generated code. if let Some(snippet) = sess.codemap().span_to_snippet(sp) { // Use the snippet to generate a suggested fix err.span_suggestion(suggestion_sp, \"try using a qux here\", format!(\"qux {}\", snip));\n} else { // If we weren't able to generate a snippet, then emit a \"help\" message // instead of a concrete \"suggestion\". In practice this is unlikely to be // reached. err.span_help(suggestion_sp, \"you could use a qux here instead\");\n} // emit the error\nerr.emit();","breadcrumbs":"Error messages","id":"diag.html#error-messages"},"traits/chalk-overview.html#an-overview-of-chalk":{"title":"An Overview of Chalk","breadcrumbs":"Trait solving (new-style) » An Overview of Chalk","id":"traits/chalk-overview.html#an-overview-of-chalk","body":"Chalk is under heavy development, so if any of these links are broken or if any of the information is inconsistent with the code or outdated, please open an issue so we can fix it. If you are able to fix the issue yourself, we would love your contribution! Chalk recasts Rust's trait system explicitly in terms of logic programming by \"lowering\" Rust code into a kind of logic program we can then execute queries against. (See Lowering to Logic and Lowering Rules ) Its goal is to be an executable, highly readable specification of the Rust trait system. There are many expected benefits from this work. It will consolidate our existing, somewhat ad-hoc implementation into something far more principled and expressive, which should behave better in corner cases, and be much easier to extend."},"ty.html#the-tcx-and-how-it-uses-lifetimes":{"id":"ty.html#the-tcx-and-how-it-uses-lifetimes","title":"The tcx and how it uses lifetimes","body":"The tcx (\"typing context\") is the central data structure in the compiler. It is the context that you use to perform all manner of queries. The struct TyCtxt defines a reference to this shared context: tcx: TyCtxt<'a, 'gcx, 'tcx>\n// -- ---- ----\n// | | |\n// | | innermost arena lifetime (if any)\n// | \"global arena\" lifetime\n// lifetime of this reference As you can see, the TyCtxt type takes three lifetime parameters. These lifetimes are perhaps the most complex thing to understand about the tcx. During Rust compilation, we allocate most of our memory in arenas , which are basically pools of memory that get freed all at once. When you see a reference with a lifetime like 'tcx or 'gcx , you know that it refers to arena-allocated data (or data that lives as long as the arenas, anyhow). We use two distinct levels of arenas. The outer level is the \"global arena\". This arena lasts for the entire compilation: so anything you allocate in there is only freed once compilation is basically over (actually, when we shift to executing LLVM). To reduce peak memory usage, when we do type inference, we also use an inner level of arena. These arenas get thrown away once type inference is over. This is done because type inference generates a lot of \"throw-away\" types that are not particularly interesting after type inference completes, so keeping around those allocations would be wasteful. Often, we wish to write code that explicitly asserts that it is not taking place during inference. In that case, there is no \"local\" arena, and all the types that you can access are allocated in the global arena. To express this, the idea is to use the same lifetime for the 'gcx and 'tcx parameters of TyCtxt . Just to be a touch confusing, we tend to use the name 'tcx in such contexts. Here is an example: fn not_in_inference<'a, 'tcx>(tcx: TyCtxt<'a, 'tcx, 'tcx>, def_id: DefId) { // ---- ---- // Using the same lifetime here asserts // that the innermost arena accessible through // this reference *is* the global arena.\n} In contrast, if we want to code that can be usable during type inference, then you need to declare a distinct 'gcx and 'tcx lifetime parameter: fn maybe_in_inference<'a, 'gcx, 'tcx>(tcx: TyCtxt<'a, 'gcx, 'tcx>, def_id: DefId) { // ---- ---- // Using different lifetimes here means that // the innermost arena *may* be distinct // from the global arena (but doesn't have to be).\n}","breadcrumbs":"The tcx and how it uses lifetimes"},"traits/chalk-overview.html#blog-posts":{"breadcrumbs":"Trait solving (new-style) » Blog Posts","id":"traits/chalk-overview.html#blog-posts","title":"Blog Posts","body":"Lowering Rust traits to logic Unification in Chalk, part 1 Unification in Chalk, part 2 Negative reasoning in Chalk Query structure in chalk Cyclic queries in chalk An on-demand SLG solver for chalk"},"traits/lowering-rules.html#lowering-trait-items":{"title":"Lowering trait items","id":"traits/lowering-rules.html#lowering-trait-items","body":"","breadcrumbs":"Trait solving (new-style) » Lowering trait items"},"variance.html#constraints":{"id":"variance.html#constraints","breadcrumbs":"Type checking » Constraints","body":"If I have a struct or enum with where clauses: struct Foo<T: Bar> { ... } you might wonder whether the variance of T with respect to Bar affects the variance T with respect to Foo . I claim no. The reason: assume that T is invariant with respect to Bar but covariant with respect to Foo . And then we have a Foo<X> that is upcast to Foo<Y> , where X <: Y . However, while X : Bar , Y : Bar does not hold. In that case, the upcast will be illegal, but not because of a variance failure, but rather because the target type Foo<Y> is itself just not well-formed. Basically we get to assume well-formedness of all types involved before considering variance.","title":"Constraints"},"incremental-compilation.html#the-query-dag":{"title":"The query DAG","body":"The query DAG code is stored in src/librustc/dep_graph . Construction of the DAG is done by instrumenting the query execution. One key point is that the query DAG also tracks ordering; that is, for each query Q, we not only track the queries that Q reads, we track the order in which they were read. This allows try-mark-green to walk those queries back in the same order. This is important because once a subquery comes back as red, we can no longer be sure that Q will continue along the same path as before. That is, imagine a query like this: fn main_query(tcx) { if tcx.subquery1() { tcx.subquery2() } else { tcx.subquery3() }\n} Now imagine that in the first compilation, main_query starts by executing subquery1 , and this returns true. In that case, the next query main_query executes will be subquery2 , and subquery3 will not be executed at all. But now imagine that in the next compilation, the input has changed such that subquery1 returns false . In this case, subquery2 would never execute. If try-mark-green were to visit reads(main_query) out of order, however, it might visit subquery2 before subquery1 , and hence execute it. This can lead to ICEs and other problems in the compiler.","breadcrumbs":"Queries: demand-driven compilation » The query DAG","id":"incremental-compilation.html#the-query-dag"},"diag.html#span":{"title":"Span","body":"Span is the primary data structure in rustc used to represent a location in the code being compiled. Span s are attached to most constructs in HIR and MIR, allowing for easier error reporting whenever an error comes up. A Span can be looked up in a CodeMap to get a \"snippet\" useful for displaying errors with span_to_snippet and other similar methods on the CodeMap .","breadcrumbs":"Span","id":"diag.html#span"},"traits/canonicalization.html#executing-the-query":{"breadcrumbs":"Trait solving (new-style) » Canonical queries » Executing the query","title":"Executing the query","id":"traits/canonicalization.html#executing-the-query","body":"Once we've constructed the canonical query, we can try to solve it. To do so, we will wind up creating a fresh inference context and instantiating the canonical query in that context. The idea is that we create a substitution S from the canonical form containing a fresh inference variable (of suitable kind) for each canonical variable. So, for our example query: for<T,L,T> { ?0: Foo<'?1, ?2> } the substitution S might be: S = [?A, '?B, ?C] We can then replace the bound canonical variables ( ?0 , etc) with these inference variables, yielding the following fully instantiated query: ?A: Foo<'?B, ?C> Remember that substitution S though! We're going to need it later. OK, now that we have a fresh inference context and an instantiated query, we can go ahead and try to solve it. The trait solver itself is explained in more detail in another section , but suffice to say that it will compute a certainty value ( Proven or Ambiguous ) and have side-effects on the inference variables we've created. For example, if there were only one impl of Foo , like so: impl<'a, X> Foo<'a, X> for Vec<X>\nwhere X: 'a\n{ ... } then we might wind up with a certainty value of Proven , as well as creating fresh inference variables '?D and ?E (to represent the parameters on the impl) and unifying as follows: '?B = '?D ?A = Vec<?E> ?C = ?E We would also accumulate the region constraint ?E: '?D , due to the where clause. In order to create our final query result, we have to \"lift\" these values out of the query's inference context and into something that can be reapplied in our original inference context. We do that by re-applying canonicalization , but to the query result ."},"traits/canonical-queries.html#examples":{"title":"Examples","body":"Let's work through an example query to see what all the parts mean. Consider the Borrow trait . This trait has a number of impls; among them, there are these two (for clarify, I've written the Sized bounds explicitly): impl<T> Borrow<T> for T where T: ?Sized\nimpl<T> Borrow<[T]> for Vec<T> where T: Sized Example 1. Imagine we are type-checking this (rather artificial) bit of code: fn foo<A, B>(a: A, vec_b: Option<B>) where A: Borrow<B> { } fn main() { let mut t: Vec<_> = vec![]; // Type: Vec<?T> let mut u: Option<_> = None; // Type: Option<?U> foo(t, u); // Example 1: requires `Vec<?T>: Borrow<?U>` ...\n} As the comments indicate, we first create two variables t and u ; t is an empty vector and u is a None option. Both of these variables have unbound inference variables in their type: ?T represents the elements in the vector t and ?U represents the value stored in the option u . Next, we invoke foo ; comparing the signature of foo to its arguments, we wind up with A = Vec<?T> and B = ?U .Therefore, the where clause on foo requires that Vec<?T>: Borrow<?U> . This is thus our first example trait query. There are many possible solutions to the query Vec<?T>: Borrow<?U> ; for example: ?U = Vec<?T> , ?U = [?T] , ?T = u32, ?U = [u32] and so forth. Therefore, the result we get back would be as follows (I'm going to ignore region constraints and the \"value\"): Certainty: Ambiguous -- we're not sure yet if this holds Var values: [?T = ?T, ?U = ?U] -- we learned nothing about the values of the variables In short, the query result says that it is too soon to say much about whether this trait is proven. During type-checking, this is not an immediate error: instead, the type checker would hold on to this requirement ( Vec<?T>: Borrow<?U> ) and wait. As we'll see in the next example, it may happen that ?T and ?U wind up constrained from other sources, in which case we can try the trait query again. Example 2. We can now extend our previous example a bit, and assign a value to u : fn foo<A, B>(a: A, vec_b: Option<B>) where A: Borrow<B> { } fn main() { // What we saw before: let mut t: Vec<_> = vec![]; // Type: Vec<?T> let mut u: Option<_> = None; // Type: Option<?U> foo(t, u); // `Vec<?T>: Borrow<?U>` => ambiguous // New stuff: u = Some(vec![]); // ?U = Vec<?V>\n} As a result of this assignment, the type of u is forced to be Option<Vec<?V>> , where ?V represents the element type of the vector. This in turn implies that ?U is unified to Vec<?V> . Let's suppose that the type checker decides to revisit the \"as-yet-unproven\" trait obligation we saw before, Vec<?T>: Borrow<?U> . ?U is no longer an unbound inference variable; it now has a value, Vec<?V> . So, if we \"refresh\" the query with that value, we get: Vec<?T>: Borrow<Vec<?V>> This time, there is only one impl that applies, the reflexive impl: impl<T> Borrow<T> for T where T: ?Sized Therefore, the trait checker will answer: Certainty: Proven Var values: [?T = ?T, ?V = ?T] Here, it is saying that we have indeed proven that the obligation holds, and we also know that ?T and ?V are the same type (but we don't know what that type is yet!). (In fact, as the function ends here, the type checker would give an error at this point, since the element types of t and u are still not yet known, even though they are known to be the same.)","breadcrumbs":"Trait solving (new-style) » Examples","id":"traits/canonical-queries.html#examples"},"traits/regions.html#region-constraints":{"title":"Region constraints","body":"to be written","breadcrumbs":"Trait solving (new-style) » Lowering to logic » Region constraints","id":"traits/regions.html#region-constraints"},"tests/intro.html#other-tests":{"title":"Other Tests","breadcrumbs":"Other Tests","id":"tests/intro.html#other-tests","body":"The Rust build system handles running tests for various other things, including: Tidy -- This is a custom tool used for validating source code style and formatting conventions, such as rejecting long lines. There is more information in the section on coding conventions . Example: ./x.py test src/tools/tidy Unittests -- The Rust standard library and many of the Rust packages include typical Rust #[test] unittests. Under the hood, x.py will run cargo test on each package to run all the tests. Example: ./x.py test src/libstd Doctests -- Example code embedded within Rust documentation is executed via rustdoc --test . Examples: ./x.py test src/doc -- Runs rustdoc --test for all documentation in src/doc . ./x.py test --doc src/libstd -- Runs rustdoc --test on the standard library. Linkchecker -- A small tool for verifying href links within documentation. Example: ./x.py test src/tools/linkchecker Distcheck -- This verifies that the source distribution tarball created by the build system will unpack, build, and run all tests. Example: ./x.py test distcheck Tool tests -- Packages that are included with Rust have all of their tests run as well (typically by running cargo test within their directory). This includes things such as cargo, clippy, rustfmt, rls, miri, bootstrap (testing the Rust build system itself), etc. Cargotest -- This is a small tool which runs cargo test on a few significant projects (such as servo , ripgrep , tokei , etc.) just to ensure there aren't any significant regressions. Example: ./x.py test src/tools/cargotest"},"traits/canonical-queries.html#canonical-queries":{"body":"The \"start\" of the trait system is the canonical query (these are both queries in the more general sense of the word -- something you would like to know the answer to -- and in the rustc-specific sense ). The idea is that the type checker or other parts of the system, may in the course of doing their thing want to know whether some trait is implemented for some type (e.g., is u32: Debug true?). Or they may want to normalize some associated type . This section covers queries at a fairly high level of abstraction. The subsections look a bit more closely at how these ideas are implemented in rustc.","id":"traits/canonical-queries.html#canonical-queries","title":"Canonical queries","breadcrumbs":"Trait solving (new-style) » Canonical queries"},"incrcomp-debugging.html#debugging-and-testing-dependencies":{"body":"","title":"Debugging and Testing Dependencies","breadcrumbs":"Queries: demand-driven compilation » Debugging and Testing Dependencies","id":"incrcomp-debugging.html#debugging-and-testing-dependencies"},"const-eval.html#constant-evaluation":{"title":"Constant Evaluation","breadcrumbs":"Constant Evaluation","body":"Constant evaluation is the process of computing values at compile time. For a specific item (constant/static/array length) this happens after the MIR for the item is borrow-checked and optimized. In many cases trying to const evaluate an item will trigger the computation of its MIR for the first time. Prominent examples are The initializer of a static Array length needs to be known to reserve stack or heap space Enum variant discriminants needs to be known to prevent two variants from having the same discriminant Patterns need to be known to check for overlapping patterns Additionally constant evaluation can be used to reduce the workload or binary size at runtime by precomputing complex operations at compiletime and only storing the result. Constant evaluation can be done by calling the const_eval query of TyCtxt . The const_eval query takes a ParamEnv of environment in which the constant is evaluated (e.g. the function within which the constant is used) and a GlobalId . The GlobalId is made up of an Instance referring to a constant or static or of an Instance of a function and an index into the function's Promoted table. Constant evaluation returns a Result with either the error, or the simplest representation of the constant. \"simplest\" meaning if it is representable as an integer or fat pointer, it will directly yield the value (via Value::ByVal or Value::ByValPair ), instead of referring to the miri virtual memory allocation (via Value::ByRef ). This means that the const_eval function cannot be used to create miri-pointers to the evaluated constant or static. If you need that, you need to directly work with the functions in src/librustc_mir/interpret/const_eval.rs .","id":"const-eval.html#constant-evaluation"},"type-inference.html#trying-equality":{"title":"\"Trying\" equality","id":"type-inference.html#trying-equality","breadcrumbs":"\"Trying\" equality","body":"Sometimes you would like to know if it is possible to equate two types without error. You can test that with infcx.can_eq (or infcx.can_sub for subtyping). If this returns Ok , then equality is possible – but in all cases, any side-effects are reversed. Be aware, though, that the success or failure of these methods is always modulo regions . That is, two types &'a u32 and &'b u32 will return Ok for can_eq , even if 'a != 'b . This falls out from the \"two-phase\" nature of how we solve region constraints."},"tests/adding.html#error-annotations":{"body":"Error annotations specify the errors that the compiler is expected to emit. They are \"attached\" to the line in source where the error is located. ~ : Associates the following error level and message with the current line ~| : Associates the following error level and message with the same line as the previous comment ~^ : Associates the following error level and message with the previous line. Each caret ( ^ ) that you add adds a line to this, so ~^^^^^^^ is seven lines up. The error levels that you can have are: ERROR WARNING NOTE HELP and SUGGESTION * * Note : SUGGESTION must follow immediately after HELP .","id":"tests/adding.html#error-annotations","title":"Error annotations","breadcrumbs":"The compiler testing framework » Error annotations"},"conventions.html#copyright-notice":{"title":"Copyright notice","body":"All files must begin with the following copyright notice: // Copyright 2012-2013 The Rust Project Developers. See the COPYRIGHT\n// file at the top-level directory of this distribution and at\n// http://rust-lang.org/COPYRIGHT.\n//\n// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n// option. This file may not be copied, modified, or distributed\n// except according to those terms. The year at the top is not meaningful: copyright protections are in fact automatic from the moment of authorship. We do not typically edit the years on existing files. When creating a new file, you can use the current year if you like, but you don't have to.","breadcrumbs":"Copyright notice","id":"conventions.html#copyright-notice"},"traits/goals-and-clauses.html#domain-goals":{"breadcrumbs":"Trait solving (new-style) » Lowering to logic » Domain goals","body":"To define the set of domain goals in our system, we need to first introduce a few simple formulations. A trait reference consists of the name of a trait along with a suitable set of inputs P0..Pn: TraitRef = P0: TraitName<P1..Pn> So, for example, u32: Display is a trait reference, as is Vec<T>: IntoIterator . Note that Rust surface syntax also permits some extra things, like associated type bindings ( Vec<T>: IntoIterator<Item = T> ), that are not part of a trait reference. A projection consists of an associated item reference along with its inputs P0..Pm: Projection = <P0 as TraitName<P1..Pn>>::AssocItem<Pn+1..Pm> Given these, we can define a DomainGoal as follows: DomainGoal = Implemented(TraitRef) | ProjectionEq(Projection = Type) | Normalize(Projection -> Type) | FromEnv(TraitRef) | FromEnv(Projection = Type) | WellFormed(Type) | WellFormed(TraitRef) | WellFormed(Projection = Type) | Outlives(Type: Region) | Outlives(Region: Region) Let's break down each one of these, one-by-one. Implemented(TraitRef) e.g. Implemented(i32: Copy) True if the given trait is implemented for the given input types and lifetimes. ProjectionEq(Projection = Type) e.g. ProjectionEq<T as Iterator>::Item = u8 The given associated type Projection is equal to Type ; this can be proved with either normalization or using skolemized types. See the section on associated types . Normalize(Projection -> Type) e.g. ProjectionEq<T as Iterator>::Item -> u8 The given associated type Projection can be normalized to Type . As discussed in the section on associated types , Normalize implies ProjectionEq , but not vice versa. In general, proving Normalize(<T as Trait>::Item -> U) also requires proving Implemented(T: Trait) . FromEnv(TraitRef), FromEnv(Projection = Type) e.g. FromEnv(Self: Add<i32>) e.g. FromEnv(<Self as StreamingIterator>::Item<'a> = &'a [u8]) True if the inner TraitRef or projection equality is assumed to be true; that is, if it can be derived from the in-scope where clauses. For example, given the following function: fn loud_clone<T: Clone>(stuff: &T) -> T { println!(\"cloning!\"); stuff.clone()\n} Inside the body of our function, we would have FromEnv(T: Clone) . In-scope where clauses nest, so a function body inside an impl body inherits the impl body's where clauses, too. This and the next rule are used to implement implied bounds . As we'll see in the section on lowering, FromEnv(X) implies Implemented(X) , but not vice versa. This distinction is crucial to implied bounds. WellFormed(Item) These goals imply that the given item is well-formed . We can talk about different types of items being well-formed: Types , like WellFormed(Vec<i32>) , which is true in Rust, or WellFormed(Vec<str>) , which is not (because str is not Sized .) TraitRefs , like WellFormed(Vec<i32>: Clone) . Projections , like WellFormed(T: Iterator<Item = u32>) . Well-formedness is important to implied bounds . In particular, the reason it is okay to assume FromEnv(T: Clone) in the example above is that we also verify WellFormed(T: Clone) for each call site of loud_clone . Outlives(Type: Region), Outlives(Region: Region) e.g. Outlives(&'a str: 'b) , Outlives('a: 'static) True if the given type or region on the left outlives the right-hand region.","title":"Domain goals","id":"traits/goals-and-clauses.html#domain-goals"},"mir/regionck.html#skolemization-and-universes":{"breadcrumbs":"The MIR (Mid-level IR) » MIR borrowck » Skolemization and universes","title":"Skolemization and universes","body":"(This section describes ongoing work that hasn't landed yet.) From time to time we have to reason about regions that we can't concretely know. For example, consider this program: // A function that needs a static reference\nfn foo(x: &'static u32) { } fn bar(f: for<'a> fn(&'a u32)) { // ^^^^^^^^^^^^^^^^^^^ a function that can accept **any** reference let x = 22; f(&x);\n} fn main() { bar(foo);\n} This program ought not to type-check: foo needs a static reference for its argument, and bar wants to be given a function that that accepts any reference (so it can call it with something on its stack, for example). But how do we reject it and why ?","id":"mir/regionck.html#skolemization-and-universes"},"traits/lowering-rules.html#associated-type-declarations":{"breadcrumbs":"Trait solving (new-style) » Associated type declarations","body":"Given a trait that declares a (possibly generic) associated type: trait Trait<P1..Pn> // P0 == Self\nwhere WC\n{ type AssocType<Pn+1..Pm>: Bounds where WC1;\n} We will produce a number of program clauses. The first two define the rules by which ProjectionEq can succeed; these two clauses are discussed in detail in the section on associated types , but reproduced here for reference: // Rule ProjectionEq-Normalize\n//\n// ProjectionEq can succeed by normalizing:\nforall<Self, P1..Pn, Pn+1..Pm, U> { ProjectionEq(<Self as Trait<P1..Pn>>::AssocType<Pn+1..Pm> = U) :- Normalize(<Self as Trait<P1..Pn>>::AssocType<Pn+1..Pm> -> U)\n} // Rule ProjectionEq-Skolemize\n//\n// ProjectionEq can succeed by skolemizing, see \"associated type\"\n// chapter for more:\nforall<Self, P1..Pn, Pn+1..Pm> { ProjectionEq( <Self as Trait<P1..Pn>>::AssocType<Pn+1..Pm> = (Trait::AssocType)<Self, P1..Pn, Pn+1..Pm> )\n} The next rule covers implied bounds for the projection. In particular, the Bounds declared on the associated type must have been proven to hold to show that the impl is well-formed, and hence we can rely on them elsewhere. // Rule Implied-Bound-From-AssocTy\n//\n// For each `Bound` in `Bounds`:\nforall<Self, P1..Pn, Pn+1..Pm> { FromEnv(<Self as Trait<P1..Pn>>::AssocType<Pn+1..Pm>>: Bound) :- FromEnv(Self: Trait<P1..Pn>)\n} Next, we define the requirements for an instantiation of our associated type to be well-formed... // Rule WellFormed-AssocTy\nforall<Self, P1..Pn, Pn+1..Pm> { WellFormed((Trait::AssocType)<Self, P1..Pn, Pn+1..Pm>) :- WC1, Implemented(Self: Trait<P1..Pn>)\n} ...along with the reverse implications, when we can assume that it is well-formed. // Rule Implied-WC-From-AssocTy\n//\n// For each where clause WC1:\nforall<Self, P1..Pn, Pn+1..Pm> { FromEnv(WC1) :- FromEnv((Trait::AssocType)<Self, P1..Pn, Pn+1..Pm>)\n} // Rule Implied-Trait-From-AssocTy\nforall<Self, P1..Pn, Pn+1..Pm> { FromEnv(Self: Trait<P1..Pn>) :- FromEnv((Trait::AssocType)<Self, P1..Pn, Pn+1..Pm>)\n}","id":"traits/lowering-rules.html#associated-type-declarations","title":"Associated type declarations"},"traits/associated-types.html#integration-with-unification":{"breadcrumbs":"Trait solving (new-style) » Lowering to logic » Integration with unification","id":"traits/associated-types.html#integration-with-unification","body":"Now we are ready to discuss how associated type equality integrates with unification. As described in the type inference section, unification is basically a procedure with a signature like this: Unify(A, B) = Result<(Subgoals, RegionConstraints), NoSolution> In other words, we try to unify two things A and B. That procedure might just fail, in which case we get back Err(NoSolution) . This would happen, for example, if we tried to unify u32 and i32 . The key point is that, on success, unification can also give back to us a set of subgoals that still remain to be proven (it can also give back region constraints, but those are not relevant here). Whenever unification encounters an (unskolemized!) associated type projection P being equated with some other type T, it always succeeds, but it produces a subgoal ProjectionEq(P = T) that is propagated back up. Thus it falls to the ordinary workings of the trait system to process that constraint. (If we unify two projections P1 and P2, then unification produces a variable X and asks us to prove that ProjectionEq(P1 = X) and ProjectionEq(P2 = X) . That used to be needed in an older system to prevent cycles; I rather doubt it still is. -nmatsakis)","title":"Integration with unification"},"type-inference.html#snapshots":{"body":"As described in the previous section on can_eq , often it is useful to be able to do a series of operations and then roll back their side-effects. This is done for various reasons: one of them is to be able to backtrack, trying out multiple possibilities before settling on which path to take. Another is in order to ensure that a series of smaller changes take place atomically or not at all. To allow for this, the inference context supports a snapshot method. When you call it, it will start recording changes that occur from the operations you perform. When you are done, you can either invoke rollback_to , which will undo those changes, or else confirm , which will make the permanent. Snapshots can be nested as long as you follow a stack-like discipline. Rather than use snapshots directly, it is often helpful to use the methods like commit_if_ok or probe that encapsulate higher-level patterns.","title":"Snapshots","id":"type-inference.html#snapshots","breadcrumbs":"Snapshots"},"mir/regionck.html#final-example":{"breadcrumbs":"The MIR (Mid-level IR) » MIR borrowck » Final example","body":"Let's look at one last example. We'll extend the previous one to have a return type: for<'a> fn(&'a u32, &'a u32) -> &'a u32 <:\nfor<'b, 'c> fn(&'b u32, &'c u32) -> &'b u32 Despite seeming very similar to the previous example, this case is going to get an error. That's good: the problem is that we've gone from a fn that promises to return one of its two arguments, to a fn that is promising to return the first one. That is unsound. Let's see how it plays out. First, we skolemize the supertype: for<'a> fn(&'a u32, &'a u32) -> &'a u32 <:\nfn(&'!1 u32, &'!2 u32) -> &'!1 u32 Then we instantiate the subtype with existentials (in U2): fn(&'?3 u32, &'?3 u32) -> &'?3 u32 <:\nfn(&'!1 u32, &'!2 u32) -> &'!1 u32 And now we create the subtyping relationships: &'!1 u32 <: &'?3 u32 // arg 1\n&'!2 u32 <: &'?3 u32 // arg 2\n&'?3 u32 <: &'!1 u32 // return type And finally the outlives relationships. Here, let V1, V2, and V3 be the variables we assign to !1 , !2 , and ?3 respectively: V1: V3\nV2: V3\nV3: V1 Those variables will have these initial values: V1 in U1 = {skol(1)}\nV2 in U2 = {skol(2)}\nV3 in U2 = {} Now because of the V3: V1 constraint, we have to add skol(1) into V3 (and indeed it is visible from V3 ), so we get: V3 in U2 = {skol(1)} then we have this constraint V2: V3 , so we wind up having to enlarge V2 to include skol(1) (which it can also see): V2 in U2 = {skol(1), skol(2)} Now contraint propagation is done, but when we check the outlives relationships, we find that V2 includes this new element skol(1) , so we report an error.","title":"Final example","id":"mir/regionck.html#final-example"},"traits/lowering-rules.html#lowering-where-clauses":{"breadcrumbs":"Trait solving (new-style) » Lowering where clauses","body":"When used in a goal position, where clauses can be mapped directly to domain goals , as follows: A0: Foo<A1..An> maps to Implemented(A0: Foo<A1..An>) . A0: Foo<A1..An, Item = T> maps to ProjectionEq(<A0 as Foo<A1..An>>::Item = T) T: 'r maps to Outlives(T, 'r) 'a: 'b maps to Outlives('a, 'b) In the rules below, we will use WC to indicate where clauses that appear in Rust syntax; we will then use the same WC to indicate where those where clauses appear as goals in the program clauses that we are producing. In that case, the mapping above is used to convert from the Rust syntax into goals.","id":"traits/lowering-rules.html#lowering-where-clauses","title":"Lowering where clauses"},"incremental-compilation.html#the-try-mark-green-algorithm":{"breadcrumbs":"Queries: demand-driven compilation » The try-mark-green algorithm","body":"At the core of incremental compilation is an algorithm called \"try-mark-green\". It has the job of determining the color of a given query Q (which must not have yet been executed). In cases where Q has red inputs, determining Q's color may involve re-executing Q so that we can compare its output, but if all of Q's inputs are green, then we can conclude that Q must be green without re-executing it or inspecting its value at all. In the compiler, this allows us to avoid deserializing the result from disk when we don't need it, and in fact enables us to sometimes skip serializing the result as well (see the refinements section below). Try-mark-green works as follows: First check if the query Q was executed during the previous compilation. If not, we can just re-execute the query as normal, and assign it the color of red. If yes, then load the 'dependent queries' of Q. If there is a saved result, then we load the reads(Q) vector from the query DAG. The \"reads\" is the set of queries that Q executed during its execution. For each query R in reads(Q) , we recursively demand the color of R using try-mark-green. Note: it is important that we visit each node in reads(Q) in same order as they occurred in the original compilation. See the section on the query DAG below . If any of the nodes in reads(Q) wind up colored red , then Q is dirty. We re-execute Q and compare the hash of its result to the hash of the result from the previous compilation. If the hash has not changed, we can mark Q as green and return. Otherwise, all of the nodes in reads(Q) must be green . In that case, we can color Q as green and return.","id":"incremental-compilation.html#the-try-mark-green-algorithm","title":"The try-mark-green algorithm"},"type-inference.html#a-note-on-terminology":{"body":"We use the notation ?T to refer to inference variables, also called existential variables. We use the terms \"region\" and \"lifetime\" interchangeably. Both refer to the 'a in &'a T . The term \"bound region\" refers to a region that is bound in a function signature, such as the 'a in for<'a> fn(&'a u32) . A region is \"free\" if it is not bound.","id":"type-inference.html#a-note-on-terminology","breadcrumbs":"A note on terminology","title":"A note on terminology"},"incrcomp-debugging.html#tracking-down-incorrect-edges":{"id":"incrcomp-debugging.html#tracking-down-incorrect-edges","body":"Sometimes, after you dump the dependency graph, you will find some path that should not exist, but you will not be quite sure how it came to be. When the compiler is built with debug assertions, it can help you track that down. Simply set the RUST_FORBID_DEP_GRAPH_EDGE environment variable to a filter. Every edge created in the dep-graph will be tested against that filter -- if it matches, a bug! is reported, so you can easily see the backtrace ( RUST_BACKTRACE=1 ). The syntax for these filters is the same as described in the previous section. However, note that this filter is applied to every edge and doesn't handle longer paths in the graph, unlike the previous section. Example: You find that there is a path from the Hir of foo to the type check of bar and you don't think there should be. You dump the dep-graph as described in the previous section and open dep-graph.txt to see something like: Hir(foo) -> Collect(bar)\nCollect(bar) -> TypeckTables(bar) That first edge looks suspicious to you. So you set RUST_FORBID_DEP_GRAPH_EDGE to Hir&foo -> Collect&bar , re-run, and then observe the backtrace. Voila, bug fixed!","breadcrumbs":"Queries: demand-driven compilation » Tracking down incorrect edges","title":"Tracking down incorrect edges"},"traits/lowering-rules.html#transforming-the-lowered-where-clauses":{"id":"traits/lowering-rules.html#transforming-the-lowered-where-clauses","breadcrumbs":"Trait solving (new-style) » Transforming the lowered where clauses","body":"In addition, in the rules below, we sometimes do some transformations on the lowered where clauses, as defined here: FromEnv(WC) -- this indicates that: Implemented(TraitRef) becomes FromEnv(TraitRef) ProjectionEq(Projection = Ty) becomes FromEnv(Projection = Ty) other where-clauses are left intact WellFormed(WC) -- this indicates that: Implemented(TraitRef) becomes WellFormed(TraitRef) ProjectionEq(Projection = Ty) becomes WellFormed(Projection = Ty) TODO : I suspect that we want to alter the outlives relations too, but Chalk isn't modeling those right now.","title":"Transforming the lowered where clauses"},"tests/adding.html#tests-that-do-not-result-in-compile-errors":{"title":"Tests that do not result in compile errors","breadcrumbs":"The compiler testing framework » Tests that do not result in compile errors","id":"tests/adding.html#tests-that-do-not-result-in-compile-errors","body":"By default, a UI test is expected not to compile (in which case, it should contain at least one //~ ERROR annotation). However, you can also make UI tests where compilation is expected to succeed, and you can even run the resulting program. Just add one of the following header commands : // compile-pass -- compilation should succeed but do not run the resulting binary // run-pass -- compilation should succeed and we should run the resulting binary"},"how-to-build-and-run.html#how-to-build-the-compiler-and-run-what-you-built":{"id":"how-to-build-and-run.html#how-to-build-the-compiler-and-run-what-you-built","breadcrumbs":"How to build the compiler and run what you built","title":"How to build the compiler and run what you built","body":"The compiler is built using a tool called x.py . You will need to have Python installed to run it. But before we get to that, if you're going to be hacking on rustc , you'll want to tweak the configuration of the compiler. The default configuration is oriented towards running the compiler as a user, not a developer."},"incremental-compilation.html#improvements-to-the-basic-algorithm":{"id":"incremental-compilation.html#improvements-to-the-basic-algorithm","body":"In the description of the basic algorithm, we said that at the end of compilation we would save the results of all the queries that were performed. In practice, this can be quite wasteful – many of those results are very cheap to recompute, and serializing and deserializing them is not a particular win. In practice, what we would do is to save the hashes of all the subqueries that we performed. Then, in select cases, we also save the results. This is why the incremental algorithm separates computing the color of a node, which often does not require its value, from computing the result of a node. Computing the result is done via a simple algorithm like so: Check if a saved result for Q is available. If so, compute the color of Q. If Q is green, deserialize and return the saved result. Otherwise, execute Q. We can then compare the hash of the result and color Q as green if it did not change.","title":"Improvements to the basic algorithm","breadcrumbs":"Queries: demand-driven compilation » Improvements to the basic algorithm"},"trans.html#generating-llvm-ir":{"title":"Generating LLVM IR","body":"","id":"trans.html#generating-llvm-ir","breadcrumbs":"Generating LLVM IR"},"the-parser.html#the-parser":{"id":"the-parser.html#the-parser","body":"The parser is responsible for converting raw Rust source code into a structured form which is easier for the compiler to work with, usually called an Abstract Syntax Tree . An AST mirrors the structure of a Rust program in memory, using a Span to link a particular AST node back to its source text. The bulk of the parser lives in the libsyntax crate. Like most parsers, the parsing process is composed of two main steps, lexical analysis – turn a stream of characters into a stream of token trees parsing – turn the token trees into an AST The syntax crate contains several main players, a CodeMap for mapping AST nodes to their source code the ast module contains types corresponding to each AST node a StringReader for lexing source code into tokens the parser module and Parser struct are in charge of actually parsing tokens into AST nodes, and a visit module for walking the AST and inspecting or mutating the AST nodes. The main entrypoint to the parser is via the various parse_* functions in the parser module . They let you do things like turn a filemap into a token stream, create a parser from the token stream, and then execute the parser to get a Crate (the root AST node). To minimise the amount of copying that is done, both the StringReader and Parser have lifetimes which bind them to the parent ParseSess . This contains all the information needed while parsing, as well as the CodeMap itself.","title":"The Parser","breadcrumbs":"The Parser"},"appendix/stupid-stats.html#appendix-a-a-tutorial-on-creating-a-drop-in-replacement-for-rustc":{"breadcrumbs":"Appendix A: A tutorial on creating a drop-in replacement for rustc","body":"Note: This is a copy of @nrc 's amazing stupid-stats . You should find a copy of the code on the GitHub repository although due to the compiler's constantly evolving nature, there is no guarantee it'll compile on the first go. Many tools benefit from being a drop-in replacement for a compiler. By this, I mean that any user of the tool can use mytool in all the ways they would normally use rustc - whether manually compiling a single file or as part of a complex make project or Cargo build, etc. That could be a lot of work; rustc, like most compilers, takes a large number of command line arguments which can affect compilation in complex and interacting ways. Emulating all of this behaviour in your tool is annoying at best, especically if you are making many of the same calls into librustc that the compiler is. The kind of things I have in mind are tools like rustdoc or a future rustfmt. These want to operate as closely as possible to real compilation, but have totally different outputs (documentation and formatted source code, respectively). Another use case is a customised compiler. Say you want to add a custom code generation phase after macro expansion, then creating a new tool should be easier than forking the compiler (and keeping it up to date as the compiler evolves). I have gradually been trying to improve the API of librustc to make creating a drop-in tool easier to produce (many others have also helped improve these interfaces over the same time frame). It is now pretty simple to make a tool which is as close to rustc as you want it to be. In this tutorial I'll show how. Note/warning, everything I talk about in this tutorial is internal API for rustc. It is all extremely unstable and likely to change often and in unpredictable ways. Maintaining a tool which uses these APIs will be non- trivial, although hopefully easier than maintaining one that does similar things without using them. This tutorial starts with a very high level view of the rustc compilation process and of some of the code that drives compilation. Then I'll describe how that process can be customised. In the final section of the tutorial, I'll go through an example - stupid-stats - which shows how to build a drop-in tool.","id":"appendix/stupid-stats.html#appendix-a-a-tutorial-on-creating-a-drop-in-replacement-for-rustc","title":"Appendix A: A tutorial on creating a drop-in replacement for rustc"},"appendix/background.html#what-is-universally-quantified-what-about-existentially-quantified":{"body":"to be written","id":"appendix/background.html#what-is-universally-quantified-what-about-existentially-quantified","title":"What is \"universally quantified\"? What about \"existentially quantified\"?","breadcrumbs":"What is \"universally quantified\"? What about \"existentially quantified\"?"},"traits/caching.html#where-clauses-and-the-local-vs-global-cache":{"title":"Where clauses and the local vs global cache","id":"traits/caching.html#where-clauses-and-the-local-vs-global-cache","breadcrumbs":"Trait solving (old-style) » Where clauses and the local vs global cache","body":"One subtle interaction is that the results of trait lookup will vary depending on what where clauses are in scope. Therefore, we actually have two caches, a local and a global cache. The local cache is attached to the ParamEnv , and the global cache attached to the tcx . We use the local cache whenever the result might depend on the where clauses that are in scope. The determination of which cache to use is done by the method pick_candidate_cache in select.rs . At the moment, we use a very simple, conservative rule: if there are any where-clauses in scope, then we use the local cache. We used to try and draw finer-grained distinctions, but that led to a serious of annoying and weird bugs like #22019 and #18290 . This simple rule seems to be pretty clearly safe and also still retains a very high hit rate (~95% when compiling rustc). TODO : it looks like pick_candidate_cache no longer exists. In general, is this section still accurate at all?"},"traits/hrtb.html#higher-ranked-trait-bounds":{"body":"One of the more subtle concepts in trait resolution is higher-ranked trait bounds . An example of such a bound is for<'a> MyTrait<&'a isize> . Let's walk through how selection on higher-ranked trait references works.","title":"Higher-ranked trait bounds","id":"traits/hrtb.html#higher-ranked-trait-bounds","breadcrumbs":"Trait solving (old-style) » Higher-ranked trait bounds"},"param_env.html#parameter-environment":{"id":"param_env.html#parameter-environment","body":"When working with associated and/or or generic items (types, constants, functions/methods) it is often relevant to have more information about the Self or generic parameters. Trait bounds and similar information is encoded in the ParamEnv . Often this is not enough information to obtain things like the type's Layout , but you can do all kinds of other checks on it (e.g. whether a type implements Copy ) or you can evaluate an associated constant whose value does not depend on anything from the parameter environment. For example if you have a function fn foo<T: Copy>(t: T) {\n} the parameter environment for that function is [T: Copy] . This means any evaluation within this function will, when accessing the type T , know about its Copy bound via the parameter environment. Although you can obtain a valid ParamEnv for any item via tcx.param_env(def_id) , this ParamEnv can be too generic for your use case. Using the ParamEnv from the surrounding context can allow you to evaluate more things. Another great thing about ParamEnv is that you can use it to bundle the thing depending on generic parameters (e.g. a Ty ) by calling param_env.and(ty) . This will produce a ParamEnvAnd<Ty> , making clear that you should probably not be using the inner value without taking care to also use the ParamEnv .","title":"Parameter Environment","breadcrumbs":"Parameter Environment"},"appendix/stupid-stats.html#an-example---stupid-stats":{"breadcrumbs":"An example - stupid-stats","title":"An example - stupid-stats","body":"Our example tool is very simple, it simply collects some simple and not very useful statistics about a program; it is called stupid-stats. You can find the (more heavily commented) complete source for the example on Github . To build, just do cargo build . To run on a file foo.rs , do cargo run foo.rs (assuming you have a Rust program called foo.rs . You can also pass any command line arguments that you would normally pass to rustc). When you run it you'll see output similar to In crate: foo, Found 12 uses of `println!`;\nThe most common number of arguments is 1 (67% of all functions);\n25% of functions have four or more arguments. To make things easier, when we talk about functions, we're excluding methods and closures. You can also use the executable as a drop-in replacement for rustc, because after all, that is the whole point of this exercise. So, however you use rustc in your makefile setup, you can use target/stupid (or whatever executable you end up with) instead. That might mean setting an environment variable or it might mean renaming your executable to rustc and setting your PATH. Similarly, if you're using Cargo, you'll need to rename the executable to rustc and set the PATH. Alternatively, you should be able to use multirust to get around all the PATH stuff (although I haven't actually tried that). (Note that this example prints to stdout. I'm not entirely sure what Cargo does with stdout from rustc under different circumstances. If you don't see any output, try inserting a panic! after the println! s to error out, then Cargo should dump stupid-stats' stdout to Cargo's stdout). Let's start with the main function for our tool, it is pretty simple: fn main() { let args: Vec<_> = std::env::args().collect(); rustc_driver::run_compiler(&args, &mut StupidCalls::new()); std::env::set_exit_status(0);\n} The first line grabs any command line arguments. The second line calls the compiler driver with those arguments. The final line sets the exit code for the program. The only interesting thing is the StupidCalls object we pass to the driver. This is our implementation of the CompilerCalls trait and is what will make this tool different from rustc. StupidCalls is a mostly empty struct: struct StupidCalls { default_calls: RustcDefaultCalls,\n} This tool is so simple that it doesn't need to store any data here, but usually you would. We embed a RustcDefaultCalls object to delegate to in our impl when we want exactly the same behaviour as the Rust compiler. Mostly you don't want to do that (or at least don't need to) in a tool. However, Cargo calls rustc with the --print file-names , so we delegate in late_callback and no_input to keep Cargo happy. Most of the rest of the impl of CompilerCalls is trivial: impl<'a> CompilerCalls<'a> for StupidCalls { fn early_callback(&mut self, _: &getopts::Matches, _: &config::Options, _: &diagnostics::registry::Registry, _: ErrorOutputType) -> Compilation { Compilation::Continue } fn late_callback(&mut self, t: &TransCrate, m: &getopts::Matches, s: &Session, c: &CrateStore, i: &Input, odir: &Option<PathBuf>, ofile: &Option<PathBuf>) -> Compilation { self.default_calls.late_callback(t, m, s, c, i, odir, ofile); Compilation::Continue } fn some_input(&mut self, input: Input, input_path: Option<Path>) -> (Input, Option<Path>) { (input, input_path) } fn no_input(&mut self, m: &getopts::Matches, o: &config::Options, odir: &Option<Path>, ofile: &Option<Path>, r: &diagnostics::registry::Registry) -> Option<(Input, Option<Path>)> { self.default_calls.no_input(m, o, odir, ofile, r); // This is not optimal error handling. panic!(\"No input supplied to stupid-stats\"); } fn build_controller(&mut self, _: &Session) -> driver::CompileController<'a> { ... }\n} We don't do anything for either of the callbacks, nor do we change the input if the user supplies it. If they don't, we just panic! , this is the simplest way to handle the error, but not very user-friendly, a real tool would give a constructive message or perform a default action. In build_controller we construct our CompileController . We only want to parse, and we want to inspect macros before expansion, so we make compilation stop after the first phase (parsing). The callback after that phase is where the tool does it's actual work by walking the AST. We do that by creating an AST visitor and making it walk the AST from the top (the crate root). Once we've walked the crate, we print the stats we've collected: fn build_controller(&mut self, _: &Session) -> driver::CompileController<'a> { // We mostly want to do what rustc does, which is what basic() will return. let mut control = driver::CompileController::basic(); // But we only need the AST, so we can stop compilation after parsing. control.after_parse.stop = Compilation::Stop; // And when we stop after parsing we'll call this closure. // Note that this will give us an AST before macro expansions, which is // not usually what you want. control.after_parse.callback = box |state| { // Which extracts information about the compiled crate... let krate = state.krate.unwrap(); // ...and walks the AST, collecting stats. let mut visitor = StupidVisitor::new(); visit::walk_crate(&mut visitor, krate); // And finally prints out the stupid stats that we collected. let cratename = match attr::find_crate_name(&krate.attrs[]) { Some(name) => name.to_string(), None => String::from_str(\"unknown_crate\"), }; println!(\"In crate: {},\\n\", cratename); println!(\"Found {} uses of `println!`;\", visitor.println_count); let (common, common_percent, four_percent) = visitor.compute_arg_stats(); println!(\"The most common number of arguments is {} ({:.0}% of all functions);\", common, common_percent); println!(\"{:.0}% of functions have four or more arguments.\", four_percent); }; control\n} That is all it takes to create your own drop-in compiler replacement or custom compiler! For the sake of completeness I'll go over the rest of the stupid-stats tool. struct StupidVisitor { println_count: usize, arg_counts: Vec<usize>,\n} The StupidVisitor struct just keeps track of the number of println! s it has seen and the count for each number of arguments. It implements syntax::visit::Visitor to walk the AST. Mostly we just use the default methods, these walk the AST taking no action. We override visit_item and visit_mac to implement custom behaviour when we walk into items (items include functions, modules, traits, structs, and so forth, we're only interested in functions) and macros: impl<'v> visit::Visitor<'v> for StupidVisitor { fn visit_item(&mut self, i: &'v ast::Item) { match i.node { ast::Item_::ItemFn(ref decl, _, _, _, _) => { // Record the number of args. self.increment_args(decl.inputs.len()); } _ => {} } // Keep walking. visit::walk_item(self, i) } fn visit_mac(&mut self, mac: &'v ast::Mac) { // Find its name and check if it is \"println\". let ast::Mac_::MacInvocTT(ref path, _, _) = mac.node; if path_to_string(path) == \"println\" { self.println_count += 1; } // Keep walking. visit::walk_mac(self, mac) }\n} The increment_args method increments the correct count in StupidVisitor::arg_counts . After we're done walking, compute_arg_stats does some pretty basic maths to come up with the stats we want about arguments.","id":"appendix/stupid-stats.html#an-example---stupid-stats"},"tests/adding.html#comment-explaining-what-the-test-is-about":{"title":"Comment explaining what the test is about","breadcrumbs":"The compiler testing framework » Comment explaining what the test is about","id":"tests/adding.html#comment-explaining-what-the-test-is-about","body":"When you create a test file, include a comment summarizing the point of the test immediately after the copyright notice . This should highlight which parts of the test are more important, and what the bug was that the test is fixing. Citing an issue number is often very helpful. This comment doesn't have to be super extensive. Just something like \"Regression test for #18060: match arms were matching in the wrong order.\" might already be enough. These comments are very useful to others later on when your test breaks, since they often can highlight what the problem is. They are also useful if for some reason the tests need to be refactored, since they let others know which parts of the test were important (often a test must be rewritten because it no longer tests what is was meant to test, and then it's useful to know what it was meant to test exactly)."},"traits/lowering-to-logic.html#lowering-to-logic":{"breadcrumbs":"Trait solving (new-style) » Lowering to logic","id":"traits/lowering-to-logic.html#lowering-to-logic","title":"Lowering to logic","body":"The key observation here is that the Rust trait system is basically a kind of logic, and it can be mapped onto standard logical inference rules. We can then look for solutions to those inference rules in a very similar fashion to how e.g. a Prolog solver works. It turns out that we can't quite use Prolog rules (also called Horn clauses) but rather need a somewhat more expressive variant."},"appendix/background.html#what-is-a-control-flow-graph":{"breadcrumbs":"What is a control-flow graph?","id":"appendix/background.html#what-is-a-control-flow-graph","body":"A control-flow graph is a common term from compilers. If you've ever used a flow-chart, then the concept of a control-flow graph will be pretty familiar to you. It's a representation of your program that exposes the underlying control flow in a very clear way. A control-flow graph is structured as a set of basic blocks connected by edges. The key idea of a basic block is that it is a set of statements that execute \"together\" -- that is, whenever you branch to a basic block, you start at the first statement and then execute all the remainder. Only at the end of the block is there the possibility of branching to more than one place (in MIR, we call that final statement the terminator ): bb0: { statement0; statement1; statement2; ... terminator;\n} Many expressions that you are used to in Rust compile down to multiple basic blocks. For example, consider an if statement: a = 1;\nif some_variable { b = 1;\n} else { c = 1;\n}\nd = 1; This would compile into four basic blocks: BB0: { a = 1; if some_variable { goto BB1 } else { goto BB2 }\n} BB1: { b = 1; goto BB3;\n} BB2: { c = 1; goto BB3;\n} BB3: { d = 1; ...;\n} When using a control-flow graph, a loop simply appears as a cycle in the graph, and the break keyword translates into a path out of that cycle.","title":"What is a control-flow graph?"},"appendix/stupid-stats.html#compilercontroller":{"body":"CompilerController is a struct consisting of PhaseController s and flags. Currently, there is only flag, make_glob_map which signals whether to produce a map of glob imports (used by save-analysis and potentially other tools). There are probably flags in the session that should be moved here. There is a PhaseController for each of the phases described in the above summary of compilation (and we could add more in the future for finer-grained control). They are all after_ a phase because they are checked at the end of a phase (again, that might change), e.g., CompilerController::after_parse controls what happens immediately after parsing (and before macro expansion). Each PhaseController contains a flag called stop which indicates whether compilation should stop or continue, and a callback to be executed at the point indicated by the phase. The callback is called whether or not compilation continues. Information about the state of compilation is passed to these callbacks in a CompileState object. This contains all the information the compiler has. Note that this state information is immutable - your callback can only execute code using the compiler state, it can't modify the state. (If there is demand, we could change that). The state available to a callback depends on where during compilation the callback is called. For example, after parsing there is an AST but no semantic analysis (because the AST has not been analysed yet). After translation, there is translation info, but no AST or analysis info (since these have been consumed/forgotten).","breadcrumbs":"CompilerController","id":"appendix/stupid-stats.html#compilercontroller","title":"CompilerController"},"tests/intro.html#the-compiler-testing-framework":{"body":"The Rust project runs a wide variety of different tests, orchestrated by the build system ( x.py test ). The main test harness for testing the compiler itself is a tool called compiletest (sources in the src/tools/compiletest ). This section gives a brief overview of how the testing framework is setup, and then gets into some of the details on how to run tests as well as how to add new tests .","id":"tests/intro.html#the-compiler-testing-framework","title":"The compiler testing framework","breadcrumbs":"The compiler testing framework"},"mir/regionck.html#region-variables-and-constraints":{"breadcrumbs":"The MIR (Mid-level IR) » MIR borrowck » Region variables and constraints","id":"mir/regionck.html#region-variables-and-constraints","body":"to be written -- describe the RegionInferenceContext and the role of liveness_constraints vs other constraints , plus","title":"Region variables and constraints"},"name-resolution.html#name-resolution":{"body":"The name resolution is a separate pass in the compiler. Its input is the syntax tree, produced by parsing input files. It produces links from all the names in the source to relevant places where the name was introduced. It also generates helpful error messages, like typo suggestions, traits to import or lints about unused items. A successful run of the name resolution ( Resolver::resolve_crate ) creates kind of an index the rest of the compilation may use to ask about the present names (through the hir::lowering::Resolver interface). The name resolution lives in the librustc_resolve crate, with the meat in lib.rs and some helpers or symbol-type specific logic in the other modules.","id":"name-resolution.html#name-resolution","breadcrumbs":"Name resolution","title":"Name resolution"},"traits/canonicalization.html#canonicalizing-the-query":{"title":"Canonicalizing the query","id":"traits/canonicalization.html#canonicalizing-the-query","body":"To see how it works, imagine that we are asking to solve the following trait query: ?A: Foo<'static, ?B> , where ?A and ?B are unbound. This query contains two unbound variables, but it also contains the lifetime 'static . The trait system generally ignores all lifetimes and treats them equally, so when canonicalizing, we will also replace any free lifetime with a canonical variable. Therefore, we get the following result: ?0: Foo<'?1, ?2> Sometimes we write this differently, like so: for<T,L,T> { ?0: Foo<'?1, ?2> } This for<> gives some information about each of the canonical variables within. In this case, each T indicates a type variable, so ?0 and ?2 are types; the L indicates a lifetime varibale, so ?1 is a lifetime. The canonicalize method also gives back a CanonicalVarValues array OV with the \"original values\" for each canonicalized variable: [?A, 'static, ?B] We'll need this vector OV later, when we process the query response.","breadcrumbs":"Trait solving (new-style) » Canonical queries » Canonicalizing the query"},"incremental-compilation.html#the-basic-algorithm":{"title":"The basic algorithm","body":"The basic algorithm is called the red-green algorithm [1] . The high-level idea is that, after each run of the compiler, we will save the results of all the queries that we do, as well as the query DAG . The query DAG is a DAG that indexes which queries executed which other queries. So, for example, there would be an edge from a query Q1 to another query Q2 if computing Q1 required computing Q2 (note that because queries cannot depend on themselves, this results in a DAG and not a general graph). On the next run of the compiler, then, we can sometimes reuse these query results to avoid re-executing a query. We do this by assigning every query a color : If a query is colored red , that means that its result during this compilation has changed from the previous compilation. If a query is colored green , that means that its result is the same as the previous compilation. There are two key insights here: First, if all the inputs to query Q are colored green, then the query Q must result in the same value as last time and hence need not be re-executed (or else the compiler is not deterministic). Second, even if some inputs to a query changes, it may be that it still produces the same result as the previous compilation. In particular, the query may only use part of its input. Therefore, after executing a query, we always check whether it produced the same result as the previous time. If it did, we can still mark the query as green, and hence avoid re-executing dependent queries.","breadcrumbs":"Queries: demand-driven compilation » The basic algorithm","id":"incremental-compilation.html#the-basic-algorithm"},"conventions.html#formatting-and-the-tidy-script":{"body":"This file offers some tips on the coding conventions for rustc. This chapter covers formatting , coding for correctness , using crates from crates.io , and some tips on structuring your PR for easy review . rustc is slowly moving towards the Rust standard coding style ; at the moment, however, it follows a rather more chaotic style. We do have some mandatory formatting conventions, which are automatically enforced by a script we affectionately call the \"tidy\" script. The tidy script runs automatically when you do ./x.py test and can be run in isolation with ./x.py test src/tools/tidy .","breadcrumbs":"Formatting and the tidy script","id":"conventions.html#formatting-and-the-tidy-script","title":"Formatting and the tidy script"},"variance.html#variance-and-associated-types":{"id":"variance.html#variance-and-associated-types","title":"Variance and associated types","breadcrumbs":"Type checking » Variance and associated types","body":"Traits with associated types -- or at minimum projection expressions -- must be invariant with respect to all of their inputs. To see why this makes sense, consider what subtyping for a trait reference means: <T as Trait> <: <U as Trait> means that if I know that T as Trait , I also know that U as Trait . Moreover, if you think of it as dictionary passing style, it means that a dictionary for <T as Trait> is safe to use where a dictionary for <U as Trait> is expected. The problem is that when you can project types out from <T as Trait> , the relationship to types projected out of <U as Trait> is completely unknown unless T==U (see #21726 for more details). Making Trait invariant ensures that this is true. Another related reason is that if we didn't make traits with associated types invariant, then projection is no longer a function with a single result. Consider: trait Identity { type Out; fn foo(&self); }\nimpl<T> Identity for T { type Out = T; ... } Now if I have <&'static () as Identity>::Out , this can be validly derived as &'a () for any 'a : <&'a () as Identity> <: <&'static () as Identity>\nif &'static () < : &'a () -- Identity is contravariant in Self\nif 'static : 'a -- Subtyping rules for relations This change otoh means that <'static () as Identity>::Out is always &'static () (which might then be upcast to 'a () , separately). This was helpful in solving #21750."},"macro-expansion.html#the-macro-parser":{"title":"The macro parser","body":"There are two parts to macro expansion: parsing the definition and parsing the invocations. Interestingly, both are done by the macro parser. Basically, the macro parser is like an NFA-based regex parser. It uses an algorithm similar in spirit to the Earley parsing algorithm . The macro parser is defined in src/libsyntax/ext/tt/macro_parser.rs . The interface of the macro parser is as follows (this is slightly simplified): fn parse( sess: ParserSession, tts: TokenStream, ms: &[TokenTree]\n) -> NamedParseResult In this interface: sess is a \"parsing session\", which keeps track of some metadata. Most notably, this is used to keep track of errors that are generated so they can be reported to the user. tts is a stream of tokens. The macro parser's job is to consume the raw stream of tokens and output a binding of metavariables to corresponding token trees. ms a matcher . This is a sequence of token trees that we want to match tts against. In the analogy of a regex parser, tts is the input and we are matching it against the pattern ms . Using our examples, tts could be the stream of tokens containing the inside of the example invocation print foo , while ms might be the sequence of token (trees) print $mvar:ident . The output of the parser is a NamedParseResult , which indicates which of three cases has occured: Success: tts matches the given matcher ms , and we have produced a binding from metavariables to the corresponding token trees. Failure: tts does not match ms . This results in an error message such as \"No rule expected token blah \". Error: some fatal error has occured in the parser . For example, this happens if there are more than one pattern match, since that indicates the macro is ambiguous. The full interface is defined here . The macro parser does pretty much exactly the same as a normal regex parser with one exception: in order to parse different types of metavariables, such as ident , block , expr , etc., the macro parser must sometimes call back to the normal Rust parser. As mentioned above, both definitions and invocations of macros are parsed using the macro parser. This is extremely non-intuitive and self-referential. The code to parse macro definitions is in src/libsyntax/ext/tt/macro_rules.rs . It defines the pattern for matching for a macro definition as $( $lhs:tt => $rhs:tt );+ . In other words, a macro_rules defintion should have in its body at least one occurence of a token tree followed by => followed by another token tree. When the compiler comes to a macro_rules definition, it uses this pattern to match the two token trees per rule in the definition of the macro using the macro parser itself . In our example definition, the metavariable $lhs would match the patterns of both arms: (print $mvar:ident) and (print twice $mvar:ident) . And $rhs would match the bodies of both arms: { println!(\"{}\", $mvar); } and { println!(\"{}\", $mvar); println!(\"{}\", $mvar); } . The parser would keep this knowledge around for when it needs to expand a macro invocation. When the compiler comes to a macro invocation, it parses that invocation using the same NFA-based macro parser that is described above. However, the matcher used is the first token tree ( $lhs ) extracted from the arms of the macro definition . Using our example, we would try to match the token stream print foo from the invocation against the matchers print $mvar:ident and print twice $mvar:ident that we previously extracted from the definition. The algorithm is exactly the same, but when the macro parser comes to a place in the current matcher where it needs to match a non-terminal (e.g. $mvar:ident ), it calls back to the normal Rust parser to get the contents of that non-terminal. In this case, the Rust parser would look for an ident token, which it finds ( foo ) and returns to the macro parser. Then, the macro parser proceeds in parsing as normal. Also, note that exactly one of the matchers from the various arms should match the invocation; if there is more than one match, the parse is ambiguous, while if there are no matches at all, there is a syntax error. For more information about the macro parser's implementation, see the comments in src/libsyntax/ext/tt/macro_parser.rs .","id":"macro-expansion.html#the-macro-parser","breadcrumbs":"The macro parser"},"type-inference.html#region-constraints":{"title":"Region constraints","body":"Regions are inferenced somewhat differently from types. Rather than eagerly unifying things, we simply collect constraints as we go, but make (almost) no attempt to solve regions. These constraints have the form of an \"outlives\" constraint: 'a: 'b Actually the code tends to view them as a subregion relation, but it's the same idea: 'b <= 'a (There are various other kinds of constraints, such as \"verifys\"; see the region_constraints module for details.) There is one case where we do some amount of eager unification. If you have an equality constraint between two regions 'a = 'b we will record that fact in a unification table. You can then use opportunistic_resolve_var to convert 'b to 'a (or vice versa). This is sometimes needed to ensure termination of fixed-point algorithms.","breadcrumbs":"Region constraints","id":"type-inference.html#region-constraints"},"traits/lowering-rules.html#lowering-impls":{"title":"Lowering impls","body":"Given an impl of a trait: impl<P0..Pn> Trait<A1..An> for A0\nwhere WC\n{ // zero or more impl items\n} Let TraitRef be the trait reference A0: Trait<A1..An> . Then we will create the following rules: // Rule Implemented-From-Impl\nforall<P0..Pn> { Implemented(TraitRef) :- WC\n} In addition, we will lower all of the impl items .","breadcrumbs":"Trait solving (new-style) » Lowering impls","id":"traits/lowering-rules.html#lowering-impls"},"traits/goals-and-clauses.html#incomplete-chapter":{"id":"traits/goals-and-clauses.html#incomplete-chapter","title":"Incomplete chapter","breadcrumbs":"Trait solving (new-style) » Lowering to logic » Incomplete chapter","body":"Some topics yet to be written: Elaborate on the proof procedure SLG solving -- introduce negative reasoning"},"appendix/stupid-stats.html#the-driver-customisation-apis":{"title":"The driver customisation APIs","breadcrumbs":"The driver customisation APIs","id":"appendix/stupid-stats.html#the-driver-customisation-apis","body":"There are two primary ways to customise compilation - high level control of the driver using CompilerCalls and controlling each phase of compilation using a CompileController . The former lets you customise handling of command line arguments etc., the latter lets you stop compilation early or execute code between phases."},"traits/chalk-overview.html#intermediate-representation-ir":{"id":"traits/chalk-overview.html#intermediate-representation-ir","body":"The second intermediate representation in chalk is called, well, the \"ir\". :) The IR source code contains the complete definition. The ir::Program struct contains some \"rust things\" but indexed and accessible in a different way. This is sort of analogous to the HIR in Rust. For example, if you have a type like Foo<Bar> , we would represent Foo as a string in the AST but in ir::Program , we use numeric indices ( ItemId ). In addition to ir::Program which has \"rust-like things\", there is also ir::ProgramEnvironment which is \"pure logic\". The main field in that struct is program_clauses which contains the ProgramClause s that we generated previously.","title":"Intermediate Representation (IR)","breadcrumbs":"Trait solving (new-style) » Intermediate Representation (IR)"},"macro-expansion.html#example":{"title":"Example","body":"It's helpful to have an example to refer to. For the remainder of this chapter, whenever we refer to the \"example definition \", we mean the following: macro_rules! printer { (print $mvar:ident) => { println!(\"{}\", $mvar); } (print twice $mvar:ident) => { println!(\"{}\", $mvar); println!(\"{}\", $mvar); }\n} $mvar is called a metavariable . Unlike normal variables, rather than binding to a value in a computation, a metavariable binds at compile time to a tree of tokens . A token is a single \"unit\" of the grammar, such as an identifier (e.g. foo ) or punctuation (e.g. => ). There are also other special tokens, such as EOF , which indicates that there are no more tokens. Token trees resulting from paired parentheses-like characters ( ( ... ) , [ ... ] , and { ... } ) – they include the open and close and all the tokens in between (we do require that parentheses-like characters be balanced). Having macro expansion operate on token streams rather than the raw bytes of a source file abstracts away a lot of complexity. The macro expander (and much of the rest of the compiler) doesn't really care that much about the exact line and column of some syntactic construct in the code; it cares about what constructs are used in the code. Using tokens allows us to care about what without worrying about where . For more information about tokens, see the Parsing chapter of this book. Whenever we refer to the \"example invocation \", we mean the following snippet: printer!(print foo); // Assume `foo` is a variable defined somewhere else... The process of expanding the macro invocation into the syntax tree println!(\"{}\", foo) and then expanding that into a call to Display::fmt is called macro expansion , and it is the topic of this chapter.","id":"macro-expansion.html#example","breadcrumbs":"Example"},"tests/intro.html#testing-on-emulators":{"id":"tests/intro.html#testing-on-emulators","body":"Some platforms are tested via an emulator for architectures that aren't readily available. There is a set of tools for orchestrating running the tests within the emulator. Platforms such as arm-android and arm-unknown-linux-gnueabihf are set up to automatically run the tests under emulation on Travis. The following will take a look at how a target's tests are run under emulation. The Docker image for armhf-gnu includes QEMU to emulate the ARM CPU architecture. Included in the Rust tree are the tools remote-test-client and remote-test-server which are programs for sending test programs and libraries to the emulator, and running the tests within the emulator, and reading the results. The Docker image is set up to launch remote-test-server and the build tools use remote-test-client to communicate with the server to coordinate running tests (see src/bootstrap/test.rs ). TODO: What are the steps for manually running tests within an emulator? ./src/ci/docker/run.sh armhf-gnu will do everything, but takes hours to run and doesn't offer much help with interacting within the emulator. Is there any support for emulating other (non-Android) platforms, such as running on an iOS emulator? Is there anything else interesting that can be said here about running tests remotely on real hardware? It's also unclear to me how the wasm or asm.js tests are run.","title":"Testing on emulators","breadcrumbs":"Testing on emulators"},"traits/lowering-to-logic.html#type-checking-generic-functions-beyond-horn-clauses":{"id":"traits/lowering-to-logic.html#type-checking-generic-functions-beyond-horn-clauses","title":"Type-checking generic functions: beyond Horn clauses","body":"In the last section, we used standard Prolog horn-clauses (augmented with Rust's notion of type equality) to type-check some simple Rust functions. But that only works when we are type-checking non-generic functions. If we want to type-check a generic function, it turns out we need a stronger notion of goal than Prolog can be provide. To see what I'm talking about, let's revamp our previous example to make foo generic: fn foo<T: Eq<T>>() { bar::<T>() }\nfn bar<U: Eq<U>>() { } To type-check the body of foo , we need to be able to hold the type T \"abstract\". That is, we need to check that the body of foo is type-safe for all types T , not just for some specific type. We might express this like so: fooTypeChecks :- // for all types T... forall<T> { // ...if we assume that Eq(T, T) is provable... if (Eq(T, T)) { // ...then we can prove that `barWellFormed(T)` holds. barWellFormed(T) } }. This notation I'm using here is the notation I've been using in my prototype implementation; it's similar to standard mathematical notation but a bit Rustified. Anyway, the problem is that standard Horn clauses don't allow universal quantification ( forall ) or implication ( if ) in goals (though many Prolog engines do support them, as an extension). For this reason, we need to accept something called \"first-order hereditary harrop\" (FOHH) clauses -- this long name basically means \"standard Horn clauses with forall and if in the body\". But it's nice to know the proper name, because there is a lot of work describing how to efficiently handle FOHH clauses; see for example Gopalan Nadathur's excellent \"A Proof Procedure for the Logic of Hereditary Harrop Formulas\" in the bibliography . It turns out that supporting FOHH is not really all that hard. And once we are able to do that, we can easily describe the type-checking rule for generic functions like foo in our logic.","breadcrumbs":"Trait solving (new-style) » Type-checking generic functions: beyond Horn clauses"},"compiletest.html#implementing-the-behavior-change":{"breadcrumbs":"The compiler testing framework » Implementing the behavior change","title":"Implementing the behavior change","body":"When a test invokes a particular header command, it is expected that some behavior will change as a result. What behavior, obviously, will depend on the purpose of the header command. In the case of failure-status , the behavior that changes is that compiletest expects the failure code defined by the header command invoked in the test, rather than the default value. Although specific to failure-status (as every header command will have a different implementation in order to invoke behavior change) perhaps it is helpful to see the behavior change implementation of one case, simply as an example. To implement failure-status , the check_correct_failure_status() function found in the TestCx implementation block, located in src/tools/compiletest/src/runtest.rs , was modified as per below: @@ -295,11 +295,14 @@ impl<'test> TestCx<'test> { } fn check_correct_failure_status(&self, proc_res: &ProcRes) {\n- // The value the rust runtime returns on failure\n- const RUST_ERR: i32 = 101;\n- if proc_res.status.code() != Some(RUST_ERR) {\n+ let expected_status = Some(self.props.failure_status);\n+ let received_status = proc_res.status.code();\n+\n+ if expected_status != received_status { self.fatal_proc_rec(\n- &format!(\"failure produced the wrong error: {}\", proc_res.status),\n+ &format!(\"Error: expected failure status ({:?}) but received status {:?}.\",\n+ expected_status,\n+ received_status), proc_res, ); }\n@@ -320,7 +323,6 @@ impl<'test> TestCx<'test> { ); let proc_res = self.exec_compiled_test();\n- if !proc_res.status.success() { self.fatal_proc_rec(\"test run failed!\", &proc_res); }\n@@ -499,7 +501,6 @@ impl<'test> TestCx<'test> { expected, actual );\n- panic!(); } } Note the use of self.props.failure_status to access the header command property. In tests which do not specify the failure status header command, self.props.failure_status will evaluate to the default value of 101 at the time of this writing. But for a test which specifies a header command of, for example, // failure-status: 1 , self.props.failure_status will evaluate to 1, as parse_failure_status() will have overridden the TestProps default value, for that test specifically.","id":"compiletest.html#implementing-the-behavior-change"},"macro-expansion.html#macro-expansion":{"breadcrumbs":"Macro expansion","title":"Macro expansion","id":"macro-expansion.html#macro-expansion","body":"Macro expansion happens during parsing. rustc has two parsers, in fact: the normal Rust parser, and the macro parser. During the parsing phase, the normal Rust parser will set aside the contents of macros and their invocations. Later, before name resolution, macros are expanded using these portions of the code. The macro parser, in turn, may call the normal Rust parser when it needs to bind a metavariable (e.g. $my_expr ) while parsing the contents of a macro invocation. The code for macro expansion is in src/libsyntax/ext/tt/ . This chapter aims to explain how macro expansion works."},"diag.html#lints":{"body":"The compiler linting infrastructure is defined in the rustc::lint module.","id":"diag.html#lints","breadcrumbs":"Lints","title":"Lints"},"mir/index.html#the-mir-mid-level-ir":{"id":"mir/index.html#the-mir-mid-level-ir","breadcrumbs":"The MIR (Mid-level IR)","title":"The MIR (Mid-level IR)","body":"MIR is Rust's Mid-level Intermediate Representation . It is constructed from HIR . MIR was introduced in RFC 1211 . It is a radically simplified form of Rust that is used for certain flow-sensitive safety checks -- notably the borrow checker! -- and also for optimization and code generation. If you'd like a very high-level introduction to MIR, as well as some of the compiler concepts that it relies on (such as control-flow graphs and desugaring), you may enjoy the rust-lang blog post that introduced MIR ."},"how-to-build-and-run.html#create-a-configtoml":{"breadcrumbs":"Create a config.toml","title":"Create a config.toml","body":"To start, copy config.toml.example to config.toml : > cd $RUST_CHECKOUT\n> cp config.toml.example config.toml Then you will want to open up the file and change the following settings (and possibly others, such as llvm.ccache ): [llvm]\n# Enables LLVM assertions, which will check that the LLVM bitcode generated\n# by the compiler is internally consistent. These are particularly helpful\n# if you edit `trans`.\nassertions = true [rust]\n# This enables some assertions, but more importantly it enables the `debug!`\n# logging macros that are essential for debugging rustc.\ndebug-assertions = true # This will make your build more parallel; it costs a bit of runtime\n# performance perhaps (less inlining) but it's worth it.\ncodegen-units = 0 # I always enable full debuginfo, though debuginfo-lines is more important.\ndebuginfo = true # Gives you line numbers for backtraces.\ndebuginfo-lines = true # Using the system allocator (instead of jemalloc) means that tools\n# like valgrind and memcache work better.\nuse-jemalloc = false","id":"how-to-build-and-run.html#create-a-configtoml"},"traits/implied-bounds.html#implied-bounds":{"id":"traits/implied-bounds.html#implied-bounds","breadcrumbs":"Trait solving (new-style) » Lowering to logic » Implied Bounds","body":"to be written Cover: Why the FromEnv setup etc is the way it is Perhaps move some of the material from 'lowering rules' in to here Show various examples where you could go wrong","title":"Implied Bounds"},"traits/chalk-overview.html#parsing":{"id":"traits/chalk-overview.html#parsing","breadcrumbs":"Trait solving (new-style) » Parsing","title":"Parsing","body":"Chalk is designed to be incorporated with the Rust compiler, so the syntax and concepts it deals with heavily borrow from Rust. It is convenient for the sake of testing to be able to run chalk on its own, so chalk includes a parser for a Rust-like syntax. This syntax is orthogonal to the Rust AST and grammar. It is not intended to look exactly like it or support the exact same syntax. The parser takes that syntax and produces an Abstract Syntax Tree (AST) . You can find the complete definition of the AST in the source code. The syntax contains things from Rust that we know and love, for example: traits, impls, and struct definitions. Parsing is often the first \"phase\" of transformation that a program goes through in order to become a format that chalk can understand."},"conventions.html#line-length":{"breadcrumbs":"Line length","id":"conventions.html#line-length","title":"Line length","body":"Lines should be at most 100 characters. It's even better if you can keep things to 80. Ignoring the line length limit. Sometimes -- in particular for tests -- it can be necessary to exempt yourself from this limit. In that case, you can add a comment towards the top of the file (after the copyright notice) like so: // ignore-tidy-linelength"},"tests/adding.html#what-kind-of-test-should-i-add":{"id":"tests/adding.html#what-kind-of-test-should-i-add","body":"It can be difficult to know what kind of test to use. Here are some rough heuristics: Some tests have specialized needs: need to run gdb or lldb? use the debuginfo test suite need to inspect LLVM IR or MIR IR? use the codegen or mir-opt test suites need to run rustdoc? Prefer a rustdoc test need to inspect the resulting binary in some way? Then use run-make For most other things, a ui (or ui-fulldeps ) test is to be preferred: ui tests subsume both run-pass, compile-fail, and parse-fail tests in the case of warnings or errors, ui tests capture the full output, which makes it easier to review but also helps prevent \"hidden\" regressions in the output","breadcrumbs":"The compiler testing framework » What kind of test should I add?","title":"What kind of test should I add?"},"compiletest.html#introduction":{"title":"Introduction","id":"compiletest.html#introduction","breadcrumbs":"The compiler testing framework » Introduction","body":"compiletest is the main test harness of the Rust test suite. It allows test authors to organize large numbers of tests (the Rust compiler has many thousands), efficient test execution (parallel execution is supported), and allows the test author to configure behavior and expected results of both individual and groups of tests. compiletest tests may check test code for success, for failure or in some cases, even failure to compile. Tests are typically organized as a Rust source file with annotations in comments before and/or within the test code, which serve to direct compiletest on if or how to run the test, what behavior to expect, and more. If you are unfamiliar with the compiler testing framework, see this chapter for additional background. The tests themselves are typically (but not always) organized into \"suites\"--for example, run-pass , a folder representing tests that should succeed, run-fail , a folder holding tests that should compile successfully, but return a failure (non-zero status), compile-fail , a folder holding tests that should fail to compile, and many more. The various suites are defined in src/tools/compiletest/src/common.rs in the pub struct Config declaration. And a very good introduction to the different suites of compiler tests along with details about them can be found in Adding new tests ."},"traits/lowering-rules.html#lowering-function-and-constant-declarations":{"title":"Lowering function and constant declarations","id":"traits/lowering-rules.html#lowering-function-and-constant-declarations","breadcrumbs":"Trait solving (new-style) » Lowering function and constant declarations","body":"Chalk didn't model functions and constants, but I would eventually like to treat them exactly like normalization. See the section on function/constant values below for more details."},"mir/passes.html#seeing-how-the-mir-changes-as-the-compiler-executes":{"title":"Seeing how the MIR changes as the compiler executes","body":"-Zdump-mir=F is a handy compiler options that will let you view the MIR for each function at each stage of compilation. -Zdump-mir takes a filter F which allows you to control which functions and which passes you are interesting in. For example: > rustc -Zdump-mir=foo ... This will dump the MIR for any function whose name contains foo ; it will dump the MIR both before and after every pass. Those files will be created in the mir_dump directory. There will likely be quite a lot of them! > cat > foo.rs\nfn main() { println!(\"Hello, world!\");\n}\n^D\n> rustc -Zdump-mir=main foo.rs\n> ls mir_dump/* | wc -l 161 The files have names like rustc.main.000-000.CleanEndRegions.after.mir . These names have a number of parts: rustc.main.000-000.CleanEndRegions.after.mir ---- --- --- --------------- ----- either before or after | | | name of the pass | | index of dump within the pass (usually 0, but some passes dump intermediate states) | index of the pass def-path to the function etc being dumped You can also make more selective filters. For example, main & CleanEndRegions will select for things that reference both main and the pass CleanEndRegions : > rustc -Zdump-mir='main & CleanEndRegions' foo.rs\n> ls mir_dump\nrustc.main.000-000.CleanEndRegions.after.mir\trustc.main.000-000.CleanEndRegions.before.mir Filters can also have | parts to combine multiple sets of & -filters. For example main & CleanEndRegions | main & NoLandingPads will select either main and CleanEndRegions or main and NoLandingPads : > rustc -Zdump-mir='main & CleanEndRegions | main & NoLandingPads' foo.rs\n> ls mir_dump\nrustc.main-promoted[0].002-000.NoLandingPads.after.mir\nrustc.main-promoted[0].002-000.NoLandingPads.before.mir\nrustc.main-promoted[0].002-006.NoLandingPads.after.mir\nrustc.main-promoted[0].002-006.NoLandingPads.before.mir\nrustc.main-promoted[1].002-000.NoLandingPads.after.mir\nrustc.main-promoted[1].002-000.NoLandingPads.before.mir\nrustc.main-promoted[1].002-006.NoLandingPads.after.mir\nrustc.main-promoted[1].002-006.NoLandingPads.before.mir\nrustc.main.000-000.CleanEndRegions.after.mir\nrustc.main.000-000.CleanEndRegions.before.mir\nrustc.main.002-000.NoLandingPads.after.mir\nrustc.main.002-000.NoLandingPads.before.mir\nrustc.main.002-006.NoLandingPads.after.mir\nrustc.main.002-006.NoLandingPads.before.mir (Here, the main-promoted[0] files refer to the MIR for \"promoted constants\" that appeared within the main function.)","breadcrumbs":"The MIR (Mid-level IR) » Seeing how the MIR changes as the compiler executes","id":"mir/passes.html#seeing-how-the-mir-changes-as-the-compiler-executes"},"mir/construction.html#mir-construction":{"id":"mir/construction.html#mir-construction","body":"","title":"MIR construction","breadcrumbs":"The MIR (Mid-level IR) » MIR construction"},"appendix/stupid-stats.html#overview-of-the-compilation-process":{"breadcrumbs":"Overview of the compilation process","title":"Overview of the compilation process","id":"appendix/stupid-stats.html#overview-of-the-compilation-process","body":"Compilation using rustc happens in several phases. We start with parsing, this includes lexing. The output of this phase is an AST (abstract syntax tree). There is a single AST for each crate (indeed, the entire compilation process operates over a single crate). Parsing abstracts away details about individual files which will all have been read in to the AST in this phase. At this stage the AST includes all macro uses, attributes will still be present, and nothing will have been eliminated due to cfg s. The next phase is configuration and macro expansion. This can be thought of as a function over the AST. The unexpanded AST goes in and an expanded AST comes out. Macros and syntax extensions are expanded, and cfg attributes will cause some code to disappear. The resulting AST won't have any macros or macro uses left in. The code for these first two phases is in libsyntax . After this phase, the compiler allocates ids to each node in the AST (technically not every node, but most of them). If we are writing out dependencies, that happens now. The next big phase is analysis. This is the most complex phase and uses the bulk of the code in rustc. This includes name resolution, type checking, borrow checking, type and lifetime inference, trait selection, method selection, linting, and so forth. Most error detection is done in this phase (although parse errors are found during parsing). The 'output' of this phase is a bunch of side tables containing semantic information about the source program. The analysis code is in librustc and a bunch of other crates with the 'librustc_' prefix. Next is translation, this translates the AST (and all those side tables) into LLVM IR (intermediate representation). We do this by calling into the LLVM libraries, rather than actually writing IR directly to a file. The code for this is in librustc_trans . The next phase is running the LLVM backend. This runs LLVM's optimisation passes on the generated IR and then generates machine code. The result is object files. This phase is all done by LLVM, it is not really part of the rust compiler. The interface between LLVM and rustc is in librustc_llvm . Finally, we link the object files into an executable. Again we outsource this to other programs and it's not really part of the rust compiler. The interface is in librustc_back (which also contains some things used primarily during translation). All these phases are coordinated by the driver. To see the exact sequence, look at the compile_input function in librustc_driver . The driver handles all the highest level coordination of compilation - 1. handling command-line arguments 2. maintaining compilation state (primarily in the Session ) 3. calling the appropriate code to run each phase of compilation 4. handles high level coordination of pretty printing and testing. To create a drop-in compiler replacement or a compiler replacement, we leave most of compilation alone and customise the driver using its APIs."},"tests/adding.html#guide-to-the-ui-tests":{"title":"Guide to the UI tests","body":"The UI tests are intended to capture the compiler's complete output, so that we can test all aspects of the presentation. They work by compiling a file (e.g., ui/hello_world/main.rs ), capturing the output, and then applying some normalization (see below). This normalized result is then compared against reference files named ui/hello_world/main.stderr and ui/hello_world/main.stdout . If either of those files doesn't exist, the output must be empty (that is actually the case for this particular test ). If the test run fails, we will print out the current output, but it is also saved in build/<target-triple>/test/ui/hello_world/main.stdout (this path is printed as part of the test failure message), so you can run diff and so forth.","breadcrumbs":"The compiler testing framework » Guide to the UI tests","id":"tests/adding.html#guide-to-the-ui-tests"},"how-to-build-and-run.html#other-xpy-commands":{"id":"how-to-build-and-run.html#other-xpy-commands","body":"Here are a few other useful x.py commands. We'll cover some of them in detail in other sections: Building things: ./x.py clean – clean up the build directory ( rm -rf build works too, but then you have to rebuild LLVM) ./x.py build --stage 1 – builds everything using the stage 1 compiler, not just up to libstd ./x.py build – builds the stage2 compiler Running tests (see the section on running tests for more details): ./x.py test --stage 1 src/libstd – runs the #[test] tests from libstd ./x.py test --stage 1 src/test/run-pass – runs the run-pass test suite","title":"Other x.py commands","breadcrumbs":"Other x.py commands"},"about-this-guide.html#about-this-guide":{"title":"About this guide","id":"about-this-guide.html#about-this-guide","breadcrumbs":"About this guide","body":"This guide is meant to help document how rustc – the Rust compiler – works, as well as to help new contributors get involved in rustc development. It is not meant to replace code documentation – each chapter gives only high-level details – the kinds of things that (ideally) don't change frequently. The guide itself is of course open-source as well, and the sources can be found at the GitHub repository . If you find any mistakes in the guide, please file an issue about it, or even better, open a PR with a correction!"},"tests/intro.html#compiletest-test-suites":{"id":"tests/intro.html#compiletest-test-suites","breadcrumbs":"Compiletest test suites","body":"The compiletest tests are located in the tree in the src/test directory. Immediately within you will see a series of subdirectories (e.g. ui , run-make , and so forth). Each of those directories is called a test suite -- they house a group of tests that are run in a distinct mode. Here is a brief summary of the test suites as of this writing and what they mean. In some cases, the test suites are linked to parts of the manual that give more details. ui -- tests that check the exact stdout/stderr from compilation and/or running the test run-pass -- tests that are expected to compile and execute successfully (no panics) run-pass-valgrind -- tests that ought to run with valgrind run-fail -- tests that are expected to compile but then panic during execution compile-fail -- tests that are expected to fail compilation. parse-fail -- tests that are expected to fail to parse pretty -- tests targeting the Rust \"pretty printer\", which generates valid Rust code from the AST debuginfo -- tests that run in gdb or lldb and query the debug info codegen -- tests that compile and then test the generated LLVM code to make sure that the optimizations we want are taking effect. mir-opt -- tests that check parts of the generated MIR to make sure we are building things correctly or doing the optimizations we expect. incremental -- tests for incremental compilation, checking that when certain modifications are performed, we are able to reuse the results from previous compilations. run-make -- tests that basically just execute a Makefile ; the ultimate in flexibility but quite annoying to write. rustdoc -- tests for rustdoc, making sure that the generated files contain the expected documentation. *-fulldeps -- same as above, but indicates that the test depends on things other than libstd (and hence those things must be built)","title":"Compiletest test suites"},"traits/lowering-to-logic.html#source":{"title":"Source","breadcrumbs":"Trait solving (new-style) » Source","id":"traits/lowering-to-logic.html#source","body":"This page is a lightly adapted version of a blog post by Nicholas Matsakis ."},"miri.html#interpretation":{"breadcrumbs":"Constant evaluation » Interpretation","id":"miri.html#interpretation","title":"Interpretation","body":"Although the main entry point to constant evaluation is the tcx.const_eval query, there are additional functions in librustc_mir/interpret/const_eval.rs that allow accessing the fields of a Value ( ByRef or otherwise). You should never have to access an Allocation directly except for translating it to the compilation target (at the moment just LLVM). Miri starts by creating a virtual stack frame for the current constant that is being evaluated. There's essentially no difference between a constant and a function with no arguments, except that constants do not allow local (named) variables at the time of writing this guide. A stack frame is defined by the Frame type in librustc_mir/interpret/eval_context.rs and contains all the local variables memory ( None at the start of evaluation). Each frame refers to the evaluation of either the root constant or subsequent calls to const fn . The evaluation of another constant simply calls tcx.const_eval , which produces an entirely new and independent stack frame. The frames are just a Vec<Frame> , there's no way to actually refer to a Frame 's memory even if horrible shenigans are done via unsafe code. The only memory that can be referred to are Allocation s. Miri now calls the step method (in librustc_mir/interpret/step.rs ) until it either returns an error or has no further statements to execute. Each statement will now initialize or modify the locals or the virtual memory referred to by a local. This might require evaluating other constants or statics, which just recursively invokes tcx.const_eval ."},"traits/resolution.html#candidate-assembly":{"title":"Candidate assembly","id":"traits/resolution.html#candidate-assembly","body":"Searches for impls/where-clauses/etc that might possibly be used to satisfy the obligation. Each of those is called a candidate. To avoid ambiguity, we want to find exactly one candidate that is definitively applicable. In some cases, we may not know whether an impl/where-clause applies or not – this occurs when the obligation contains unbound inference variables. The subroutines that decide whether a particular impl/where-clause/etc applies to a particular obligation are collectively refered to as the process of matching . At the moment, this amounts to unifying the Self types, but in the future we may also recursively consider some of the nested obligations, in the case of an impl. TODO : what does \"unifying the Self types\" mean? The Self of the obligation with that of an impl? The basic idea for candidate assembly is to do a first pass in which we identify all possible candidates. During this pass, all that we do is try and unify the type parameters. (In particular, we ignore any nested where clauses.) Presuming that this unification succeeds, the impl is added as a candidate. Once this first pass is done, we can examine the set of candidates. If it is a singleton set, then we are done: this is the only impl in scope that could possibly apply. Otherwise, we can winnow down the set of candidates by using where clauses and other conditions. If this reduced set yields a single, unambiguous entry, we're good to go, otherwise the result is considered ambiguous. The basic process: Inferring based on the impls we see This process is easier if we work through some examples. Consider the following trait: trait Convert<Target> { fn convert(&self) -> Target;\n} This trait just has one method. It's about as simple as it gets. It converts from the (implicit) Self type to the Target type. If we wanted to permit conversion between isize and usize , we might implement Convert like so: impl Convert<usize> for isize { ... } // isize -> usize\nimpl Convert<isize> for usize { ... } // usize -> isize Now imagine there is some code like the following: let x: isize = ...;\nlet y = x.convert(); The call to convert will generate a trait reference Convert<$Y> for isize , where $Y is the type variable representing the type of y . Of the two impls we can see, the only one that matches is Convert<usize> for isize . Therefore, we can select this impl, which will cause the type of $Y to be unified to usize . (Note that while assembling candidates, we do the initial unifications in a transaction, so that they don't affect one another.) TODO : The example says we can \"select\" the impl, but this section is talking specifically about candidate assembly. Does this mean we can sometimes skip confirmation? Or is this poor wording? TODO : Is the unification of $Y part of trait resolution or type inference? Or is this not the same type of \"inference variable\" as in type inference? Winnowing: Resolving ambiguities But what happens if there are multiple impls where all the types unify? Consider this example: trait Get { fn get(&self) -> Self;\n} impl<T:Copy> Get for T { fn get(&self) -> T { *self }\n} impl<T:Get> Get for Box<T> { fn get(&self) -> Box<T> { Box::new(get_it(&**self)) }\n} What happens when we invoke get_it(&Box::new(1_u16)) , for example? In this case, the Self type is Box<u16> – that unifies with both impls, because the first applies to all types T , and the second to all Box<T> . In order for this to be unambiguous, the compiler does a winnowing pass that considers where clauses and attempts to remove candidates. In this case, the first impl only applies if Box<u16> : Copy , which doesn't hold. After winnowing, then, we are left with just one candidate, so we can proceed. where clauses Besides an impl, the other major way to resolve an obligation is via a where clause. The selection process is always given a parameter environment which contains a list of where clauses, which are basically obligations that we can assume are satisfiable. We will iterate over that list and check whether our current obligation can be found in that list. If so, it is considered satisfied. More precisely, we want to check whether there is a where-clause obligation that is for the same trait (or some subtrait) and which can match against the obligation. Consider this simple example: trait A1 { fn do_a1(&self);\n}\ntrait A2 : A1 { ... } trait B { fn do_b(&self);\n} fn foo<X:A2+B>(x: X) { x.do_a1(); // (*) x.do_b(); // (#)\n} In the body of foo , clearly we can use methods of A1 , A2 , or B on variable x . The line marked (*) will incur an obligation X: A1 , while the line marked (#) will incur an obligation X: B . Meanwhile, the parameter environment will contain two where-clauses: X : A2 and X : B . For each obligation, then, we search this list of where-clauses. The obligation X: B trivially matches against the where-clause X: B . To resolve an obligation X:A1 , we would note that X:A2 implies that X:A1 .","breadcrumbs":"Candidate assembly"},"mir/regionck.html#mir-based-region-checking-nll":{"title":"MIR-based region checking (NLL)","breadcrumbs":"The MIR (Mid-level IR) » MIR borrowck » MIR-based region checking (NLL)","id":"mir/regionck.html#mir-based-region-checking-nll","body":"The MIR-based region checking code is located in the rustc_mir::borrow_check::nll module . (NLL, of course, stands for \"non-lexical lifetimes\", a term that will hopefully be deprecated once they become the standard kind of lifetime.) The MIR-based region analysis consists of two major functions: replace_regions_in_mir , invoked first, has two jobs: First, it finds the set of regions that appear within the signature of the function (e.g., 'a in fn foo<'a>(&'a u32) { ... } ). These are called the \"universal\" or \"free\" regions -- in particular, they are the regions that appear free in the function body. Second, it replaces all the regions from the function body with fresh inference variables. This is because (presently) those regions are the results of lexical region inference and hence are not of much interest. The intention is that -- eventually -- they will be \"erased regions\" (i.e., no information at all), since we won't be doing lexical region inference at all. compute_regions , invoked second: this is given as argument the results of move analysis. It has the job of computing values for all the inference variabes that replace_regions_in_mir introduced. To do that, it first runs the MIR type checker . This is basically a normal type-checker but specialized to MIR, which is much simpler than full Rust of course. Running the MIR type checker will however create outlives constraints between region variables (e.g., that one variable must outlive another one) to reflect the subtyping relationships that arise. It also adds liveness constraints that arise from where variables are used. More details to come, though the NLL RFC also includes fairly thorough (and hopefully readable) coverage."},"mir/regionck.html#universal-regions":{"breadcrumbs":"The MIR (Mid-level IR) » MIR borrowck » Universal regions","title":"Universal regions","body":"to be written -- explain the UniversalRegions type","id":"mir/regionck.html#universal-regions"},"type-inference.html#creating-an-inference-context":{"title":"Creating an inference context","body":"You create and \"enter\" an inference context by doing something like the following: tcx.infer_ctxt().enter(|infcx| { // Use the inference context `infcx` here.\n}) Each inference context creates a short-lived type arena to store the fresh types and things that it will create, as described in the chapter on the ty module . This arena is created by the enter function and disposed of after it returns. Within the closure, infcx has the type InferCtxt<'cx, 'gcx, 'tcx> for some fresh 'cx and 'tcx – the latter corresponds to the lifetime of this temporary arena, and the 'cx is the lifetime of the InferCtxt itself. (Again, see the ty chapter for more details on this setup.) The tcx.infer_ctxt method actually returns a builder, which means there are some kinds of configuration you can do before the infcx is created. See InferCtxtBuilder for more information.","breadcrumbs":"Creating an inference context","id":"type-inference.html#creating-an-inference-context"},"appendix/stupid-stats.html#compilercalls":{"body":"CompilerCalls is a trait that you implement in your tool. It contains a fairly ad-hoc set of methods to hook in to the process of processing command line arguments and driving the compiler. For details, see the comments in librustc_driver/lib.rs . I'll summarise the methods here. early_callback and late_callback let you call arbitrary code at different points - early is after command line arguments have been parsed, but before anything is done with them; late is pretty much the last thing before compilation starts, i.e., after all processing of command line arguments, etc. is done. Currently, you get to choose whether compilation stops or continues at each point, but you don't get to change anything the driver has done. You can record some info for later, or perform other actions of your own. some_input and no_input give you an opportunity to modify the primary input to the compiler (usually the input is a file containing the top module for a crate, but it could also be a string). You could record the input or perform other actions of your own. Ignore parse_pretty , it is unfortunate and hopefully will get improved. There is a default implementation, so you can pretend it doesn't exist. build_controller returns a CompileController object for more fine-grained control of compilation, it is described next. We might add more options in the future.","title":"CompilerCalls","id":"appendix/stupid-stats.html#compilercalls","breadcrumbs":"CompilerCalls"},"traits/hrtb.html#basic-matching-and-skolemization-leaks":{"id":"traits/hrtb.html#basic-matching-and-skolemization-leaks","body":"Suppose we have a trait Foo : trait Foo<X> { fn foo(&self, x: X) { }\n} Let's say we have a function want_hrtb that wants a type which implements Foo<&'a isize> for any 'a : fn want_hrtb<T>() where T : for<'a> Foo<&'a isize> { ... } Now we have a struct AnyInt that implements Foo<&'a isize> for any 'a : struct AnyInt;\nimpl<'a> Foo<&'a isize> for AnyInt { } And the question is, does AnyInt : for<'a> Foo<&'a isize> ? We want the answer to be yes. The algorithm for figuring it out is closely related to the subtyping for higher-ranked types (which is described here and also in a paper by SPJ . If you wish to understand higher-ranked subtyping, we recommend you read the paper). There are a few parts: TODO : We should define skolemize . Skolemize the obligation. Match the impl against the skolemized obligation. Check for skolemization leaks . So let's work through our example. The first thing we would do is to skolemize the obligation, yielding AnyInt : Foo<&'0 isize> (here '0 represents skolemized region #0). Note that we now have no quantifiers; in terms of the compiler type, this changes from a ty::PolyTraitRef to a TraitRef . We would then create the TraitRef from the impl, using fresh variables for it's bound regions (and thus getting Foo<&'$a isize> , where '$a is the inference variable for 'a ). Next we relate the two trait refs, yielding a graph with the constraint that '0 == '$a . Finally, we check for skolemization \"leaks\" – a leak is basically any attempt to relate a skolemized region to another skolemized region, or to any region that pre-existed the impl match. The leak check is done by searching from the skolemized region to find the set of regions that it is related to in any way. This is called the \"taint\" set. To pass the check, that set must consist solely of itself and region variables from the impl. If the taint set includes any other region, then the match is a failure. In this case, the taint set for '0 is {'0, '$a} , and hence the check will succeed. Let's consider a failure case. Imagine we also have a struct struct StaticInt;\nimpl Foo<&'static isize> for StaticInt; We want the obligation StaticInt : for<'a> Foo<&'a isize> to be considered unsatisfied. The check begins just as before. 'a is skolemized to '0 and the impl trait reference is instantiated to Foo<&'static isize> . When we relate those two, we get a constraint like 'static == '0 . This means that the taint set for '0 is {'0, 'static} , which fails the leak check. TODO : This is because 'static is not a region variable but is in the taint set, right?","title":"Basic matching and skolemization leaks","breadcrumbs":"Trait solving (old-style) » Basic matching and skolemization leaks"},"appendix/background.html#what-is-a-dataflow-analysis":{"title":"What is a dataflow analysis?","id":"appendix/background.html#what-is-a-dataflow-analysis","body":"Static Program Analysis by Anders Møller and Michael I. Schwartzbach is an incredible resource! to be written","breadcrumbs":"What is a dataflow analysis?"},"mir/regionck.html#subtyping-and-skolemization":{"id":"mir/regionck.html#subtyping-and-skolemization","breadcrumbs":"The MIR (Mid-level IR) » MIR borrowck » Subtyping and skolemization","title":"Subtyping and skolemization","body":"When we type-check main , and in particular the call bar(foo) , we are going to wind up with a subtyping relationship like this one: fn(&'static u32) <: for<'a> fn(&'a u32)\n---------------- -------------------\nthe type of `foo` the type `bar` expects We handle this sort of subtyping by taking the variables that are bound in the supertype and skolemizing them: this means that we replace them with universally quantified representatives, written like !1 . We call these regions \"skolemized regions\" -- they represent, basically, \"some unknown region\". Once we've done that replacement, we have the following relation: fn(&'static u32) <: fn(&'!1 u32) The key idea here is that this unknown region '!1 is not related to any other regions. So if we can prove that the subtyping relationship is true for '!1 , then it ought to be true for any region, which is what we wanted. So let's work through what happens next. To check if two functions are subtypes, we check if their arguments have the desired relationship (fn arguments are contravariant , so we swap the left and right here): &'!1 u32 <: &'static u32 According to the basic subtyping rules for a reference, this will be true if '!1: 'static . That is -- if \"some unknown region !1 \" lives outlives 'static . Now, this might be true -- after all, '!1 could be 'static -- but we don't know that it's true. So this should yield up an error (eventually)."},"incremental-compilation.html#footnotes":{"id":"incremental-compilation.html#footnotes","breadcrumbs":"Queries: demand-driven compilation » Footnotes","title":"Footnotes","body":"I have long wanted to rename it to the Salsa algorithm, but it never caught on. -@nikomatsakis"},"miri.html#allocations":{"id":"miri.html#allocations","breadcrumbs":"Constant evaluation » Allocations","body":"A miri allocation is either a byte sequence of the memory or an Instance in the case of function pointers. Byte sequences can additionally contain relocations that mark a group of bytes as a pointer to another allocation. The actual bytes at the relocation refer to the offset inside the other allocation. These allocations exist so that references and raw pointers have something to point to. There is no global linear heap in which things are allocated, but each allocation (be it for a local variable, a static or a (future) heap allocation) gets its own little memory with exactly the required size. So if you have a pointer to an allocation for a local variable a , there is no possible (no matter how unsafe) operation that you can do that would ever change said pointer to a pointer to b .","title":"Allocations"},"traits/lowering-module.html#the-lowering-module-in-rustc":{"id":"traits/lowering-module.html#the-lowering-module-in-rustc","title":"The lowering module in rustc","breadcrumbs":"Trait solving (new-style) » Lowering rules » The lowering module in rustc","body":"The program clauses described in the lowering rules section are actually created in the rustc_traits::lowering module."},"type-inference.html#inference-variables":{"breadcrumbs":"Inference variables","id":"type-inference.html#inference-variables","title":"Inference variables","body":"The main purpose of the inference context is to house a bunch of inference variables – these represent types or regions whose precise value is not yet known, but will be uncovered as we perform type-checking. If you're familiar with the basic ideas of unification from H-M type systems, or logic languages like Prolog, this is the same concept. If you're not, you might want to read a tutorial on how H-M type inference works, or perhaps this blog post on unification in the Chalk project . All told, the inference context stores four kinds of inference variables as of this writing: Type variables, which come in three varieties: General type variables (the most common). These can be unified with any type. Integral type variables, which can only be unified with an integral type, and arise from an integer literal expression like 22 . Float type variables, which can only be unified with a float type, and arise from a float literal expression like 22.0 . Region variables, which represent lifetimes, and arise all over the place. All the type variables work in much the same way: you can create a new type variable, and what you get is Ty<'tcx> representing an unresolved type ?T . Then later you can apply the various operations that the inferencer supports, such as equality or subtyping, and it will possibly instantiate (or bind ) that ?T to a specific value as a result. The region variables work somewhat differently, and are described below in a separate section."},"traits/canonical-queries.html#a-trait-query-in-rustc":{"body":"The trait queries in rustc work somewhat differently. Instead of trying to enumerate all possible answers for you, they are looking for an unambiguous answer. In particular, when they tell you the value for a type variable, that means that this is the only possible instantiation that you could use, given the current set of impls and where-clauses, that would be provable. (Internally within the solver, though, they can potentially enumerate all possible answers. See the description of the SLG solver for details.) The response to a trait query in rustc is typically a Result<QueryResult<T>, NoSolution> (where the T will vary a bit depending on the query itself). The Err(NoSolution) case indicates that the query was false and had no answers (e.g., Box<i32>: Copy ). Otherwise, the QueryResult gives back information about the possible answer(s) we did find. It consists of four parts: Certainty: tells you how sure we are of this answer. It can have two values: Proven means that the result is known to be true. This might be the result for trying to prove Vec<i32>: Clone , say, or Rc<?T>: Clone . Ambiguous means that there were things we could not yet prove to be either true or false, typically because more type information was needed. (We'll see an example shortly.) This might be the result for trying to prove Vec<?T>: Clone . Var values: Values for each of the unbound inference variables (like ?T ) that appeared in your original query. (Remember that in Prolog, we had to infer these.) As we'll see in the example below, we can get back var values even for Ambiguous cases. Region constraints: these are relations that must hold between the lifetimes that you supplied as inputs. We'll ignore these here, but see the section on handling regions in traits for more details. Value: The query result also comes with a value of type T . For some specialized queries -- like normalizing associated types -- this is used to carry back an extra result, but it's often just () .","id":"traits/canonical-queries.html#a-trait-query-in-rustc","breadcrumbs":"Trait solving (new-style) » A trait query in rustc","title":"A trait query in rustc"},"tests/intro.html#testing-infrastructure":{"breadcrumbs":"Testing infrastructure","id":"tests/intro.html#testing-infrastructure","title":"Testing infrastructure","body":"When a Pull Request is opened on Github, Travis will automatically launch a build that will run all tests on a single configuration (x86-64 linux). In essence, it runs ./x.py test after building. The integration bot bors is used for coordinating merges to the master branch. When a PR is approved, it goes into a queue where merges are tested one at a time on a wide set of platforms using Travis and Appveyor (currently over 50 different configurations). Most platforms only run the build steps, some run a restricted set of tests, only a subset run the full suite of tests (see Rust's platform tiers )."},"tests/adding.html#other-header-commands":{"body":"Here is a list of other header commands. This list is not exhaustive. Header commands can generally be found by browsing the TestProps structure found in header.rs from the compiletest source. run-rustfix for UI tests, indicates that the test produces structured suggestions, which are then applied and the final source is stored in a .fixed file and compiled again. The final compilation is required to succeed. min-{gdb,lldb}-version min-llvm-version compile-pass for UI tests, indicates that the test is supposed to compile, as opposed to the default where the test is supposed to error out. compile-flags passes extra command-line args to the compiler, e.g. compile-flags -g which forces debuginfo to be enabled. should-fail indicates that the test should fail; used for \"meta testing\", where we test the compiletest program itself to check that it will generate errors in appropriate scenarios. This header is ignored for pretty-printer tests. gate-test-X where X is a feature marks the test as \"gate test\" for feature X. Such tests are supposed to ensure that the compiler errors when usage of a gated feature is attempted without the proper #![feature(X)] tag. Each unstable lang feature is required to have a gate test.","title":"Other Header Commands","id":"tests/adding.html#other-header-commands","breadcrumbs":"The compiler testing framework » Other Header Commands"},"high-level-overview.html#crate-structure":{"title":"Crate structure","breadcrumbs":"Crate structure","body":"The main Rust repository consists of a src directory, under which there live many crates. These crates contain the sources for the standard library and the compiler. This document, of course, focuses on the latter. Rustc consists of a number of crates, including syntax , rustc , rustc_back , rustc_trans , rustc_driver , and many more. The source for each crate can be found in a directory like src/libXXX , where XXX is the crate name. (N.B. The names and divisions of these crates are not set in stone and may change over time. For the time being, we tend towards a finer-grained division to help with compilation time, though as incremental compilation improves, that may change.) The dependency structure of these crates is roughly a diamond: rustc_driver / | \\ / | \\ / | \\ / v \\\nrustc_trans rustc_borrowck ... rustc_metadata \\ | / \\ | / \\ | / \\ v / rustc | v syntax / \\ / \\ syntax_pos syntax_ext The rustc_driver crate, at the top of this lattice, is effectively the \"main\" function for the rust compiler. It doesn't have much \"real code\", but instead ties together all of the code defined in the other crates and defines the overall flow of execution. (As we transition more and more to the query model , however, the \"flow\" of compilation is becoming less centrally defined.) At the other extreme, the rustc crate defines the common and pervasive data structures that all the rest of the compiler uses (e.g. how to represent types, traits, and the program itself). It also contains some amount of the compiler itself, although that is relatively limited. Finally, all the crates in the bulge in the middle define the bulk of the compiler – they all depend on rustc , so that they can make use of the various types defined there, and they export public routines that rustc_driver will invoke as needed (more and more, what these crates export are \"query definitions\", but those are covered later on). Below rustc lie various crates that make up the parser and error reporting mechanism. For historical reasons, these crates do not have the rustc_ prefix, but they are really just as much an internal part of the compiler and not intended to be stable (though they do wind up getting used by some crates in the wild; a practice we hope to gradually phase out). Each crate has a README.md file that describes, at a high-level, what it contains, and tries to give some kind of explanation (some better than others).","id":"high-level-overview.html#crate-structure"},"traits/goals-and-clauses.html#goals-and-clauses-meta-structure":{"breadcrumbs":"Trait solving (new-style) » Lowering to logic » Goals and clauses meta structure","title":"Goals and clauses meta structure","id":"traits/goals-and-clauses.html#goals-and-clauses-meta-structure","body":"In Rust's solver, goals and clauses have the following forms (note that the two definitions reference one another): Goal = DomainGoal // defined in the section below | Goal && Goal | Goal || Goal | exists<K> { Goal } // existential quantification | forall<K> { Goal } // universal quantification | if (Clause) { Goal } // implication | true // something that's trivially true | ambiguous // something that's never provable Clause = DomainGoal | Clause :- Goal // if can prove Goal, then Clause is true | Clause && Clause | forall<K> { Clause } K = <type> // a \"kind\" | <lifetime> The proof procedure for these sorts of goals is actually quite straightforward. Essentially, it's a form of depth-first search. The paper \"A Proof Procedure for the Logic of Hereditary Harrop Formulas\" gives the details."},"mir/regionck.html#another-example":{"breadcrumbs":"The MIR (Mid-level IR) » MIR borrowck » Another example","id":"mir/regionck.html#another-example","title":"Another example","body":"What about this subtyping relationship? for<'a> fn(&'a u32, &'a u32) <:\nfor<'b, 'c> fn(&'b u32, &'c u32) Here we would skolemize the supertype, as before, yielding: for<'a> fn(&'a u32, &'a u32) <:\nfn(&'!1 u32, &'!2 u32) then we instantiate the variable on the left-hand side with an existential in universe U2, yielding the following ( ?n is a notation for an existential variable): fn(&'?3 u32, &'?3 u32) <:\nfn(&'!1 u32, &'!2 u32) Then we break this down further: &'!1 u32 <: &'?3 u32\n&'!2 u32 <: &'?3 u32 and even further, yield up our region constraints: '!1: '?3\n'!2: '?3 Note that, in this case, both '!1 and '!2 have to outlive the variable '?3 , but the variable '?3 is not forced to outlive anything else. Therefore, it simply starts and ends as the empty set of elements, and hence the type-check succeeds here. (This should surprise you a little. It surprised me when I first realized it. We are saying that if we are a fn that needs both of its arguments to have the same region , we can accept being called with arguments with two distinct regions . That seems intuitively unsound. But in fact, it's fine, as I tried to explain in this issue on the Rust issue tracker long ago. The reason is that even if we get called with arguments of two distinct lifetimes, those two lifetimes have some intersection (the call itself), and that intersection can be our value of 'a that we use as the common lifetime of our arguments. -nmatsakis)"},"appendix/glossary.html#appendix-c-glossary":{"breadcrumbs":"Appendix C: Glossary","id":"appendix/glossary.html#appendix-c-glossary","title":"Appendix C: Glossary","body":"The compiler uses a number of...idiosyncratic abbreviations and things. This glossary attempts to list them and give you a few pointers for understanding them better. Term Meaning AST the abstract syntax tree produced by the syntax crate; reflects user syntax very closely. binder a \"binder\" is a place where a variable or type is declared; for example, the <T> is a binder for the generic type parameter T in fn foo<T>(..) , and | a | ... is a binder for the parameter a . See the background chapter for more bound variable a \"bound variable\" is one that is declared within an expression/term. For example, the variable a is bound within the closure expession | a | a * 2 . See the background chapter for more codegen unit when we produce LLVM IR, we group the Rust code into a number of codegen units. Each of these units is processed by LLVM independently from one another, enabling parallelism. They are also the unit of incremental re-use. completeness completeness is a technical term in type theory. Completeness means that every type-safe program also type-checks. Having both soundness and completeness is very hard, and usually soundness is more important. (see \"soundness\"). control-flow graph a representation of the control-flow of a program; see the background chapter for more cx we tend to use \"cx\" as an abbrevation for context. See also tcx , infcx , etc. DAG a directed acyclic graph is used during compilation to keep track of dependencies between queries. ( see more ) data-flow analysis a static analysis that figures out what properties are true at each point in the control-flow of a program; see the background chapter for more DefId an index identifying a definition (see librustc/hir/def_id.rs ). Uniquely identifies a DefPath . Double pointer a pointer with additional metadata. See \"fat pointer\" for more. Fat pointer a two word value carrying the address of some value, along with some further information necessary to put the value to use. Rust includes two kinds of \"fat pointers\": references to slices, and trait objects. A reference to a slice carries the starting address of the slice and its length. A trait object carries a value's address and a pointer to the trait's implementation appropriate to that value. \"Fat pointers\" are also known as \"wide pointers\", and \"double pointers\". free variable a \"free variable\" is one that is not bound within an expression or term; see the background chapter for more 'gcx the lifetime of the global arena ( see more ) generics the set of generic type parameters defined on a type or item HIR the High-level IR, created by lowering and desugaring the AST ( see more ) HirId identifies a particular node in the HIR by combining a def-id with an \"intra-definition offset\". HIR Map The HIR map, accessible via tcx.hir, allows you to quickly navigate the HIR and convert between various forms of identifiers. ICE internal compiler error. When the compiler crashes. ICH incremental compilation hash. ICHs are used as fingerprints for things such as HIR and crate metadata, to check if changes have been made. This is useful in incremental compilation to see if part of a crate has changed and should be recompiled. inference variable when doing type or region inference, an \"inference variable\" is a kind of special type/region that represents what you are trying to infer. Think of X in algebra. For example, if we are trying to infer the type of a variable in a program, we create an inference variable to represent that unknown type. infcx the inference context (see librustc/infer ) IR Intermediate Representation. A general term in compilers. During compilation, the code is transformed from raw source (ASCII text) to various IRs. In Rust, these are primarily HIR, MIR, and LLVM IR. Each IR is well-suited for some set of computations. For example, MIR is well-suited for the borrow checker, and LLVM IR is well-suited for codegen because LLVM accepts it. local crate the crate currently being compiled. LTO Link-Time Optimizations. A set of optimizations offered by LLVM that occur just before the final binary is linked. These include optmizations like removing functions that are never used in the final program, for example. ThinLTO is a variant of LTO that aims to be a bit more scalable and efficient, but possibly sacrifices some optimizations. You may also read issues in the Rust repo about \"FatLTO\", which is the loving nickname given to non-Thin LTO. LLVM documentation: here and here LLVM (actually not an acronym :P) an open-source compiler backend. It accepts LLVM IR and outputs native binaries. Various languages (e.g. Rust) can then implement a compiler front-end that output LLVM IR and use LLVM to compile to all the platforms LLVM supports. MIR the Mid-level IR that is created after type-checking for use by borrowck and trans ( see more ) miri an interpreter for MIR used for constant evaluation ( see more ) normalize a general term for converting to a more canonical form, but in the case of rustc typically refers to associated type normalization newtype a \"newtype\" is a wrapper around some other type (e.g., struct Foo(T) is a \"newtype\" for T ). This is commonly used in Rust to give a stronger type for indices. NLL non-lexical lifetimes , an extension to Rust's borrowing system to make it be based on the control-flow graph. node-id or NodeId an index identifying a particular node in the AST or HIR; gradually being phased out and replaced with HirId . obligation something that must be proven by the trait system ( see more ) projection a general term for a \"relative path\", e.g. x.f is a \"field projection\", and T::Item is an \"associated type projection\" promoted constants constants extracted from a function and lifted to static scope; see this section for more details. provider the function that executes a query ( see more ) quantified in math or logic, existential and universal quantification are used to ask questions like \"is there any type T for which is true?\" or \"is this true for all types T?\"; see the background chapter for more query perhaps some sub-computation during compilation ( see more ) region another term for \"lifetime\" often used in the literature and in the borrow checker. sess the compiler session, which stores global data used throughout compilation side tables because the AST and HIR are immutable once created, we often carry extra information about them in the form of hashtables, indexed by the id of a particular node. sigil like a keyword but composed entirely of non-alphanumeric tokens. For example, & is a sigil for references. skolemization a way of handling subtyping around \"for-all\" types (e.g., for<'a> fn(&'a u32) ) as well as solving higher-ranked trait bounds (e.g., for<'a> T: Trait<'a> ). See the chapter on skolemization and universes for more details. soundness soundness is a technical term in type theory. Roughly, if a type system is sound, then if a program type-checks, it is type-safe; i.e. I can never (in safe rust) force a value into a variable of the wrong type. (see \"completeness\"). span a location in the user's source code, used for error reporting primarily. These are like a file-name/line-number/column tuple on steroids: they carry a start/end point, and also track macro expansions and compiler desugaring. All while being packed into a few bytes (really, it's an index into a table). See the Span datatype for more. substs the substitutions for a given generic type or item (e.g. the i32 , u32 in HashMap<i32, u32> ) tcx the \"typing context\", main data structure of the compiler ( see more ) 'tcx the lifetime of the currently active inference context ( see more ) trait reference the name of a trait along with a suitable set of input type/lifetimes ( see more ) token the smallest unit of parsing. Tokens are produced after lexing ( see more ). TLS Thread-Local Storage. Variables may be defined so that each thread has its own copy (rather than all threads sharing the variable). This has some interactions with LLVM. Not all platforms support TLS. trans the code to translate MIR into LLVM IR. trait reference a trait and values for its type parameters ( see more ). ty the internal representation of a type ( see more ). UFCS Universal Function Call Syntax. An unambiguous syntax for calling a method ( see more ). variance variance determines how changes to a generic type/lifetime parameter affect subtyping; for example, if T is a subtype of U , then Vec<T> is a subtype Vec<U> because Vec is covariant in its generic parameter. See the background chapter for a more general explanation. See the variance chapter for an explanation of how type checking handles variance. Wide pointer a pointer with additional metadata. See \"fat pointer\" for more."},"traits/lowering-rules.html#lowering-traits":{"id":"traits/lowering-rules.html#lowering-traits","body":"Given a trait definition trait Trait<P1..Pn> // P0 == Self\nwhere WC\n{ // trait items\n} we will produce a number of declarations. This section is focused on the program clauses for the trait header (i.e., the stuff outside the {} ); the section on trait items covers the stuff inside the {} .","title":"Lowering traits","breadcrumbs":"Trait solving (new-style) » Lowering traits"},"mir/borrowck.html#mir-borrow-check":{"title":"MIR borrow check","body":"The borrow check is Rust's \"secret sauce\" -- it is tasked with enforcing a number of properties: That all variables are initialized before they are used. That you can't move the same value twice. That you can't move a value while it is borrowed. That you can't access a place while it is mutably borrowed (except through the reference). That you can't mutate a place while it is shared borrowed. etc At the time of this writing, the code is in a state of transition. The \"main\" borrow checker still works by processing the HIR , but that is being phased out in favor of the MIR-based borrow checker. Doing borrow checking on MIR has two key advantages: The MIR is far less complex than the HIR; the radical desugaring helps prevent bugs in the borrow checker. (If you're curious, you can see a list of bugs that the MIR-based borrow checker fixes here .) Even more importantly, using the MIR enables \"non-lexical lifetimes\" , which are regions derived from the control-flow graph.","breadcrumbs":"The MIR (Mid-level IR) » MIR borrow check","id":"mir/borrowck.html#mir-borrow-check"},"traits/caching.html#caching-and-subtle-considerations-therewith":{"id":"traits/caching.html#caching-and-subtle-considerations-therewith","body":"In general, we attempt to cache the results of trait selection. This is a somewhat complex process. Part of the reason for this is that we want to be able to cache results even when all the types in the trait reference are not fully known. In that case, it may happen that the trait selection process is also influencing type variables, so we have to be able to not only cache the result of the selection process, but replay its effects on the type variables.","breadcrumbs":"Trait solving (old-style) » Caching and subtle considerations therewith","title":"Caching and subtle considerations therewith"},"tests/adding.html#ignoring-tests":{"breadcrumbs":"The compiler testing framework » Ignoring tests","title":"Ignoring tests","id":"tests/adding.html#ignoring-tests","body":"These are used to ignore the test in some situations, which means the test won't be compiled or run. ignore-X where X is a target detail or stage will ignore the test accordingly (see below) only-X is like ignore-X , but will only run the test on that target or stage ignore-pretty will not compile the pretty-printed test (this is done to test the pretty-printer, but might not always work) ignore-test always ignores the test ignore-lldb and ignore-gdb will skip a debuginfo test on that debugger. Some examples of X in ignore-X : Architecture: aarch64 , arm , asmjs , mips , wasm32 , x86_64 , x86 , ... OS: android , emscripten , freebsd , ios , linux , macos , windows , ... Environment (fourth word of the target triple): gnu , msvc , musl . Pointer width: 32bit , 64bit . Stage: stage0 , stage1 , stage2 ."},"variance.html#addendum-variance-on-traits":{"id":"variance.html#addendum-variance-on-traits","title":"Addendum: Variance on traits","body":"As mentioned above, we used to permit variance on traits. This was computed based on the appearance of trait type parameters in method signatures and was used to represent the compatibility of vtables in trait objects (and also \"virtual\" vtables or dictionary in trait bounds). One complication was that variance for associated types is less obvious, since they can be projected out and put to myriad uses, so it's not clear when it is safe to allow X<A>::Bar to vary (or indeed just what that means). Moreover (as covered below) all inputs on any trait with an associated type had to be invariant, limiting the applicability. Finally, the annotations ( MarkerTrait , PhantomFn ) needed to ensure that all trait type parameters had a variance were confusing and annoying for little benefit. Just for historical reference, I am going to preserve some text indicating how one could interpret variance and trait matching.","breadcrumbs":"Type checking » Addendum: Variance on traits"},"variance.html#variance-of-type-and-lifetime-parameters":{"id":"variance.html#variance-of-type-and-lifetime-parameters","title":"Variance of type and lifetime parameters","breadcrumbs":"Type checking » Variance of type and lifetime parameters","body":"For a more general background on variance, see the background appendix. During type checking we must infer the variance of type and lifetime parameters. The algorithm is taken from Section 4 of the paper \"Taming the Wildcards: Combining Definition- and Use-Site Variance\" published in PLDI'11 and written by Altidor et al., and hereafter referred to as The Paper. This inference is explicitly designed not to consider the uses of types within code. To determine the variance of type parameters defined on type X , we only consider the definition of the type X and the definitions of any types it references. We only infer variance for type parameters found on data types like structs and enums. In these cases, there is a fairly straightforward explanation for what variance means. The variance of the type or lifetime parameters defines whether T<A> is a subtype of T<B> (resp. T<'a> and T<'b> ) based on the relationship of A and B (resp. 'a and 'b ). We do not infer variance for type parameters found on traits, functions, or impls. Variance on trait parameters can indeed make sense (and we used to compute it) but it is actually rather subtle in meaning and not that useful in practice, so we removed it. See the addendum for some details. Variances on function/impl parameters, on the other hand, doesn't make sense because these parameters are instantiated and then forgotten, they don't persist in types or compiled byproducts. Notation We use the notation of The Paper throughout this chapter: + is covariance . - is contravariance . * is bivariance . o is invariance ."},"traits/resolution.html#major-concepts":{"body":"Trait resolution is the process of pairing up an impl with each reference to a trait. So, for example, if there is a generic function like: fn clone_slice<T:Clone>(x: &[T]) -> Vec<T> { ... } and then a call to that function: let v: Vec<isize> = clone_slice(&[1, 2, 3]) it is the job of trait resolution to figure out whether there exists an impl of (in this case) isize : Clone . Note that in some cases, like generic functions, we may not be able to find a specific impl, but we can figure out that the caller must provide an impl. For example, consider the body of clone_slice : fn clone_slice<T:Clone>(x: &[T]) -> Vec<T> { let mut v = Vec::new(); for e in &x { v.push((*e).clone()); // (*) }\n} The line marked (*) is only legal if T (the type of *e ) implements the Clone trait. Naturally, since we don't know what T is, we can't find the specific impl; but based on the bound T:Clone , we can say that there exists an impl which the caller must provide. We use the term obligation to refer to a trait reference in need of an impl. Basically, the trait resolution system resolves an obligation by proving that an appropriate impl does exist. During type checking, we do not store the results of trait selection. We simply wish to verify that trait selection will succeed. Then later, at trans time, when we have all concrete types available, we can repeat the trait selection to choose an actual implementation, which will then be generated in the output binary.","id":"traits/resolution.html#major-concepts","breadcrumbs":"Major concepts","title":"Major concepts"},"method-lookup.html#the-probe-phase":{"breadcrumbs":"Type checking » The Probe phase","id":"method-lookup.html#the-probe-phase","title":"The Probe phase","body":""}},"docInfo":{"traits/lowering-to-logic.html#type-checking-generic-functions-beyond-horn-clauses":{"title":7,"body":181,"breadcrumbs":11},"traits/resolution.html#confirmation":{"body":72,"breadcrumbs":1,"title":1},"traits/lowering-rules.html#lowering-rules":{"title":2,"breadcrumbs":6,"body":18},"tests/running.html#running-an-individual-test":{"title":3,"body":82,"breadcrumbs":6},"tests/adding.html#normalization":{"body":149,"title":1,"breadcrumbs":4},"tests/adding.html#header-commands-configuring-rustc":{"breadcrumbs":7,"body":61,"title":4},"rustdoc.html#cheat-sheet":{"title":2,"body":140,"breadcrumbs":4},"mir/regionck.html#back-to-our-example":{"body":114,"breadcrumbs":8,"title":2},"traits/canonical-queries.html#a-trait-query-in-rustc":{"body":173,"breadcrumbs":7,"title":3},"query.html#invoking-queries":{"title":2,"body":17,"breadcrumbs":2},"type-inference.html#snapshots":{"breadcrumbs":1,"body":73,"title":1},"diag.html#emitting-diagnostics":{"breadcrumbs":2,"body":14,"title":2},"compiler-debugging.html#getting-logging-output":{"breadcrumbs":3,"body":210,"title":3},"traits/lowering-rules.html#lowering-function-and-constant-declarations":{"breadcrumbs":8,"body":16,"title":4},"appendix/background.html#what-is-universally-quantified-what-about-existentially-quantified":{"breadcrumbs":4,"body":1,"title":4},"appendix/background.html#what-is-co--and-contra-variance":{"breadcrumbs":3,"title":3,"body":16},"traits/resolution.html#selection-during-translation":{"title":3,"breadcrumbs":3,"body":120},"traits/associated-types.html#integration-with-unification":{"title":2,"breadcrumbs":8,"body":109},"mir/regionck.html#mir-based-region-checking-nll":{"breadcrumbs":11,"body":155,"title":5},"traits/chalk-overview.html#rules":{"title":1,"body":22,"breadcrumbs":5},"mir/regionck.html#the-mir-type-check":{"breadcrumbs":9,"body":0,"title":3},"traits/lowering-to-logic.html#source":{"body":8,"breadcrumbs":5,"title":1},"miri.html#datastructures":{"body":52,"title":1,"breadcrumbs":3},"type-inference.html#type-inference":{"title":2,"body":52,"breadcrumbs":2},"diag.html#span":{"body":37,"title":1,"breadcrumbs":1},"rustdoc.html#dotting-is-and-crossing-ts":{"breadcrumbs":6,"title":4,"body":101},"mir/regionck.html#representing-the-values-of-a-region-variable":{"title":4,"breadcrumbs":10,"body":98},"compiler-debugging.html#logging-etiquette":{"body":32,"breadcrumbs":2,"title":2},"appendix/glossary.html#appendix-c-glossary":{"breadcrumbs":3,"title":3,"body":902},"traits/canonical-queries.html#canonical-queries":{"body":54,"breadcrumbs":6,"title":2},"how-to-build-and-run.html#running-xpy-and-building-a-stage1-compiler":{"title":5,"body":252,"breadcrumbs":5},"tests/intro.html#testing-on-emulators":{"breadcrumbs":2,"body":136,"title":2},"macro-expansion.html#hygiene":{"breadcrumbs":1,"body":1,"title":1},"hir.html#identifiers-in-the-hir":{"body":139,"breadcrumbs":2,"title":2},"high-level-overview.html#high-level-overview-of-the-compiler-source":{"breadcrumbs":5,"title":5,"body":0},"type-inference.html#region-constraints":{"body":68,"title":2,"breadcrumbs":2},"query.html#adding-a-new-kind-of-query":{"title":4,"body":344,"breadcrumbs":4},"tests/adding.html#error-annotations":{"breadcrumbs":5,"title":2,"body":55},"traits/lowering-rules.html#function-and-constant-values":{"title":3,"body":25,"breadcrumbs":7},"traits/index.html#trait-solving-new-style":{"title":4,"breadcrumbs":4,"body":137},"traits/wf.html#well-formedness-checking":{"breadcrumbs":7,"title":3,"body":31},"type-checking.html#type-collection":{"body":116,"breadcrumbs":2,"title":2},"incrcomp-debugging.html#debugging-the-dependency-graph":{"title":3,"body":0,"breadcrumbs":7},"traits/chalk-overview.html#resources":{"title":1,"breadcrumbs":5,"body":10},"traits/hrtb.html#higher-ranked-trait-obligations":{"breadcrumbs":8,"title":4,"body":130},"traits/lowering-rules.html#lowering-where-clauses":{"body":59,"breadcrumbs":6,"title":2},"hir.html#out-of-band-storage-and-the--crate--type":{"breadcrumbs":5,"body":152,"title":5},"conventions.html#line-length":{"title":2,"body":31,"breadcrumbs":2},"mir/regionck.html#universes-and-skolemized-region-elements":{"breadcrumbs":10,"title":4,"body":73},"name-resolution.html#namespaces":{"title":1,"body":70,"breadcrumbs":1},"traits/slg.html#the-slg-solver":{"body":5,"breadcrumbs":6,"title":2},"variance.html#addendum-variance-on-traits":{"body":80,"breadcrumbs":5,"title":3},"diag.html#declaring-a-lint":{"body":141,"title":2,"breadcrumbs":2},"traits/goals-and-clauses.html#goals-and-clauses-meta-structure":{"body":80,"title":4,"breadcrumbs":10},"traits/regions.html#region-constraints":{"body":1,"breadcrumbs":8,"title":2},"incrcomp-debugging.html#testing-the-dependency-graph":{"breadcrumbs":7,"body":72,"title":3},"traits/resolution.html#major-concepts":{"title":2,"body":130,"breadcrumbs":2},"traits/associated-types.html#equality-and-associated-types":{"body":26,"breadcrumbs":9,"title":3},"miri.html#miri":{"body":242,"breadcrumbs":3,"title":1},"type-checking.html#type-checking":{"body":19,"title":2,"breadcrumbs":2},"mir/visitor.html#traversal":{"title":1,"body":20,"breadcrumbs":5},"compiletest.html#introduction":{"breadcrumbs":4,"body":130,"title":1},"traits/lowering-rules.html#notation":{"body":38,"breadcrumbs":5,"title":1},"const-eval.html#constant-evaluation":{"body":149,"title":2,"breadcrumbs":2},"mir/index.html#the-mir-mid-level-ir":{"breadcrumbs":4,"body":50,"title":4},"mir/regionck.html#what-is-a-universe":{"body":363,"title":1,"breadcrumbs":7},"mir/regionck.html#causal-tracking":{"breadcrumbs":8,"title":2,"body":8},"variance.html#dependency-graph-management":{"breadcrumbs":5,"body":73,"title":3},"compiler-debugging.html#getting-a-backtrace":{"breadcrumbs":2,"body":101,"title":2},"tests/adding.html#revisions":{"title":1,"breadcrumbs":4,"body":121},"traits/lowering-module.html#unit-tests":{"body":96,"title":2,"breadcrumbs":8},"ty.html#beyond-types-other-kinds-of-arena-allocated-data-structures":{"breadcrumbs":7,"body":67,"title":7},"tests/intro.html#crater":{"breadcrumbs":1,"title":1,"body":1},"traits/canonicalization.html#canonicalizing-the-query-result":{"title":3,"body":153,"breadcrumbs":9},"traits/chalk-overview.html#well-formedness-checks":{"title":3,"body":26,"breadcrumbs":7},"compiletest.html#compiletest":{"title":1,"body":0,"breadcrumbs":4},"tests/intro.html#compiletest-test-suites":{"breadcrumbs":3,"title":3,"body":180},"traits/associated-types.html#skolemized-associated-types":{"body":79,"title":3,"breadcrumbs":9},"appendix/stupid-stats.html#appendix-a-a-tutorial-on-creating-a-drop-in-replacement-for-rustc":{"title":6,"body":210,"breadcrumbs":6},"conventions.html#using-crates-from-cratesio":{"title":3,"body":20,"breadcrumbs":3},"conventions.html#use-todo-comments-for-things-you-dont-want-to-forget":{"title":7,"breadcrumbs":7,"body":49},"compiler-debugging.html#formatting-graphviz-output-dot-files":{"body":41,"breadcrumbs":5,"title":5},"traits/lowering-rules.html#lowering-traits":{"title":2,"breadcrumbs":6,"body":28},"rustdoc.html#from-soup-to-nuts":{"title":2,"body":111,"breadcrumbs":4},"tests/adding.html#editing-and-updating-the-reference-files":{"title":4,"body":39,"breadcrumbs":7},"query.html#queries-demand-driven-compilation":{"body":158,"title":4,"breadcrumbs":4},"method-lookup.html#method-lookup":{"breadcrumbs":4,"title":2,"body":120},"variance.html#the-algorithm":{"body":175,"breadcrumbs":3,"title":1},"rustdoc.html#from-crate-to-clean":{"breadcrumbs":4,"title":2,"body":187},"mir/borrowck.html#major-phases-of-the-borrow-checker":{"title":4,"body":117,"breadcrumbs":8},"traits/resolution.html#selection":{"body":119,"title":1,"breadcrumbs":1},"traits/implied-bounds.html#implied-bounds":{"body":17,"breadcrumbs":8,"title":2},"ty.html#the--ty--module-representing-types":{"breadcrumbs":4,"body":17,"title":4},"incremental-compilation.html#improvements-to-the-basic-algorithm":{"body":72,"title":3,"breadcrumbs":7},"rustdoc.html#other-tricks-up-its-sleeve":{"title":3,"breadcrumbs":5,"body":91},"traits/lowering-to-logic.html#rust-traits-and-logic":{"title":3,"body":192,"breadcrumbs":7},"mir/construction.html#mir-construction":{"breadcrumbs":6,"body":0,"title":2},"compiletest.html#header-commands":{"body":41,"breadcrumbs":5,"title":2},"ty.html#import-conventions":{"breadcrumbs":2,"title":2,"body":34},"incremental-compilation.html#incremental-compilation":{"body":23,"title":2,"breadcrumbs":6},"traits/chalk-overview.html#testing":{"body":16,"title":1,"breadcrumbs":5},"name-resolution.html#scopes-and-ribs":{"body":208,"title":2,"breadcrumbs":2},"conventions.html#tabs-vs-spaces":{"breadcrumbs":3,"body":4,"title":3},"macro-expansion.html#procedural-macros":{"breadcrumbs":2,"title":2,"body":1},"conventions.html#formatting-and-the-tidy-script":{"title":3,"breadcrumbs":3,"body":53},"rustc-driver.html#a-note-on-lifetimes":{"body":114,"title":2,"breadcrumbs":2},"mir/regionck.html#region-variables-and-constraints":{"body":8,"title":3,"breadcrumbs":9},"conventions.html#prefer-exhaustive-matches":{"title":3,"body":39,"breadcrumbs":3},"compiler-debugging.html#getting-a-backtrace-for-errors":{"title":3,"body":171,"breadcrumbs":3},"traits/associated-types.html#projection-equality":{"title":2,"body":79,"breadcrumbs":8},"traits/lowering-rules.html#trait-header":{"breadcrumbs":6,"title":2,"body":236},"traits/hrtb.html#higher-ranked-trait-bounds":{"title":4,"breadcrumbs":8,"body":25},"traits/associated-types.html#associated-type-projection-and-normalization":{"title":4,"body":144,"breadcrumbs":10},"traits/resolution.html#candidate-assembly":{"body":433,"breadcrumbs":2,"title":2},"compiler-debugging.html#debugging-llvm":{"body":236,"breadcrumbs":2,"title":2},"conventions.html#coding-for-correctness":{"breadcrumbs":2,"body":6,"title":2},"the-parser.html#the-parser":{"title":1,"breadcrumbs":1,"body":142},"tests/adding.html#tests-that-do-not-result-in-compile-errors":{"title":4,"breadcrumbs":7,"body":39},"incremental-compilation.html#the-query-dag":{"title":2,"body":108,"breadcrumbs":6},"rustdoc.html#hot-potato":{"body":211,"title":2,"breadcrumbs":4},"variance.html#variance-and-associated-types":{"breadcrumbs":5,"title":3,"body":123},"compiler-debugging.html#expensive-operations-in-logs":{"body":121,"title":3,"breadcrumbs":3},"miri.html#interpretation":{"title":1,"breadcrumbs":3,"body":137},"mir/visitor.html#mir-visitor":{"title":2,"breadcrumbs":6,"body":112},"about-this-guide.html#about-this-guide":{"body":52,"breadcrumbs":1,"title":1},"trans.html#generating-llvm-ir":{"title":3,"body":0,"breadcrumbs":3},"type-inference.html#enforcing-equality--subtyping":{"title":3,"body":109,"breadcrumbs":3},"appendix/stupid-stats.html#the-driver-customisation-apis":{"body":34,"breadcrumbs":3,"title":3},"query.html#cycles-between-queries":{"title":3,"breadcrumbs":3,"body":164},"tests/adding.html#other-header-commands":{"breadcrumbs":5,"title":2,"body":126},"tests/intro.html#testing-with-docker-images":{"breadcrumbs":3,"body":39,"title":3},"traits/hrtb.html#basic-matching-and-skolemization-leaks":{"body":237,"breadcrumbs":8,"title":4},"traits/lowering-rules.html#lowering-impls":{"breadcrumbs":6,"body":29,"title":2},"macro-expansion.html#the-macro-parser":{"body":386,"breadcrumbs":2,"title":2},"traits/goals-and-clauses.html#goals-and-clauses":{"title":2,"body":31,"breadcrumbs":8},"mir/passes.html#seeing-how-the-mir-changes-as-the-compiler-executes":{"breadcrumbs":9,"body":189,"title":5},"type-inference.html#a-note-on-terminology":{"body":32,"title":2,"breadcrumbs":2},"param_env.html#parameter-environment":{"body":112,"breadcrumbs":2,"title":2},"variance.html#constraints":{"breadcrumbs":3,"body":57,"title":1},"mir/borrowck.html#mir-borrow-check":{"title":3,"body":100,"breadcrumbs":7},"compiletest.html#adding-a-new-header-command":{"body":426,"title":4,"breadcrumbs":7},"incremental-compilation.html#the-basic-algorithm":{"breadcrumbs":6,"body":138,"title":2},"method-lookup.html#steps":{"body":32,"title":1,"breadcrumbs":3},"traits/resolution.html#trait-resolution-old-style":{"breadcrumbs":4,"body":30,"title":4},"macro-expansion.html#macro-expansion":{"breadcrumbs":2,"body":60,"title":2},"traits/canonicalization.html#processing-the-canonicalized-query-result":{"body":137,"title":4,"breadcrumbs":10},"traits/canonicalization.html#canonicalization":{"body":148,"title":1,"breadcrumbs":7},"appendix/stupid-stats.html#an-example---stupid-stats":{"body":624,"title":3,"breadcrumbs":3},"type-inference.html#extracting-region-constraints":{"title":3,"breadcrumbs":3,"body":99},"name-resolution.html#todo":{"title":1,"body":49,"breadcrumbs":1},"traits/lowering-to-logic.html#type-checking-normal-functions":{"title":4,"breadcrumbs":8,"body":139},"incrcomp-debugging.html#debugging-and-testing-dependencies":{"breadcrumbs":7,"title":3,"body":0},"variance.html#variance-and-object-types":{"title":3,"breadcrumbs":5,"body":159},"type-inference.html#lexical-region-resolution":{"body":35,"breadcrumbs":3,"title":3},"macro-expansion.html#example":{"body":148,"breadcrumbs":1,"title":1},"tests/running.html#running-tests":{"body":74,"title":2,"breadcrumbs":5},"mir/passes.html#stealing":{"title":1,"body":142,"breadcrumbs":5},"appendix/background.html#what-is-a-free-region-or-a-free-variable-what-about-bound-region":{"title":6,"body":97,"breadcrumbs":6},"mir/regionck.html#closures":{"breadcrumbs":7,"title":1,"body":1},"conventions.html#copyright-notice":{"title":2,"breadcrumbs":2,"body":65},"appendix/stupid-stats.html#what-next":{"body":78,"breadcrumbs":1,"title":1},"rustc-driver.html#the-rustc-driver":{"body":198,"breadcrumbs":2,"title":2},"how-to-build-and-run.html#how-to-build-the-compiler-and-run-what-you-built":{"body":28,"breadcrumbs":4,"title":4},"high-level-overview.html#the-main-stages-of-compilation":{"title":3,"body":341,"breadcrumbs":3},"diag.html#lints":{"title":1,"breadcrumbs":1,"body":6},"traits/canonical-queries.html#examples":{"title":1,"breadcrumbs":5,"body":339},"ty.html#the-tcx-and-how-it-uses-lifetimes":{"title":3,"breadcrumbs":3,"body":218},"macro-expansion.html#custom-derive":{"breadcrumbs":2,"body":1,"title":2},"mir/regionck.html#extending-the-universal-regions-check":{"body":66,"title":4,"breadcrumbs":10},"diag.html#suggestions":{"body":171,"breadcrumbs":1,"title":1},"tests/adding.html#ignoring-tests":{"breadcrumbs":5,"title":2,"body":88},"traits/lowering-rules.html#associated-type-declarations":{"breadcrumbs":7,"body":159,"title":3},"how-to-build-and-run.html#creating-a-rustup-toolchain":{"body":91,"breadcrumbs":3,"title":3},"diag.html#edition-gated-lints":{"body":44,"breadcrumbs":3,"title":3},"appendix/code-index.html#appendix-d-code-index":{"title":4,"body":180,"breadcrumbs":4},"tests/adding.html#naming-your-test":{"breadcrumbs":5,"title":2,"body":102},"traits/chalk-overview.html#intermediate-representation-ir":{"title":3,"body":54,"breadcrumbs":7},"diag.html#lint-groups":{"title":2,"breadcrumbs":2,"body":31},"traits/caching.html#where-clauses-and-the-local-vs-global-cache":{"breadcrumbs":9,"title":5,"body":88},"traits/chalk-overview.html#lowering":{"title":1,"body":110,"breadcrumbs":5},"how-to-build-and-run.html#other-xpy-commands":{"breadcrumbs":2,"body":68,"title":2},"appendix/stupid-stats.html#overview-of-the-compilation-process":{"breadcrumbs":3,"title":3,"body":281},"mir/regionck.html#skolemization-and-universes":{"body":57,"title":2,"breadcrumbs":8},"mir/passes.html#implementing-and-registering-a-pass":{"title":3,"body":111,"breadcrumbs":7},"traits/chalk-overview.html#an-overview-of-chalk":{"breadcrumbs":6,"body":72,"title":2},"traits/resolution.html#overview":{"body":79,"breadcrumbs":1,"title":1},"mir/regionck.html#subtyping-and-skolemization":{"title":2,"body":122,"breadcrumbs":8},"tests/adding.html#what-kind-of-test-should-i-add":{"breadcrumbs":6,"body":78,"title":3},"tests/running.html#running-a-subset-of-the-test-suites":{"breadcrumbs":7,"body":92,"title":4},"walkthrough.html#walkthrough-a-typical-contribution":{"body":0,"breadcrumbs":3,"title":3},"traits/goals-and-clauses.html#coinductive-goals":{"breadcrumbs":8,"title":2,"body":176},"hir.html#the-hir":{"body":68,"title":1,"breadcrumbs":1},"rustdoc.html#from-clean-to-crate":{"body":199,"title":2,"breadcrumbs":4},"appendix/background.html#what-is-a-control-flow-graph":{"title":3,"body":128,"breadcrumbs":3},"tests/intro.html#the-compiler-testing-framework":{"breadcrumbs":3,"body":38,"title":3},"tests/adding.html#comment-explaining-what-the-test-is-about":{"body":70,"breadcrumbs":6,"title":3},"traits/lowering-to-logic.html#lowering-to-logic":{"body":42,"title":2,"breadcrumbs":6},"mir/index.html#promoted-constants":{"body":1,"breadcrumbs":2,"title":2},"tests/intro.html#further-reading":{"title":2,"body":8,"breadcrumbs":2},"traits/caching.html#caching-and-subtle-considerations-therewith":{"body":36,"title":4,"breadcrumbs":8},"incrcomp-debugging.html#tracking-down-incorrect-edges":{"body":95,"title":4,"breadcrumbs":8},"traits/lowering-rules.html#transforming-the-lowered-where-clauses":{"body":44,"breadcrumbs":7,"title":3},"mir/index.html#introduction-to-mir":{"title":2,"breadcrumbs":2,"body":22},"hir.html#the-hir-map":{"breadcrumbs":2,"title":2,"body":103},"compiletest.html#implementing-the-behavior-change":{"breadcrumbs":6,"title":3,"body":163},"appendix/stupid-stats.html#compilercalls":{"title":1,"breadcrumbs":1,"body":119},"tests/adding.html#guide-to-the-ui-tests":{"title":3,"breadcrumbs":6,"body":59},"mir/regionck.html#final-example":{"breadcrumbs":8,"body":180,"title":2},"type-inference.html#subtyping-obligations":{"breadcrumbs":2,"title":2,"body":94},"traits/chalk-overview.html#solver":{"body":3,"breadcrumbs":5,"title":1},"mir/regionck.html#universal-regions":{"title":2,"body":4,"breadcrumbs":8},"traits/lowering-module.html#the--program_clauses_for--query":{"body":37,"breadcrumbs":8,"title":2},"hir.html#hir-bodies":{"breadcrumbs":2,"body":40,"title":2},"traits/canonicalization.html#canonicalizing-the-query":{"breadcrumbs":8,"body":89,"title":2},"query.html#how-the-compiler-executes-a-query":{"title":3,"body":304,"breadcrumbs":3},"tests/intro.html#testing-infrastructure":{"title":2,"body":64,"breadcrumbs":2},"name-resolution.html#name-resolution":{"breadcrumbs":2,"title":2,"body":61},"traits/caching.html#an-example":{"title":1,"body":109,"breadcrumbs":5},"variance.html#variance-of-type-and-lifetime-parameters":{"breadcrumbs":6,"title":4,"body":141},"mir/index.html#representing-constants":{"title":2,"breadcrumbs":2,"body":1},"type-inference.html#trying-equality":{"title":2,"breadcrumbs":2,"body":46},"name-resolution.html#overall-strategy":{"title":2,"body":62,"breadcrumbs":2},"tests/adding.html#adding-new-tests":{"breadcrumbs":6,"body":82,"title":3},"mir/index.html#mir-data-types":{"breadcrumbs":3,"body":133,"title":3},"mir/index.html#key-mir-vocabulary":{"body":445,"breadcrumbs":3,"title":3},"traits/canonical-queries.html#the-traditional-interactive-prolog-query":{"body":165,"breadcrumbs":8,"title":4},"diag.html#error-messages":{"breadcrumbs":2,"body":133,"title":2},"conventions.html#how-to-structure-your-pr":{"breadcrumbs":2,"body":145,"title":2},"traits/canonicalization.html#executing-the-query":{"body":157,"breadcrumbs":8,"title":2},"mir/regionck.html#skolemization-and-outlives-constraints":{"body":159,"title":3,"breadcrumbs":9},"incrcomp-debugging.html#dumping-the-graph":{"title":2,"breadcrumbs":6,"body":147},"type-inference.html#creating-an-inference-context":{"breadcrumbs":3,"body":77,"title":3},"traits/bibliography.html#bibliography":{"title":1,"body":72,"breadcrumbs":5},"traits/specialization.html#specialization":{"breadcrumbs":5,"title":1,"body":178},"traits/lowering-rules.html#associated-type-values":{"title":3,"body":44,"breadcrumbs":7},"appendix/background.html#appendix-b-background-topics":{"breadcrumbs":4,"body":16,"title":4},"traits/lowering-module.html#the-lowering-module-in-rustc":{"body":10,"title":3,"breadcrumbs":9},"traits/lowering-rules.html#rule-names-and-cross-references":{"body":20,"breadcrumbs":8,"title":4},"method-lookup.html#candidate-assembly":{"title":2,"breadcrumbs":4,"body":198},"tests/intro.html#other-tests":{"title":1,"body":166,"breadcrumbs":1},"incremental-compilation.html#the-try-mark-green-algorithm":{"breadcrumbs":8,"title":4,"body":158},"variance.html#trait-variance-and-vtable-resolution":{"body":179,"breadcrumbs":6,"title":4},"ty.html#allocating-and-working-with-types":{"body":218,"breadcrumbs":3,"title":3},"appendix/stupid-stats.html#compilercontroller":{"breadcrumbs":1,"body":122,"title":1},"method-lookup.html#candidate-search":{"body":62,"breadcrumbs":4,"title":2},"traits/lowering-rules.html#lowering-impl-items":{"breadcrumbs":7,"title":3,"body":0},"miri.html#allocations":{"title":1,"body":65,"breadcrumbs":3},"traits/chalk-overview.html#blog-posts":{"title":2,"breadcrumbs":6,"body":25},"appendix/background.html#what-is-a-dataflow-analysis":{"body":10,"breadcrumbs":2,"title":2},"type-inference.html#inference-variables":{"breadcrumbs":2,"title":2,"body":137},"traits/goals-and-clauses.html#domain-goals":{"title":2,"body":283,"breadcrumbs":8},"how-to-build-and-run.html#create-a-configtoml":{"body":100,"title":2,"breadcrumbs":2},"traits/lowering-rules.html#lowering-trait-items":{"breadcrumbs":7,"body":0,"title":3},"incremental-compilation.html#footnotes":{"body":8,"title":1,"breadcrumbs":5},"compiler-debugging.html#debugging-the-compiler":{"body":24,"title":2,"breadcrumbs":2},"mir/optimizations.html#mir-optimizations":{"breadcrumbs":6,"title":2,"body":0},"method-lookup.html#the-probe-phase":{"body":0,"title":2,"breadcrumbs":4},"traits/chalk-overview.html#parsing":{"title":1,"body":70,"breadcrumbs":5},"compiletest.html#adding-a-new-test-file":{"breadcrumbs":7,"body":33,"title":4},"mir/regionck.html#another-example":{"breadcrumbs":8,"body":146,"title":2},"high-level-overview.html#crate-structure":{"body":217,"breadcrumbs":2,"title":2},"mir/passes.html#mir-passes":{"title":2,"body":97,"breadcrumbs":6},"traits/goals-and-clauses.html#incomplete-chapter":{"body":10,"breadcrumbs":8,"title":2},"rustdoc.html#the-walking-tour-of-rustdoc":{"title":3,"body":104,"breadcrumbs":5}},"length":264}}};